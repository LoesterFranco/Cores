Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 1
bootrom.asm

                                             ; N4V68kSys bootrom - (C) 2017 Robert Finch, Waterloo
                                             ;
                                             ; This file is part of N4V68kSys
                                             ;
                                             ; how to build:
                                             ; 1. assemble using "asm68 bootrom.asm /G00 /olyebvm"
                                             ; 2. copy bootrom.vh to the correct directory if not already there
                                             ;
                                             ;------------------------------------------------------------------------------
                                             ;
                                             ; system memory map
                                             ;
                                             ;
                                             ; 00000000 +----------------+
                                             ;          | startup sp,pc  | 8 B
                                             ; 00000008 +----------------+
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ;          :  dram memory   : 512 MB
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ; 20000000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FF800000 +----------------+
                                             ;          |                |
                                             ;          : display buffer : 1.0 MB
                                             ;          |                |
                                             ; FF900000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFD00000 +----------------+
                                             ;          |                |
                                             ;          :    I/O area    : 1.0 M
                                             ;          |                |
                                             ; FFE00000 +----------------+
                                             ;          |   VDG regs     |
                                             ; FFE01000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFFC0000 +----------------+
                                             ;          |                |
                                             ;          :    boot rom    :
                                             ;          |                |
                                             ; FFFFFFFF +----------------+
                                             ;
                                             ;
                                             RGBMASK		EQU		%0111111111111111
                                             RED			EQU		%0111110000000000
                                             DARK_BLUE	EQU		%0000000000001111
                                             BLACK		EQU		%0000000000000000
                                             WHITE		EQU		%0111111111111111
                                             
                                             CTRLC	EQU		$03
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 2
bootrom.asm
                                             CTRLH	EQU		$08
                                             LF		EQU		$0A
                                             CR		EQU		$0D
                                             
                                             SC_F12  EQU    $07
                                             SC_C    EQU    $21
                                             SC_T    EQU    $2C
                                             SC_Z    EQU    $1A
                                             SC_KEYUP	EQU		$F0
                                             SC_EXTEND   EQU		$E0
                                             SC_CTRL		EQU		$14
                                             SC_RSHIFT	EQU		$59
                                             SC_NUMLOCK	EQU		$77
                                             SC_SCROLLLOCK	EQU	$7E
                                             SC_CAPSLOCK		EQU	$58
                                             SC_ALT		EQU		$11
                                             SC_LSHIFT	EQU		$12
                                             SC_DEL		EQU		$71		; extend
                                             SC_LCTRL	EQU		$58
                                             SC_TAB      EQU		$0D
                                             
                                             TEXTCOLS	EQU	50
                                             TEXTROWS	EQU	37
                                             
                                             VDGBUF		EQU	$FF800000
                                             VDGREG		EQU	$FFE00000
                                             VDG_CURX	EQU	$0440
                                             VDG_CURY	EQU	$0442
                                             VDG_CURSZ	EQU	$0444
                                             VDG_CURFLSH	EQU	$0446
                                             VDG_CUR0X	EQU	$0204
                                             VDG_CUR0Y	EQU	$0206
                                             VDG_CURCLR0	EQU	$0448
                                             VDG_CURCLR1	EQU	$044A
                                             VDG_CURCLR2	EQU	$044C
                                             VDG_CURCLR3	EQU	$044E
                                             VDG_CURIMG	EQU	$0460
                                             I2C			EQU	$FFDC0E00
                                             I2C2		EQU	$FFDC0E10
                                             VirtScreen	EQU	$1FFF0000
                                             KEYBD		EQU	$FFDC0000
                                             leds		EQU	$FFDC0600
                                             rand		EQU	$FFDC0C00
                                             
                                             fgcolor		EQU	$10002
                                             bkcolor		EQU	$10004
                                             fntsz		EQU	$10006
                                             memend		EQU	$10008
                                             CursorRow	EQU	$10418
                                             CursorCol	EQU $10419
                                             TextRows	EQU	$1041A
                                             TextCols	EQU	$1041B
                                             TextCurpos	EQU	$1041C
                                             TextScr		EQU	$10420
                                             KeybdEcho		EQU	$10424
                                             KeybdWaitFlag	EQU	$10425
                                             _KeyState1		EQU	$10426
                                             _KeyState2		EQU	$10427
                                             KeybdLEDs		EQU	$10428
                                             gfx_control_reg_mem		EQU	$1042C
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 3
bootrom.asm
                                             milliseconds	EQU	$10430
                                             systick			EQU	$10434
                                             S19StartAddress	EQU	$10438
                                             
                                             ball_dx			EQU	$10500
                                             ball_dy			EQU	$10600
                                             
                                             GFX_CONTROL			EQU		$00
                                             GFX_STATUS			EQU		$04
                                             GFX_TARGET_BASE		EQU		$10
                                             GFX_TARGET_SIZE_X	EQU		$14
                                             GFX_TARGET_SIZE_Y	EQU		$18
                                             GFX_DEST_PIXEL_X	EQU		$38
                                             GFX_DEST_PIXEL_Y	EQU		$3C
                                             GFX_DEST_PIXEL_Z	EQU		$40
                                             GFX_COLOR0			EQU		$84
                                             
                                             GFX_ACTIVE_POINT0	EQU		0
                                             GFX_ACTIVE_POINT1	EQU		$10000
                                             GFX_LINE			EQU		$200
                                             
                                             reg_d0			EQU	$10500
                                             reg_d1			EQU	$10504
                                             reg_d2			EQU	$10508
                                             reg_d3			EQU	$1050C
                                             reg_d4			EQU $10510
                                             reg_d5			EQU $10514
                                             reg_d6			EQU	$10518
                                             reg_d7			EQU	$1051C
                                             reg_a0			EQU $10520
                                             reg_a1			EQU	$10524
                                             reg_a2			EQU	$10528
                                             reg_a3			EQU $1052C
                                             reg_a4			EQU $10530
                                             reg_a5			EQU $10534
                                             reg_a6			EQU $10538
                                             reg_ssp			EQU	$1053C
                                             reg_usp			EQU	$10540
                                             reg_pc			EQU $10544
                                             reg_sr			EQU	$10548
                                             
                                             RTCBuf			EQU	$10600
                                             RTFBufEnd		EQU	$10660
                                             
                                             	org		$FFFC0000
                                             
                                             ;------------------------------------------------------------------------------
                                             
    168 FFFC0000 FF401000                    	dc.l	$FF401000	; initial SSP
    169 FFFC0004 FFFC0010                    	dc.l	Start		; initial PC
                                             	
                                             ;------------------------------------------------------------------------------
    172 FFFC0008                             fpga_version:
    173 FFFC0008 41 41 30 30 30 30 30 30     	dc.b	"AA000000"	; FPGA core version - 8 ASCII characters
                                             
                                             
                                             ;------------------------------------------------------------------------------
    177 FFFC0010                             	Start:
                                             ;------------------------------------------------------------------------------
    179 FFFC0010 33FC A1A1 FFDC 0600         		move.w	#$A1A1,leds		; diagnostics
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 4
bootrom.asm
                                             
                                             		; SIM croaked because the upper half of D1 was undefined. This caused
                                             		; problems with a dbra instruction. So the contents of all the registers
                                             		; are defined at startup. This is only needed for SIM.
    184 FFFC0018 7000                        		moveq	#0,D0
    185 FFFC001A 7200                        		moveq	#0,D1				; for SIM
    186 FFFC001C 7400                        		moveq	#0,D2
    187 FFFC001E 7600                        		moveq	#0,D3
    188 FFFC0020 7800                        		moveq	#0,D4
    189 FFFC0022 7A00                        		moveq	#0,D5
    190 FFFC0024 7C00                        		moveq	#0,D6
    191 FFFC0026 7E00                        		moveq	#0,D7
    192 FFFC0028 4288                        		clr.l	A0
    193 FFFC002A 4289                        		clr.l	A1
    194 FFFC002C 428A                        		clr.l	A2
    195 FFFC002E 428B                        		clr.l	A3
    196 FFFC0030 428C                        		clr.l	A4
    197 FFFC0032 428D                        		clr.l	A5
    198 FFFC0034 428E                        		clr.l	A6
    199 FFFC0036 4E67                        		move.l	A7,usp
                                             
                                             		; setup vector table
                                             		;
                                             ;		lea		BusError,a0
                                             ;		move.l	a0,0x008		; set bus error vector
    205 FFFC0038 41F9 FFFC 0138              		lea		IllegalInstruction,a0
    206 FFFC003E 21C8 0010                   		move.l	a0,0x010
    207 FFFC0042 41F9 FFFC 011E              		lea		Pulse1000,a0
    208 FFFC0048 21C8 0078                   		move.l	a0,0x078		; set autovector 6
                                             ;		lea		KeybdNMI,a0
                                             ;		move.l	a0,0x07C		; set autovector 7
    211 FFFC004C 41F9 FFFC 015A              		lea		TRAP15,a0
    212 FFFC0052 21C8 00BC                   		move.l	a0,188			; set trap 15 vector
                                             
                                             ;		bsr		mmu_init
    215 FFFC0056 6100 1808                   		bsr		i2c_setup
                                             ;		bsr		rtc_read
    217 FFFC005A 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds		; diagnostics
                                             
    219 FFFC0062 13FC 0032 0001 041B         		move.b	#TEXTCOLS,TextCols
    220 FFFC006A 13FC 0025 0001 041A         		move.b	#TEXTROWS,TextRows
    221 FFFC0072 4239 0001 0419              		clr.b	CursorCol
    222 FFFC0078 4239 0001 0418              		clr.b	CursorRow
    223 FFFC007E 4279 0001 041C              		clr.w	TextCurpos
    224 FFFC0084 23FC 0002 0000 0001 0420    		move.l	#$00020000,TextScr		; set virtual screen location
                                             
                                             
    227 FFFC008E 4DF9 FFDC 0000              		lea	$FFDC0000,A6	; I/O base
                                             
                                             		; Initialize random number generator
                                             
    231 FFFC0094 426E 0C06                   		clr.w	$0C06(a6)				; select stream #0
    232 FFFC0098 2D7C 8888 8888 0C08         		move.l	#$88888888,$0C08(a6)	; set initial m_z
    233 FFFC00A0 2D7C 0123 4567 0C0C         		move.l	#$01234567,$0C0C(a6)	; set initial m_w
                                             
    235 FFFC00A8 6100 03D4                   		bsr		Set400x300
                                             ;		bsr		Set800x600
    237 FFFC00AC 6100 03EC                   		bsr		BootSetZBuffer
    238 FFFC00B0 6100 05A2                   		bsr		InitCursorColorPalette
                                             ;		bsr		SetCursorColor
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 5
bootrom.asm
                                             ;		bsr		SetCursorImage
    241 FFFC00B4 6100 0604                   		bsr		SetCursorImage64
    242 FFFC00B8 6100 04FE                   		bsr		EnableCursor
                                             
    244 FFFC00BC 6100 0406                   		bsr		BootClearScreen		
    245 FFFC00C0 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds			; diagnostics
                                             		
                                             		; turn on audio test mode
    248 FFFC00C8 4DF9 FFDC 0000              		lea		$FFDC0000,A6		; set I/O base
    249 FFFC00CE 3D7C FFFF 0700              		move.w	#$FFFF,$0700(a6)	; turn on audio clocks
    250 FFFC00D4 2A7C FFE0 0000              		movea.l	#VDGREG,a5
    251 FFFC00DA 3B7C 4000 0584              		move.w	#%0100000000000000,$584(a5)
                                             
                                             ;		bsr		DrawLines
                                             ;		bsr		TestBlitter
                                             
    256 FFFC00E0 6100 03F8                   		bsr		BootCopyFont
    257 FFFC00E4 33FC A3A3 FFDC 0600         		move.w	#$A3A3,leds			; diagnostics
                                             
    259 FFFC00EC 33FC 7FFF 0001 0002         		move.w	#WHITE,fgcolor		; set text colors
    260 FFFC00F4 33FC 000F 0001 0004         		move.w	#DARK_BLUE,bkcolor
                                             
                                             		; Write startup message to screen
                                             
    264 FFFC00FC 41F9 FFFC 1DD4              		lea		msg_start,a0
    265 FFFC0102 7200                        		moveq	#0,d1					; xpos
    266 FFFC0104 7400                        		moveq	#0,d2					; ypos
    267 FFFC0106 6100 0824                   		bsr		DispStringAt
    268 FFFC010A 33FC A4A4 FFDC 0600         		move.w	#$A4A4,leds			; diagnostics
                                             
    270 FFFC0112 47F9 FFFC 011C              		lea		j1,a3
    271 FFFC0118 6000 0F4C                   		bra		DisplayHelp
    272 FFFC011C                             j1:
    273 FFFC011C 60FE                        		bra		j1
                                             
                                             ;------------------------------------------------------------------------------
                                             ; 1000 Hz interrupt
                                             ;------------------------------------------------------------------------------
                                             ;
    279 FFFC011E                             Pulse1000:
    280 FFFC011E 52B9 0001 0430              		add.l	#1,milliseconds
    281 FFFC0124 5279 0001 0434              		add.w	#1,systick
    282 FFFC012A 0279 001F 0001 0434         		and.w	#$1F,systick
    283 FFFC0132 6702                        		beq.s	Pulse31
    284 FFFC0134 4E73                        		rte
    285 FFFC0136                             Pulse31:
    286 FFFC0136 4E73                        		rte
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    291 FFFC0138                             IllegalInstruction:
    292 FFFC0138 43F9 FFFC 0146              		lea		MSG_ILLEGAL_INSN,a1
    293 FFFC013E 4EB9 FFFC 03D8              		jsr		DisplayString
    294 FFFC0144 4E73                        		rte
                                             
    296 FFFC0146                             MSG_ILLEGAL_INSN:
    297 FFFC0146 49 6C 6C 65 67 61 6C 20     		dc.b	"Illegal instruction",0
    298 FFFC014E 69 6E 73 74 72 75 63 74     
    299 FFFC0156 69 6F 6E 00                 
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 6
bootrom.asm
                                             
                                             		align	2
                                             
                                             ;------------------------------------------------------------------------------
                                             ; TRAP #15 handler
                                             ;------------------------------------------------------------------------------
                                             ;
    307 FFFC015A                             TRAP15:
    308 FFFC015A 48E7 8080                   		movem.l	d0/a0,-(a7)
    309 FFFC015E 41F9 FFFC 0174              		lea		T15DispatchTable,a0
    310 FFFC0164 E580                        		asl.l	#2,d0
    311 FFFC0166 2070 0000                   		move.l	(a0,d0.w),a0
    312 FFFC016A 4E90                        		jsr		(a0)
    313 FFFC016C 4CDF 0101                   		movem.l	(a7)+,d0/a0
    314 FFFC0170 4E73                        		rte
                                             
    316 FFFC0172 FF FF                       		align	4
    317 FFFC0174                             T15DispatchTable:
    318 FFFC0174 FFFC0214                    dc.l	StubRout
    319 FFFC0178 FFFC0214                    dc.l	StubRout
    320 FFFC017C FFFC0214                    dc.l	StubRout
    321 FFFC0180 FFFC0214                    dc.l	StubRout
    322 FFFC0184 FFFC0214                    dc.l	StubRout
    323 FFFC0188 FFFC0A2A                    dc.l	GetKey
    324 FFFC018C FFFC0268                    dc.l	DisplayChar
    325 FFFC0190 FFFC0A18                    dc.l	CheckForKey
    326 FFFC0194 FFFC0214                    dc.l	StubRout
    327 FFFC0198 FFFC0214                    dc.l	StubRout
    328 FFFC019C FFFC0214                    dc.l	StubRout
    329 FFFC01A0 FFFC0422                    dc.l	Cursor1
    330 FFFC01A4 FFFC0216                    dc.l	SetKeyboardEcho
    331 FFFC01A8 FFFC03F2                    dc.l	DisplayStringCRLF
    332 FFFC01AC FFFC03D8                    dc.l	DisplayString
    333 FFFC01B0 FFFC0214                    dc.l	StubRout
    334 FFFC01B4 FFFC0214                    dc.l	StubRout
    335 FFFC01B8 FFFC0214                    dc.l	StubRout
    336 FFFC01BC FFFC0214                    dc.l	StubRout
    337 FFFC01C0 FFFC0214                    dc.l	StubRout
    338 FFFC01C4 FFFC0214                    dc.l	StubRout
    339 FFFC01C8 FFFC0214                    dc.l	StubRout
    340 FFFC01CC FFFC0214                    dc.l	StubRout
    341 FFFC01D0 FFFC0214                    dc.l	StubRout
    342 FFFC01D4 FFFC0214                    dc.l	StubRout
    343 FFFC01D8 FFFC0214                    dc.l	StubRout
    344 FFFC01DC FFFC0214                    dc.l	StubRout
    345 FFFC01E0 FFFC0214                    dc.l	StubRout
    346 FFFC01E4 FFFC0214                    dc.l	StubRout
    347 FFFC01E8 FFFC0214                    dc.l	StubRout
    348 FFFC01EC FFFC0214                    dc.l	StubRout
    349 FFFC01F0 FFFC0214                    dc.l	StubRout
    350 FFFC01F4 FFFC0214                    dc.l	StubRout
    351 FFFC01F8 FFFC0214                    dc.l	StubRout
    352 FFFC01FC FFFC0214                    dc.l	StubRout
    353 FFFC0200 FFFC0214                    dc.l	StubRout
    354 FFFC0204 FFFC0214                    dc.l	StubRout
    355 FFFC0208 FFFC0214                    dc.l	StubRout
    356 FFFC020C FFFC0214                    dc.l	StubRout
    357 FFFC0210 FFFC0214                    dc.l	StubRout
                                             
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 7
bootrom.asm
                                             ; Stub routine for unimplemented functionality.
                                             ;------------------------------------------------------------------------------
                                             ;
    363 FFFC0214                             StubRout:
    364 FFFC0214 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; d1.b 0=echo off, non-zero = echo on
                                             ;------------------------------------------------------------------------------
    369 FFFC0216                             SetKeyboardEcho:
    370 FFFC0216 13C1 0001 0424              	move.b	d1,KeybdEcho
    371 FFFC021C 4E75                        	rts
                                             
                                             
    374 FFFC021E                             CRLF:
    375 FFFC021E 2F01                        		move.l	d1,-(a7)
    376 FFFC0220 123C 000D                   		move.b	#'\r',d1
    377 FFFC0224 4EB9 FFFC 0268              		jsr		DisplayChar
    378 FFFC022A 123C 000A                   		move.b	#'\n',d1
    379 FFFC022E 4EB9 FFFC 0268              		jsr		DisplayChar
    380 FFFC0234 221F                        		move.l	(a7)+,d1
    381 FFFC0236 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Calculate screen memory location from CursorRow,CursorCol.
                                             ; Destroys d0,d2,a0
                                             ;------------------------------------------------------------------------------
                                             ;
    388 FFFC0238                             CalcScreenLoc:
    389 FFFC0238 1039 0001 0418              		move.b	CursorRow,d0		; compute screen location
    390 FFFC023E 0240 007F                   		andi.w	#0x7f,d0
    391 FFFC0242 1439 0001 041B              		move.b	TextCols,d2
    392 FFFC0248 4882                        		ext.w	d2
    393 FFFC024A C0C2                        		mulu.w	d2,d0
    394 FFFC024C 1439 0001 0419              		move.b	CursorCol,d2
    395 FFFC0252 0242 00FF                   		andi.w	#0xff,d2
    396 FFFC0256 D042                        		add.w	d2,d0
    397 FFFC0258 33C0 0001 041C              		move.w	d0,TextCurpos
    398 FFFC025E D0B9 0001 0420              		add.l	TextScr,d0
    399 FFFC0264 2040                        		move.l	d0,a0				; a0 = screen location
    400 FFFC0266 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a character on the screen
                                             ; d1.b = char to display
                                             ;------------------------------------------------------------------------------
                                             ;
    407 FFFC0268                             DisplayChar:
    408 FFFC0268 0C01 000D                   		cmpi.b	#'\r',d1			; carriage return ?
    409 FFFC026C 6608                        		bne.s	dccr
    410 FFFC026E 4239 0001 0419              		clr.b	CursorCol			; just set cursor column to zero on a CR
    411 FFFC0274 4E75                        		rts
    412 FFFC0276                             dccr:
    413 FFFC0276 0C01 0091                   		cmpi.b	#0x91,d1			; cursor right ?
    414 FFFC027A 6616                        		bne.s   dcx6
    415 FFFC027C 0C39 004F 0001 0419         		cmpi.b	#79,CursorCol
    416 FFFC0284 670A                        		beq.s	dcx7
    417 FFFC0286 5239 0001 0419              		addi.b	#1,CursorCol
    418 FFFC028C 6000 0362                   		bra		SyncCursor
    419 FFFC0290                             dcx7:
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 8
bootrom.asm
    420 FFFC0290 4E75                        		rts
    421 FFFC0292                             dcx6:
    422 FFFC0292 0C01 0090                   		cmpi.b	#0x90,d1			; cursor up ?
    423 FFFC0296 6614                        		bne.s	dcx8
    424 FFFC0298 0C39 0000 0001 0418         		cmpi.b	#0,CursorRow
    425 FFFC02A0 67EE                        		beq.s	dcx7
    426 FFFC02A2 5339 0001 0418              		subi.b	#1,CursorRow
    427 FFFC02A8 6000 0346                   		bra		SyncCursor
    428 FFFC02AC                             dcx8:
    429 FFFC02AC 0C01 0093                   		cmpi.b	#0x93,d1			; cursor left?
    430 FFFC02B0 6614                        		bne.s	dcx9
    431 FFFC02B2 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    432 FFFC02BA 67D4                        		beq.s	dcx7
    433 FFFC02BC 5339 0001 0419              		subi.b	#1,CursorCol
    434 FFFC02C2 6000 032C                   		bra		SyncCursor
    435 FFFC02C6                             dcx9:
    436 FFFC02C6 0C01 0092                   		cmpi.b	#0x92,d1			; cursor down ?
    437 FFFC02CA 6614                        		bne		dcx10
    438 FFFC02CC 0C39 003F 0001 0418         		cmpi.b	#63,CursorRow
    439 FFFC02D4 67BA                        		beq		dcx7
    440 FFFC02D6 5279 0001 0418              		addi.w	#1,CursorRow
    441 FFFC02DC 6000 0312                   		bra		SyncCursor
    442 FFFC02E0                             dcx10:
    443 FFFC02E0 0C01 0094                   		cmpi.b	#0x94,d1			; cursor home ?
    444 FFFC02E4 661E                        		bne.s	dcx11
    445 FFFC02E6 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    446 FFFC02EE 670A                        		beq.s	dcx12
    447 FFFC02F0 4239 0001 0419              		clr.b	CursorCol
    448 FFFC02F6 6000 02F8                   		bra		SyncCursor
    449 FFFC02FA                             dcx12:
    450 FFFC02FA 4239 0001 0418              		clr.b	CursorRow
    451 FFFC0300 6000 02EE                   		bra		SyncCursor
    452 FFFC0304                             dcx11:
    453 FFFC0304 48E7 E080                   		movem.l	d0/d1/d2/a0,-(a7)
    454 FFFC0308 0C01 0099                   		cmpi.b	#0x99,d1			; delete ?
    455 FFFC030C 660C                        		bne.s	dcx13
    456 FFFC030E 6100 FF28                   		bsr		CalcScreenLoc
    457 FFFC0312 1039 0001 0419              		move.b	CursorCol,d0
    458 FFFC0318 6020                        		bra.s	dcx5
    459 FFFC031A                             dcx13:
    460 FFFC031A 0C01 0008                   		cmpi.b	#CTRLH,d1			; backspace ?
    461 FFFC031E 6632                        		bne.s   dcx3
    462 FFFC0320 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    463 FFFC0328 6752                        		beq.s   dcx4
    464 FFFC032A 5339 0001 0419              		subi.b	#1,CursorCol
    465 FFFC0330 6100 FF06                   		bsr		CalcScreenLoc		; a0 = screen location
    466 FFFC0334 1039 0001 0419              		move.b	CursorCol,d0
    467 FFFC033A                             dcx5:
    468 FFFC033A 10E8 0001                   		move.b	1(a0),(a0)+
    469 FFFC033E 5200                        		addi.b	#1,d0
    470 FFFC0340 B039 0001 041B              		cmp.b	TextCols,d0
    471 FFFC0346 65F2                        		blo.s	dcx5
    472 FFFC0348 103C 0020                   		move.b	#32,d0
    473 FFFC034C 1140 FFFF                   		move.b	d0,-1(a0)
    474 FFFC0350 602A                        		bra.s	dcx4
    475 FFFC0352                             dcx3:
    476 FFFC0352 0C01 000A                   		cmpi.b	#'\n',d1		; linefeed ?
    477 FFFC0356 671C                        		beq.s	dclf
                                             
    479 FFFC0358 6100 FEDE                   		bsr		CalcScreenLoc	; a0 = screen location
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 9
bootrom.asm
                                             		;bsr		AsciiToScreen	; convert ascii char to screen char
    481 FFFC035C 1081                        		move.b	d1,(a0)
    482 FFFC035E 1001                        		move.b	d1,d0
    483 FFFC0360 4880                        		ext.w	d0
    484 FFFC0362 6100 0200                   		bsr		DispChar
    485 FFFC0366 6100 001A                   		bsr		IncCursorPos
    486 FFFC036A 6100 0284                   		bsr		SyncCursor
    487 FFFC036E 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0
    488 FFFC0372 4E75                        		rts
    489 FFFC0374                             dclf:
    490 FFFC0374 6100 002C                   		bsr		IncCursorRow
    491 FFFC0378 6100 0276                   		bsr		SyncCursor
    492 FFFC037C                             dcx4:
    493 FFFC037C 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0		; get back a0
    494 FFFC0380 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Increment the cursor position, scroll the screen if needed.
                                             ;------------------------------------------------------------------------------
                                             ;
    500 FFFC0382                             IncCursorPos:
    501 FFFC0382 5279 0001 041C              		addi.w	#1,TextCurpos
    502 FFFC0388 5239 0001 0419              		addi.b	#1,CursorCol
    503 FFFC038E 1039 0001 041B              		move.b	TextCols,d0
    504 FFFC0394 B039 0001 0419              		cmp.b	CursorCol,d0
    505 FFFC039A 643A                        		bhs.s	icc1
    506 FFFC039C 4239 0001 0419              		clr.b	CursorCol
    507 FFFC03A2                             IncCursorRow:
    508 FFFC03A2 5239 0001 0418              		addi.b	#1,CursorRow
    509 FFFC03A8 1039 0001 041A              		move.b	TextRows,d0
    510 FFFC03AE B039 0001 0418              		cmp.b	CursorRow,d0
    511 FFFC03B4 6220                        		bhi.s	icc1
    512 FFFC03B6 1039 0001 041A              		move.b	TextRows,d0
    513 FFFC03BC 13C0 0001 0418              		move.b	d0,CursorRow		; in case CursorRow is way over
    514 FFFC03C2 5339 0001 0418              		subi.b	#1,CursorRow
    515 FFFC03C8 4880                        		ext.w	d0
    516 FFFC03CA E340                        		asl.w	#1,d0
    517 FFFC03CC 9179 0001 041C              		sub.w	d0,TextCurpos
    518 FFFC03D2 6100 0EF4                   		bsr		ScrollUp
    519 FFFC03D6                             icc1:
    520 FFFC03D6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen.
                                             ;------------------------------------------------------------------------------
                                             ;
    526 FFFC03D8                             DisplayString:
    527 FFFC03D8 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    528 FFFC03DC                             dspj1:
    529 FFFC03DC 4281                        		clr.l	d1				; clear upper bits of d1
    530 FFFC03DE 1219                        		move.b	(a1)+,d1		; move string char into d1
    531 FFFC03E0 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    532 FFFC03E4 6706                        		beq		dsret			
    533 FFFC03E6 6100 FE80                   		bsr		DisplayChar		; display character
    534 FFFC03EA 60F0                        		bra		dspj1			; go back for next character
    535 FFFC03EC                             dsret:
    536 FFFC03EC 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    537 FFFC03F0 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 10
bootrom.asm
                                             ; Display a string on the screen followed by carriage return / linefeed.
                                             ;------------------------------------------------------------------------------
                                             ;
    543 FFFC03F2                             DisplayStringCRLF:
    544 FFFC03F2 6100 FFE4                   		bsr		DisplayString
    545 FFFC03F6 6000 FE26                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ;------------------------------------------------------------------------------
                                             ;
    551 FFFC03FA                             DisplayString1:
    552 FFFC03FA 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    553 FFFC03FE 0241 00FF                   		andi.w	#255,d1			; max 255 chars
    554 FFFC0402 2001                        		move.l	d1,d0
    555 FFFC0404                             dspj11:
    556 FFFC0404 1219                        		move.b	(a1)+,d1		; move string char into d1
    557 FFFC0406 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    558 FFFC040A 6708                        		beq		dsret1			
    559 FFFC040C 6100 FE5A                   		bsr		DisplayChar		; display character
    560 FFFC0410 57C8 FFF2                   		dbeq	d0,dspj11		; go back for next character
    561 FFFC0414                             dsret1:
    562 FFFC0414 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    563 FFFC0418 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ; end string with CR,LF
                                             ;------------------------------------------------------------------------------
                                             ;
    570 FFFC041A                             DisplayString0:
    571 FFFC041A 6100 FFDE                   		bsr		DisplayString1
    572 FFFC041E 6000 FDFE                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Dispatch cursor functions
                                             ;------------------------------------------------------------------------------
                                             ;
    578 FFFC0422                             Cursor1:
    579 FFFC0422 0C41 00FF                   		cmpi.w	#0x00ff,d1
    580 FFFC0426 670E                        		beq		GetCursorPos
    581 FFFC0428 0C41 FF00                   		cmpi.w	#0xFF00,d1
    582 FFFC042C 6718                        		beq		SetCursorPos
    583 FFFC042E 4EB9 FFFC 1276              		jsr		ClearScreen
    584 FFFC0434 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get the cursor position.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    592 FFFC0436                             GetCursorPos:
    593 FFFC0436 1239 0001 0419              		move.b	CursorCol,d1
    594 FFFC043C E141                        		asl.w	#8,d1
    595 FFFC043E 1239 0001 0418              		move.b	CursorRow,d1
    596 FFFC0444 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Set the position of the cursor, update the linear screen pointer.
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 11
bootrom.asm
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    604 FFFC0446                             SetCursorPos:
    605 FFFC0446 48E7 6000                   		movem.l	d1/d2,-(a7)
    606 FFFC044A 13C1 0001 0418              		move.b	d1,CursorRow
    607 FFFC0450 E049                        		lsr.w	#8,d1
    608 FFFC0452 13C1 0001 0419              		move.b	d1,CursorCol
    609 FFFC0458 1239 0001 0418              		move.b	CursorRow,d1
    610 FFFC045E 4881                        		ext.w	d1
    611 FFFC0460 1439 0001 041B              		move.b	TextCols,d2
    612 FFFC0466 4882                        		ext.w	d2
    613 FFFC0468 C2C2                        		mulu.w	d2,d1
    614 FFFC046A 1439 0001 0419              		move.b	CursorCol,d2
    615 FFFC0470 D242                        		add.w	d2,d1
    616 FFFC0472 33C1 0001 041C              		move.w	d1,TextCurpos
    617 FFFC0478                             scp1:
    618 FFFC0478 4CDF 0006                   		movem.l	(a7)+,d1/d2
    619 FFFC047C 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    624 FFFC047E                             Set400x300:
    625 FFFC047E 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    626 FFFC0484 3D7C 0001 0650              		move.w	#1,$650(a6)
    627 FFFC048A 4E75                        		rts
                                             
    629 FFFC048C                             Set800x600:
    630 FFFC048C 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    631 FFFC0492 3D7C 0000 0650              		move.w	#0,$650(a6)
    632 FFFC0498 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; The z buffer is setup so that display has the lowest priority. This allows
                                             ; sprites to appear in front of graphics. At power on the buffer likely
                                             ; contains all zeros making graphics the highest priority.
                                             ;------------------------------------------------------------------------------
                                             
    640 FFFC049A                             BootSetZBuffer:
    641 FFFC049A 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    642 FFFC04A0 207C FF80 0000              		move.l	#VDGBUF,A0			; a0 = pointer to display buffer
    643 FFFC04A6 3D7C 0001 043E              		move.w	#$1,$43E(a6)		; switch to z buffer
    644 FFFC04AC 223C 0000 3A98              		move.l	#400*300/8,D1		; number of words to update
    645 FFFC04B2                             .0001:
    646 FFFC04B2 20FC FFFF FFFF              		move.l	#$FFFFFFFF,(a0)+	; set z layer to 3
    647 FFFC04B8 5381                        		sub.l	#1,d1
    648 FFFC04BA 66F6                        		bne.s	.0001
    649 FFFC04BC 3D7C 0000 043E              		move.w	#$0,$43E(a6)		; switch to regular buffer
    650 FFFC04C2 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; clear screen	
                                             ;
                                             ; Trashes:
                                             ;	a0,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    659 FFFC04C4                             BootClearScreen:
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 12
bootrom.asm
    660 FFFC04C4 207C FF80 0000              		move.l	#VDGBUF,A0
    661 FFFC04CA 700F                        		moveq	#DARK_BLUE,D0			; dark blue
    662 FFFC04CC 223C 0001 D4C0              		move.l	#400*300,D1				; number of pixels
    663 FFFC04D2                             .loop1:
    664 FFFC04D2 30C0                        		move.w	d0,(a0)+				; store it to the screen
    665 FFFC04D4 5381                        		sub.l	#1,d1					; can't use dbra here
    666 FFFC04D6 66FA                        		bne.s	.loop1
    667 FFFC04D8 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; copy font to VDG ram
                                             ;
                                             ; The font address is 1/2 of the memory address that the cpu sees because
                                             ; the AV controller only deals with word accesses.
                                             ;
                                             ; Trashes:
                                             ;	a0,a1,a6,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    679 FFFC04DA                             BootCopyFont:
    680 FFFC04DA 2C7C FFE0 0000              		movea.l	#VDGREG,a6
                                             		; Setup font table
    682 FFFC04E0 2D7C 0005 C000 0590         		move.l	#$5C000,$590(a6)	; set font table address 1/2 B8000
    683 FFFC04E8 203C 0005 C004              		move.l	#$5C004,d0			; set bitmap address (directly follows)
    684 FFFC04EE 4840                        		swap	d0
    685 FFFC04F0 0040 9CE0                   		or.w	#%1001110011100000,d0	; set font fixed, width, height
    686 FFFC04F4 4840                        		swap	d0
    687 FFFC04F6 23C0 FF8B 8000              		move.l	d0,$FF8B8000
    688 FFFC04FC 42B9 FF8B 8004              		clr.l	$FF8B8004			; clear glyph width table address (not used)
    689 FFFC0502 227C FF8B 8008              		movea.l	#$FF8B8008,a1		; font table address
                                             
    691 FFFC0508 41F9 FFFC 1E8C              		lea		font8,a0
    692 FFFC050E 223C 0000 1000              		move.l	#8*512,d1			; 512 chars * 8 bytes per char
                                             
    694 FFFC0514 3D7C 0000 0594              		move.w	#0,$594(a6)			; select font id (0)
                                             
    696 FFFC051A 7000                        		moveq	#0,d0				; zero out high order bits
    697 FFFC051C                             cpyfnt:
    698 FFFC051C 1018                        		move.b	(a0)+,d0			; get a byte
    699 FFFC051E 32C0                        		move.w	d0,(a1)+			; store in font table
    700 FFFC0520 51C9 FFFA                   		dbra	d1,cpyfnt
    701 FFFC0524 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Trashes:
                                             ;	a6
                                             ;------------------------------------------------------------------------------
                                             
    712 FFFC0526                             DispCharAt:
    713 FFFC0526 2C7C FFE0 0000              		move.l	#VDGREG,a6
    714 FFFC052C 4840                        		swap	d0						; save off d0 low
    715 FFFC052E                             .0001:									; wait for character que to empty
    716 FFFC052E 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    717 FFFC0532 B07C 001C                   		cmp.w	#28,d0					; allow up 28 entries to be in progress
    718 FFFC0536 64F6                        		bhs.s	.0001					; branch if too many chars queued
    719 FFFC0538 4840                        		swap	d0						; get back d0 low
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 13
bootrom.asm
    720 FFFC053A 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    721 FFFC053E 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)		; set fg color
    722 FFFC0546 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)		; set bk color
    723 FFFC054E 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    724 FFFC0552 3D42 0428                   		move.w	d2,$428(a6)			; set y pos
    725 FFFC0556 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    726 FFFC055C 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    727 FFFC0562 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;------------------------------------------------------------------------------
                                             
    734 FFFC0564                             DispChar:
    735 FFFC0564 48E7 4002                   		movem.l	d1/a6,-(a7)
    736 FFFC0568 2C7C FFE0 0000              		move.l	#VDGREG,a6
    737 FFFC056E 4840                        		swap	d0					; save off d0 low
    738 FFFC0570                             .0001:								; wait for character que to empty
    739 FFFC0570 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    740 FFFC0574 B07C 001C                   		cmp.w	#28,d0				; allow up 28 entries to be in progress
    741 FFFC0578 64F6                        		bhs.s	.0001				; branch if too many chars queued
    742 FFFC057A 4840                        		swap	d0					; get back d0 low
    743 FFFC057C 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    744 FFFC0580 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)	; set fg color
    745 FFFC0588 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)	; set bk color
    746 FFFC0590 1239 0001 0419              		move.b	CursorCol,d1
    747 FFFC0596 4881                        		ext.w	d1
    748 FFFC0598 E741                        		asl.w	#3,d1
    749 FFFC059A 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    750 FFFC059E 1239 0001 0418              		move.b	CursorRow,d1
    751 FFFC05A4 4881                        		ext.w	d1
    752 FFFC05A6 E741                        		asl.w	#3,d1
    753 FFFC05A8 3D41 0428                   		move.w	d1,$428(a6)			; set y pos
                                             ;		move.w	#$0707,$42A(a6)		; set font x,y extent (defunct - in font table)
    755 FFFC05AC 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    756 FFFC05B2 4CDF 4002                   		movem.l	(a7)+,d1/a6
    757 FFFC05B6 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Cursor Routines
                                             ;
                                             ; BIOS uses cursor #0. The BIOS cursor is 10 x 10
                                             ;==============================================================================
                                             
    765 FFFC05B8                             EnableCursor:
    766 FFFC05B8 48E7 8002                   		movem.l	d0/a6,-(a7)
    767 FFFC05BC 4DF9 FFE0 0000              		lea		VDGREG,a6
    768 FFFC05C2 302E 0106                   		move.w	$106(a6),d0
    769 FFFC05C6 08C0 0000                   		bset	#0,d0
    770 FFFC05CA 3D40 0106                   		move.w	d0,$106(a6)
    771 FFFC05CE 4CDF 4001                   		movem.l	(a7)+,d0/a6
    772 FFFC05D2 4E75                        		rts
                                             		
    774 FFFC05D4                             DisableCursor:
    775 FFFC05D4 48E7 8002                   		movem.l	d0/a6,-(a7)
    776 FFFC05D8 4DF9 FFE0 0000              		lea		VDGREG,a6
    777 FFFC05DE 302E 0106                   		move.w	$106(a6),d0
    778 FFFC05E2 0880 0000                   		bclr	#0,d0
    779 FFFC05E6 3D40 0106                   		move.w	d0,$106(a6)
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 14
bootrom.asm
    780 FFFC05EA 4CDF 4001                   		movem.l	(a7)+,d0/a6
    781 FFFC05EE 4E75                        		rts
                                             		
                                             ;------------------------------------------------------------------------------
                                             ; Sync the hardware cursor's position to the text cursor position.
                                             ;------------------------------------------------------------------------------
                                             
    787 FFFC05F0                             SyncCursor:
    788 FFFC05F0 48E7 4002                   		movem.l	d1/a6,-(a7)
    789 FFFC05F4 2C7C FFE0 0000              		move.l	#VDGREG,a6
                                             ;		move.w	#$0A0A,VDG_CURSZ(a6)	; defunct size set in SetCursorImage64
    791 FFFC05FA 1239 0001 0419              		move.b	CursorCol,d1
    792 FFFC0600 4881                        		ext.w	d1
    793 FFFC0602 E741                        		asl.w	#3,d1
    794 FFFC0604 5341                        		sub.w	#1,d1
    795 FFFC0606 3D41 0204                   		move.w	d1,VDG_CUR0X(a6)
    796 FFFC060A 1239 0001 0418              		move.b	CursorRow,d1
    797 FFFC0610 4881                        		ext.w	d1
    798 FFFC0612 E741                        		asl.w	#3,d1
    799 FFFC0614 5341                        		sub.w	#1,d1
    800 FFFC0616 3D41 0206                   		move.w	d1,VDG_CUR0Y(a6)
    801 FFFC061A 4CDF 4002                   		movem.l	(a7)+,d1/a6
    802 FFFC061E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Color
                                             ; - cursor color is a 23 bit vector
                                             ;
                                             ;	aifffff-rrrrrgggggbbbbb
                                             ;	||  |     |    |    |
                                             ;   ||  |     |    |    +-- blue
                                             ;	||  |     |    +------- green
                                             ;   ||  |     +------------ red
                                             ;   ||  +------------------ flashrate 0xxxx = no flash
                                             ;   |+--------------------- invert video (rgb ignored)
                                             ;   +---------------------- alpha blend (least significant 8 bits used as alpha)
                                             ;
                                             ;   flash rate
                                             ;		 0xxxx = no flash
                                             ;        00001 = 1/8 vsync (7.5 Hz)
                                             ;	     00010 = 1/16 vsync (3.75 Hz)
                                             ;        00100 = 1/32 vsync (1.875 Hz)
                                             ;------------------------------------------------------------------------------
                                             
    824 FFFC0620                             SetCursorColor:
    825 FFFC0620 2F02                        		move.l  d2/a5/a6,-(a7)
    826 FFFC0622 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    827 FFFC0628 2C7C FFE0 0000              		move.l	#VDGREG,a6
    828 FFFC062E 3D7C 0004 0446              		move.w	#%00100,VDG_CURFLSH(a6)
    829 FFFC0634 3D7C 7FFF 0448              		move.w	#%0111111111111111,VDG_CURCLR0(a6)
    830 FFFC063A 743F                        		moveq	#63,d2
    831 FFFC063C                             .0001:
    832 FFFC063C 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    833 FFFC0640 262D 0C00                   		move.l	$0C00(a5),d3
    834 FFFC0644 0283 0000 FFFF              		and.l	#$FFFF,d3
    835 FFFC064A 2CC3                        		move.l	d3,(a6)+
    836 FFFC064C 51CA FFEE                   		dbra	d2,.0001
    837 FFFC0650 241F                        		move.l	(a7)+,d2/a5/a6
    838 FFFC0652 4E75                        		rts
                                             
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 15
bootrom.asm
                                             ;------------------------------------------------------------------------------
                                             ; Put some values in the cursors color palette so they will be visible.
                                             ; Otherwise they will all be black.
                                             ;------------------------------------------------------------------------------
                                             
    845 FFFC0654                             InitCursorColorPalette:
    846 FFFC0654 2F02                        		move.l  d2/d3/a5/a6,-(a7)
    847 FFFC0656 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    848 FFFC065C 2C7C FFE0 0000              		move.l	#VDGREG,a6
    849 FFFC0662 743F                        		moveq	#63,d2
    850 FFFC0664                             .0001:
    851 FFFC0664 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    852 FFFC0668 262D 0C00                   		move.l	$0C00(a5),d3		; move random number
    853 FFFC066C 0283 0000 FFFF              		and.l	#$FFFF,d3			; mask off other attributes
    854 FFFC0672 2CC3                        		move.l	d3,(a6)+
    855 FFFC0674 51CA FFEE                   		dbra	d2,.0001
    856 FFFC0678 241F                        		move.l	(a7)+,d2/d3/a5/a6
    857 FFFC067A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Image (defunct)
                                             ; The original 16x16 hardware cursor is no longer supported.
                                             ; Cursor may be up to 16x16 pixels.
                                             ;------------------------------------------------------------------------------
                                             
    865 FFFC067C                             SetCursorImage:
    866 FFFC067C 48E7 4082                   		movem.l	d1/a0/a6,-(a7)
    867 FFFC0680 41F9 FFFC 069A              		lea		CursorImage,a0
    868 FFFC0686 2C7C FFE0 0460              		move.l	#VDGREG+VDG_CURIMG,a6
    869 FFFC068C 720F                        		moveq	#15,d1
    870 FFFC068E                             .0001:
    871 FFFC068E 3CD8                        		move.w	(a0)+,(a6)+
    872 FFFC0690 51C9 FFFC                   		dbra	d1,.0001
    873 FFFC0694 4CDF 4102                   		movem.l	(a7)+,d1/a0/a6
    874 FFFC0698 4E75                        		rts
                                             
                                             	align	2
    877 FFFC069A                             CursorImage:
    878 FFFC069A 03FF                        	dc.w	%1111111111
    879 FFFC069C 0201                        	dc.w	%1000000001
    880 FFFC069E 0201                        	dc.w	%1000000001
    881 FFFC06A0 0201                        	dc.w	%1000000001
    882 FFFC06A2 0201                        	dc.w	%1000000001
    883 FFFC06A4 0201                        	dc.w	%1000000001
    884 FFFC06A6 0201                        	dc.w	%1000000001
    885 FFFC06A8 0201                        	dc.w	%1000000001
    886 FFFC06AA 0231                        	dc.w	%1000110001
    887 FFFC06AC 03FF                        	dc.w	%1111111111
    888 FFFC06AE 0000                        	dc.w	%0000000000
    889 FFFC06B0 0000                        	dc.w	%0000000000
    890 FFFC06B2 0000                        	dc.w	%0000000000
    891 FFFC06B4 0000                        	dc.w	%0000000000
    892 FFFC06B6 0000                        	dc.w	%0000000000
    893 FFFC06B8 0000                        	dc.w	%0000000000
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Setup an image for the cursor.
                                             ; Cursor may be up to 32h x 512v pixels.
                                             ; The BIOS cursor is 10 x 10
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 16
bootrom.asm
                                             
    901 FFFC06BA                             SetCursorImage64:
    902 FFFC06BA 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
    903 FFFC06BE 41F9 FFFC 0720              		lea		CursorImage64,a0
    904 FFFC06C4 7214                        		moveq	#20,d1					; set count number of long words to move
    905 FFFC06C6 227C FF8B 7E00              		move.l	#$FF8B7E00,a1
    906 FFFC06CC                             .0001:
    907 FFFC06CC 22D8                        		move.l	(a0)+,(a1)+
    908 FFFC06CE 51C9 FFFC                   		dbra	d1,.0001
    909 FFFC06D2 343C 0200                   		move.w	#$200,d2
    910 FFFC06D6 207C FFE0 0000              		move.l	#VDGREG,a0
    911 FFFC06DC 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
    912 FFFC06E2                             .0002:
    913 FFFC06E2 21BC 0005 BF00 2000         		move.l	#$5BF00,(a0,d2.w)
    914 FFFC06EA 31BC 0249 2008              		move.w	#$0249,8(a0,d2.w)	; set cursor size 10x10
    915 FFFC06F0 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    916 FFFC06F4 262E 0C00                   		move.l	$0C00(a6),d3
    917 FFFC06F8 0243 00FF                   		and.w	#$FF,d3
    918 FFFC06FC 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
    919 FFFC0700 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    920 FFFC0704 262E 0C00                   		move.l	$0C00(a6),d3
    921 FFFC0708 0243 00FF                   		and.w	#$FF,d3
    922 FFFC070C 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
    923 FFFC0710 0642 0010                   		add.w	#$10,d2
    924 FFFC0714 B47C 0300                   		cmp.w	#$300,d2
    925 FFFC0718 66C8                        		bne.s	.0002
    926 FFFC071A 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6
    927 FFFC071E 4E75                        		rts
                                             		
                                             	align	4
    930 FFFC0720                             CursorImage64:
    931 FFFC0720 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
    932 FFFC0728 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    933 FFFC0730 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    934 FFFC0738 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    935 FFFC0740 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    936 FFFC0748 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    937 FFFC0750 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    938 FFFC0758 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    939 FFFC0760 40501000 00000000           	dc.l	%01000000010100000001000000000000,$00
    940 FFFC0768 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
    941 FFFC0770 00000000 00000000           	dc.l	$00,$00
    942 FFFC0778 00000000 00000000           	dc.l	$00,$00
                                             
    944 FFFC0780                             BouncingBalls:
    945 FFFC0780 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
                                             
                                             		; Setup background depth
    948 FFFC0784 227C FFE0 0000              		move.l	#VDGREG,a1
    949 FFFC078A 2C7C FFDC 0000              		move.l	#$FFDC0000,a6		; set I/O address
    950 FFFC0790 207C FF80 0000              		movea.l	#$FF800000,a0		; address of z buffer ram
    951 FFFC0796 243C 0000 1D4C              		move.l	#400*300/16,d2
    952 FFFC079C 337C 0001 043E              		move.w	#1,$43E(a1)			; select z buffer
    953 FFFC07A2                             .0003:
    954 FFFC07A2 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    955 FFFC07A6 262E 0C00                   		move.l	$0C00(a6),d3		; get random value
    956 FFFC07AA 20C3                        		move.l	d3,(a0)+			; move to z buffer
    957 FFFC07AC 5382                        		sub.l	#1,d2
    958 FFFC07AE 66F2                        		bne.s	.0003
    959 FFFC07B0 337C 0000 043E              		move.w	#0,$43E(a1)			; deselect z buffer
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 17
bootrom.asm
                                             		
                                             		; Setup sprite image
    962 FFFC07B6 41F9 FFFC 08B4              		lea		BallImage,a0
    963 FFFC07BC 721A                        		moveq	#26,d1					; set count number of long words to move
    964 FFFC07BE 227C FF8B 7D00              		move.l	#$FF8B7D00,a1
    965 FFFC07C4 45F9 0001 0500              		lea		ball_dx,a2
    966 FFFC07CA 47F9 0001 0600              		lea		ball_dy,a3
    967 FFFC07D0                             .0001:
    968 FFFC07D0 22D8                        		move.l	(a0)+,(a1)+
    969 FFFC07D2 51C9 FFFC                   		dbra	d1,.0001
    970 FFFC07D6 343C 0210                   		move.w	#$210,d2
    971 FFFC07DA 207C FFE0 0000              		move.l	#VDGREG,a0
    972 FFFC07E0 317C FFFF 0106              		move.w	#$FFFF,$106(a0)		; enable sprites
    973 FFFC07E6 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
    974 FFFC07EC                             .0002:
    975 FFFC07EC 21BC 0005 BE80 2000         		move.l	#$5BE80,(a0,d2.w)
    976 FFFC07F4 31BC 030F 2008              		move.w	#$030F,8(a0,d2.w)	; set cursor size 16hx13v
    977 FFFC07FA 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    978 FFFC07FE 262E 0C00                   		move.l	$0C00(a6),d3
    979 FFFC0802 0243 00FF                   		and.w	#$FF,d3
    980 FFFC0806 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
    981 FFFC080A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    982 FFFC080E 262E 0C00                   		move.l	$0C00(a6),d3
    983 FFFC0812 0243 00FF                   		and.w	#$FF,d3
    984 FFFC0816 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
    985 FFFC081A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    986 FFFC081E 262E 0C00                   		move.l	$0C00(a6),d3
    987 FFFC0822 0243 000F                   		and.w	#$F,d3
    988 FFFC0826 3183 200A                   		move.w	d3,10(a0,d2.w)		; set z pos
    989 FFFC082A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    990 FFFC082E 262E 0C00                   		move.l	$0C00(a6),d3
    991 FFFC0832 EC43                        		asr.w	#6,d3				; get dx -8 to +7
    992 FFFC0834 EC43                        		asr.w	#6,d3				; get dx -8 to +7
    993 FFFC0836 3583 2000                   		move.w	d3,(a2,d2.w)		; set dx
    994 FFFC083A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    995 FFFC083E 262E 0C00                   		move.l	$0C00(a6),d3
    996 FFFC0842 EC43                        		asr.w	#6,d3				; get dx -8 to +7
    997 FFFC0844 EC43                        		asr.w	#6,d3				; get dx -8 to +7
    998 FFFC0846 3783 2000                   		move.w	d3,(a3,d2.w)		; set dy
    999 FFFC084A 0642 0010                   		add.w	#$10,d2
   1000 FFFC084E B47C 0300                   		cmp.w	#$300,d2
   1001 FFFC0852 6698                        		bne.s	.0002
                                             ; Move balls around	
   1003 FFFC0854                             .0010:	
   1004 FFFC0854 343C 0210                   		move.w	#$210,d2
   1005 FFFC0858                             .0008:
   1006 FFFC0858 3632 2000                   		move.w	(a2,d2.w),d3
   1007 FFFC085C D770 2004                   		add.w	d3,4(a0,d2.w)		; new hpos
   1008 FFFC0860 3633 2000                   		move.w	(a3,d2.w),d3
   1009 FFFC0864 D770 2006                   		add.w	d3,6(a0,d2.w)		; new vpos
   1010 FFFC0868 0C70 0190 2004              		cmp.w	#400,4(a0,d2.w)
   1011 FFFC086E 6504                        		blo.s	.0004
   1012 FFFC0870 4472 2000                   		neg.w	(a2,d2.w)
   1013 FFFC0874                             .0004:
   1014 FFFC0874 0C70 0000 2004              		cmp.w	#0,4(a0,d2.w)
   1015 FFFC087A 6404                        		bhs.s	.0005
   1016 FFFC087C 4472 2000                   		neg.w	(a2,d2.w)
   1017 FFFC0880                             .0005:
   1018 FFFC0880 0C70 012C 2006              		cmp.w	#300,6(a0,d2.w)
   1019 FFFC0886 6504                        		blo.s	.0006
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 18
bootrom.asm
   1020 FFFC0888 4473 2000                   		neg.w	(a3,d2.w)
   1021 FFFC088C                             .0006:
   1022 FFFC088C 0C70 0000 2006              		cmp.w	#0,6(a0,d2.w)
   1023 FFFC0892 6404                        		bhs.s	.0007
   1024 FFFC0894 4473 2000                   		neg.w	(a3,d2.w)
   1025 FFFC0898                             .0007:
   1026 FFFC0898 0642 0010                   		add.w	#$10,d2
   1027 FFFC089C B47C 0300                   		cmp.w	#$300,d2
   1028 FFFC08A0 66B6                        		bne.s	.0008	
                                             		; delay a bit
   1030 FFFC08A2 263C 0000 4E20              		move.l	#20000,d3
   1031 FFFC08A8                             .0009:
   1032 FFFC08A8 5383                        		sub.l	#1,d3
   1033 FFFC08AA 66FC                        		bne.s	.0009
   1034 FFFC08AC 60A6                        		bra.s	.0010
                                             
   1036 FFFC08AE 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6
   1037 FFFC08B2 4E75                        		rts
                                             		
                                             
                                             		align	4
   1041 FFFC08B4                             BallImage:
   1042 FFFC08B4 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1043 FFFC08BC 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
   1044 FFFC08C4 15555554 00000000           	dc.l	%00010101010101010101010101010100,%00000000000000000000000000000000
   1045 FFFC08CC 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1046 FFFC08D4 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1047 FFFC08DC 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1048 FFFC08E4 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1049 FFFC08EC 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1050 FFFC08F4 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1051 FFFC08FC 15000054 00000000           	dc.l	%00010101000000000000000001010100,%00000000000000000000000000000000
   1052 FFFC0904 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
   1053 FFFC090C 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1054 FFFC0914 00555500 00000000           	dc.l	%00000000010101010101010100000000,%00000000000000000000000000000000
   1055 FFFC091C 00000000 00000000           	dc.l	$00,$00
   1056 FFFC0924 00000000 00000000           	dc.l	$00,$00
                                             	
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	a0			pointer to string
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Returns:
                                             ;	a0			points to byte after NULL character
                                             ;	d1.w		updated x position
                                             ; Trashes:
                                             ;	d0,a6
                                             ;------------------------------------------------------------------------------
                                             
   1070 FFFC092C                             DispStringAt:
   1071 FFFC092C                             .0003:
   1072 FFFC092C 7000                        		moveq	#0,d0					; zero out high order bits
   1073 FFFC092E 1018                        		move.b	(a0)+,d0				; get character from string into d0
   1074 FFFC0930 6708                        		beq.s	.0002					; end of string ?
   1075 FFFC0932 6100 FBF2                   		bsr		DispCharAt
   1076 FFFC0936 5041                        		add.w	#8,d1					; increment xpos
   1077 FFFC0938 60F2                        		bra.s	.0003
   1078 FFFC093A                             .0002:
   1079 FFFC093A 4E75                        		rts
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 19
bootrom.asm
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display nybble in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1085 FFFC093C                             DisplayNybble:
   1086 FFFC093C 3F01                        		move.w	d1,-(a7)
   1087 FFFC093E 0201 000F                   		andi.b	#0xF,d1
   1088 FFFC0942 0601 0030                   		addi.b	#'0',d1
   1089 FFFC0946 0C01 0039                   		cmpi.b	#'9',d1
   1090 FFFC094A 6302                        		bls.s	dispnyb1
   1091 FFFC094C 5E01                        		addi.b	#7,d1
   1092 FFFC094E                             dispnyb1:
   1093 FFFC094E 6100 F918                   		bsr		DisplayChar
   1094 FFFC0952 321F                        		move.w	(a7)+,d1
   1095 FFFC0954 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the byte in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1101 FFFC0956                             DisplayByte:
   1102 FFFC0956 3F01                        		move.w	d1,-(a7)
   1103 FFFC0958 E819                        		ror.b	#4,d1
   1104 FFFC095A 6100 FFE0                   		bsr		DisplayNybble
   1105 FFFC095E E919                        		rol.b	#4,d1
   1106 FFFC0960 6100 FFDA                   		bsr		DisplayNybble
   1107 FFFC0964 321F                        		move.w	(a7)+,d1
   1108 FFFC0966 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the 32 bit word in D1.L
                                             ;------------------------------------------------------------------------------
                                             ;
   1114 FFFC0968                             DisplayWord:
   1115 FFFC0968 E199                        		rol.l	#8,d1
   1116 FFFC096A 6100 FFEA                   		bsr		DisplayByte
   1117 FFFC096E E199                        		rol.l	#8,d1
   1118 FFFC0970 6100 FFE4                   		bsr		DisplayByte
   1119 FFFC0974 E199                        		rol.l	#8,d1
   1120 FFFC0976 6100 FFDE                   		bsr		DisplayByte
   1121 FFFC097A E199                        		rol.l	#8,d1
   1122 FFFC097C 6100 FFD8                   		bsr		DisplayByte
   1123 FFFC0980 4E75                        		rts
                                             
   1125 FFFC0982                             DisplayMem:
   1126 FFFC0982 123C 003A                   		move.b	#':',d1
   1127 FFFC0986 4EB9 FFFC 0268              		jsr		DisplayChar
   1128 FFFC098C 2208                        		move.l	a0,d1
   1129 FFFC098E 4EB9 FFFC 0968              		jsr		DisplayWord
   1130 FFFC0994 7407                        		moveq	#7,d2
   1131 FFFC0996                             dspmem1:
   1132 FFFC0996 123C 0020                   		move.b	#' ',d1
   1133 FFFC099A 4EB9 FFFC 0268              		jsr		DisplayChar
   1134 FFFC09A0 1218                        		move.b	(a0)+,d1
   1135 FFFC09A2 4EB9 FFFC 0956              		jsr		DisplayByte
   1136 FFFC09A8 51CA FFEC                   		dbra	d2,dspmem1
   1137 FFFC09AC 4EF9 FFFC 021E              		jmp		CRLF
                                             
                                             ;==============================================================================
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 20
bootrom.asm
                                             ; Keyboard stuff
                                             ;
                                             ; KeyState2_
                                             ; 876543210
                                             ; ||||||||+ = shift
                                             ; |||||||+- = alt
                                             ; ||||||+-- = control
                                             ; |||||+--- = numlock
                                             ; ||||+---- = capslock
                                             ; |||+----- = scrolllock
                                             ; ||+------ =
                                             ; |+------- = 
                                             ; +-------- = extended
                                             ;
                                             ;==============================================================================
                                             
   1156 FFFC09B2                             _KeybdGetStatus:
   1157 FFFC09B2 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1158 FFFC09B8 4E75                        		rts
                                             
                                             ; Get the scancode from the keyboard port
                                             ;
   1162 FFFC09BA                             _KeybdGetScancode:
   1163 FFFC09BA 7200                        		moveq	#0,d1
   1164 FFFC09BC 1239 FFDC 0000              		move.b	KEYBD,d1				; get the scan code
   1165 FFFC09C2 13FC 0000 FFDC 0001         		move.b	#0,KEYBD+1				; clear receive register
   1166 FFFC09CA 4E75                        		rts
                                             
                                             ; Recieve a byte from the keyboard, used after a command is sent to the
                                             ; keyboard in order to wait for a response.
                                             ;
   1171 FFFC09CC                             KeybdRecvByte:
   1172 FFFC09CC 2F03                        		move.l	d3,-(a7)
   1173 FFFC09CE 363C 0064                   		move.w	#100,d3		; wait up to 1s
   1174 FFFC09D2                             .0003:
   1175 FFFC09D2 6100 FFDE                   		bsr		_KeybdGetStatus	; wait for response from keyboard
   1176 FFFC09D6 4A01                        		tst.b	d1
   1177 FFFC09D8 6B0E                        		bmi		.0004		; is input buffer full ? yes, branch
   1178 FFFC09DA 6100 02C4                   		bsr		Wait10ms		; wait a bit
   1179 FFFC09DE 51CB FFF2                   		dbra	d3,.0003	; go back and try again
   1180 FFFC09E2 261F                        		move.l	(a7)+,d3
   1181 FFFC09E4 72FF                        		moveq	#-1,d1			; return -1
   1182 FFFC09E6 4E75                        		rts
   1183 FFFC09E8                             .0004:
   1184 FFFC09E8 6100 FFD0                   		bsr		_KeybdGetScancode
   1185 FFFC09EC 261F                        		move.l	(a7)+,d3
   1186 FFFC09EE 4E75                        		rts
                                             
                                             
                                             ; Wait until the keyboard transmit is complete
                                             ; Returns .CF = 1 if successful, .CF=0 timeout
                                             ;
   1192 FFFC09F0                             KeybdWaitTx:
   1193 FFFC09F0 48E7 3000                   		movem.l	d2/d3,-(a7)
   1194 FFFC09F4 7664                        		moveq	#100,d3		; wait a max of 1s
   1195 FFFC09F6                             .0001:
   1196 FFFC09F6 6100 FFBA                   		bsr		_KeybdGetStatus
   1197 FFFC09FA 0801 0006                   		btst	#6,d1		; check for transmit complete bit
   1198 FFFC09FE 6610                        		bne	    .0002		; branch if bit set
   1199 FFFC0A00 6100 029E                   		bsr		Wait10ms		; delay a little bit
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 21
bootrom.asm
   1200 FFFC0A04 51CB FFF0                   		dbra	d3,.0001	; go back and try again
   1201 FFFC0A08 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1202 FFFC0A0C 72FF                        		moveq	#-1,d1		; return -1
   1203 FFFC0A0E 4E75                        		rts
   1204 FFFC0A10                             .0002:
   1205 FFFC0A10 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1206 FFFC0A14 7200                        		moveq	#0,d1		; return 0
   1207 FFFC0A16 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; get key pending status into d1.b
                                             ;------------------------------------------------------------------------------
                                             ;
   1214 FFFC0A18                             CheckForKey:
   1215 FFFC0A18 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1216 FFFC0A1E 6A06                        		bpl.s	cfk1
   1217 FFFC0A20 123C 0001                   		move.b	#1,d1
   1218 FFFC0A24 4E75                        		rts
   1219 FFFC0A26                             cfk1:
   1220 FFFC0A26 4201                        		clr.b	d1
   1221 FFFC0A28 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1226 FFFC0A2A                             GetKey:
   1227 FFFC0A2A 6100 0022                   		bsr		KeybdGetCharWait
   1228 FFFC0A2E 0C39 0000 0001 0424         		cmpi.b	#0,KeybdEcho	; is keyboard echo on ?
   1229 FFFC0A36 670C                        		beq.s	gk1
   1230 FFFC0A38 0C01 000D                   		cmpi.b	#'\r',d1		; convert CR keystroke into CRLF
   1231 FFFC0A3C 6700 F7E0                   		beq		CRLF
   1232 FFFC0A40 6100 F826                   		bsr		DisplayChar
   1233 FFFC0A44                             gk1:
   1234 FFFC0A44 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1240 FFFC0A46                             KeybdGetCharNoWait:
   1241 FFFC0A46 4239 0001 0425              		clr.b	KeybdWaitFlag
   1242 FFFC0A4C 6008                        		bra		KeybdGetChar
                                             
   1244 FFFC0A4E                             KeybdGetCharWait:
   1245 FFFC0A4E 13FC FFFF 0001 0425         		move.b	#-1,KeybdWaitFlag
                                             
   1247 FFFC0A56                             KeybdGetChar:
   1248 FFFC0A56 48E7 3080                   		movem.l	d2/d3/a0,-(a7)
   1249 FFFC0A5A                             .0003:
   1250 FFFC0A5A 6100 FF56                   		bsr		_KeybdGetStatus			; check keyboard status for key available
   1251 FFFC0A5E 6B10                        		bmi		.0006					; yes, go process
   1252 FFFC0A60 4A39 0001 0425              		tst.b	KeybdWaitFlag			; are we willing to wait for a key ?
   1253 FFFC0A66 6BF2                        		bmi		.0003					; yes, branch back
   1254 FFFC0A68 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1255 FFFC0A6C 72FF                        		moveq	#-1,d1					; flag no char available
   1256 FFFC0A6E 4E75                        		rts
   1257 FFFC0A70                             .0006:
   1258 FFFC0A70 6100 FF48                   		bsr		_KeybdGetScancode
   1259 FFFC0A74                             .0001:
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 22
bootrom.asm
   1260 FFFC0A74 33FC 0001 FFDC 0600         		move.w	#1,leds
   1261 FFFC0A7C B23C 00F0                   		cmp.b	#SC_KEYUP,d1
   1262 FFFC0A80 6700 00CA                   		beq		.doKeyup
   1263 FFFC0A84 B23C 00E0                   		cmp.b	#SC_EXTEND,d1
   1264 FFFC0A88 6700 00CE                   		beq		.doExtend
   1265 FFFC0A8C B23C 0014                   		cmp.b	#SC_CTRL,d1
   1266 FFFC0A90 6700 00D2                   		beq		.doCtrl
   1267 FFFC0A94 B23C 0012                   		cmp.b	#SC_LSHIFT,d1
   1268 FFFC0A98 6700 0134                   		beq		.doShift
   1269 FFFC0A9C B23C 0059                   		cmp.b	#SC_RSHIFT,d1
   1270 FFFC0AA0 6700 012C                   		beq		.doShift
   1271 FFFC0AA4 B23C 0077                   		cmp.b	#SC_NUMLOCK,d1
   1272 FFFC0AA8 6700 014C                   		beq		.doNumLock
   1273 FFFC0AAC B23C 0058                   		cmp.b	#SC_CAPSLOCK,d1
   1274 FFFC0AB0 6700 0154                   		beq		.doCapsLock
   1275 FFFC0AB4 B23C 007E                   		cmp.b	#SC_SCROLLLOCK,d1
   1276 FFFC0AB8 6700 015C                   		beq		.doScrollLock
   1277 FFFC0ABC B23C 0011                   		cmp.b   #SC_ALT,d1
   1278 FFFC0AC0 6700 00CA                   		beq     .doAlt
   1279 FFFC0AC4 1439 0001 0426              		move.b	_KeyState1,d2			; check key up/down
   1280 FFFC0ACA 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup status
   1281 FFFC0AD2 4A02                        		tst.b	d2
   1282 FFFC0AD4 6684                        		bne	    .0003					; ignore key up
   1283 FFFC0AD6 B23C 000D                   		cmp.b   #SC_TAB,d1
   1284 FFFC0ADA 6700 00D8                   		beq     .doTab
   1285 FFFC0ADE                             .0013:
   1286 FFFC0ADE 1439 0001 0427              		move.b	_KeyState2,d2
   1287 FFFC0AE4 6A1E                        		bpl		.0010					; is it extended code ?
   1288 FFFC0AE6 0202 007F                   		and.b	#$7F,d2					; clear extended bit
   1289 FFFC0AEA 13C2 0001 0427              		move.b	d2,_KeyState2
   1290 FFFC0AF0 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup
   1291 FFFC0AF8 41F9 FFFC 0F30              		lea		_keybdExtendedCodes,a0
   1292 FFFC0AFE 1230 1000                   		move.b	(a0,d1.w),d1
   1293 FFFC0B02 603A                        		bra		.0008
   1294 FFFC0B04                             .0010:
   1295 FFFC0B04 0802 0002                   		btst	#2,d2					; is it CTRL code ?
   1296 FFFC0B08 6710                        		beq		.0009
   1297 FFFC0B0A 0241 007F                   		and.w	#$7F,d1
   1298 FFFC0B0E 41F9 FFFC 0EB0              		lea		_keybdControlCodes,a0
   1299 FFFC0B14 1230 1000                   		move.b	(a0,d1.w),d1
   1300 FFFC0B18 6024                        		bra		.0008
   1301 FFFC0B1A                             .0009:
   1302 FFFC0B1A 0802 0000                   		btst	#0,d2					; is it shift down ?
   1303 FFFC0B1E 670C                        		beq  	.0007
   1304 FFFC0B20 41F9 FFFC 0DB0              		lea		_shiftedScanCodes,a0
   1305 FFFC0B26 1230 1000                   		move.b	(a0,d1.w),d1
   1306 FFFC0B2A 6012                        		bra		.0008
   1307 FFFC0B2C                             .0007:
   1308 FFFC0B2C 41F9 FFFC 0CB0              		lea		_unshiftedScanCodes,a0
   1309 FFFC0B32 1230 1000                   		move.b	(a0,d1.w),d1
   1310 FFFC0B36 33FC 0202 FFDC 0600         		move.w	#$0202,leds
   1311 FFFC0B3E                             .0008:
   1312 FFFC0B3E 33FC 0303 FFDC 0600         		move.w	#$0303,leds
   1313 FFFC0B46 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1314 FFFC0B4A 4E75                        		rts
   1315 FFFC0B4C                             .doKeyup:
   1316 FFFC0B4C 13FC FFFF 0001 0426         		move.b	#-1,_KeyState1
   1317 FFFC0B54 6000 FF04                   		bra		.0003
   1318 FFFC0B58                             .doExtend:
   1319 FFFC0B58 0039 0080 0001 0427         		or.b	#$80,_KeyState2
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 23
bootrom.asm
   1320 FFFC0B60 6000 FEF8                   		bra		.0003
   1321 FFFC0B64                             .doCtrl:
   1322 FFFC0B64 1239 0001 0426              		move.b	_KeyState1,d1
   1323 FFFC0B6A 4239 0001 0426              		clr.b	_KeyState1
   1324 FFFC0B70 4A01                        		tst.b	d1
   1325 FFFC0B72 6A0C                        		bpl.s	.0004
   1326 FFFC0B74 08B9 0002 0001 0427         		bclr	#2,_KeyState2
   1327 FFFC0B7C 6000 FEDC                   		bra		.0003
   1328 FFFC0B80                             .0004:
   1329 FFFC0B80 08F9 0002 0001 0427         		bset	#2,_KeyState2
   1330 FFFC0B88 6000 FED0                   		bra		.0003
   1331 FFFC0B8C                             .doAlt:
   1332 FFFC0B8C 1239 0001 0426              		move.b	_KeyState1,d1
   1333 FFFC0B92 4239 0001 0426              		clr.b	_KeyState1
   1334 FFFC0B98 4A01                        		tst.b	d1
   1335 FFFC0B9A 6A0C                        		bpl		.0011
   1336 FFFC0B9C 08B9 0001 0001 0427         		bclr	#1,_KeyState2
   1337 FFFC0BA4 6000 FEB4                   		bra		.0003
   1338 FFFC0BA8                             .0011:
   1339 FFFC0BA8 08F9 0001 0001 0427         		bset	#1,_KeyState2
   1340 FFFC0BB0 6000 FEA8                   		bra		.0003
   1341 FFFC0BB4                             .doTab:
   1342 FFFC0BB4 2F01                        		move.l	d1,-(a7)
   1343 FFFC0BB6 1239 0001 0427              	    move.b  _KeyState2,d1
   1344 FFFC0BBC 0801 0000                   	    btst	#0,d1                 ; is ALT down ?
   1345 FFFC0BC0 6706                        	    beq     .0012
                                             ;    	inc     _iof_switch
   1347 FFFC0BC2 221F                        	    move.l	(a7)+,d1
   1348 FFFC0BC4 6000 FE94                   	    bra     .0003
   1349 FFFC0BC8                             .0012:
   1350 FFFC0BC8 221F                        	    move.l	(a7)+,d1
   1351 FFFC0BCA 6000 FF12                   	    bra     .0013
   1352 FFFC0BCE                             .doShift:
   1353 FFFC0BCE 1239 0001 0426              		move.b	_KeyState1,d1
   1354 FFFC0BD4 4239 0001 0426              		clr.b	_KeyState1
   1355 FFFC0BDA 4A01                        		tst.b	d1
   1356 FFFC0BDC 6A0C                        		bpl.s	.0005
   1357 FFFC0BDE 08B9 0000 0001 0427         		bclr	#0,_KeyState2
   1358 FFFC0BE6 6000 FE72                   		bra		.0003
   1359 FFFC0BEA                             .0005:
   1360 FFFC0BEA 08F9 0000 0001 0427         		bset	#0,_KeyState2
   1361 FFFC0BF2 6000 FE66                   		bra		.0003
   1362 FFFC0BF6                             .doNumLock:
   1363 FFFC0BF6 0879 0004 0001 0427         		bchg	#4,_KeyState2
   1364 FFFC0BFE 6100 0026                   		bsr		KeybdSetLEDStatus
   1365 FFFC0C02 6000 FE56                   		bra		.0003
   1366 FFFC0C06                             .doCapsLock:
   1367 FFFC0C06 0879 0005 0001 0427         		bchg	#5,_KeyState2
   1368 FFFC0C0E 6100 0016                   		bsr		KeybdSetLEDStatus
   1369 FFFC0C12 6000 FE46                   		bra		.0003
   1370 FFFC0C16                             .doScrollLock:
   1371 FFFC0C16 0879 0006 0001 0427         		bchg	#6,_KeyState2
   1372 FFFC0C1E 6100 0006                   		bsr		KeybdSetLEDStatus
   1373 FFFC0C22 6000 FE36                   		bra		.0003
                                             
   1375 FFFC0C26                             KeybdSetLEDStatus:
   1376 FFFC0C26 48E7 3000                   		movem.l	d2/d3,-(a7)
   1377 FFFC0C2A 4239 0001 0428              		clr.b	KeybdLEDs
   1378 FFFC0C30 0839 0004 0001 0427         		btst	#4,_KeyState2
   1379 FFFC0C38 6708                        		beq.s	.0002
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:46 2017     Page 24
bootrom.asm
   1380 FFFC0C3A 13FC 0002 0001 0428         		move.b	#2,KeybdLEDs
   1381 FFFC0C42                             .0002:
   1382 FFFC0C42 0839 0005 0001 0427         		btst	#5,_KeyState2
   1383 FFFC0C4A 6708                        		beq.s	.0003
   1384 FFFC0C4C 08F9 0002 0001 0428         		bset	#2,KeybdLEDs
   1385 FFFC0C54                             .0003:
   1386 FFFC0C54 0839 0006 0001 0427         		btst	#6,_KeyState2
   1387 FFFC0C5C 6708                        		beq.s	.0004
   1388 FFFC0C5E 08F9 0000 0001 0428         		bset	#0,KeybdLEDs
   1389 FFFC0C66                             .0004:
   1390 FFFC0C66 123C 00ED                   		move.b	#$ED,d1
   1391 FFFC0C6A 6100 002C                   		bsr		KeybdSendByte
   1392 FFFC0C6E 6100 FD80                   		bsr		KeybdWaitTx
   1393 FFFC0C72 6100 FD58                   		bsr		KeybdRecvByte
   1394 FFFC0C76 4A01                        		tst.b	d1
   1395 FFFC0C78 6B18                        		bmi		.0001
   1396 FFFC0C7A B2BC 0000 00FA              		cmp		#$FA,d1
   1397 FFFC0C80 1239 0001 0428              		move.b	KeybdLEDs,d1
   1398 FFFC0C86 6100 0010                   		bsr		KeybdSendByte
   1399 FFFC0C8A 6100 FD64                   		bsr		KeybdWaitTx
   1400 FFFC0C8E 6100 FD3C                   		bsr		KeybdRecvByte
   1401 FFFC0C92                             .0001:
   1402 FFFC0C92 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1403 FFFC0C96 4E75                        		rts
                                             
   1405 FFFC0C98                             KeybdSendByte:
   1406 FFFC0C98 13C1 FFDC 0000              		move.b	d1,KEYBD
   1407 FFFC0C9E 4E75                        		rts
                                             	
   1409 FFFC0CA0                             Wait10ms:
   1410 FFFC0CA0 2F03                        		move.l	d3,-(a7)
   1411 FFFC0CA2 263C 0000 03E8              		move.l	#1000,d3
   1412 FFFC0CA8                             .0001:
   1413 FFFC0CA8 51CB FFFE                   		dbra	d3,.0001
   1414 FFFC0CAC 261F                        		move.l	(a7)+,d3
   1415 FFFC0CAE 4E75                        		rts
                                             
                                             
                                             ;--------------------------------------------------------------------------
                                             ; PS2 scan codes to ascii conversion tables.
                                             ;--------------------------------------------------------------------------
                                             ;
   1422 FFFC0CB0                             _unshiftedScanCodes:
   1423 FFFC0CB0 2E A9 2E A5 A3 A1 A2 AC     	dc.b	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
                                             
   1425 FFFC0CB8 2E AA A8 A6 A4 09 60 2E     	dc.b	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
                                             
   1427 FFFC0CC0 2E 2E 2E 2E 2E 71 31 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
                                             
   1429 FFFC0CC8 2E 2E 7A 73 61 77 32 2E     	dc.b	$2e,$2e,$7a,$73,$61,$77,$32,$2e
                                             
   1431 FFFC0CD0 2E 63 78 64 65 34 33 2E     	dc.b	$2e,$63,$78,$64,$65,$34,$33,$2e
                                             
   1433 FFFC0CD8 2E 20 76 66 74 72 35 2E     	dc.b	$2e,$20,$76,$66,$74,$72,$35,$2e
                                             
   1435 FFFC0CE0 2E 6E 62 68 67 79 36 2E     	dc.b	$2e,$6e,$62,$68,$67,$79,$36,$2e
                                             
   1437 FFFC0CE8 2E 2E 6D 6A 75 37 38 2E     	dc.b	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
                                             
   1439 FFFC0CF0 2E 2C 6B 69 6F 30 39 2E     	dc.b	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 25
bootrom.asm
                                             
   1441 FFFC0CF8 2E 2E 2F 6C 3B 70 2D 2E     	dc.b	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
                                             
   1443 FFFC0D00 2E 2E 27 2E 5B 3D 2E 2E     	dc.b	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
                                             
   1445 FFFC0D08 AD 2E 0D 5D 2E 5C 2E 2E     	dc.b	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
                                             
   1447 FFFC0D10 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1449 FFFC0D18 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1451 FFFC0D20 98 7F 92 2E 91 90 1B AF     	dc.b	$98,$7f,$92,$2e,$91,$90,$1b,$af
                                             
   1453 FFFC0D28 AB 2E 97 2E 2E 96 AE 2E     	dc.b	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
                                             
                                             
   1456 FFFC0D30 2E 2E 2E A7 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
                                             
   1458 FFFC0D38 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1460 FFFC0D40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1462 FFFC0D48 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1464 FFFC0D50 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1466 FFFC0D58 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1468 FFFC0D60 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1470 FFFC0D68 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1472 FFFC0D70 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1474 FFFC0D78 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1476 FFFC0D80 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1478 FFFC0D88 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1480 FFFC0D90 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1482 FFFC0D98 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1484 FFFC0DA0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1486 FFFC0DA8 2E 2E FA 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1489 FFFC0DB0                             _shiftedScanCodes:
   1490 FFFC0DB0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1492 FFFC0DB8 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1494 FFFC0DC0 2E 2E 2E 2E 2E 51 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
                                             
   1496 FFFC0DC8 2E 2E 5A 53 41 57 40 2E     	dc.b	$2e,$2e,$5a,$53,$41,$57,$40,$2e
                                             
   1498 FFFC0DD0 2E 43 58 44 45 24 23 2E     	dc.b	$2e,$43,$58,$44,$45,$24,$23,$2e
                                             
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 26
bootrom.asm
   1500 FFFC0DD8 2E 20 56 46 54 52 25 2E     	dc.b	$2e,$20,$56,$46,$54,$52,$25,$2e
                                             
   1502 FFFC0DE0 2E 4E 42 48 47 59 5E 2E     	dc.b	$2e,$4e,$42,$48,$47,$59,$5e,$2e
                                             
   1504 FFFC0DE8 2E 2E 4D 4A 55 26 2A 2E     	dc.b	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
                                             
   1506 FFFC0DF0 2E 3C 4B 49 4F 29 28 2E     	dc.b	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
                                             
   1508 FFFC0DF8 2E 3E 3F 4C 3A 50 5F 2E     	dc.b	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
                                             
   1510 FFFC0E00 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1512 FFFC0E08 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1514 FFFC0E10 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1516 FFFC0E18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1518 FFFC0E20 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1520 FFFC0E28 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1523 FFFC0E30 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1525 FFFC0E38 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1527 FFFC0E40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1529 FFFC0E48 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1531 FFFC0E50 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1533 FFFC0E58 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1535 FFFC0E60 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1537 FFFC0E68 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1539 FFFC0E70 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1541 FFFC0E78 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1543 FFFC0E80 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1545 FFFC0E88 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1547 FFFC0E90 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1549 FFFC0E98 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1551 FFFC0EA0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1553 FFFC0EA8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
                                             ; control
   1557 FFFC0EB0                             _keybdControlCodes:
   1558 FFFC0EB0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 27
bootrom.asm
   1560 FFFC0EB8 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1562 FFFC0EC0 2E 2E 2E 2E 2E 11 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
                                             
   1564 FFFC0EC8 2E 2E 1A 13 01 17 40 2E     	dc.b	$2e,$2e,$1a,$13,$01,$17,$40,$2e
                                             
   1566 FFFC0ED0 2E 03 18 04 05 24 23 2E     	dc.b	$2e,$03,$18,$04,$05,$24,$23,$2e
                                             
   1568 FFFC0ED8 2E 20 16 06 14 12 25 2E     	dc.b	$2e,$20,$16,$06,$14,$12,$25,$2e
                                             
   1570 FFFC0EE0 2E 0E 02 08 07 19 5E 2E     	dc.b	$2e,$0e,$02,$08,$07,$19,$5e,$2e
                                             
   1572 FFFC0EE8 2E 2E 0D 0A 15 26 2A 2E     	dc.b	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
                                             
   1574 FFFC0EF0 2E 3C 0B 09 0F 29 28 2E     	dc.b	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
                                             
   1576 FFFC0EF8 2E 3E 3F 0C 3A 10 5F 2E     	dc.b	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
                                             
   1578 FFFC0F00 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1580 FFFC0F08 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1582 FFFC0F10 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1584 FFFC0F18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1586 FFFC0F20 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1588 FFFC0F28 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1591 FFFC0F30                             _keybdExtendedCodes:
   1592 FFFC0F30 2E 2E 2E 2E A3 A1 A2 2E     	dc.b	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
                                             
   1594 FFFC0F38 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1596 FFFC0F40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1598 FFFC0F48 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1600 FFFC0F50 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1602 FFFC0F58 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1604 FFFC0F60 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1606 FFFC0F68 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1608 FFFC0F70 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1610 FFFC0F78 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1612 FFFC0F80 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1614 FFFC0F88 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1616 FFFC0F90 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1618 FFFC0F98 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 28
bootrom.asm
   1620 FFFC0FA0 98 99 92 2E 91 90 2E 2E     	dc.b	$98,$99,$92,$2e,$91,$90,$2e,$2e
                                             
   1622 FFFC0FA8 2E 2E 97 2E 2E 96 2E 2E     	dc.b	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
                                             
                                             
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             ; Monitor
                                             ;==============================================================================
                                             ;==============================================================================
                                             ;
   1632 FFFC0FB0                             StartMon:
   1633 FFFC0FB0                             Monitor:
                                             ;	lea		STACK,a7		; reset the stack pointer
   1635 FFFC0FB0 4239 0001 0424              		clr.b	KeybdEcho		; turn off keyboard echo
   1636 FFFC0FB6                             PromptLn:
   1637 FFFC0FB6 6100 F266                   		bsr		CRLF
   1638 FFFC0FBA 123C 0024                   		move.b	#'$',d1
   1639 FFFC0FBE 6100 F2A8                   		bsr		DisplayChar
                                             
                                             ; Get characters until a CR is keyed
                                             ;
   1643 FFFC0FC2                             Prompt3:
   1644 FFFC0FC2 6100 FA66                   		bsr		GetKey
   1645 FFFC0FC6 0C01 000D                   		cmpi.b	#CR,d1
   1646 FFFC0FCA 6706                        		beq.s	Prompt1
   1647 FFFC0FCC 6100 F29A                   		bsr		DisplayChar
   1648 FFFC0FD0 60F0                        		bra.s	Prompt3
                                             
                                             ; Process the screen line that the CR was keyed on
                                             ;
   1652 FFFC0FD2                             Prompt1:
   1653 FFFC0FD2 4239 0001 0419              		clr.b	CursorCol		; go back to the start of the line
   1654 FFFC0FD8 6100 F25E                   		bsr		CalcScreenLoc	; a0 = screen memory location
   1655 FFFC0FDC 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1657 FFFC0FDE 0C01 0024                   		cmpi.b	#'$',d1			; skip over '$' prompt character
   1658 FFFC0FE2 6602                        		bne.s	Prompt2
   1659 FFFC0FE4 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
                                             	
                                             ; Dispatch based on command character
                                             ;
   1664 FFFC0FE6                             Prompt2:
   1665 FFFC0FE6 0C01 006F                   		cmpi.b	#'o',d1
   1666 FFFC0FEA 6700 0D96                   		beq		gfx_demo
   1667 FFFC0FEE 0C01 0061                   		cmpi.b	#'a',d1
   1668 FFFC0FF2 6700 08E4                   		beq		AudioInputTest
   1669 FFFC0FF6 0C01 0062                   		cmpi.b	#'b',d1
   1670 FFFC0FFA 6700 F784                   		beq		BouncingBalls
   1671 FFFC0FFE 0C01 0067                   		cmpi.b	#'g',d1
   1672 FFFC1002 6700 0684                   		beq		GraphicsDemo
   1673 FFFC1006 0C01 003A                   		cmpi.b	#':',d1			; $: - edit memory
   1674 FFFC100A 6700 015C                   		beq		EditMem
   1675 FFFC100E 0C01 0044                   		cmpi.b	#'D',d1			; $D - dump memory
   1676 FFFC1012 6700 01C2                   		beq		DumpMem
   1677 FFFC1016 0C01 0046                   		cmpi.b	#'F',d1
   1678 FFFC101A 6700 00F6                   		beq		FillMem
   1679 FFFC101E 0C01 0042                   		cmpi.b	#'B',d1			; $B - start tiny basic
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 29
bootrom.asm
   1680 FFFC1022 6606                        		bne.s	.0001
   1681 FFFC1024 4EF9 FFFC C000              		jmp		$FFFCC000
   1682 FFFC102A                             .0001:
   1683 FFFC102A 0C01 004A                   		cmpi.b	#'J',d1			; $J - execute code
   1684 FFFC102E 6700 0196                   		beq		ExecuteCode
   1685 FFFC1032 0C01 004C                   		cmpi.b	#'L',d1			; $L - load S19 file
   1686 FFFC1036 6700 0368                   		beq		LoadS19
   1687 FFFC103A 0C01 003F                   		cmpi.b	#'?',d1			; $? - display help
   1688 FFFC103E 6726                        		beq		DisplayHelp
   1689 FFFC1040 0C01 0043                   		cmpi.b	#'C',d1			; $C - clear screen
   1690 FFFC1044 6704                        		beq		TestCLS
   1691 FFFC1046 6000 FF68                   		bra		Monitor
                                             
   1693 FFFC104A                             TestCLS:
   1694 FFFC104A 1218                        		move.b	(a0)+,d1
   1695 FFFC104C 0C01 004C                   		cmpi.b	#'L',d1
   1696 FFFC1050 6600 FF5E                   		bne		Monitor
   1697 FFFC1054 1218                        		move.b	(a0)+,d1
   1698 FFFC1056 0C01 0053                   		cmpi.b	#'S',d1
   1699 FFFC105A 6600 FF54                   		bne		Monitor
   1700 FFFC105E 6100 0216                   		bsr		ClearScreen
   1701 FFFC1062 6000 FF4C                   		bra		Monitor
                                             	
   1703 FFFC1066                             DisplayHelp:
   1704 FFFC1066 43F9 FFFC 1076              		lea		HelpMsg,a1
   1705 FFFC106C 4EB9 FFFC 03D8              		jsr		DisplayString
   1706 FFFC1072 6000 FF3C                   		bra		Monitor
                                             
   1708 FFFC1076                             HelpMsg:
   1709 FFFC1076 3F 20 3D 20 44 69 73 70     		dc.b	"? = Display help",CR,LF
   1710 FFFC107E 6C 61 79 20 68 65 6C 70     
   1711 FFFC1086 0D 0A                       
   1712 FFFC1088 43 4C 53 20 3D 20 63 6C     		dc.b	"CLS = clear screen",CR,LF
   1713 FFFC1090 65 61 72 20 73 63 72 65     
   1714 FFFC1098 65 6E 0D 0A                 
   1715 FFFC109C 3A 20 3D 20 45 64 69 74     		dc.b	": = Edit memory bytes",CR,LF
   1716 FFFC10A4 20 6D 65 6D 6F 72 79 20     
   1717 FFFC10AC 62 79 74 65 73 0D 0A        
   1718 FFFC10B3 46 20 3D 20 46 69 6C 6C     		dc.b	"F = Fill memory",CR,LF
   1719 FFFC10BB 20 6D 65 6D 6F 72 79 0D     
   1720 FFFC10C3 0A                          
   1721 FFFC10C4 4C 20 3D 20 4C 6F 61 64     		dc.b	"L = Load S19 file",CR,LF
   1722 FFFC10CC 20 53 31 39 20 66 69 6C     
   1723 FFFC10D4 65 0D 0A                    
   1724 FFFC10D7 44 20 3D 20 44 75 6D 70     		dc.b	"D = Dump memory",CR,LF
   1725 FFFC10DF 20 6D 65 6D 6F 72 79 0D     
   1726 FFFC10E7 0A                          
   1727 FFFC10E8 42 20 3D 20 73 74 61 72     		dc.b	"B = start tiny basic",CR,LF
   1728 FFFC10F0 74 20 74 69 6E 79 20 62     
   1729 FFFC10F8 61 73 69 63 0D 0A           
   1730 FFFC10FE 4A 20 3D 20 4A 75 6D 70     		dc.b	"J = Jump to code",CR,LF,0
   1731 FFFC1106 20 74 6F 20 63 6F 64 65     
   1732 FFFC110E 0D 0A 00                    
   1733 FFFC1111 FF                         		even
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Fill memory
                                             ; FB = fill bytes		FB 00000010 100 FF	; fill starting at 10 for 256 bytes
                                             ; FW = fill words
                                             ; FL = fill longs
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 30
bootrom.asm
                                             ; F = fill bytes
                                             ;------------------------------------------------------------------------------
                                             ;
   1743 FFFC1112                             FillMem:
   1744 FFFC1112 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1746 FFFC1114 1801                        		move.b	d1,d4			; d4 = fill size
   1747 FFFC1116 6100 0044                   		bsr		ignBlanks
   1748 FFFC111A 6100 00EE                   		bsr		GetHexNumber
   1749 FFFC111E 2241                        		move.l	d1,a1			; a1 = start
   1750 FFFC1120 6100 003A                   		bsr		ignBlanks
   1751 FFFC1124 6100 00E4                   		bsr		GetHexNumber
   1752 FFFC1128 2601                        		move.l	d1,d3			; d3 = count
   1753 FFFC112A 6100 0030                   		bsr		ignBlanks
   1754 FFFC112E 6100 00DA                   		bsr		GetHexNumber	; fill value
   1755 FFFC1132 0C04 004C                   		cmpi.b	#'L',d4
   1756 FFFC1136 660A                        		bne		fmem1
   1757 FFFC1138                             fmemL:
   1758 FFFC1138 22C1                        		move.l	d1,(a1)+
   1759 FFFC113A 5383                        		sub.l	#1,d3
   1760 FFFC113C 66FA                        		bne.s	fmemL
   1761 FFFC113E 6000 FE70                   		bra		Monitor
   1762 FFFC1142                             fmem1
   1763 FFFC1142 0C04 0057                   		cmpi.b	#'W',d4
   1764 FFFC1146 660A                        		bne		fmemB
   1765 FFFC1148                             fmemW:
   1766 FFFC1148 32C1                        		move.w	d1,(a1)+
   1767 FFFC114A 5383                        		sub.l	#1,d3
   1768 FFFC114C 66FA                        		bne.s	fmemW
   1769 FFFC114E 6000 FE60                   		bra		Monitor
   1770 FFFC1152                             fmemB:
   1771 FFFC1152 12C1                        		move.b	d1,(a1)+
   1772 FFFC1154 5383                        		sub.l	#1,d3
   1773 FFFC1156 66FA                        		bne.s	fmemB
   1774 FFFC1158 6000 FE56                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   1779 FFFC115C                             ignBlanks:
   1780 FFFC115C 1218                        		move.b	(a0)+,d1
   1781 FFFC115E 0C01 0020                   		cmpi.b	#' ',d1
   1782 FFFC1162 67F8                        		beq		ignBlanks
   1783 FFFC1164 5388                        		subq	#1,a0
   1784 FFFC1166 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Edit memory byte.
                                             ;------------------------------------------------------------------------------
                                             ;
   1790 FFFC1168                             EditMem:
   1791 FFFC1168 6100 FFF2                   		bsr		ignBlanks
   1792 FFFC116C 6100 009C                   		bsr		GetHexNumber
   1793 FFFC1170 2241                        		move.l	d1,a1
   1794 FFFC1172                             edtmem1:
   1795 FFFC1172 6100 FFE8                   		bsr		ignBlanks
   1796 FFFC1176 6100 0092                   		bsr		GetHexNumber
   1797 FFFC117A 12C1                        		move.b	d1,(a1)+
   1798 FFFC117C 6100 FFDE                   		bsr		ignBlanks
   1799 FFFC1180 6100 0088                   		bsr		GetHexNumber
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 31
bootrom.asm
   1800 FFFC1184 12C1                        		move.b	d1,(a1)+
   1801 FFFC1186 6100 FFD4                   		bsr		ignBlanks
   1802 FFFC118A 6100 007E                   		bsr		GetHexNumber
   1803 FFFC118E 12C1                        		move.b	d1,(a1)+
   1804 FFFC1190 6100 FFCA                   		bsr		ignBlanks
   1805 FFFC1194 6100 0074                   		bsr		GetHexNumber
   1806 FFFC1198 12C1                        		move.b	d1,(a1)+
   1807 FFFC119A 6100 FFC0                   		bsr		ignBlanks
   1808 FFFC119E 6100 006A                   		bsr		GetHexNumber
   1809 FFFC11A2 12C1                        		move.b	d1,(a1)+
   1810 FFFC11A4 6100 FFB6                   		bsr		ignBlanks
   1811 FFFC11A8 6100 0060                   		bsr		GetHexNumber
   1812 FFFC11AC 12C1                        		move.b	d1,(a1)+
   1813 FFFC11AE 6100 FFAC                   		bsr		ignBlanks
   1814 FFFC11B2 6100 0056                   		bsr		GetHexNumber
   1815 FFFC11B6 12C1                        		move.b	d1,(a1)+
   1816 FFFC11B8 6100 FFA2                   		bsr		ignBlanks
   1817 FFFC11BC 6100 004C                   		bsr		GetHexNumber
   1818 FFFC11C0 12C1                        		move.b	d1,(a1)+
   1819 FFFC11C2 6000 FDEC                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Execute code at the specified address.
                                             ;------------------------------------------------------------------------------
                                             ;
   1825 FFFC11C6                             ExecuteCode:
   1826 FFFC11C6 6100 FF94                   		bsr		ignBlanks
   1827 FFFC11CA 6100 003E                   		bsr		GetHexNumber
   1828 FFFC11CE 2041                        		move.l	d1,a0
   1829 FFFC11D0 4E90                        		jsr		(a0)
   1830 FFFC11D2 6000 FDDC                   		bra     Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Do a memory dump of the requested location.
                                             ;------------------------------------------------------------------------------
                                             ;
   1836 FFFC11D6                             DumpMem:
   1837 FFFC11D6 6100 FF84                   		bsr		ignBlanks
   1838 FFFC11DA 6100 002E                   		bsr		GetHexNumber
   1839 FFFC11DE                             DumpMem1:
   1840 FFFC11DE 2041                        		move.l	d1,a0
   1841 FFFC11E0 4EB9 FFFC 021E              		jsr		CRLF
   1842 FFFC11E6 6100 F79A                   		bsr		DisplayMem
   1843 FFFC11EA 6100 F796                   		bsr		DisplayMem
   1844 FFFC11EE 6100 F792                   		bsr		DisplayMem
   1845 FFFC11F2 6100 F78E                   		bsr		DisplayMem
   1846 FFFC11F6 6100 F78A                   		bsr		DisplayMem
   1847 FFFC11FA 6100 F786                   		bsr		DisplayMem
   1848 FFFC11FE 6100 F782                   		bsr		DisplayMem
   1849 FFFC1202 6100 F77E                   		bsr		DisplayMem
   1850 FFFC1206 6000 FDA8                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a hexidecimal number. Maximum of eight digits.
                                             ;------------------------------------------------------------------------------
                                             ;
   1856 FFFC120A                             GetHexNumber:
   1857 FFFC120A 48E7 A000                   		movem.l	d0/d2,-(a7)
   1858 FFFC120E 4282                        		clr.l	d2
   1859 FFFC1210 7007                        		moveq	#7,d0
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 32
bootrom.asm
   1860 FFFC1212                             gthxn2:
   1861 FFFC1212 1218                        		move.b	(a0)+,d1
   1862 FFFC1214 6100 001E                   		bsr		AsciiToHexNybble
   1863 FFFC1218 B23C 00FF                   		cmp.b	#0xff,d1
   1864 FFFC121C 670E                        		beq		gthxn1
   1865 FFFC121E E98A                        		lsl.l	#4,d2
   1866 FFFC1220 0281 0000 000F              		andi.l	#0x0f,d1
   1867 FFFC1226 8481                        		or.l	d1,d2
   1868 FFFC1228 51C8 FFE8                   		dbra	d0,gthxn2
   1869 FFFC122C                             gthxn1:
   1870 FFFC122C 2202                        		move.l	d2,d1
   1871 FFFC122E 4CDF 0005                   		movem.l	(a7)+,d0/d2
   1872 FFFC1232 4E75                        		rts	
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Convert ASCII character in the range '0' to '9', 'a' tr 'f' or 'A' to 'F'
                                             ; to a hex nybble.
                                             ;------------------------------------------------------------------------------
                                             ;
   1879 FFFC1234                             AsciiToHexNybble:
   1880 FFFC1234 0C01 0030                   		cmpi.b	#'0',d1
   1881 FFFC1238 6538                        		blo.s	gthx3
   1882 FFFC123A 0C01 0039                   		cmpi.b	#'9',d1
   1883 FFFC123E 6206                        		bhi.s	gthx5
   1884 FFFC1240 0401 0030                   		subi.b	#'0',d1
   1885 FFFC1244 4E75                        		rts
   1886 FFFC1246                             gthx5:
   1887 FFFC1246 0C01 0041                   		cmpi.b	#'A',d1
   1888 FFFC124A 6526                        		blo.s	gthx3
   1889 FFFC124C 0C01 0046                   		cmpi.b	#'F',d1
   1890 FFFC1250 620A                        		bhi.s	gthx6
   1891 FFFC1252 0401 0041                   		subi.b	#'A',d1
   1892 FFFC1256 0601 000A                   		addi.b	#10,d1
   1893 FFFC125A 4E75                        		rts
   1894 FFFC125C                             gthx6:
   1895 FFFC125C 0C01 0061                   		cmpi.b	#'a',d1
   1896 FFFC1260 6510                        		blo.s	gthx3
   1897 FFFC1262 0C01 0066                   		cmpi.b	#'f',d1
   1898 FFFC1266 620A                        		bhi.s	gthx3
   1899 FFFC1268 0401 0061                   		subi.b	#'a',d1
   1900 FFFC126C 0601 000A                   		addi.b	#10,d1
   1901 FFFC1270 4E75                        		rts
   1902 FFFC1272                             gthx3:
   1903 FFFC1272 72FF                        		moveq	#-1,d1		; not a hex number
   1904 FFFC1274 4E75                        		rts
                                             
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             ; The fast way to clear the screen. Uses the blitter.
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             
   1910 FFFC1276                             ClearScreen:
   1911 FFFC1276 4BF9 FFE0 0000              		lea		VDGREG,a5
   1912 FFFC127C                             .0003:								
   1913 FFFC127C 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1914 FFFC1280 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1915 FFFC1284 67F6                        		beq.s	.0003				; branch if not done
   1916 FFFC1286 2B7C 0001 D4C0 04BC         		move.l	#400*300,$4BC(a5)		; set transfer count  pixels
   1917 FFFC128E 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   1918 FFFC1296 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   1919 FFFC129E 2B7C 0000 0190 04A4         		move.l	#400,$4A4(a5)		; set destination width
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 33
bootrom.asm
   1920 FFFC12A6 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   1921 FFFC12AE 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; clear virtual screen too
   1924 FFFC12B4 7020                        		moveq	#$20,d0				; d0 = space character
   1925 FFFC12B6 323C 073A                   		move.w	#50*37,d1
   1926 FFFC12BA 4BF9 1FFF 0000              		lea		VirtScreen,a5
   1927 FFFC12C0                             .0001:
   1928 FFFC12C0 1AC0                        		move.b	d0,(a5)+
   1929 FFFC12C2 51C9 FFFC                   		dbra	d1,.0001
   1930 FFFC12C6 4E75                        		rts
                                             
   1932 FFFC12C8                             ScrollUp:
   1933 FFFC12C8 48E7 8084                   		movem.l	d0/a0/a5,-(a7)
   1934 FFFC12CC 4BF9 FFE0 0000              		lea		VDGREG,a5
   1935 FFFC12D2                             .0003:								
   1936 FFFC12D2 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1937 FFFC12D6 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1938 FFFC12DA 67F6                        		beq.s	.0003				; branch if not done
                                             		; Channel A
   1940 FFFC12DC 2B7C 0001 C840 04B0         		move.l	#400*292,$4B0(a5)	; set source transfer count pixels
   1941 FFFC12E4 2B7C 0000 0C80 0480         		move.l	#400*8,$480(a5)		; set source bitmap address (address in graphics mem)
   1942 FFFC12EC 2B7C 0000 0000 0484         		move.l	#0,$484(a5)			; set src modulo
                                             		; Channel D
   1944 FFFC12F4 2B7C 0001 C840 04BC         		move.l	#400*292,$4BC(a5)	; set destination transfer count pixels
   1945 FFFC12FC 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   1946 FFFC1304 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
                                             
   1948 FFFC130C 2B7C FFFF FFFF 04A0         		move.l	#-1,$4A0(a5)		; set source width
   1949 FFFC1314 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   1950 FFFC131C 3B7C 0011 04AE              		move.w	#$11,$4AE(a5)		; set op A ($11 = copy A)
   1951 FFFC1322 3B7C 8082 04AC              		move.w	#%1000000010000010,$4AC(a5)		; enable channel A,D, start transfer
                                             
                                             		; Scroll virtual screen
   1954 FFFC1328 4BF9 1FFF 0000              		lea		VirtScreen,a5
   1955 FFFC132E 204D                        		movea.l	a5,a0
   1956 FFFC1330 1039 0001 041B              		move.b	TextCols,d0
   1957 FFFC1336 4880                        		ext.w	d0
   1958 FFFC1338 D1C0                        		add.l	d0,a0
   1959 FFFC133A C0FC 0025                   		mulu	#37,d0
   1960 FFFC133E                             .0001:
   1961 FFFC133E 1AD8                        		move.b	(a0)+,(a5)+
   1962 FFFC1340 51C8 FFFC                   		dbra	d0,.0001
   1963 FFFC1344 4CDF 2101                   		movem.l	(a7)+,d0/a0/a5
                                             
   1965 FFFC1348                             BlankLastLine:
   1966 FFFC1348 48E7 8004                   		movem.l	d0/a5,-(a7)
                                             		; Channel D
   1968 FFFC134C 4BF9 FFE0 0000              		lea		VDGREG,a5
   1969 FFFC1352                             .0003:								
   1970 FFFC1352 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1971 FFFC1356 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1972 FFFC135A 67F6                        		beq.s	.0003				; branch if not done
   1973 FFFC135C 2B7C 0000 0C80 04BC         		move.l	#400*8,$4BC(a5)		; set destination transfer count pixels
   1974 FFFC1364 2B7C 0001 C840 0498         		move.l	#400*292,$498(a5)	; set destination address
   1975 FFFC136C 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   1976 FFFC1374 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   1977 FFFC137C 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   1978 FFFC1384 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   1979 FFFC138A 4BF9 1FFF 073A              		lea		VirtScreen+50*37,a5
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 34
bootrom.asm
   1980 FFFC1390 7028                        		moveq	#40,d0
   1981 FFFC1392                             .0001:
   1982 FFFC1392 1AFC 0020                   		move.b	#$20,(a5)+
   1983 FFFC1396 51C8 FFFA                   		dbra	d0,.0001
   1984 FFFC139A 4CDF 2001                   		movem.l	(a7)+,d0/a5
   1985 FFFC139E 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Load an S19 format file
                                             ;==============================================================================
                                             ;
   1991 FFFC13A0                             LoadS19:
   1992 FFFC13A0 600A                        	bra		ProcessRec
   1993 FFFC13A2                             NextRec:
   1994 FFFC13A2 6100 017A                   	bsr		sGetChar
   1995 FFFC13A6 0C00 000A                   	cmpi.b	#LF,d0
   1996 FFFC13AA 66F6                        	bne		NextRec
   1997 FFFC13AC                             ProcessRec
   1998 FFFC13AC 6100 0170                   	bsr		sGetChar
   1999 FFFC13B0 1800                        	move.b	d0,d4
   2000 FFFC13B2 0C04 001A                   	cmpi.b	#26,d4		; CTRL-Z ?
   2001 FFFC13B6 6700 FBF8                   	beq		Monitor
   2002 FFFC13BA 0C04 0053                   	cmpi.b	#'S',d4
   2003 FFFC13BE 66E2                        	bne		NextRec
   2004 FFFC13C0 6100 015C                   	bsr		sGetChar
   2005 FFFC13C4 1800                        	move.b	d0,d4
   2006 FFFC13C6 0C04 0030                   	cmpi.b	#'0',d4
   2007 FFFC13CA 65D6                        	blo		NextRec
   2008 FFFC13CC 0C04 0039                   	cmpi.b	#'9',d4		; d4 = record type
   2009 FFFC13D0 62D0                        	bhi		NextRec
   2010 FFFC13D2 6100 014A                   	bsr		sGetChar
   2011 FFFC13D6 6100 FE5C                   	bsr		AsciiToHexNybble
   2012 FFFC13DA 1401                        	move.b	d1,d2
   2013 FFFC13DC 6100 0140                   	bsr		sGetChar
   2014 FFFC13E0 6100 FE52                   	bsr		AsciiToHexNybble
   2015 FFFC13E4 E90A                        	lsl.b	#4,d2
   2016 FFFC13E6 8202                        	or.b	d2,d1		; d1 = byte count
   2017 FFFC13E8 1601                        	move.b	d1,d3		; d3 = byte count
   2018 FFFC13EA 0C04 0030                   	cmpi.b	#'0',d4		; manufacturer ID record, ignore
   2019 FFFC13EE 67B2                        	beq		NextRec
   2020 FFFC13F0 0C04 0031                   	cmpi.b	#'1',d4
   2021 FFFC13F4 676A                        	beq		ProcessS1
   2022 FFFC13F6 0C04 0032                   	cmpi.b	#'2',d4
   2023 FFFC13FA 676A                        	beq		ProcessS2
   2024 FFFC13FC 0C04 0033                   	cmpi.b	#'3',d4
   2025 FFFC1400 676A                        	beq		ProcessS3
   2026 FFFC1402 0C04 0035                   	cmpi.b	#'5',d4		; record count record, ignore
   2027 FFFC1406 679A                        	beq		NextRec
   2028 FFFC1408 0C04 0037                   	cmpi.b	#'7',d4
   2029 FFFC140C 6764                        	beq		ProcessS7
   2030 FFFC140E 0C04 0038                   	cmpi.b	#'8',d4
   2031 FFFC1412 676C                        	beq		ProcessS8
   2032 FFFC1414 0C04 0039                   	cmpi.b	#'9',d4
   2033 FFFC1418 6774                        	beq		ProcessS9
   2034 FFFC141A 6086                        	bra		NextRec
                                             
   2036 FFFC141C                             pcssxa
   2037 FFFC141C 0243 00FF                   	andi.w	#0xff,d3
   2038 FFFC1420 5343                        	subi.w	#1,d3			; one less for dbra
   2039 FFFC1422                             pcss1a
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 35
bootrom.asm
   2040 FFFC1422 4282                        	clr.l	d2
   2041 FFFC1424 6100 00F8                   	bsr		sGetChar
   2042 FFFC1428 6100 FE0A                   	bsr		AsciiToHexNybble
   2043 FFFC142C E98A                        	lsl.l	#4,d2
   2044 FFFC142E 8401                        	or.b	d1,d2
   2045 FFFC1430 6100 00EC                   	bsr		sGetChar
   2046 FFFC1434 6100 FDFE                   	bsr		AsciiToHexNybble
   2047 FFFC1438 E98A                        	lsl.l	#4,d2
   2048 FFFC143A 8401                        	or.b	d1,d2
   2049 FFFC143C 12C2                        	move.b	d2,(a1)+
   2050 FFFC143E 51CB FFE2                   	dbra	d3,pcss1a
                                             ; Get the checksum byte
   2052 FFFC1442 4282                        	clr.l	d2
   2053 FFFC1444 6100 00D8                   	bsr		sGetChar
   2054 FFFC1448 6100 FDEA                   	bsr		AsciiToHexNybble
   2055 FFFC144C E98A                        	lsl.l	#4,d2
   2056 FFFC144E 8401                        	or.b	d1,d2
   2057 FFFC1450 6100 00CC                   	bsr		sGetChar
   2058 FFFC1454 6100 FDDE                   	bsr		AsciiToHexNybble
   2059 FFFC1458 E98A                        	lsl.l	#4,d2
   2060 FFFC145A 8401                        	or.b	d1,d2
   2061 FFFC145C 6000 FF44                   	bra		NextRec
                                             
   2063 FFFC1460                             ProcessS1:
   2064 FFFC1460 6100 003A                   	bsr		S19Get16BitAddress
   2065 FFFC1464 60B6                        	bra		pcssxa
   2066 FFFC1466                             ProcessS2:
   2067 FFFC1466 6100 0042                   	bsr		S19Get24BitAddress
   2068 FFFC146A 60B0                        	bra		pcssxa
   2069 FFFC146C                             ProcessS3:
   2070 FFFC146C 6100 004A                   	bsr		S19Get32BitAddress
   2071 FFFC1470 60AA                        	bra		pcssxa
   2072 FFFC1472                             ProcessS7:
   2073 FFFC1472 6100 0044                   	bsr		S19Get32BitAddress
   2074 FFFC1476 23C9 0001 0438              	move.l	a1,S19StartAddress
   2075 FFFC147C 6000 FB32                   	bra		Monitor
   2076 FFFC1480                             ProcessS8:
   2077 FFFC1480 6100 0028                   	bsr		S19Get24BitAddress
   2078 FFFC1484 23C9 0001 0438              	move.l	a1,S19StartAddress
   2079 FFFC148A 6000 FB24                   	bra		Monitor
   2080 FFFC148E                             ProcessS9:
   2081 FFFC148E 6100 000C                   	bsr		S19Get16BitAddress
   2082 FFFC1492 23C9 0001 0438              	move.l	a1,S19StartAddress
   2083 FFFC1498 6000 FB16                   	bra		Monitor
                                             
   2085 FFFC149C                             S19Get16BitAddress:
   2086 FFFC149C 4282                        	clr.l	d2
   2087 FFFC149E 6100 007E                   	bsr		sGetChar
   2088 FFFC14A2 6100 FD90                   	bsr		AsciiToHexNybble
   2089 FFFC14A6 1401                        	move.b	d1,d2
   2090 FFFC14A8 604A                        	bra		S1932b
                                             
   2092 FFFC14AA                             S19Get24BitAddress:
   2093 FFFC14AA 4282                        	clr.l	d2
   2094 FFFC14AC 6100 0070                   	bsr		sGetChar
   2095 FFFC14B0 6100 FD82                   	bsr		AsciiToHexNybble
   2096 FFFC14B4 1401                        	move.b	d1,d2
   2097 FFFC14B6 6024                        	bra		S1932a
                                             
   2099 FFFC14B8                             S19Get32BitAddress:
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 36
bootrom.asm
   2100 FFFC14B8 4282                        	clr.l	d2
   2101 FFFC14BA 6100 0062                   	bsr		sGetChar
   2102 FFFC14BE 6100 FD74                   	bsr		AsciiToHexNybble
   2103 FFFC14C2 1401                        	move.b	d1,d2
   2104 FFFC14C4 6100 0058                   	bsr		sGetChar
   2105 FFFC14C8 6100 FD6A                   	bsr		AsciiToHexNybble
   2106 FFFC14CC E98A                        	lsl.l	#4,d2
   2107 FFFC14CE 8401                        	or.b	d1,d2
   2108 FFFC14D0 6100 004C                   	bsr		sGetChar
   2109 FFFC14D4 6100 FD5E                   	bsr		AsciiToHexNybble
   2110 FFFC14D8 E98A                        	lsl.l	#4,d2
   2111 FFFC14DA 8401                        	or.b	d1,d2
   2112 FFFC14DC                             S1932a:
   2113 FFFC14DC 6100 0040                   	bsr		sGetChar
   2114 FFFC14E0 6100 FD52                   	bsr		AsciiToHexNybble
   2115 FFFC14E4 E98A                        	lsl.l	#4,d2
   2116 FFFC14E6 8401                        	or.b	d1,d2
   2117 FFFC14E8 6100 0034                   	bsr		sGetChar
   2118 FFFC14EC 6100 FD46                   	bsr		AsciiToHexNybble
   2119 FFFC14F0 E98A                        	lsl.l	#4,d2
   2120 FFFC14F2 8401                        	or.b	d1,d2
   2121 FFFC14F4                             S1932b:
   2122 FFFC14F4 6100 0028                   	bsr		sGetChar
   2123 FFFC14F8 6100 FD3A                   	bsr		AsciiToHexNybble
   2124 FFFC14FC E98A                        	lsl.l	#4,d2
   2125 FFFC14FE 8401                        	or.b	d1,d2
   2126 FFFC1500 6100 001C                   	bsr		sGetChar
   2127 FFFC1504 6100 FD2E                   	bsr		AsciiToHexNybble
   2128 FFFC1508 E98A                        	lsl.l	#4,d2
   2129 FFFC150A 8401                        	or.b	d1,d2
   2130 FFFC150C 6100 0010                   	bsr		sGetChar
   2131 FFFC1510 6100 FD22                   	bsr		AsciiToHexNybble
   2132 FFFC1514 E98A                        	lsl.l	#4,d2
   2133 FFFC1516 8401                        	or.b	d1,d2
   2134 FFFC1518 4284                        	clr.l	d4
   2135 FFFC151A 2242                        	move.l	d2,a1
   2136 FFFC151C 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a character from auxillary input, checking the keyboard status for a
                                             ; CTRL-C
                                             ;------------------------------------------------------------------------------
                                             ;
   2143 FFFC151E                             sGetChar:
   2144 FFFC151E 6100 F4F8                   	bsr		CheckForKey
   2145 FFFC1522 670C                        	beq		sgc1
   2146 FFFC1524 6100 F504                   	bsr		GetKey
   2147 FFFC1528 0C01 0003                   	cmpi.b	#CTRLC,d1
   2148 FFFC152C 6700 FA82                   	beq		Monitor
   2149 FFFC1530                             sgc1:
   2150 FFFC1530 6100 FFFF                   	bsr		AUXIN
   2151 FFFC1534 67E8                        	beq		sGetChar
   2152 FFFC1536 1200                        	move.b	d0,d1
   2153 FFFC1538 4E75                        	rts
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 37
bootrom.asm
                                             ;
   2161 FFFC153A                             DisplayHexNumber:
   2162 FFFC153A 33FC A6A6 FFDC 0600         		move.w	#$A6A6,leds		; diagnostics
   2163 FFFC1542 2C7C FFE0 0000              		move.l	#VDGREG,a6
   2164 FFFC1548 343C 0007                   		move.w	#7,d2		; number-1 of digits to display
   2165 FFFC154C                             disphnum1:
   2166 FFFC154C 1001                        		move.b	d1,d0		; get digit into d0.b
   2167 FFFC154E 0240 000F                   		andi.w	#$0f,d0
   2168 FFFC1552 0C40 0009                   		cmpi.w	#$09,d0
   2169 FFFC1556 6302                        		bls.s	disphnum2
   2170 FFFC1558 5E40                        		addi.w	#7,d0
   2171 FFFC155A                             disphnum2:
   2172 FFFC155A 0640 0030                   		addi.w	#$30,d0	; convert to display char
   2173 FFFC155E 3602                        		move.w	d2,d3		; char count into d3
   2174 FFFC1560 E743                        		asl.w	#3,d3		; scale * 8
   2175 FFFC1562                             disphnum3:
   2176 FFFC1562 382E 042C                   		move.w	$42C(a6),d4			; read character queue index into d4
   2177 FFFC1566 B87C 001C                   		cmp.w	#28,d4					; allow up 28 entries to be in progress
   2178 FFFC156A 64F6                        		bhs.s	disphnum3				; branch if too many chars queued
   2179 FFFC156C 4880                        		ext.w	d0						; zero out high order bits
   2180 FFFC156E 3D40 0420                   		move.w	d0,$420(a6)			; set char code
   2181 FFFC1572 3D7C 7FFF 0422              		move.w	#WHITE,$422(a6)		; set fg color
   2182 FFFC1578 3D7C 000F 0424              		move.w	#DARK_BLUE,$424(a6)	; set bk color
   2183 FFFC157E 3D43 0426                   		move.w	d3,$426(a6)			; set x pos
   2184 FFFC1582 3D7C 0008 0428              		move.w	#8,$428(a6)			; set y pos
   2185 FFFC1588 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
   2186 FFFC158E 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
   2187 FFFC1594 E899                        		ror.l	#4,d1					; rot to next digit
   2188 FFFC1596 57CA FFB4                   		dbeq	d2,disphnum1
   2189 FFFC159A 4ED5                        		jmp		(a5)
                                             
                                             ;===============================================================================
                                             ;    Perform ram test. (Uses checkerboard testing).
                                             ; 
                                             ;    Return address must be stored in a3 since the stack cannot be used (it
                                             ; would get overwritten in test). Note this routine uses no ram at all.
                                             ;===============================================================================
   2197 FFFC159C                             ramtest:
   2198 FFFC159C 33FC A5A5 FFDC 0600         		move.w	#$A5A5,leds		; diagnostics
   2199 FFFC15A4 207C 0003 0000                      movea.l #$30000,a0
   2200 FFFC15AA 203C AAAA 5555                      move.l #$aaaa5555,d0
                                             ;-----------------------------------------------------------
                                             ;   Write checkerboard pattern to ram then read it back to
                                             ; find the highest usable ram address (maybe). This address
                                             ; must be lower than the start of the rom (0xe00000).
                                             ;-----------------------------------------------------------
   2206 FFFC15B0                             ramtest1:
   2207 FFFC15B0 20C0                                move.l 	d0,(a0)+
   2208 FFFC15B2 2208                                move.l	a0,d1
   2209 FFFC15B4 4A41                                tst.w	d1
   2210 FFFC15B6 660A                                bne.s	rmtst1
   2211 FFFC15B8 4BF9 FFFC 15C2                      lea		rmtst1,a5
   2212 FFFC15BE 6000 FF7A                           bra		DisplayHexNumber
   2213 FFFC15C2                             rmtst1:
   2214 FFFC15C2 33FC A9A9 FFDC 0600         		move.w	#$A9A9,leds		; diagnostics
   2215 FFFC15CA B1FC 0005 FFFC                      cmpa.l 	#$5FFFC,a0
   2216 FFFC15D0 66DE                                bne.s 	ramtest1
   2217 FFFC15D2 7200                                move.l	#0,d1
   2218 FFFC15D4 6100 EC62                           bsr		CalcScreenLoc
   2219 FFFC15D8 6000 FC04                           bra		DumpMem1
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 38
bootrom.asm
                                             
                                             ;------------------------------------------------------
                                             ;   Save maximum useable address for later comparison.
                                             ;------------------------------------------------------
   2224 FFFC15DC                             ramtest6:
   2225 FFFC15DC 33FC A7A7 FFDC 0600         		move.w	#$A7A7,leds		; diagnostics
   2226 FFFC15E4 2448                                movea.l a0,a2
   2227 FFFC15E6 207C 0003 0000                      movea.l #$30000,a0
                                             ;--------------------------------------------
                                             ;   Read back checkerboard pattern from ram.
                                             ;--------------------------------------------
   2231 FFFC15EC                             ramtest2:
   2232 FFFC15EC 2A18                                move.l  (a0)+,d5
   2233 FFFC15EE B5C8                                cmpa.l	a0,a2
   2234 FFFC15F0 671A                                beq.s	ramtest3
   2235 FFFC15F2 2208                                move.l	a0,d1
   2236 FFFC15F4 4A41                                tst.w	d1
   2237 FFFC15F6 660A                                bne.s	rmtst2
   2238 FFFC15F8 4BF9 FFFC 1602                      lea		rmtst2,a5
   2239 FFFC15FE 6000 FF3A                           bra		DisplayHexNumber
   2240 FFFC1602                             rmtst2:
   2241 FFFC1602 0C85 AAAA 5555                      cmpi.l 	#$aaaa5555,d5
   2242 FFFC1608 67E2                                beq.s 	ramtest2
   2243 FFFC160A 6678                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   The following section does the same test except
                                             ; with the checkerboard order switched around.
                                             ;---------------------------------------------------
   2248 FFFC160C                             ramtest3:                
   2249 FFFC160C 33FC A8A8 FFDC 0600         		move.w	#$A8A8,leds		; diagnostics
   2250 FFFC1614 207C 0003 0000                      movea.l #$30000,a0
   2251 FFFC161A 203C 5555 AAAA                      move.l 	#$5555aaaa,d0
   2252 FFFC1620                             ramtest4:
   2253 FFFC1620 20C0                                move.l 	d0,(a0)+
   2254 FFFC1622 2208                                move.l 	a0,d1
   2255 FFFC1624 4A41                                tst.w	d1
   2256 FFFC1626 660A                                bne.s   rmtst3
   2257 FFFC1628 4BF9 FFFC 1632                      lea		rmtst3,a5
   2258 FFFC162E 6000 FF0A                           bra		DisplayHexNumber
   2259 FFFC1632                             rmtst3:
   2260 FFFC1632 B1FC 1FFF FFFC                      cmpa.l 	#$1FFFFFFC,a0
   2261 FFFC1638 66E6                                bne.s 	ramtest4
   2262 FFFC163A                             ramtest8:
   2263 FFFC163A 2448                                movea.l a0,a2
   2264 FFFC163C 207C 0003 0000                      movea.l #$30000,a0
   2265 FFFC1642                             ramtest5:
   2266 FFFC1642 2018                                move.l 	(a0)+,d0
   2267 FFFC1644 B5C8                                cmpa.l	a0,a2
   2268 FFFC1646 671A                                beq.s	rmtst5
   2269 FFFC1648 2208                                move.l 	a0,d1
   2270 FFFC164A 4A41                                tst.w	d1
   2271 FFFC164C 660A                                bne.s	rmtst4
   2272 FFFC164E 4BF9 FFFC 1658                      lea		rmtst4,a5
   2273 FFFC1654 6000 FEE4                           bra		DisplayHexNumber
   2274 FFFC1658                             rmtst4:
   2275 FFFC1658 0C80 5555 AAAA                      cmpi.l 	#$5555aaaa,d0
   2276 FFFC165E 67E2                                beq.s 	ramtest5
   2277 FFFC1660 6622                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   Save last ram address in end of memory pointer.
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 39
bootrom.asm
                                             ;---------------------------------------------------
   2281 FFFC1662                             rmtst5:
   2282 FFFC1662 23C8 0001 0008                      move.l a0,memend
                                             ;-----------------------------------
                                             ;   Create very first memory block.
                                             ;-----------------------------------
   2286 FFFC1668 91FC 0000 000C                      suba.l 	#12,a0
   2287 FFFC166E 21C8 0404                           move.l 	a0,$0404
   2288 FFFC1672 21FC 4652 4545 0400                 move.l 	#$46524545,$0400
   2289 FFFC167A 21FC 0000 0408 0408                 move.l 	#$408,$408			; point back-link to self
   2290 FFFC1682 4ED3                                jmp 	(a3)
                                             ;----------------------------------
                                             ; Error in ram - go no farther.
                                             ;----------------------------------
   2294 FFFC1684                             ramtest7:
   2295 FFFC1684 4ED3                        		jmp 	(a3)
   2296 FFFC1686 60FC                                bra.s 	ramtest7
                                             
                                             
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2304 FFFC1688                             GraphicsDemo:
   2305 FFFC1688 6100 0080                   		bsr		DrawLines
   2306 FFFC168C 6100 0006                   		bsr		DrawRects
   2307 FFFC1690 6000 F91E                   		bra		Monitor
                                             
   2309 FFFC1694                             DrawRects:
   2310 FFFC1694 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2311 FFFC169A 4BF9 FFE0 0000              		lea		VDGREG,a5
   2312 FFFC16A0 2C3C 0000 4E20              		move.l	#20000,d6		; repeat a few times
   2313 FFFC16A6                             .0001:
   2314 FFFC16A6 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2315 FFFC16AA 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2316 FFFC16AC 4840                        		swap	d0				; and bits 16 to 24 for x0
   2317 FFFC16AE 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2318 FFFC16B2 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2319 FFFC16B6 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2320 FFFC16BA 242E 0C00                   		move.l	$0C00(a6),d2
   2321 FFFC16BE 3602                        		move.w	d2,d3
   2322 FFFC16C0 4842                        		swap	d2
   2323 FFFC16C2 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2324 FFFC16C6 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2325 FFFC16CA 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2326 FFFC16CE 282E 0C00                   		move.l	$0C00(a6),d4
   2327 FFFC16D2 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2328 FFFC16D6 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2329 FFFC16DA                             .0002:
   2330 FFFC16DA 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2331 FFFC16DE BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2332 FFFC16E2 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2333 FFFC16E4 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2334 FFFC16EA 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2335 FFFC16EE 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2336 FFFC16F2 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2337 FFFC16F6 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2338 FFFC16FA 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2339 FFFC16FE 3B7C 0003 042E              		move.w	#3,$42E(a5)		; pulse command queue (3 = draw rect)
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 40
bootrom.asm
   2340 FFFC1704 5386                        		sub.l	#1,d6
   2341 FFFC1706 669E                        		bne		.0001			; go back and do more lines
   2342 FFFC1708 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Draw lines randomly on the screen.
                                             ;===============================================================================
                                             
   2348 FFFC170A                             DrawLines:
   2349 FFFC170A 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2350 FFFC1710 4BF9 FFE0 0000              		lea		VDGREG,a5
   2351 FFFC1716 2C3C 0003 0D40              		move.l	#200000,d6		; repeat a few times
   2352 FFFC171C                             .0001:
                                             		; Wait for blitter to be done
   2354 FFFC171C                             .0003:								
   2355 FFFC171C 33FC 000A FFDC 0600         		move.w	#10,leds
   2356 FFFC1724 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2357 FFFC1728 0800 000E                   		btst	#14,d0
   2358 FFFC172C 6706                        		beq.s	.0004
   2359 FFFC172E 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2360 FFFC1732 67E8                        		beq.s	.0003				; branch if not done
   2361 FFFC1734                             .0004:
   2362 FFFC1734 33FC 000B FFDC 0600         		move.w	#11,leds
   2363 FFFC173C 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2364 FFFC1740 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2365 FFFC1742 4840                        		swap	d0				; and bits 16 to 24 for x0
   2366 FFFC1744 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2367 FFFC1748 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2368 FFFC174C 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2369 FFFC1750 242E 0C00                   		move.l	$0C00(a6),d2
   2370 FFFC1754 3602                        		move.w	d2,d3
   2371 FFFC1756 4842                        		swap	d2
   2372 FFFC1758 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2373 FFFC175C 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2374 FFFC1760 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2375 FFFC1764 282E 0C00                   		move.l	$0C00(a6),d4
   2376 FFFC1768 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2377 FFFC176C 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2378 FFFC1770                             .0002:
   2379 FFFC1770 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2380 FFFC1774 BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2381 FFFC1778 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2382 FFFC177A 33FC 000C FFDC 0600         		move.w	#12,leds
   2383 FFFC1782 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2384 FFFC1788 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2385 FFFC178C 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2386 FFFC1790 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2387 FFFC1794 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2388 FFFC1798 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2389 FFFC179C 3B7C 0002 042E              		move.w	#2,$42E(a5)		; pulse command queue (2 = draw line)
   2390 FFFC17A2 5386                        		sub.l	#1,d6
   2391 FFFC17A4 6600 FF76                   		bne		.0001			; go back and do more lines
   2392 FFFC17A8 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Test Blitter
                                             ;===============================================================================
                                             
   2398 FFFC17AA                             TestBlitter:
                                             		; puts a red rectangle on screen
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 41
bootrom.asm
   2400 FFFC17AA 4BF9 FFE0 0000              		lea		VDGREG,a5
   2401 FFFC17B0                             .0003:								
   2402 FFFC17B0 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2403 FFFC17B4 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2404 FFFC17B8 67F6                        		beq.s	.0003				; branch if not done
   2405 FFFC17BA 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set transfer count 8000 pixels
   2406 FFFC17C2 3B7C 7C00 04A8              		move.w	#RED,$4A8(a5)		; set color red
   2407 FFFC17C8 2B7C 0000 0168 0498         		move.l	#360,$498(a5)		; set destination address
   2408 FFFC17D0 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2409 FFFC17D8 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
   2410 FFFC17E0 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; makes a copy of the upper left corner of the screen
   2413 FFFC17E6                             .0001:								
   2414 FFFC17E6 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2415 FFFC17EA 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2416 FFFC17EE 67F6                        		beq.s	.0001				; branch if not done
                                             		; Channel A
   2418 FFFC17F0 2B7C 0000 03E8 04B0         		move.l	#1000,$4B0(a5)		; set source transfer count 8000 pixels
   2419 FFFC17F8 2B7C 0000 0000 0480         		move.l	#0,$480(a5)			; set source bitmap address (address in graphics mem)
   2420 FFFC1800 2B7C 0000 0168 0484         		move.l	#360,$484(a5)		; set src modulo
                                             		; Channel C
   2422 FFFC1808 2B7C 0000 03E8 04B8         		move.l	#1000,$4B8(a5)		; set source transfer count 8000 pixels
   2423 FFFC1810 2B7C 0000 0000 0490         		move.l	#0,$490(a5)			; set source bitmap address (address in graphics mem)
   2424 FFFC1818 2B7C 0000 0168 0494         		move.l	#360,$494(a5)		; set src modulo
                                             		; Channel D
   2426 FFFC1820 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set destination transfer count 8000 pixels
   2427 FFFC1828 2B7C 0000 0140 0498         		move.l	#320,$498(a5)		; set destination address
   2428 FFFC1830 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
                                             		
   2430 FFFC1838 2B7C 0000 0028 04A0         		move.l	#40,$4A0(a5)		; set source width
   2431 FFFC1840 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2432 FFFC1848 3B7C 0091 04AE              		move.w	#$91,$4AE(a5)		; set op A|C	($11 = copy A)
   2433 FFFC184E 3B7C 80A2 04AC              		move.w	#%1000000010100010,$4AC(a5)		; enable channel A,C,D, start transfer
   2434 FFFC1854                             .0002:								
   2435 FFFC1854 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2436 FFFC1858 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2437 FFFC185C 67F6                        		beq.s	.0002				; branch if not done
   2438 FFFC185E 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Generic I2C routines
                                             ;===============================================================================
                                             
                                             I2C_PREL	EQU		$0
                                             I2C_PREH	EQU		$2
                                             I2C_CTRL	EQU		$4
                                             I2C_RXR		EQU		$6
                                             I2C_TXR		EQU		$6
                                             I2C_CMD		EQU		$8
                                             I2C_STAT	EQU		$A
                                             
                                             ; i2c
   2453 FFFC1860                             i2c_setup:
   2454 FFFC1860 4DF9 FFDC 0E00              		lea		I2C,a6				
   2455 FFFC1866 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2456 FFFC186A 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2457 FFFC1870 4DF9 FFDC 0E10              		lea		I2C2,a6				
   2458 FFFC1876 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2459 FFFC187A 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 42
bootrom.asm
   2460 FFFC1880 4E75                        		rts
                                             
                                             ; Wait for I2C transfer to complete
                                             ;
                                             ; Parameters
                                             ; 	a6 - I2C controller base address
                                             
   2467 FFFC1882                             i2c_wait_tip:
   2468 FFFC1882 3F00                        		move.w	d0,-(a7)
   2469 FFFC1884                             .0001:					
   2470 FFFC1884 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for tip to clear
   2471 FFFC1888 0800 0001                   		btst	#1,d0
   2472 FFFC188C 66F6                        		bne.s	.0001
   2473 FFFC188E 301F                        		move.w	(a7)+,d0
   2474 FFFC1890 4E75                        		rts
                                             
                                             ; Parameters
                                             ;	d0.w - data to transmit
                                             ;	d1.w - command value
                                             ;	a6	 - I2C controller base address
                                             ;
   2481 FFFC1892                             i2c_wr_cmd:
   2482 FFFC1892 3D40 0006                   		move.w	d0,I2C_TXR(a6)
   2483 FFFC1896 3D41 0008                   		move.w	d1,I2C_CMD(a6)
   2484 FFFC189A 6100 FFE6                   		bsr		i2c_wait_tip
   2485 FFFC189E 302E 000A                   		move.w	I2C_STAT(a6),d0
   2486 FFFC18A2 4E75                        		rts
                                             
   2488 FFFC18A4                             i2c_xmit1:
   2489 FFFC18A4 3F00                        		move.w	d0,-(a7)
   2490 FFFC18A6 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2491 FFFC18AC 7076                        		moveq	#$76,d0				; set slave address = %0111011
   2492 FFFC18AE 323C 0090                   		move.w	#$90,d1				; set STA, WR
   2493 FFFC18B2 6100 FFDE                   		bsr		i2c_wr_cmd
   2494 FFFC18B6 6100 0010                   		bsr		i2c_wait_rx_nack
   2495 FFFC18BA 301F                        		move.w	(a7)+,d0
   2496 FFFC18BC 323C 0050                   		move.w	#$50,d1				; set STO, WR
   2497 FFFC18C0 6100 FFD0                   		bsr		i2c_wr_cmd
   2498 FFFC18C4 6100 0002                   		bsr		i2c_wait_rx_nack
                                             
   2500 FFFC18C8                             i2c_wait_rx_nack:
   2501 FFFC18C8 3F00                        		move.w	d0,-(a7)
   2502 FFFC18CA                             .0001:							
   2503 FFFC18CA 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for RXack = 0
   2504 FFFC18CE 0800 0007                   		btst	#7,d0
   2505 FFFC18D2 66F6                        		bne.s	.0001
   2506 FFFC18D4 301F                        		move.w	(a7)+,d0
   2507 FFFC18D6 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Audio
                                             ;===============================================================================
                                             
   2513 FFFC18D8                             AudioInputTest:
   2514 FFFC18D8 4BF9 FFE0 0000              		lea		VDGREG,a5
   2515 FFFC18DE 2B7C 0005 8000 0640         		move.l	#$58000,$640(a5)	; set buffer address ($FF8B0000)
   2516 FFFC18E6 3B7C 4000 0644              		move.w	#$4000,$644(a5)		; set buffer length
   2517 FFFC18EC 3B7C 0716 0646              		move.w	#1814,$646(a5)		; set period = 22.05kHz
   2518 FFFC18F2 3B7C 1090 0584              		move.w	#$1090,$584(a5)		; enable input channel, plot mode
   2519 FFFC18F8 3B7C 0090 0584              		move.w	#$0090,$584(a5)		; turn off reset
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 43
bootrom.asm
                                             		; should have input now
                                             
                                             		; puts a dark blue rectangle on screen
   2523 FFFC18FE                             .0003:								
   2524 FFFC18FE 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2525 FFFC1902 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2526 FFFC1906 67F6                        		beq.s	.0003				; branch if not done
   2527 FFFC1908 2B7C 0001 0000 04BC         		move.l	#256*256,$4BC(a5)		; set transfer count pixels
   2528 FFFC1910 3B7C 000F 04A8              		move.w	#DARK_BLUE,$4A8(a5)		; set color 
   2529 FFFC1916 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2530 FFFC191E 2B7C 0000 0100 04A4         		move.l	#256,$4A4(a5)		; set destination width
   2531 FFFC1926 2B7C 0000 0040 049C         		move.l	#64,$49C(a5)		; set dst modulo
   2532 FFFC192E 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; delay a bit
   2535 FFFC1934 203C 0003 D090              		move.l	#250000,d0
   2536 FFFC193A                             .0004:
   2537 FFFC193A 5380                        		sub.l	#1,d0
   2538 FFFC193C 66FC                        		bne.s	.0004
   2539 FFFC193E 60BE                        		bra.s	.0003
                                             		
                                             
   2542 FFFC1940                             audio_pll_config:
   2543 FFFC1940 7000                        		moveq	#0,d0
   2544 FFFC1942 720E                        		moveq	#$0E,d1
   2545 FFFC1944 6100 001C                   		bsr		audio_write_reg
   2546 FFFC1948 7002                        		moveq	#2,d0
   2547 FFFC194A 41F9 FFFC 19BC              		lea		audio_tbl1,a0
   2548 FFFC1950 6100 0076                   		bsr		audio_write_reg6
   2549 FFFC1954 4E75                        		rts
                                             
   2551 FFFC1956                             audio_startup_config:
   2552 FFFC1956 4E75                        		rts
                                             
   2554 FFFC1958                             audio_init:
   2555 FFFC1958 6100 FFE6                   		bsr		audio_pll_config
   2556 FFFC195C 6100 FFF8                   		bsr		audio_startup_config
   2557 FFFC1960 4E75                        		rts
                                             
                                             ; d0.w = register number
                                             ; d1.w = data to write
                                             		
   2562 FFFC1962                             audio_write_reg:
   2563 FFFC1962 4DF9 FFDC 0E00              		lea		I2C,a6				
   2564 FFFC1968 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2565 FFFC196E 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2566 FFFC1974 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2567 FFFC197A 6100 FF06                   		bsr		i2c_wait_tip	; wait for tip to clear
   2568 FFFC197E 6100 FF48                   		bsr		i2c_wait_rx_nack
   2569 FFFC1982 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2570 FFFC1988 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2571 FFFC198E 6100 FEF2                   		bsr		i2c_wait_tip	; wait for tip to clear
   2572 FFFC1992 6100 FF34                   		bsr		i2c_wait_rx_nack
   2573 FFFC1996 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2574 FFFC199A 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2575 FFFC19A0 6100 FEE0                   		bsr		i2c_wait_tip	; wait for tip to clear
   2576 FFFC19A4 6100 FF22                   		bsr		i2c_wait_rx_nack
   2577 FFFC19A8 3D41 0006                   		move.w	d1,I2C_TXR(a6)		; send data
   2578 FFFC19AC 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set STO, WR
   2579 FFFC19B2 6100 FECE                   		bsr		i2c_wait_tip	; wait for tip to clear
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 44
bootrom.asm
   2580 FFFC19B6 6100 FF10                   		bsr		i2c_wait_rx_nack
   2581 FFFC19BA 4E75                        		rts
                                             
   2583 FFFC19BC                             audio_tbl1:
   2584 FFFC19BC 0000 007D 0000 000C         		dc.w	$00,$7D,$00,$0C,$20,$01
   2585 FFFC19C4 0020 0001                   
                                             ; a0
                                             ;
   2588 FFFC19C8                             audio_write_reg6:
   2589 FFFC19C8 41F9 FFFC 19BC              		lea		audio_tbl1,a0
   2590 FFFC19CE 4DF9 FFDC 0E00              		lea		I2C,a6				
   2591 FFFC19D4 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2592 FFFC19DA 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2593 FFFC19E0 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2594 FFFC19E6 6100 FE9A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2595 FFFC19EA 6100 FEDC                   		bsr		i2c_wait_rx_nack
   2596 FFFC19EE 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2597 FFFC19F4 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2598 FFFC19FA 6100 FE86                   		bsr		i2c_wait_tip	; wait for tip to clear
   2599 FFFC19FE 6100 FEC8                   		bsr		i2c_wait_rx_nack
                                             
   2601 FFFC1A02 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2602 FFFC1A06 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2603 FFFC1A0C 6100 FE74                   		bsr		i2c_wait_tip	; wait for tip to clear
   2604 FFFC1A10 6100 FEB6                   		bsr		i2c_wait_rx_nack
                                             		
   2606 FFFC1A14 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #0
   2607 FFFC1A18 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2608 FFFC1A1E 6100 FE62                   		bsr		i2c_wait_tip	; wait for tip to clear
   2609 FFFC1A22 6100 FEA4                   		bsr		i2c_wait_rx_nack
                                             
   2611 FFFC1A26 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #1
   2612 FFFC1A2A 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2613 FFFC1A30 6100 FE50                   		bsr		i2c_wait_tip	; wait for tip to clear
   2614 FFFC1A34 6100 FE92                   		bsr		i2c_wait_rx_nack
                                             
   2616 FFFC1A38 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #2
   2617 FFFC1A3C 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2618 FFFC1A42 6100 FE3E                   		bsr		i2c_wait_tip	; wait for tip to clear
   2619 FFFC1A46 6100 FE80                   		bsr		i2c_wait_rx_nack
                                             
   2621 FFFC1A4A 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #3
   2622 FFFC1A4E 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2623 FFFC1A54 6100 FE2C                   		bsr		i2c_wait_tip	; wait for tip to clear
   2624 FFFC1A58 6100 FE6E                   		bsr		i2c_wait_rx_nack
                                             
   2626 FFFC1A5C 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #4
   2627 FFFC1A60 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2628 FFFC1A66 6100 FE1A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2629 FFFC1A6A 6100 FE5C                   		bsr		i2c_wait_rx_nack
                                             
   2631 FFFC1A6E 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #5
   2632 FFFC1A72 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set WR, STO
   2633 FFFC1A78 6100 FE08                   		bsr		i2c_wait_tip		; wait for tip to clear
   2634 FFFC1A7C 6100 FE4A                   		bsr		i2c_wait_rx_nack
   2635 FFFC1A80 4E75                        		rts
                                             
   2637 FFFC1A82                             set_hp_output:
   2638 FFFC1A82 7021                        		moveq	#$21,d0				;
   2639 FFFC1A84 7200                        		moveq	#0,d1
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 45
bootrom.asm
   2640 FFFC1A86 6100 FEDA                   		bsr		audio_write_reg
   2641 FFFC1A8A 7020                        		moveq	#$20,d0				;
   2642 FFFC1A8C 6100 FED4                   		bsr		audio_write_reg
   2643 FFFC1A90 7023                        		moveq	#$23,d0
   2644 FFFC1A92 323C 00E7                   		move.w	#$E7,d1		
   2645 FFFC1A96 6100 FECA                   		bsr		audio_write_reg
   2646 FFFC1A9A 7024                        		moveq	#$24,d0
   2647 FFFC1A9C 323C 00E7                   		move.w	#$E7,d1		
   2648 FFFC1AA0 6100 FEC0                   		bsr		audio_write_reg
   2649 FFFC1AA4 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Realtime clock routines
                                             ;===============================================================================
                                             
   2655 FFFC1AA6                             rtc_read:
   2656 FFFC1AA6 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2657 FFFC1AAC 4BF9 0001 0600              		lea		RTCBuf,a5
   2658 FFFC1AB2 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2659 FFFC1AB8 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2660 FFFC1ABC 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2661 FFFC1AC0 6100 FDD0                   		bsr		i2c_wr_cmd
   2662 FFFC1AC4 4A00                        		tst.b	d0
   2663 FFFC1AC6 6B72                        		bmi		.rxerr
   2664 FFFC1AC8 303C 0000                   		move.w	#$00,d0				; address zero
   2665 FFFC1ACC 323C 0010                   		move.w	#$10,d1				; wr bit
   2666 FFFC1AD0 6100 FDC0                   		bsr		i2c_wr_cmd
   2667 FFFC1AD4 4A00                        		tst.b	d0
   2668 FFFC1AD6 6B62                        		bmi		.rxerr
   2669 FFFC1AD8 303C 00DF                   		move.w	#$DF,d0				; read address, read op
   2670 FFFC1ADC 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2671 FFFC1AE0 6100 FDB0                   		bsr		i2c_wr_cmd
   2672 FFFC1AE4 4A00                        		tst.b	d0
   2673 FFFC1AE6 6B52                        		bmi		.rxerr
                                             		
   2675 FFFC1AE8 343C 0020                   		move.w	#$20,d2
   2676 FFFC1AEC                             .0001:
   2677 FFFC1AEC 3D7C 0020 0008              		move.w	#$20,I2C_CMD(a6)	; rd bit
   2678 FFFC1AF2 6100 FD8E                   		bsr		i2c_wait_tip
   2679 FFFC1AF6 6100 FDD0                   		bsr		i2c_wait_rx_nack
   2680 FFFC1AFA 302E 000A                   		move.w	I2C_STAT(a6),d0
   2681 FFFC1AFE 4A00                        		tst.b	d0
   2682 FFFC1B00 6B38                        		bmi		.rxerr
   2683 FFFC1B02 302E 0006                   		move.w	I2C_RXR(a6),d0
   2684 FFFC1B06 1B80 2000                   		move.b	d0,(a5,d2.w)
   2685 FFFC1B0A 5242                        		add.w	#1,d2
   2686 FFFC1B0C B47C 005F                   		cmp.w	#$5F,d2
   2687 FFFC1B10 66DA                        		bne		.0001
   2688 FFFC1B12 3D7C 0068 0008              		move.w	#$68,I2C_CMD(a6)	; STO, rd bit + nack
   2689 FFFC1B18 6100 FD68                   		bsr		i2c_wait_tip
   2690 FFFC1B1C 6100 FDAA                   		bsr		i2c_wait_rx_nack
   2691 FFFC1B20 302E 000A                   		move.w	I2C_STAT(a6),d0
   2692 FFFC1B24 4A00                        		tst.b	d0
   2693 FFFC1B26 6B12                        		bmi		.rxerr
   2694 FFFC1B28 302E 0006                   		move.w	I2C_RXR(a6),d0
   2695 FFFC1B2C 1B80 2000                   		move.b	d0,(a5,d2.w)
   2696 FFFC1B30 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2697 FFFC1B36 7000                        		moveq	#0,d0
   2698 FFFC1B38 4E75                        		rts
   2699 FFFC1B3A                             .rxerr:
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 46
bootrom.asm
   2700 FFFC1B3A 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2701 FFFC1B40 4E75                        		rts
                                             
   2703 FFFC1B42                             rtc_write:
   2704 FFFC1B42 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2705 FFFC1B48 4BF9 0001 0600              		lea		RTCBuf,a5
   2706 FFFC1B4E 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2707 FFFC1B54 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2708 FFFC1B58 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2709 FFFC1B5C 6100 FD34                   		bsr		i2c_wr_cmd
   2710 FFFC1B60 4A00                        		tst.b	d0
   2711 FFFC1B62 6B46                        		bmi		.rxerr
   2712 FFFC1B64 303C 0000                   		move.w	#$00,d0				; address zero
   2713 FFFC1B68 323C 0010                   		move.w	#$10,d1				; wr bit
   2714 FFFC1B6C 6100 FD24                   		bsr		i2c_wr_cmd
   2715 FFFC1B70 4A00                        		tst.b	d0
   2716 FFFC1B72 6B36                        		bmi		.rxerr
   2717 FFFC1B74 343C 0020                   		move.w	#$20,d2
   2718 FFFC1B78                             .0001:
   2719 FFFC1B78 1035 2000                   		move.b	(a5,d2.w),d0
   2720 FFFC1B7C 323C 0010                   		move.w	#$10,d1
   2721 FFFC1B80 6100 FD10                   		bsr		i2c_wr_cmd
   2722 FFFC1B84 4A00                        		tst.b	d0
   2723 FFFC1B86 6B22                        		bmi		.rxerr
   2724 FFFC1B88 5242                        		add.w	#1,d2
   2725 FFFC1B8A B47C 005F                   		cmp.w	#$5F,d2
   2726 FFFC1B8E 66E8                        		bne.s	.0001
   2727 FFFC1B90 1035 2000                   		move.b	(a5,d2.w),d0
   2728 FFFC1B94 323C 0050                   		move.w	#$50,d1				; STO, wr bit
   2729 FFFC1B98 6100 FCF8                   		bsr		i2c_wr_cmd
   2730 FFFC1B9C 4A00                        		tst.b	d0
   2731 FFFC1B9E 6B0A                        		bmi		.rxerr
   2732 FFFC1BA0 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2733 FFFC1BA6 7000                        		moveq	#0,d0
   2734 FFFC1BA8 4E75                        		rts
   2735 FFFC1BAA                             .rxerr:
   2736 FFFC1BAA 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2737 FFFC1BB0 4E75                        		rts
                                             
   2739 FFFC1BB2                             msgRtcReadFail:
   2740 FFFC1BB2 52 54 43 20 72 65 61 64     		dc.b	"RTC read/write failed.",$0D,$0A,$00
   2741 FFFC1BBA 2F 77 72 69 74 65 20 66     
   2742 FFFC1BC2 61 69 6C 65 64 2E 0D 0A     
   2743 FFFC1BCA 00                          
                                             
                                             
                                             ;===============================================================================
                                             ; ORGFX routines
                                             ;===============================================================================
                                             
   2750 FFFC1BCB FF                          		align	2
   2751 FFFC1BCC                             gfx_wait:
   2752 FFFC1BCC 48E7 8004                   		movem.l	d0/a5,-(a7)
   2753 FFFC1BD0 4BF9 FFE0 0000              		lea		VDGREG,a5
   2754 FFFC1BD6 2B7C 0000 0004 0700         		move.l	#GFX_STATUS,$700(a5)	; address status register
   2755 FFFC1BDE                             .0001:
   2756 FFFC1BDE 3B7C 00F3 0708              		move.w	#$F3,$708(a5)		; set control (generate bus access to gfx)
   2757 FFFC1BE4 202D 0704                   		move.l	$704(a5),d0			; get status value
   2758 FFFC1BE8 0800 0000                   		btst	#0,d0				; test bit 0
   2759 FFFC1BEC 66F0                        		bne.s	.0001
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 47
bootrom.asm
   2760 FFFC1BEE 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2761 FFFC1BF2 4E75                        		rts
                                             
   2763 FFFC1BF4                             gfx_set_400x300:
   2764 FFFC1BF4 6100 FFD6                   		bsr		gfx_wait
   2765 FFFC1BF8 4BF9 FFE0 0000              		lea		VDGREG,a5
   2766 FFFC1BFE 2B7C 0000 0014 0700         		move.l	#GFX_TARGET_SIZE_X,$700(a5)	; address register
   2767 FFFC1C06 2B7C 0000 0190 0704         		move.l	#400,$704(a5)				; set data
   2768 FFFC1C0E 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2769 FFFC1C14 2B7C 0000 0018 0700         		move.l	#GFX_TARGET_SIZE_Y,$700(a5)	; address register
   2770 FFFC1C1C 2B7C 0000 012C 0704         		move.l	#300,$704(a5)				; set data
   2771 FFFC1C24 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2772 FFFC1C2A 4E75                        		rts
                                             
   2774 FFFC1C2C                             gfx_init:
   2775 FFFC1C2C 6100 FF9E                   		bsr		gfx_wait
   2776 FFFC1C30 4BF9 FFE0 0000              		lea		VDGREG,a5
   2777 FFFC1C36 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2778 FFFC1C3E 23FC 0000 0000 0001 042C    		move.l	#0,gfx_control_reg_mem
                                             
   2780 FFFC1C48 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2781 FFFC1C50 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2782 FFFC1C56 2B7C 0000 0010 0700         		move.l	#GFX_TARGET_BASE,$700(a5)	; address register
   2783 FFFC1C5E 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2784 FFFC1C64 4E75                        		rts
                                             
   2786 FFFC1C66                             gfx_set_color_depth:
   2787 FFFC1C66 4BF9 FFE0 0000              		lea		VDGREG,a5
   2788 FFFC1C6C 02B9 FFFF FFFD 0001 042C    		and.l	#-3,gfx_control_reg_mem		; mask off 2 LSB (color depth field)
                                             
   2790 FFFC1C76 00B9 0000 0001 0001 042C    		or.l	#1,gfx_control_reg_mem		; select 16 bpp
                                             
   2792 FFFC1C80 6100 FF4A                   		bsr		gfx_wait
   2793 FFFC1C84 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2794 FFFC1C8C 2B79 0001 042C 0704         		move.l	gfx_control_reg_mem,$704(a5)
   2795 FFFC1C94 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2796 FFFC1C9A 4E75                        		rts
                                             
   2798 FFFC1C9C                             gfx_set_color:
   2799 FFFC1C9C 6100 FF2E                   		bsr		gfx_wait
   2800 FFFC1CA0 4BF9 FFE0 0000              		lea		VDGREG,a5
   2801 FFFC1CA6 2B7C 0000 0084 0700         		move.l	#GFX_COLOR0,$700(a5)
   2802 FFFC1CAE 2B40 0704                   		move.l	d0,$704(a5)
   2803 FFFC1CB2 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2804 FFFC1CB8 4E75                        		rts
                                             
   2806 FFFC1CBA                             gfx_line:
   2807 FFFC1CBA 6100 FF10                   		bsr		gfx_wait
   2808 FFFC1CBE 4BF9 FFE0 0000              		lea		VDGREG,a5
   2809 FFFC1CC4 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2810 FFFC1CCC 2B40 0704                   		move.l	d0,$704(a5)
   2811 FFFC1CD0 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2812 FFFC1CD6 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2813 FFFC1CDE 2B41 0704                   		move.l	d1,$704(a5)
   2814 FFFC1CE2 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2815 FFFC1CE8 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2816 FFFC1CF0 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2817 FFFC1CF8 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2818 FFFC1CFE 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2819 FFFC1D04 0086 0000 0000              		or.l	#GFX_ACTIVE_POINT0,d6
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 48
bootrom.asm
   2820 FFFC1D0A 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2821 FFFC1D0C 2B46 0704                   		move.l	d6,$704(a5)
   2822 FFFC1D10 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2823 FFFC1D16 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2824 FFFC1D1E 2B42 0704                   		move.l	d2,$704(a5)
   2825 FFFC1D22 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2826 FFFC1D28 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2827 FFFC1D30 2B43 0704                   		move.l	d3,$704(a5)
   2828 FFFC1D34 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2829 FFFC1D3A 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2830 FFFC1D42 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2831 FFFC1D4A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2832 FFFC1D50 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2833 FFFC1D56 0086 0001 0000              		or.l	#GFX_ACTIVE_POINT1,d6
   2834 FFFC1D5C 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2835 FFFC1D5E 2B46 0704                   		move.l	d6,$704(a5)
   2836 FFFC1D62 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2837 FFFC1D68 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2838 FFFC1D6E 0086 0000 0200              		or.l	#GFX_LINE,d6
   2839 FFFC1D74 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2840 FFFC1D76 2B46 0704                   		move.l	d6,$704(a5)
   2841 FFFC1D7A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2842 FFFC1D80 4E75                        		rts
                                             
   2844 FFFC1D82                             gfx_demo:
   2845 FFFC1D82 6100 FEA8                   		bsr		gfx_init
   2846 FFFC1D86 6100 FE6C                   		bsr		gfx_set_400x300
   2847 FFFC1D8A                             .0001:
   2848 FFFC1D8A 4DF9 FFDC 0000              		lea		$FFDC0000,a6	; set I/O base
   2849 FFFC1D90 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2850 FFFC1D94 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2851 FFFC1D96 4840                        		swap	d0				; and bits 16 to 24 for x0
   2852 FFFC1D98 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2853 FFFC1D9C 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2854 FFFC1DA0 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2855 FFFC1DA4 242E 0C00                   		move.l	$0C00(a6),d2
   2856 FFFC1DA8 3602                        		move.w	d2,d3
   2857 FFFC1DAA 4842                        		swap	d2
   2858 FFFC1DAC 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2859 FFFC1DB0 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2860 FFFC1DB4 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2861 FFFC1DB8 282E 0C00                   		move.l	$0C00(a6),d4
   2862 FFFC1DBC 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2863 FFFC1DC0 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2864 FFFC1DC4 2C00                        		move.l	d0,d6
   2865 FFFC1DC6 2004                        		move.l	d4,d0
   2866 FFFC1DC8 6100 FED2                   		bsr		gfx_set_color
   2867 FFFC1DCC 2006                        		move.l	d6,d0
   2868 FFFC1DCE 6100 FEEA                   		bsr		gfx_line
   2869 FFFC1DD2 60B6                        		bra		.0001
                                             
                                             		
                                             ; Randomize the screen	
                                             ;		move.l	#VDGBUF,A0
                                             ;		move.l	#%011011111,D0		; light blue
                                             ;		move.l	#640*512,D1
                                             ;clrscr_loop1:
                                             ;		move.l	$0C00(a6),d0			; get a random number
                                             ;		clr.w	$0C04(a6)				; generate next number
                                             ;		move.w	d0,(a0)+				; store it to the screen
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 49
bootrom.asm
                                             ;		sub.l	#1,d1
                                             ;		bne		clrscr_loop1
                                             
   2883 FFFC1DD4                             msg_start:
   2884 FFFC1DD4 4E 34 56 20 36 38 6B 20     	dc.b	"N4V 68k System Starting",0
   2885 FFFC1DDC 53 79 73 74 65 6D 20 53     
   2886 FFFC1DE4 74 61 72 74 69 6E 67 00     
                                             
                                             
                                             ;===============================================================================
                                             ; MMU
                                             ;===============================================================================
                                             		align	2
   2893 FFFC1DEC                             mmu_init:
   2894 FFFC1DEC 33FC 1010 FFDC 0600         		move.w	#$1010,leds
   2895 FFFC1DF4 223C 0002 0000              		move.l	#131072,d1					; count of addresses to set map
   2896 FFFC1DFA 207C 1FF4 0000              		movea.l	#$1FF40000,a0				; base of page tables
   2897 FFFC1E00 7007                        		moveq	#7,d0						; start at page zero, read,write,execute
   2898 FFFC1E02                             .0001:
   2899 FFFC1E02 20C0                        		move.l	d0,(a0)+					; update page table entry
   2900 FFFC1E04 0680 0000 1000              		add.l	#$1000,d0
   2901 FFFC1E0A 5381                        		sub.l	#1,d1
   2902 FFFC1E0C 66F4                        		bne.s	.0001
                                             	
                                             		; Setup the page directory
                                             		; There are only 128 entries to be set, but all entries must be
                                             		; setup because there's no page faulting on not present. All the
                                             		; entries must point to present pages. So the part of the address
                                             		; space that isn't present is setup to point to a dummy page
                                             		; table.
                                             
   2911 FFFC1E0E 33FC 1111 FFDC 0600         		move.w	#$1111,leds
   2912 FFFC1E16 323C 0400                   		move.w	#1024,d1			; 1024 entries to setup
   2913 FFFC1E1A 207C 1FFF E000              		move.l	#$1FFFE000,a0		; page table for not present entries
   2914 FFFC1E20 203C 1FFF D006              		move.l	#$1FFFD006,d0		; point all entries for not present pages to $1FFFD000
   2915 FFFC1E26                             .0003:
   2916 FFFC1E26 20C0                        		move.l	d0,(a0)+
   2917 FFFC1E28 51C9 FFFC                   		dbra	d1,.0003
                                             
   2919 FFFC1E2C 33FC 1212 FFDC 0600         		move.w	#$1212,leds
   2920 FFFC1E34 747F                        		move.l	#127,d2
   2921 FFFC1E36 207C 1FFF F000              		movea.l	#$1FFFF000,a0		; a0 = page directory address
   2922 FFFC1E3C 223C 1FFF E000              		move.l	#$1FFFE000,d1		; point to not present page table
   2923 FFFC1E42 203C 1FF4 0007              		move.l	#$1FF40007,d0
   2924 FFFC1E48                             .0002:
   2925 FFFC1E48 2141 0200                   		move.l	d1,$0200(a0)		; 7/8 of memory isn't available
   2926 FFFC1E4C 2141 0400                   		move.l	d1,$0400(a0)
   2927 FFFC1E50 2141 0600                   		move.l	d1,$0600(a0)
   2928 FFFC1E54 2141 0800                   		move.l	d1,$0800(a0)
   2929 FFFC1E58 2141 0A00                   		move.l	d1,$0A00(a0)
   2930 FFFC1E5C 2141 0C00                   		move.l	d1,$0C00(a0)
   2931 FFFC1E60 2141 0E00                   		move.l	d1,$0E00(a0)
   2932 FFFC1E64 20C0                        		move.l	d0,(a0)+
   2933 FFFC1E66 0680 0000 1000              		add.l	#$1000,d0
   2934 FFFC1E6C 51CA FFDA                   		dbra	d2,.0002
   2935 FFFC1E70 33FC 1919 FFDC 0600         		move.w	#$1919,leds
   2936 FFFC1E78 33FC 0000 FFFF FFF6         		move.w	#$00,$FFFFFFF6				; set asid
   2937 FFFC1E80 23F9 1FFF F000 FFFF FFF0    		move.l	$1FFFF000,$FFFFFFF0			; set page directory address, enable
                                             
   2939 FFFC1E8A 4E75                        		rts
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 50
bootrom.asm
                                             		
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2946 FFFC1E8C                             font8:
   2947 FFFC1E8C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $00
                                             
   2949 FFFC1E94 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2951 FFFC1E9C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2953 FFFC1EA4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2955 FFFC1EAC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $04
                                             
   2957 FFFC1EB4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2959 FFFC1EBC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2961 FFFC1EC4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2963 FFFC1ECC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $08
                                             
   2965 FFFC1ED4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2967 FFFC1EDC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2969 FFFC1EE4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2971 FFFC1EEC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $0C
                                             
   2973 FFFC1EF4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2975 FFFC1EFC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2977 FFFC1F04 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2979 FFFC1F0C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $10
                                             
   2981 FFFC1F14 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2983 FFFC1F1C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2985 FFFC1F24 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2987 FFFC1F2C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $14
                                             
   2989 FFFC1F34 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2991 FFFC1F3C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2993 FFFC1F44 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2995 FFFC1F4C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $18
                                             
   2997 FFFC1F54 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2999 FFFC1F5C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 51
bootrom.asm
                                             
   3001 FFFC1F64 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3003 FFFC1F6C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $1C
                                             
   3005 FFFC1F74 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3007 FFFC1F7C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3009 FFFC1F84 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3011 FFFC1F8C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; SPACE
                                             
   3013 FFFC1F94 18 18 18 18 18 00 18 00     	dc.b	$18,$18,$18,$18,$18,$00,$18,$00	; !
                                             
   3015 FFFC1F9C 6C 6C 00 00 00 00 00 00     	dc.b	$6C,$6C,$00,$00,$00,$00,$00,$00	; "
                                             
   3017 FFFC1FA4 6C 6C FE 6C FE 6C 6C 00     	dc.b	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00	; #
                                             
   3019 FFFC1FAC 18 3E 60 3C 06 7C 18 00     	dc.b	$18,$3E,$60,$3C,$06,$7C,$18,$00	; $
                                             
   3021 FFFC1FB4 00 66 AC D8 36 6A CC 00     	dc.b	$00,$66,$AC,$D8,$36,$6A,$CC,$00	; %
                                             
   3023 FFFC1FBC 38 6C 68 76 DC CE 7B 00     	dc.b	$38,$6C,$68,$76,$DC,$CE,$7B,$00	; &
                                             
   3025 FFFC1FC4 18 18 30 00 00 00 00 00     	dc.b	$18,$18,$30,$00,$00,$00,$00,$00	; '
                                             
   3027 FFFC1FCC 0C 18 30 30 30 18 0C 00     	dc.b	$0C,$18,$30,$30,$30,$18,$0C,$00	; (
                                             
   3029 FFFC1FD4 30 18 0C 0C 0C 18 30 00     	dc.b	$30,$18,$0C,$0C,$0C,$18,$30,$00	; )
                                             
   3031 FFFC1FDC 00 66 3C FF 3C 66 00 00     	dc.b	$00,$66,$3C,$FF,$3C,$66,$00,$00	; *
                                             
   3033 FFFC1FE4 00 18 18 7E 18 18 00 00     	dc.b	$00,$18,$18,$7E,$18,$18,$00,$00	; +
                                             
   3035 FFFC1FEC 00 00 00 00 00 18 18 30     	dc.b	$00,$00,$00,$00,$00,$18,$18,$30	; ,
                                             
   3037 FFFC1FF4 00 00 00 7E 00 00 00 00     	dc.b	$00,$00,$00,$7E,$00,$00,$00,$00	; -
                                             
   3039 FFFC1FFC 00 00 00 00 00 18 18 00     	dc.b	$00,$00,$00,$00,$00,$18,$18,$00	; .
                                             
   3041 FFFC2004 03 06 0C 18 30 60 C0 00     	dc.b	$03,$06,$0C,$18,$30,$60,$C0,$00	; /
                                             
   3043 FFFC200C 3C 66 6E 7E 76 66 3C 00     	dc.b	$3C,$66,$6E,$7E,$76,$66,$3C,$00	; 0
                                             
   3045 FFFC2014 18 38 78 18 18 18 18 00     	dc.b	$18,$38,$78,$18,$18,$18,$18,$00	; 1
                                             
   3047 FFFC201C 3C 66 06 0C 18 30 7E 00     	dc.b	$3C,$66,$06,$0C,$18,$30,$7E,$00	; 2
                                             
   3049 FFFC2024 3C 66 06 1C 06 66 3C 00     	dc.b	$3C,$66,$06,$1C,$06,$66,$3C,$00	; 3
                                             
   3051 FFFC202C 1C 3C 6C CC FE 0C 0C 00     	dc.b	$1C,$3C,$6C,$CC,$FE,$0C,$0C,$00	; 4
                                             
   3053 FFFC2034 7E 60 7C 06 06 66 3C 00     	dc.b	$7E,$60,$7C,$06,$06,$66,$3C,$00	; 5
                                             
   3055 FFFC203C 1C 30 60 7C 66 66 3C 00     	dc.b	$1C,$30,$60,$7C,$66,$66,$3C,$00	; 6
                                             
   3057 FFFC2044 7E 06 06 0C 18 18 18 00     	dc.b	$7E,$06,$06,$0C,$18,$18,$18,$00	; 7
                                             
   3059 FFFC204C 3C 66 66 3C 66 66 3C 00     	dc.b	$3C,$66,$66,$3C,$66,$66,$3C,$00	; 8
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 52
bootrom.asm
                                             
   3061 FFFC2054 3C 66 66 3E 06 0C 38 00     	dc.b	$3C,$66,$66,$3E,$06,$0C,$38,$00	; 9
                                             
   3063 FFFC205C 00 18 18 00 00 18 18 00     	dc.b	$00,$18,$18,$00,$00,$18,$18,$00	; :
                                             
   3065 FFFC2064 00 18 18 00 00 18 18 30     	dc.b	$00,$18,$18,$00,$00,$18,$18,$30	; ;
                                             
   3067 FFFC206C 00 06 18 60 18 06 00 00     	dc.b	$00,$06,$18,$60,$18,$06,$00,$00	; <
                                             
   3069 FFFC2074 00 00 7E 00 7E 00 00 00     	dc.b	$00,$00,$7E,$00,$7E,$00,$00,$00	; =
                                             
   3071 FFFC207C 00 60 18 06 18 60 00 00     	dc.b	$00,$60,$18,$06,$18,$60,$00,$00	; >
                                             
   3073 FFFC2084 3C 66 06 0C 18 00 18 00     	dc.b	$3C,$66,$06,$0C,$18,$00,$18,$00	; ?
                                             
   3075 FFFC208C 7C C6 DE D6 DE C0 78 00     	dc.b	$7C,$C6,$DE,$D6,$DE,$C0,$78,$00	; @
                                             
   3077 FFFC2094 3C 66 66 7E 66 66 66 00     	dc.b	$3C,$66,$66,$7E,$66,$66,$66,$00	; A
                                             
   3079 FFFC209C 7C 66 66 7C 66 66 7C 00     	dc.b	$7C,$66,$66,$7C,$66,$66,$7C,$00	; B
                                             
   3081 FFFC20A4 1E 30 60 60 60 30 1E 00     	dc.b	$1E,$30,$60,$60,$60,$30,$1E,$00	; C
                                             
   3083 FFFC20AC 78 6C 66 66 66 6C 78 00     	dc.b	$78,$6C,$66,$66,$66,$6C,$78,$00	; D
                                             
   3085 FFFC20B4 7E 60 60 78 60 60 7E 00     	dc.b	$7E,$60,$60,$78,$60,$60,$7E,$00	; E
                                             
   3087 FFFC20BC 7E 60 60 78 60 60 60 00     	dc.b	$7E,$60,$60,$78,$60,$60,$60,$00	; F
                                             
   3089 FFFC20C4 3C 66 60 6E 66 66 3E 00     	dc.b	$3C,$66,$60,$6E,$66,$66,$3E,$00	; G
                                             
   3091 FFFC20CC 66 66 66 7E 66 66 66 00     	dc.b	$66,$66,$66,$7E,$66,$66,$66,$00	; H
                                             
   3093 FFFC20D4 3C 18 18 18 18 18 3C 00     	dc.b	$3C,$18,$18,$18,$18,$18,$3C,$00	; I
                                             
   3095 FFFC20DC 06 06 06 06 06 66 3C 00     	dc.b	$06,$06,$06,$06,$06,$66,$3C,$00	; J
                                             
   3097 FFFC20E4 C6 CC D8 F0 D8 CC C6 00     	dc.b	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00	; K
                                             
   3099 FFFC20EC 60 60 60 60 60 60 7E 00     	dc.b	$60,$60,$60,$60,$60,$60,$7E,$00	; L
                                             
   3101 FFFC20F4 C6 EE FE D6 C6 C6 C6 00     	dc.b	$C6,$EE,$FE,$D6,$C6,$C6,$C6,$00	; M
                                             
   3103 FFFC20FC C6 E6 F6 DE CE C6 C6 00     	dc.b	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00	; N
                                             
   3105 FFFC2104 3C 66 66 66 66 66 3C 00     	dc.b	$3C,$66,$66,$66,$66,$66,$3C,$00	; O
                                             
   3107 FFFC210C 7C 66 66 7C 60 60 60 00     	dc.b	$7C,$66,$66,$7C,$60,$60,$60,$00	; P
                                             
   3109 FFFC2114 78 CC CC CC CC DC 7E 00     	dc.b	$78,$CC,$CC,$CC,$CC,$DC,$7E,$00	; Q
                                             
   3111 FFFC211C 7C 66 66 7C 6C 66 66 00     	dc.b	$7C,$66,$66,$7C,$6C,$66,$66,$00	; R
                                             
   3113 FFFC2124 3C 66 70 3C 0E 66 3C 00     	dc.b	$3C,$66,$70,$3C,$0E,$66,$3C,$00	; S
                                             
   3115 FFFC212C 7E 18 18 18 18 18 18 00     	dc.b	$7E,$18,$18,$18,$18,$18,$18,$00	; T
                                             
   3117 FFFC2134 66 66 66 66 66 66 3C 00     	dc.b	$66,$66,$66,$66,$66,$66,$3C,$00	; U
                                             
   3119 FFFC213C 66 66 66 66 3C 3C 18 00     	dc.b	$66,$66,$66,$66,$3C,$3C,$18,$00	; V
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 53
bootrom.asm
                                             
   3121 FFFC2144 C6 C6 C6 D6 FE EE C6 00     	dc.b	$C6,$C6,$C6,$D6,$FE,$EE,$C6,$00	; W
                                             
   3123 FFFC214C C3 66 3C 18 3C 66 C3 00     	dc.b	$C3,$66,$3C,$18,$3C,$66,$C3,$00	; X
                                             
   3125 FFFC2154 C3 66 3C 18 18 18 18 00     	dc.b	$C3,$66,$3C,$18,$18,$18,$18,$00	; Y
                                             
   3127 FFFC215C FE 0C 18 30 60 C0 FE 00     	dc.b	$FE,$0C,$18,$30,$60,$C0,$FE,$00	; Z
                                             
   3129 FFFC2164 3C 30 30 30 30 30 3C 00     	dc.b	$3C,$30,$30,$30,$30,$30,$3C,$00	; [
                                             
   3131 FFFC216C C0 60 30 18 0C 06 03 00     	dc.b	$C0,$60,$30,$18,$0C,$06,$03,$00	; \
                                             
   3133 FFFC2174 3C 0C 0C 0C 0C 0C 3C 00     	dc.b	$3C,$0C,$0C,$0C,$0C,$0C,$3C,$00	; ]
                                             
   3135 FFFC217C 10 38 6C C6 00 00 00 00     	dc.b	$10,$38,$6C,$C6,$00,$00,$00,$00	; ^
                                             
   3137 FFFC2184 00 00 00 00 00 00 00 FE     	dc.b	$00,$00,$00,$00,$00,$00,$00,$FE	; _
                                             
   3139 FFFC218C 18 18 0C 00 00 00 00 00     	dc.b	$18,$18,$0C,$00,$00,$00,$00,$00	; `
                                             
   3141 FFFC2194 00 00 3C 06 3E 66 3E 00     	dc.b	$00,$00,$3C,$06,$3E,$66,$3E,$00	; a
                                             
   3143 FFFC219C 60 60 7C 66 66 66 7C 00     	dc.b	$60,$60,$7C,$66,$66,$66,$7C,$00	; b
                                             
   3145 FFFC21A4 00 00 3C 60 60 60 3C 00     	dc.b	$00,$00,$3C,$60,$60,$60,$3C,$00	; c
                                             
   3147 FFFC21AC 06 06 3E 66 66 66 3E 00     	dc.b	$06,$06,$3E,$66,$66,$66,$3E,$00	; d
                                             
   3149 FFFC21B4 00 00 3C 66 7E 60 3C 00     	dc.b	$00,$00,$3C,$66,$7E,$60,$3C,$00	; e
                                             
   3151 FFFC21BC 1C 30 7C 30 30 30 30 00     	dc.b	$1C,$30,$7C,$30,$30,$30,$30,$00	; f
                                             
   3153 FFFC21C4 00 00 3E 66 66 3E 06 3C     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$3C	; g
                                             
   3155 FFFC21CC 60 60 7C 66 66 66 66 00     	dc.b	$60,$60,$7C,$66,$66,$66,$66,$00	; h
                                             
   3157 FFFC21D4 18 00 18 18 18 18 0C 00     	dc.b	$18,$00,$18,$18,$18,$18,$0C,$00	; i
                                             
   3159 FFFC21DC 0C 00 0C 0C 0C 0C 0C 78     	dc.b	$0C,$00,$0C,$0C,$0C,$0C,$0C,$78	; j
                                             
   3161 FFFC21E4 60 60 66 6C 78 6C 66 00     	dc.b	$60,$60,$66,$6C,$78,$6C,$66,$00	; k
                                             
   3163 FFFC21EC 18 18 18 18 18 18 0C 00     	dc.b	$18,$18,$18,$18,$18,$18,$0C,$00	; l
                                             
   3165 FFFC21F4 00 00 EC FE D6 C6 C6 00     	dc.b	$00,$00,$EC,$FE,$D6,$C6,$C6,$00	; m
                                             
   3167 FFFC21FC 00 00 7C 66 66 66 66 00     	dc.b	$00,$00,$7C,$66,$66,$66,$66,$00	; n
                                             
   3169 FFFC2204 00 00 3C 66 66 66 3C 00     	dc.b	$00,$00,$3C,$66,$66,$66,$3C,$00	; o
                                             
   3171 FFFC220C 00 00 7C 66 66 7C 60 60     	dc.b	$00,$00,$7C,$66,$66,$7C,$60,$60	; p
                                             
   3173 FFFC2214 00 00 3E 66 66 3E 06 06     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$06	; q
                                             
   3175 FFFC221C 00 00 7C 66 60 60 60 00     	dc.b	$00,$00,$7C,$66,$60,$60,$60,$00	; r
                                             
   3177 FFFC2224 00 00 3C 60 3C 06 7C 00     	dc.b	$00,$00,$3C,$60,$3C,$06,$7C,$00	; s
                                             
   3179 FFFC222C 30 30 7C 30 30 30 1C 00     	dc.b	$30,$30,$7C,$30,$30,$30,$1C,$00	; t
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 54
bootrom.asm
                                             
   3181 FFFC2234 00 00 66 66 66 66 3E 00     	dc.b	$00,$00,$66,$66,$66,$66,$3E,$00	; u
                                             
   3183 FFFC223C 00 00 66 66 66 3C 18 00     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$00	; v
                                             
   3185 FFFC2244 00 00 C6 C6 D6 FE 6C 00     	dc.b	$00,$00,$C6,$C6,$D6,$FE,$6C,$00	; w
                                             
   3187 FFFC224C 00 00 C6 6C 38 6C C6 00     	dc.b	$00,$00,$C6,$6C,$38,$6C,$C6,$00	; x
                                             
   3189 FFFC2254 00 00 66 66 66 3C 18 30     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$30	; y
                                             
   3191 FFFC225C 00 00 7E 0C 18 30 7E 00     	dc.b	$00,$00,$7E,$0C,$18,$30,$7E,$00	; z
                                             
   3193 FFFC2264 0E 18 18 70 18 18 0E 00     	dc.b	$0E,$18,$18,$70,$18,$18,$0E,$00	; {
                                             
   3195 FFFC226C 18 18 18 18 18 18 18 00     	dc.b	$18,$18,$18,$18,$18,$18,$18,$00	; |
                                             
   3197 FFFC2274 70 18 18 0E 18 18 70 00     	dc.b	$70,$18,$18,$0E,$18,$18,$70,$00	; }
                                             
   3199 FFFC227C 72 9C 00 00 00 00 00 00     	dc.b	$72,$9C,$00,$00,$00,$00,$00,$00	; ~
                                             
   3201 FFFC2284 FE FE FE FE FE FE FE 00     	dc.b	$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00	; 
                                             
                                             
                                             
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 1
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm

                                             ;*****************************************************************
                                             ;								 *
                                             ;		Tiny BASIC for the Motorola MC68000		 *
                                             ;								 *
                                             ; Derived from Palo Alto Tiny BASIC as published in the May 1976 *
                                             ; issue of Dr. Dobb's Journal.  Adapted to the 68000 by:         *
                                             ;	Gordon Brandly						 *
                                             ;	12147 - 51 Street					 *
                                             ;	Edmonton AB  T5W 3G8					 *
                                             ;	Canada							 *
                                             ;	(updated mailing address for 1996)			 *
                                             ;								 *
                                             ; This version is for MEX68KECB Educational Computer Board I/O.  *
                                             ;								 *
                                             ;*****************************************************************
                                             ;    Copyright (C) 1984 by Gordon Brandly. This program may be	 *
                                             ;    freely distributed for personal use only. All commercial	 *
                                             ;		       rights are reserved.			 *
                                             ;*****************************************************************
                                             
                                             ; Vers. 1.0  1984/7/17	- Original version by Gordon Brandly
                                             ;	1.1  1984/12/9	- Addition of '$' print term by Marvin Lipford
                                             ;	1.2  1985/4/9	- Bug fix in multiply routine by Rick Murray
                                             
                                             ;	OPT	FRS,BRS 	forward ref.'s & branches default to short
                                             
                                             CR	EQU	0x0D		;ASCII equates
                                             LF	EQU	0x0A
                                             TAB	EQU	0x09
                                             CTRLC	EQU	0x03
                                             CTRLH	EQU	0x08
                                             CTRLS	EQU	0x13
                                             CTRLX	EQU	0x18
                                             
                                             BUFLEN	EQU	80	;	length of keyboard input buffer
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 2
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             ;*
                                             ;* Internal variables follow:
                                             ;*
                                             	BSS
                                             	ORG		0x600
   3246 00000600                             RANPNT:
   3247 00000600                             	DC.L	START	;	random number pointer
   3248 00000604                             CURRNT:
   3249 00000604                             	DC.L	1		;Current line pointer
   3250 00000608                             STKGOS:
   3251 00000608                             	DC.L	1		;Saves stack pointer in 'GOSUB'
   3252 0000060C                             STKINP:
   3253 0000060C                             	DC.L	1		;Saves stack pointer during 'INPUT'
   3254 00000610                             LOPVAR:
   3255 00000610                             	DC.L	1		;'FOR' loop save area
   3256 00000614                             LOPINC:
   3257 00000614                             	DC.L	1		;increment
   3258 00000618                             LOPLMT:
   3259 00000618                             	DC.L	1		;limit
   3260 0000061C                             LOPLN:
   3261 0000061C                             	DC.L	1		;line number
   3262 00000620                             LOPPT:
   3263 00000620                             	DC.L	1		;text pointer
   3264 00000624                             TXTUNF:
   3265 00000624                             	DC.L	1		;points to unfilled text area
   3266 00000628                             VARBGN:
   3267 00000628                             	DC.L	1		;points to variable area
   3268 0000062C                             STKLMT:
   3269 0000062C                             	DC.L	1		;holds lower limit for stack growth
   3270 00000630                             BUFFER:
   3271 00000630                             	FILL.B	BUFLEN,0x00	;	Keyboard input buffer
                                             
                                             TXT	EQU	$		;Beginning of program area
                                             
                                             	CODE
   3276 FFFC228C FF FF FF FF FF FF FF FF     	ORG	0xFFFCC000	;
   3277 FFFC2294 FF FF FF FF FF FF FF FF     
   3278 FFFC229C FF FF FF FF FF FF FF FF     
   3279 FFFC22A4 FF FF FF FF FF FF FF FF     
   3280 FFFC22AC FF FF FF FF FF FF FF FF     
   3281 FFFC22B4 FF FF FF FF FF FF FF FF     
   3282 FFFC22BC FF FF FF FF FF FF FF FF     
   3283 FFFC22C4 FF FF FF FF FF FF FF FF     
   3284 FFFC22CC FF FF FF FF FF FF FF FF     
   3285 FFFC22D4 FF FF FF FF FF FF FF FF     
   3286 FFFC22DC FF FF FF FF FF FF FF FF     
   3287 FFFC22E4 FF FF FF FF FF FF FF FF     
   3288 FFFC22EC FF FF FF FF FF FF FF FF     
   3289 FFFC22F4 FF FF FF FF FF FF FF FF     
   3290 FFFC22FC FF FF FF FF FF FF FF FF     
   3291 FFFC2304 FF FF FF FF FF FF FF FF     
   3292 FFFC230C FF FF FF FF FF FF FF FF     
   3293 FFFC2314 FF FF FF FF FF FF FF FF     
   3294 FFFC231C FF FF FF FF FF FF FF FF     
   3295 FFFC2324 FF FF FF FF FF FF FF FF     
   3296 FFFC232C FF FF FF FF FF FF FF FF     
   3297 FFFC2334 FF FF FF FF FF FF FF FF     
   3298 FFFC233C FF FF FF FF FF FF FF FF     
   3299 FFFC2344 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 3
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3300 FFFC234C FF FF FF FF FF FF FF FF     
   3301 FFFC2354 FF FF FF FF FF FF FF FF     
   3302 FFFC235C FF FF FF FF FF FF FF FF     
   3303 FFFC2364 FF FF FF FF FF FF FF FF     
   3304 FFFC236C FF FF FF FF FF FF FF FF     
   3305 FFFC2374 FF FF FF FF FF FF FF FF     
   3306 FFFC237C FF FF FF FF FF FF FF FF     
   3307 FFFC2384 FF FF FF FF FF FF FF FF     
   3308 FFFC238C FF FF FF FF FF FF FF FF     
   3309 FFFC2394 FF FF FF FF FF FF FF FF     
   3310 FFFC239C FF FF FF FF FF FF FF FF     
   3311 FFFC23A4 FF FF FF FF FF FF FF FF     
   3312 FFFC23AC FF FF FF FF FF FF FF FF     
   3313 FFFC23B4 FF FF FF FF FF FF FF FF     
   3314 FFFC23BC FF FF FF FF FF FF FF FF     
   3315 FFFC23C4 FF FF FF FF FF FF FF FF     
   3316 FFFC23CC FF FF FF FF FF FF FF FF     
   3317 FFFC23D4 FF FF FF FF FF FF FF FF     
   3318 FFFC23DC FF FF FF FF FF FF FF FF     
   3319 FFFC23E4 FF FF FF FF FF FF FF FF     
   3320 FFFC23EC FF FF FF FF FF FF FF FF     
   3321 FFFC23F4 FF FF FF FF FF FF FF FF     
   3322 FFFC23FC FF FF FF FF FF FF FF FF     
   3323 FFFC2404 FF FF FF FF FF FF FF FF     
   3324 FFFC240C FF FF FF FF FF FF FF FF     
   3325 FFFC2414 FF FF FF FF FF FF FF FF     
   3326 FFFC241C FF FF FF FF FF FF FF FF     
   3327 FFFC2424 FF FF FF FF FF FF FF FF     
   3328 FFFC242C FF FF FF FF FF FF FF FF     
   3329 FFFC2434 FF FF FF FF FF FF FF FF     
   3330 FFFC243C FF FF FF FF FF FF FF FF     
   3331 FFFC2444 FF FF FF FF FF FF FF FF     
   3332 FFFC244C FF FF FF FF FF FF FF FF     
   3333 FFFC2454 FF FF FF FF FF FF FF FF     
   3334 FFFC245C FF FF FF FF FF FF FF FF     
   3335 FFFC2464 FF FF FF FF FF FF FF FF     
   3336 FFFC246C FF FF FF FF FF FF FF FF     
   3337 FFFC2474 FF FF FF FF FF FF FF FF     
   3338 FFFC247C FF FF FF FF FF FF FF FF     
   3339 FFFC2484 FF FF FF FF FF FF FF FF     
   3340 FFFC248C FF FF FF FF FF FF FF FF     
   3341 FFFC2494 FF FF FF FF FF FF FF FF     
   3342 FFFC249C FF FF FF FF FF FF FF FF     
   3343 FFFC24A4 FF FF FF FF FF FF FF FF     
   3344 FFFC24AC FF FF FF FF FF FF FF FF     
   3345 FFFC24B4 FF FF FF FF FF FF FF FF     
   3346 FFFC24BC FF FF FF FF FF FF FF FF     
   3347 FFFC24C4 FF FF FF FF FF FF FF FF     
   3348 FFFC24CC FF FF FF FF FF FF FF FF     
   3349 FFFC24D4 FF FF FF FF FF FF FF FF     
   3350 FFFC24DC FF FF FF FF FF FF FF FF     
   3351 FFFC24E4 FF FF FF FF FF FF FF FF     
   3352 FFFC24EC FF FF FF FF FF FF FF FF     
   3353 FFFC24F4 FF FF FF FF FF FF FF FF     
   3354 FFFC24FC FF FF FF FF FF FF FF FF     
   3355 FFFC2504 FF FF FF FF FF FF FF FF     
   3356 FFFC250C FF FF FF FF FF FF FF FF     
   3357 FFFC2514 FF FF FF FF FF FF FF FF     
   3358 FFFC251C FF FF FF FF FF FF FF FF     
   3359 FFFC2524 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 4
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3360 FFFC252C FF FF FF FF FF FF FF FF     
   3361 FFFC2534 FF FF FF FF FF FF FF FF     
   3362 FFFC253C FF FF FF FF FF FF FF FF     
   3363 FFFC2544 FF FF FF FF FF FF FF FF     
   3364 FFFC254C FF FF FF FF FF FF FF FF     
   3365 FFFC2554 FF FF FF FF FF FF FF FF     
   3366 FFFC255C FF FF FF FF FF FF FF FF     
   3367 FFFC2564 FF FF FF FF FF FF FF FF     
   3368 FFFC256C FF FF FF FF FF FF FF FF     
   3369 FFFC2574 FF FF FF FF FF FF FF FF     
   3370 FFFC257C FF FF FF FF FF FF FF FF     
   3371 FFFC2584 FF FF FF FF FF FF FF FF     
   3372 FFFC258C FF FF FF FF FF FF FF FF     
   3373 FFFC2594 FF FF FF FF FF FF FF FF     
   3374 FFFC259C FF FF FF FF FF FF FF FF     
   3375 FFFC25A4 FF FF FF FF FF FF FF FF     
   3376 FFFC25AC FF FF FF FF FF FF FF FF     
   3377 FFFC25B4 FF FF FF FF FF FF FF FF     
   3378 FFFC25BC FF FF FF FF FF FF FF FF     
   3379 FFFC25C4 FF FF FF FF FF FF FF FF     
   3380 FFFC25CC FF FF FF FF FF FF FF FF     
   3381 FFFC25D4 FF FF FF FF FF FF FF FF     
   3382 FFFC25DC FF FF FF FF FF FF FF FF     
   3383 FFFC25E4 FF FF FF FF FF FF FF FF     
   3384 FFFC25EC FF FF FF FF FF FF FF FF     
   3385 FFFC25F4 FF FF FF FF FF FF FF FF     
   3386 FFFC25FC FF FF FF FF FF FF FF FF     
   3387 FFFC2604 FF FF FF FF FF FF FF FF     
   3388 FFFC260C FF FF FF FF FF FF FF FF     
   3389 FFFC2614 FF FF FF FF FF FF FF FF     
   3390 FFFC261C FF FF FF FF FF FF FF FF     
   3391 FFFC2624 FF FF FF FF FF FF FF FF     
   3392 FFFC262C FF FF FF FF FF FF FF FF     
   3393 FFFC2634 FF FF FF FF FF FF FF FF     
   3394 FFFC263C FF FF FF FF FF FF FF FF     
   3395 FFFC2644 FF FF FF FF FF FF FF FF     
   3396 FFFC264C FF FF FF FF FF FF FF FF     
   3397 FFFC2654 FF FF FF FF FF FF FF FF     
   3398 FFFC265C FF FF FF FF FF FF FF FF     
   3399 FFFC2664 FF FF FF FF FF FF FF FF     
   3400 FFFC266C FF FF FF FF FF FF FF FF     
   3401 FFFC2674 FF FF FF FF FF FF FF FF     
   3402 FFFC267C FF FF FF FF FF FF FF FF     
   3403 FFFC2684 FF FF FF FF FF FF FF FF     
   3404 FFFC268C FF FF FF FF FF FF FF FF     
   3405 FFFC2694 FF FF FF FF FF FF FF FF     
   3406 FFFC269C FF FF FF FF FF FF FF FF     
   3407 FFFC26A4 FF FF FF FF FF FF FF FF     
   3408 FFFC26AC FF FF FF FF FF FF FF FF     
   3409 FFFC26B4 FF FF FF FF FF FF FF FF     
   3410 FFFC26BC FF FF FF FF FF FF FF FF     
   3411 FFFC26C4 FF FF FF FF FF FF FF FF     
   3412 FFFC26CC FF FF FF FF FF FF FF FF     
   3413 FFFC26D4 FF FF FF FF FF FF FF FF     
   3414 FFFC26DC FF FF FF FF FF FF FF FF     
   3415 FFFC26E4 FF FF FF FF FF FF FF FF     
   3416 FFFC26EC FF FF FF FF FF FF FF FF     
   3417 FFFC26F4 FF FF FF FF FF FF FF FF     
   3418 FFFC26FC FF FF FF FF FF FF FF FF     
   3419 FFFC2704 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 5
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3420 FFFC270C FF FF FF FF FF FF FF FF     
   3421 FFFC2714 FF FF FF FF FF FF FF FF     
   3422 FFFC271C FF FF FF FF FF FF FF FF     
   3423 FFFC2724 FF FF FF FF FF FF FF FF     
   3424 FFFC272C FF FF FF FF FF FF FF FF     
   3425 FFFC2734 FF FF FF FF FF FF FF FF     
   3426 FFFC273C FF FF FF FF FF FF FF FF     
   3427 FFFC2744 FF FF FF FF FF FF FF FF     
   3428 FFFC274C FF FF FF FF FF FF FF FF     
   3429 FFFC2754 FF FF FF FF FF FF FF FF     
   3430 FFFC275C FF FF FF FF FF FF FF FF     
   3431 FFFC2764 FF FF FF FF FF FF FF FF     
   3432 FFFC276C FF FF FF FF FF FF FF FF     
   3433 FFFC2774 FF FF FF FF FF FF FF FF     
   3434 FFFC277C FF FF FF FF FF FF FF FF     
   3435 FFFC2784 FF FF FF FF FF FF FF FF     
   3436 FFFC278C FF FF FF FF FF FF FF FF     
   3437 FFFC2794 FF FF FF FF FF FF FF FF     
   3438 FFFC279C FF FF FF FF FF FF FF FF     
   3439 FFFC27A4 FF FF FF FF FF FF FF FF     
   3440 FFFC27AC FF FF FF FF FF FF FF FF     
   3441 FFFC27B4 FF FF FF FF FF FF FF FF     
   3442 FFFC27BC FF FF FF FF FF FF FF FF     
   3443 FFFC27C4 FF FF FF FF FF FF FF FF     
   3444 FFFC27CC FF FF FF FF FF FF FF FF     
   3445 FFFC27D4 FF FF FF FF FF FF FF FF     
   3446 FFFC27DC FF FF FF FF FF FF FF FF     
   3447 FFFC27E4 FF FF FF FF FF FF FF FF     
   3448 FFFC27EC FF FF FF FF FF FF FF FF     
   3449 FFFC27F4 FF FF FF FF FF FF FF FF     
   3450 FFFC27FC FF FF FF FF FF FF FF FF     
   3451 FFFC2804 FF FF FF FF FF FF FF FF     
   3452 FFFC280C FF FF FF FF FF FF FF FF     
   3453 FFFC2814 FF FF FF FF FF FF FF FF     
   3454 FFFC281C FF FF FF FF FF FF FF FF     
   3455 FFFC2824 FF FF FF FF FF FF FF FF     
   3456 FFFC282C FF FF FF FF FF FF FF FF     
   3457 FFFC2834 FF FF FF FF FF FF FF FF     
   3458 FFFC283C FF FF FF FF FF FF FF FF     
   3459 FFFC2844 FF FF FF FF FF FF FF FF     
   3460 FFFC284C FF FF FF FF FF FF FF FF     
   3461 FFFC2854 FF FF FF FF FF FF FF FF     
   3462 FFFC285C FF FF FF FF FF FF FF FF     
   3463 FFFC2864 FF FF FF FF FF FF FF FF     
   3464 FFFC286C FF FF FF FF FF FF FF FF     
   3465 FFFC2874 FF FF FF FF FF FF FF FF     
   3466 FFFC287C FF FF FF FF FF FF FF FF     
   3467 FFFC2884 FF FF FF FF FF FF FF FF     
   3468 FFFC288C FF FF FF FF FF FF FF FF     
   3469 FFFC2894 FF FF FF FF FF FF FF FF     
   3470 FFFC289C FF FF FF FF FF FF FF FF     
   3471 FFFC28A4 FF FF FF FF FF FF FF FF     
   3472 FFFC28AC FF FF FF FF FF FF FF FF     
   3473 FFFC28B4 FF FF FF FF FF FF FF FF     
   3474 FFFC28BC FF FF FF FF FF FF FF FF     
   3475 FFFC28C4 FF FF FF FF FF FF FF FF     
   3476 FFFC28CC FF FF FF FF FF FF FF FF     
   3477 FFFC28D4 FF FF FF FF FF FF FF FF     
   3478 FFFC28DC FF FF FF FF FF FF FF FF     
   3479 FFFC28E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 6
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3480 FFFC28EC FF FF FF FF FF FF FF FF     
   3481 FFFC28F4 FF FF FF FF FF FF FF FF     
   3482 FFFC28FC FF FF FF FF FF FF FF FF     
   3483 FFFC2904 FF FF FF FF FF FF FF FF     
   3484 FFFC290C FF FF FF FF FF FF FF FF     
   3485 FFFC2914 FF FF FF FF FF FF FF FF     
   3486 FFFC291C FF FF FF FF FF FF FF FF     
   3487 FFFC2924 FF FF FF FF FF FF FF FF     
   3488 FFFC292C FF FF FF FF FF FF FF FF     
   3489 FFFC2934 FF FF FF FF FF FF FF FF     
   3490 FFFC293C FF FF FF FF FF FF FF FF     
   3491 FFFC2944 FF FF FF FF FF FF FF FF     
   3492 FFFC294C FF FF FF FF FF FF FF FF     
   3493 FFFC2954 FF FF FF FF FF FF FF FF     
   3494 FFFC295C FF FF FF FF FF FF FF FF     
   3495 FFFC2964 FF FF FF FF FF FF FF FF     
   3496 FFFC296C FF FF FF FF FF FF FF FF     
   3497 FFFC2974 FF FF FF FF FF FF FF FF     
   3498 FFFC297C FF FF FF FF FF FF FF FF     
   3499 FFFC2984 FF FF FF FF FF FF FF FF     
   3500 FFFC298C FF FF FF FF FF FF FF FF     
   3501 FFFC2994 FF FF FF FF FF FF FF FF     
   3502 FFFC299C FF FF FF FF FF FF FF FF     
   3503 FFFC29A4 FF FF FF FF FF FF FF FF     
   3504 FFFC29AC FF FF FF FF FF FF FF FF     
   3505 FFFC29B4 FF FF FF FF FF FF FF FF     
   3506 FFFC29BC FF FF FF FF FF FF FF FF     
   3507 FFFC29C4 FF FF FF FF FF FF FF FF     
   3508 FFFC29CC FF FF FF FF FF FF FF FF     
   3509 FFFC29D4 FF FF FF FF FF FF FF FF     
   3510 FFFC29DC FF FF FF FF FF FF FF FF     
   3511 FFFC29E4 FF FF FF FF FF FF FF FF     
   3512 FFFC29EC FF FF FF FF FF FF FF FF     
   3513 FFFC29F4 FF FF FF FF FF FF FF FF     
   3514 FFFC29FC FF FF FF FF FF FF FF FF     
   3515 FFFC2A04 FF FF FF FF FF FF FF FF     
   3516 FFFC2A0C FF FF FF FF FF FF FF FF     
   3517 FFFC2A14 FF FF FF FF FF FF FF FF     
   3518 FFFC2A1C FF FF FF FF FF FF FF FF     
   3519 FFFC2A24 FF FF FF FF FF FF FF FF     
   3520 FFFC2A2C FF FF FF FF FF FF FF FF     
   3521 FFFC2A34 FF FF FF FF FF FF FF FF     
   3522 FFFC2A3C FF FF FF FF FF FF FF FF     
   3523 FFFC2A44 FF FF FF FF FF FF FF FF     
   3524 FFFC2A4C FF FF FF FF FF FF FF FF     
   3525 FFFC2A54 FF FF FF FF FF FF FF FF     
   3526 FFFC2A5C FF FF FF FF FF FF FF FF     
   3527 FFFC2A64 FF FF FF FF FF FF FF FF     
   3528 FFFC2A6C FF FF FF FF FF FF FF FF     
   3529 FFFC2A74 FF FF FF FF FF FF FF FF     
   3530 FFFC2A7C FF FF FF FF FF FF FF FF     
   3531 FFFC2A84 FF FF FF FF FF FF FF FF     
   3532 FFFC2A8C FF FF FF FF FF FF FF FF     
   3533 FFFC2A94 FF FF FF FF FF FF FF FF     
   3534 FFFC2A9C FF FF FF FF FF FF FF FF     
   3535 FFFC2AA4 FF FF FF FF FF FF FF FF     
   3536 FFFC2AAC FF FF FF FF FF FF FF FF     
   3537 FFFC2AB4 FF FF FF FF FF FF FF FF     
   3538 FFFC2ABC FF FF FF FF FF FF FF FF     
   3539 FFFC2AC4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 7
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3540 FFFC2ACC FF FF FF FF FF FF FF FF     
   3541 FFFC2AD4 FF FF FF FF FF FF FF FF     
   3542 FFFC2ADC FF FF FF FF FF FF FF FF     
   3543 FFFC2AE4 FF FF FF FF FF FF FF FF     
   3544 FFFC2AEC FF FF FF FF FF FF FF FF     
   3545 FFFC2AF4 FF FF FF FF FF FF FF FF     
   3546 FFFC2AFC FF FF FF FF FF FF FF FF     
   3547 FFFC2B04 FF FF FF FF FF FF FF FF     
   3548 FFFC2B0C FF FF FF FF FF FF FF FF     
   3549 FFFC2B14 FF FF FF FF FF FF FF FF     
   3550 FFFC2B1C FF FF FF FF FF FF FF FF     
   3551 FFFC2B24 FF FF FF FF FF FF FF FF     
   3552 FFFC2B2C FF FF FF FF FF FF FF FF     
   3553 FFFC2B34 FF FF FF FF FF FF FF FF     
   3554 FFFC2B3C FF FF FF FF FF FF FF FF     
   3555 FFFC2B44 FF FF FF FF FF FF FF FF     
   3556 FFFC2B4C FF FF FF FF FF FF FF FF     
   3557 FFFC2B54 FF FF FF FF FF FF FF FF     
   3558 FFFC2B5C FF FF FF FF FF FF FF FF     
   3559 FFFC2B64 FF FF FF FF FF FF FF FF     
   3560 FFFC2B6C FF FF FF FF FF FF FF FF     
   3561 FFFC2B74 FF FF FF FF FF FF FF FF     
   3562 FFFC2B7C FF FF FF FF FF FF FF FF     
   3563 FFFC2B84 FF FF FF FF FF FF FF FF     
   3564 FFFC2B8C FF FF FF FF FF FF FF FF     
   3565 FFFC2B94 FF FF FF FF FF FF FF FF     
   3566 FFFC2B9C FF FF FF FF FF FF FF FF     
   3567 FFFC2BA4 FF FF FF FF FF FF FF FF     
   3568 FFFC2BAC FF FF FF FF FF FF FF FF     
   3569 FFFC2BB4 FF FF FF FF FF FF FF FF     
   3570 FFFC2BBC FF FF FF FF FF FF FF FF     
   3571 FFFC2BC4 FF FF FF FF FF FF FF FF     
   3572 FFFC2BCC FF FF FF FF FF FF FF FF     
   3573 FFFC2BD4 FF FF FF FF FF FF FF FF     
   3574 FFFC2BDC FF FF FF FF FF FF FF FF     
   3575 FFFC2BE4 FF FF FF FF FF FF FF FF     
   3576 FFFC2BEC FF FF FF FF FF FF FF FF     
   3577 FFFC2BF4 FF FF FF FF FF FF FF FF     
   3578 FFFC2BFC FF FF FF FF FF FF FF FF     
   3579 FFFC2C04 FF FF FF FF FF FF FF FF     
   3580 FFFC2C0C FF FF FF FF FF FF FF FF     
   3581 FFFC2C14 FF FF FF FF FF FF FF FF     
   3582 FFFC2C1C FF FF FF FF FF FF FF FF     
   3583 FFFC2C24 FF FF FF FF FF FF FF FF     
   3584 FFFC2C2C FF FF FF FF FF FF FF FF     
   3585 FFFC2C34 FF FF FF FF FF FF FF FF     
   3586 FFFC2C3C FF FF FF FF FF FF FF FF     
   3587 FFFC2C44 FF FF FF FF FF FF FF FF     
   3588 FFFC2C4C FF FF FF FF FF FF FF FF     
   3589 FFFC2C54 FF FF FF FF FF FF FF FF     
   3590 FFFC2C5C FF FF FF FF FF FF FF FF     
   3591 FFFC2C64 FF FF FF FF FF FF FF FF     
   3592 FFFC2C6C FF FF FF FF FF FF FF FF     
   3593 FFFC2C74 FF FF FF FF FF FF FF FF     
   3594 FFFC2C7C FF FF FF FF FF FF FF FF     
   3595 FFFC2C84 FF FF FF FF FF FF FF FF     
   3596 FFFC2C8C FF FF FF FF FF FF FF FF     
   3597 FFFC2C94 FF FF FF FF FF FF FF FF     
   3598 FFFC2C9C FF FF FF FF FF FF FF FF     
   3599 FFFC2CA4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 8
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3600 FFFC2CAC FF FF FF FF FF FF FF FF     
   3601 FFFC2CB4 FF FF FF FF FF FF FF FF     
   3602 FFFC2CBC FF FF FF FF FF FF FF FF     
   3603 FFFC2CC4 FF FF FF FF FF FF FF FF     
   3604 FFFC2CCC FF FF FF FF FF FF FF FF     
   3605 FFFC2CD4 FF FF FF FF FF FF FF FF     
   3606 FFFC2CDC FF FF FF FF FF FF FF FF     
   3607 FFFC2CE4 FF FF FF FF FF FF FF FF     
   3608 FFFC2CEC FF FF FF FF FF FF FF FF     
   3609 FFFC2CF4 FF FF FF FF FF FF FF FF     
   3610 FFFC2CFC FF FF FF FF FF FF FF FF     
   3611 FFFC2D04 FF FF FF FF FF FF FF FF     
   3612 FFFC2D0C FF FF FF FF FF FF FF FF     
   3613 FFFC2D14 FF FF FF FF FF FF FF FF     
   3614 FFFC2D1C FF FF FF FF FF FF FF FF     
   3615 FFFC2D24 FF FF FF FF FF FF FF FF     
   3616 FFFC2D2C FF FF FF FF FF FF FF FF     
   3617 FFFC2D34 FF FF FF FF FF FF FF FF     
   3618 FFFC2D3C FF FF FF FF FF FF FF FF     
   3619 FFFC2D44 FF FF FF FF FF FF FF FF     
   3620 FFFC2D4C FF FF FF FF FF FF FF FF     
   3621 FFFC2D54 FF FF FF FF FF FF FF FF     
   3622 FFFC2D5C FF FF FF FF FF FF FF FF     
   3623 FFFC2D64 FF FF FF FF FF FF FF FF     
   3624 FFFC2D6C FF FF FF FF FF FF FF FF     
   3625 FFFC2D74 FF FF FF FF FF FF FF FF     
   3626 FFFC2D7C FF FF FF FF FF FF FF FF     
   3627 FFFC2D84 FF FF FF FF FF FF FF FF     
   3628 FFFC2D8C FF FF FF FF FF FF FF FF     
   3629 FFFC2D94 FF FF FF FF FF FF FF FF     
   3630 FFFC2D9C FF FF FF FF FF FF FF FF     
   3631 FFFC2DA4 FF FF FF FF FF FF FF FF     
   3632 FFFC2DAC FF FF FF FF FF FF FF FF     
   3633 FFFC2DB4 FF FF FF FF FF FF FF FF     
   3634 FFFC2DBC FF FF FF FF FF FF FF FF     
   3635 FFFC2DC4 FF FF FF FF FF FF FF FF     
   3636 FFFC2DCC FF FF FF FF FF FF FF FF     
   3637 FFFC2DD4 FF FF FF FF FF FF FF FF     
   3638 FFFC2DDC FF FF FF FF FF FF FF FF     
   3639 FFFC2DE4 FF FF FF FF FF FF FF FF     
   3640 FFFC2DEC FF FF FF FF FF FF FF FF     
   3641 FFFC2DF4 FF FF FF FF FF FF FF FF     
   3642 FFFC2DFC FF FF FF FF FF FF FF FF     
   3643 FFFC2E04 FF FF FF FF FF FF FF FF     
   3644 FFFC2E0C FF FF FF FF FF FF FF FF     
   3645 FFFC2E14 FF FF FF FF FF FF FF FF     
   3646 FFFC2E1C FF FF FF FF FF FF FF FF     
   3647 FFFC2E24 FF FF FF FF FF FF FF FF     
   3648 FFFC2E2C FF FF FF FF FF FF FF FF     
   3649 FFFC2E34 FF FF FF FF FF FF FF FF     
   3650 FFFC2E3C FF FF FF FF FF FF FF FF     
   3651 FFFC2E44 FF FF FF FF FF FF FF FF     
   3652 FFFC2E4C FF FF FF FF FF FF FF FF     
   3653 FFFC2E54 FF FF FF FF FF FF FF FF     
   3654 FFFC2E5C FF FF FF FF FF FF FF FF     
   3655 FFFC2E64 FF FF FF FF FF FF FF FF     
   3656 FFFC2E6C FF FF FF FF FF FF FF FF     
   3657 FFFC2E74 FF FF FF FF FF FF FF FF     
   3658 FFFC2E7C FF FF FF FF FF FF FF FF     
   3659 FFFC2E84 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 9
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3660 FFFC2E8C FF FF FF FF FF FF FF FF     
   3661 FFFC2E94 FF FF FF FF FF FF FF FF     
   3662 FFFC2E9C FF FF FF FF FF FF FF FF     
   3663 FFFC2EA4 FF FF FF FF FF FF FF FF     
   3664 FFFC2EAC FF FF FF FF FF FF FF FF     
   3665 FFFC2EB4 FF FF FF FF FF FF FF FF     
   3666 FFFC2EBC FF FF FF FF FF FF FF FF     
   3667 FFFC2EC4 FF FF FF FF FF FF FF FF     
   3668 FFFC2ECC FF FF FF FF FF FF FF FF     
   3669 FFFC2ED4 FF FF FF FF FF FF FF FF     
   3670 FFFC2EDC FF FF FF FF FF FF FF FF     
   3671 FFFC2EE4 FF FF FF FF FF FF FF FF     
   3672 FFFC2EEC FF FF FF FF FF FF FF FF     
   3673 FFFC2EF4 FF FF FF FF FF FF FF FF     
   3674 FFFC2EFC FF FF FF FF FF FF FF FF     
   3675 FFFC2F04 FF FF FF FF FF FF FF FF     
   3676 FFFC2F0C FF FF FF FF FF FF FF FF     
   3677 FFFC2F14 FF FF FF FF FF FF FF FF     
   3678 FFFC2F1C FF FF FF FF FF FF FF FF     
   3679 FFFC2F24 FF FF FF FF FF FF FF FF     
   3680 FFFC2F2C FF FF FF FF FF FF FF FF     
   3681 FFFC2F34 FF FF FF FF FF FF FF FF     
   3682 FFFC2F3C FF FF FF FF FF FF FF FF     
   3683 FFFC2F44 FF FF FF FF FF FF FF FF     
   3684 FFFC2F4C FF FF FF FF FF FF FF FF     
   3685 FFFC2F54 FF FF FF FF FF FF FF FF     
   3686 FFFC2F5C FF FF FF FF FF FF FF FF     
   3687 FFFC2F64 FF FF FF FF FF FF FF FF     
   3688 FFFC2F6C FF FF FF FF FF FF FF FF     
   3689 FFFC2F74 FF FF FF FF FF FF FF FF     
   3690 FFFC2F7C FF FF FF FF FF FF FF FF     
   3691 FFFC2F84 FF FF FF FF FF FF FF FF     
   3692 FFFC2F8C FF FF FF FF FF FF FF FF     
   3693 FFFC2F94 FF FF FF FF FF FF FF FF     
   3694 FFFC2F9C FF FF FF FF FF FF FF FF     
   3695 FFFC2FA4 FF FF FF FF FF FF FF FF     
   3696 FFFC2FAC FF FF FF FF FF FF FF FF     
   3697 FFFC2FB4 FF FF FF FF FF FF FF FF     
   3698 FFFC2FBC FF FF FF FF FF FF FF FF     
   3699 FFFC2FC4 FF FF FF FF FF FF FF FF     
   3700 FFFC2FCC FF FF FF FF FF FF FF FF     
   3701 FFFC2FD4 FF FF FF FF FF FF FF FF     
   3702 FFFC2FDC FF FF FF FF FF FF FF FF     
   3703 FFFC2FE4 FF FF FF FF FF FF FF FF     
   3704 FFFC2FEC FF FF FF FF FF FF FF FF     
   3705 FFFC2FF4 FF FF FF FF FF FF FF FF     
   3706 FFFC2FFC FF FF FF FF FF FF FF FF     
   3707 FFFC3004 FF FF FF FF FF FF FF FF     
   3708 FFFC300C FF FF FF FF FF FF FF FF     
   3709 FFFC3014 FF FF FF FF FF FF FF FF     
   3710 FFFC301C FF FF FF FF FF FF FF FF     
   3711 FFFC3024 FF FF FF FF FF FF FF FF     
   3712 FFFC302C FF FF FF FF FF FF FF FF     
   3713 FFFC3034 FF FF FF FF FF FF FF FF     
   3714 FFFC303C FF FF FF FF FF FF FF FF     
   3715 FFFC3044 FF FF FF FF FF FF FF FF     
   3716 FFFC304C FF FF FF FF FF FF FF FF     
   3717 FFFC3054 FF FF FF FF FF FF FF FF     
   3718 FFFC305C FF FF FF FF FF FF FF FF     
   3719 FFFC3064 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 10
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3720 FFFC306C FF FF FF FF FF FF FF FF     
   3721 FFFC3074 FF FF FF FF FF FF FF FF     
   3722 FFFC307C FF FF FF FF FF FF FF FF     
   3723 FFFC3084 FF FF FF FF FF FF FF FF     
   3724 FFFC308C FF FF FF FF FF FF FF FF     
   3725 FFFC3094 FF FF FF FF FF FF FF FF     
   3726 FFFC309C FF FF FF FF FF FF FF FF     
   3727 FFFC30A4 FF FF FF FF FF FF FF FF     
   3728 FFFC30AC FF FF FF FF FF FF FF FF     
   3729 FFFC30B4 FF FF FF FF FF FF FF FF     
   3730 FFFC30BC FF FF FF FF FF FF FF FF     
   3731 FFFC30C4 FF FF FF FF FF FF FF FF     
   3732 FFFC30CC FF FF FF FF FF FF FF FF     
   3733 FFFC30D4 FF FF FF FF FF FF FF FF     
   3734 FFFC30DC FF FF FF FF FF FF FF FF     
   3735 FFFC30E4 FF FF FF FF FF FF FF FF     
   3736 FFFC30EC FF FF FF FF FF FF FF FF     
   3737 FFFC30F4 FF FF FF FF FF FF FF FF     
   3738 FFFC30FC FF FF FF FF FF FF FF FF     
   3739 FFFC3104 FF FF FF FF FF FF FF FF     
   3740 FFFC310C FF FF FF FF FF FF FF FF     
   3741 FFFC3114 FF FF FF FF FF FF FF FF     
   3742 FFFC311C FF FF FF FF FF FF FF FF     
   3743 FFFC3124 FF FF FF FF FF FF FF FF     
   3744 FFFC312C FF FF FF FF FF FF FF FF     
   3745 FFFC3134 FF FF FF FF FF FF FF FF     
   3746 FFFC313C FF FF FF FF FF FF FF FF     
   3747 FFFC3144 FF FF FF FF FF FF FF FF     
   3748 FFFC314C FF FF FF FF FF FF FF FF     
   3749 FFFC3154 FF FF FF FF FF FF FF FF     
   3750 FFFC315C FF FF FF FF FF FF FF FF     
   3751 FFFC3164 FF FF FF FF FF FF FF FF     
   3752 FFFC316C FF FF FF FF FF FF FF FF     
   3753 FFFC3174 FF FF FF FF FF FF FF FF     
   3754 FFFC317C FF FF FF FF FF FF FF FF     
   3755 FFFC3184 FF FF FF FF FF FF FF FF     
   3756 FFFC318C FF FF FF FF FF FF FF FF     
   3757 FFFC3194 FF FF FF FF FF FF FF FF     
   3758 FFFC319C FF FF FF FF FF FF FF FF     
   3759 FFFC31A4 FF FF FF FF FF FF FF FF     
   3760 FFFC31AC FF FF FF FF FF FF FF FF     
   3761 FFFC31B4 FF FF FF FF FF FF FF FF     
   3762 FFFC31BC FF FF FF FF FF FF FF FF     
   3763 FFFC31C4 FF FF FF FF FF FF FF FF     
   3764 FFFC31CC FF FF FF FF FF FF FF FF     
   3765 FFFC31D4 FF FF FF FF FF FF FF FF     
   3766 FFFC31DC FF FF FF FF FF FF FF FF     
   3767 FFFC31E4 FF FF FF FF FF FF FF FF     
   3768 FFFC31EC FF FF FF FF FF FF FF FF     
   3769 FFFC31F4 FF FF FF FF FF FF FF FF     
   3770 FFFC31FC FF FF FF FF FF FF FF FF     
   3771 FFFC3204 FF FF FF FF FF FF FF FF     
   3772 FFFC320C FF FF FF FF FF FF FF FF     
   3773 FFFC3214 FF FF FF FF FF FF FF FF     
   3774 FFFC321C FF FF FF FF FF FF FF FF     
   3775 FFFC3224 FF FF FF FF FF FF FF FF     
   3776 FFFC322C FF FF FF FF FF FF FF FF     
   3777 FFFC3234 FF FF FF FF FF FF FF FF     
   3778 FFFC323C FF FF FF FF FF FF FF FF     
   3779 FFFC3244 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 11
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3780 FFFC324C FF FF FF FF FF FF FF FF     
   3781 FFFC3254 FF FF FF FF FF FF FF FF     
   3782 FFFC325C FF FF FF FF FF FF FF FF     
   3783 FFFC3264 FF FF FF FF FF FF FF FF     
   3784 FFFC326C FF FF FF FF FF FF FF FF     
   3785 FFFC3274 FF FF FF FF FF FF FF FF     
   3786 FFFC327C FF FF FF FF FF FF FF FF     
   3787 FFFC3284 FF FF FF FF FF FF FF FF     
   3788 FFFC328C FF FF FF FF FF FF FF FF     
   3789 FFFC3294 FF FF FF FF FF FF FF FF     
   3790 FFFC329C FF FF FF FF FF FF FF FF     
   3791 FFFC32A4 FF FF FF FF FF FF FF FF     
   3792 FFFC32AC FF FF FF FF FF FF FF FF     
   3793 FFFC32B4 FF FF FF FF FF FF FF FF     
   3794 FFFC32BC FF FF FF FF FF FF FF FF     
   3795 FFFC32C4 FF FF FF FF FF FF FF FF     
   3796 FFFC32CC FF FF FF FF FF FF FF FF     
   3797 FFFC32D4 FF FF FF FF FF FF FF FF     
   3798 FFFC32DC FF FF FF FF FF FF FF FF     
   3799 FFFC32E4 FF FF FF FF FF FF FF FF     
   3800 FFFC32EC FF FF FF FF FF FF FF FF     
   3801 FFFC32F4 FF FF FF FF FF FF FF FF     
   3802 FFFC32FC FF FF FF FF FF FF FF FF     
   3803 FFFC3304 FF FF FF FF FF FF FF FF     
   3804 FFFC330C FF FF FF FF FF FF FF FF     
   3805 FFFC3314 FF FF FF FF FF FF FF FF     
   3806 FFFC331C FF FF FF FF FF FF FF FF     
   3807 FFFC3324 FF FF FF FF FF FF FF FF     
   3808 FFFC332C FF FF FF FF FF FF FF FF     
   3809 FFFC3334 FF FF FF FF FF FF FF FF     
   3810 FFFC333C FF FF FF FF FF FF FF FF     
   3811 FFFC3344 FF FF FF FF FF FF FF FF     
   3812 FFFC334C FF FF FF FF FF FF FF FF     
   3813 FFFC3354 FF FF FF FF FF FF FF FF     
   3814 FFFC335C FF FF FF FF FF FF FF FF     
   3815 FFFC3364 FF FF FF FF FF FF FF FF     
   3816 FFFC336C FF FF FF FF FF FF FF FF     
   3817 FFFC3374 FF FF FF FF FF FF FF FF     
   3818 FFFC337C FF FF FF FF FF FF FF FF     
   3819 FFFC3384 FF FF FF FF FF FF FF FF     
   3820 FFFC338C FF FF FF FF FF FF FF FF     
   3821 FFFC3394 FF FF FF FF FF FF FF FF     
   3822 FFFC339C FF FF FF FF FF FF FF FF     
   3823 FFFC33A4 FF FF FF FF FF FF FF FF     
   3824 FFFC33AC FF FF FF FF FF FF FF FF     
   3825 FFFC33B4 FF FF FF FF FF FF FF FF     
   3826 FFFC33BC FF FF FF FF FF FF FF FF     
   3827 FFFC33C4 FF FF FF FF FF FF FF FF     
   3828 FFFC33CC FF FF FF FF FF FF FF FF     
   3829 FFFC33D4 FF FF FF FF FF FF FF FF     
   3830 FFFC33DC FF FF FF FF FF FF FF FF     
   3831 FFFC33E4 FF FF FF FF FF FF FF FF     
   3832 FFFC33EC FF FF FF FF FF FF FF FF     
   3833 FFFC33F4 FF FF FF FF FF FF FF FF     
   3834 FFFC33FC FF FF FF FF FF FF FF FF     
   3835 FFFC3404 FF FF FF FF FF FF FF FF     
   3836 FFFC340C FF FF FF FF FF FF FF FF     
   3837 FFFC3414 FF FF FF FF FF FF FF FF     
   3838 FFFC341C FF FF FF FF FF FF FF FF     
   3839 FFFC3424 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 12
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3840 FFFC342C FF FF FF FF FF FF FF FF     
   3841 FFFC3434 FF FF FF FF FF FF FF FF     
   3842 FFFC343C FF FF FF FF FF FF FF FF     
   3843 FFFC3444 FF FF FF FF FF FF FF FF     
   3844 FFFC344C FF FF FF FF FF FF FF FF     
   3845 FFFC3454 FF FF FF FF FF FF FF FF     
   3846 FFFC345C FF FF FF FF FF FF FF FF     
   3847 FFFC3464 FF FF FF FF FF FF FF FF     
   3848 FFFC346C FF FF FF FF FF FF FF FF     
   3849 FFFC3474 FF FF FF FF FF FF FF FF     
   3850 FFFC347C FF FF FF FF FF FF FF FF     
   3851 FFFC3484 FF FF FF FF FF FF FF FF     
   3852 FFFC348C FF FF FF FF FF FF FF FF     
   3853 FFFC3494 FF FF FF FF FF FF FF FF     
   3854 FFFC349C FF FF FF FF FF FF FF FF     
   3855 FFFC34A4 FF FF FF FF FF FF FF FF     
   3856 FFFC34AC FF FF FF FF FF FF FF FF     
   3857 FFFC34B4 FF FF FF FF FF FF FF FF     
   3858 FFFC34BC FF FF FF FF FF FF FF FF     
   3859 FFFC34C4 FF FF FF FF FF FF FF FF     
   3860 FFFC34CC FF FF FF FF FF FF FF FF     
   3861 FFFC34D4 FF FF FF FF FF FF FF FF     
   3862 FFFC34DC FF FF FF FF FF FF FF FF     
   3863 FFFC34E4 FF FF FF FF FF FF FF FF     
   3864 FFFC34EC FF FF FF FF FF FF FF FF     
   3865 FFFC34F4 FF FF FF FF FF FF FF FF     
   3866 FFFC34FC FF FF FF FF FF FF FF FF     
   3867 FFFC3504 FF FF FF FF FF FF FF FF     
   3868 FFFC350C FF FF FF FF FF FF FF FF     
   3869 FFFC3514 FF FF FF FF FF FF FF FF     
   3870 FFFC351C FF FF FF FF FF FF FF FF     
   3871 FFFC3524 FF FF FF FF FF FF FF FF     
   3872 FFFC352C FF FF FF FF FF FF FF FF     
   3873 FFFC3534 FF FF FF FF FF FF FF FF     
   3874 FFFC353C FF FF FF FF FF FF FF FF     
   3875 FFFC3544 FF FF FF FF FF FF FF FF     
   3876 FFFC354C FF FF FF FF FF FF FF FF     
   3877 FFFC3554 FF FF FF FF FF FF FF FF     
   3878 FFFC355C FF FF FF FF FF FF FF FF     
   3879 FFFC3564 FF FF FF FF FF FF FF FF     
   3880 FFFC356C FF FF FF FF FF FF FF FF     
   3881 FFFC3574 FF FF FF FF FF FF FF FF     
   3882 FFFC357C FF FF FF FF FF FF FF FF     
   3883 FFFC3584 FF FF FF FF FF FF FF FF     
   3884 FFFC358C FF FF FF FF FF FF FF FF     
   3885 FFFC3594 FF FF FF FF FF FF FF FF     
   3886 FFFC359C FF FF FF FF FF FF FF FF     
   3887 FFFC35A4 FF FF FF FF FF FF FF FF     
   3888 FFFC35AC FF FF FF FF FF FF FF FF     
   3889 FFFC35B4 FF FF FF FF FF FF FF FF     
   3890 FFFC35BC FF FF FF FF FF FF FF FF     
   3891 FFFC35C4 FF FF FF FF FF FF FF FF     
   3892 FFFC35CC FF FF FF FF FF FF FF FF     
   3893 FFFC35D4 FF FF FF FF FF FF FF FF     
   3894 FFFC35DC FF FF FF FF FF FF FF FF     
   3895 FFFC35E4 FF FF FF FF FF FF FF FF     
   3896 FFFC35EC FF FF FF FF FF FF FF FF     
   3897 FFFC35F4 FF FF FF FF FF FF FF FF     
   3898 FFFC35FC FF FF FF FF FF FF FF FF     
   3899 FFFC3604 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 13
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3900 FFFC360C FF FF FF FF FF FF FF FF     
   3901 FFFC3614 FF FF FF FF FF FF FF FF     
   3902 FFFC361C FF FF FF FF FF FF FF FF     
   3903 FFFC3624 FF FF FF FF FF FF FF FF     
   3904 FFFC362C FF FF FF FF FF FF FF FF     
   3905 FFFC3634 FF FF FF FF FF FF FF FF     
   3906 FFFC363C FF FF FF FF FF FF FF FF     
   3907 FFFC3644 FF FF FF FF FF FF FF FF     
   3908 FFFC364C FF FF FF FF FF FF FF FF     
   3909 FFFC3654 FF FF FF FF FF FF FF FF     
   3910 FFFC365C FF FF FF FF FF FF FF FF     
   3911 FFFC3664 FF FF FF FF FF FF FF FF     
   3912 FFFC366C FF FF FF FF FF FF FF FF     
   3913 FFFC3674 FF FF FF FF FF FF FF FF     
   3914 FFFC367C FF FF FF FF FF FF FF FF     
   3915 FFFC3684 FF FF FF FF FF FF FF FF     
   3916 FFFC368C FF FF FF FF FF FF FF FF     
   3917 FFFC3694 FF FF FF FF FF FF FF FF     
   3918 FFFC369C FF FF FF FF FF FF FF FF     
   3919 FFFC36A4 FF FF FF FF FF FF FF FF     
   3920 FFFC36AC FF FF FF FF FF FF FF FF     
   3921 FFFC36B4 FF FF FF FF FF FF FF FF     
   3922 FFFC36BC FF FF FF FF FF FF FF FF     
   3923 FFFC36C4 FF FF FF FF FF FF FF FF     
   3924 FFFC36CC FF FF FF FF FF FF FF FF     
   3925 FFFC36D4 FF FF FF FF FF FF FF FF     
   3926 FFFC36DC FF FF FF FF FF FF FF FF     
   3927 FFFC36E4 FF FF FF FF FF FF FF FF     
   3928 FFFC36EC FF FF FF FF FF FF FF FF     
   3929 FFFC36F4 FF FF FF FF FF FF FF FF     
   3930 FFFC36FC FF FF FF FF FF FF FF FF     
   3931 FFFC3704 FF FF FF FF FF FF FF FF     
   3932 FFFC370C FF FF FF FF FF FF FF FF     
   3933 FFFC3714 FF FF FF FF FF FF FF FF     
   3934 FFFC371C FF FF FF FF FF FF FF FF     
   3935 FFFC3724 FF FF FF FF FF FF FF FF     
   3936 FFFC372C FF FF FF FF FF FF FF FF     
   3937 FFFC3734 FF FF FF FF FF FF FF FF     
   3938 FFFC373C FF FF FF FF FF FF FF FF     
   3939 FFFC3744 FF FF FF FF FF FF FF FF     
   3940 FFFC374C FF FF FF FF FF FF FF FF     
   3941 FFFC3754 FF FF FF FF FF FF FF FF     
   3942 FFFC375C FF FF FF FF FF FF FF FF     
   3943 FFFC3764 FF FF FF FF FF FF FF FF     
   3944 FFFC376C FF FF FF FF FF FF FF FF     
   3945 FFFC3774 FF FF FF FF FF FF FF FF     
   3946 FFFC377C FF FF FF FF FF FF FF FF     
   3947 FFFC3784 FF FF FF FF FF FF FF FF     
   3948 FFFC378C FF FF FF FF FF FF FF FF     
   3949 FFFC3794 FF FF FF FF FF FF FF FF     
   3950 FFFC379C FF FF FF FF FF FF FF FF     
   3951 FFFC37A4 FF FF FF FF FF FF FF FF     
   3952 FFFC37AC FF FF FF FF FF FF FF FF     
   3953 FFFC37B4 FF FF FF FF FF FF FF FF     
   3954 FFFC37BC FF FF FF FF FF FF FF FF     
   3955 FFFC37C4 FF FF FF FF FF FF FF FF     
   3956 FFFC37CC FF FF FF FF FF FF FF FF     
   3957 FFFC37D4 FF FF FF FF FF FF FF FF     
   3958 FFFC37DC FF FF FF FF FF FF FF FF     
   3959 FFFC37E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 14
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3960 FFFC37EC FF FF FF FF FF FF FF FF     
   3961 FFFC37F4 FF FF FF FF FF FF FF FF     
   3962 FFFC37FC FF FF FF FF FF FF FF FF     
   3963 FFFC3804 FF FF FF FF FF FF FF FF     
   3964 FFFC380C FF FF FF FF FF FF FF FF     
   3965 FFFC3814 FF FF FF FF FF FF FF FF     
   3966 FFFC381C FF FF FF FF FF FF FF FF     
   3967 FFFC3824 FF FF FF FF FF FF FF FF     
   3968 FFFC382C FF FF FF FF FF FF FF FF     
   3969 FFFC3834 FF FF FF FF FF FF FF FF     
   3970 FFFC383C FF FF FF FF FF FF FF FF     
   3971 FFFC3844 FF FF FF FF FF FF FF FF     
   3972 FFFC384C FF FF FF FF FF FF FF FF     
   3973 FFFC3854 FF FF FF FF FF FF FF FF     
   3974 FFFC385C FF FF FF FF FF FF FF FF     
   3975 FFFC3864 FF FF FF FF FF FF FF FF     
   3976 FFFC386C FF FF FF FF FF FF FF FF     
   3977 FFFC3874 FF FF FF FF FF FF FF FF     
   3978 FFFC387C FF FF FF FF FF FF FF FF     
   3979 FFFC3884 FF FF FF FF FF FF FF FF     
   3980 FFFC388C FF FF FF FF FF FF FF FF     
   3981 FFFC3894 FF FF FF FF FF FF FF FF     
   3982 FFFC389C FF FF FF FF FF FF FF FF     
   3983 FFFC38A4 FF FF FF FF FF FF FF FF     
   3984 FFFC38AC FF FF FF FF FF FF FF FF     
   3985 FFFC38B4 FF FF FF FF FF FF FF FF     
   3986 FFFC38BC FF FF FF FF FF FF FF FF     
   3987 FFFC38C4 FF FF FF FF FF FF FF FF     
   3988 FFFC38CC FF FF FF FF FF FF FF FF     
   3989 FFFC38D4 FF FF FF FF FF FF FF FF     
   3990 FFFC38DC FF FF FF FF FF FF FF FF     
   3991 FFFC38E4 FF FF FF FF FF FF FF FF     
   3992 FFFC38EC FF FF FF FF FF FF FF FF     
   3993 FFFC38F4 FF FF FF FF FF FF FF FF     
   3994 FFFC38FC FF FF FF FF FF FF FF FF     
   3995 FFFC3904 FF FF FF FF FF FF FF FF     
   3996 FFFC390C FF FF FF FF FF FF FF FF     
   3997 FFFC3914 FF FF FF FF FF FF FF FF     
   3998 FFFC391C FF FF FF FF FF FF FF FF     
   3999 FFFC3924 FF FF FF FF FF FF FF FF     
   4000 FFFC392C FF FF FF FF FF FF FF FF     
   4001 FFFC3934 FF FF FF FF FF FF FF FF     
   4002 FFFC393C FF FF FF FF FF FF FF FF     
   4003 FFFC3944 FF FF FF FF FF FF FF FF     
   4004 FFFC394C FF FF FF FF FF FF FF FF     
   4005 FFFC3954 FF FF FF FF FF FF FF FF     
   4006 FFFC395C FF FF FF FF FF FF FF FF     
   4007 FFFC3964 FF FF FF FF FF FF FF FF     
   4008 FFFC396C FF FF FF FF FF FF FF FF     
   4009 FFFC3974 FF FF FF FF FF FF FF FF     
   4010 FFFC397C FF FF FF FF FF FF FF FF     
   4011 FFFC3984 FF FF FF FF FF FF FF FF     
   4012 FFFC398C FF FF FF FF FF FF FF FF     
   4013 FFFC3994 FF FF FF FF FF FF FF FF     
   4014 FFFC399C FF FF FF FF FF FF FF FF     
   4015 FFFC39A4 FF FF FF FF FF FF FF FF     
   4016 FFFC39AC FF FF FF FF FF FF FF FF     
   4017 FFFC39B4 FF FF FF FF FF FF FF FF     
   4018 FFFC39BC FF FF FF FF FF FF FF FF     
   4019 FFFC39C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 15
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4020 FFFC39CC FF FF FF FF FF FF FF FF     
   4021 FFFC39D4 FF FF FF FF FF FF FF FF     
   4022 FFFC39DC FF FF FF FF FF FF FF FF     
   4023 FFFC39E4 FF FF FF FF FF FF FF FF     
   4024 FFFC39EC FF FF FF FF FF FF FF FF     
   4025 FFFC39F4 FF FF FF FF FF FF FF FF     
   4026 FFFC39FC FF FF FF FF FF FF FF FF     
   4027 FFFC3A04 FF FF FF FF FF FF FF FF     
   4028 FFFC3A0C FF FF FF FF FF FF FF FF     
   4029 FFFC3A14 FF FF FF FF FF FF FF FF     
   4030 FFFC3A1C FF FF FF FF FF FF FF FF     
   4031 FFFC3A24 FF FF FF FF FF FF FF FF     
   4032 FFFC3A2C FF FF FF FF FF FF FF FF     
   4033 FFFC3A34 FF FF FF FF FF FF FF FF     
   4034 FFFC3A3C FF FF FF FF FF FF FF FF     
   4035 FFFC3A44 FF FF FF FF FF FF FF FF     
   4036 FFFC3A4C FF FF FF FF FF FF FF FF     
   4037 FFFC3A54 FF FF FF FF FF FF FF FF     
   4038 FFFC3A5C FF FF FF FF FF FF FF FF     
   4039 FFFC3A64 FF FF FF FF FF FF FF FF     
   4040 FFFC3A6C FF FF FF FF FF FF FF FF     
   4041 FFFC3A74 FF FF FF FF FF FF FF FF     
   4042 FFFC3A7C FF FF FF FF FF FF FF FF     
   4043 FFFC3A84 FF FF FF FF FF FF FF FF     
   4044 FFFC3A8C FF FF FF FF FF FF FF FF     
   4045 FFFC3A94 FF FF FF FF FF FF FF FF     
   4046 FFFC3A9C FF FF FF FF FF FF FF FF     
   4047 FFFC3AA4 FF FF FF FF FF FF FF FF     
   4048 FFFC3AAC FF FF FF FF FF FF FF FF     
   4049 FFFC3AB4 FF FF FF FF FF FF FF FF     
   4050 FFFC3ABC FF FF FF FF FF FF FF FF     
   4051 FFFC3AC4 FF FF FF FF FF FF FF FF     
   4052 FFFC3ACC FF FF FF FF FF FF FF FF     
   4053 FFFC3AD4 FF FF FF FF FF FF FF FF     
   4054 FFFC3ADC FF FF FF FF FF FF FF FF     
   4055 FFFC3AE4 FF FF FF FF FF FF FF FF     
   4056 FFFC3AEC FF FF FF FF FF FF FF FF     
   4057 FFFC3AF4 FF FF FF FF FF FF FF FF     
   4058 FFFC3AFC FF FF FF FF FF FF FF FF     
   4059 FFFC3B04 FF FF FF FF FF FF FF FF     
   4060 FFFC3B0C FF FF FF FF FF FF FF FF     
   4061 FFFC3B14 FF FF FF FF FF FF FF FF     
   4062 FFFC3B1C FF FF FF FF FF FF FF FF     
   4063 FFFC3B24 FF FF FF FF FF FF FF FF     
   4064 FFFC3B2C FF FF FF FF FF FF FF FF     
   4065 FFFC3B34 FF FF FF FF FF FF FF FF     
   4066 FFFC3B3C FF FF FF FF FF FF FF FF     
   4067 FFFC3B44 FF FF FF FF FF FF FF FF     
   4068 FFFC3B4C FF FF FF FF FF FF FF FF     
   4069 FFFC3B54 FF FF FF FF FF FF FF FF     
   4070 FFFC3B5C FF FF FF FF FF FF FF FF     
   4071 FFFC3B64 FF FF FF FF FF FF FF FF     
   4072 FFFC3B6C FF FF FF FF FF FF FF FF     
   4073 FFFC3B74 FF FF FF FF FF FF FF FF     
   4074 FFFC3B7C FF FF FF FF FF FF FF FF     
   4075 FFFC3B84 FF FF FF FF FF FF FF FF     
   4076 FFFC3B8C FF FF FF FF FF FF FF FF     
   4077 FFFC3B94 FF FF FF FF FF FF FF FF     
   4078 FFFC3B9C FF FF FF FF FF FF FF FF     
   4079 FFFC3BA4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 16
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4080 FFFC3BAC FF FF FF FF FF FF FF FF     
   4081 FFFC3BB4 FF FF FF FF FF FF FF FF     
   4082 FFFC3BBC FF FF FF FF FF FF FF FF     
   4083 FFFC3BC4 FF FF FF FF FF FF FF FF     
   4084 FFFC3BCC FF FF FF FF FF FF FF FF     
   4085 FFFC3BD4 FF FF FF FF FF FF FF FF     
   4086 FFFC3BDC FF FF FF FF FF FF FF FF     
   4087 FFFC3BE4 FF FF FF FF FF FF FF FF     
   4088 FFFC3BEC FF FF FF FF FF FF FF FF     
   4089 FFFC3BF4 FF FF FF FF FF FF FF FF     
   4090 FFFC3BFC FF FF FF FF FF FF FF FF     
   4091 FFFC3C04 FF FF FF FF FF FF FF FF     
   4092 FFFC3C0C FF FF FF FF FF FF FF FF     
   4093 FFFC3C14 FF FF FF FF FF FF FF FF     
   4094 FFFC3C1C FF FF FF FF FF FF FF FF     
   4095 FFFC3C24 FF FF FF FF FF FF FF FF     
   4096 FFFC3C2C FF FF FF FF FF FF FF FF     
   4097 FFFC3C34 FF FF FF FF FF FF FF FF     
   4098 FFFC3C3C FF FF FF FF FF FF FF FF     
   4099 FFFC3C44 FF FF FF FF FF FF FF FF     
   4100 FFFC3C4C FF FF FF FF FF FF FF FF     
   4101 FFFC3C54 FF FF FF FF FF FF FF FF     
   4102 FFFC3C5C FF FF FF FF FF FF FF FF     
   4103 FFFC3C64 FF FF FF FF FF FF FF FF     
   4104 FFFC3C6C FF FF FF FF FF FF FF FF     
   4105 FFFC3C74 FF FF FF FF FF FF FF FF     
   4106 FFFC3C7C FF FF FF FF FF FF FF FF     
   4107 FFFC3C84 FF FF FF FF FF FF FF FF     
   4108 FFFC3C8C FF FF FF FF FF FF FF FF     
   4109 FFFC3C94 FF FF FF FF FF FF FF FF     
   4110 FFFC3C9C FF FF FF FF FF FF FF FF     
   4111 FFFC3CA4 FF FF FF FF FF FF FF FF     
   4112 FFFC3CAC FF FF FF FF FF FF FF FF     
   4113 FFFC3CB4 FF FF FF FF FF FF FF FF     
   4114 FFFC3CBC FF FF FF FF FF FF FF FF     
   4115 FFFC3CC4 FF FF FF FF FF FF FF FF     
   4116 FFFC3CCC FF FF FF FF FF FF FF FF     
   4117 FFFC3CD4 FF FF FF FF FF FF FF FF     
   4118 FFFC3CDC FF FF FF FF FF FF FF FF     
   4119 FFFC3CE4 FF FF FF FF FF FF FF FF     
   4120 FFFC3CEC FF FF FF FF FF FF FF FF     
   4121 FFFC3CF4 FF FF FF FF FF FF FF FF     
   4122 FFFC3CFC FF FF FF FF FF FF FF FF     
   4123 FFFC3D04 FF FF FF FF FF FF FF FF     
   4124 FFFC3D0C FF FF FF FF FF FF FF FF     
   4125 FFFC3D14 FF FF FF FF FF FF FF FF     
   4126 FFFC3D1C FF FF FF FF FF FF FF FF     
   4127 FFFC3D24 FF FF FF FF FF FF FF FF     
   4128 FFFC3D2C FF FF FF FF FF FF FF FF     
   4129 FFFC3D34 FF FF FF FF FF FF FF FF     
   4130 FFFC3D3C FF FF FF FF FF FF FF FF     
   4131 FFFC3D44 FF FF FF FF FF FF FF FF     
   4132 FFFC3D4C FF FF FF FF FF FF FF FF     
   4133 FFFC3D54 FF FF FF FF FF FF FF FF     
   4134 FFFC3D5C FF FF FF FF FF FF FF FF     
   4135 FFFC3D64 FF FF FF FF FF FF FF FF     
   4136 FFFC3D6C FF FF FF FF FF FF FF FF     
   4137 FFFC3D74 FF FF FF FF FF FF FF FF     
   4138 FFFC3D7C FF FF FF FF FF FF FF FF     
   4139 FFFC3D84 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 17
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4140 FFFC3D8C FF FF FF FF FF FF FF FF     
   4141 FFFC3D94 FF FF FF FF FF FF FF FF     
   4142 FFFC3D9C FF FF FF FF FF FF FF FF     
   4143 FFFC3DA4 FF FF FF FF FF FF FF FF     
   4144 FFFC3DAC FF FF FF FF FF FF FF FF     
   4145 FFFC3DB4 FF FF FF FF FF FF FF FF     
   4146 FFFC3DBC FF FF FF FF FF FF FF FF     
   4147 FFFC3DC4 FF FF FF FF FF FF FF FF     
   4148 FFFC3DCC FF FF FF FF FF FF FF FF     
   4149 FFFC3DD4 FF FF FF FF FF FF FF FF     
   4150 FFFC3DDC FF FF FF FF FF FF FF FF     
   4151 FFFC3DE4 FF FF FF FF FF FF FF FF     
   4152 FFFC3DEC FF FF FF FF FF FF FF FF     
   4153 FFFC3DF4 FF FF FF FF FF FF FF FF     
   4154 FFFC3DFC FF FF FF FF FF FF FF FF     
   4155 FFFC3E04 FF FF FF FF FF FF FF FF     
   4156 FFFC3E0C FF FF FF FF FF FF FF FF     
   4157 FFFC3E14 FF FF FF FF FF FF FF FF     
   4158 FFFC3E1C FF FF FF FF FF FF FF FF     
   4159 FFFC3E24 FF FF FF FF FF FF FF FF     
   4160 FFFC3E2C FF FF FF FF FF FF FF FF     
   4161 FFFC3E34 FF FF FF FF FF FF FF FF     
   4162 FFFC3E3C FF FF FF FF FF FF FF FF     
   4163 FFFC3E44 FF FF FF FF FF FF FF FF     
   4164 FFFC3E4C FF FF FF FF FF FF FF FF     
   4165 FFFC3E54 FF FF FF FF FF FF FF FF     
   4166 FFFC3E5C FF FF FF FF FF FF FF FF     
   4167 FFFC3E64 FF FF FF FF FF FF FF FF     
   4168 FFFC3E6C FF FF FF FF FF FF FF FF     
   4169 FFFC3E74 FF FF FF FF FF FF FF FF     
   4170 FFFC3E7C FF FF FF FF FF FF FF FF     
   4171 FFFC3E84 FF FF FF FF FF FF FF FF     
   4172 FFFC3E8C FF FF FF FF FF FF FF FF     
   4173 FFFC3E94 FF FF FF FF FF FF FF FF     
   4174 FFFC3E9C FF FF FF FF FF FF FF FF     
   4175 FFFC3EA4 FF FF FF FF FF FF FF FF     
   4176 FFFC3EAC FF FF FF FF FF FF FF FF     
   4177 FFFC3EB4 FF FF FF FF FF FF FF FF     
   4178 FFFC3EBC FF FF FF FF FF FF FF FF     
   4179 FFFC3EC4 FF FF FF FF FF FF FF FF     
   4180 FFFC3ECC FF FF FF FF FF FF FF FF     
   4181 FFFC3ED4 FF FF FF FF FF FF FF FF     
   4182 FFFC3EDC FF FF FF FF FF FF FF FF     
   4183 FFFC3EE4 FF FF FF FF FF FF FF FF     
   4184 FFFC3EEC FF FF FF FF FF FF FF FF     
   4185 FFFC3EF4 FF FF FF FF FF FF FF FF     
   4186 FFFC3EFC FF FF FF FF FF FF FF FF     
   4187 FFFC3F04 FF FF FF FF FF FF FF FF     
   4188 FFFC3F0C FF FF FF FF FF FF FF FF     
   4189 FFFC3F14 FF FF FF FF FF FF FF FF     
   4190 FFFC3F1C FF FF FF FF FF FF FF FF     
   4191 FFFC3F24 FF FF FF FF FF FF FF FF     
   4192 FFFC3F2C FF FF FF FF FF FF FF FF     
   4193 FFFC3F34 FF FF FF FF FF FF FF FF     
   4194 FFFC3F3C FF FF FF FF FF FF FF FF     
   4195 FFFC3F44 FF FF FF FF FF FF FF FF     
   4196 FFFC3F4C FF FF FF FF FF FF FF FF     
   4197 FFFC3F54 FF FF FF FF FF FF FF FF     
   4198 FFFC3F5C FF FF FF FF FF FF FF FF     
   4199 FFFC3F64 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 18
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4200 FFFC3F6C FF FF FF FF FF FF FF FF     
   4201 FFFC3F74 FF FF FF FF FF FF FF FF     
   4202 FFFC3F7C FF FF FF FF FF FF FF FF     
   4203 FFFC3F84 FF FF FF FF FF FF FF FF     
   4204 FFFC3F8C FF FF FF FF FF FF FF FF     
   4205 FFFC3F94 FF FF FF FF FF FF FF FF     
   4206 FFFC3F9C FF FF FF FF FF FF FF FF     
   4207 FFFC3FA4 FF FF FF FF FF FF FF FF     
   4208 FFFC3FAC FF FF FF FF FF FF FF FF     
   4209 FFFC3FB4 FF FF FF FF FF FF FF FF     
   4210 FFFC3FBC FF FF FF FF FF FF FF FF     
   4211 FFFC3FC4 FF FF FF FF FF FF FF FF     
   4212 FFFC3FCC FF FF FF FF FF FF FF FF     
   4213 FFFC3FD4 FF FF FF FF FF FF FF FF     
   4214 FFFC3FDC FF FF FF FF FF FF FF FF     
   4215 FFFC3FE4 FF FF FF FF FF FF FF FF     
   4216 FFFC3FEC FF FF FF FF FF FF FF FF     
   4217 FFFC3FF4 FF FF FF FF FF FF FF FF     
   4218 FFFC3FFC FF FF FF FF FF FF FF FF     
   4219 FFFC4004 FF FF FF FF FF FF FF FF     
   4220 FFFC400C FF FF FF FF FF FF FF FF     
   4221 FFFC4014 FF FF FF FF FF FF FF FF     
   4222 FFFC401C FF FF FF FF FF FF FF FF     
   4223 FFFC4024 FF FF FF FF FF FF FF FF     
   4224 FFFC402C FF FF FF FF FF FF FF FF     
   4225 FFFC4034 FF FF FF FF FF FF FF FF     
   4226 FFFC403C FF FF FF FF FF FF FF FF     
   4227 FFFC4044 FF FF FF FF FF FF FF FF     
   4228 FFFC404C FF FF FF FF FF FF FF FF     
   4229 FFFC4054 FF FF FF FF FF FF FF FF     
   4230 FFFC405C FF FF FF FF FF FF FF FF     
   4231 FFFC4064 FF FF FF FF FF FF FF FF     
   4232 FFFC406C FF FF FF FF FF FF FF FF     
   4233 FFFC4074 FF FF FF FF FF FF FF FF     
   4234 FFFC407C FF FF FF FF FF FF FF FF     
   4235 FFFC4084 FF FF FF FF FF FF FF FF     
   4236 FFFC408C FF FF FF FF FF FF FF FF     
   4237 FFFC4094 FF FF FF FF FF FF FF FF     
   4238 FFFC409C FF FF FF FF FF FF FF FF     
   4239 FFFC40A4 FF FF FF FF FF FF FF FF     
   4240 FFFC40AC FF FF FF FF FF FF FF FF     
   4241 FFFC40B4 FF FF FF FF FF FF FF FF     
   4242 FFFC40BC FF FF FF FF FF FF FF FF     
   4243 FFFC40C4 FF FF FF FF FF FF FF FF     
   4244 FFFC40CC FF FF FF FF FF FF FF FF     
   4245 FFFC40D4 FF FF FF FF FF FF FF FF     
   4246 FFFC40DC FF FF FF FF FF FF FF FF     
   4247 FFFC40E4 FF FF FF FF FF FF FF FF     
   4248 FFFC40EC FF FF FF FF FF FF FF FF     
   4249 FFFC40F4 FF FF FF FF FF FF FF FF     
   4250 FFFC40FC FF FF FF FF FF FF FF FF     
   4251 FFFC4104 FF FF FF FF FF FF FF FF     
   4252 FFFC410C FF FF FF FF FF FF FF FF     
   4253 FFFC4114 FF FF FF FF FF FF FF FF     
   4254 FFFC411C FF FF FF FF FF FF FF FF     
   4255 FFFC4124 FF FF FF FF FF FF FF FF     
   4256 FFFC412C FF FF FF FF FF FF FF FF     
   4257 FFFC4134 FF FF FF FF FF FF FF FF     
   4258 FFFC413C FF FF FF FF FF FF FF FF     
   4259 FFFC4144 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 19
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4260 FFFC414C FF FF FF FF FF FF FF FF     
   4261 FFFC4154 FF FF FF FF FF FF FF FF     
   4262 FFFC415C FF FF FF FF FF FF FF FF     
   4263 FFFC4164 FF FF FF FF FF FF FF FF     
   4264 FFFC416C FF FF FF FF FF FF FF FF     
   4265 FFFC4174 FF FF FF FF FF FF FF FF     
   4266 FFFC417C FF FF FF FF FF FF FF FF     
   4267 FFFC4184 FF FF FF FF FF FF FF FF     
   4268 FFFC418C FF FF FF FF FF FF FF FF     
   4269 FFFC4194 FF FF FF FF FF FF FF FF     
   4270 FFFC419C FF FF FF FF FF FF FF FF     
   4271 FFFC41A4 FF FF FF FF FF FF FF FF     
   4272 FFFC41AC FF FF FF FF FF FF FF FF     
   4273 FFFC41B4 FF FF FF FF FF FF FF FF     
   4274 FFFC41BC FF FF FF FF FF FF FF FF     
   4275 FFFC41C4 FF FF FF FF FF FF FF FF     
   4276 FFFC41CC FF FF FF FF FF FF FF FF     
   4277 FFFC41D4 FF FF FF FF FF FF FF FF     
   4278 FFFC41DC FF FF FF FF FF FF FF FF     
   4279 FFFC41E4 FF FF FF FF FF FF FF FF     
   4280 FFFC41EC FF FF FF FF FF FF FF FF     
   4281 FFFC41F4 FF FF FF FF FF FF FF FF     
   4282 FFFC41FC FF FF FF FF FF FF FF FF     
   4283 FFFC4204 FF FF FF FF FF FF FF FF     
   4284 FFFC420C FF FF FF FF FF FF FF FF     
   4285 FFFC4214 FF FF FF FF FF FF FF FF     
   4286 FFFC421C FF FF FF FF FF FF FF FF     
   4287 FFFC4224 FF FF FF FF FF FF FF FF     
   4288 FFFC422C FF FF FF FF FF FF FF FF     
   4289 FFFC4234 FF FF FF FF FF FF FF FF     
   4290 FFFC423C FF FF FF FF FF FF FF FF     
   4291 FFFC4244 FF FF FF FF FF FF FF FF     
   4292 FFFC424C FF FF FF FF FF FF FF FF     
   4293 FFFC4254 FF FF FF FF FF FF FF FF     
   4294 FFFC425C FF FF FF FF FF FF FF FF     
   4295 FFFC4264 FF FF FF FF FF FF FF FF     
   4296 FFFC426C FF FF FF FF FF FF FF FF     
   4297 FFFC4274 FF FF FF FF FF FF FF FF     
   4298 FFFC427C FF FF FF FF FF FF FF FF     
   4299 FFFC4284 FF FF FF FF FF FF FF FF     
   4300 FFFC428C FF FF FF FF FF FF FF FF     
   4301 FFFC4294 FF FF FF FF FF FF FF FF     
   4302 FFFC429C FF FF FF FF FF FF FF FF     
   4303 FFFC42A4 FF FF FF FF FF FF FF FF     
   4304 FFFC42AC FF FF FF FF FF FF FF FF     
   4305 FFFC42B4 FF FF FF FF FF FF FF FF     
   4306 FFFC42BC FF FF FF FF FF FF FF FF     
   4307 FFFC42C4 FF FF FF FF FF FF FF FF     
   4308 FFFC42CC FF FF FF FF FF FF FF FF     
   4309 FFFC42D4 FF FF FF FF FF FF FF FF     
   4310 FFFC42DC FF FF FF FF FF FF FF FF     
   4311 FFFC42E4 FF FF FF FF FF FF FF FF     
   4312 FFFC42EC FF FF FF FF FF FF FF FF     
   4313 FFFC42F4 FF FF FF FF FF FF FF FF     
   4314 FFFC42FC FF FF FF FF FF FF FF FF     
   4315 FFFC4304 FF FF FF FF FF FF FF FF     
   4316 FFFC430C FF FF FF FF FF FF FF FF     
   4317 FFFC4314 FF FF FF FF FF FF FF FF     
   4318 FFFC431C FF FF FF FF FF FF FF FF     
   4319 FFFC4324 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 20
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4320 FFFC432C FF FF FF FF FF FF FF FF     
   4321 FFFC4334 FF FF FF FF FF FF FF FF     
   4322 FFFC433C FF FF FF FF FF FF FF FF     
   4323 FFFC4344 FF FF FF FF FF FF FF FF     
   4324 FFFC434C FF FF FF FF FF FF FF FF     
   4325 FFFC4354 FF FF FF FF FF FF FF FF     
   4326 FFFC435C FF FF FF FF FF FF FF FF     
   4327 FFFC4364 FF FF FF FF FF FF FF FF     
   4328 FFFC436C FF FF FF FF FF FF FF FF     
   4329 FFFC4374 FF FF FF FF FF FF FF FF     
   4330 FFFC437C FF FF FF FF FF FF FF FF     
   4331 FFFC4384 FF FF FF FF FF FF FF FF     
   4332 FFFC438C FF FF FF FF FF FF FF FF     
   4333 FFFC4394 FF FF FF FF FF FF FF FF     
   4334 FFFC439C FF FF FF FF FF FF FF FF     
   4335 FFFC43A4 FF FF FF FF FF FF FF FF     
   4336 FFFC43AC FF FF FF FF FF FF FF FF     
   4337 FFFC43B4 FF FF FF FF FF FF FF FF     
   4338 FFFC43BC FF FF FF FF FF FF FF FF     
   4339 FFFC43C4 FF FF FF FF FF FF FF FF     
   4340 FFFC43CC FF FF FF FF FF FF FF FF     
   4341 FFFC43D4 FF FF FF FF FF FF FF FF     
   4342 FFFC43DC FF FF FF FF FF FF FF FF     
   4343 FFFC43E4 FF FF FF FF FF FF FF FF     
   4344 FFFC43EC FF FF FF FF FF FF FF FF     
   4345 FFFC43F4 FF FF FF FF FF FF FF FF     
   4346 FFFC43FC FF FF FF FF FF FF FF FF     
   4347 FFFC4404 FF FF FF FF FF FF FF FF     
   4348 FFFC440C FF FF FF FF FF FF FF FF     
   4349 FFFC4414 FF FF FF FF FF FF FF FF     
   4350 FFFC441C FF FF FF FF FF FF FF FF     
   4351 FFFC4424 FF FF FF FF FF FF FF FF     
   4352 FFFC442C FF FF FF FF FF FF FF FF     
   4353 FFFC4434 FF FF FF FF FF FF FF FF     
   4354 FFFC443C FF FF FF FF FF FF FF FF     
   4355 FFFC4444 FF FF FF FF FF FF FF FF     
   4356 FFFC444C FF FF FF FF FF FF FF FF     
   4357 FFFC4454 FF FF FF FF FF FF FF FF     
   4358 FFFC445C FF FF FF FF FF FF FF FF     
   4359 FFFC4464 FF FF FF FF FF FF FF FF     
   4360 FFFC446C FF FF FF FF FF FF FF FF     
   4361 FFFC4474 FF FF FF FF FF FF FF FF     
   4362 FFFC447C FF FF FF FF FF FF FF FF     
   4363 FFFC4484 FF FF FF FF FF FF FF FF     
   4364 FFFC448C FF FF FF FF FF FF FF FF     
   4365 FFFC4494 FF FF FF FF FF FF FF FF     
   4366 FFFC449C FF FF FF FF FF FF FF FF     
   4367 FFFC44A4 FF FF FF FF FF FF FF FF     
   4368 FFFC44AC FF FF FF FF FF FF FF FF     
   4369 FFFC44B4 FF FF FF FF FF FF FF FF     
   4370 FFFC44BC FF FF FF FF FF FF FF FF     
   4371 FFFC44C4 FF FF FF FF FF FF FF FF     
   4372 FFFC44CC FF FF FF FF FF FF FF FF     
   4373 FFFC44D4 FF FF FF FF FF FF FF FF     
   4374 FFFC44DC FF FF FF FF FF FF FF FF     
   4375 FFFC44E4 FF FF FF FF FF FF FF FF     
   4376 FFFC44EC FF FF FF FF FF FF FF FF     
   4377 FFFC44F4 FF FF FF FF FF FF FF FF     
   4378 FFFC44FC FF FF FF FF FF FF FF FF     
   4379 FFFC4504 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 21
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4380 FFFC450C FF FF FF FF FF FF FF FF     
   4381 FFFC4514 FF FF FF FF FF FF FF FF     
   4382 FFFC451C FF FF FF FF FF FF FF FF     
   4383 FFFC4524 FF FF FF FF FF FF FF FF     
   4384 FFFC452C FF FF FF FF FF FF FF FF     
   4385 FFFC4534 FF FF FF FF FF FF FF FF     
   4386 FFFC453C FF FF FF FF FF FF FF FF     
   4387 FFFC4544 FF FF FF FF FF FF FF FF     
   4388 FFFC454C FF FF FF FF FF FF FF FF     
   4389 FFFC4554 FF FF FF FF FF FF FF FF     
   4390 FFFC455C FF FF FF FF FF FF FF FF     
   4391 FFFC4564 FF FF FF FF FF FF FF FF     
   4392 FFFC456C FF FF FF FF FF FF FF FF     
   4393 FFFC4574 FF FF FF FF FF FF FF FF     
   4394 FFFC457C FF FF FF FF FF FF FF FF     
   4395 FFFC4584 FF FF FF FF FF FF FF FF     
   4396 FFFC458C FF FF FF FF FF FF FF FF     
   4397 FFFC4594 FF FF FF FF FF FF FF FF     
   4398 FFFC459C FF FF FF FF FF FF FF FF     
   4399 FFFC45A4 FF FF FF FF FF FF FF FF     
   4400 FFFC45AC FF FF FF FF FF FF FF FF     
   4401 FFFC45B4 FF FF FF FF FF FF FF FF     
   4402 FFFC45BC FF FF FF FF FF FF FF FF     
   4403 FFFC45C4 FF FF FF FF FF FF FF FF     
   4404 FFFC45CC FF FF FF FF FF FF FF FF     
   4405 FFFC45D4 FF FF FF FF FF FF FF FF     
   4406 FFFC45DC FF FF FF FF FF FF FF FF     
   4407 FFFC45E4 FF FF FF FF FF FF FF FF     
   4408 FFFC45EC FF FF FF FF FF FF FF FF     
   4409 FFFC45F4 FF FF FF FF FF FF FF FF     
   4410 FFFC45FC FF FF FF FF FF FF FF FF     
   4411 FFFC4604 FF FF FF FF FF FF FF FF     
   4412 FFFC460C FF FF FF FF FF FF FF FF     
   4413 FFFC4614 FF FF FF FF FF FF FF FF     
   4414 FFFC461C FF FF FF FF FF FF FF FF     
   4415 FFFC4624 FF FF FF FF FF FF FF FF     
   4416 FFFC462C FF FF FF FF FF FF FF FF     
   4417 FFFC4634 FF FF FF FF FF FF FF FF     
   4418 FFFC463C FF FF FF FF FF FF FF FF     
   4419 FFFC4644 FF FF FF FF FF FF FF FF     
   4420 FFFC464C FF FF FF FF FF FF FF FF     
   4421 FFFC4654 FF FF FF FF FF FF FF FF     
   4422 FFFC465C FF FF FF FF FF FF FF FF     
   4423 FFFC4664 FF FF FF FF FF FF FF FF     
   4424 FFFC466C FF FF FF FF FF FF FF FF     
   4425 FFFC4674 FF FF FF FF FF FF FF FF     
   4426 FFFC467C FF FF FF FF FF FF FF FF     
   4427 FFFC4684 FF FF FF FF FF FF FF FF     
   4428 FFFC468C FF FF FF FF FF FF FF FF     
   4429 FFFC4694 FF FF FF FF FF FF FF FF     
   4430 FFFC469C FF FF FF FF FF FF FF FF     
   4431 FFFC46A4 FF FF FF FF FF FF FF FF     
   4432 FFFC46AC FF FF FF FF FF FF FF FF     
   4433 FFFC46B4 FF FF FF FF FF FF FF FF     
   4434 FFFC46BC FF FF FF FF FF FF FF FF     
   4435 FFFC46C4 FF FF FF FF FF FF FF FF     
   4436 FFFC46CC FF FF FF FF FF FF FF FF     
   4437 FFFC46D4 FF FF FF FF FF FF FF FF     
   4438 FFFC46DC FF FF FF FF FF FF FF FF     
   4439 FFFC46E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 22
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4440 FFFC46EC FF FF FF FF FF FF FF FF     
   4441 FFFC46F4 FF FF FF FF FF FF FF FF     
   4442 FFFC46FC FF FF FF FF FF FF FF FF     
   4443 FFFC4704 FF FF FF FF FF FF FF FF     
   4444 FFFC470C FF FF FF FF FF FF FF FF     
   4445 FFFC4714 FF FF FF FF FF FF FF FF     
   4446 FFFC471C FF FF FF FF FF FF FF FF     
   4447 FFFC4724 FF FF FF FF FF FF FF FF     
   4448 FFFC472C FF FF FF FF FF FF FF FF     
   4449 FFFC4734 FF FF FF FF FF FF FF FF     
   4450 FFFC473C FF FF FF FF FF FF FF FF     
   4451 FFFC4744 FF FF FF FF FF FF FF FF     
   4452 FFFC474C FF FF FF FF FF FF FF FF     
   4453 FFFC4754 FF FF FF FF FF FF FF FF     
   4454 FFFC475C FF FF FF FF FF FF FF FF     
   4455 FFFC4764 FF FF FF FF FF FF FF FF     
   4456 FFFC476C FF FF FF FF FF FF FF FF     
   4457 FFFC4774 FF FF FF FF FF FF FF FF     
   4458 FFFC477C FF FF FF FF FF FF FF FF     
   4459 FFFC4784 FF FF FF FF FF FF FF FF     
   4460 FFFC478C FF FF FF FF FF FF FF FF     
   4461 FFFC4794 FF FF FF FF FF FF FF FF     
   4462 FFFC479C FF FF FF FF FF FF FF FF     
   4463 FFFC47A4 FF FF FF FF FF FF FF FF     
   4464 FFFC47AC FF FF FF FF FF FF FF FF     
   4465 FFFC47B4 FF FF FF FF FF FF FF FF     
   4466 FFFC47BC FF FF FF FF FF FF FF FF     
   4467 FFFC47C4 FF FF FF FF FF FF FF FF     
   4468 FFFC47CC FF FF FF FF FF FF FF FF     
   4469 FFFC47D4 FF FF FF FF FF FF FF FF     
   4470 FFFC47DC FF FF FF FF FF FF FF FF     
   4471 FFFC47E4 FF FF FF FF FF FF FF FF     
   4472 FFFC47EC FF FF FF FF FF FF FF FF     
   4473 FFFC47F4 FF FF FF FF FF FF FF FF     
   4474 FFFC47FC FF FF FF FF FF FF FF FF     
   4475 FFFC4804 FF FF FF FF FF FF FF FF     
   4476 FFFC480C FF FF FF FF FF FF FF FF     
   4477 FFFC4814 FF FF FF FF FF FF FF FF     
   4478 FFFC481C FF FF FF FF FF FF FF FF     
   4479 FFFC4824 FF FF FF FF FF FF FF FF     
   4480 FFFC482C FF FF FF FF FF FF FF FF     
   4481 FFFC4834 FF FF FF FF FF FF FF FF     
   4482 FFFC483C FF FF FF FF FF FF FF FF     
   4483 FFFC4844 FF FF FF FF FF FF FF FF     
   4484 FFFC484C FF FF FF FF FF FF FF FF     
   4485 FFFC4854 FF FF FF FF FF FF FF FF     
   4486 FFFC485C FF FF FF FF FF FF FF FF     
   4487 FFFC4864 FF FF FF FF FF FF FF FF     
   4488 FFFC486C FF FF FF FF FF FF FF FF     
   4489 FFFC4874 FF FF FF FF FF FF FF FF     
   4490 FFFC487C FF FF FF FF FF FF FF FF     
   4491 FFFC4884 FF FF FF FF FF FF FF FF     
   4492 FFFC488C FF FF FF FF FF FF FF FF     
   4493 FFFC4894 FF FF FF FF FF FF FF FF     
   4494 FFFC489C FF FF FF FF FF FF FF FF     
   4495 FFFC48A4 FF FF FF FF FF FF FF FF     
   4496 FFFC48AC FF FF FF FF FF FF FF FF     
   4497 FFFC48B4 FF FF FF FF FF FF FF FF     
   4498 FFFC48BC FF FF FF FF FF FF FF FF     
   4499 FFFC48C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 23
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4500 FFFC48CC FF FF FF FF FF FF FF FF     
   4501 FFFC48D4 FF FF FF FF FF FF FF FF     
   4502 FFFC48DC FF FF FF FF FF FF FF FF     
   4503 FFFC48E4 FF FF FF FF FF FF FF FF     
   4504 FFFC48EC FF FF FF FF FF FF FF FF     
   4505 FFFC48F4 FF FF FF FF FF FF FF FF     
   4506 FFFC48FC FF FF FF FF FF FF FF FF     
   4507 FFFC4904 FF FF FF FF FF FF FF FF     
   4508 FFFC490C FF FF FF FF FF FF FF FF     
   4509 FFFC4914 FF FF FF FF FF FF FF FF     
   4510 FFFC491C FF FF FF FF FF FF FF FF     
   4511 FFFC4924 FF FF FF FF FF FF FF FF     
   4512 FFFC492C FF FF FF FF FF FF FF FF     
   4513 FFFC4934 FF FF FF FF FF FF FF FF     
   4514 FFFC493C FF FF FF FF FF FF FF FF     
   4515 FFFC4944 FF FF FF FF FF FF FF FF     
   4516 FFFC494C FF FF FF FF FF FF FF FF     
   4517 FFFC4954 FF FF FF FF FF FF FF FF     
   4518 FFFC495C FF FF FF FF FF FF FF FF     
   4519 FFFC4964 FF FF FF FF FF FF FF FF     
   4520 FFFC496C FF FF FF FF FF FF FF FF     
   4521 FFFC4974 FF FF FF FF FF FF FF FF     
   4522 FFFC497C FF FF FF FF FF FF FF FF     
   4523 FFFC4984 FF FF FF FF FF FF FF FF     
   4524 FFFC498C FF FF FF FF FF FF FF FF     
   4525 FFFC4994 FF FF FF FF FF FF FF FF     
   4526 FFFC499C FF FF FF FF FF FF FF FF     
   4527 FFFC49A4 FF FF FF FF FF FF FF FF     
   4528 FFFC49AC FF FF FF FF FF FF FF FF     
   4529 FFFC49B4 FF FF FF FF FF FF FF FF     
   4530 FFFC49BC FF FF FF FF FF FF FF FF     
   4531 FFFC49C4 FF FF FF FF FF FF FF FF     
   4532 FFFC49CC FF FF FF FF FF FF FF FF     
   4533 FFFC49D4 FF FF FF FF FF FF FF FF     
   4534 FFFC49DC FF FF FF FF FF FF FF FF     
   4535 FFFC49E4 FF FF FF FF FF FF FF FF     
   4536 FFFC49EC FF FF FF FF FF FF FF FF     
   4537 FFFC49F4 FF FF FF FF FF FF FF FF     
   4538 FFFC49FC FF FF FF FF FF FF FF FF     
   4539 FFFC4A04 FF FF FF FF FF FF FF FF     
   4540 FFFC4A0C FF FF FF FF FF FF FF FF     
   4541 FFFC4A14 FF FF FF FF FF FF FF FF     
   4542 FFFC4A1C FF FF FF FF FF FF FF FF     
   4543 FFFC4A24 FF FF FF FF FF FF FF FF     
   4544 FFFC4A2C FF FF FF FF FF FF FF FF     
   4545 FFFC4A34 FF FF FF FF FF FF FF FF     
   4546 FFFC4A3C FF FF FF FF FF FF FF FF     
   4547 FFFC4A44 FF FF FF FF FF FF FF FF     
   4548 FFFC4A4C FF FF FF FF FF FF FF FF     
   4549 FFFC4A54 FF FF FF FF FF FF FF FF     
   4550 FFFC4A5C FF FF FF FF FF FF FF FF     
   4551 FFFC4A64 FF FF FF FF FF FF FF FF     
   4552 FFFC4A6C FF FF FF FF FF FF FF FF     
   4553 FFFC4A74 FF FF FF FF FF FF FF FF     
   4554 FFFC4A7C FF FF FF FF FF FF FF FF     
   4555 FFFC4A84 FF FF FF FF FF FF FF FF     
   4556 FFFC4A8C FF FF FF FF FF FF FF FF     
   4557 FFFC4A94 FF FF FF FF FF FF FF FF     
   4558 FFFC4A9C FF FF FF FF FF FF FF FF     
   4559 FFFC4AA4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 24
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4560 FFFC4AAC FF FF FF FF FF FF FF FF     
   4561 FFFC4AB4 FF FF FF FF FF FF FF FF     
   4562 FFFC4ABC FF FF FF FF FF FF FF FF     
   4563 FFFC4AC4 FF FF FF FF FF FF FF FF     
   4564 FFFC4ACC FF FF FF FF FF FF FF FF     
   4565 FFFC4AD4 FF FF FF FF FF FF FF FF     
   4566 FFFC4ADC FF FF FF FF FF FF FF FF     
   4567 FFFC4AE4 FF FF FF FF FF FF FF FF     
   4568 FFFC4AEC FF FF FF FF FF FF FF FF     
   4569 FFFC4AF4 FF FF FF FF FF FF FF FF     
   4570 FFFC4AFC FF FF FF FF FF FF FF FF     
   4571 FFFC4B04 FF FF FF FF FF FF FF FF     
   4572 FFFC4B0C FF FF FF FF FF FF FF FF     
   4573 FFFC4B14 FF FF FF FF FF FF FF FF     
   4574 FFFC4B1C FF FF FF FF FF FF FF FF     
   4575 FFFC4B24 FF FF FF FF FF FF FF FF     
   4576 FFFC4B2C FF FF FF FF FF FF FF FF     
   4577 FFFC4B34 FF FF FF FF FF FF FF FF     
   4578 FFFC4B3C FF FF FF FF FF FF FF FF     
   4579 FFFC4B44 FF FF FF FF FF FF FF FF     
   4580 FFFC4B4C FF FF FF FF FF FF FF FF     
   4581 FFFC4B54 FF FF FF FF FF FF FF FF     
   4582 FFFC4B5C FF FF FF FF FF FF FF FF     
   4583 FFFC4B64 FF FF FF FF FF FF FF FF     
   4584 FFFC4B6C FF FF FF FF FF FF FF FF     
   4585 FFFC4B74 FF FF FF FF FF FF FF FF     
   4586 FFFC4B7C FF FF FF FF FF FF FF FF     
   4587 FFFC4B84 FF FF FF FF FF FF FF FF     
   4588 FFFC4B8C FF FF FF FF FF FF FF FF     
   4589 FFFC4B94 FF FF FF FF FF FF FF FF     
   4590 FFFC4B9C FF FF FF FF FF FF FF FF     
   4591 FFFC4BA4 FF FF FF FF FF FF FF FF     
   4592 FFFC4BAC FF FF FF FF FF FF FF FF     
   4593 FFFC4BB4 FF FF FF FF FF FF FF FF     
   4594 FFFC4BBC FF FF FF FF FF FF FF FF     
   4595 FFFC4BC4 FF FF FF FF FF FF FF FF     
   4596 FFFC4BCC FF FF FF FF FF FF FF FF     
   4597 FFFC4BD4 FF FF FF FF FF FF FF FF     
   4598 FFFC4BDC FF FF FF FF FF FF FF FF     
   4599 FFFC4BE4 FF FF FF FF FF FF FF FF     
   4600 FFFC4BEC FF FF FF FF FF FF FF FF     
   4601 FFFC4BF4 FF FF FF FF FF FF FF FF     
   4602 FFFC4BFC FF FF FF FF FF FF FF FF     
   4603 FFFC4C04 FF FF FF FF FF FF FF FF     
   4604 FFFC4C0C FF FF FF FF FF FF FF FF     
   4605 FFFC4C14 FF FF FF FF FF FF FF FF     
   4606 FFFC4C1C FF FF FF FF FF FF FF FF     
   4607 FFFC4C24 FF FF FF FF FF FF FF FF     
   4608 FFFC4C2C FF FF FF FF FF FF FF FF     
   4609 FFFC4C34 FF FF FF FF FF FF FF FF     
   4610 FFFC4C3C FF FF FF FF FF FF FF FF     
   4611 FFFC4C44 FF FF FF FF FF FF FF FF     
   4612 FFFC4C4C FF FF FF FF FF FF FF FF     
   4613 FFFC4C54 FF FF FF FF FF FF FF FF     
   4614 FFFC4C5C FF FF FF FF FF FF FF FF     
   4615 FFFC4C64 FF FF FF FF FF FF FF FF     
   4616 FFFC4C6C FF FF FF FF FF FF FF FF     
   4617 FFFC4C74 FF FF FF FF FF FF FF FF     
   4618 FFFC4C7C FF FF FF FF FF FF FF FF     
   4619 FFFC4C84 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 25
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4620 FFFC4C8C FF FF FF FF FF FF FF FF     
   4621 FFFC4C94 FF FF FF FF FF FF FF FF     
   4622 FFFC4C9C FF FF FF FF FF FF FF FF     
   4623 FFFC4CA4 FF FF FF FF FF FF FF FF     
   4624 FFFC4CAC FF FF FF FF FF FF FF FF     
   4625 FFFC4CB4 FF FF FF FF FF FF FF FF     
   4626 FFFC4CBC FF FF FF FF FF FF FF FF     
   4627 FFFC4CC4 FF FF FF FF FF FF FF FF     
   4628 FFFC4CCC FF FF FF FF FF FF FF FF     
   4629 FFFC4CD4 FF FF FF FF FF FF FF FF     
   4630 FFFC4CDC FF FF FF FF FF FF FF FF     
   4631 FFFC4CE4 FF FF FF FF FF FF FF FF     
   4632 FFFC4CEC FF FF FF FF FF FF FF FF     
   4633 FFFC4CF4 FF FF FF FF FF FF FF FF     
   4634 FFFC4CFC FF FF FF FF FF FF FF FF     
   4635 FFFC4D04 FF FF FF FF FF FF FF FF     
   4636 FFFC4D0C FF FF FF FF FF FF FF FF     
   4637 FFFC4D14 FF FF FF FF FF FF FF FF     
   4638 FFFC4D1C FF FF FF FF FF FF FF FF     
   4639 FFFC4D24 FF FF FF FF FF FF FF FF     
   4640 FFFC4D2C FF FF FF FF FF FF FF FF     
   4641 FFFC4D34 FF FF FF FF FF FF FF FF     
   4642 FFFC4D3C FF FF FF FF FF FF FF FF     
   4643 FFFC4D44 FF FF FF FF FF FF FF FF     
   4644 FFFC4D4C FF FF FF FF FF FF FF FF     
   4645 FFFC4D54 FF FF FF FF FF FF FF FF     
   4646 FFFC4D5C FF FF FF FF FF FF FF FF     
   4647 FFFC4D64 FF FF FF FF FF FF FF FF     
   4648 FFFC4D6C FF FF FF FF FF FF FF FF     
   4649 FFFC4D74 FF FF FF FF FF FF FF FF     
   4650 FFFC4D7C FF FF FF FF FF FF FF FF     
   4651 FFFC4D84 FF FF FF FF FF FF FF FF     
   4652 FFFC4D8C FF FF FF FF FF FF FF FF     
   4653 FFFC4D94 FF FF FF FF FF FF FF FF     
   4654 FFFC4D9C FF FF FF FF FF FF FF FF     
   4655 FFFC4DA4 FF FF FF FF FF FF FF FF     
   4656 FFFC4DAC FF FF FF FF FF FF FF FF     
   4657 FFFC4DB4 FF FF FF FF FF FF FF FF     
   4658 FFFC4DBC FF FF FF FF FF FF FF FF     
   4659 FFFC4DC4 FF FF FF FF FF FF FF FF     
   4660 FFFC4DCC FF FF FF FF FF FF FF FF     
   4661 FFFC4DD4 FF FF FF FF FF FF FF FF     
   4662 FFFC4DDC FF FF FF FF FF FF FF FF     
   4663 FFFC4DE4 FF FF FF FF FF FF FF FF     
   4664 FFFC4DEC FF FF FF FF FF FF FF FF     
   4665 FFFC4DF4 FF FF FF FF FF FF FF FF     
   4666 FFFC4DFC FF FF FF FF FF FF FF FF     
   4667 FFFC4E04 FF FF FF FF FF FF FF FF     
   4668 FFFC4E0C FF FF FF FF FF FF FF FF     
   4669 FFFC4E14 FF FF FF FF FF FF FF FF     
   4670 FFFC4E1C FF FF FF FF FF FF FF FF     
   4671 FFFC4E24 FF FF FF FF FF FF FF FF     
   4672 FFFC4E2C FF FF FF FF FF FF FF FF     
   4673 FFFC4E34 FF FF FF FF FF FF FF FF     
   4674 FFFC4E3C FF FF FF FF FF FF FF FF     
   4675 FFFC4E44 FF FF FF FF FF FF FF FF     
   4676 FFFC4E4C FF FF FF FF FF FF FF FF     
   4677 FFFC4E54 FF FF FF FF FF FF FF FF     
   4678 FFFC4E5C FF FF FF FF FF FF FF FF     
   4679 FFFC4E64 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 26
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4680 FFFC4E6C FF FF FF FF FF FF FF FF     
   4681 FFFC4E74 FF FF FF FF FF FF FF FF     
   4682 FFFC4E7C FF FF FF FF FF FF FF FF     
   4683 FFFC4E84 FF FF FF FF FF FF FF FF     
   4684 FFFC4E8C FF FF FF FF FF FF FF FF     
   4685 FFFC4E94 FF FF FF FF FF FF FF FF     
   4686 FFFC4E9C FF FF FF FF FF FF FF FF     
   4687 FFFC4EA4 FF FF FF FF FF FF FF FF     
   4688 FFFC4EAC FF FF FF FF FF FF FF FF     
   4689 FFFC4EB4 FF FF FF FF FF FF FF FF     
   4690 FFFC4EBC FF FF FF FF FF FF FF FF     
   4691 FFFC4EC4 FF FF FF FF FF FF FF FF     
   4692 FFFC4ECC FF FF FF FF FF FF FF FF     
   4693 FFFC4ED4 FF FF FF FF FF FF FF FF     
   4694 FFFC4EDC FF FF FF FF FF FF FF FF     
   4695 FFFC4EE4 FF FF FF FF FF FF FF FF     
   4696 FFFC4EEC FF FF FF FF FF FF FF FF     
   4697 FFFC4EF4 FF FF FF FF FF FF FF FF     
   4698 FFFC4EFC FF FF FF FF FF FF FF FF     
   4699 FFFC4F04 FF FF FF FF FF FF FF FF     
   4700 FFFC4F0C FF FF FF FF FF FF FF FF     
   4701 FFFC4F14 FF FF FF FF FF FF FF FF     
   4702 FFFC4F1C FF FF FF FF FF FF FF FF     
   4703 FFFC4F24 FF FF FF FF FF FF FF FF     
   4704 FFFC4F2C FF FF FF FF FF FF FF FF     
   4705 FFFC4F34 FF FF FF FF FF FF FF FF     
   4706 FFFC4F3C FF FF FF FF FF FF FF FF     
   4707 FFFC4F44 FF FF FF FF FF FF FF FF     
   4708 FFFC4F4C FF FF FF FF FF FF FF FF     
   4709 FFFC4F54 FF FF FF FF FF FF FF FF     
   4710 FFFC4F5C FF FF FF FF FF FF FF FF     
   4711 FFFC4F64 FF FF FF FF FF FF FF FF     
   4712 FFFC4F6C FF FF FF FF FF FF FF FF     
   4713 FFFC4F74 FF FF FF FF FF FF FF FF     
   4714 FFFC4F7C FF FF FF FF FF FF FF FF     
   4715 FFFC4F84 FF FF FF FF FF FF FF FF     
   4716 FFFC4F8C FF FF FF FF FF FF FF FF     
   4717 FFFC4F94 FF FF FF FF FF FF FF FF     
   4718 FFFC4F9C FF FF FF FF FF FF FF FF     
   4719 FFFC4FA4 FF FF FF FF FF FF FF FF     
   4720 FFFC4FAC FF FF FF FF FF FF FF FF     
   4721 FFFC4FB4 FF FF FF FF FF FF FF FF     
   4722 FFFC4FBC FF FF FF FF FF FF FF FF     
   4723 FFFC4FC4 FF FF FF FF FF FF FF FF     
   4724 FFFC4FCC FF FF FF FF FF FF FF FF     
   4725 FFFC4FD4 FF FF FF FF FF FF FF FF     
   4726 FFFC4FDC FF FF FF FF FF FF FF FF     
   4727 FFFC4FE4 FF FF FF FF FF FF FF FF     
   4728 FFFC4FEC FF FF FF FF FF FF FF FF     
   4729 FFFC4FF4 FF FF FF FF FF FF FF FF     
   4730 FFFC4FFC FF FF FF FF FF FF FF FF     
   4731 FFFC5004 FF FF FF FF FF FF FF FF     
   4732 FFFC500C FF FF FF FF FF FF FF FF     
   4733 FFFC5014 FF FF FF FF FF FF FF FF     
   4734 FFFC501C FF FF FF FF FF FF FF FF     
   4735 FFFC5024 FF FF FF FF FF FF FF FF     
   4736 FFFC502C FF FF FF FF FF FF FF FF     
   4737 FFFC5034 FF FF FF FF FF FF FF FF     
   4738 FFFC503C FF FF FF FF FF FF FF FF     
   4739 FFFC5044 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 27
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4740 FFFC504C FF FF FF FF FF FF FF FF     
   4741 FFFC5054 FF FF FF FF FF FF FF FF     
   4742 FFFC505C FF FF FF FF FF FF FF FF     
   4743 FFFC5064 FF FF FF FF FF FF FF FF     
   4744 FFFC506C FF FF FF FF FF FF FF FF     
   4745 FFFC5074 FF FF FF FF FF FF FF FF     
   4746 FFFC507C FF FF FF FF FF FF FF FF     
   4747 FFFC5084 FF FF FF FF FF FF FF FF     
   4748 FFFC508C FF FF FF FF FF FF FF FF     
   4749 FFFC5094 FF FF FF FF FF FF FF FF     
   4750 FFFC509C FF FF FF FF FF FF FF FF     
   4751 FFFC50A4 FF FF FF FF FF FF FF FF     
   4752 FFFC50AC FF FF FF FF FF FF FF FF     
   4753 FFFC50B4 FF FF FF FF FF FF FF FF     
   4754 FFFC50BC FF FF FF FF FF FF FF FF     
   4755 FFFC50C4 FF FF FF FF FF FF FF FF     
   4756 FFFC50CC FF FF FF FF FF FF FF FF     
   4757 FFFC50D4 FF FF FF FF FF FF FF FF     
   4758 FFFC50DC FF FF FF FF FF FF FF FF     
   4759 FFFC50E4 FF FF FF FF FF FF FF FF     
   4760 FFFC50EC FF FF FF FF FF FF FF FF     
   4761 FFFC50F4 FF FF FF FF FF FF FF FF     
   4762 FFFC50FC FF FF FF FF FF FF FF FF     
   4763 FFFC5104 FF FF FF FF FF FF FF FF     
   4764 FFFC510C FF FF FF FF FF FF FF FF     
   4765 FFFC5114 FF FF FF FF FF FF FF FF     
   4766 FFFC511C FF FF FF FF FF FF FF FF     
   4767 FFFC5124 FF FF FF FF FF FF FF FF     
   4768 FFFC512C FF FF FF FF FF FF FF FF     
   4769 FFFC5134 FF FF FF FF FF FF FF FF     
   4770 FFFC513C FF FF FF FF FF FF FF FF     
   4771 FFFC5144 FF FF FF FF FF FF FF FF     
   4772 FFFC514C FF FF FF FF FF FF FF FF     
   4773 FFFC5154 FF FF FF FF FF FF FF FF     
   4774 FFFC515C FF FF FF FF FF FF FF FF     
   4775 FFFC5164 FF FF FF FF FF FF FF FF     
   4776 FFFC516C FF FF FF FF FF FF FF FF     
   4777 FFFC5174 FF FF FF FF FF FF FF FF     
   4778 FFFC517C FF FF FF FF FF FF FF FF     
   4779 FFFC5184 FF FF FF FF FF FF FF FF     
   4780 FFFC518C FF FF FF FF FF FF FF FF     
   4781 FFFC5194 FF FF FF FF FF FF FF FF     
   4782 FFFC519C FF FF FF FF FF FF FF FF     
   4783 FFFC51A4 FF FF FF FF FF FF FF FF     
   4784 FFFC51AC FF FF FF FF FF FF FF FF     
   4785 FFFC51B4 FF FF FF FF FF FF FF FF     
   4786 FFFC51BC FF FF FF FF FF FF FF FF     
   4787 FFFC51C4 FF FF FF FF FF FF FF FF     
   4788 FFFC51CC FF FF FF FF FF FF FF FF     
   4789 FFFC51D4 FF FF FF FF FF FF FF FF     
   4790 FFFC51DC FF FF FF FF FF FF FF FF     
   4791 FFFC51E4 FF FF FF FF FF FF FF FF     
   4792 FFFC51EC FF FF FF FF FF FF FF FF     
   4793 FFFC51F4 FF FF FF FF FF FF FF FF     
   4794 FFFC51FC FF FF FF FF FF FF FF FF     
   4795 FFFC5204 FF FF FF FF FF FF FF FF     
   4796 FFFC520C FF FF FF FF FF FF FF FF     
   4797 FFFC5214 FF FF FF FF FF FF FF FF     
   4798 FFFC521C FF FF FF FF FF FF FF FF     
   4799 FFFC5224 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 28
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4800 FFFC522C FF FF FF FF FF FF FF FF     
   4801 FFFC5234 FF FF FF FF FF FF FF FF     
   4802 FFFC523C FF FF FF FF FF FF FF FF     
   4803 FFFC5244 FF FF FF FF FF FF FF FF     
   4804 FFFC524C FF FF FF FF FF FF FF FF     
   4805 FFFC5254 FF FF FF FF FF FF FF FF     
   4806 FFFC525C FF FF FF FF FF FF FF FF     
   4807 FFFC5264 FF FF FF FF FF FF FF FF     
   4808 FFFC526C FF FF FF FF FF FF FF FF     
   4809 FFFC5274 FF FF FF FF FF FF FF FF     
   4810 FFFC527C FF FF FF FF FF FF FF FF     
   4811 FFFC5284 FF FF FF FF FF FF FF FF     
   4812 FFFC528C FF FF FF FF FF FF FF FF     
   4813 FFFC5294 FF FF FF FF FF FF FF FF     
   4814 FFFC529C FF FF FF FF FF FF FF FF     
   4815 FFFC52A4 FF FF FF FF FF FF FF FF     
   4816 FFFC52AC FF FF FF FF FF FF FF FF     
   4817 FFFC52B4 FF FF FF FF FF FF FF FF     
   4818 FFFC52BC FF FF FF FF FF FF FF FF     
   4819 FFFC52C4 FF FF FF FF FF FF FF FF     
   4820 FFFC52CC FF FF FF FF FF FF FF FF     
   4821 FFFC52D4 FF FF FF FF FF FF FF FF     
   4822 FFFC52DC FF FF FF FF FF FF FF FF     
   4823 FFFC52E4 FF FF FF FF FF FF FF FF     
   4824 FFFC52EC FF FF FF FF FF FF FF FF     
   4825 FFFC52F4 FF FF FF FF FF FF FF FF     
   4826 FFFC52FC FF FF FF FF FF FF FF FF     
   4827 FFFC5304 FF FF FF FF FF FF FF FF     
   4828 FFFC530C FF FF FF FF FF FF FF FF     
   4829 FFFC5314 FF FF FF FF FF FF FF FF     
   4830 FFFC531C FF FF FF FF FF FF FF FF     
   4831 FFFC5324 FF FF FF FF FF FF FF FF     
   4832 FFFC532C FF FF FF FF FF FF FF FF     
   4833 FFFC5334 FF FF FF FF FF FF FF FF     
   4834 FFFC533C FF FF FF FF FF FF FF FF     
   4835 FFFC5344 FF FF FF FF FF FF FF FF     
   4836 FFFC534C FF FF FF FF FF FF FF FF     
   4837 FFFC5354 FF FF FF FF FF FF FF FF     
   4838 FFFC535C FF FF FF FF FF FF FF FF     
   4839 FFFC5364 FF FF FF FF FF FF FF FF     
   4840 FFFC536C FF FF FF FF FF FF FF FF     
   4841 FFFC5374 FF FF FF FF FF FF FF FF     
   4842 FFFC537C FF FF FF FF FF FF FF FF     
   4843 FFFC5384 FF FF FF FF FF FF FF FF     
   4844 FFFC538C FF FF FF FF FF FF FF FF     
   4845 FFFC5394 FF FF FF FF FF FF FF FF     
   4846 FFFC539C FF FF FF FF FF FF FF FF     
   4847 FFFC53A4 FF FF FF FF FF FF FF FF     
   4848 FFFC53AC FF FF FF FF FF FF FF FF     
   4849 FFFC53B4 FF FF FF FF FF FF FF FF     
   4850 FFFC53BC FF FF FF FF FF FF FF FF     
   4851 FFFC53C4 FF FF FF FF FF FF FF FF     
   4852 FFFC53CC FF FF FF FF FF FF FF FF     
   4853 FFFC53D4 FF FF FF FF FF FF FF FF     
   4854 FFFC53DC FF FF FF FF FF FF FF FF     
   4855 FFFC53E4 FF FF FF FF FF FF FF FF     
   4856 FFFC53EC FF FF FF FF FF FF FF FF     
   4857 FFFC53F4 FF FF FF FF FF FF FF FF     
   4858 FFFC53FC FF FF FF FF FF FF FF FF     
   4859 FFFC5404 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 29
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4860 FFFC540C FF FF FF FF FF FF FF FF     
   4861 FFFC5414 FF FF FF FF FF FF FF FF     
   4862 FFFC541C FF FF FF FF FF FF FF FF     
   4863 FFFC5424 FF FF FF FF FF FF FF FF     
   4864 FFFC542C FF FF FF FF FF FF FF FF     
   4865 FFFC5434 FF FF FF FF FF FF FF FF     
   4866 FFFC543C FF FF FF FF FF FF FF FF     
   4867 FFFC5444 FF FF FF FF FF FF FF FF     
   4868 FFFC544C FF FF FF FF FF FF FF FF     
   4869 FFFC5454 FF FF FF FF FF FF FF FF     
   4870 FFFC545C FF FF FF FF FF FF FF FF     
   4871 FFFC5464 FF FF FF FF FF FF FF FF     
   4872 FFFC546C FF FF FF FF FF FF FF FF     
   4873 FFFC5474 FF FF FF FF FF FF FF FF     
   4874 FFFC547C FF FF FF FF FF FF FF FF     
   4875 FFFC5484 FF FF FF FF FF FF FF FF     
   4876 FFFC548C FF FF FF FF FF FF FF FF     
   4877 FFFC5494 FF FF FF FF FF FF FF FF     
   4878 FFFC549C FF FF FF FF FF FF FF FF     
   4879 FFFC54A4 FF FF FF FF FF FF FF FF     
   4880 FFFC54AC FF FF FF FF FF FF FF FF     
   4881 FFFC54B4 FF FF FF FF FF FF FF FF     
   4882 FFFC54BC FF FF FF FF FF FF FF FF     
   4883 FFFC54C4 FF FF FF FF FF FF FF FF     
   4884 FFFC54CC FF FF FF FF FF FF FF FF     
   4885 FFFC54D4 FF FF FF FF FF FF FF FF     
   4886 FFFC54DC FF FF FF FF FF FF FF FF     
   4887 FFFC54E4 FF FF FF FF FF FF FF FF     
   4888 FFFC54EC FF FF FF FF FF FF FF FF     
   4889 FFFC54F4 FF FF FF FF FF FF FF FF     
   4890 FFFC54FC FF FF FF FF FF FF FF FF     
   4891 FFFC5504 FF FF FF FF FF FF FF FF     
   4892 FFFC550C FF FF FF FF FF FF FF FF     
   4893 FFFC5514 FF FF FF FF FF FF FF FF     
   4894 FFFC551C FF FF FF FF FF FF FF FF     
   4895 FFFC5524 FF FF FF FF FF FF FF FF     
   4896 FFFC552C FF FF FF FF FF FF FF FF     
   4897 FFFC5534 FF FF FF FF FF FF FF FF     
   4898 FFFC553C FF FF FF FF FF FF FF FF     
   4899 FFFC5544 FF FF FF FF FF FF FF FF     
   4900 FFFC554C FF FF FF FF FF FF FF FF     
   4901 FFFC5554 FF FF FF FF FF FF FF FF     
   4902 FFFC555C FF FF FF FF FF FF FF FF     
   4903 FFFC5564 FF FF FF FF FF FF FF FF     
   4904 FFFC556C FF FF FF FF FF FF FF FF     
   4905 FFFC5574 FF FF FF FF FF FF FF FF     
   4906 FFFC557C FF FF FF FF FF FF FF FF     
   4907 FFFC5584 FF FF FF FF FF FF FF FF     
   4908 FFFC558C FF FF FF FF FF FF FF FF     
   4909 FFFC5594 FF FF FF FF FF FF FF FF     
   4910 FFFC559C FF FF FF FF FF FF FF FF     
   4911 FFFC55A4 FF FF FF FF FF FF FF FF     
   4912 FFFC55AC FF FF FF FF FF FF FF FF     
   4913 FFFC55B4 FF FF FF FF FF FF FF FF     
   4914 FFFC55BC FF FF FF FF FF FF FF FF     
   4915 FFFC55C4 FF FF FF FF FF FF FF FF     
   4916 FFFC55CC FF FF FF FF FF FF FF FF     
   4917 FFFC55D4 FF FF FF FF FF FF FF FF     
   4918 FFFC55DC FF FF FF FF FF FF FF FF     
   4919 FFFC55E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 30
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4920 FFFC55EC FF FF FF FF FF FF FF FF     
   4921 FFFC55F4 FF FF FF FF FF FF FF FF     
   4922 FFFC55FC FF FF FF FF FF FF FF FF     
   4923 FFFC5604 FF FF FF FF FF FF FF FF     
   4924 FFFC560C FF FF FF FF FF FF FF FF     
   4925 FFFC5614 FF FF FF FF FF FF FF FF     
   4926 FFFC561C FF FF FF FF FF FF FF FF     
   4927 FFFC5624 FF FF FF FF FF FF FF FF     
   4928 FFFC562C FF FF FF FF FF FF FF FF     
   4929 FFFC5634 FF FF FF FF FF FF FF FF     
   4930 FFFC563C FF FF FF FF FF FF FF FF     
   4931 FFFC5644 FF FF FF FF FF FF FF FF     
   4932 FFFC564C FF FF FF FF FF FF FF FF     
   4933 FFFC5654 FF FF FF FF FF FF FF FF     
   4934 FFFC565C FF FF FF FF FF FF FF FF     
   4935 FFFC5664 FF FF FF FF FF FF FF FF     
   4936 FFFC566C FF FF FF FF FF FF FF FF     
   4937 FFFC5674 FF FF FF FF FF FF FF FF     
   4938 FFFC567C FF FF FF FF FF FF FF FF     
   4939 FFFC5684 FF FF FF FF FF FF FF FF     
   4940 FFFC568C FF FF FF FF FF FF FF FF     
   4941 FFFC5694 FF FF FF FF FF FF FF FF     
   4942 FFFC569C FF FF FF FF FF FF FF FF     
   4943 FFFC56A4 FF FF FF FF FF FF FF FF     
   4944 FFFC56AC FF FF FF FF FF FF FF FF     
   4945 FFFC56B4 FF FF FF FF FF FF FF FF     
   4946 FFFC56BC FF FF FF FF FF FF FF FF     
   4947 FFFC56C4 FF FF FF FF FF FF FF FF     
   4948 FFFC56CC FF FF FF FF FF FF FF FF     
   4949 FFFC56D4 FF FF FF FF FF FF FF FF     
   4950 FFFC56DC FF FF FF FF FF FF FF FF     
   4951 FFFC56E4 FF FF FF FF FF FF FF FF     
   4952 FFFC56EC FF FF FF FF FF FF FF FF     
   4953 FFFC56F4 FF FF FF FF FF FF FF FF     
   4954 FFFC56FC FF FF FF FF FF FF FF FF     
   4955 FFFC5704 FF FF FF FF FF FF FF FF     
   4956 FFFC570C FF FF FF FF FF FF FF FF     
   4957 FFFC5714 FF FF FF FF FF FF FF FF     
   4958 FFFC571C FF FF FF FF FF FF FF FF     
   4959 FFFC5724 FF FF FF FF FF FF FF FF     
   4960 FFFC572C FF FF FF FF FF FF FF FF     
   4961 FFFC5734 FF FF FF FF FF FF FF FF     
   4962 FFFC573C FF FF FF FF FF FF FF FF     
   4963 FFFC5744 FF FF FF FF FF FF FF FF     
   4964 FFFC574C FF FF FF FF FF FF FF FF     
   4965 FFFC5754 FF FF FF FF FF FF FF FF     
   4966 FFFC575C FF FF FF FF FF FF FF FF     
   4967 FFFC5764 FF FF FF FF FF FF FF FF     
   4968 FFFC576C FF FF FF FF FF FF FF FF     
   4969 FFFC5774 FF FF FF FF FF FF FF FF     
   4970 FFFC577C FF FF FF FF FF FF FF FF     
   4971 FFFC5784 FF FF FF FF FF FF FF FF     
   4972 FFFC578C FF FF FF FF FF FF FF FF     
   4973 FFFC5794 FF FF FF FF FF FF FF FF     
   4974 FFFC579C FF FF FF FF FF FF FF FF     
   4975 FFFC57A4 FF FF FF FF FF FF FF FF     
   4976 FFFC57AC FF FF FF FF FF FF FF FF     
   4977 FFFC57B4 FF FF FF FF FF FF FF FF     
   4978 FFFC57BC FF FF FF FF FF FF FF FF     
   4979 FFFC57C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 31
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4980 FFFC57CC FF FF FF FF FF FF FF FF     
   4981 FFFC57D4 FF FF FF FF FF FF FF FF     
   4982 FFFC57DC FF FF FF FF FF FF FF FF     
   4983 FFFC57E4 FF FF FF FF FF FF FF FF     
   4984 FFFC57EC FF FF FF FF FF FF FF FF     
   4985 FFFC57F4 FF FF FF FF FF FF FF FF     
   4986 FFFC57FC FF FF FF FF FF FF FF FF     
   4987 FFFC5804 FF FF FF FF FF FF FF FF     
   4988 FFFC580C FF FF FF FF FF FF FF FF     
   4989 FFFC5814 FF FF FF FF FF FF FF FF     
   4990 FFFC581C FF FF FF FF FF FF FF FF     
   4991 FFFC5824 FF FF FF FF FF FF FF FF     
   4992 FFFC582C FF FF FF FF FF FF FF FF     
   4993 FFFC5834 FF FF FF FF FF FF FF FF     
   4994 FFFC583C FF FF FF FF FF FF FF FF     
   4995 FFFC5844 FF FF FF FF FF FF FF FF     
   4996 FFFC584C FF FF FF FF FF FF FF FF     
   4997 FFFC5854 FF FF FF FF FF FF FF FF     
   4998 FFFC585C FF FF FF FF FF FF FF FF     
   4999 FFFC5864 FF FF FF FF FF FF FF FF     
   5000 FFFC586C FF FF FF FF FF FF FF FF     
   5001 FFFC5874 FF FF FF FF FF FF FF FF     
   5002 FFFC587C FF FF FF FF FF FF FF FF     
   5003 FFFC5884 FF FF FF FF FF FF FF FF     
   5004 FFFC588C FF FF FF FF FF FF FF FF     
   5005 FFFC5894 FF FF FF FF FF FF FF FF     
   5006 FFFC589C FF FF FF FF FF FF FF FF     
   5007 FFFC58A4 FF FF FF FF FF FF FF FF     
   5008 FFFC58AC FF FF FF FF FF FF FF FF     
   5009 FFFC58B4 FF FF FF FF FF FF FF FF     
   5010 FFFC58BC FF FF FF FF FF FF FF FF     
   5011 FFFC58C4 FF FF FF FF FF FF FF FF     
   5012 FFFC58CC FF FF FF FF FF FF FF FF     
   5013 FFFC58D4 FF FF FF FF FF FF FF FF     
   5014 FFFC58DC FF FF FF FF FF FF FF FF     
   5015 FFFC58E4 FF FF FF FF FF FF FF FF     
   5016 FFFC58EC FF FF FF FF FF FF FF FF     
   5017 FFFC58F4 FF FF FF FF FF FF FF FF     
   5018 FFFC58FC FF FF FF FF FF FF FF FF     
   5019 FFFC5904 FF FF FF FF FF FF FF FF     
   5020 FFFC590C FF FF FF FF FF FF FF FF     
   5021 FFFC5914 FF FF FF FF FF FF FF FF     
   5022 FFFC591C FF FF FF FF FF FF FF FF     
   5023 FFFC5924 FF FF FF FF FF FF FF FF     
   5024 FFFC592C FF FF FF FF FF FF FF FF     
   5025 FFFC5934 FF FF FF FF FF FF FF FF     
   5026 FFFC593C FF FF FF FF FF FF FF FF     
   5027 FFFC5944 FF FF FF FF FF FF FF FF     
   5028 FFFC594C FF FF FF FF FF FF FF FF     
   5029 FFFC5954 FF FF FF FF FF FF FF FF     
   5030 FFFC595C FF FF FF FF FF FF FF FF     
   5031 FFFC5964 FF FF FF FF FF FF FF FF     
   5032 FFFC596C FF FF FF FF FF FF FF FF     
   5033 FFFC5974 FF FF FF FF FF FF FF FF     
   5034 FFFC597C FF FF FF FF FF FF FF FF     
   5035 FFFC5984 FF FF FF FF FF FF FF FF     
   5036 FFFC598C FF FF FF FF FF FF FF FF     
   5037 FFFC5994 FF FF FF FF FF FF FF FF     
   5038 FFFC599C FF FF FF FF FF FF FF FF     
   5039 FFFC59A4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 32
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5040 FFFC59AC FF FF FF FF FF FF FF FF     
   5041 FFFC59B4 FF FF FF FF FF FF FF FF     
   5042 FFFC59BC FF FF FF FF FF FF FF FF     
   5043 FFFC59C4 FF FF FF FF FF FF FF FF     
   5044 FFFC59CC FF FF FF FF FF FF FF FF     
   5045 FFFC59D4 FF FF FF FF FF FF FF FF     
   5046 FFFC59DC FF FF FF FF FF FF FF FF     
   5047 FFFC59E4 FF FF FF FF FF FF FF FF     
   5048 FFFC59EC FF FF FF FF FF FF FF FF     
   5049 FFFC59F4 FF FF FF FF FF FF FF FF     
   5050 FFFC59FC FF FF FF FF FF FF FF FF     
   5051 FFFC5A04 FF FF FF FF FF FF FF FF     
   5052 FFFC5A0C FF FF FF FF FF FF FF FF     
   5053 FFFC5A14 FF FF FF FF FF FF FF FF     
   5054 FFFC5A1C FF FF FF FF FF FF FF FF     
   5055 FFFC5A24 FF FF FF FF FF FF FF FF     
   5056 FFFC5A2C FF FF FF FF FF FF FF FF     
   5057 FFFC5A34 FF FF FF FF FF FF FF FF     
   5058 FFFC5A3C FF FF FF FF FF FF FF FF     
   5059 FFFC5A44 FF FF FF FF FF FF FF FF     
   5060 FFFC5A4C FF FF FF FF FF FF FF FF     
   5061 FFFC5A54 FF FF FF FF FF FF FF FF     
   5062 FFFC5A5C FF FF FF FF FF FF FF FF     
   5063 FFFC5A64 FF FF FF FF FF FF FF FF     
   5064 FFFC5A6C FF FF FF FF FF FF FF FF     
   5065 FFFC5A74 FF FF FF FF FF FF FF FF     
   5066 FFFC5A7C FF FF FF FF FF FF FF FF     
   5067 FFFC5A84 FF FF FF FF FF FF FF FF     
   5068 FFFC5A8C FF FF FF FF FF FF FF FF     
   5069 FFFC5A94 FF FF FF FF FF FF FF FF     
   5070 FFFC5A9C FF FF FF FF FF FF FF FF     
   5071 FFFC5AA4 FF FF FF FF FF FF FF FF     
   5072 FFFC5AAC FF FF FF FF FF FF FF FF     
   5073 FFFC5AB4 FF FF FF FF FF FF FF FF     
   5074 FFFC5ABC FF FF FF FF FF FF FF FF     
   5075 FFFC5AC4 FF FF FF FF FF FF FF FF     
   5076 FFFC5ACC FF FF FF FF FF FF FF FF     
   5077 FFFC5AD4 FF FF FF FF FF FF FF FF     
   5078 FFFC5ADC FF FF FF FF FF FF FF FF     
   5079 FFFC5AE4 FF FF FF FF FF FF FF FF     
   5080 FFFC5AEC FF FF FF FF FF FF FF FF     
   5081 FFFC5AF4 FF FF FF FF FF FF FF FF     
   5082 FFFC5AFC FF FF FF FF FF FF FF FF     
   5083 FFFC5B04 FF FF FF FF FF FF FF FF     
   5084 FFFC5B0C FF FF FF FF FF FF FF FF     
   5085 FFFC5B14 FF FF FF FF FF FF FF FF     
   5086 FFFC5B1C FF FF FF FF FF FF FF FF     
   5087 FFFC5B24 FF FF FF FF FF FF FF FF     
   5088 FFFC5B2C FF FF FF FF FF FF FF FF     
   5089 FFFC5B34 FF FF FF FF FF FF FF FF     
   5090 FFFC5B3C FF FF FF FF FF FF FF FF     
   5091 FFFC5B44 FF FF FF FF FF FF FF FF     
   5092 FFFC5B4C FF FF FF FF FF FF FF FF     
   5093 FFFC5B54 FF FF FF FF FF FF FF FF     
   5094 FFFC5B5C FF FF FF FF FF FF FF FF     
   5095 FFFC5B64 FF FF FF FF FF FF FF FF     
   5096 FFFC5B6C FF FF FF FF FF FF FF FF     
   5097 FFFC5B74 FF FF FF FF FF FF FF FF     
   5098 FFFC5B7C FF FF FF FF FF FF FF FF     
   5099 FFFC5B84 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 33
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5100 FFFC5B8C FF FF FF FF FF FF FF FF     
   5101 FFFC5B94 FF FF FF FF FF FF FF FF     
   5102 FFFC5B9C FF FF FF FF FF FF FF FF     
   5103 FFFC5BA4 FF FF FF FF FF FF FF FF     
   5104 FFFC5BAC FF FF FF FF FF FF FF FF     
   5105 FFFC5BB4 FF FF FF FF FF FF FF FF     
   5106 FFFC5BBC FF FF FF FF FF FF FF FF     
   5107 FFFC5BC4 FF FF FF FF FF FF FF FF     
   5108 FFFC5BCC FF FF FF FF FF FF FF FF     
   5109 FFFC5BD4 FF FF FF FF FF FF FF FF     
   5110 FFFC5BDC FF FF FF FF FF FF FF FF     
   5111 FFFC5BE4 FF FF FF FF FF FF FF FF     
   5112 FFFC5BEC FF FF FF FF FF FF FF FF     
   5113 FFFC5BF4 FF FF FF FF FF FF FF FF     
   5114 FFFC5BFC FF FF FF FF FF FF FF FF     
   5115 FFFC5C04 FF FF FF FF FF FF FF FF     
   5116 FFFC5C0C FF FF FF FF FF FF FF FF     
   5117 FFFC5C14 FF FF FF FF FF FF FF FF     
   5118 FFFC5C1C FF FF FF FF FF FF FF FF     
   5119 FFFC5C24 FF FF FF FF FF FF FF FF     
   5120 FFFC5C2C FF FF FF FF FF FF FF FF     
   5121 FFFC5C34 FF FF FF FF FF FF FF FF     
   5122 FFFC5C3C FF FF FF FF FF FF FF FF     
   5123 FFFC5C44 FF FF FF FF FF FF FF FF     
   5124 FFFC5C4C FF FF FF FF FF FF FF FF     
   5125 FFFC5C54 FF FF FF FF FF FF FF FF     
   5126 FFFC5C5C FF FF FF FF FF FF FF FF     
   5127 FFFC5C64 FF FF FF FF FF FF FF FF     
   5128 FFFC5C6C FF FF FF FF FF FF FF FF     
   5129 FFFC5C74 FF FF FF FF FF FF FF FF     
   5130 FFFC5C7C FF FF FF FF FF FF FF FF     
   5131 FFFC5C84 FF FF FF FF FF FF FF FF     
   5132 FFFC5C8C FF FF FF FF FF FF FF FF     
   5133 FFFC5C94 FF FF FF FF FF FF FF FF     
   5134 FFFC5C9C FF FF FF FF FF FF FF FF     
   5135 FFFC5CA4 FF FF FF FF FF FF FF FF     
   5136 FFFC5CAC FF FF FF FF FF FF FF FF     
   5137 FFFC5CB4 FF FF FF FF FF FF FF FF     
   5138 FFFC5CBC FF FF FF FF FF FF FF FF     
   5139 FFFC5CC4 FF FF FF FF FF FF FF FF     
   5140 FFFC5CCC FF FF FF FF FF FF FF FF     
   5141 FFFC5CD4 FF FF FF FF FF FF FF FF     
   5142 FFFC5CDC FF FF FF FF FF FF FF FF     
   5143 FFFC5CE4 FF FF FF FF FF FF FF FF     
   5144 FFFC5CEC FF FF FF FF FF FF FF FF     
   5145 FFFC5CF4 FF FF FF FF FF FF FF FF     
   5146 FFFC5CFC FF FF FF FF FF FF FF FF     
   5147 FFFC5D04 FF FF FF FF FF FF FF FF     
   5148 FFFC5D0C FF FF FF FF FF FF FF FF     
   5149 FFFC5D14 FF FF FF FF FF FF FF FF     
   5150 FFFC5D1C FF FF FF FF FF FF FF FF     
   5151 FFFC5D24 FF FF FF FF FF FF FF FF     
   5152 FFFC5D2C FF FF FF FF FF FF FF FF     
   5153 FFFC5D34 FF FF FF FF FF FF FF FF     
   5154 FFFC5D3C FF FF FF FF FF FF FF FF     
   5155 FFFC5D44 FF FF FF FF FF FF FF FF     
   5156 FFFC5D4C FF FF FF FF FF FF FF FF     
   5157 FFFC5D54 FF FF FF FF FF FF FF FF     
   5158 FFFC5D5C FF FF FF FF FF FF FF FF     
   5159 FFFC5D64 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 34
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5160 FFFC5D6C FF FF FF FF FF FF FF FF     
   5161 FFFC5D74 FF FF FF FF FF FF FF FF     
   5162 FFFC5D7C FF FF FF FF FF FF FF FF     
   5163 FFFC5D84 FF FF FF FF FF FF FF FF     
   5164 FFFC5D8C FF FF FF FF FF FF FF FF     
   5165 FFFC5D94 FF FF FF FF FF FF FF FF     
   5166 FFFC5D9C FF FF FF FF FF FF FF FF     
   5167 FFFC5DA4 FF FF FF FF FF FF FF FF     
   5168 FFFC5DAC FF FF FF FF FF FF FF FF     
   5169 FFFC5DB4 FF FF FF FF FF FF FF FF     
   5170 FFFC5DBC FF FF FF FF FF FF FF FF     
   5171 FFFC5DC4 FF FF FF FF FF FF FF FF     
   5172 FFFC5DCC FF FF FF FF FF FF FF FF     
   5173 FFFC5DD4 FF FF FF FF FF FF FF FF     
   5174 FFFC5DDC FF FF FF FF FF FF FF FF     
   5175 FFFC5DE4 FF FF FF FF FF FF FF FF     
   5176 FFFC5DEC FF FF FF FF FF FF FF FF     
   5177 FFFC5DF4 FF FF FF FF FF FF FF FF     
   5178 FFFC5DFC FF FF FF FF FF FF FF FF     
   5179 FFFC5E04 FF FF FF FF FF FF FF FF     
   5180 FFFC5E0C FF FF FF FF FF FF FF FF     
   5181 FFFC5E14 FF FF FF FF FF FF FF FF     
   5182 FFFC5E1C FF FF FF FF FF FF FF FF     
   5183 FFFC5E24 FF FF FF FF FF FF FF FF     
   5184 FFFC5E2C FF FF FF FF FF FF FF FF     
   5185 FFFC5E34 FF FF FF FF FF FF FF FF     
   5186 FFFC5E3C FF FF FF FF FF FF FF FF     
   5187 FFFC5E44 FF FF FF FF FF FF FF FF     
   5188 FFFC5E4C FF FF FF FF FF FF FF FF     
   5189 FFFC5E54 FF FF FF FF FF FF FF FF     
   5190 FFFC5E5C FF FF FF FF FF FF FF FF     
   5191 FFFC5E64 FF FF FF FF FF FF FF FF     
   5192 FFFC5E6C FF FF FF FF FF FF FF FF     
   5193 FFFC5E74 FF FF FF FF FF FF FF FF     
   5194 FFFC5E7C FF FF FF FF FF FF FF FF     
   5195 FFFC5E84 FF FF FF FF FF FF FF FF     
   5196 FFFC5E8C FF FF FF FF FF FF FF FF     
   5197 FFFC5E94 FF FF FF FF FF FF FF FF     
   5198 FFFC5E9C FF FF FF FF FF FF FF FF     
   5199 FFFC5EA4 FF FF FF FF FF FF FF FF     
   5200 FFFC5EAC FF FF FF FF FF FF FF FF     
   5201 FFFC5EB4 FF FF FF FF FF FF FF FF     
   5202 FFFC5EBC FF FF FF FF FF FF FF FF     
   5203 FFFC5EC4 FF FF FF FF FF FF FF FF     
   5204 FFFC5ECC FF FF FF FF FF FF FF FF     
   5205 FFFC5ED4 FF FF FF FF FF FF FF FF     
   5206 FFFC5EDC FF FF FF FF FF FF FF FF     
   5207 FFFC5EE4 FF FF FF FF FF FF FF FF     
   5208 FFFC5EEC FF FF FF FF FF FF FF FF     
   5209 FFFC5EF4 FF FF FF FF FF FF FF FF     
   5210 FFFC5EFC FF FF FF FF FF FF FF FF     
   5211 FFFC5F04 FF FF FF FF FF FF FF FF     
   5212 FFFC5F0C FF FF FF FF FF FF FF FF     
   5213 FFFC5F14 FF FF FF FF FF FF FF FF     
   5214 FFFC5F1C FF FF FF FF FF FF FF FF     
   5215 FFFC5F24 FF FF FF FF FF FF FF FF     
   5216 FFFC5F2C FF FF FF FF FF FF FF FF     
   5217 FFFC5F34 FF FF FF FF FF FF FF FF     
   5218 FFFC5F3C FF FF FF FF FF FF FF FF     
   5219 FFFC5F44 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 35
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5220 FFFC5F4C FF FF FF FF FF FF FF FF     
   5221 FFFC5F54 FF FF FF FF FF FF FF FF     
   5222 FFFC5F5C FF FF FF FF FF FF FF FF     
   5223 FFFC5F64 FF FF FF FF FF FF FF FF     
   5224 FFFC5F6C FF FF FF FF FF FF FF FF     
   5225 FFFC5F74 FF FF FF FF FF FF FF FF     
   5226 FFFC5F7C FF FF FF FF FF FF FF FF     
   5227 FFFC5F84 FF FF FF FF FF FF FF FF     
   5228 FFFC5F8C FF FF FF FF FF FF FF FF     
   5229 FFFC5F94 FF FF FF FF FF FF FF FF     
   5230 FFFC5F9C FF FF FF FF FF FF FF FF     
   5231 FFFC5FA4 FF FF FF FF FF FF FF FF     
   5232 FFFC5FAC FF FF FF FF FF FF FF FF     
   5233 FFFC5FB4 FF FF FF FF FF FF FF FF     
   5234 FFFC5FBC FF FF FF FF FF FF FF FF     
   5235 FFFC5FC4 FF FF FF FF FF FF FF FF     
   5236 FFFC5FCC FF FF FF FF FF FF FF FF     
   5237 FFFC5FD4 FF FF FF FF FF FF FF FF     
   5238 FFFC5FDC FF FF FF FF FF FF FF FF     
   5239 FFFC5FE4 FF FF FF FF FF FF FF FF     
   5240 FFFC5FEC FF FF FF FF FF FF FF FF     
   5241 FFFC5FF4 FF FF FF FF FF FF FF FF     
   5242 FFFC5FFC FF FF FF FF FF FF FF FF     
   5243 FFFC6004 FF FF FF FF FF FF FF FF     
   5244 FFFC600C FF FF FF FF FF FF FF FF     
   5245 FFFC6014 FF FF FF FF FF FF FF FF     
   5246 FFFC601C FF FF FF FF FF FF FF FF     
   5247 FFFC6024 FF FF FF FF FF FF FF FF     
   5248 FFFC602C FF FF FF FF FF FF FF FF     
   5249 FFFC6034 FF FF FF FF FF FF FF FF     
   5250 FFFC603C FF FF FF FF FF FF FF FF     
   5251 FFFC6044 FF FF FF FF FF FF FF FF     
   5252 FFFC604C FF FF FF FF FF FF FF FF     
   5253 FFFC6054 FF FF FF FF FF FF FF FF     
   5254 FFFC605C FF FF FF FF FF FF FF FF     
   5255 FFFC6064 FF FF FF FF FF FF FF FF     
   5256 FFFC606C FF FF FF FF FF FF FF FF     
   5257 FFFC6074 FF FF FF FF FF FF FF FF     
   5258 FFFC607C FF FF FF FF FF FF FF FF     
   5259 FFFC6084 FF FF FF FF FF FF FF FF     
   5260 FFFC608C FF FF FF FF FF FF FF FF     
   5261 FFFC6094 FF FF FF FF FF FF FF FF     
   5262 FFFC609C FF FF FF FF FF FF FF FF     
   5263 FFFC60A4 FF FF FF FF FF FF FF FF     
   5264 FFFC60AC FF FF FF FF FF FF FF FF     
   5265 FFFC60B4 FF FF FF FF FF FF FF FF     
   5266 FFFC60BC FF FF FF FF FF FF FF FF     
   5267 FFFC60C4 FF FF FF FF FF FF FF FF     
   5268 FFFC60CC FF FF FF FF FF FF FF FF     
   5269 FFFC60D4 FF FF FF FF FF FF FF FF     
   5270 FFFC60DC FF FF FF FF FF FF FF FF     
   5271 FFFC60E4 FF FF FF FF FF FF FF FF     
   5272 FFFC60EC FF FF FF FF FF FF FF FF     
   5273 FFFC60F4 FF FF FF FF FF FF FF FF     
   5274 FFFC60FC FF FF FF FF FF FF FF FF     
   5275 FFFC6104 FF FF FF FF FF FF FF FF     
   5276 FFFC610C FF FF FF FF FF FF FF FF     
   5277 FFFC6114 FF FF FF FF FF FF FF FF     
   5278 FFFC611C FF FF FF FF FF FF FF FF     
   5279 FFFC6124 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 36
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5280 FFFC612C FF FF FF FF FF FF FF FF     
   5281 FFFC6134 FF FF FF FF FF FF FF FF     
   5282 FFFC613C FF FF FF FF FF FF FF FF     
   5283 FFFC6144 FF FF FF FF FF FF FF FF     
   5284 FFFC614C FF FF FF FF FF FF FF FF     
   5285 FFFC6154 FF FF FF FF FF FF FF FF     
   5286 FFFC615C FF FF FF FF FF FF FF FF     
   5287 FFFC6164 FF FF FF FF FF FF FF FF     
   5288 FFFC616C FF FF FF FF FF FF FF FF     
   5289 FFFC6174 FF FF FF FF FF FF FF FF     
   5290 FFFC617C FF FF FF FF FF FF FF FF     
   5291 FFFC6184 FF FF FF FF FF FF FF FF     
   5292 FFFC618C FF FF FF FF FF FF FF FF     
   5293 FFFC6194 FF FF FF FF FF FF FF FF     
   5294 FFFC619C FF FF FF FF FF FF FF FF     
   5295 FFFC61A4 FF FF FF FF FF FF FF FF     
   5296 FFFC61AC FF FF FF FF FF FF FF FF     
   5297 FFFC61B4 FF FF FF FF FF FF FF FF     
   5298 FFFC61BC FF FF FF FF FF FF FF FF     
   5299 FFFC61C4 FF FF FF FF FF FF FF FF     
   5300 FFFC61CC FF FF FF FF FF FF FF FF     
   5301 FFFC61D4 FF FF FF FF FF FF FF FF     
   5302 FFFC61DC FF FF FF FF FF FF FF FF     
   5303 FFFC61E4 FF FF FF FF FF FF FF FF     
   5304 FFFC61EC FF FF FF FF FF FF FF FF     
   5305 FFFC61F4 FF FF FF FF FF FF FF FF     
   5306 FFFC61FC FF FF FF FF FF FF FF FF     
   5307 FFFC6204 FF FF FF FF FF FF FF FF     
   5308 FFFC620C FF FF FF FF FF FF FF FF     
   5309 FFFC6214 FF FF FF FF FF FF FF FF     
   5310 FFFC621C FF FF FF FF FF FF FF FF     
   5311 FFFC6224 FF FF FF FF FF FF FF FF     
   5312 FFFC622C FF FF FF FF FF FF FF FF     
   5313 FFFC6234 FF FF FF FF FF FF FF FF     
   5314 FFFC623C FF FF FF FF FF FF FF FF     
   5315 FFFC6244 FF FF FF FF FF FF FF FF     
   5316 FFFC624C FF FF FF FF FF FF FF FF     
   5317 FFFC6254 FF FF FF FF FF FF FF FF     
   5318 FFFC625C FF FF FF FF FF FF FF FF     
   5319 FFFC6264 FF FF FF FF FF FF FF FF     
   5320 FFFC626C FF FF FF FF FF FF FF FF     
   5321 FFFC6274 FF FF FF FF FF FF FF FF     
   5322 FFFC627C FF FF FF FF FF FF FF FF     
   5323 FFFC6284 FF FF FF FF FF FF FF FF     
   5324 FFFC628C FF FF FF FF FF FF FF FF     
   5325 FFFC6294 FF FF FF FF FF FF FF FF     
   5326 FFFC629C FF FF FF FF FF FF FF FF     
   5327 FFFC62A4 FF FF FF FF FF FF FF FF     
   5328 FFFC62AC FF FF FF FF FF FF FF FF     
   5329 FFFC62B4 FF FF FF FF FF FF FF FF     
   5330 FFFC62BC FF FF FF FF FF FF FF FF     
   5331 FFFC62C4 FF FF FF FF FF FF FF FF     
   5332 FFFC62CC FF FF FF FF FF FF FF FF     
   5333 FFFC62D4 FF FF FF FF FF FF FF FF     
   5334 FFFC62DC FF FF FF FF FF FF FF FF     
   5335 FFFC62E4 FF FF FF FF FF FF FF FF     
   5336 FFFC62EC FF FF FF FF FF FF FF FF     
   5337 FFFC62F4 FF FF FF FF FF FF FF FF     
   5338 FFFC62FC FF FF FF FF FF FF FF FF     
   5339 FFFC6304 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 37
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5340 FFFC630C FF FF FF FF FF FF FF FF     
   5341 FFFC6314 FF FF FF FF FF FF FF FF     
   5342 FFFC631C FF FF FF FF FF FF FF FF     
   5343 FFFC6324 FF FF FF FF FF FF FF FF     
   5344 FFFC632C FF FF FF FF FF FF FF FF     
   5345 FFFC6334 FF FF FF FF FF FF FF FF     
   5346 FFFC633C FF FF FF FF FF FF FF FF     
   5347 FFFC6344 FF FF FF FF FF FF FF FF     
   5348 FFFC634C FF FF FF FF FF FF FF FF     
   5349 FFFC6354 FF FF FF FF FF FF FF FF     
   5350 FFFC635C FF FF FF FF FF FF FF FF     
   5351 FFFC6364 FF FF FF FF FF FF FF FF     
   5352 FFFC636C FF FF FF FF FF FF FF FF     
   5353 FFFC6374 FF FF FF FF FF FF FF FF     
   5354 FFFC637C FF FF FF FF FF FF FF FF     
   5355 FFFC6384 FF FF FF FF FF FF FF FF     
   5356 FFFC638C FF FF FF FF FF FF FF FF     
   5357 FFFC6394 FF FF FF FF FF FF FF FF     
   5358 FFFC639C FF FF FF FF FF FF FF FF     
   5359 FFFC63A4 FF FF FF FF FF FF FF FF     
   5360 FFFC63AC FF FF FF FF FF FF FF FF     
   5361 FFFC63B4 FF FF FF FF FF FF FF FF     
   5362 FFFC63BC FF FF FF FF FF FF FF FF     
   5363 FFFC63C4 FF FF FF FF FF FF FF FF     
   5364 FFFC63CC FF FF FF FF FF FF FF FF     
   5365 FFFC63D4 FF FF FF FF FF FF FF FF     
   5366 FFFC63DC FF FF FF FF FF FF FF FF     
   5367 FFFC63E4 FF FF FF FF FF FF FF FF     
   5368 FFFC63EC FF FF FF FF FF FF FF FF     
   5369 FFFC63F4 FF FF FF FF FF FF FF FF     
   5370 FFFC63FC FF FF FF FF FF FF FF FF     
   5371 FFFC6404 FF FF FF FF FF FF FF FF     
   5372 FFFC640C FF FF FF FF FF FF FF FF     
   5373 FFFC6414 FF FF FF FF FF FF FF FF     
   5374 FFFC641C FF FF FF FF FF FF FF FF     
   5375 FFFC6424 FF FF FF FF FF FF FF FF     
   5376 FFFC642C FF FF FF FF FF FF FF FF     
   5377 FFFC6434 FF FF FF FF FF FF FF FF     
   5378 FFFC643C FF FF FF FF FF FF FF FF     
   5379 FFFC6444 FF FF FF FF FF FF FF FF     
   5380 FFFC644C FF FF FF FF FF FF FF FF     
   5381 FFFC6454 FF FF FF FF FF FF FF FF     
   5382 FFFC645C FF FF FF FF FF FF FF FF     
   5383 FFFC6464 FF FF FF FF FF FF FF FF     
   5384 FFFC646C FF FF FF FF FF FF FF FF     
   5385 FFFC6474 FF FF FF FF FF FF FF FF     
   5386 FFFC647C FF FF FF FF FF FF FF FF     
   5387 FFFC6484 FF FF FF FF FF FF FF FF     
   5388 FFFC648C FF FF FF FF FF FF FF FF     
   5389 FFFC6494 FF FF FF FF FF FF FF FF     
   5390 FFFC649C FF FF FF FF FF FF FF FF     
   5391 FFFC64A4 FF FF FF FF FF FF FF FF     
   5392 FFFC64AC FF FF FF FF FF FF FF FF     
   5393 FFFC64B4 FF FF FF FF FF FF FF FF     
   5394 FFFC64BC FF FF FF FF FF FF FF FF     
   5395 FFFC64C4 FF FF FF FF FF FF FF FF     
   5396 FFFC64CC FF FF FF FF FF FF FF FF     
   5397 FFFC64D4 FF FF FF FF FF FF FF FF     
   5398 FFFC64DC FF FF FF FF FF FF FF FF     
   5399 FFFC64E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 38
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5400 FFFC64EC FF FF FF FF FF FF FF FF     
   5401 FFFC64F4 FF FF FF FF FF FF FF FF     
   5402 FFFC64FC FF FF FF FF FF FF FF FF     
   5403 FFFC6504 FF FF FF FF FF FF FF FF     
   5404 FFFC650C FF FF FF FF FF FF FF FF     
   5405 FFFC6514 FF FF FF FF FF FF FF FF     
   5406 FFFC651C FF FF FF FF FF FF FF FF     
   5407 FFFC6524 FF FF FF FF FF FF FF FF     
   5408 FFFC652C FF FF FF FF FF FF FF FF     
   5409 FFFC6534 FF FF FF FF FF FF FF FF     
   5410 FFFC653C FF FF FF FF FF FF FF FF     
   5411 FFFC6544 FF FF FF FF FF FF FF FF     
   5412 FFFC654C FF FF FF FF FF FF FF FF     
   5413 FFFC6554 FF FF FF FF FF FF FF FF     
   5414 FFFC655C FF FF FF FF FF FF FF FF     
   5415 FFFC6564 FF FF FF FF FF FF FF FF     
   5416 FFFC656C FF FF FF FF FF FF FF FF     
   5417 FFFC6574 FF FF FF FF FF FF FF FF     
   5418 FFFC657C FF FF FF FF FF FF FF FF     
   5419 FFFC6584 FF FF FF FF FF FF FF FF     
   5420 FFFC658C FF FF FF FF FF FF FF FF     
   5421 FFFC6594 FF FF FF FF FF FF FF FF     
   5422 FFFC659C FF FF FF FF FF FF FF FF     
   5423 FFFC65A4 FF FF FF FF FF FF FF FF     
   5424 FFFC65AC FF FF FF FF FF FF FF FF     
   5425 FFFC65B4 FF FF FF FF FF FF FF FF     
   5426 FFFC65BC FF FF FF FF FF FF FF FF     
   5427 FFFC65C4 FF FF FF FF FF FF FF FF     
   5428 FFFC65CC FF FF FF FF FF FF FF FF     
   5429 FFFC65D4 FF FF FF FF FF FF FF FF     
   5430 FFFC65DC FF FF FF FF FF FF FF FF     
   5431 FFFC65E4 FF FF FF FF FF FF FF FF     
   5432 FFFC65EC FF FF FF FF FF FF FF FF     
   5433 FFFC65F4 FF FF FF FF FF FF FF FF     
   5434 FFFC65FC FF FF FF FF FF FF FF FF     
   5435 FFFC6604 FF FF FF FF FF FF FF FF     
   5436 FFFC660C FF FF FF FF FF FF FF FF     
   5437 FFFC6614 FF FF FF FF FF FF FF FF     
   5438 FFFC661C FF FF FF FF FF FF FF FF     
   5439 FFFC6624 FF FF FF FF FF FF FF FF     
   5440 FFFC662C FF FF FF FF FF FF FF FF     
   5441 FFFC6634 FF FF FF FF FF FF FF FF     
   5442 FFFC663C FF FF FF FF FF FF FF FF     
   5443 FFFC6644 FF FF FF FF FF FF FF FF     
   5444 FFFC664C FF FF FF FF FF FF FF FF     
   5445 FFFC6654 FF FF FF FF FF FF FF FF     
   5446 FFFC665C FF FF FF FF FF FF FF FF     
   5447 FFFC6664 FF FF FF FF FF FF FF FF     
   5448 FFFC666C FF FF FF FF FF FF FF FF     
   5449 FFFC6674 FF FF FF FF FF FF FF FF     
   5450 FFFC667C FF FF FF FF FF FF FF FF     
   5451 FFFC6684 FF FF FF FF FF FF FF FF     
   5452 FFFC668C FF FF FF FF FF FF FF FF     
   5453 FFFC6694 FF FF FF FF FF FF FF FF     
   5454 FFFC669C FF FF FF FF FF FF FF FF     
   5455 FFFC66A4 FF FF FF FF FF FF FF FF     
   5456 FFFC66AC FF FF FF FF FF FF FF FF     
   5457 FFFC66B4 FF FF FF FF FF FF FF FF     
   5458 FFFC66BC FF FF FF FF FF FF FF FF     
   5459 FFFC66C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 39
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5460 FFFC66CC FF FF FF FF FF FF FF FF     
   5461 FFFC66D4 FF FF FF FF FF FF FF FF     
   5462 FFFC66DC FF FF FF FF FF FF FF FF     
   5463 FFFC66E4 FF FF FF FF FF FF FF FF     
   5464 FFFC66EC FF FF FF FF FF FF FF FF     
   5465 FFFC66F4 FF FF FF FF FF FF FF FF     
   5466 FFFC66FC FF FF FF FF FF FF FF FF     
   5467 FFFC6704 FF FF FF FF FF FF FF FF     
   5468 FFFC670C FF FF FF FF FF FF FF FF     
   5469 FFFC6714 FF FF FF FF FF FF FF FF     
   5470 FFFC671C FF FF FF FF FF FF FF FF     
   5471 FFFC6724 FF FF FF FF FF FF FF FF     
   5472 FFFC672C FF FF FF FF FF FF FF FF     
   5473 FFFC6734 FF FF FF FF FF FF FF FF     
   5474 FFFC673C FF FF FF FF FF FF FF FF     
   5475 FFFC6744 FF FF FF FF FF FF FF FF     
   5476 FFFC674C FF FF FF FF FF FF FF FF     
   5477 FFFC6754 FF FF FF FF FF FF FF FF     
   5478 FFFC675C FF FF FF FF FF FF FF FF     
   5479 FFFC6764 FF FF FF FF FF FF FF FF     
   5480 FFFC676C FF FF FF FF FF FF FF FF     
   5481 FFFC6774 FF FF FF FF FF FF FF FF     
   5482 FFFC677C FF FF FF FF FF FF FF FF     
   5483 FFFC6784 FF FF FF FF FF FF FF FF     
   5484 FFFC678C FF FF FF FF FF FF FF FF     
   5485 FFFC6794 FF FF FF FF FF FF FF FF     
   5486 FFFC679C FF FF FF FF FF FF FF FF     
   5487 FFFC67A4 FF FF FF FF FF FF FF FF     
   5488 FFFC67AC FF FF FF FF FF FF FF FF     
   5489 FFFC67B4 FF FF FF FF FF FF FF FF     
   5490 FFFC67BC FF FF FF FF FF FF FF FF     
   5491 FFFC67C4 FF FF FF FF FF FF FF FF     
   5492 FFFC67CC FF FF FF FF FF FF FF FF     
   5493 FFFC67D4 FF FF FF FF FF FF FF FF     
   5494 FFFC67DC FF FF FF FF FF FF FF FF     
   5495 FFFC67E4 FF FF FF FF FF FF FF FF     
   5496 FFFC67EC FF FF FF FF FF FF FF FF     
   5497 FFFC67F4 FF FF FF FF FF FF FF FF     
   5498 FFFC67FC FF FF FF FF FF FF FF FF     
   5499 FFFC6804 FF FF FF FF FF FF FF FF     
   5500 FFFC680C FF FF FF FF FF FF FF FF     
   5501 FFFC6814 FF FF FF FF FF FF FF FF     
   5502 FFFC681C FF FF FF FF FF FF FF FF     
   5503 FFFC6824 FF FF FF FF FF FF FF FF     
   5504 FFFC682C FF FF FF FF FF FF FF FF     
   5505 FFFC6834 FF FF FF FF FF FF FF FF     
   5506 FFFC683C FF FF FF FF FF FF FF FF     
   5507 FFFC6844 FF FF FF FF FF FF FF FF     
   5508 FFFC684C FF FF FF FF FF FF FF FF     
   5509 FFFC6854 FF FF FF FF FF FF FF FF     
   5510 FFFC685C FF FF FF FF FF FF FF FF     
   5511 FFFC6864 FF FF FF FF FF FF FF FF     
   5512 FFFC686C FF FF FF FF FF FF FF FF     
   5513 FFFC6874 FF FF FF FF FF FF FF FF     
   5514 FFFC687C FF FF FF FF FF FF FF FF     
   5515 FFFC6884 FF FF FF FF FF FF FF FF     
   5516 FFFC688C FF FF FF FF FF FF FF FF     
   5517 FFFC6894 FF FF FF FF FF FF FF FF     
   5518 FFFC689C FF FF FF FF FF FF FF FF     
   5519 FFFC68A4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 40
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5520 FFFC68AC FF FF FF FF FF FF FF FF     
   5521 FFFC68B4 FF FF FF FF FF FF FF FF     
   5522 FFFC68BC FF FF FF FF FF FF FF FF     
   5523 FFFC68C4 FF FF FF FF FF FF FF FF     
   5524 FFFC68CC FF FF FF FF FF FF FF FF     
   5525 FFFC68D4 FF FF FF FF FF FF FF FF     
   5526 FFFC68DC FF FF FF FF FF FF FF FF     
   5527 FFFC68E4 FF FF FF FF FF FF FF FF     
   5528 FFFC68EC FF FF FF FF FF FF FF FF     
   5529 FFFC68F4 FF FF FF FF FF FF FF FF     
   5530 FFFC68FC FF FF FF FF FF FF FF FF     
   5531 FFFC6904 FF FF FF FF FF FF FF FF     
   5532 FFFC690C FF FF FF FF FF FF FF FF     
   5533 FFFC6914 FF FF FF FF FF FF FF FF     
   5534 FFFC691C FF FF FF FF FF FF FF FF     
   5535 FFFC6924 FF FF FF FF FF FF FF FF     
   5536 FFFC692C FF FF FF FF FF FF FF FF     
   5537 FFFC6934 FF FF FF FF FF FF FF FF     
   5538 FFFC693C FF FF FF FF FF FF FF FF     
   5539 FFFC6944 FF FF FF FF FF FF FF FF     
   5540 FFFC694C FF FF FF FF FF FF FF FF     
   5541 FFFC6954 FF FF FF FF FF FF FF FF     
   5542 FFFC695C FF FF FF FF FF FF FF FF     
   5543 FFFC6964 FF FF FF FF FF FF FF FF     
   5544 FFFC696C FF FF FF FF FF FF FF FF     
   5545 FFFC6974 FF FF FF FF FF FF FF FF     
   5546 FFFC697C FF FF FF FF FF FF FF FF     
   5547 FFFC6984 FF FF FF FF FF FF FF FF     
   5548 FFFC698C FF FF FF FF FF FF FF FF     
   5549 FFFC6994 FF FF FF FF FF FF FF FF     
   5550 FFFC699C FF FF FF FF FF FF FF FF     
   5551 FFFC69A4 FF FF FF FF FF FF FF FF     
   5552 FFFC69AC FF FF FF FF FF FF FF FF     
   5553 FFFC69B4 FF FF FF FF FF FF FF FF     
   5554 FFFC69BC FF FF FF FF FF FF FF FF     
   5555 FFFC69C4 FF FF FF FF FF FF FF FF     
   5556 FFFC69CC FF FF FF FF FF FF FF FF     
   5557 FFFC69D4 FF FF FF FF FF FF FF FF     
   5558 FFFC69DC FF FF FF FF FF FF FF FF     
   5559 FFFC69E4 FF FF FF FF FF FF FF FF     
   5560 FFFC69EC FF FF FF FF FF FF FF FF     
   5561 FFFC69F4 FF FF FF FF FF FF FF FF     
   5562 FFFC69FC FF FF FF FF FF FF FF FF     
   5563 FFFC6A04 FF FF FF FF FF FF FF FF     
   5564 FFFC6A0C FF FF FF FF FF FF FF FF     
   5565 FFFC6A14 FF FF FF FF FF FF FF FF     
   5566 FFFC6A1C FF FF FF FF FF FF FF FF     
   5567 FFFC6A24 FF FF FF FF FF FF FF FF     
   5568 FFFC6A2C FF FF FF FF FF FF FF FF     
   5569 FFFC6A34 FF FF FF FF FF FF FF FF     
   5570 FFFC6A3C FF FF FF FF FF FF FF FF     
   5571 FFFC6A44 FF FF FF FF FF FF FF FF     
   5572 FFFC6A4C FF FF FF FF FF FF FF FF     
   5573 FFFC6A54 FF FF FF FF FF FF FF FF     
   5574 FFFC6A5C FF FF FF FF FF FF FF FF     
   5575 FFFC6A64 FF FF FF FF FF FF FF FF     
   5576 FFFC6A6C FF FF FF FF FF FF FF FF     
   5577 FFFC6A74 FF FF FF FF FF FF FF FF     
   5578 FFFC6A7C FF FF FF FF FF FF FF FF     
   5579 FFFC6A84 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 41
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5580 FFFC6A8C FF FF FF FF FF FF FF FF     
   5581 FFFC6A94 FF FF FF FF FF FF FF FF     
   5582 FFFC6A9C FF FF FF FF FF FF FF FF     
   5583 FFFC6AA4 FF FF FF FF FF FF FF FF     
   5584 FFFC6AAC FF FF FF FF FF FF FF FF     
   5585 FFFC6AB4 FF FF FF FF FF FF FF FF     
   5586 FFFC6ABC FF FF FF FF FF FF FF FF     
   5587 FFFC6AC4 FF FF FF FF FF FF FF FF     
   5588 FFFC6ACC FF FF FF FF FF FF FF FF     
   5589 FFFC6AD4 FF FF FF FF FF FF FF FF     
   5590 FFFC6ADC FF FF FF FF FF FF FF FF     
   5591 FFFC6AE4 FF FF FF FF FF FF FF FF     
   5592 FFFC6AEC FF FF FF FF FF FF FF FF     
   5593 FFFC6AF4 FF FF FF FF FF FF FF FF     
   5594 FFFC6AFC FF FF FF FF FF FF FF FF     
   5595 FFFC6B04 FF FF FF FF FF FF FF FF     
   5596 FFFC6B0C FF FF FF FF FF FF FF FF     
   5597 FFFC6B14 FF FF FF FF FF FF FF FF     
   5598 FFFC6B1C FF FF FF FF FF FF FF FF     
   5599 FFFC6B24 FF FF FF FF FF FF FF FF     
   5600 FFFC6B2C FF FF FF FF FF FF FF FF     
   5601 FFFC6B34 FF FF FF FF FF FF FF FF     
   5602 FFFC6B3C FF FF FF FF FF FF FF FF     
   5603 FFFC6B44 FF FF FF FF FF FF FF FF     
   5604 FFFC6B4C FF FF FF FF FF FF FF FF     
   5605 FFFC6B54 FF FF FF FF FF FF FF FF     
   5606 FFFC6B5C FF FF FF FF FF FF FF FF     
   5607 FFFC6B64 FF FF FF FF FF FF FF FF     
   5608 FFFC6B6C FF FF FF FF FF FF FF FF     
   5609 FFFC6B74 FF FF FF FF FF FF FF FF     
   5610 FFFC6B7C FF FF FF FF FF FF FF FF     
   5611 FFFC6B84 FF FF FF FF FF FF FF FF     
   5612 FFFC6B8C FF FF FF FF FF FF FF FF     
   5613 FFFC6B94 FF FF FF FF FF FF FF FF     
   5614 FFFC6B9C FF FF FF FF FF FF FF FF     
   5615 FFFC6BA4 FF FF FF FF FF FF FF FF     
   5616 FFFC6BAC FF FF FF FF FF FF FF FF     
   5617 FFFC6BB4 FF FF FF FF FF FF FF FF     
   5618 FFFC6BBC FF FF FF FF FF FF FF FF     
   5619 FFFC6BC4 FF FF FF FF FF FF FF FF     
   5620 FFFC6BCC FF FF FF FF FF FF FF FF     
   5621 FFFC6BD4 FF FF FF FF FF FF FF FF     
   5622 FFFC6BDC FF FF FF FF FF FF FF FF     
   5623 FFFC6BE4 FF FF FF FF FF FF FF FF     
   5624 FFFC6BEC FF FF FF FF FF FF FF FF     
   5625 FFFC6BF4 FF FF FF FF FF FF FF FF     
   5626 FFFC6BFC FF FF FF FF FF FF FF FF     
   5627 FFFC6C04 FF FF FF FF FF FF FF FF     
   5628 FFFC6C0C FF FF FF FF FF FF FF FF     
   5629 FFFC6C14 FF FF FF FF FF FF FF FF     
   5630 FFFC6C1C FF FF FF FF FF FF FF FF     
   5631 FFFC6C24 FF FF FF FF FF FF FF FF     
   5632 FFFC6C2C FF FF FF FF FF FF FF FF     
   5633 FFFC6C34 FF FF FF FF FF FF FF FF     
   5634 FFFC6C3C FF FF FF FF FF FF FF FF     
   5635 FFFC6C44 FF FF FF FF FF FF FF FF     
   5636 FFFC6C4C FF FF FF FF FF FF FF FF     
   5637 FFFC6C54 FF FF FF FF FF FF FF FF     
   5638 FFFC6C5C FF FF FF FF FF FF FF FF     
   5639 FFFC6C64 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 42
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5640 FFFC6C6C FF FF FF FF FF FF FF FF     
   5641 FFFC6C74 FF FF FF FF FF FF FF FF     
   5642 FFFC6C7C FF FF FF FF FF FF FF FF     
   5643 FFFC6C84 FF FF FF FF FF FF FF FF     
   5644 FFFC6C8C FF FF FF FF FF FF FF FF     
   5645 FFFC6C94 FF FF FF FF FF FF FF FF     
   5646 FFFC6C9C FF FF FF FF FF FF FF FF     
   5647 FFFC6CA4 FF FF FF FF FF FF FF FF     
   5648 FFFC6CAC FF FF FF FF FF FF FF FF     
   5649 FFFC6CB4 FF FF FF FF FF FF FF FF     
   5650 FFFC6CBC FF FF FF FF FF FF FF FF     
   5651 FFFC6CC4 FF FF FF FF FF FF FF FF     
   5652 FFFC6CCC FF FF FF FF FF FF FF FF     
   5653 FFFC6CD4 FF FF FF FF FF FF FF FF     
   5654 FFFC6CDC FF FF FF FF FF FF FF FF     
   5655 FFFC6CE4 FF FF FF FF FF FF FF FF     
   5656 FFFC6CEC FF FF FF FF FF FF FF FF     
   5657 FFFC6CF4 FF FF FF FF FF FF FF FF     
   5658 FFFC6CFC FF FF FF FF FF FF FF FF     
   5659 FFFC6D04 FF FF FF FF FF FF FF FF     
   5660 FFFC6D0C FF FF FF FF FF FF FF FF     
   5661 FFFC6D14 FF FF FF FF FF FF FF FF     
   5662 FFFC6D1C FF FF FF FF FF FF FF FF     
   5663 FFFC6D24 FF FF FF FF FF FF FF FF     
   5664 FFFC6D2C FF FF FF FF FF FF FF FF     
   5665 FFFC6D34 FF FF FF FF FF FF FF FF     
   5666 FFFC6D3C FF FF FF FF FF FF FF FF     
   5667 FFFC6D44 FF FF FF FF FF FF FF FF     
   5668 FFFC6D4C FF FF FF FF FF FF FF FF     
   5669 FFFC6D54 FF FF FF FF FF FF FF FF     
   5670 FFFC6D5C FF FF FF FF FF FF FF FF     
   5671 FFFC6D64 FF FF FF FF FF FF FF FF     
   5672 FFFC6D6C FF FF FF FF FF FF FF FF     
   5673 FFFC6D74 FF FF FF FF FF FF FF FF     
   5674 FFFC6D7C FF FF FF FF FF FF FF FF     
   5675 FFFC6D84 FF FF FF FF FF FF FF FF     
   5676 FFFC6D8C FF FF FF FF FF FF FF FF     
   5677 FFFC6D94 FF FF FF FF FF FF FF FF     
   5678 FFFC6D9C FF FF FF FF FF FF FF FF     
   5679 FFFC6DA4 FF FF FF FF FF FF FF FF     
   5680 FFFC6DAC FF FF FF FF FF FF FF FF     
   5681 FFFC6DB4 FF FF FF FF FF FF FF FF     
   5682 FFFC6DBC FF FF FF FF FF FF FF FF     
   5683 FFFC6DC4 FF FF FF FF FF FF FF FF     
   5684 FFFC6DCC FF FF FF FF FF FF FF FF     
   5685 FFFC6DD4 FF FF FF FF FF FF FF FF     
   5686 FFFC6DDC FF FF FF FF FF FF FF FF     
   5687 FFFC6DE4 FF FF FF FF FF FF FF FF     
   5688 FFFC6DEC FF FF FF FF FF FF FF FF     
   5689 FFFC6DF4 FF FF FF FF FF FF FF FF     
   5690 FFFC6DFC FF FF FF FF FF FF FF FF     
   5691 FFFC6E04 FF FF FF FF FF FF FF FF     
   5692 FFFC6E0C FF FF FF FF FF FF FF FF     
   5693 FFFC6E14 FF FF FF FF FF FF FF FF     
   5694 FFFC6E1C FF FF FF FF FF FF FF FF     
   5695 FFFC6E24 FF FF FF FF FF FF FF FF     
   5696 FFFC6E2C FF FF FF FF FF FF FF FF     
   5697 FFFC6E34 FF FF FF FF FF FF FF FF     
   5698 FFFC6E3C FF FF FF FF FF FF FF FF     
   5699 FFFC6E44 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 43
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5700 FFFC6E4C FF FF FF FF FF FF FF FF     
   5701 FFFC6E54 FF FF FF FF FF FF FF FF     
   5702 FFFC6E5C FF FF FF FF FF FF FF FF     
   5703 FFFC6E64 FF FF FF FF FF FF FF FF     
   5704 FFFC6E6C FF FF FF FF FF FF FF FF     
   5705 FFFC6E74 FF FF FF FF FF FF FF FF     
   5706 FFFC6E7C FF FF FF FF FF FF FF FF     
   5707 FFFC6E84 FF FF FF FF FF FF FF FF     
   5708 FFFC6E8C FF FF FF FF FF FF FF FF     
   5709 FFFC6E94 FF FF FF FF FF FF FF FF     
   5710 FFFC6E9C FF FF FF FF FF FF FF FF     
   5711 FFFC6EA4 FF FF FF FF FF FF FF FF     
   5712 FFFC6EAC FF FF FF FF FF FF FF FF     
   5713 FFFC6EB4 FF FF FF FF FF FF FF FF     
   5714 FFFC6EBC FF FF FF FF FF FF FF FF     
   5715 FFFC6EC4 FF FF FF FF FF FF FF FF     
   5716 FFFC6ECC FF FF FF FF FF FF FF FF     
   5717 FFFC6ED4 FF FF FF FF FF FF FF FF     
   5718 FFFC6EDC FF FF FF FF FF FF FF FF     
   5719 FFFC6EE4 FF FF FF FF FF FF FF FF     
   5720 FFFC6EEC FF FF FF FF FF FF FF FF     
   5721 FFFC6EF4 FF FF FF FF FF FF FF FF     
   5722 FFFC6EFC FF FF FF FF FF FF FF FF     
   5723 FFFC6F04 FF FF FF FF FF FF FF FF     
   5724 FFFC6F0C FF FF FF FF FF FF FF FF     
   5725 FFFC6F14 FF FF FF FF FF FF FF FF     
   5726 FFFC6F1C FF FF FF FF FF FF FF FF     
   5727 FFFC6F24 FF FF FF FF FF FF FF FF     
   5728 FFFC6F2C FF FF FF FF FF FF FF FF     
   5729 FFFC6F34 FF FF FF FF FF FF FF FF     
   5730 FFFC6F3C FF FF FF FF FF FF FF FF     
   5731 FFFC6F44 FF FF FF FF FF FF FF FF     
   5732 FFFC6F4C FF FF FF FF FF FF FF FF     
   5733 FFFC6F54 FF FF FF FF FF FF FF FF     
   5734 FFFC6F5C FF FF FF FF FF FF FF FF     
   5735 FFFC6F64 FF FF FF FF FF FF FF FF     
   5736 FFFC6F6C FF FF FF FF FF FF FF FF     
   5737 FFFC6F74 FF FF FF FF FF FF FF FF     
   5738 FFFC6F7C FF FF FF FF FF FF FF FF     
   5739 FFFC6F84 FF FF FF FF FF FF FF FF     
   5740 FFFC6F8C FF FF FF FF FF FF FF FF     
   5741 FFFC6F94 FF FF FF FF FF FF FF FF     
   5742 FFFC6F9C FF FF FF FF FF FF FF FF     
   5743 FFFC6FA4 FF FF FF FF FF FF FF FF     
   5744 FFFC6FAC FF FF FF FF FF FF FF FF     
   5745 FFFC6FB4 FF FF FF FF FF FF FF FF     
   5746 FFFC6FBC FF FF FF FF FF FF FF FF     
   5747 FFFC6FC4 FF FF FF FF FF FF FF FF     
   5748 FFFC6FCC FF FF FF FF FF FF FF FF     
   5749 FFFC6FD4 FF FF FF FF FF FF FF FF     
   5750 FFFC6FDC FF FF FF FF FF FF FF FF     
   5751 FFFC6FE4 FF FF FF FF FF FF FF FF     
   5752 FFFC6FEC FF FF FF FF FF FF FF FF     
   5753 FFFC6FF4 FF FF FF FF FF FF FF FF     
   5754 FFFC6FFC FF FF FF FF FF FF FF FF     
   5755 FFFC7004 FF FF FF FF FF FF FF FF     
   5756 FFFC700C FF FF FF FF FF FF FF FF     
   5757 FFFC7014 FF FF FF FF FF FF FF FF     
   5758 FFFC701C FF FF FF FF FF FF FF FF     
   5759 FFFC7024 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 44
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5760 FFFC702C FF FF FF FF FF FF FF FF     
   5761 FFFC7034 FF FF FF FF FF FF FF FF     
   5762 FFFC703C FF FF FF FF FF FF FF FF     
   5763 FFFC7044 FF FF FF FF FF FF FF FF     
   5764 FFFC704C FF FF FF FF FF FF FF FF     
   5765 FFFC7054 FF FF FF FF FF FF FF FF     
   5766 FFFC705C FF FF FF FF FF FF FF FF     
   5767 FFFC7064 FF FF FF FF FF FF FF FF     
   5768 FFFC706C FF FF FF FF FF FF FF FF     
   5769 FFFC7074 FF FF FF FF FF FF FF FF     
   5770 FFFC707C FF FF FF FF FF FF FF FF     
   5771 FFFC7084 FF FF FF FF FF FF FF FF     
   5772 FFFC708C FF FF FF FF FF FF FF FF     
   5773 FFFC7094 FF FF FF FF FF FF FF FF     
   5774 FFFC709C FF FF FF FF FF FF FF FF     
   5775 FFFC70A4 FF FF FF FF FF FF FF FF     
   5776 FFFC70AC FF FF FF FF FF FF FF FF     
   5777 FFFC70B4 FF FF FF FF FF FF FF FF     
   5778 FFFC70BC FF FF FF FF FF FF FF FF     
   5779 FFFC70C4 FF FF FF FF FF FF FF FF     
   5780 FFFC70CC FF FF FF FF FF FF FF FF     
   5781 FFFC70D4 FF FF FF FF FF FF FF FF     
   5782 FFFC70DC FF FF FF FF FF FF FF FF     
   5783 FFFC70E4 FF FF FF FF FF FF FF FF     
   5784 FFFC70EC FF FF FF FF FF FF FF FF     
   5785 FFFC70F4 FF FF FF FF FF FF FF FF     
   5786 FFFC70FC FF FF FF FF FF FF FF FF     
   5787 FFFC7104 FF FF FF FF FF FF FF FF     
   5788 FFFC710C FF FF FF FF FF FF FF FF     
   5789 FFFC7114 FF FF FF FF FF FF FF FF     
   5790 FFFC711C FF FF FF FF FF FF FF FF     
   5791 FFFC7124 FF FF FF FF FF FF FF FF     
   5792 FFFC712C FF FF FF FF FF FF FF FF     
   5793 FFFC7134 FF FF FF FF FF FF FF FF     
   5794 FFFC713C FF FF FF FF FF FF FF FF     
   5795 FFFC7144 FF FF FF FF FF FF FF FF     
   5796 FFFC714C FF FF FF FF FF FF FF FF     
   5797 FFFC7154 FF FF FF FF FF FF FF FF     
   5798 FFFC715C FF FF FF FF FF FF FF FF     
   5799 FFFC7164 FF FF FF FF FF FF FF FF     
   5800 FFFC716C FF FF FF FF FF FF FF FF     
   5801 FFFC7174 FF FF FF FF FF FF FF FF     
   5802 FFFC717C FF FF FF FF FF FF FF FF     
   5803 FFFC7184 FF FF FF FF FF FF FF FF     
   5804 FFFC718C FF FF FF FF FF FF FF FF     
   5805 FFFC7194 FF FF FF FF FF FF FF FF     
   5806 FFFC719C FF FF FF FF FF FF FF FF     
   5807 FFFC71A4 FF FF FF FF FF FF FF FF     
   5808 FFFC71AC FF FF FF FF FF FF FF FF     
   5809 FFFC71B4 FF FF FF FF FF FF FF FF     
   5810 FFFC71BC FF FF FF FF FF FF FF FF     
   5811 FFFC71C4 FF FF FF FF FF FF FF FF     
   5812 FFFC71CC FF FF FF FF FF FF FF FF     
   5813 FFFC71D4 FF FF FF FF FF FF FF FF     
   5814 FFFC71DC FF FF FF FF FF FF FF FF     
   5815 FFFC71E4 FF FF FF FF FF FF FF FF     
   5816 FFFC71EC FF FF FF FF FF FF FF FF     
   5817 FFFC71F4 FF FF FF FF FF FF FF FF     
   5818 FFFC71FC FF FF FF FF FF FF FF FF     
   5819 FFFC7204 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 45
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5820 FFFC720C FF FF FF FF FF FF FF FF     
   5821 FFFC7214 FF FF FF FF FF FF FF FF     
   5822 FFFC721C FF FF FF FF FF FF FF FF     
   5823 FFFC7224 FF FF FF FF FF FF FF FF     
   5824 FFFC722C FF FF FF FF FF FF FF FF     
   5825 FFFC7234 FF FF FF FF FF FF FF FF     
   5826 FFFC723C FF FF FF FF FF FF FF FF     
   5827 FFFC7244 FF FF FF FF FF FF FF FF     
   5828 FFFC724C FF FF FF FF FF FF FF FF     
   5829 FFFC7254 FF FF FF FF FF FF FF FF     
   5830 FFFC725C FF FF FF FF FF FF FF FF     
   5831 FFFC7264 FF FF FF FF FF FF FF FF     
   5832 FFFC726C FF FF FF FF FF FF FF FF     
   5833 FFFC7274 FF FF FF FF FF FF FF FF     
   5834 FFFC727C FF FF FF FF FF FF FF FF     
   5835 FFFC7284 FF FF FF FF FF FF FF FF     
   5836 FFFC728C FF FF FF FF FF FF FF FF     
   5837 FFFC7294 FF FF FF FF FF FF FF FF     
   5838 FFFC729C FF FF FF FF FF FF FF FF     
   5839 FFFC72A4 FF FF FF FF FF FF FF FF     
   5840 FFFC72AC FF FF FF FF FF FF FF FF     
   5841 FFFC72B4 FF FF FF FF FF FF FF FF     
   5842 FFFC72BC FF FF FF FF FF FF FF FF     
   5843 FFFC72C4 FF FF FF FF FF FF FF FF     
   5844 FFFC72CC FF FF FF FF FF FF FF FF     
   5845 FFFC72D4 FF FF FF FF FF FF FF FF     
   5846 FFFC72DC FF FF FF FF FF FF FF FF     
   5847 FFFC72E4 FF FF FF FF FF FF FF FF     
   5848 FFFC72EC FF FF FF FF FF FF FF FF     
   5849 FFFC72F4 FF FF FF FF FF FF FF FF     
   5850 FFFC72FC FF FF FF FF FF FF FF FF     
   5851 FFFC7304 FF FF FF FF FF FF FF FF     
   5852 FFFC730C FF FF FF FF FF FF FF FF     
   5853 FFFC7314 FF FF FF FF FF FF FF FF     
   5854 FFFC731C FF FF FF FF FF FF FF FF     
   5855 FFFC7324 FF FF FF FF FF FF FF FF     
   5856 FFFC732C FF FF FF FF FF FF FF FF     
   5857 FFFC7334 FF FF FF FF FF FF FF FF     
   5858 FFFC733C FF FF FF FF FF FF FF FF     
   5859 FFFC7344 FF FF FF FF FF FF FF FF     
   5860 FFFC734C FF FF FF FF FF FF FF FF     
   5861 FFFC7354 FF FF FF FF FF FF FF FF     
   5862 FFFC735C FF FF FF FF FF FF FF FF     
   5863 FFFC7364 FF FF FF FF FF FF FF FF     
   5864 FFFC736C FF FF FF FF FF FF FF FF     
   5865 FFFC7374 FF FF FF FF FF FF FF FF     
   5866 FFFC737C FF FF FF FF FF FF FF FF     
   5867 FFFC7384 FF FF FF FF FF FF FF FF     
   5868 FFFC738C FF FF FF FF FF FF FF FF     
   5869 FFFC7394 FF FF FF FF FF FF FF FF     
   5870 FFFC739C FF FF FF FF FF FF FF FF     
   5871 FFFC73A4 FF FF FF FF FF FF FF FF     
   5872 FFFC73AC FF FF FF FF FF FF FF FF     
   5873 FFFC73B4 FF FF FF FF FF FF FF FF     
   5874 FFFC73BC FF FF FF FF FF FF FF FF     
   5875 FFFC73C4 FF FF FF FF FF FF FF FF     
   5876 FFFC73CC FF FF FF FF FF FF FF FF     
   5877 FFFC73D4 FF FF FF FF FF FF FF FF     
   5878 FFFC73DC FF FF FF FF FF FF FF FF     
   5879 FFFC73E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 46
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5880 FFFC73EC FF FF FF FF FF FF FF FF     
   5881 FFFC73F4 FF FF FF FF FF FF FF FF     
   5882 FFFC73FC FF FF FF FF FF FF FF FF     
   5883 FFFC7404 FF FF FF FF FF FF FF FF     
   5884 FFFC740C FF FF FF FF FF FF FF FF     
   5885 FFFC7414 FF FF FF FF FF FF FF FF     
   5886 FFFC741C FF FF FF FF FF FF FF FF     
   5887 FFFC7424 FF FF FF FF FF FF FF FF     
   5888 FFFC742C FF FF FF FF FF FF FF FF     
   5889 FFFC7434 FF FF FF FF FF FF FF FF     
   5890 FFFC743C FF FF FF FF FF FF FF FF     
   5891 FFFC7444 FF FF FF FF FF FF FF FF     
   5892 FFFC744C FF FF FF FF FF FF FF FF     
   5893 FFFC7454 FF FF FF FF FF FF FF FF     
   5894 FFFC745C FF FF FF FF FF FF FF FF     
   5895 FFFC7464 FF FF FF FF FF FF FF FF     
   5896 FFFC746C FF FF FF FF FF FF FF FF     
   5897 FFFC7474 FF FF FF FF FF FF FF FF     
   5898 FFFC747C FF FF FF FF FF FF FF FF     
   5899 FFFC7484 FF FF FF FF FF FF FF FF     
   5900 FFFC748C FF FF FF FF FF FF FF FF     
   5901 FFFC7494 FF FF FF FF FF FF FF FF     
   5902 FFFC749C FF FF FF FF FF FF FF FF     
   5903 FFFC74A4 FF FF FF FF FF FF FF FF     
   5904 FFFC74AC FF FF FF FF FF FF FF FF     
   5905 FFFC74B4 FF FF FF FF FF FF FF FF     
   5906 FFFC74BC FF FF FF FF FF FF FF FF     
   5907 FFFC74C4 FF FF FF FF FF FF FF FF     
   5908 FFFC74CC FF FF FF FF FF FF FF FF     
   5909 FFFC74D4 FF FF FF FF FF FF FF FF     
   5910 FFFC74DC FF FF FF FF FF FF FF FF     
   5911 FFFC74E4 FF FF FF FF FF FF FF FF     
   5912 FFFC74EC FF FF FF FF FF FF FF FF     
   5913 FFFC74F4 FF FF FF FF FF FF FF FF     
   5914 FFFC74FC FF FF FF FF FF FF FF FF     
   5915 FFFC7504 FF FF FF FF FF FF FF FF     
   5916 FFFC750C FF FF FF FF FF FF FF FF     
   5917 FFFC7514 FF FF FF FF FF FF FF FF     
   5918 FFFC751C FF FF FF FF FF FF FF FF     
   5919 FFFC7524 FF FF FF FF FF FF FF FF     
   5920 FFFC752C FF FF FF FF FF FF FF FF     
   5921 FFFC7534 FF FF FF FF FF FF FF FF     
   5922 FFFC753C FF FF FF FF FF FF FF FF     
   5923 FFFC7544 FF FF FF FF FF FF FF FF     
   5924 FFFC754C FF FF FF FF FF FF FF FF     
   5925 FFFC7554 FF FF FF FF FF FF FF FF     
   5926 FFFC755C FF FF FF FF FF FF FF FF     
   5927 FFFC7564 FF FF FF FF FF FF FF FF     
   5928 FFFC756C FF FF FF FF FF FF FF FF     
   5929 FFFC7574 FF FF FF FF FF FF FF FF     
   5930 FFFC757C FF FF FF FF FF FF FF FF     
   5931 FFFC7584 FF FF FF FF FF FF FF FF     
   5932 FFFC758C FF FF FF FF FF FF FF FF     
   5933 FFFC7594 FF FF FF FF FF FF FF FF     
   5934 FFFC759C FF FF FF FF FF FF FF FF     
   5935 FFFC75A4 FF FF FF FF FF FF FF FF     
   5936 FFFC75AC FF FF FF FF FF FF FF FF     
   5937 FFFC75B4 FF FF FF FF FF FF FF FF     
   5938 FFFC75BC FF FF FF FF FF FF FF FF     
   5939 FFFC75C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 47
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5940 FFFC75CC FF FF FF FF FF FF FF FF     
   5941 FFFC75D4 FF FF FF FF FF FF FF FF     
   5942 FFFC75DC FF FF FF FF FF FF FF FF     
   5943 FFFC75E4 FF FF FF FF FF FF FF FF     
   5944 FFFC75EC FF FF FF FF FF FF FF FF     
   5945 FFFC75F4 FF FF FF FF FF FF FF FF     
   5946 FFFC75FC FF FF FF FF FF FF FF FF     
   5947 FFFC7604 FF FF FF FF FF FF FF FF     
   5948 FFFC760C FF FF FF FF FF FF FF FF     
   5949 FFFC7614 FF FF FF FF FF FF FF FF     
   5950 FFFC761C FF FF FF FF FF FF FF FF     
   5951 FFFC7624 FF FF FF FF FF FF FF FF     
   5952 FFFC762C FF FF FF FF FF FF FF FF     
   5953 FFFC7634 FF FF FF FF FF FF FF FF     
   5954 FFFC763C FF FF FF FF FF FF FF FF     
   5955 FFFC7644 FF FF FF FF FF FF FF FF     
   5956 FFFC764C FF FF FF FF FF FF FF FF     
   5957 FFFC7654 FF FF FF FF FF FF FF FF     
   5958 FFFC765C FF FF FF FF FF FF FF FF     
   5959 FFFC7664 FF FF FF FF FF FF FF FF     
   5960 FFFC766C FF FF FF FF FF FF FF FF     
   5961 FFFC7674 FF FF FF FF FF FF FF FF     
   5962 FFFC767C FF FF FF FF FF FF FF FF     
   5963 FFFC7684 FF FF FF FF FF FF FF FF     
   5964 FFFC768C FF FF FF FF FF FF FF FF     
   5965 FFFC7694 FF FF FF FF FF FF FF FF     
   5966 FFFC769C FF FF FF FF FF FF FF FF     
   5967 FFFC76A4 FF FF FF FF FF FF FF FF     
   5968 FFFC76AC FF FF FF FF FF FF FF FF     
   5969 FFFC76B4 FF FF FF FF FF FF FF FF     
   5970 FFFC76BC FF FF FF FF FF FF FF FF     
   5971 FFFC76C4 FF FF FF FF FF FF FF FF     
   5972 FFFC76CC FF FF FF FF FF FF FF FF     
   5973 FFFC76D4 FF FF FF FF FF FF FF FF     
   5974 FFFC76DC FF FF FF FF FF FF FF FF     
   5975 FFFC76E4 FF FF FF FF FF FF FF FF     
   5976 FFFC76EC FF FF FF FF FF FF FF FF     
   5977 FFFC76F4 FF FF FF FF FF FF FF FF     
   5978 FFFC76FC FF FF FF FF FF FF FF FF     
   5979 FFFC7704 FF FF FF FF FF FF FF FF     
   5980 FFFC770C FF FF FF FF FF FF FF FF     
   5981 FFFC7714 FF FF FF FF FF FF FF FF     
   5982 FFFC771C FF FF FF FF FF FF FF FF     
   5983 FFFC7724 FF FF FF FF FF FF FF FF     
   5984 FFFC772C FF FF FF FF FF FF FF FF     
   5985 FFFC7734 FF FF FF FF FF FF FF FF     
   5986 FFFC773C FF FF FF FF FF FF FF FF     
   5987 FFFC7744 FF FF FF FF FF FF FF FF     
   5988 FFFC774C FF FF FF FF FF FF FF FF     
   5989 FFFC7754 FF FF FF FF FF FF FF FF     
   5990 FFFC775C FF FF FF FF FF FF FF FF     
   5991 FFFC7764 FF FF FF FF FF FF FF FF     
   5992 FFFC776C FF FF FF FF FF FF FF FF     
   5993 FFFC7774 FF FF FF FF FF FF FF FF     
   5994 FFFC777C FF FF FF FF FF FF FF FF     
   5995 FFFC7784 FF FF FF FF FF FF FF FF     
   5996 FFFC778C FF FF FF FF FF FF FF FF     
   5997 FFFC7794 FF FF FF FF FF FF FF FF     
   5998 FFFC779C FF FF FF FF FF FF FF FF     
   5999 FFFC77A4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 48
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6000 FFFC77AC FF FF FF FF FF FF FF FF     
   6001 FFFC77B4 FF FF FF FF FF FF FF FF     
   6002 FFFC77BC FF FF FF FF FF FF FF FF     
   6003 FFFC77C4 FF FF FF FF FF FF FF FF     
   6004 FFFC77CC FF FF FF FF FF FF FF FF     
   6005 FFFC77D4 FF FF FF FF FF FF FF FF     
   6006 FFFC77DC FF FF FF FF FF FF FF FF     
   6007 FFFC77E4 FF FF FF FF FF FF FF FF     
   6008 FFFC77EC FF FF FF FF FF FF FF FF     
   6009 FFFC77F4 FF FF FF FF FF FF FF FF     
   6010 FFFC77FC FF FF FF FF FF FF FF FF     
   6011 FFFC7804 FF FF FF FF FF FF FF FF     
   6012 FFFC780C FF FF FF FF FF FF FF FF     
   6013 FFFC7814 FF FF FF FF FF FF FF FF     
   6014 FFFC781C FF FF FF FF FF FF FF FF     
   6015 FFFC7824 FF FF FF FF FF FF FF FF     
   6016 FFFC782C FF FF FF FF FF FF FF FF     
   6017 FFFC7834 FF FF FF FF FF FF FF FF     
   6018 FFFC783C FF FF FF FF FF FF FF FF     
   6019 FFFC7844 FF FF FF FF FF FF FF FF     
   6020 FFFC784C FF FF FF FF FF FF FF FF     
   6021 FFFC7854 FF FF FF FF FF FF FF FF     
   6022 FFFC785C FF FF FF FF FF FF FF FF     
   6023 FFFC7864 FF FF FF FF FF FF FF FF     
   6024 FFFC786C FF FF FF FF FF FF FF FF     
   6025 FFFC7874 FF FF FF FF FF FF FF FF     
   6026 FFFC787C FF FF FF FF FF FF FF FF     
   6027 FFFC7884 FF FF FF FF FF FF FF FF     
   6028 FFFC788C FF FF FF FF FF FF FF FF     
   6029 FFFC7894 FF FF FF FF FF FF FF FF     
   6030 FFFC789C FF FF FF FF FF FF FF FF     
   6031 FFFC78A4 FF FF FF FF FF FF FF FF     
   6032 FFFC78AC FF FF FF FF FF FF FF FF     
   6033 FFFC78B4 FF FF FF FF FF FF FF FF     
   6034 FFFC78BC FF FF FF FF FF FF FF FF     
   6035 FFFC78C4 FF FF FF FF FF FF FF FF     
   6036 FFFC78CC FF FF FF FF FF FF FF FF     
   6037 FFFC78D4 FF FF FF FF FF FF FF FF     
   6038 FFFC78DC FF FF FF FF FF FF FF FF     
   6039 FFFC78E4 FF FF FF FF FF FF FF FF     
   6040 FFFC78EC FF FF FF FF FF FF FF FF     
   6041 FFFC78F4 FF FF FF FF FF FF FF FF     
   6042 FFFC78FC FF FF FF FF FF FF FF FF     
   6043 FFFC7904 FF FF FF FF FF FF FF FF     
   6044 FFFC790C FF FF FF FF FF FF FF FF     
   6045 FFFC7914 FF FF FF FF FF FF FF FF     
   6046 FFFC791C FF FF FF FF FF FF FF FF     
   6047 FFFC7924 FF FF FF FF FF FF FF FF     
   6048 FFFC792C FF FF FF FF FF FF FF FF     
   6049 FFFC7934 FF FF FF FF FF FF FF FF     
   6050 FFFC793C FF FF FF FF FF FF FF FF     
   6051 FFFC7944 FF FF FF FF FF FF FF FF     
   6052 FFFC794C FF FF FF FF FF FF FF FF     
   6053 FFFC7954 FF FF FF FF FF FF FF FF     
   6054 FFFC795C FF FF FF FF FF FF FF FF     
   6055 FFFC7964 FF FF FF FF FF FF FF FF     
   6056 FFFC796C FF FF FF FF FF FF FF FF     
   6057 FFFC7974 FF FF FF FF FF FF FF FF     
   6058 FFFC797C FF FF FF FF FF FF FF FF     
   6059 FFFC7984 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 49
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6060 FFFC798C FF FF FF FF FF FF FF FF     
   6061 FFFC7994 FF FF FF FF FF FF FF FF     
   6062 FFFC799C FF FF FF FF FF FF FF FF     
   6063 FFFC79A4 FF FF FF FF FF FF FF FF     
   6064 FFFC79AC FF FF FF FF FF FF FF FF     
   6065 FFFC79B4 FF FF FF FF FF FF FF FF     
   6066 FFFC79BC FF FF FF FF FF FF FF FF     
   6067 FFFC79C4 FF FF FF FF FF FF FF FF     
   6068 FFFC79CC FF FF FF FF FF FF FF FF     
   6069 FFFC79D4 FF FF FF FF FF FF FF FF     
   6070 FFFC79DC FF FF FF FF FF FF FF FF     
   6071 FFFC79E4 FF FF FF FF FF FF FF FF     
   6072 FFFC79EC FF FF FF FF FF FF FF FF     
   6073 FFFC79F4 FF FF FF FF FF FF FF FF     
   6074 FFFC79FC FF FF FF FF FF FF FF FF     
   6075 FFFC7A04 FF FF FF FF FF FF FF FF     
   6076 FFFC7A0C FF FF FF FF FF FF FF FF     
   6077 FFFC7A14 FF FF FF FF FF FF FF FF     
   6078 FFFC7A1C FF FF FF FF FF FF FF FF     
   6079 FFFC7A24 FF FF FF FF FF FF FF FF     
   6080 FFFC7A2C FF FF FF FF FF FF FF FF     
   6081 FFFC7A34 FF FF FF FF FF FF FF FF     
   6082 FFFC7A3C FF FF FF FF FF FF FF FF     
   6083 FFFC7A44 FF FF FF FF FF FF FF FF     
   6084 FFFC7A4C FF FF FF FF FF FF FF FF     
   6085 FFFC7A54 FF FF FF FF FF FF FF FF     
   6086 FFFC7A5C FF FF FF FF FF FF FF FF     
   6087 FFFC7A64 FF FF FF FF FF FF FF FF     
   6088 FFFC7A6C FF FF FF FF FF FF FF FF     
   6089 FFFC7A74 FF FF FF FF FF FF FF FF     
   6090 FFFC7A7C FF FF FF FF FF FF FF FF     
   6091 FFFC7A84 FF FF FF FF FF FF FF FF     
   6092 FFFC7A8C FF FF FF FF FF FF FF FF     
   6093 FFFC7A94 FF FF FF FF FF FF FF FF     
   6094 FFFC7A9C FF FF FF FF FF FF FF FF     
   6095 FFFC7AA4 FF FF FF FF FF FF FF FF     
   6096 FFFC7AAC FF FF FF FF FF FF FF FF     
   6097 FFFC7AB4 FF FF FF FF FF FF FF FF     
   6098 FFFC7ABC FF FF FF FF FF FF FF FF     
   6099 FFFC7AC4 FF FF FF FF FF FF FF FF     
   6100 FFFC7ACC FF FF FF FF FF FF FF FF     
   6101 FFFC7AD4 FF FF FF FF FF FF FF FF     
   6102 FFFC7ADC FF FF FF FF FF FF FF FF     
   6103 FFFC7AE4 FF FF FF FF FF FF FF FF     
   6104 FFFC7AEC FF FF FF FF FF FF FF FF     
   6105 FFFC7AF4 FF FF FF FF FF FF FF FF     
   6106 FFFC7AFC FF FF FF FF FF FF FF FF     
   6107 FFFC7B04 FF FF FF FF FF FF FF FF     
   6108 FFFC7B0C FF FF FF FF FF FF FF FF     
   6109 FFFC7B14 FF FF FF FF FF FF FF FF     
   6110 FFFC7B1C FF FF FF FF FF FF FF FF     
   6111 FFFC7B24 FF FF FF FF FF FF FF FF     
   6112 FFFC7B2C FF FF FF FF FF FF FF FF     
   6113 FFFC7B34 FF FF FF FF FF FF FF FF     
   6114 FFFC7B3C FF FF FF FF FF FF FF FF     
   6115 FFFC7B44 FF FF FF FF FF FF FF FF     
   6116 FFFC7B4C FF FF FF FF FF FF FF FF     
   6117 FFFC7B54 FF FF FF FF FF FF FF FF     
   6118 FFFC7B5C FF FF FF FF FF FF FF FF     
   6119 FFFC7B64 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 50
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6120 FFFC7B6C FF FF FF FF FF FF FF FF     
   6121 FFFC7B74 FF FF FF FF FF FF FF FF     
   6122 FFFC7B7C FF FF FF FF FF FF FF FF     
   6123 FFFC7B84 FF FF FF FF FF FF FF FF     
   6124 FFFC7B8C FF FF FF FF FF FF FF FF     
   6125 FFFC7B94 FF FF FF FF FF FF FF FF     
   6126 FFFC7B9C FF FF FF FF FF FF FF FF     
   6127 FFFC7BA4 FF FF FF FF FF FF FF FF     
   6128 FFFC7BAC FF FF FF FF FF FF FF FF     
   6129 FFFC7BB4 FF FF FF FF FF FF FF FF     
   6130 FFFC7BBC FF FF FF FF FF FF FF FF     
   6131 FFFC7BC4 FF FF FF FF FF FF FF FF     
   6132 FFFC7BCC FF FF FF FF FF FF FF FF     
   6133 FFFC7BD4 FF FF FF FF FF FF FF FF     
   6134 FFFC7BDC FF FF FF FF FF FF FF FF     
   6135 FFFC7BE4 FF FF FF FF FF FF FF FF     
   6136 FFFC7BEC FF FF FF FF FF FF FF FF     
   6137 FFFC7BF4 FF FF FF FF FF FF FF FF     
   6138 FFFC7BFC FF FF FF FF FF FF FF FF     
   6139 FFFC7C04 FF FF FF FF FF FF FF FF     
   6140 FFFC7C0C FF FF FF FF FF FF FF FF     
   6141 FFFC7C14 FF FF FF FF FF FF FF FF     
   6142 FFFC7C1C FF FF FF FF FF FF FF FF     
   6143 FFFC7C24 FF FF FF FF FF FF FF FF     
   6144 FFFC7C2C FF FF FF FF FF FF FF FF     
   6145 FFFC7C34 FF FF FF FF FF FF FF FF     
   6146 FFFC7C3C FF FF FF FF FF FF FF FF     
   6147 FFFC7C44 FF FF FF FF FF FF FF FF     
   6148 FFFC7C4C FF FF FF FF FF FF FF FF     
   6149 FFFC7C54 FF FF FF FF FF FF FF FF     
   6150 FFFC7C5C FF FF FF FF FF FF FF FF     
   6151 FFFC7C64 FF FF FF FF FF FF FF FF     
   6152 FFFC7C6C FF FF FF FF FF FF FF FF     
   6153 FFFC7C74 FF FF FF FF FF FF FF FF     
   6154 FFFC7C7C FF FF FF FF FF FF FF FF     
   6155 FFFC7C84 FF FF FF FF FF FF FF FF     
   6156 FFFC7C8C FF FF FF FF FF FF FF FF     
   6157 FFFC7C94 FF FF FF FF FF FF FF FF     
   6158 FFFC7C9C FF FF FF FF FF FF FF FF     
   6159 FFFC7CA4 FF FF FF FF FF FF FF FF     
   6160 FFFC7CAC FF FF FF FF FF FF FF FF     
   6161 FFFC7CB4 FF FF FF FF FF FF FF FF     
   6162 FFFC7CBC FF FF FF FF FF FF FF FF     
   6163 FFFC7CC4 FF FF FF FF FF FF FF FF     
   6164 FFFC7CCC FF FF FF FF FF FF FF FF     
   6165 FFFC7CD4 FF FF FF FF FF FF FF FF     
   6166 FFFC7CDC FF FF FF FF FF FF FF FF     
   6167 FFFC7CE4 FF FF FF FF FF FF FF FF     
   6168 FFFC7CEC FF FF FF FF FF FF FF FF     
   6169 FFFC7CF4 FF FF FF FF FF FF FF FF     
   6170 FFFC7CFC FF FF FF FF FF FF FF FF     
   6171 FFFC7D04 FF FF FF FF FF FF FF FF     
   6172 FFFC7D0C FF FF FF FF FF FF FF FF     
   6173 FFFC7D14 FF FF FF FF FF FF FF FF     
   6174 FFFC7D1C FF FF FF FF FF FF FF FF     
   6175 FFFC7D24 FF FF FF FF FF FF FF FF     
   6176 FFFC7D2C FF FF FF FF FF FF FF FF     
   6177 FFFC7D34 FF FF FF FF FF FF FF FF     
   6178 FFFC7D3C FF FF FF FF FF FF FF FF     
   6179 FFFC7D44 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 51
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6180 FFFC7D4C FF FF FF FF FF FF FF FF     
   6181 FFFC7D54 FF FF FF FF FF FF FF FF     
   6182 FFFC7D5C FF FF FF FF FF FF FF FF     
   6183 FFFC7D64 FF FF FF FF FF FF FF FF     
   6184 FFFC7D6C FF FF FF FF FF FF FF FF     
   6185 FFFC7D74 FF FF FF FF FF FF FF FF     
   6186 FFFC7D7C FF FF FF FF FF FF FF FF     
   6187 FFFC7D84 FF FF FF FF FF FF FF FF     
   6188 FFFC7D8C FF FF FF FF FF FF FF FF     
   6189 FFFC7D94 FF FF FF FF FF FF FF FF     
   6190 FFFC7D9C FF FF FF FF FF FF FF FF     
   6191 FFFC7DA4 FF FF FF FF FF FF FF FF     
   6192 FFFC7DAC FF FF FF FF FF FF FF FF     
   6193 FFFC7DB4 FF FF FF FF FF FF FF FF     
   6194 FFFC7DBC FF FF FF FF FF FF FF FF     
   6195 FFFC7DC4 FF FF FF FF FF FF FF FF     
   6196 FFFC7DCC FF FF FF FF FF FF FF FF     
   6197 FFFC7DD4 FF FF FF FF FF FF FF FF     
   6198 FFFC7DDC FF FF FF FF FF FF FF FF     
   6199 FFFC7DE4 FF FF FF FF FF FF FF FF     
   6200 FFFC7DEC FF FF FF FF FF FF FF FF     
   6201 FFFC7DF4 FF FF FF FF FF FF FF FF     
   6202 FFFC7DFC FF FF FF FF FF FF FF FF     
   6203 FFFC7E04 FF FF FF FF FF FF FF FF     
   6204 FFFC7E0C FF FF FF FF FF FF FF FF     
   6205 FFFC7E14 FF FF FF FF FF FF FF FF     
   6206 FFFC7E1C FF FF FF FF FF FF FF FF     
   6207 FFFC7E24 FF FF FF FF FF FF FF FF     
   6208 FFFC7E2C FF FF FF FF FF FF FF FF     
   6209 FFFC7E34 FF FF FF FF FF FF FF FF     
   6210 FFFC7E3C FF FF FF FF FF FF FF FF     
   6211 FFFC7E44 FF FF FF FF FF FF FF FF     
   6212 FFFC7E4C FF FF FF FF FF FF FF FF     
   6213 FFFC7E54 FF FF FF FF FF FF FF FF     
   6214 FFFC7E5C FF FF FF FF FF FF FF FF     
   6215 FFFC7E64 FF FF FF FF FF FF FF FF     
   6216 FFFC7E6C FF FF FF FF FF FF FF FF     
   6217 FFFC7E74 FF FF FF FF FF FF FF FF     
   6218 FFFC7E7C FF FF FF FF FF FF FF FF     
   6219 FFFC7E84 FF FF FF FF FF FF FF FF     
   6220 FFFC7E8C FF FF FF FF FF FF FF FF     
   6221 FFFC7E94 FF FF FF FF FF FF FF FF     
   6222 FFFC7E9C FF FF FF FF FF FF FF FF     
   6223 FFFC7EA4 FF FF FF FF FF FF FF FF     
   6224 FFFC7EAC FF FF FF FF FF FF FF FF     
   6225 FFFC7EB4 FF FF FF FF FF FF FF FF     
   6226 FFFC7EBC FF FF FF FF FF FF FF FF     
   6227 FFFC7EC4 FF FF FF FF FF FF FF FF     
   6228 FFFC7ECC FF FF FF FF FF FF FF FF     
   6229 FFFC7ED4 FF FF FF FF FF FF FF FF     
   6230 FFFC7EDC FF FF FF FF FF FF FF FF     
   6231 FFFC7EE4 FF FF FF FF FF FF FF FF     
   6232 FFFC7EEC FF FF FF FF FF FF FF FF     
   6233 FFFC7EF4 FF FF FF FF FF FF FF FF     
   6234 FFFC7EFC FF FF FF FF FF FF FF FF     
   6235 FFFC7F04 FF FF FF FF FF FF FF FF     
   6236 FFFC7F0C FF FF FF FF FF FF FF FF     
   6237 FFFC7F14 FF FF FF FF FF FF FF FF     
   6238 FFFC7F1C FF FF FF FF FF FF FF FF     
   6239 FFFC7F24 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 52
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6240 FFFC7F2C FF FF FF FF FF FF FF FF     
   6241 FFFC7F34 FF FF FF FF FF FF FF FF     
   6242 FFFC7F3C FF FF FF FF FF FF FF FF     
   6243 FFFC7F44 FF FF FF FF FF FF FF FF     
   6244 FFFC7F4C FF FF FF FF FF FF FF FF     
   6245 FFFC7F54 FF FF FF FF FF FF FF FF     
   6246 FFFC7F5C FF FF FF FF FF FF FF FF     
   6247 FFFC7F64 FF FF FF FF FF FF FF FF     
   6248 FFFC7F6C FF FF FF FF FF FF FF FF     
   6249 FFFC7F74 FF FF FF FF FF FF FF FF     
   6250 FFFC7F7C FF FF FF FF FF FF FF FF     
   6251 FFFC7F84 FF FF FF FF FF FF FF FF     
   6252 FFFC7F8C FF FF FF FF FF FF FF FF     
   6253 FFFC7F94 FF FF FF FF FF FF FF FF     
   6254 FFFC7F9C FF FF FF FF FF FF FF FF     
   6255 FFFC7FA4 FF FF FF FF FF FF FF FF     
   6256 FFFC7FAC FF FF FF FF FF FF FF FF     
   6257 FFFC7FB4 FF FF FF FF FF FF FF FF     
   6258 FFFC7FBC FF FF FF FF FF FF FF FF     
   6259 FFFC7FC4 FF FF FF FF FF FF FF FF     
   6260 FFFC7FCC FF FF FF FF FF FF FF FF     
   6261 FFFC7FD4 FF FF FF FF FF FF FF FF     
   6262 FFFC7FDC FF FF FF FF FF FF FF FF     
   6263 FFFC7FE4 FF FF FF FF FF FF FF FF     
   6264 FFFC7FEC FF FF FF FF FF FF FF FF     
   6265 FFFC7FF4 FF FF FF FF FF FF FF FF     
   6266 FFFC7FFC FF FF FF FF FF FF FF FF     
   6267 FFFC8004 FF FF FF FF FF FF FF FF     
   6268 FFFC800C FF FF FF FF FF FF FF FF     
   6269 FFFC8014 FF FF FF FF FF FF FF FF     
   6270 FFFC801C FF FF FF FF FF FF FF FF     
   6271 FFFC8024 FF FF FF FF FF FF FF FF     
   6272 FFFC802C FF FF FF FF FF FF FF FF     
   6273 FFFC8034 FF FF FF FF FF FF FF FF     
   6274 FFFC803C FF FF FF FF FF FF FF FF     
   6275 FFFC8044 FF FF FF FF FF FF FF FF     
   6276 FFFC804C FF FF FF FF FF FF FF FF     
   6277 FFFC8054 FF FF FF FF FF FF FF FF     
   6278 FFFC805C FF FF FF FF FF FF FF FF     
   6279 FFFC8064 FF FF FF FF FF FF FF FF     
   6280 FFFC806C FF FF FF FF FF FF FF FF     
   6281 FFFC8074 FF FF FF FF FF FF FF FF     
   6282 FFFC807C FF FF FF FF FF FF FF FF     
   6283 FFFC8084 FF FF FF FF FF FF FF FF     
   6284 FFFC808C FF FF FF FF FF FF FF FF     
   6285 FFFC8094 FF FF FF FF FF FF FF FF     
   6286 FFFC809C FF FF FF FF FF FF FF FF     
   6287 FFFC80A4 FF FF FF FF FF FF FF FF     
   6288 FFFC80AC FF FF FF FF FF FF FF FF     
   6289 FFFC80B4 FF FF FF FF FF FF FF FF     
   6290 FFFC80BC FF FF FF FF FF FF FF FF     
   6291 FFFC80C4 FF FF FF FF FF FF FF FF     
   6292 FFFC80CC FF FF FF FF FF FF FF FF     
   6293 FFFC80D4 FF FF FF FF FF FF FF FF     
   6294 FFFC80DC FF FF FF FF FF FF FF FF     
   6295 FFFC80E4 FF FF FF FF FF FF FF FF     
   6296 FFFC80EC FF FF FF FF FF FF FF FF     
   6297 FFFC80F4 FF FF FF FF FF FF FF FF     
   6298 FFFC80FC FF FF FF FF FF FF FF FF     
   6299 FFFC8104 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 53
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6300 FFFC810C FF FF FF FF FF FF FF FF     
   6301 FFFC8114 FF FF FF FF FF FF FF FF     
   6302 FFFC811C FF FF FF FF FF FF FF FF     
   6303 FFFC8124 FF FF FF FF FF FF FF FF     
   6304 FFFC812C FF FF FF FF FF FF FF FF     
   6305 FFFC8134 FF FF FF FF FF FF FF FF     
   6306 FFFC813C FF FF FF FF FF FF FF FF     
   6307 FFFC8144 FF FF FF FF FF FF FF FF     
   6308 FFFC814C FF FF FF FF FF FF FF FF     
   6309 FFFC8154 FF FF FF FF FF FF FF FF     
   6310 FFFC815C FF FF FF FF FF FF FF FF     
   6311 FFFC8164 FF FF FF FF FF FF FF FF     
   6312 FFFC816C FF FF FF FF FF FF FF FF     
   6313 FFFC8174 FF FF FF FF FF FF FF FF     
   6314 FFFC817C FF FF FF FF FF FF FF FF     
   6315 FFFC8184 FF FF FF FF FF FF FF FF     
   6316 FFFC818C FF FF FF FF FF FF FF FF     
   6317 FFFC8194 FF FF FF FF FF FF FF FF     
   6318 FFFC819C FF FF FF FF FF FF FF FF     
   6319 FFFC81A4 FF FF FF FF FF FF FF FF     
   6320 FFFC81AC FF FF FF FF FF FF FF FF     
   6321 FFFC81B4 FF FF FF FF FF FF FF FF     
   6322 FFFC81BC FF FF FF FF FF FF FF FF     
   6323 FFFC81C4 FF FF FF FF FF FF FF FF     
   6324 FFFC81CC FF FF FF FF FF FF FF FF     
   6325 FFFC81D4 FF FF FF FF FF FF FF FF     
   6326 FFFC81DC FF FF FF FF FF FF FF FF     
   6327 FFFC81E4 FF FF FF FF FF FF FF FF     
   6328 FFFC81EC FF FF FF FF FF FF FF FF     
   6329 FFFC81F4 FF FF FF FF FF FF FF FF     
   6330 FFFC81FC FF FF FF FF FF FF FF FF     
   6331 FFFC8204 FF FF FF FF FF FF FF FF     
   6332 FFFC820C FF FF FF FF FF FF FF FF     
   6333 FFFC8214 FF FF FF FF FF FF FF FF     
   6334 FFFC821C FF FF FF FF FF FF FF FF     
   6335 FFFC8224 FF FF FF FF FF FF FF FF     
   6336 FFFC822C FF FF FF FF FF FF FF FF     
   6337 FFFC8234 FF FF FF FF FF FF FF FF     
   6338 FFFC823C FF FF FF FF FF FF FF FF     
   6339 FFFC8244 FF FF FF FF FF FF FF FF     
   6340 FFFC824C FF FF FF FF FF FF FF FF     
   6341 FFFC8254 FF FF FF FF FF FF FF FF     
   6342 FFFC825C FF FF FF FF FF FF FF FF     
   6343 FFFC8264 FF FF FF FF FF FF FF FF     
   6344 FFFC826C FF FF FF FF FF FF FF FF     
   6345 FFFC8274 FF FF FF FF FF FF FF FF     
   6346 FFFC827C FF FF FF FF FF FF FF FF     
   6347 FFFC8284 FF FF FF FF FF FF FF FF     
   6348 FFFC828C FF FF FF FF FF FF FF FF     
   6349 FFFC8294 FF FF FF FF FF FF FF FF     
   6350 FFFC829C FF FF FF FF FF FF FF FF     
   6351 FFFC82A4 FF FF FF FF FF FF FF FF     
   6352 FFFC82AC FF FF FF FF FF FF FF FF     
   6353 FFFC82B4 FF FF FF FF FF FF FF FF     
   6354 FFFC82BC FF FF FF FF FF FF FF FF     
   6355 FFFC82C4 FF FF FF FF FF FF FF FF     
   6356 FFFC82CC FF FF FF FF FF FF FF FF     
   6357 FFFC82D4 FF FF FF FF FF FF FF FF     
   6358 FFFC82DC FF FF FF FF FF FF FF FF     
   6359 FFFC82E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 54
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6360 FFFC82EC FF FF FF FF FF FF FF FF     
   6361 FFFC82F4 FF FF FF FF FF FF FF FF     
   6362 FFFC82FC FF FF FF FF FF FF FF FF     
   6363 FFFC8304 FF FF FF FF FF FF FF FF     
   6364 FFFC830C FF FF FF FF FF FF FF FF     
   6365 FFFC8314 FF FF FF FF FF FF FF FF     
   6366 FFFC831C FF FF FF FF FF FF FF FF     
   6367 FFFC8324 FF FF FF FF FF FF FF FF     
   6368 FFFC832C FF FF FF FF FF FF FF FF     
   6369 FFFC8334 FF FF FF FF FF FF FF FF     
   6370 FFFC833C FF FF FF FF FF FF FF FF     
   6371 FFFC8344 FF FF FF FF FF FF FF FF     
   6372 FFFC834C FF FF FF FF FF FF FF FF     
   6373 FFFC8354 FF FF FF FF FF FF FF FF     
   6374 FFFC835C FF FF FF FF FF FF FF FF     
   6375 FFFC8364 FF FF FF FF FF FF FF FF     
   6376 FFFC836C FF FF FF FF FF FF FF FF     
   6377 FFFC8374 FF FF FF FF FF FF FF FF     
   6378 FFFC837C FF FF FF FF FF FF FF FF     
   6379 FFFC8384 FF FF FF FF FF FF FF FF     
   6380 FFFC838C FF FF FF FF FF FF FF FF     
   6381 FFFC8394 FF FF FF FF FF FF FF FF     
   6382 FFFC839C FF FF FF FF FF FF FF FF     
   6383 FFFC83A4 FF FF FF FF FF FF FF FF     
   6384 FFFC83AC FF FF FF FF FF FF FF FF     
   6385 FFFC83B4 FF FF FF FF FF FF FF FF     
   6386 FFFC83BC FF FF FF FF FF FF FF FF     
   6387 FFFC83C4 FF FF FF FF FF FF FF FF     
   6388 FFFC83CC FF FF FF FF FF FF FF FF     
   6389 FFFC83D4 FF FF FF FF FF FF FF FF     
   6390 FFFC83DC FF FF FF FF FF FF FF FF     
   6391 FFFC83E4 FF FF FF FF FF FF FF FF     
   6392 FFFC83EC FF FF FF FF FF FF FF FF     
   6393 FFFC83F4 FF FF FF FF FF FF FF FF     
   6394 FFFC83FC FF FF FF FF FF FF FF FF     
   6395 FFFC8404 FF FF FF FF FF FF FF FF     
   6396 FFFC840C FF FF FF FF FF FF FF FF     
   6397 FFFC8414 FF FF FF FF FF FF FF FF     
   6398 FFFC841C FF FF FF FF FF FF FF FF     
   6399 FFFC8424 FF FF FF FF FF FF FF FF     
   6400 FFFC842C FF FF FF FF FF FF FF FF     
   6401 FFFC8434 FF FF FF FF FF FF FF FF     
   6402 FFFC843C FF FF FF FF FF FF FF FF     
   6403 FFFC8444 FF FF FF FF FF FF FF FF     
   6404 FFFC844C FF FF FF FF FF FF FF FF     
   6405 FFFC8454 FF FF FF FF FF FF FF FF     
   6406 FFFC845C FF FF FF FF FF FF FF FF     
   6407 FFFC8464 FF FF FF FF FF FF FF FF     
   6408 FFFC846C FF FF FF FF FF FF FF FF     
   6409 FFFC8474 FF FF FF FF FF FF FF FF     
   6410 FFFC847C FF FF FF FF FF FF FF FF     
   6411 FFFC8484 FF FF FF FF FF FF FF FF     
   6412 FFFC848C FF FF FF FF FF FF FF FF     
   6413 FFFC8494 FF FF FF FF FF FF FF FF     
   6414 FFFC849C FF FF FF FF FF FF FF FF     
   6415 FFFC84A4 FF FF FF FF FF FF FF FF     
   6416 FFFC84AC FF FF FF FF FF FF FF FF     
   6417 FFFC84B4 FF FF FF FF FF FF FF FF     
   6418 FFFC84BC FF FF FF FF FF FF FF FF     
   6419 FFFC84C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 55
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6420 FFFC84CC FF FF FF FF FF FF FF FF     
   6421 FFFC84D4 FF FF FF FF FF FF FF FF     
   6422 FFFC84DC FF FF FF FF FF FF FF FF     
   6423 FFFC84E4 FF FF FF FF FF FF FF FF     
   6424 FFFC84EC FF FF FF FF FF FF FF FF     
   6425 FFFC84F4 FF FF FF FF FF FF FF FF     
   6426 FFFC84FC FF FF FF FF FF FF FF FF     
   6427 FFFC8504 FF FF FF FF FF FF FF FF     
   6428 FFFC850C FF FF FF FF FF FF FF FF     
   6429 FFFC8514 FF FF FF FF FF FF FF FF     
   6430 FFFC851C FF FF FF FF FF FF FF FF     
   6431 FFFC8524 FF FF FF FF FF FF FF FF     
   6432 FFFC852C FF FF FF FF FF FF FF FF     
   6433 FFFC8534 FF FF FF FF FF FF FF FF     
   6434 FFFC853C FF FF FF FF FF FF FF FF     
   6435 FFFC8544 FF FF FF FF FF FF FF FF     
   6436 FFFC854C FF FF FF FF FF FF FF FF     
   6437 FFFC8554 FF FF FF FF FF FF FF FF     
   6438 FFFC855C FF FF FF FF FF FF FF FF     
   6439 FFFC8564 FF FF FF FF FF FF FF FF     
   6440 FFFC856C FF FF FF FF FF FF FF FF     
   6441 FFFC8574 FF FF FF FF FF FF FF FF     
   6442 FFFC857C FF FF FF FF FF FF FF FF     
   6443 FFFC8584 FF FF FF FF FF FF FF FF     
   6444 FFFC858C FF FF FF FF FF FF FF FF     
   6445 FFFC8594 FF FF FF FF FF FF FF FF     
   6446 FFFC859C FF FF FF FF FF FF FF FF     
   6447 FFFC85A4 FF FF FF FF FF FF FF FF     
   6448 FFFC85AC FF FF FF FF FF FF FF FF     
   6449 FFFC85B4 FF FF FF FF FF FF FF FF     
   6450 FFFC85BC FF FF FF FF FF FF FF FF     
   6451 FFFC85C4 FF FF FF FF FF FF FF FF     
   6452 FFFC85CC FF FF FF FF FF FF FF FF     
   6453 FFFC85D4 FF FF FF FF FF FF FF FF     
   6454 FFFC85DC FF FF FF FF FF FF FF FF     
   6455 FFFC85E4 FF FF FF FF FF FF FF FF     
   6456 FFFC85EC FF FF FF FF FF FF FF FF     
   6457 FFFC85F4 FF FF FF FF FF FF FF FF     
   6458 FFFC85FC FF FF FF FF FF FF FF FF     
   6459 FFFC8604 FF FF FF FF FF FF FF FF     
   6460 FFFC860C FF FF FF FF FF FF FF FF     
   6461 FFFC8614 FF FF FF FF FF FF FF FF     
   6462 FFFC861C FF FF FF FF FF FF FF FF     
   6463 FFFC8624 FF FF FF FF FF FF FF FF     
   6464 FFFC862C FF FF FF FF FF FF FF FF     
   6465 FFFC8634 FF FF FF FF FF FF FF FF     
   6466 FFFC863C FF FF FF FF FF FF FF FF     
   6467 FFFC8644 FF FF FF FF FF FF FF FF     
   6468 FFFC864C FF FF FF FF FF FF FF FF     
   6469 FFFC8654 FF FF FF FF FF FF FF FF     
   6470 FFFC865C FF FF FF FF FF FF FF FF     
   6471 FFFC8664 FF FF FF FF FF FF FF FF     
   6472 FFFC866C FF FF FF FF FF FF FF FF     
   6473 FFFC8674 FF FF FF FF FF FF FF FF     
   6474 FFFC867C FF FF FF FF FF FF FF FF     
   6475 FFFC8684 FF FF FF FF FF FF FF FF     
   6476 FFFC868C FF FF FF FF FF FF FF FF     
   6477 FFFC8694 FF FF FF FF FF FF FF FF     
   6478 FFFC869C FF FF FF FF FF FF FF FF     
   6479 FFFC86A4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 56
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6480 FFFC86AC FF FF FF FF FF FF FF FF     
   6481 FFFC86B4 FF FF FF FF FF FF FF FF     
   6482 FFFC86BC FF FF FF FF FF FF FF FF     
   6483 FFFC86C4 FF FF FF FF FF FF FF FF     
   6484 FFFC86CC FF FF FF FF FF FF FF FF     
   6485 FFFC86D4 FF FF FF FF FF FF FF FF     
   6486 FFFC86DC FF FF FF FF FF FF FF FF     
   6487 FFFC86E4 FF FF FF FF FF FF FF FF     
   6488 FFFC86EC FF FF FF FF FF FF FF FF     
   6489 FFFC86F4 FF FF FF FF FF FF FF FF     
   6490 FFFC86FC FF FF FF FF FF FF FF FF     
   6491 FFFC8704 FF FF FF FF FF FF FF FF     
   6492 FFFC870C FF FF FF FF FF FF FF FF     
   6493 FFFC8714 FF FF FF FF FF FF FF FF     
   6494 FFFC871C FF FF FF FF FF FF FF FF     
   6495 FFFC8724 FF FF FF FF FF FF FF FF     
   6496 FFFC872C FF FF FF FF FF FF FF FF     
   6497 FFFC8734 FF FF FF FF FF FF FF FF     
   6498 FFFC873C FF FF FF FF FF FF FF FF     
   6499 FFFC8744 FF FF FF FF FF FF FF FF     
   6500 FFFC874C FF FF FF FF FF FF FF FF     
   6501 FFFC8754 FF FF FF FF FF FF FF FF     
   6502 FFFC875C FF FF FF FF FF FF FF FF     
   6503 FFFC8764 FF FF FF FF FF FF FF FF     
   6504 FFFC876C FF FF FF FF FF FF FF FF     
   6505 FFFC8774 FF FF FF FF FF FF FF FF     
   6506 FFFC877C FF FF FF FF FF FF FF FF     
   6507 FFFC8784 FF FF FF FF FF FF FF FF     
   6508 FFFC878C FF FF FF FF FF FF FF FF     
   6509 FFFC8794 FF FF FF FF FF FF FF FF     
   6510 FFFC879C FF FF FF FF FF FF FF FF     
   6511 FFFC87A4 FF FF FF FF FF FF FF FF     
   6512 FFFC87AC FF FF FF FF FF FF FF FF     
   6513 FFFC87B4 FF FF FF FF FF FF FF FF     
   6514 FFFC87BC FF FF FF FF FF FF FF FF     
   6515 FFFC87C4 FF FF FF FF FF FF FF FF     
   6516 FFFC87CC FF FF FF FF FF FF FF FF     
   6517 FFFC87D4 FF FF FF FF FF FF FF FF     
   6518 FFFC87DC FF FF FF FF FF FF FF FF     
   6519 FFFC87E4 FF FF FF FF FF FF FF FF     
   6520 FFFC87EC FF FF FF FF FF FF FF FF     
   6521 FFFC87F4 FF FF FF FF FF FF FF FF     
   6522 FFFC87FC FF FF FF FF FF FF FF FF     
   6523 FFFC8804 FF FF FF FF FF FF FF FF     
   6524 FFFC880C FF FF FF FF FF FF FF FF     
   6525 FFFC8814 FF FF FF FF FF FF FF FF     
   6526 FFFC881C FF FF FF FF FF FF FF FF     
   6527 FFFC8824 FF FF FF FF FF FF FF FF     
   6528 FFFC882C FF FF FF FF FF FF FF FF     
   6529 FFFC8834 FF FF FF FF FF FF FF FF     
   6530 FFFC883C FF FF FF FF FF FF FF FF     
   6531 FFFC8844 FF FF FF FF FF FF FF FF     
   6532 FFFC884C FF FF FF FF FF FF FF FF     
   6533 FFFC8854 FF FF FF FF FF FF FF FF     
   6534 FFFC885C FF FF FF FF FF FF FF FF     
   6535 FFFC8864 FF FF FF FF FF FF FF FF     
   6536 FFFC886C FF FF FF FF FF FF FF FF     
   6537 FFFC8874 FF FF FF FF FF FF FF FF     
   6538 FFFC887C FF FF FF FF FF FF FF FF     
   6539 FFFC8884 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 57
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6540 FFFC888C FF FF FF FF FF FF FF FF     
   6541 FFFC8894 FF FF FF FF FF FF FF FF     
   6542 FFFC889C FF FF FF FF FF FF FF FF     
   6543 FFFC88A4 FF FF FF FF FF FF FF FF     
   6544 FFFC88AC FF FF FF FF FF FF FF FF     
   6545 FFFC88B4 FF FF FF FF FF FF FF FF     
   6546 FFFC88BC FF FF FF FF FF FF FF FF     
   6547 FFFC88C4 FF FF FF FF FF FF FF FF     
   6548 FFFC88CC FF FF FF FF FF FF FF FF     
   6549 FFFC88D4 FF FF FF FF FF FF FF FF     
   6550 FFFC88DC FF FF FF FF FF FF FF FF     
   6551 FFFC88E4 FF FF FF FF FF FF FF FF     
   6552 FFFC88EC FF FF FF FF FF FF FF FF     
   6553 FFFC88F4 FF FF FF FF FF FF FF FF     
   6554 FFFC88FC FF FF FF FF FF FF FF FF     
   6555 FFFC8904 FF FF FF FF FF FF FF FF     
   6556 FFFC890C FF FF FF FF FF FF FF FF     
   6557 FFFC8914 FF FF FF FF FF FF FF FF     
   6558 FFFC891C FF FF FF FF FF FF FF FF     
   6559 FFFC8924 FF FF FF FF FF FF FF FF     
   6560 FFFC892C FF FF FF FF FF FF FF FF     
   6561 FFFC8934 FF FF FF FF FF FF FF FF     
   6562 FFFC893C FF FF FF FF FF FF FF FF     
   6563 FFFC8944 FF FF FF FF FF FF FF FF     
   6564 FFFC894C FF FF FF FF FF FF FF FF     
   6565 FFFC8954 FF FF FF FF FF FF FF FF     
   6566 FFFC895C FF FF FF FF FF FF FF FF     
   6567 FFFC8964 FF FF FF FF FF FF FF FF     
   6568 FFFC896C FF FF FF FF FF FF FF FF     
   6569 FFFC8974 FF FF FF FF FF FF FF FF     
   6570 FFFC897C FF FF FF FF FF FF FF FF     
   6571 FFFC8984 FF FF FF FF FF FF FF FF     
   6572 FFFC898C FF FF FF FF FF FF FF FF     
   6573 FFFC8994 FF FF FF FF FF FF FF FF     
   6574 FFFC899C FF FF FF FF FF FF FF FF     
   6575 FFFC89A4 FF FF FF FF FF FF FF FF     
   6576 FFFC89AC FF FF FF FF FF FF FF FF     
   6577 FFFC89B4 FF FF FF FF FF FF FF FF     
   6578 FFFC89BC FF FF FF FF FF FF FF FF     
   6579 FFFC89C4 FF FF FF FF FF FF FF FF     
   6580 FFFC89CC FF FF FF FF FF FF FF FF     
   6581 FFFC89D4 FF FF FF FF FF FF FF FF     
   6582 FFFC89DC FF FF FF FF FF FF FF FF     
   6583 FFFC89E4 FF FF FF FF FF FF FF FF     
   6584 FFFC89EC FF FF FF FF FF FF FF FF     
   6585 FFFC89F4 FF FF FF FF FF FF FF FF     
   6586 FFFC89FC FF FF FF FF FF FF FF FF     
   6587 FFFC8A04 FF FF FF FF FF FF FF FF     
   6588 FFFC8A0C FF FF FF FF FF FF FF FF     
   6589 FFFC8A14 FF FF FF FF FF FF FF FF     
   6590 FFFC8A1C FF FF FF FF FF FF FF FF     
   6591 FFFC8A24 FF FF FF FF FF FF FF FF     
   6592 FFFC8A2C FF FF FF FF FF FF FF FF     
   6593 FFFC8A34 FF FF FF FF FF FF FF FF     
   6594 FFFC8A3C FF FF FF FF FF FF FF FF     
   6595 FFFC8A44 FF FF FF FF FF FF FF FF     
   6596 FFFC8A4C FF FF FF FF FF FF FF FF     
   6597 FFFC8A54 FF FF FF FF FF FF FF FF     
   6598 FFFC8A5C FF FF FF FF FF FF FF FF     
   6599 FFFC8A64 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 58
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6600 FFFC8A6C FF FF FF FF FF FF FF FF     
   6601 FFFC8A74 FF FF FF FF FF FF FF FF     
   6602 FFFC8A7C FF FF FF FF FF FF FF FF     
   6603 FFFC8A84 FF FF FF FF FF FF FF FF     
   6604 FFFC8A8C FF FF FF FF FF FF FF FF     
   6605 FFFC8A94 FF FF FF FF FF FF FF FF     
   6606 FFFC8A9C FF FF FF FF FF FF FF FF     
   6607 FFFC8AA4 FF FF FF FF FF FF FF FF     
   6608 FFFC8AAC FF FF FF FF FF FF FF FF     
   6609 FFFC8AB4 FF FF FF FF FF FF FF FF     
   6610 FFFC8ABC FF FF FF FF FF FF FF FF     
   6611 FFFC8AC4 FF FF FF FF FF FF FF FF     
   6612 FFFC8ACC FF FF FF FF FF FF FF FF     
   6613 FFFC8AD4 FF FF FF FF FF FF FF FF     
   6614 FFFC8ADC FF FF FF FF FF FF FF FF     
   6615 FFFC8AE4 FF FF FF FF FF FF FF FF     
   6616 FFFC8AEC FF FF FF FF FF FF FF FF     
   6617 FFFC8AF4 FF FF FF FF FF FF FF FF     
   6618 FFFC8AFC FF FF FF FF FF FF FF FF     
   6619 FFFC8B04 FF FF FF FF FF FF FF FF     
   6620 FFFC8B0C FF FF FF FF FF FF FF FF     
   6621 FFFC8B14 FF FF FF FF FF FF FF FF     
   6622 FFFC8B1C FF FF FF FF FF FF FF FF     
   6623 FFFC8B24 FF FF FF FF FF FF FF FF     
   6624 FFFC8B2C FF FF FF FF FF FF FF FF     
   6625 FFFC8B34 FF FF FF FF FF FF FF FF     
   6626 FFFC8B3C FF FF FF FF FF FF FF FF     
   6627 FFFC8B44 FF FF FF FF FF FF FF FF     
   6628 FFFC8B4C FF FF FF FF FF FF FF FF     
   6629 FFFC8B54 FF FF FF FF FF FF FF FF     
   6630 FFFC8B5C FF FF FF FF FF FF FF FF     
   6631 FFFC8B64 FF FF FF FF FF FF FF FF     
   6632 FFFC8B6C FF FF FF FF FF FF FF FF     
   6633 FFFC8B74 FF FF FF FF FF FF FF FF     
   6634 FFFC8B7C FF FF FF FF FF FF FF FF     
   6635 FFFC8B84 FF FF FF FF FF FF FF FF     
   6636 FFFC8B8C FF FF FF FF FF FF FF FF     
   6637 FFFC8B94 FF FF FF FF FF FF FF FF     
   6638 FFFC8B9C FF FF FF FF FF FF FF FF     
   6639 FFFC8BA4 FF FF FF FF FF FF FF FF     
   6640 FFFC8BAC FF FF FF FF FF FF FF FF     
   6641 FFFC8BB4 FF FF FF FF FF FF FF FF     
   6642 FFFC8BBC FF FF FF FF FF FF FF FF     
   6643 FFFC8BC4 FF FF FF FF FF FF FF FF     
   6644 FFFC8BCC FF FF FF FF FF FF FF FF     
   6645 FFFC8BD4 FF FF FF FF FF FF FF FF     
   6646 FFFC8BDC FF FF FF FF FF FF FF FF     
   6647 FFFC8BE4 FF FF FF FF FF FF FF FF     
   6648 FFFC8BEC FF FF FF FF FF FF FF FF     
   6649 FFFC8BF4 FF FF FF FF FF FF FF FF     
   6650 FFFC8BFC FF FF FF FF FF FF FF FF     
   6651 FFFC8C04 FF FF FF FF FF FF FF FF     
   6652 FFFC8C0C FF FF FF FF FF FF FF FF     
   6653 FFFC8C14 FF FF FF FF FF FF FF FF     
   6654 FFFC8C1C FF FF FF FF FF FF FF FF     
   6655 FFFC8C24 FF FF FF FF FF FF FF FF     
   6656 FFFC8C2C FF FF FF FF FF FF FF FF     
   6657 FFFC8C34 FF FF FF FF FF FF FF FF     
   6658 FFFC8C3C FF FF FF FF FF FF FF FF     
   6659 FFFC8C44 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 59
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6660 FFFC8C4C FF FF FF FF FF FF FF FF     
   6661 FFFC8C54 FF FF FF FF FF FF FF FF     
   6662 FFFC8C5C FF FF FF FF FF FF FF FF     
   6663 FFFC8C64 FF FF FF FF FF FF FF FF     
   6664 FFFC8C6C FF FF FF FF FF FF FF FF     
   6665 FFFC8C74 FF FF FF FF FF FF FF FF     
   6666 FFFC8C7C FF FF FF FF FF FF FF FF     
   6667 FFFC8C84 FF FF FF FF FF FF FF FF     
   6668 FFFC8C8C FF FF FF FF FF FF FF FF     
   6669 FFFC8C94 FF FF FF FF FF FF FF FF     
   6670 FFFC8C9C FF FF FF FF FF FF FF FF     
   6671 FFFC8CA4 FF FF FF FF FF FF FF FF     
   6672 FFFC8CAC FF FF FF FF FF FF FF FF     
   6673 FFFC8CB4 FF FF FF FF FF FF FF FF     
   6674 FFFC8CBC FF FF FF FF FF FF FF FF     
   6675 FFFC8CC4 FF FF FF FF FF FF FF FF     
   6676 FFFC8CCC FF FF FF FF FF FF FF FF     
   6677 FFFC8CD4 FF FF FF FF FF FF FF FF     
   6678 FFFC8CDC FF FF FF FF FF FF FF FF     
   6679 FFFC8CE4 FF FF FF FF FF FF FF FF     
   6680 FFFC8CEC FF FF FF FF FF FF FF FF     
   6681 FFFC8CF4 FF FF FF FF FF FF FF FF     
   6682 FFFC8CFC FF FF FF FF FF FF FF FF     
   6683 FFFC8D04 FF FF FF FF FF FF FF FF     
   6684 FFFC8D0C FF FF FF FF FF FF FF FF     
   6685 FFFC8D14 FF FF FF FF FF FF FF FF     
   6686 FFFC8D1C FF FF FF FF FF FF FF FF     
   6687 FFFC8D24 FF FF FF FF FF FF FF FF     
   6688 FFFC8D2C FF FF FF FF FF FF FF FF     
   6689 FFFC8D34 FF FF FF FF FF FF FF FF     
   6690 FFFC8D3C FF FF FF FF FF FF FF FF     
   6691 FFFC8D44 FF FF FF FF FF FF FF FF     
   6692 FFFC8D4C FF FF FF FF FF FF FF FF     
   6693 FFFC8D54 FF FF FF FF FF FF FF FF     
   6694 FFFC8D5C FF FF FF FF FF FF FF FF     
   6695 FFFC8D64 FF FF FF FF FF FF FF FF     
   6696 FFFC8D6C FF FF FF FF FF FF FF FF     
   6697 FFFC8D74 FF FF FF FF FF FF FF FF     
   6698 FFFC8D7C FF FF FF FF FF FF FF FF     
   6699 FFFC8D84 FF FF FF FF FF FF FF FF     
   6700 FFFC8D8C FF FF FF FF FF FF FF FF     
   6701 FFFC8D94 FF FF FF FF FF FF FF FF     
   6702 FFFC8D9C FF FF FF FF FF FF FF FF     
   6703 FFFC8DA4 FF FF FF FF FF FF FF FF     
   6704 FFFC8DAC FF FF FF FF FF FF FF FF     
   6705 FFFC8DB4 FF FF FF FF FF FF FF FF     
   6706 FFFC8DBC FF FF FF FF FF FF FF FF     
   6707 FFFC8DC4 FF FF FF FF FF FF FF FF     
   6708 FFFC8DCC FF FF FF FF FF FF FF FF     
   6709 FFFC8DD4 FF FF FF FF FF FF FF FF     
   6710 FFFC8DDC FF FF FF FF FF FF FF FF     
   6711 FFFC8DE4 FF FF FF FF FF FF FF FF     
   6712 FFFC8DEC FF FF FF FF FF FF FF FF     
   6713 FFFC8DF4 FF FF FF FF FF FF FF FF     
   6714 FFFC8DFC FF FF FF FF FF FF FF FF     
   6715 FFFC8E04 FF FF FF FF FF FF FF FF     
   6716 FFFC8E0C FF FF FF FF FF FF FF FF     
   6717 FFFC8E14 FF FF FF FF FF FF FF FF     
   6718 FFFC8E1C FF FF FF FF FF FF FF FF     
   6719 FFFC8E24 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 60
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6720 FFFC8E2C FF FF FF FF FF FF FF FF     
   6721 FFFC8E34 FF FF FF FF FF FF FF FF     
   6722 FFFC8E3C FF FF FF FF FF FF FF FF     
   6723 FFFC8E44 FF FF FF FF FF FF FF FF     
   6724 FFFC8E4C FF FF FF FF FF FF FF FF     
   6725 FFFC8E54 FF FF FF FF FF FF FF FF     
   6726 FFFC8E5C FF FF FF FF FF FF FF FF     
   6727 FFFC8E64 FF FF FF FF FF FF FF FF     
   6728 FFFC8E6C FF FF FF FF FF FF FF FF     
   6729 FFFC8E74 FF FF FF FF FF FF FF FF     
   6730 FFFC8E7C FF FF FF FF FF FF FF FF     
   6731 FFFC8E84 FF FF FF FF FF FF FF FF     
   6732 FFFC8E8C FF FF FF FF FF FF FF FF     
   6733 FFFC8E94 FF FF FF FF FF FF FF FF     
   6734 FFFC8E9C FF FF FF FF FF FF FF FF     
   6735 FFFC8EA4 FF FF FF FF FF FF FF FF     
   6736 FFFC8EAC FF FF FF FF FF FF FF FF     
   6737 FFFC8EB4 FF FF FF FF FF FF FF FF     
   6738 FFFC8EBC FF FF FF FF FF FF FF FF     
   6739 FFFC8EC4 FF FF FF FF FF FF FF FF     
   6740 FFFC8ECC FF FF FF FF FF FF FF FF     
   6741 FFFC8ED4 FF FF FF FF FF FF FF FF     
   6742 FFFC8EDC FF FF FF FF FF FF FF FF     
   6743 FFFC8EE4 FF FF FF FF FF FF FF FF     
   6744 FFFC8EEC FF FF FF FF FF FF FF FF     
   6745 FFFC8EF4 FF FF FF FF FF FF FF FF     
   6746 FFFC8EFC FF FF FF FF FF FF FF FF     
   6747 FFFC8F04 FF FF FF FF FF FF FF FF     
   6748 FFFC8F0C FF FF FF FF FF FF FF FF     
   6749 FFFC8F14 FF FF FF FF FF FF FF FF     
   6750 FFFC8F1C FF FF FF FF FF FF FF FF     
   6751 FFFC8F24 FF FF FF FF FF FF FF FF     
   6752 FFFC8F2C FF FF FF FF FF FF FF FF     
   6753 FFFC8F34 FF FF FF FF FF FF FF FF     
   6754 FFFC8F3C FF FF FF FF FF FF FF FF     
   6755 FFFC8F44 FF FF FF FF FF FF FF FF     
   6756 FFFC8F4C FF FF FF FF FF FF FF FF     
   6757 FFFC8F54 FF FF FF FF FF FF FF FF     
   6758 FFFC8F5C FF FF FF FF FF FF FF FF     
   6759 FFFC8F64 FF FF FF FF FF FF FF FF     
   6760 FFFC8F6C FF FF FF FF FF FF FF FF     
   6761 FFFC8F74 FF FF FF FF FF FF FF FF     
   6762 FFFC8F7C FF FF FF FF FF FF FF FF     
   6763 FFFC8F84 FF FF FF FF FF FF FF FF     
   6764 FFFC8F8C FF FF FF FF FF FF FF FF     
   6765 FFFC8F94 FF FF FF FF FF FF FF FF     
   6766 FFFC8F9C FF FF FF FF FF FF FF FF     
   6767 FFFC8FA4 FF FF FF FF FF FF FF FF     
   6768 FFFC8FAC FF FF FF FF FF FF FF FF     
   6769 FFFC8FB4 FF FF FF FF FF FF FF FF     
   6770 FFFC8FBC FF FF FF FF FF FF FF FF     
   6771 FFFC8FC4 FF FF FF FF FF FF FF FF     
   6772 FFFC8FCC FF FF FF FF FF FF FF FF     
   6773 FFFC8FD4 FF FF FF FF FF FF FF FF     
   6774 FFFC8FDC FF FF FF FF FF FF FF FF     
   6775 FFFC8FE4 FF FF FF FF FF FF FF FF     
   6776 FFFC8FEC FF FF FF FF FF FF FF FF     
   6777 FFFC8FF4 FF FF FF FF FF FF FF FF     
   6778 FFFC8FFC FF FF FF FF FF FF FF FF     
   6779 FFFC9004 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 61
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6780 FFFC900C FF FF FF FF FF FF FF FF     
   6781 FFFC9014 FF FF FF FF FF FF FF FF     
   6782 FFFC901C FF FF FF FF FF FF FF FF     
   6783 FFFC9024 FF FF FF FF FF FF FF FF     
   6784 FFFC902C FF FF FF FF FF FF FF FF     
   6785 FFFC9034 FF FF FF FF FF FF FF FF     
   6786 FFFC903C FF FF FF FF FF FF FF FF     
   6787 FFFC9044 FF FF FF FF FF FF FF FF     
   6788 FFFC904C FF FF FF FF FF FF FF FF     
   6789 FFFC9054 FF FF FF FF FF FF FF FF     
   6790 FFFC905C FF FF FF FF FF FF FF FF     
   6791 FFFC9064 FF FF FF FF FF FF FF FF     
   6792 FFFC906C FF FF FF FF FF FF FF FF     
   6793 FFFC9074 FF FF FF FF FF FF FF FF     
   6794 FFFC907C FF FF FF FF FF FF FF FF     
   6795 FFFC9084 FF FF FF FF FF FF FF FF     
   6796 FFFC908C FF FF FF FF FF FF FF FF     
   6797 FFFC9094 FF FF FF FF FF FF FF FF     
   6798 FFFC909C FF FF FF FF FF FF FF FF     
   6799 FFFC90A4 FF FF FF FF FF FF FF FF     
   6800 FFFC90AC FF FF FF FF FF FF FF FF     
   6801 FFFC90B4 FF FF FF FF FF FF FF FF     
   6802 FFFC90BC FF FF FF FF FF FF FF FF     
   6803 FFFC90C4 FF FF FF FF FF FF FF FF     
   6804 FFFC90CC FF FF FF FF FF FF FF FF     
   6805 FFFC90D4 FF FF FF FF FF FF FF FF     
   6806 FFFC90DC FF FF FF FF FF FF FF FF     
   6807 FFFC90E4 FF FF FF FF FF FF FF FF     
   6808 FFFC90EC FF FF FF FF FF FF FF FF     
   6809 FFFC90F4 FF FF FF FF FF FF FF FF     
   6810 FFFC90FC FF FF FF FF FF FF FF FF     
   6811 FFFC9104 FF FF FF FF FF FF FF FF     
   6812 FFFC910C FF FF FF FF FF FF FF FF     
   6813 FFFC9114 FF FF FF FF FF FF FF FF     
   6814 FFFC911C FF FF FF FF FF FF FF FF     
   6815 FFFC9124 FF FF FF FF FF FF FF FF     
   6816 FFFC912C FF FF FF FF FF FF FF FF     
   6817 FFFC9134 FF FF FF FF FF FF FF FF     
   6818 FFFC913C FF FF FF FF FF FF FF FF     
   6819 FFFC9144 FF FF FF FF FF FF FF FF     
   6820 FFFC914C FF FF FF FF FF FF FF FF     
   6821 FFFC9154 FF FF FF FF FF FF FF FF     
   6822 FFFC915C FF FF FF FF FF FF FF FF     
   6823 FFFC9164 FF FF FF FF FF FF FF FF     
   6824 FFFC916C FF FF FF FF FF FF FF FF     
   6825 FFFC9174 FF FF FF FF FF FF FF FF     
   6826 FFFC917C FF FF FF FF FF FF FF FF     
   6827 FFFC9184 FF FF FF FF FF FF FF FF     
   6828 FFFC918C FF FF FF FF FF FF FF FF     
   6829 FFFC9194 FF FF FF FF FF FF FF FF     
   6830 FFFC919C FF FF FF FF FF FF FF FF     
   6831 FFFC91A4 FF FF FF FF FF FF FF FF     
   6832 FFFC91AC FF FF FF FF FF FF FF FF     
   6833 FFFC91B4 FF FF FF FF FF FF FF FF     
   6834 FFFC91BC FF FF FF FF FF FF FF FF     
   6835 FFFC91C4 FF FF FF FF FF FF FF FF     
   6836 FFFC91CC FF FF FF FF FF FF FF FF     
   6837 FFFC91D4 FF FF FF FF FF FF FF FF     
   6838 FFFC91DC FF FF FF FF FF FF FF FF     
   6839 FFFC91E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 62
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6840 FFFC91EC FF FF FF FF FF FF FF FF     
   6841 FFFC91F4 FF FF FF FF FF FF FF FF     
   6842 FFFC91FC FF FF FF FF FF FF FF FF     
   6843 FFFC9204 FF FF FF FF FF FF FF FF     
   6844 FFFC920C FF FF FF FF FF FF FF FF     
   6845 FFFC9214 FF FF FF FF FF FF FF FF     
   6846 FFFC921C FF FF FF FF FF FF FF FF     
   6847 FFFC9224 FF FF FF FF FF FF FF FF     
   6848 FFFC922C FF FF FF FF FF FF FF FF     
   6849 FFFC9234 FF FF FF FF FF FF FF FF     
   6850 FFFC923C FF FF FF FF FF FF FF FF     
   6851 FFFC9244 FF FF FF FF FF FF FF FF     
   6852 FFFC924C FF FF FF FF FF FF FF FF     
   6853 FFFC9254 FF FF FF FF FF FF FF FF     
   6854 FFFC925C FF FF FF FF FF FF FF FF     
   6855 FFFC9264 FF FF FF FF FF FF FF FF     
   6856 FFFC926C FF FF FF FF FF FF FF FF     
   6857 FFFC9274 FF FF FF FF FF FF FF FF     
   6858 FFFC927C FF FF FF FF FF FF FF FF     
   6859 FFFC9284 FF FF FF FF FF FF FF FF     
   6860 FFFC928C FF FF FF FF FF FF FF FF     
   6861 FFFC9294 FF FF FF FF FF FF FF FF     
   6862 FFFC929C FF FF FF FF FF FF FF FF     
   6863 FFFC92A4 FF FF FF FF FF FF FF FF     
   6864 FFFC92AC FF FF FF FF FF FF FF FF     
   6865 FFFC92B4 FF FF FF FF FF FF FF FF     
   6866 FFFC92BC FF FF FF FF FF FF FF FF     
   6867 FFFC92C4 FF FF FF FF FF FF FF FF     
   6868 FFFC92CC FF FF FF FF FF FF FF FF     
   6869 FFFC92D4 FF FF FF FF FF FF FF FF     
   6870 FFFC92DC FF FF FF FF FF FF FF FF     
   6871 FFFC92E4 FF FF FF FF FF FF FF FF     
   6872 FFFC92EC FF FF FF FF FF FF FF FF     
   6873 FFFC92F4 FF FF FF FF FF FF FF FF     
   6874 FFFC92FC FF FF FF FF FF FF FF FF     
   6875 FFFC9304 FF FF FF FF FF FF FF FF     
   6876 FFFC930C FF FF FF FF FF FF FF FF     
   6877 FFFC9314 FF FF FF FF FF FF FF FF     
   6878 FFFC931C FF FF FF FF FF FF FF FF     
   6879 FFFC9324 FF FF FF FF FF FF FF FF     
   6880 FFFC932C FF FF FF FF FF FF FF FF     
   6881 FFFC9334 FF FF FF FF FF FF FF FF     
   6882 FFFC933C FF FF FF FF FF FF FF FF     
   6883 FFFC9344 FF FF FF FF FF FF FF FF     
   6884 FFFC934C FF FF FF FF FF FF FF FF     
   6885 FFFC9354 FF FF FF FF FF FF FF FF     
   6886 FFFC935C FF FF FF FF FF FF FF FF     
   6887 FFFC9364 FF FF FF FF FF FF FF FF     
   6888 FFFC936C FF FF FF FF FF FF FF FF     
   6889 FFFC9374 FF FF FF FF FF FF FF FF     
   6890 FFFC937C FF FF FF FF FF FF FF FF     
   6891 FFFC9384 FF FF FF FF FF FF FF FF     
   6892 FFFC938C FF FF FF FF FF FF FF FF     
   6893 FFFC9394 FF FF FF FF FF FF FF FF     
   6894 FFFC939C FF FF FF FF FF FF FF FF     
   6895 FFFC93A4 FF FF FF FF FF FF FF FF     
   6896 FFFC93AC FF FF FF FF FF FF FF FF     
   6897 FFFC93B4 FF FF FF FF FF FF FF FF     
   6898 FFFC93BC FF FF FF FF FF FF FF FF     
   6899 FFFC93C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 63
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6900 FFFC93CC FF FF FF FF FF FF FF FF     
   6901 FFFC93D4 FF FF FF FF FF FF FF FF     
   6902 FFFC93DC FF FF FF FF FF FF FF FF     
   6903 FFFC93E4 FF FF FF FF FF FF FF FF     
   6904 FFFC93EC FF FF FF FF FF FF FF FF     
   6905 FFFC93F4 FF FF FF FF FF FF FF FF     
   6906 FFFC93FC FF FF FF FF FF FF FF FF     
   6907 FFFC9404 FF FF FF FF FF FF FF FF     
   6908 FFFC940C FF FF FF FF FF FF FF FF     
   6909 FFFC9414 FF FF FF FF FF FF FF FF     
   6910 FFFC941C FF FF FF FF FF FF FF FF     
   6911 FFFC9424 FF FF FF FF FF FF FF FF     
   6912 FFFC942C FF FF FF FF FF FF FF FF     
   6913 FFFC9434 FF FF FF FF FF FF FF FF     
   6914 FFFC943C FF FF FF FF FF FF FF FF     
   6915 FFFC9444 FF FF FF FF FF FF FF FF     
   6916 FFFC944C FF FF FF FF FF FF FF FF     
   6917 FFFC9454 FF FF FF FF FF FF FF FF     
   6918 FFFC945C FF FF FF FF FF FF FF FF     
   6919 FFFC9464 FF FF FF FF FF FF FF FF     
   6920 FFFC946C FF FF FF FF FF FF FF FF     
   6921 FFFC9474 FF FF FF FF FF FF FF FF     
   6922 FFFC947C FF FF FF FF FF FF FF FF     
   6923 FFFC9484 FF FF FF FF FF FF FF FF     
   6924 FFFC948C FF FF FF FF FF FF FF FF     
   6925 FFFC9494 FF FF FF FF FF FF FF FF     
   6926 FFFC949C FF FF FF FF FF FF FF FF     
   6927 FFFC94A4 FF FF FF FF FF FF FF FF     
   6928 FFFC94AC FF FF FF FF FF FF FF FF     
   6929 FFFC94B4 FF FF FF FF FF FF FF FF     
   6930 FFFC94BC FF FF FF FF FF FF FF FF     
   6931 FFFC94C4 FF FF FF FF FF FF FF FF     
   6932 FFFC94CC FF FF FF FF FF FF FF FF     
   6933 FFFC94D4 FF FF FF FF FF FF FF FF     
   6934 FFFC94DC FF FF FF FF FF FF FF FF     
   6935 FFFC94E4 FF FF FF FF FF FF FF FF     
   6936 FFFC94EC FF FF FF FF FF FF FF FF     
   6937 FFFC94F4 FF FF FF FF FF FF FF FF     
   6938 FFFC94FC FF FF FF FF FF FF FF FF     
   6939 FFFC9504 FF FF FF FF FF FF FF FF     
   6940 FFFC950C FF FF FF FF FF FF FF FF     
   6941 FFFC9514 FF FF FF FF FF FF FF FF     
   6942 FFFC951C FF FF FF FF FF FF FF FF     
   6943 FFFC9524 FF FF FF FF FF FF FF FF     
   6944 FFFC952C FF FF FF FF FF FF FF FF     
   6945 FFFC9534 FF FF FF FF FF FF FF FF     
   6946 FFFC953C FF FF FF FF FF FF FF FF     
   6947 FFFC9544 FF FF FF FF FF FF FF FF     
   6948 FFFC954C FF FF FF FF FF FF FF FF     
   6949 FFFC9554 FF FF FF FF FF FF FF FF     
   6950 FFFC955C FF FF FF FF FF FF FF FF     
   6951 FFFC9564 FF FF FF FF FF FF FF FF     
   6952 FFFC956C FF FF FF FF FF FF FF FF     
   6953 FFFC9574 FF FF FF FF FF FF FF FF     
   6954 FFFC957C FF FF FF FF FF FF FF FF     
   6955 FFFC9584 FF FF FF FF FF FF FF FF     
   6956 FFFC958C FF FF FF FF FF FF FF FF     
   6957 FFFC9594 FF FF FF FF FF FF FF FF     
   6958 FFFC959C FF FF FF FF FF FF FF FF     
   6959 FFFC95A4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 64
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6960 FFFC95AC FF FF FF FF FF FF FF FF     
   6961 FFFC95B4 FF FF FF FF FF FF FF FF     
   6962 FFFC95BC FF FF FF FF FF FF FF FF     
   6963 FFFC95C4 FF FF FF FF FF FF FF FF     
   6964 FFFC95CC FF FF FF FF FF FF FF FF     
   6965 FFFC95D4 FF FF FF FF FF FF FF FF     
   6966 FFFC95DC FF FF FF FF FF FF FF FF     
   6967 FFFC95E4 FF FF FF FF FF FF FF FF     
   6968 FFFC95EC FF FF FF FF FF FF FF FF     
   6969 FFFC95F4 FF FF FF FF FF FF FF FF     
   6970 FFFC95FC FF FF FF FF FF FF FF FF     
   6971 FFFC9604 FF FF FF FF FF FF FF FF     
   6972 FFFC960C FF FF FF FF FF FF FF FF     
   6973 FFFC9614 FF FF FF FF FF FF FF FF     
   6974 FFFC961C FF FF FF FF FF FF FF FF     
   6975 FFFC9624 FF FF FF FF FF FF FF FF     
   6976 FFFC962C FF FF FF FF FF FF FF FF     
   6977 FFFC9634 FF FF FF FF FF FF FF FF     
   6978 FFFC963C FF FF FF FF FF FF FF FF     
   6979 FFFC9644 FF FF FF FF FF FF FF FF     
   6980 FFFC964C FF FF FF FF FF FF FF FF     
   6981 FFFC9654 FF FF FF FF FF FF FF FF     
   6982 FFFC965C FF FF FF FF FF FF FF FF     
   6983 FFFC9664 FF FF FF FF FF FF FF FF     
   6984 FFFC966C FF FF FF FF FF FF FF FF     
   6985 FFFC9674 FF FF FF FF FF FF FF FF     
   6986 FFFC967C FF FF FF FF FF FF FF FF     
   6987 FFFC9684 FF FF FF FF FF FF FF FF     
   6988 FFFC968C FF FF FF FF FF FF FF FF     
   6989 FFFC9694 FF FF FF FF FF FF FF FF     
   6990 FFFC969C FF FF FF FF FF FF FF FF     
   6991 FFFC96A4 FF FF FF FF FF FF FF FF     
   6992 FFFC96AC FF FF FF FF FF FF FF FF     
   6993 FFFC96B4 FF FF FF FF FF FF FF FF     
   6994 FFFC96BC FF FF FF FF FF FF FF FF     
   6995 FFFC96C4 FF FF FF FF FF FF FF FF     
   6996 FFFC96CC FF FF FF FF FF FF FF FF     
   6997 FFFC96D4 FF FF FF FF FF FF FF FF     
   6998 FFFC96DC FF FF FF FF FF FF FF FF     
   6999 FFFC96E4 FF FF FF FF FF FF FF FF     
   7000 FFFC96EC FF FF FF FF FF FF FF FF     
   7001 FFFC96F4 FF FF FF FF FF FF FF FF     
   7002 FFFC96FC FF FF FF FF FF FF FF FF     
   7003 FFFC9704 FF FF FF FF FF FF FF FF     
   7004 FFFC970C FF FF FF FF FF FF FF FF     
   7005 FFFC9714 FF FF FF FF FF FF FF FF     
   7006 FFFC971C FF FF FF FF FF FF FF FF     
   7007 FFFC9724 FF FF FF FF FF FF FF FF     
   7008 FFFC972C FF FF FF FF FF FF FF FF     
   7009 FFFC9734 FF FF FF FF FF FF FF FF     
   7010 FFFC973C FF FF FF FF FF FF FF FF     
   7011 FFFC9744 FF FF FF FF FF FF FF FF     
   7012 FFFC974C FF FF FF FF FF FF FF FF     
   7013 FFFC9754 FF FF FF FF FF FF FF FF     
   7014 FFFC975C FF FF FF FF FF FF FF FF     
   7015 FFFC9764 FF FF FF FF FF FF FF FF     
   7016 FFFC976C FF FF FF FF FF FF FF FF     
   7017 FFFC9774 FF FF FF FF FF FF FF FF     
   7018 FFFC977C FF FF FF FF FF FF FF FF     
   7019 FFFC9784 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 65
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7020 FFFC978C FF FF FF FF FF FF FF FF     
   7021 FFFC9794 FF FF FF FF FF FF FF FF     
   7022 FFFC979C FF FF FF FF FF FF FF FF     
   7023 FFFC97A4 FF FF FF FF FF FF FF FF     
   7024 FFFC97AC FF FF FF FF FF FF FF FF     
   7025 FFFC97B4 FF FF FF FF FF FF FF FF     
   7026 FFFC97BC FF FF FF FF FF FF FF FF     
   7027 FFFC97C4 FF FF FF FF FF FF FF FF     
   7028 FFFC97CC FF FF FF FF FF FF FF FF     
   7029 FFFC97D4 FF FF FF FF FF FF FF FF     
   7030 FFFC97DC FF FF FF FF FF FF FF FF     
   7031 FFFC97E4 FF FF FF FF FF FF FF FF     
   7032 FFFC97EC FF FF FF FF FF FF FF FF     
   7033 FFFC97F4 FF FF FF FF FF FF FF FF     
   7034 FFFC97FC FF FF FF FF FF FF FF FF     
   7035 FFFC9804 FF FF FF FF FF FF FF FF     
   7036 FFFC980C FF FF FF FF FF FF FF FF     
   7037 FFFC9814 FF FF FF FF FF FF FF FF     
   7038 FFFC981C FF FF FF FF FF FF FF FF     
   7039 FFFC9824 FF FF FF FF FF FF FF FF     
   7040 FFFC982C FF FF FF FF FF FF FF FF     
   7041 FFFC9834 FF FF FF FF FF FF FF FF     
   7042 FFFC983C FF FF FF FF FF FF FF FF     
   7043 FFFC9844 FF FF FF FF FF FF FF FF     
   7044 FFFC984C FF FF FF FF FF FF FF FF     
   7045 FFFC9854 FF FF FF FF FF FF FF FF     
   7046 FFFC985C FF FF FF FF FF FF FF FF     
   7047 FFFC9864 FF FF FF FF FF FF FF FF     
   7048 FFFC986C FF FF FF FF FF FF FF FF     
   7049 FFFC9874 FF FF FF FF FF FF FF FF     
   7050 FFFC987C FF FF FF FF FF FF FF FF     
   7051 FFFC9884 FF FF FF FF FF FF FF FF     
   7052 FFFC988C FF FF FF FF FF FF FF FF     
   7053 FFFC9894 FF FF FF FF FF FF FF FF     
   7054 FFFC989C FF FF FF FF FF FF FF FF     
   7055 FFFC98A4 FF FF FF FF FF FF FF FF     
   7056 FFFC98AC FF FF FF FF FF FF FF FF     
   7057 FFFC98B4 FF FF FF FF FF FF FF FF     
   7058 FFFC98BC FF FF FF FF FF FF FF FF     
   7059 FFFC98C4 FF FF FF FF FF FF FF FF     
   7060 FFFC98CC FF FF FF FF FF FF FF FF     
   7061 FFFC98D4 FF FF FF FF FF FF FF FF     
   7062 FFFC98DC FF FF FF FF FF FF FF FF     
   7063 FFFC98E4 FF FF FF FF FF FF FF FF     
   7064 FFFC98EC FF FF FF FF FF FF FF FF     
   7065 FFFC98F4 FF FF FF FF FF FF FF FF     
   7066 FFFC98FC FF FF FF FF FF FF FF FF     
   7067 FFFC9904 FF FF FF FF FF FF FF FF     
   7068 FFFC990C FF FF FF FF FF FF FF FF     
   7069 FFFC9914 FF FF FF FF FF FF FF FF     
   7070 FFFC991C FF FF FF FF FF FF FF FF     
   7071 FFFC9924 FF FF FF FF FF FF FF FF     
   7072 FFFC992C FF FF FF FF FF FF FF FF     
   7073 FFFC9934 FF FF FF FF FF FF FF FF     
   7074 FFFC993C FF FF FF FF FF FF FF FF     
   7075 FFFC9944 FF FF FF FF FF FF FF FF     
   7076 FFFC994C FF FF FF FF FF FF FF FF     
   7077 FFFC9954 FF FF FF FF FF FF FF FF     
   7078 FFFC995C FF FF FF FF FF FF FF FF     
   7079 FFFC9964 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 66
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7080 FFFC996C FF FF FF FF FF FF FF FF     
   7081 FFFC9974 FF FF FF FF FF FF FF FF     
   7082 FFFC997C FF FF FF FF FF FF FF FF     
   7083 FFFC9984 FF FF FF FF FF FF FF FF     
   7084 FFFC998C FF FF FF FF FF FF FF FF     
   7085 FFFC9994 FF FF FF FF FF FF FF FF     
   7086 FFFC999C FF FF FF FF FF FF FF FF     
   7087 FFFC99A4 FF FF FF FF FF FF FF FF     
   7088 FFFC99AC FF FF FF FF FF FF FF FF     
   7089 FFFC99B4 FF FF FF FF FF FF FF FF     
   7090 FFFC99BC FF FF FF FF FF FF FF FF     
   7091 FFFC99C4 FF FF FF FF FF FF FF FF     
   7092 FFFC99CC FF FF FF FF FF FF FF FF     
   7093 FFFC99D4 FF FF FF FF FF FF FF FF     
   7094 FFFC99DC FF FF FF FF FF FF FF FF     
   7095 FFFC99E4 FF FF FF FF FF FF FF FF     
   7096 FFFC99EC FF FF FF FF FF FF FF FF     
   7097 FFFC99F4 FF FF FF FF FF FF FF FF     
   7098 FFFC99FC FF FF FF FF FF FF FF FF     
   7099 FFFC9A04 FF FF FF FF FF FF FF FF     
   7100 FFFC9A0C FF FF FF FF FF FF FF FF     
   7101 FFFC9A14 FF FF FF FF FF FF FF FF     
   7102 FFFC9A1C FF FF FF FF FF FF FF FF     
   7103 FFFC9A24 FF FF FF FF FF FF FF FF     
   7104 FFFC9A2C FF FF FF FF FF FF FF FF     
   7105 FFFC9A34 FF FF FF FF FF FF FF FF     
   7106 FFFC9A3C FF FF FF FF FF FF FF FF     
   7107 FFFC9A44 FF FF FF FF FF FF FF FF     
   7108 FFFC9A4C FF FF FF FF FF FF FF FF     
   7109 FFFC9A54 FF FF FF FF FF FF FF FF     
   7110 FFFC9A5C FF FF FF FF FF FF FF FF     
   7111 FFFC9A64 FF FF FF FF FF FF FF FF     
   7112 FFFC9A6C FF FF FF FF FF FF FF FF     
   7113 FFFC9A74 FF FF FF FF FF FF FF FF     
   7114 FFFC9A7C FF FF FF FF FF FF FF FF     
   7115 FFFC9A84 FF FF FF FF FF FF FF FF     
   7116 FFFC9A8C FF FF FF FF FF FF FF FF     
   7117 FFFC9A94 FF FF FF FF FF FF FF FF     
   7118 FFFC9A9C FF FF FF FF FF FF FF FF     
   7119 FFFC9AA4 FF FF FF FF FF FF FF FF     
   7120 FFFC9AAC FF FF FF FF FF FF FF FF     
   7121 FFFC9AB4 FF FF FF FF FF FF FF FF     
   7122 FFFC9ABC FF FF FF FF FF FF FF FF     
   7123 FFFC9AC4 FF FF FF FF FF FF FF FF     
   7124 FFFC9ACC FF FF FF FF FF FF FF FF     
   7125 FFFC9AD4 FF FF FF FF FF FF FF FF     
   7126 FFFC9ADC FF FF FF FF FF FF FF FF     
   7127 FFFC9AE4 FF FF FF FF FF FF FF FF     
   7128 FFFC9AEC FF FF FF FF FF FF FF FF     
   7129 FFFC9AF4 FF FF FF FF FF FF FF FF     
   7130 FFFC9AFC FF FF FF FF FF FF FF FF     
   7131 FFFC9B04 FF FF FF FF FF FF FF FF     
   7132 FFFC9B0C FF FF FF FF FF FF FF FF     
   7133 FFFC9B14 FF FF FF FF FF FF FF FF     
   7134 FFFC9B1C FF FF FF FF FF FF FF FF     
   7135 FFFC9B24 FF FF FF FF FF FF FF FF     
   7136 FFFC9B2C FF FF FF FF FF FF FF FF     
   7137 FFFC9B34 FF FF FF FF FF FF FF FF     
   7138 FFFC9B3C FF FF FF FF FF FF FF FF     
   7139 FFFC9B44 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 67
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7140 FFFC9B4C FF FF FF FF FF FF FF FF     
   7141 FFFC9B54 FF FF FF FF FF FF FF FF     
   7142 FFFC9B5C FF FF FF FF FF FF FF FF     
   7143 FFFC9B64 FF FF FF FF FF FF FF FF     
   7144 FFFC9B6C FF FF FF FF FF FF FF FF     
   7145 FFFC9B74 FF FF FF FF FF FF FF FF     
   7146 FFFC9B7C FF FF FF FF FF FF FF FF     
   7147 FFFC9B84 FF FF FF FF FF FF FF FF     
   7148 FFFC9B8C FF FF FF FF FF FF FF FF     
   7149 FFFC9B94 FF FF FF FF FF FF FF FF     
   7150 FFFC9B9C FF FF FF FF FF FF FF FF     
   7151 FFFC9BA4 FF FF FF FF FF FF FF FF     
   7152 FFFC9BAC FF FF FF FF FF FF FF FF     
   7153 FFFC9BB4 FF FF FF FF FF FF FF FF     
   7154 FFFC9BBC FF FF FF FF FF FF FF FF     
   7155 FFFC9BC4 FF FF FF FF FF FF FF FF     
   7156 FFFC9BCC FF FF FF FF FF FF FF FF     
   7157 FFFC9BD4 FF FF FF FF FF FF FF FF     
   7158 FFFC9BDC FF FF FF FF FF FF FF FF     
   7159 FFFC9BE4 FF FF FF FF FF FF FF FF     
   7160 FFFC9BEC FF FF FF FF FF FF FF FF     
   7161 FFFC9BF4 FF FF FF FF FF FF FF FF     
   7162 FFFC9BFC FF FF FF FF FF FF FF FF     
   7163 FFFC9C04 FF FF FF FF FF FF FF FF     
   7164 FFFC9C0C FF FF FF FF FF FF FF FF     
   7165 FFFC9C14 FF FF FF FF FF FF FF FF     
   7166 FFFC9C1C FF FF FF FF FF FF FF FF     
   7167 FFFC9C24 FF FF FF FF FF FF FF FF     
   7168 FFFC9C2C FF FF FF FF FF FF FF FF     
   7169 FFFC9C34 FF FF FF FF FF FF FF FF     
   7170 FFFC9C3C FF FF FF FF FF FF FF FF     
   7171 FFFC9C44 FF FF FF FF FF FF FF FF     
   7172 FFFC9C4C FF FF FF FF FF FF FF FF     
   7173 FFFC9C54 FF FF FF FF FF FF FF FF     
   7174 FFFC9C5C FF FF FF FF FF FF FF FF     
   7175 FFFC9C64 FF FF FF FF FF FF FF FF     
   7176 FFFC9C6C FF FF FF FF FF FF FF FF     
   7177 FFFC9C74 FF FF FF FF FF FF FF FF     
   7178 FFFC9C7C FF FF FF FF FF FF FF FF     
   7179 FFFC9C84 FF FF FF FF FF FF FF FF     
   7180 FFFC9C8C FF FF FF FF FF FF FF FF     
   7181 FFFC9C94 FF FF FF FF FF FF FF FF     
   7182 FFFC9C9C FF FF FF FF FF FF FF FF     
   7183 FFFC9CA4 FF FF FF FF FF FF FF FF     
   7184 FFFC9CAC FF FF FF FF FF FF FF FF     
   7185 FFFC9CB4 FF FF FF FF FF FF FF FF     
   7186 FFFC9CBC FF FF FF FF FF FF FF FF     
   7187 FFFC9CC4 FF FF FF FF FF FF FF FF     
   7188 FFFC9CCC FF FF FF FF FF FF FF FF     
   7189 FFFC9CD4 FF FF FF FF FF FF FF FF     
   7190 FFFC9CDC FF FF FF FF FF FF FF FF     
   7191 FFFC9CE4 FF FF FF FF FF FF FF FF     
   7192 FFFC9CEC FF FF FF FF FF FF FF FF     
   7193 FFFC9CF4 FF FF FF FF FF FF FF FF     
   7194 FFFC9CFC FF FF FF FF FF FF FF FF     
   7195 FFFC9D04 FF FF FF FF FF FF FF FF     
   7196 FFFC9D0C FF FF FF FF FF FF FF FF     
   7197 FFFC9D14 FF FF FF FF FF FF FF FF     
   7198 FFFC9D1C FF FF FF FF FF FF FF FF     
   7199 FFFC9D24 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 68
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7200 FFFC9D2C FF FF FF FF FF FF FF FF     
   7201 FFFC9D34 FF FF FF FF FF FF FF FF     
   7202 FFFC9D3C FF FF FF FF FF FF FF FF     
   7203 FFFC9D44 FF FF FF FF FF FF FF FF     
   7204 FFFC9D4C FF FF FF FF FF FF FF FF     
   7205 FFFC9D54 FF FF FF FF FF FF FF FF     
   7206 FFFC9D5C FF FF FF FF FF FF FF FF     
   7207 FFFC9D64 FF FF FF FF FF FF FF FF     
   7208 FFFC9D6C FF FF FF FF FF FF FF FF     
   7209 FFFC9D74 FF FF FF FF FF FF FF FF     
   7210 FFFC9D7C FF FF FF FF FF FF FF FF     
   7211 FFFC9D84 FF FF FF FF FF FF FF FF     
   7212 FFFC9D8C FF FF FF FF FF FF FF FF     
   7213 FFFC9D94 FF FF FF FF FF FF FF FF     
   7214 FFFC9D9C FF FF FF FF FF FF FF FF     
   7215 FFFC9DA4 FF FF FF FF FF FF FF FF     
   7216 FFFC9DAC FF FF FF FF FF FF FF FF     
   7217 FFFC9DB4 FF FF FF FF FF FF FF FF     
   7218 FFFC9DBC FF FF FF FF FF FF FF FF     
   7219 FFFC9DC4 FF FF FF FF FF FF FF FF     
   7220 FFFC9DCC FF FF FF FF FF FF FF FF     
   7221 FFFC9DD4 FF FF FF FF FF FF FF FF     
   7222 FFFC9DDC FF FF FF FF FF FF FF FF     
   7223 FFFC9DE4 FF FF FF FF FF FF FF FF     
   7224 FFFC9DEC FF FF FF FF FF FF FF FF     
   7225 FFFC9DF4 FF FF FF FF FF FF FF FF     
   7226 FFFC9DFC FF FF FF FF FF FF FF FF     
   7227 FFFC9E04 FF FF FF FF FF FF FF FF     
   7228 FFFC9E0C FF FF FF FF FF FF FF FF     
   7229 FFFC9E14 FF FF FF FF FF FF FF FF     
   7230 FFFC9E1C FF FF FF FF FF FF FF FF     
   7231 FFFC9E24 FF FF FF FF FF FF FF FF     
   7232 FFFC9E2C FF FF FF FF FF FF FF FF     
   7233 FFFC9E34 FF FF FF FF FF FF FF FF     
   7234 FFFC9E3C FF FF FF FF FF FF FF FF     
   7235 FFFC9E44 FF FF FF FF FF FF FF FF     
   7236 FFFC9E4C FF FF FF FF FF FF FF FF     
   7237 FFFC9E54 FF FF FF FF FF FF FF FF     
   7238 FFFC9E5C FF FF FF FF FF FF FF FF     
   7239 FFFC9E64 FF FF FF FF FF FF FF FF     
   7240 FFFC9E6C FF FF FF FF FF FF FF FF     
   7241 FFFC9E74 FF FF FF FF FF FF FF FF     
   7242 FFFC9E7C FF FF FF FF FF FF FF FF     
   7243 FFFC9E84 FF FF FF FF FF FF FF FF     
   7244 FFFC9E8C FF FF FF FF FF FF FF FF     
   7245 FFFC9E94 FF FF FF FF FF FF FF FF     
   7246 FFFC9E9C FF FF FF FF FF FF FF FF     
   7247 FFFC9EA4 FF FF FF FF FF FF FF FF     
   7248 FFFC9EAC FF FF FF FF FF FF FF FF     
   7249 FFFC9EB4 FF FF FF FF FF FF FF FF     
   7250 FFFC9EBC FF FF FF FF FF FF FF FF     
   7251 FFFC9EC4 FF FF FF FF FF FF FF FF     
   7252 FFFC9ECC FF FF FF FF FF FF FF FF     
   7253 FFFC9ED4 FF FF FF FF FF FF FF FF     
   7254 FFFC9EDC FF FF FF FF FF FF FF FF     
   7255 FFFC9EE4 FF FF FF FF FF FF FF FF     
   7256 FFFC9EEC FF FF FF FF FF FF FF FF     
   7257 FFFC9EF4 FF FF FF FF FF FF FF FF     
   7258 FFFC9EFC FF FF FF FF FF FF FF FF     
   7259 FFFC9F04 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 69
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7260 FFFC9F0C FF FF FF FF FF FF FF FF     
   7261 FFFC9F14 FF FF FF FF FF FF FF FF     
   7262 FFFC9F1C FF FF FF FF FF FF FF FF     
   7263 FFFC9F24 FF FF FF FF FF FF FF FF     
   7264 FFFC9F2C FF FF FF FF FF FF FF FF     
   7265 FFFC9F34 FF FF FF FF FF FF FF FF     
   7266 FFFC9F3C FF FF FF FF FF FF FF FF     
   7267 FFFC9F44 FF FF FF FF FF FF FF FF     
   7268 FFFC9F4C FF FF FF FF FF FF FF FF     
   7269 FFFC9F54 FF FF FF FF FF FF FF FF     
   7270 FFFC9F5C FF FF FF FF FF FF FF FF     
   7271 FFFC9F64 FF FF FF FF FF FF FF FF     
   7272 FFFC9F6C FF FF FF FF FF FF FF FF     
   7273 FFFC9F74 FF FF FF FF FF FF FF FF     
   7274 FFFC9F7C FF FF FF FF FF FF FF FF     
   7275 FFFC9F84 FF FF FF FF FF FF FF FF     
   7276 FFFC9F8C FF FF FF FF FF FF FF FF     
   7277 FFFC9F94 FF FF FF FF FF FF FF FF     
   7278 FFFC9F9C FF FF FF FF FF FF FF FF     
   7279 FFFC9FA4 FF FF FF FF FF FF FF FF     
   7280 FFFC9FAC FF FF FF FF FF FF FF FF     
   7281 FFFC9FB4 FF FF FF FF FF FF FF FF     
   7282 FFFC9FBC FF FF FF FF FF FF FF FF     
   7283 FFFC9FC4 FF FF FF FF FF FF FF FF     
   7284 FFFC9FCC FF FF FF FF FF FF FF FF     
   7285 FFFC9FD4 FF FF FF FF FF FF FF FF     
   7286 FFFC9FDC FF FF FF FF FF FF FF FF     
   7287 FFFC9FE4 FF FF FF FF FF FF FF FF     
   7288 FFFC9FEC FF FF FF FF FF FF FF FF     
   7289 FFFC9FF4 FF FF FF FF FF FF FF FF     
   7290 FFFC9FFC FF FF FF FF FF FF FF FF     
   7291 FFFCA004 FF FF FF FF FF FF FF FF     
   7292 FFFCA00C FF FF FF FF FF FF FF FF     
   7293 FFFCA014 FF FF FF FF FF FF FF FF     
   7294 FFFCA01C FF FF FF FF FF FF FF FF     
   7295 FFFCA024 FF FF FF FF FF FF FF FF     
   7296 FFFCA02C FF FF FF FF FF FF FF FF     
   7297 FFFCA034 FF FF FF FF FF FF FF FF     
   7298 FFFCA03C FF FF FF FF FF FF FF FF     
   7299 FFFCA044 FF FF FF FF FF FF FF FF     
   7300 FFFCA04C FF FF FF FF FF FF FF FF     
   7301 FFFCA054 FF FF FF FF FF FF FF FF     
   7302 FFFCA05C FF FF FF FF FF FF FF FF     
   7303 FFFCA064 FF FF FF FF FF FF FF FF     
   7304 FFFCA06C FF FF FF FF FF FF FF FF     
   7305 FFFCA074 FF FF FF FF FF FF FF FF     
   7306 FFFCA07C FF FF FF FF FF FF FF FF     
   7307 FFFCA084 FF FF FF FF FF FF FF FF     
   7308 FFFCA08C FF FF FF FF FF FF FF FF     
   7309 FFFCA094 FF FF FF FF FF FF FF FF     
   7310 FFFCA09C FF FF FF FF FF FF FF FF     
   7311 FFFCA0A4 FF FF FF FF FF FF FF FF     
   7312 FFFCA0AC FF FF FF FF FF FF FF FF     
   7313 FFFCA0B4 FF FF FF FF FF FF FF FF     
   7314 FFFCA0BC FF FF FF FF FF FF FF FF     
   7315 FFFCA0C4 FF FF FF FF FF FF FF FF     
   7316 FFFCA0CC FF FF FF FF FF FF FF FF     
   7317 FFFCA0D4 FF FF FF FF FF FF FF FF     
   7318 FFFCA0DC FF FF FF FF FF FF FF FF     
   7319 FFFCA0E4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 70
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7320 FFFCA0EC FF FF FF FF FF FF FF FF     
   7321 FFFCA0F4 FF FF FF FF FF FF FF FF     
   7322 FFFCA0FC FF FF FF FF FF FF FF FF     
   7323 FFFCA104 FF FF FF FF FF FF FF FF     
   7324 FFFCA10C FF FF FF FF FF FF FF FF     
   7325 FFFCA114 FF FF FF FF FF FF FF FF     
   7326 FFFCA11C FF FF FF FF FF FF FF FF     
   7327 FFFCA124 FF FF FF FF FF FF FF FF     
   7328 FFFCA12C FF FF FF FF FF FF FF FF     
   7329 FFFCA134 FF FF FF FF FF FF FF FF     
   7330 FFFCA13C FF FF FF FF FF FF FF FF     
   7331 FFFCA144 FF FF FF FF FF FF FF FF     
   7332 FFFCA14C FF FF FF FF FF FF FF FF     
   7333 FFFCA154 FF FF FF FF FF FF FF FF     
   7334 FFFCA15C FF FF FF FF FF FF FF FF     
   7335 FFFCA164 FF FF FF FF FF FF FF FF     
   7336 FFFCA16C FF FF FF FF FF FF FF FF     
   7337 FFFCA174 FF FF FF FF FF FF FF FF     
   7338 FFFCA17C FF FF FF FF FF FF FF FF     
   7339 FFFCA184 FF FF FF FF FF FF FF FF     
   7340 FFFCA18C FF FF FF FF FF FF FF FF     
   7341 FFFCA194 FF FF FF FF FF FF FF FF     
   7342 FFFCA19C FF FF FF FF FF FF FF FF     
   7343 FFFCA1A4 FF FF FF FF FF FF FF FF     
   7344 FFFCA1AC FF FF FF FF FF FF FF FF     
   7345 FFFCA1B4 FF FF FF FF FF FF FF FF     
   7346 FFFCA1BC FF FF FF FF FF FF FF FF     
   7347 FFFCA1C4 FF FF FF FF FF FF FF FF     
   7348 FFFCA1CC FF FF FF FF FF FF FF FF     
   7349 FFFCA1D4 FF FF FF FF FF FF FF FF     
   7350 FFFCA1DC FF FF FF FF FF FF FF FF     
   7351 FFFCA1E4 FF FF FF FF FF FF FF FF     
   7352 FFFCA1EC FF FF FF FF FF FF FF FF     
   7353 FFFCA1F4 FF FF FF FF FF FF FF FF     
   7354 FFFCA1FC FF FF FF FF FF FF FF FF     
   7355 FFFCA204 FF FF FF FF FF FF FF FF     
   7356 FFFCA20C FF FF FF FF FF FF FF FF     
   7357 FFFCA214 FF FF FF FF FF FF FF FF     
   7358 FFFCA21C FF FF FF FF FF FF FF FF     
   7359 FFFCA224 FF FF FF FF FF FF FF FF     
   7360 FFFCA22C FF FF FF FF FF FF FF FF     
   7361 FFFCA234 FF FF FF FF FF FF FF FF     
   7362 FFFCA23C FF FF FF FF FF FF FF FF     
   7363 FFFCA244 FF FF FF FF FF FF FF FF     
   7364 FFFCA24C FF FF FF FF FF FF FF FF     
   7365 FFFCA254 FF FF FF FF FF FF FF FF     
   7366 FFFCA25C FF FF FF FF FF FF FF FF     
   7367 FFFCA264 FF FF FF FF FF FF FF FF     
   7368 FFFCA26C FF FF FF FF FF FF FF FF     
   7369 FFFCA274 FF FF FF FF FF FF FF FF     
   7370 FFFCA27C FF FF FF FF FF FF FF FF     
   7371 FFFCA284 FF FF FF FF FF FF FF FF     
   7372 FFFCA28C FF FF FF FF FF FF FF FF     
   7373 FFFCA294 FF FF FF FF FF FF FF FF     
   7374 FFFCA29C FF FF FF FF FF FF FF FF     
   7375 FFFCA2A4 FF FF FF FF FF FF FF FF     
   7376 FFFCA2AC FF FF FF FF FF FF FF FF     
   7377 FFFCA2B4 FF FF FF FF FF FF FF FF     
   7378 FFFCA2BC FF FF FF FF FF FF FF FF     
   7379 FFFCA2C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 71
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7380 FFFCA2CC FF FF FF FF FF FF FF FF     
   7381 FFFCA2D4 FF FF FF FF FF FF FF FF     
   7382 FFFCA2DC FF FF FF FF FF FF FF FF     
   7383 FFFCA2E4 FF FF FF FF FF FF FF FF     
   7384 FFFCA2EC FF FF FF FF FF FF FF FF     
   7385 FFFCA2F4 FF FF FF FF FF FF FF FF     
   7386 FFFCA2FC FF FF FF FF FF FF FF FF     
   7387 FFFCA304 FF FF FF FF FF FF FF FF     
   7388 FFFCA30C FF FF FF FF FF FF FF FF     
   7389 FFFCA314 FF FF FF FF FF FF FF FF     
   7390 FFFCA31C FF FF FF FF FF FF FF FF     
   7391 FFFCA324 FF FF FF FF FF FF FF FF     
   7392 FFFCA32C FF FF FF FF FF FF FF FF     
   7393 FFFCA334 FF FF FF FF FF FF FF FF     
   7394 FFFCA33C FF FF FF FF FF FF FF FF     
   7395 FFFCA344 FF FF FF FF FF FF FF FF     
   7396 FFFCA34C FF FF FF FF FF FF FF FF     
   7397 FFFCA354 FF FF FF FF FF FF FF FF     
   7398 FFFCA35C FF FF FF FF FF FF FF FF     
   7399 FFFCA364 FF FF FF FF FF FF FF FF     
   7400 FFFCA36C FF FF FF FF FF FF FF FF     
   7401 FFFCA374 FF FF FF FF FF FF FF FF     
   7402 FFFCA37C FF FF FF FF FF FF FF FF     
   7403 FFFCA384 FF FF FF FF FF FF FF FF     
   7404 FFFCA38C FF FF FF FF FF FF FF FF     
   7405 FFFCA394 FF FF FF FF FF FF FF FF     
   7406 FFFCA39C FF FF FF FF FF FF FF FF     
   7407 FFFCA3A4 FF FF FF FF FF FF FF FF     
   7408 FFFCA3AC FF FF FF FF FF FF FF FF     
   7409 FFFCA3B4 FF FF FF FF FF FF FF FF     
   7410 FFFCA3BC FF FF FF FF FF FF FF FF     
   7411 FFFCA3C4 FF FF FF FF FF FF FF FF     
   7412 FFFCA3CC FF FF FF FF FF FF FF FF     
   7413 FFFCA3D4 FF FF FF FF FF FF FF FF     
   7414 FFFCA3DC FF FF FF FF FF FF FF FF     
   7415 FFFCA3E4 FF FF FF FF FF FF FF FF     
   7416 FFFCA3EC FF FF FF FF FF FF FF FF     
   7417 FFFCA3F4 FF FF FF FF FF FF FF FF     
   7418 FFFCA3FC FF FF FF FF FF FF FF FF     
   7419 FFFCA404 FF FF FF FF FF FF FF FF     
   7420 FFFCA40C FF FF FF FF FF FF FF FF     
   7421 FFFCA414 FF FF FF FF FF FF FF FF     
   7422 FFFCA41C FF FF FF FF FF FF FF FF     
   7423 FFFCA424 FF FF FF FF FF FF FF FF     
   7424 FFFCA42C FF FF FF FF FF FF FF FF     
   7425 FFFCA434 FF FF FF FF FF FF FF FF     
   7426 FFFCA43C FF FF FF FF FF FF FF FF     
   7427 FFFCA444 FF FF FF FF FF FF FF FF     
   7428 FFFCA44C FF FF FF FF FF FF FF FF     
   7429 FFFCA454 FF FF FF FF FF FF FF FF     
   7430 FFFCA45C FF FF FF FF FF FF FF FF     
   7431 FFFCA464 FF FF FF FF FF FF FF FF     
   7432 FFFCA46C FF FF FF FF FF FF FF FF     
   7433 FFFCA474 FF FF FF FF FF FF FF FF     
   7434 FFFCA47C FF FF FF FF FF FF FF FF     
   7435 FFFCA484 FF FF FF FF FF FF FF FF     
   7436 FFFCA48C FF FF FF FF FF FF FF FF     
   7437 FFFCA494 FF FF FF FF FF FF FF FF     
   7438 FFFCA49C FF FF FF FF FF FF FF FF     
   7439 FFFCA4A4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 72
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7440 FFFCA4AC FF FF FF FF FF FF FF FF     
   7441 FFFCA4B4 FF FF FF FF FF FF FF FF     
   7442 FFFCA4BC FF FF FF FF FF FF FF FF     
   7443 FFFCA4C4 FF FF FF FF FF FF FF FF     
   7444 FFFCA4CC FF FF FF FF FF FF FF FF     
   7445 FFFCA4D4 FF FF FF FF FF FF FF FF     
   7446 FFFCA4DC FF FF FF FF FF FF FF FF     
   7447 FFFCA4E4 FF FF FF FF FF FF FF FF     
   7448 FFFCA4EC FF FF FF FF FF FF FF FF     
   7449 FFFCA4F4 FF FF FF FF FF FF FF FF     
   7450 FFFCA4FC FF FF FF FF FF FF FF FF     
   7451 FFFCA504 FF FF FF FF FF FF FF FF     
   7452 FFFCA50C FF FF FF FF FF FF FF FF     
   7453 FFFCA514 FF FF FF FF FF FF FF FF     
   7454 FFFCA51C FF FF FF FF FF FF FF FF     
   7455 FFFCA524 FF FF FF FF FF FF FF FF     
   7456 FFFCA52C FF FF FF FF FF FF FF FF     
   7457 FFFCA534 FF FF FF FF FF FF FF FF     
   7458 FFFCA53C FF FF FF FF FF FF FF FF     
   7459 FFFCA544 FF FF FF FF FF FF FF FF     
   7460 FFFCA54C FF FF FF FF FF FF FF FF     
   7461 FFFCA554 FF FF FF FF FF FF FF FF     
   7462 FFFCA55C FF FF FF FF FF FF FF FF     
   7463 FFFCA564 FF FF FF FF FF FF FF FF     
   7464 FFFCA56C FF FF FF FF FF FF FF FF     
   7465 FFFCA574 FF FF FF FF FF FF FF FF     
   7466 FFFCA57C FF FF FF FF FF FF FF FF     
   7467 FFFCA584 FF FF FF FF FF FF FF FF     
   7468 FFFCA58C FF FF FF FF FF FF FF FF     
   7469 FFFCA594 FF FF FF FF FF FF FF FF     
   7470 FFFCA59C FF FF FF FF FF FF FF FF     
   7471 FFFCA5A4 FF FF FF FF FF FF FF FF     
   7472 FFFCA5AC FF FF FF FF FF FF FF FF     
   7473 FFFCA5B4 FF FF FF FF FF FF FF FF     
   7474 FFFCA5BC FF FF FF FF FF FF FF FF     
   7475 FFFCA5C4 FF FF FF FF FF FF FF FF     
   7476 FFFCA5CC FF FF FF FF FF FF FF FF     
   7477 FFFCA5D4 FF FF FF FF FF FF FF FF     
   7478 FFFCA5DC FF FF FF FF FF FF FF FF     
   7479 FFFCA5E4 FF FF FF FF FF FF FF FF     
   7480 FFFCA5EC FF FF FF FF FF FF FF FF     
   7481 FFFCA5F4 FF FF FF FF FF FF FF FF     
   7482 FFFCA5FC FF FF FF FF FF FF FF FF     
   7483 FFFCA604 FF FF FF FF FF FF FF FF     
   7484 FFFCA60C FF FF FF FF FF FF FF FF     
   7485 FFFCA614 FF FF FF FF FF FF FF FF     
   7486 FFFCA61C FF FF FF FF FF FF FF FF     
   7487 FFFCA624 FF FF FF FF FF FF FF FF     
   7488 FFFCA62C FF FF FF FF FF FF FF FF     
   7489 FFFCA634 FF FF FF FF FF FF FF FF     
   7490 FFFCA63C FF FF FF FF FF FF FF FF     
   7491 FFFCA644 FF FF FF FF FF FF FF FF     
   7492 FFFCA64C FF FF FF FF FF FF FF FF     
   7493 FFFCA654 FF FF FF FF FF FF FF FF     
   7494 FFFCA65C FF FF FF FF FF FF FF FF     
   7495 FFFCA664 FF FF FF FF FF FF FF FF     
   7496 FFFCA66C FF FF FF FF FF FF FF FF     
   7497 FFFCA674 FF FF FF FF FF FF FF FF     
   7498 FFFCA67C FF FF FF FF FF FF FF FF     
   7499 FFFCA684 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 73
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7500 FFFCA68C FF FF FF FF FF FF FF FF     
   7501 FFFCA694 FF FF FF FF FF FF FF FF     
   7502 FFFCA69C FF FF FF FF FF FF FF FF     
   7503 FFFCA6A4 FF FF FF FF FF FF FF FF     
   7504 FFFCA6AC FF FF FF FF FF FF FF FF     
   7505 FFFCA6B4 FF FF FF FF FF FF FF FF     
   7506 FFFCA6BC FF FF FF FF FF FF FF FF     
   7507 FFFCA6C4 FF FF FF FF FF FF FF FF     
   7508 FFFCA6CC FF FF FF FF FF FF FF FF     
   7509 FFFCA6D4 FF FF FF FF FF FF FF FF     
   7510 FFFCA6DC FF FF FF FF FF FF FF FF     
   7511 FFFCA6E4 FF FF FF FF FF FF FF FF     
   7512 FFFCA6EC FF FF FF FF FF FF FF FF     
   7513 FFFCA6F4 FF FF FF FF FF FF FF FF     
   7514 FFFCA6FC FF FF FF FF FF FF FF FF     
   7515 FFFCA704 FF FF FF FF FF FF FF FF     
   7516 FFFCA70C FF FF FF FF FF FF FF FF     
   7517 FFFCA714 FF FF FF FF FF FF FF FF     
   7518 FFFCA71C FF FF FF FF FF FF FF FF     
   7519 FFFCA724 FF FF FF FF FF FF FF FF     
   7520 FFFCA72C FF FF FF FF FF FF FF FF     
   7521 FFFCA734 FF FF FF FF FF FF FF FF     
   7522 FFFCA73C FF FF FF FF FF FF FF FF     
   7523 FFFCA744 FF FF FF FF FF FF FF FF     
   7524 FFFCA74C FF FF FF FF FF FF FF FF     
   7525 FFFCA754 FF FF FF FF FF FF FF FF     
   7526 FFFCA75C FF FF FF FF FF FF FF FF     
   7527 FFFCA764 FF FF FF FF FF FF FF FF     
   7528 FFFCA76C FF FF FF FF FF FF FF FF     
   7529 FFFCA774 FF FF FF FF FF FF FF FF     
   7530 FFFCA77C FF FF FF FF FF FF FF FF     
   7531 FFFCA784 FF FF FF FF FF FF FF FF     
   7532 FFFCA78C FF FF FF FF FF FF FF FF     
   7533 FFFCA794 FF FF FF FF FF FF FF FF     
   7534 FFFCA79C FF FF FF FF FF FF FF FF     
   7535 FFFCA7A4 FF FF FF FF FF FF FF FF     
   7536 FFFCA7AC FF FF FF FF FF FF FF FF     
   7537 FFFCA7B4 FF FF FF FF FF FF FF FF     
   7538 FFFCA7BC FF FF FF FF FF FF FF FF     
   7539 FFFCA7C4 FF FF FF FF FF FF FF FF     
   7540 FFFCA7CC FF FF FF FF FF FF FF FF     
   7541 FFFCA7D4 FF FF FF FF FF FF FF FF     
   7542 FFFCA7DC FF FF FF FF FF FF FF FF     
   7543 FFFCA7E4 FF FF FF FF FF FF FF FF     
   7544 FFFCA7EC FF FF FF FF FF FF FF FF     
   7545 FFFCA7F4 FF FF FF FF FF FF FF FF     
   7546 FFFCA7FC FF FF FF FF FF FF FF FF     
   7547 FFFCA804 FF FF FF FF FF FF FF FF     
   7548 FFFCA80C FF FF FF FF FF FF FF FF     
   7549 FFFCA814 FF FF FF FF FF FF FF FF     
   7550 FFFCA81C FF FF FF FF FF FF FF FF     
   7551 FFFCA824 FF FF FF FF FF FF FF FF     
   7552 FFFCA82C FF FF FF FF FF FF FF FF     
   7553 FFFCA834 FF FF FF FF FF FF FF FF     
   7554 FFFCA83C FF FF FF FF FF FF FF FF     
   7555 FFFCA844 FF FF FF FF FF FF FF FF     
   7556 FFFCA84C FF FF FF FF FF FF FF FF     
   7557 FFFCA854 FF FF FF FF FF FF FF FF     
   7558 FFFCA85C FF FF FF FF FF FF FF FF     
   7559 FFFCA864 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 74
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7560 FFFCA86C FF FF FF FF FF FF FF FF     
   7561 FFFCA874 FF FF FF FF FF FF FF FF     
   7562 FFFCA87C FF FF FF FF FF FF FF FF     
   7563 FFFCA884 FF FF FF FF FF FF FF FF     
   7564 FFFCA88C FF FF FF FF FF FF FF FF     
   7565 FFFCA894 FF FF FF FF FF FF FF FF     
   7566 FFFCA89C FF FF FF FF FF FF FF FF     
   7567 FFFCA8A4 FF FF FF FF FF FF FF FF     
   7568 FFFCA8AC FF FF FF FF FF FF FF FF     
   7569 FFFCA8B4 FF FF FF FF FF FF FF FF     
   7570 FFFCA8BC FF FF FF FF FF FF FF FF     
   7571 FFFCA8C4 FF FF FF FF FF FF FF FF     
   7572 FFFCA8CC FF FF FF FF FF FF FF FF     
   7573 FFFCA8D4 FF FF FF FF FF FF FF FF     
   7574 FFFCA8DC FF FF FF FF FF FF FF FF     
   7575 FFFCA8E4 FF FF FF FF FF FF FF FF     
   7576 FFFCA8EC FF FF FF FF FF FF FF FF     
   7577 FFFCA8F4 FF FF FF FF FF FF FF FF     
   7578 FFFCA8FC FF FF FF FF FF FF FF FF     
   7579 FFFCA904 FF FF FF FF FF FF FF FF     
   7580 FFFCA90C FF FF FF FF FF FF FF FF     
   7581 FFFCA914 FF FF FF FF FF FF FF FF     
   7582 FFFCA91C FF FF FF FF FF FF FF FF     
   7583 FFFCA924 FF FF FF FF FF FF FF FF     
   7584 FFFCA92C FF FF FF FF FF FF FF FF     
   7585 FFFCA934 FF FF FF FF FF FF FF FF     
   7586 FFFCA93C FF FF FF FF FF FF FF FF     
   7587 FFFCA944 FF FF FF FF FF FF FF FF     
   7588 FFFCA94C FF FF FF FF FF FF FF FF     
   7589 FFFCA954 FF FF FF FF FF FF FF FF     
   7590 FFFCA95C FF FF FF FF FF FF FF FF     
   7591 FFFCA964 FF FF FF FF FF FF FF FF     
   7592 FFFCA96C FF FF FF FF FF FF FF FF     
   7593 FFFCA974 FF FF FF FF FF FF FF FF     
   7594 FFFCA97C FF FF FF FF FF FF FF FF     
   7595 FFFCA984 FF FF FF FF FF FF FF FF     
   7596 FFFCA98C FF FF FF FF FF FF FF FF     
   7597 FFFCA994 FF FF FF FF FF FF FF FF     
   7598 FFFCA99C FF FF FF FF FF FF FF FF     
   7599 FFFCA9A4 FF FF FF FF FF FF FF FF     
   7600 FFFCA9AC FF FF FF FF FF FF FF FF     
   7601 FFFCA9B4 FF FF FF FF FF FF FF FF     
   7602 FFFCA9BC FF FF FF FF FF FF FF FF     
   7603 FFFCA9C4 FF FF FF FF FF FF FF FF     
   7604 FFFCA9CC FF FF FF FF FF FF FF FF     
   7605 FFFCA9D4 FF FF FF FF FF FF FF FF     
   7606 FFFCA9DC FF FF FF FF FF FF FF FF     
   7607 FFFCA9E4 FF FF FF FF FF FF FF FF     
   7608 FFFCA9EC FF FF FF FF FF FF FF FF     
   7609 FFFCA9F4 FF FF FF FF FF FF FF FF     
   7610 FFFCA9FC FF FF FF FF FF FF FF FF     
   7611 FFFCAA04 FF FF FF FF FF FF FF FF     
   7612 FFFCAA0C FF FF FF FF FF FF FF FF     
   7613 FFFCAA14 FF FF FF FF FF FF FF FF     
   7614 FFFCAA1C FF FF FF FF FF FF FF FF     
   7615 FFFCAA24 FF FF FF FF FF FF FF FF     
   7616 FFFCAA2C FF FF FF FF FF FF FF FF     
   7617 FFFCAA34 FF FF FF FF FF FF FF FF     
   7618 FFFCAA3C FF FF FF FF FF FF FF FF     
   7619 FFFCAA44 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 75
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7620 FFFCAA4C FF FF FF FF FF FF FF FF     
   7621 FFFCAA54 FF FF FF FF FF FF FF FF     
   7622 FFFCAA5C FF FF FF FF FF FF FF FF     
   7623 FFFCAA64 FF FF FF FF FF FF FF FF     
   7624 FFFCAA6C FF FF FF FF FF FF FF FF     
   7625 FFFCAA74 FF FF FF FF FF FF FF FF     
   7626 FFFCAA7C FF FF FF FF FF FF FF FF     
   7627 FFFCAA84 FF FF FF FF FF FF FF FF     
   7628 FFFCAA8C FF FF FF FF FF FF FF FF     
   7629 FFFCAA94 FF FF FF FF FF FF FF FF     
   7630 FFFCAA9C FF FF FF FF FF FF FF FF     
   7631 FFFCAAA4 FF FF FF FF FF FF FF FF     
   7632 FFFCAAAC FF FF FF FF FF FF FF FF     
   7633 FFFCAAB4 FF FF FF FF FF FF FF FF     
   7634 FFFCAABC FF FF FF FF FF FF FF FF     
   7635 FFFCAAC4 FF FF FF FF FF FF FF FF     
   7636 FFFCAACC FF FF FF FF FF FF FF FF     
   7637 FFFCAAD4 FF FF FF FF FF FF FF FF     
   7638 FFFCAADC FF FF FF FF FF FF FF FF     
   7639 FFFCAAE4 FF FF FF FF FF FF FF FF     
   7640 FFFCAAEC FF FF FF FF FF FF FF FF     
   7641 FFFCAAF4 FF FF FF FF FF FF FF FF     
   7642 FFFCAAFC FF FF FF FF FF FF FF FF     
   7643 FFFCAB04 FF FF FF FF FF FF FF FF     
   7644 FFFCAB0C FF FF FF FF FF FF FF FF     
   7645 FFFCAB14 FF FF FF FF FF FF FF FF     
   7646 FFFCAB1C FF FF FF FF FF FF FF FF     
   7647 FFFCAB24 FF FF FF FF FF FF FF FF     
   7648 FFFCAB2C FF FF FF FF FF FF FF FF     
   7649 FFFCAB34 FF FF FF FF FF FF FF FF     
   7650 FFFCAB3C FF FF FF FF FF FF FF FF     
   7651 FFFCAB44 FF FF FF FF FF FF FF FF     
   7652 FFFCAB4C FF FF FF FF FF FF FF FF     
   7653 FFFCAB54 FF FF FF FF FF FF FF FF     
   7654 FFFCAB5C FF FF FF FF FF FF FF FF     
   7655 FFFCAB64 FF FF FF FF FF FF FF FF     
   7656 FFFCAB6C FF FF FF FF FF FF FF FF     
   7657 FFFCAB74 FF FF FF FF FF FF FF FF     
   7658 FFFCAB7C FF FF FF FF FF FF FF FF     
   7659 FFFCAB84 FF FF FF FF FF FF FF FF     
   7660 FFFCAB8C FF FF FF FF FF FF FF FF     
   7661 FFFCAB94 FF FF FF FF FF FF FF FF     
   7662 FFFCAB9C FF FF FF FF FF FF FF FF     
   7663 FFFCABA4 FF FF FF FF FF FF FF FF     
   7664 FFFCABAC FF FF FF FF FF FF FF FF     
   7665 FFFCABB4 FF FF FF FF FF FF FF FF     
   7666 FFFCABBC FF FF FF FF FF FF FF FF     
   7667 FFFCABC4 FF FF FF FF FF FF FF FF     
   7668 FFFCABCC FF FF FF FF FF FF FF FF     
   7669 FFFCABD4 FF FF FF FF FF FF FF FF     
   7670 FFFCABDC FF FF FF FF FF FF FF FF     
   7671 FFFCABE4 FF FF FF FF FF FF FF FF     
   7672 FFFCABEC FF FF FF FF FF FF FF FF     
   7673 FFFCABF4 FF FF FF FF FF FF FF FF     
   7674 FFFCABFC FF FF FF FF FF FF FF FF     
   7675 FFFCAC04 FF FF FF FF FF FF FF FF     
   7676 FFFCAC0C FF FF FF FF FF FF FF FF     
   7677 FFFCAC14 FF FF FF FF FF FF FF FF     
   7678 FFFCAC1C FF FF FF FF FF FF FF FF     
   7679 FFFCAC24 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 76
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7680 FFFCAC2C FF FF FF FF FF FF FF FF     
   7681 FFFCAC34 FF FF FF FF FF FF FF FF     
   7682 FFFCAC3C FF FF FF FF FF FF FF FF     
   7683 FFFCAC44 FF FF FF FF FF FF FF FF     
   7684 FFFCAC4C FF FF FF FF FF FF FF FF     
   7685 FFFCAC54 FF FF FF FF FF FF FF FF     
   7686 FFFCAC5C FF FF FF FF FF FF FF FF     
   7687 FFFCAC64 FF FF FF FF FF FF FF FF     
   7688 FFFCAC6C FF FF FF FF FF FF FF FF     
   7689 FFFCAC74 FF FF FF FF FF FF FF FF     
   7690 FFFCAC7C FF FF FF FF FF FF FF FF     
   7691 FFFCAC84 FF FF FF FF FF FF FF FF     
   7692 FFFCAC8C FF FF FF FF FF FF FF FF     
   7693 FFFCAC94 FF FF FF FF FF FF FF FF     
   7694 FFFCAC9C FF FF FF FF FF FF FF FF     
   7695 FFFCACA4 FF FF FF FF FF FF FF FF     
   7696 FFFCACAC FF FF FF FF FF FF FF FF     
   7697 FFFCACB4 FF FF FF FF FF FF FF FF     
   7698 FFFCACBC FF FF FF FF FF FF FF FF     
   7699 FFFCACC4 FF FF FF FF FF FF FF FF     
   7700 FFFCACCC FF FF FF FF FF FF FF FF     
   7701 FFFCACD4 FF FF FF FF FF FF FF FF     
   7702 FFFCACDC FF FF FF FF FF FF FF FF     
   7703 FFFCACE4 FF FF FF FF FF FF FF FF     
   7704 FFFCACEC FF FF FF FF FF FF FF FF     
   7705 FFFCACF4 FF FF FF FF FF FF FF FF     
   7706 FFFCACFC FF FF FF FF FF FF FF FF     
   7707 FFFCAD04 FF FF FF FF FF FF FF FF     
   7708 FFFCAD0C FF FF FF FF FF FF FF FF     
   7709 FFFCAD14 FF FF FF FF FF FF FF FF     
   7710 FFFCAD1C FF FF FF FF FF FF FF FF     
   7711 FFFCAD24 FF FF FF FF FF FF FF FF     
   7712 FFFCAD2C FF FF FF FF FF FF FF FF     
   7713 FFFCAD34 FF FF FF FF FF FF FF FF     
   7714 FFFCAD3C FF FF FF FF FF FF FF FF     
   7715 FFFCAD44 FF FF FF FF FF FF FF FF     
   7716 FFFCAD4C FF FF FF FF FF FF FF FF     
   7717 FFFCAD54 FF FF FF FF FF FF FF FF     
   7718 FFFCAD5C FF FF FF FF FF FF FF FF     
   7719 FFFCAD64 FF FF FF FF FF FF FF FF     
   7720 FFFCAD6C FF FF FF FF FF FF FF FF     
   7721 FFFCAD74 FF FF FF FF FF FF FF FF     
   7722 FFFCAD7C FF FF FF FF FF FF FF FF     
   7723 FFFCAD84 FF FF FF FF FF FF FF FF     
   7724 FFFCAD8C FF FF FF FF FF FF FF FF     
   7725 FFFCAD94 FF FF FF FF FF FF FF FF     
   7726 FFFCAD9C FF FF FF FF FF FF FF FF     
   7727 FFFCADA4 FF FF FF FF FF FF FF FF     
   7728 FFFCADAC FF FF FF FF FF FF FF FF     
   7729 FFFCADB4 FF FF FF FF FF FF FF FF     
   7730 FFFCADBC FF FF FF FF FF FF FF FF     
   7731 FFFCADC4 FF FF FF FF FF FF FF FF     
   7732 FFFCADCC FF FF FF FF FF FF FF FF     
   7733 FFFCADD4 FF FF FF FF FF FF FF FF     
   7734 FFFCADDC FF FF FF FF FF FF FF FF     
   7735 FFFCADE4 FF FF FF FF FF FF FF FF     
   7736 FFFCADEC FF FF FF FF FF FF FF FF     
   7737 FFFCADF4 FF FF FF FF FF FF FF FF     
   7738 FFFCADFC FF FF FF FF FF FF FF FF     
   7739 FFFCAE04 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 77
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7740 FFFCAE0C FF FF FF FF FF FF FF FF     
   7741 FFFCAE14 FF FF FF FF FF FF FF FF     
   7742 FFFCAE1C FF FF FF FF FF FF FF FF     
   7743 FFFCAE24 FF FF FF FF FF FF FF FF     
   7744 FFFCAE2C FF FF FF FF FF FF FF FF     
   7745 FFFCAE34 FF FF FF FF FF FF FF FF     
   7746 FFFCAE3C FF FF FF FF FF FF FF FF     
   7747 FFFCAE44 FF FF FF FF FF FF FF FF     
   7748 FFFCAE4C FF FF FF FF FF FF FF FF     
   7749 FFFCAE54 FF FF FF FF FF FF FF FF     
   7750 FFFCAE5C FF FF FF FF FF FF FF FF     
   7751 FFFCAE64 FF FF FF FF FF FF FF FF     
   7752 FFFCAE6C FF FF FF FF FF FF FF FF     
   7753 FFFCAE74 FF FF FF FF FF FF FF FF     
   7754 FFFCAE7C FF FF FF FF FF FF FF FF     
   7755 FFFCAE84 FF FF FF FF FF FF FF FF     
   7756 FFFCAE8C FF FF FF FF FF FF FF FF     
   7757 FFFCAE94 FF FF FF FF FF FF FF FF     
   7758 FFFCAE9C FF FF FF FF FF FF FF FF     
   7759 FFFCAEA4 FF FF FF FF FF FF FF FF     
   7760 FFFCAEAC FF FF FF FF FF FF FF FF     
   7761 FFFCAEB4 FF FF FF FF FF FF FF FF     
   7762 FFFCAEBC FF FF FF FF FF FF FF FF     
   7763 FFFCAEC4 FF FF FF FF FF FF FF FF     
   7764 FFFCAECC FF FF FF FF FF FF FF FF     
   7765 FFFCAED4 FF FF FF FF FF FF FF FF     
   7766 FFFCAEDC FF FF FF FF FF FF FF FF     
   7767 FFFCAEE4 FF FF FF FF FF FF FF FF     
   7768 FFFCAEEC FF FF FF FF FF FF FF FF     
   7769 FFFCAEF4 FF FF FF FF FF FF FF FF     
   7770 FFFCAEFC FF FF FF FF FF FF FF FF     
   7771 FFFCAF04 FF FF FF FF FF FF FF FF     
   7772 FFFCAF0C FF FF FF FF FF FF FF FF     
   7773 FFFCAF14 FF FF FF FF FF FF FF FF     
   7774 FFFCAF1C FF FF FF FF FF FF FF FF     
   7775 FFFCAF24 FF FF FF FF FF FF FF FF     
   7776 FFFCAF2C FF FF FF FF FF FF FF FF     
   7777 FFFCAF34 FF FF FF FF FF FF FF FF     
   7778 FFFCAF3C FF FF FF FF FF FF FF FF     
   7779 FFFCAF44 FF FF FF FF FF FF FF FF     
   7780 FFFCAF4C FF FF FF FF FF FF FF FF     
   7781 FFFCAF54 FF FF FF FF FF FF FF FF     
   7782 FFFCAF5C FF FF FF FF FF FF FF FF     
   7783 FFFCAF64 FF FF FF FF FF FF FF FF     
   7784 FFFCAF6C FF FF FF FF FF FF FF FF     
   7785 FFFCAF74 FF FF FF FF FF FF FF FF     
   7786 FFFCAF7C FF FF FF FF FF FF FF FF     
   7787 FFFCAF84 FF FF FF FF FF FF FF FF     
   7788 FFFCAF8C FF FF FF FF FF FF FF FF     
   7789 FFFCAF94 FF FF FF FF FF FF FF FF     
   7790 FFFCAF9C FF FF FF FF FF FF FF FF     
   7791 FFFCAFA4 FF FF FF FF FF FF FF FF     
   7792 FFFCAFAC FF FF FF FF FF FF FF FF     
   7793 FFFCAFB4 FF FF FF FF FF FF FF FF     
   7794 FFFCAFBC FF FF FF FF FF FF FF FF     
   7795 FFFCAFC4 FF FF FF FF FF FF FF FF     
   7796 FFFCAFCC FF FF FF FF FF FF FF FF     
   7797 FFFCAFD4 FF FF FF FF FF FF FF FF     
   7798 FFFCAFDC FF FF FF FF FF FF FF FF     
   7799 FFFCAFE4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 78
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7800 FFFCAFEC FF FF FF FF FF FF FF FF     
   7801 FFFCAFF4 FF FF FF FF FF FF FF FF     
   7802 FFFCAFFC FF FF FF FF FF FF FF FF     
   7803 FFFCB004 FF FF FF FF FF FF FF FF     
   7804 FFFCB00C FF FF FF FF FF FF FF FF     
   7805 FFFCB014 FF FF FF FF FF FF FF FF     
   7806 FFFCB01C FF FF FF FF FF FF FF FF     
   7807 FFFCB024 FF FF FF FF FF FF FF FF     
   7808 FFFCB02C FF FF FF FF FF FF FF FF     
   7809 FFFCB034 FF FF FF FF FF FF FF FF     
   7810 FFFCB03C FF FF FF FF FF FF FF FF     
   7811 FFFCB044 FF FF FF FF FF FF FF FF     
   7812 FFFCB04C FF FF FF FF FF FF FF FF     
   7813 FFFCB054 FF FF FF FF FF FF FF FF     
   7814 FFFCB05C FF FF FF FF FF FF FF FF     
   7815 FFFCB064 FF FF FF FF FF FF FF FF     
   7816 FFFCB06C FF FF FF FF FF FF FF FF     
   7817 FFFCB074 FF FF FF FF FF FF FF FF     
   7818 FFFCB07C FF FF FF FF FF FF FF FF     
   7819 FFFCB084 FF FF FF FF FF FF FF FF     
   7820 FFFCB08C FF FF FF FF FF FF FF FF     
   7821 FFFCB094 FF FF FF FF FF FF FF FF     
   7822 FFFCB09C FF FF FF FF FF FF FF FF     
   7823 FFFCB0A4 FF FF FF FF FF FF FF FF     
   7824 FFFCB0AC FF FF FF FF FF FF FF FF     
   7825 FFFCB0B4 FF FF FF FF FF FF FF FF     
   7826 FFFCB0BC FF FF FF FF FF FF FF FF     
   7827 FFFCB0C4 FF FF FF FF FF FF FF FF     
   7828 FFFCB0CC FF FF FF FF FF FF FF FF     
   7829 FFFCB0D4 FF FF FF FF FF FF FF FF     
   7830 FFFCB0DC FF FF FF FF FF FF FF FF     
   7831 FFFCB0E4 FF FF FF FF FF FF FF FF     
   7832 FFFCB0EC FF FF FF FF FF FF FF FF     
   7833 FFFCB0F4 FF FF FF FF FF FF FF FF     
   7834 FFFCB0FC FF FF FF FF FF FF FF FF     
   7835 FFFCB104 FF FF FF FF FF FF FF FF     
   7836 FFFCB10C FF FF FF FF FF FF FF FF     
   7837 FFFCB114 FF FF FF FF FF FF FF FF     
   7838 FFFCB11C FF FF FF FF FF FF FF FF     
   7839 FFFCB124 FF FF FF FF FF FF FF FF     
   7840 FFFCB12C FF FF FF FF FF FF FF FF     
   7841 FFFCB134 FF FF FF FF FF FF FF FF     
   7842 FFFCB13C FF FF FF FF FF FF FF FF     
   7843 FFFCB144 FF FF FF FF FF FF FF FF     
   7844 FFFCB14C FF FF FF FF FF FF FF FF     
   7845 FFFCB154 FF FF FF FF FF FF FF FF     
   7846 FFFCB15C FF FF FF FF FF FF FF FF     
   7847 FFFCB164 FF FF FF FF FF FF FF FF     
   7848 FFFCB16C FF FF FF FF FF FF FF FF     
   7849 FFFCB174 FF FF FF FF FF FF FF FF     
   7850 FFFCB17C FF FF FF FF FF FF FF FF     
   7851 FFFCB184 FF FF FF FF FF FF FF FF     
   7852 FFFCB18C FF FF FF FF FF FF FF FF     
   7853 FFFCB194 FF FF FF FF FF FF FF FF     
   7854 FFFCB19C FF FF FF FF FF FF FF FF     
   7855 FFFCB1A4 FF FF FF FF FF FF FF FF     
   7856 FFFCB1AC FF FF FF FF FF FF FF FF     
   7857 FFFCB1B4 FF FF FF FF FF FF FF FF     
   7858 FFFCB1BC FF FF FF FF FF FF FF FF     
   7859 FFFCB1C4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 79
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7860 FFFCB1CC FF FF FF FF FF FF FF FF     
   7861 FFFCB1D4 FF FF FF FF FF FF FF FF     
   7862 FFFCB1DC FF FF FF FF FF FF FF FF     
   7863 FFFCB1E4 FF FF FF FF FF FF FF FF     
   7864 FFFCB1EC FF FF FF FF FF FF FF FF     
   7865 FFFCB1F4 FF FF FF FF FF FF FF FF     
   7866 FFFCB1FC FF FF FF FF FF FF FF FF     
   7867 FFFCB204 FF FF FF FF FF FF FF FF     
   7868 FFFCB20C FF FF FF FF FF FF FF FF     
   7869 FFFCB214 FF FF FF FF FF FF FF FF     
   7870 FFFCB21C FF FF FF FF FF FF FF FF     
   7871 FFFCB224 FF FF FF FF FF FF FF FF     
   7872 FFFCB22C FF FF FF FF FF FF FF FF     
   7873 FFFCB234 FF FF FF FF FF FF FF FF     
   7874 FFFCB23C FF FF FF FF FF FF FF FF     
   7875 FFFCB244 FF FF FF FF FF FF FF FF     
   7876 FFFCB24C FF FF FF FF FF FF FF FF     
   7877 FFFCB254 FF FF FF FF FF FF FF FF     
   7878 FFFCB25C FF FF FF FF FF FF FF FF     
   7879 FFFCB264 FF FF FF FF FF FF FF FF     
   7880 FFFCB26C FF FF FF FF FF FF FF FF     
   7881 FFFCB274 FF FF FF FF FF FF FF FF     
   7882 FFFCB27C FF FF FF FF FF FF FF FF     
   7883 FFFCB284 FF FF FF FF FF FF FF FF     
   7884 FFFCB28C FF FF FF FF FF FF FF FF     
   7885 FFFCB294 FF FF FF FF FF FF FF FF     
   7886 FFFCB29C FF FF FF FF FF FF FF FF     
   7887 FFFCB2A4 FF FF FF FF FF FF FF FF     
   7888 FFFCB2AC FF FF FF FF FF FF FF FF     
   7889 FFFCB2B4 FF FF FF FF FF FF FF FF     
   7890 FFFCB2BC FF FF FF FF FF FF FF FF     
   7891 FFFCB2C4 FF FF FF FF FF FF FF FF     
   7892 FFFCB2CC FF FF FF FF FF FF FF FF     
   7893 FFFCB2D4 FF FF FF FF FF FF FF FF     
   7894 FFFCB2DC FF FF FF FF FF FF FF FF     
   7895 FFFCB2E4 FF FF FF FF FF FF FF FF     
   7896 FFFCB2EC FF FF FF FF FF FF FF FF     
   7897 FFFCB2F4 FF FF FF FF FF FF FF FF     
   7898 FFFCB2FC FF FF FF FF FF FF FF FF     
   7899 FFFCB304 FF FF FF FF FF FF FF FF     
   7900 FFFCB30C FF FF FF FF FF FF FF FF     
   7901 FFFCB314 FF FF FF FF FF FF FF FF     
   7902 FFFCB31C FF FF FF FF FF FF FF FF     
   7903 FFFCB324 FF FF FF FF FF FF FF FF     
   7904 FFFCB32C FF FF FF FF FF FF FF FF     
   7905 FFFCB334 FF FF FF FF FF FF FF FF     
   7906 FFFCB33C FF FF FF FF FF FF FF FF     
   7907 FFFCB344 FF FF FF FF FF FF FF FF     
   7908 FFFCB34C FF FF FF FF FF FF FF FF     
   7909 FFFCB354 FF FF FF FF FF FF FF FF     
   7910 FFFCB35C FF FF FF FF FF FF FF FF     
   7911 FFFCB364 FF FF FF FF FF FF FF FF     
   7912 FFFCB36C FF FF FF FF FF FF FF FF     
   7913 FFFCB374 FF FF FF FF FF FF FF FF     
   7914 FFFCB37C FF FF FF FF FF FF FF FF     
   7915 FFFCB384 FF FF FF FF FF FF FF FF     
   7916 FFFCB38C FF FF FF FF FF FF FF FF     
   7917 FFFCB394 FF FF FF FF FF FF FF FF     
   7918 FFFCB39C FF FF FF FF FF FF FF FF     
   7919 FFFCB3A4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 80
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7920 FFFCB3AC FF FF FF FF FF FF FF FF     
   7921 FFFCB3B4 FF FF FF FF FF FF FF FF     
   7922 FFFCB3BC FF FF FF FF FF FF FF FF     
   7923 FFFCB3C4 FF FF FF FF FF FF FF FF     
   7924 FFFCB3CC FF FF FF FF FF FF FF FF     
   7925 FFFCB3D4 FF FF FF FF FF FF FF FF     
   7926 FFFCB3DC FF FF FF FF FF FF FF FF     
   7927 FFFCB3E4 FF FF FF FF FF FF FF FF     
   7928 FFFCB3EC FF FF FF FF FF FF FF FF     
   7929 FFFCB3F4 FF FF FF FF FF FF FF FF     
   7930 FFFCB3FC FF FF FF FF FF FF FF FF     
   7931 FFFCB404 FF FF FF FF FF FF FF FF     
   7932 FFFCB40C FF FF FF FF FF FF FF FF     
   7933 FFFCB414 FF FF FF FF FF FF FF FF     
   7934 FFFCB41C FF FF FF FF FF FF FF FF     
   7935 FFFCB424 FF FF FF FF FF FF FF FF     
   7936 FFFCB42C FF FF FF FF FF FF FF FF     
   7937 FFFCB434 FF FF FF FF FF FF FF FF     
   7938 FFFCB43C FF FF FF FF FF FF FF FF     
   7939 FFFCB444 FF FF FF FF FF FF FF FF     
   7940 FFFCB44C FF FF FF FF FF FF FF FF     
   7941 FFFCB454 FF FF FF FF FF FF FF FF     
   7942 FFFCB45C FF FF FF FF FF FF FF FF     
   7943 FFFCB464 FF FF FF FF FF FF FF FF     
   7944 FFFCB46C FF FF FF FF FF FF FF FF     
   7945 FFFCB474 FF FF FF FF FF FF FF FF     
   7946 FFFCB47C FF FF FF FF FF FF FF FF     
   7947 FFFCB484 FF FF FF FF FF FF FF FF     
   7948 FFFCB48C FF FF FF FF FF FF FF FF     
   7949 FFFCB494 FF FF FF FF FF FF FF FF     
   7950 FFFCB49C FF FF FF FF FF FF FF FF     
   7951 FFFCB4A4 FF FF FF FF FF FF FF FF     
   7952 FFFCB4AC FF FF FF FF FF FF FF FF     
   7953 FFFCB4B4 FF FF FF FF FF FF FF FF     
   7954 FFFCB4BC FF FF FF FF FF FF FF FF     
   7955 FFFCB4C4 FF FF FF FF FF FF FF FF     
   7956 FFFCB4CC FF FF FF FF FF FF FF FF     
   7957 FFFCB4D4 FF FF FF FF FF FF FF FF     
   7958 FFFCB4DC FF FF FF FF FF FF FF FF     
   7959 FFFCB4E4 FF FF FF FF FF FF FF FF     
   7960 FFFCB4EC FF FF FF FF FF FF FF FF     
   7961 FFFCB4F4 FF FF FF FF FF FF FF FF     
   7962 FFFCB4FC FF FF FF FF FF FF FF FF     
   7963 FFFCB504 FF FF FF FF FF FF FF FF     
   7964 FFFCB50C FF FF FF FF FF FF FF FF     
   7965 FFFCB514 FF FF FF FF FF FF FF FF     
   7966 FFFCB51C FF FF FF FF FF FF FF FF     
   7967 FFFCB524 FF FF FF FF FF FF FF FF     
   7968 FFFCB52C FF FF FF FF FF FF FF FF     
   7969 FFFCB534 FF FF FF FF FF FF FF FF     
   7970 FFFCB53C FF FF FF FF FF FF FF FF     
   7971 FFFCB544 FF FF FF FF FF FF FF FF     
   7972 FFFCB54C FF FF FF FF FF FF FF FF     
   7973 FFFCB554 FF FF FF FF FF FF FF FF     
   7974 FFFCB55C FF FF FF FF FF FF FF FF     
   7975 FFFCB564 FF FF FF FF FF FF FF FF     
   7976 FFFCB56C FF FF FF FF FF FF FF FF     
   7977 FFFCB574 FF FF FF FF FF FF FF FF     
   7978 FFFCB57C FF FF FF FF FF FF FF FF     
   7979 FFFCB584 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 81
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7980 FFFCB58C FF FF FF FF FF FF FF FF     
   7981 FFFCB594 FF FF FF FF FF FF FF FF     
   7982 FFFCB59C FF FF FF FF FF FF FF FF     
   7983 FFFCB5A4 FF FF FF FF FF FF FF FF     
   7984 FFFCB5AC FF FF FF FF FF FF FF FF     
   7985 FFFCB5B4 FF FF FF FF FF FF FF FF     
   7986 FFFCB5BC FF FF FF FF FF FF FF FF     
   7987 FFFCB5C4 FF FF FF FF FF FF FF FF     
   7988 FFFCB5CC FF FF FF FF FF FF FF FF     
   7989 FFFCB5D4 FF FF FF FF FF FF FF FF     
   7990 FFFCB5DC FF FF FF FF FF FF FF FF     
   7991 FFFCB5E4 FF FF FF FF FF FF FF FF     
   7992 FFFCB5EC FF FF FF FF FF FF FF FF     
   7993 FFFCB5F4 FF FF FF FF FF FF FF FF     
   7994 FFFCB5FC FF FF FF FF FF FF FF FF     
   7995 FFFCB604 FF FF FF FF FF FF FF FF     
   7996 FFFCB60C FF FF FF FF FF FF FF FF     
   7997 FFFCB614 FF FF FF FF FF FF FF FF     
   7998 FFFCB61C FF FF FF FF FF FF FF FF     
   7999 FFFCB624 FF FF FF FF FF FF FF FF     
   8000 FFFCB62C FF FF FF FF FF FF FF FF     
   8001 FFFCB634 FF FF FF FF FF FF FF FF     
   8002 FFFCB63C FF FF FF FF FF FF FF FF     
   8003 FFFCB644 FF FF FF FF FF FF FF FF     
   8004 FFFCB64C FF FF FF FF FF FF FF FF     
   8005 FFFCB654 FF FF FF FF FF FF FF FF     
   8006 FFFCB65C FF FF FF FF FF FF FF FF     
   8007 FFFCB664 FF FF FF FF FF FF FF FF     
   8008 FFFCB66C FF FF FF FF FF FF FF FF     
   8009 FFFCB674 FF FF FF FF FF FF FF FF     
   8010 FFFCB67C FF FF FF FF FF FF FF FF     
   8011 FFFCB684 FF FF FF FF FF FF FF FF     
   8012 FFFCB68C FF FF FF FF FF FF FF FF     
   8013 FFFCB694 FF FF FF FF FF FF FF FF     
   8014 FFFCB69C FF FF FF FF FF FF FF FF     
   8015 FFFCB6A4 FF FF FF FF FF FF FF FF     
   8016 FFFCB6AC FF FF FF FF FF FF FF FF     
   8017 FFFCB6B4 FF FF FF FF FF FF FF FF     
   8018 FFFCB6BC FF FF FF FF FF FF FF FF     
   8019 FFFCB6C4 FF FF FF FF FF FF FF FF     
   8020 FFFCB6CC FF FF FF FF FF FF FF FF     
   8021 FFFCB6D4 FF FF FF FF FF FF FF FF     
   8022 FFFCB6DC FF FF FF FF FF FF FF FF     
   8023 FFFCB6E4 FF FF FF FF FF FF FF FF     
   8024 FFFCB6EC FF FF FF FF FF FF FF FF     
   8025 FFFCB6F4 FF FF FF FF FF FF FF FF     
   8026 FFFCB6FC FF FF FF FF FF FF FF FF     
   8027 FFFCB704 FF FF FF FF FF FF FF FF     
   8028 FFFCB70C FF FF FF FF FF FF FF FF     
   8029 FFFCB714 FF FF FF FF FF FF FF FF     
   8030 FFFCB71C FF FF FF FF FF FF FF FF     
   8031 FFFCB724 FF FF FF FF FF FF FF FF     
   8032 FFFCB72C FF FF FF FF FF FF FF FF     
   8033 FFFCB734 FF FF FF FF FF FF FF FF     
   8034 FFFCB73C FF FF FF FF FF FF FF FF     
   8035 FFFCB744 FF FF FF FF FF FF FF FF     
   8036 FFFCB74C FF FF FF FF FF FF FF FF     
   8037 FFFCB754 FF FF FF FF FF FF FF FF     
   8038 FFFCB75C FF FF FF FF FF FF FF FF     
   8039 FFFCB764 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 82
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8040 FFFCB76C FF FF FF FF FF FF FF FF     
   8041 FFFCB774 FF FF FF FF FF FF FF FF     
   8042 FFFCB77C FF FF FF FF FF FF FF FF     
   8043 FFFCB784 FF FF FF FF FF FF FF FF     
   8044 FFFCB78C FF FF FF FF FF FF FF FF     
   8045 FFFCB794 FF FF FF FF FF FF FF FF     
   8046 FFFCB79C FF FF FF FF FF FF FF FF     
   8047 FFFCB7A4 FF FF FF FF FF FF FF FF     
   8048 FFFCB7AC FF FF FF FF FF FF FF FF     
   8049 FFFCB7B4 FF FF FF FF FF FF FF FF     
   8050 FFFCB7BC FF FF FF FF FF FF FF FF     
   8051 FFFCB7C4 FF FF FF FF FF FF FF FF     
   8052 FFFCB7CC FF FF FF FF FF FF FF FF     
   8053 FFFCB7D4 FF FF FF FF FF FF FF FF     
   8054 FFFCB7DC FF FF FF FF FF FF FF FF     
   8055 FFFCB7E4 FF FF FF FF FF FF FF FF     
   8056 FFFCB7EC FF FF FF FF FF FF FF FF     
   8057 FFFCB7F4 FF FF FF FF FF FF FF FF     
   8058 FFFCB7FC FF FF FF FF FF FF FF FF     
   8059 FFFCB804 FF FF FF FF FF FF FF FF     
   8060 FFFCB80C FF FF FF FF FF FF FF FF     
   8061 FFFCB814 FF FF FF FF FF FF FF FF     
   8062 FFFCB81C FF FF FF FF FF FF FF FF     
   8063 FFFCB824 FF FF FF FF FF FF FF FF     
   8064 FFFCB82C FF FF FF FF FF FF FF FF     
   8065 FFFCB834 FF FF FF FF FF FF FF FF     
   8066 FFFCB83C FF FF FF FF FF FF FF FF     
   8067 FFFCB844 FF FF FF FF FF FF FF FF     
   8068 FFFCB84C FF FF FF FF FF FF FF FF     
   8069 FFFCB854 FF FF FF FF FF FF FF FF     
   8070 FFFCB85C FF FF FF FF FF FF FF FF     
   8071 FFFCB864 FF FF FF FF FF FF FF FF     
   8072 FFFCB86C FF FF FF FF FF FF FF FF     
   8073 FFFCB874 FF FF FF FF FF FF FF FF     
   8074 FFFCB87C FF FF FF FF FF FF FF FF     
   8075 FFFCB884 FF FF FF FF FF FF FF FF     
   8076 FFFCB88C FF FF FF FF FF FF FF FF     
   8077 FFFCB894 FF FF FF FF FF FF FF FF     
   8078 FFFCB89C FF FF FF FF FF FF FF FF     
   8079 FFFCB8A4 FF FF FF FF FF FF FF FF     
   8080 FFFCB8AC FF FF FF FF FF FF FF FF     
   8081 FFFCB8B4 FF FF FF FF FF FF FF FF     
   8082 FFFCB8BC FF FF FF FF FF FF FF FF     
   8083 FFFCB8C4 FF FF FF FF FF FF FF FF     
   8084 FFFCB8CC FF FF FF FF FF FF FF FF     
   8085 FFFCB8D4 FF FF FF FF FF FF FF FF     
   8086 FFFCB8DC FF FF FF FF FF FF FF FF     
   8087 FFFCB8E4 FF FF FF FF FF FF FF FF     
   8088 FFFCB8EC FF FF FF FF FF FF FF FF     
   8089 FFFCB8F4 FF FF FF FF FF FF FF FF     
   8090 FFFCB8FC FF FF FF FF FF FF FF FF     
   8091 FFFCB904 FF FF FF FF FF FF FF FF     
   8092 FFFCB90C FF FF FF FF FF FF FF FF     
   8093 FFFCB914 FF FF FF FF FF FF FF FF     
   8094 FFFCB91C FF FF FF FF FF FF FF FF     
   8095 FFFCB924 FF FF FF FF FF FF FF FF     
   8096 FFFCB92C FF FF FF FF FF FF FF FF     
   8097 FFFCB934 FF FF FF FF FF FF FF FF     
   8098 FFFCB93C FF FF FF FF FF FF FF FF     
   8099 FFFCB944 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 83
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8100 FFFCB94C FF FF FF FF FF FF FF FF     
   8101 FFFCB954 FF FF FF FF FF FF FF FF     
   8102 FFFCB95C FF FF FF FF FF FF FF FF     
   8103 FFFCB964 FF FF FF FF FF FF FF FF     
   8104 FFFCB96C FF FF FF FF FF FF FF FF     
   8105 FFFCB974 FF FF FF FF FF FF FF FF     
   8106 FFFCB97C FF FF FF FF FF FF FF FF     
   8107 FFFCB984 FF FF FF FF FF FF FF FF     
   8108 FFFCB98C FF FF FF FF FF FF FF FF     
   8109 FFFCB994 FF FF FF FF FF FF FF FF     
   8110 FFFCB99C FF FF FF FF FF FF FF FF     
   8111 FFFCB9A4 FF FF FF FF FF FF FF FF     
   8112 FFFCB9AC FF FF FF FF FF FF FF FF     
   8113 FFFCB9B4 FF FF FF FF FF FF FF FF     
   8114 FFFCB9BC FF FF FF FF FF FF FF FF     
   8115 FFFCB9C4 FF FF FF FF FF FF FF FF     
   8116 FFFCB9CC FF FF FF FF FF FF FF FF     
   8117 FFFCB9D4 FF FF FF FF FF FF FF FF     
   8118 FFFCB9DC FF FF FF FF FF FF FF FF     
   8119 FFFCB9E4 FF FF FF FF FF FF FF FF     
   8120 FFFCB9EC FF FF FF FF FF FF FF FF     
   8121 FFFCB9F4 FF FF FF FF FF FF FF FF     
   8122 FFFCB9FC FF FF FF FF FF FF FF FF     
   8123 FFFCBA04 FF FF FF FF FF FF FF FF     
   8124 FFFCBA0C FF FF FF FF FF FF FF FF     
   8125 FFFCBA14 FF FF FF FF FF FF FF FF     
   8126 FFFCBA1C FF FF FF FF FF FF FF FF     
   8127 FFFCBA24 FF FF FF FF FF FF FF FF     
   8128 FFFCBA2C FF FF FF FF FF FF FF FF     
   8129 FFFCBA34 FF FF FF FF FF FF FF FF     
   8130 FFFCBA3C FF FF FF FF FF FF FF FF     
   8131 FFFCBA44 FF FF FF FF FF FF FF FF     
   8132 FFFCBA4C FF FF FF FF FF FF FF FF     
   8133 FFFCBA54 FF FF FF FF FF FF FF FF     
   8134 FFFCBA5C FF FF FF FF FF FF FF FF     
   8135 FFFCBA64 FF FF FF FF FF FF FF FF     
   8136 FFFCBA6C FF FF FF FF FF FF FF FF     
   8137 FFFCBA74 FF FF FF FF FF FF FF FF     
   8138 FFFCBA7C FF FF FF FF FF FF FF FF     
   8139 FFFCBA84 FF FF FF FF FF FF FF FF     
   8140 FFFCBA8C FF FF FF FF FF FF FF FF     
   8141 FFFCBA94 FF FF FF FF FF FF FF FF     
   8142 FFFCBA9C FF FF FF FF FF FF FF FF     
   8143 FFFCBAA4 FF FF FF FF FF FF FF FF     
   8144 FFFCBAAC FF FF FF FF FF FF FF FF     
   8145 FFFCBAB4 FF FF FF FF FF FF FF FF     
   8146 FFFCBABC FF FF FF FF FF FF FF FF     
   8147 FFFCBAC4 FF FF FF FF FF FF FF FF     
   8148 FFFCBACC FF FF FF FF FF FF FF FF     
   8149 FFFCBAD4 FF FF FF FF FF FF FF FF     
   8150 FFFCBADC FF FF FF FF FF FF FF FF     
   8151 FFFCBAE4 FF FF FF FF FF FF FF FF     
   8152 FFFCBAEC FF FF FF FF FF FF FF FF     
   8153 FFFCBAF4 FF FF FF FF FF FF FF FF     
   8154 FFFCBAFC FF FF FF FF FF FF FF FF     
   8155 FFFCBB04 FF FF FF FF FF FF FF FF     
   8156 FFFCBB0C FF FF FF FF FF FF FF FF     
   8157 FFFCBB14 FF FF FF FF FF FF FF FF     
   8158 FFFCBB1C FF FF FF FF FF FF FF FF     
   8159 FFFCBB24 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 84
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8160 FFFCBB2C FF FF FF FF FF FF FF FF     
   8161 FFFCBB34 FF FF FF FF FF FF FF FF     
   8162 FFFCBB3C FF FF FF FF FF FF FF FF     
   8163 FFFCBB44 FF FF FF FF FF FF FF FF     
   8164 FFFCBB4C FF FF FF FF FF FF FF FF     
   8165 FFFCBB54 FF FF FF FF FF FF FF FF     
   8166 FFFCBB5C FF FF FF FF FF FF FF FF     
   8167 FFFCBB64 FF FF FF FF FF FF FF FF     
   8168 FFFCBB6C FF FF FF FF FF FF FF FF     
   8169 FFFCBB74 FF FF FF FF FF FF FF FF     
   8170 FFFCBB7C FF FF FF FF FF FF FF FF     
   8171 FFFCBB84 FF FF FF FF FF FF FF FF     
   8172 FFFCBB8C FF FF FF FF FF FF FF FF     
   8173 FFFCBB94 FF FF FF FF FF FF FF FF     
   8174 FFFCBB9C FF FF FF FF FF FF FF FF     
   8175 FFFCBBA4 FF FF FF FF FF FF FF FF     
   8176 FFFCBBAC FF FF FF FF FF FF FF FF     
   8177 FFFCBBB4 FF FF FF FF FF FF FF FF     
   8178 FFFCBBBC FF FF FF FF FF FF FF FF     
   8179 FFFCBBC4 FF FF FF FF FF FF FF FF     
   8180 FFFCBBCC FF FF FF FF FF FF FF FF     
   8181 FFFCBBD4 FF FF FF FF FF FF FF FF     
   8182 FFFCBBDC FF FF FF FF FF FF FF FF     
   8183 FFFCBBE4 FF FF FF FF FF FF FF FF     
   8184 FFFCBBEC FF FF FF FF FF FF FF FF     
   8185 FFFCBBF4 FF FF FF FF FF FF FF FF     
   8186 FFFCBBFC FF FF FF FF FF FF FF FF     
   8187 FFFCBC04 FF FF FF FF FF FF FF FF     
   8188 FFFCBC0C FF FF FF FF FF FF FF FF     
   8189 FFFCBC14 FF FF FF FF FF FF FF FF     
   8190 FFFCBC1C FF FF FF FF FF FF FF FF     
   8191 FFFCBC24 FF FF FF FF FF FF FF FF     
   8192 FFFCBC2C FF FF FF FF FF FF FF FF     
   8193 FFFCBC34 FF FF FF FF FF FF FF FF     
   8194 FFFCBC3C FF FF FF FF FF FF FF FF     
   8195 FFFCBC44 FF FF FF FF FF FF FF FF     
   8196 FFFCBC4C FF FF FF FF FF FF FF FF     
   8197 FFFCBC54 FF FF FF FF FF FF FF FF     
   8198 FFFCBC5C FF FF FF FF FF FF FF FF     
   8199 FFFCBC64 FF FF FF FF FF FF FF FF     
   8200 FFFCBC6C FF FF FF FF FF FF FF FF     
   8201 FFFCBC74 FF FF FF FF FF FF FF FF     
   8202 FFFCBC7C FF FF FF FF FF FF FF FF     
   8203 FFFCBC84 FF FF FF FF FF FF FF FF     
   8204 FFFCBC8C FF FF FF FF FF FF FF FF     
   8205 FFFCBC94 FF FF FF FF FF FF FF FF     
   8206 FFFCBC9C FF FF FF FF FF FF FF FF     
   8207 FFFCBCA4 FF FF FF FF FF FF FF FF     
   8208 FFFCBCAC FF FF FF FF FF FF FF FF     
   8209 FFFCBCB4 FF FF FF FF FF FF FF FF     
   8210 FFFCBCBC FF FF FF FF FF FF FF FF     
   8211 FFFCBCC4 FF FF FF FF FF FF FF FF     
   8212 FFFCBCCC FF FF FF FF FF FF FF FF     
   8213 FFFCBCD4 FF FF FF FF FF FF FF FF     
   8214 FFFCBCDC FF FF FF FF FF FF FF FF     
   8215 FFFCBCE4 FF FF FF FF FF FF FF FF     
   8216 FFFCBCEC FF FF FF FF FF FF FF FF     
   8217 FFFCBCF4 FF FF FF FF FF FF FF FF     
   8218 FFFCBCFC FF FF FF FF FF FF FF FF     
   8219 FFFCBD04 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 85
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8220 FFFCBD0C FF FF FF FF FF FF FF FF     
   8221 FFFCBD14 FF FF FF FF FF FF FF FF     
   8222 FFFCBD1C FF FF FF FF FF FF FF FF     
   8223 FFFCBD24 FF FF FF FF FF FF FF FF     
   8224 FFFCBD2C FF FF FF FF FF FF FF FF     
   8225 FFFCBD34 FF FF FF FF FF FF FF FF     
   8226 FFFCBD3C FF FF FF FF FF FF FF FF     
   8227 FFFCBD44 FF FF FF FF FF FF FF FF     
   8228 FFFCBD4C FF FF FF FF FF FF FF FF     
   8229 FFFCBD54 FF FF FF FF FF FF FF FF     
   8230 FFFCBD5C FF FF FF FF FF FF FF FF     
   8231 FFFCBD64 FF FF FF FF FF FF FF FF     
   8232 FFFCBD6C FF FF FF FF FF FF FF FF     
   8233 FFFCBD74 FF FF FF FF FF FF FF FF     
   8234 FFFCBD7C FF FF FF FF FF FF FF FF     
   8235 FFFCBD84 FF FF FF FF FF FF FF FF     
   8236 FFFCBD8C FF FF FF FF FF FF FF FF     
   8237 FFFCBD94 FF FF FF FF FF FF FF FF     
   8238 FFFCBD9C FF FF FF FF FF FF FF FF     
   8239 FFFCBDA4 FF FF FF FF FF FF FF FF     
   8240 FFFCBDAC FF FF FF FF FF FF FF FF     
   8241 FFFCBDB4 FF FF FF FF FF FF FF FF     
   8242 FFFCBDBC FF FF FF FF FF FF FF FF     
   8243 FFFCBDC4 FF FF FF FF FF FF FF FF     
   8244 FFFCBDCC FF FF FF FF FF FF FF FF     
   8245 FFFCBDD4 FF FF FF FF FF FF FF FF     
   8246 FFFCBDDC FF FF FF FF FF FF FF FF     
   8247 FFFCBDE4 FF FF FF FF FF FF FF FF     
   8248 FFFCBDEC FF FF FF FF FF FF FF FF     
   8249 FFFCBDF4 FF FF FF FF FF FF FF FF     
   8250 FFFCBDFC FF FF FF FF FF FF FF FF     
   8251 FFFCBE04 FF FF FF FF FF FF FF FF     
   8252 FFFCBE0C FF FF FF FF FF FF FF FF     
   8253 FFFCBE14 FF FF FF FF FF FF FF FF     
   8254 FFFCBE1C FF FF FF FF FF FF FF FF     
   8255 FFFCBE24 FF FF FF FF FF FF FF FF     
   8256 FFFCBE2C FF FF FF FF FF FF FF FF     
   8257 FFFCBE34 FF FF FF FF FF FF FF FF     
   8258 FFFCBE3C FF FF FF FF FF FF FF FF     
   8259 FFFCBE44 FF FF FF FF FF FF FF FF     
   8260 FFFCBE4C FF FF FF FF FF FF FF FF     
   8261 FFFCBE54 FF FF FF FF FF FF FF FF     
   8262 FFFCBE5C FF FF FF FF FF FF FF FF     
   8263 FFFCBE64 FF FF FF FF FF FF FF FF     
   8264 FFFCBE6C FF FF FF FF FF FF FF FF     
   8265 FFFCBE74 FF FF FF FF FF FF FF FF     
   8266 FFFCBE7C FF FF FF FF FF FF FF FF     
   8267 FFFCBE84 FF FF FF FF FF FF FF FF     
   8268 FFFCBE8C FF FF FF FF FF FF FF FF     
   8269 FFFCBE94 FF FF FF FF FF FF FF FF     
   8270 FFFCBE9C FF FF FF FF FF FF FF FF     
   8271 FFFCBEA4 FF FF FF FF FF FF FF FF     
   8272 FFFCBEAC FF FF FF FF FF FF FF FF     
   8273 FFFCBEB4 FF FF FF FF FF FF FF FF     
   8274 FFFCBEBC FF FF FF FF FF FF FF FF     
   8275 FFFCBEC4 FF FF FF FF FF FF FF FF     
   8276 FFFCBECC FF FF FF FF FF FF FF FF     
   8277 FFFCBED4 FF FF FF FF FF FF FF FF     
   8278 FFFCBEDC FF FF FF FF FF FF FF FF     
   8279 FFFCBEE4 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 86
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8280 FFFCBEEC FF FF FF FF FF FF FF FF     
   8281 FFFCBEF4 FF FF FF FF FF FF FF FF     
   8282 FFFCBEFC FF FF FF FF FF FF FF FF     
   8283 FFFCBF04 FF FF FF FF FF FF FF FF     
   8284 FFFCBF0C FF FF FF FF FF FF FF FF     
   8285 FFFCBF14 FF FF FF FF FF FF FF FF     
   8286 FFFCBF1C FF FF FF FF FF FF FF FF     
   8287 FFFCBF24 FF FF FF FF FF FF FF FF     
   8288 FFFCBF2C FF FF FF FF FF FF FF FF     
   8289 FFFCBF34 FF FF FF FF FF FF FF FF     
   8290 FFFCBF3C FF FF FF FF FF FF FF FF     
   8291 FFFCBF44 FF FF FF FF FF FF FF FF     
   8292 FFFCBF4C FF FF FF FF FF FF FF FF     
   8293 FFFCBF54 FF FF FF FF FF FF FF FF     
   8294 FFFCBF5C FF FF FF FF FF FF FF FF     
   8295 FFFCBF64 FF FF FF FF FF FF FF FF     
   8296 FFFCBF6C FF FF FF FF FF FF FF FF     
   8297 FFFCBF74 FF FF FF FF FF FF FF FF     
   8298 FFFCBF7C FF FF FF FF FF FF FF FF     
   8299 FFFCBF84 FF FF FF FF FF FF FF FF     
   8300 FFFCBF8C FF FF FF FF FF FF FF FF     
   8301 FFFCBF94 FF FF FF FF FF FF FF FF     
   8302 FFFCBF9C FF FF FF FF FF FF FF FF     
   8303 FFFCBFA4 FF FF FF FF FF FF FF FF     
   8304 FFFCBFAC FF FF FF FF FF FF FF FF     
   8305 FFFCBFB4 FF FF FF FF FF FF FF FF     
   8306 FFFCBFBC FF FF FF FF FF FF FF FF     
   8307 FFFCBFC4 FF FF FF FF FF FF FF FF     
   8308 FFFCBFCC FF FF FF FF FF FF FF FF     
   8309 FFFCBFD4 FF FF FF FF FF FF FF FF     
   8310 FFFCBFDC FF FF FF FF FF FF FF FF     
   8311 FFFCBFE4 FF FF FF FF FF FF FF FF     
   8312 FFFCBFEC FF FF FF FF FF FF FF FF     
   8313 FFFCBFF4 FF FF FF FF FF FF FF FF     
   8314 FFFCBFFC FF FF FF FF                 
                                             ;*
                                             ;* Standard jump table. You can change these addresses if you are
                                             ;* customizing this interpreter for a different environment.
                                             ;*
   8319 FFFCC000 6000 0022                   START	BRA.L	CSTART		;Cold Start entry point
   8320 FFFCC004 6000 005A                   GOWARM	BRA.L	WSTART		;Warm Start entry point
   8321 FFFCC008 6000 0B68                   GOOUT	BRA.L	OUTC		;Jump to character-out routine
   8322 FFFCC00C 6000 0B74                   GOIN	BRA.L	INC		;Jump to character-in routine
   8323 FFFCC010 6000 0B86                   GOAUXO	BRA.L	AUXOUT		;Jump to auxiliary-out routine
   8324 FFFCC014 6000 0B94                   GOAUXI	BRA.L	AUXIN		;Jump to auxiliary-in routine
   8325 FFFCC018 6000 0BA6                   GOBYE	BRA.L	BYEBYE		;Jump to monitor, DOS, etc.
                                             ;*
                                             ;* Modifiable system constants:
                                             ;*
   8329 FFFCC01C 00200000                    TXTBGN	DC.L	0x200000	;beginning of program memory
   8330 FFFCC020 1E000000                    ENDMEM	DC.L	0x1E000000	;	end of available memory
                                             ;*
                                             ;* The main interpreter starts here:
                                             ;*
   8334 FFFCC024                             CSTART:
   8335 FFFCC024 41F9 FFFC C000              	LEA		START,A0
   8336 FFFCC02A 21C8 0600                   	MOVE.L	A0,RANPNT
   8337 FFFCC02E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;initialize stack pointer
   8338 FFFCC034 4DF9 FFFC CBC6              	LEA		INITMSG,A6	;tell who we are
   8339 FFFCC03A 6100 0B2A                   	BSR.L	PRMESG
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 87
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8340 FFFCC03E 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;init. end-of-program pointer
   8341 FFFCC046 2039 FFFC C020              	MOVE.L	ENDMEM,D0	;get address of end of memory
   8342 FFFCC04C 0480 0000 0800              	SUB.L	#2048,D0	;reserve 2K for the stack
   8343 FFFCC052 21C0 062C                   	MOVE.L	D0,STKLMT
   8344 FFFCC056 0480 0000 006C              	SUB.L	#108,D0 	;reserve variable area (27 long words)
   8345 FFFCC05C 21C0 0628                   	MOVE.L	D0,VARBGN
   8346 FFFCC060                             WSTART:
   8347 FFFCC060 4280                        	CLR.L	D0		;initialize internal variables
   8348 FFFCC062 21C0 0610                   	MOVE.L	D0,LOPVAR
   8349 FFFCC066 21C0 0608                   	MOVE.L	D0,STKGOS
   8350 FFFCC06A 21C0 0604                   	MOVE.L	D0,CURRNT	;current line number pointer = 0
   8351 FFFCC06E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;init S.P. again, just in case
   8352 FFFCC074 4DF9 FFFC CBEC              	LEA	OKMSG,A6	;display "OK"
   8353 FFFCC07A 6100 0AEA                   	BSR.L	PRMESG
   8354 FFFCC07E                             ST3:
   8355 FFFCC07E 103C 003E                   	MOVE.B	#'>',D0  ;       Prompt with a '>' and
   8356 FFFCC082 6100 0810                   	BSR.L	GETLN	;	read a line.
   8357 FFFCC086 6100 0A7A                   	BSR.L	TOUPBUF ;	convert to upper case
   8358 FFFCC08A 2848                        	MOVE.L	A0,A4	;	save pointer to end of line
   8359 FFFCC08C 41F8 0630                   	LEA	BUFFER,A0	;point to the beginning of line
   8360 FFFCC090 6100 0A2C                   	BSR.L	TSTNUM	;	is there a number there?
   8361 FFFCC094 6100 0A60                   	BSR.L	IGNBLK	;	skip trailing blanks
   8362 FFFCC098 4A81                        	TST	D1		;does line no. exist? (or nonzero?)
   8363 FFFCC09A 6700 011A                   	BEQ.L	DIRECT	;	if not, it's a direct statement
   8364 FFFCC09E B2BC 0000 FFFF              	CMP.L	#$FFFF,D1	;see if line no. is <= 16 bits
   8365 FFFCC0A4 6400 07E4                   	BCC.L	QHOW		;if not, we've overflowed
   8366 FFFCC0A8 1101                        	MOVE.B	D1,-(A0)	;store the binary line no.
   8367 FFFCC0AA E099                        	ROR	#8,D1		;(Kludge to store a word on a
   8368 FFFCC0AC 1101                        	MOVE.B	D1,-(A0)	;possible byte boundary)
   8369 FFFCC0AE E199                        	ROL	#8,D1
   8370 FFFCC0B0 6100 0882                   	BSR.L	FNDLN	;	find this line in save area
   8371 FFFCC0B4 2A49                        	MOVE.L	A1,A5	;	save possible line pointer
   8372 FFFCC0B6 6612                        	BNE	ST4				;	if not found, insert
   8373 FFFCC0B8 6100 08A2                   	BSR.L	FNDNXT		;find the next line (into A1)
   8374 FFFCC0BC 244D                        	MOVE.L	A5,A2		;pointer to line to be deleted
   8375 FFFCC0BE 2678 0624                   	MOVE.L	TXTUNF,A3	;points to top of save area
   8376 FFFCC0C2 6100 08A2                   	BSR.L	MVUP		;move up to delete
   8377 FFFCC0C6 21CA 0624                   	MOVE.L	A2,TXTUNF	;update the end pointer
   8378 FFFCC0CA                             ST4:
   8379 FFFCC0CA 200C                        	MOVE.L	A4,D0		;calculate the length of new line
   8380 FFFCC0CC 9088                        	SUB.L	A0,D0
   8381 FFFCC0CE B0BC 0000 0003              	CMP.L	#3,D0		;is it just a line no. & CR?
   8382 FFFCC0D4 67A8                        	BEQ	ST3				;if so, it was just a delete
   8383 FFFCC0D6 2678 0624                   	MOVE.L	TXTUNF,A3	;compute new end
   8384 FFFCC0DA 2C4B                        	MOVE.L	A3,A6
   8385 FFFCC0DC D7C0                        	ADD.L	D0,A3
   8386 FFFCC0DE 2038 0628                   	MOVE.L	VARBGN,D0	;see if there's enough room
   8387 FFFCC0E2 B08B                        	CMP.L	A3,D0
   8388 FFFCC0E4 6300 079A                   	BLS.L	QSORRY		;if not, say so
   8389 FFFCC0E8 21CB 0624                   	MOVE.L	A3,TXTUNF	;if so, store new end position
   8390 FFFCC0EC 224E                        	MOVE.L	A6,A1		;points to old unfilled area
   8391 FFFCC0EE 244D                        	MOVE.L	A5,A2		;points to beginning of move area
   8392 FFFCC0F0 6100 087E                   	BSR.L	MVDOWN		;move things out of the way
   8393 FFFCC0F4 2248                        	MOVE.L	A0,A1		;set up to do the insertion
   8394 FFFCC0F6 244D                        	MOVE.L	A5,A2
   8395 FFFCC0F8 264C                        	MOVE.L	A4,A3
   8396 FFFCC0FA 6100 086A                   	BSR.L	MVUP		;do it
   8397 FFFCC0FE 6000 FF7E                   	BRA	ST3		;go back and get another line
                                             
                                             ;*
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 88
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*******************************************************************
                                             ;*
                                             ;* *** Tables *** DIRECT *** EXEC ***
                                             ;*
                                             ;* This section of the code tests a string against a table. When
                                             ;* a match is found, control is transferred to the section of
                                             ;* code according to the table.
                                             ;*
                                             ;* At 'EXEC', A0 should point to the string, A1 should point to
                                             ;* the character table, and A2 should point to the execution
                                             ;* table. At 'DIRECT', A0 should point to the string, A1 and
                                             ;* A2 will be set up to point to TAB1 and TAB1.1, which are
                                             ;* the tables of all direct and statement commands.
                                             ;*
                                             ;* A '.' in the string will terminate the test and the partial
                                             ;* match will be considered as a match, e.g. 'P.', 'PR.','PRI.',
                                             ;* 'PRIN.', or 'PRINT' will all match 'PRINT'.
                                             ;*
                                             ;* There are two tables: the character table and the execution
                                             ;* table. The character table consists of any number of text items.
                                             ;* Each item is a string of characters with the last character's
                                             ;* high bit set to one. The execution table holds a 16-bit
                                             ;* execution addresses that correspond to each entry in the
                                             ;* character table.
                                             ;*
                                             ;* The end of the character table is a 0 byte which corresponds
                                             ;* to the default routine in the execution table, which is
                                             ;* executed if none of the other table items are matched.
                                             ;*
                                             ;* Character-matching tables:
   8430 FFFCC102                             TAB1:
   8431 FFFCC102 4C 49 53 D4                 	DC.B	'LIS',('T'+0x80) ;        Direct commands
   8432 FFFCC106 4C 4F 41 C4                 	DC.B	'LOA',('D'+0x80)
   8433 FFFCC10A 4E 45 D7                    	DC.B	'NE',('W'+0x80)
   8434 FFFCC10D 52 55 CE                    	DC.B	'RU',('N'+0x80)
   8435 FFFCC110 53 41 56 C5                 	DC.B	'SAV',('E'+0x80)
   8436 FFFCC114                             TAB2:
   8437 FFFCC114 4E 45 58 D4                 	DC.B	'NEX',('T'+0x80)  ;       Direct / statement
   8438 FFFCC118 4C 45 D4                    	DC.B	'LE',('T'+0x80)
   8439 FFFCC11B 49 C6                       	DC.B	'I',('F'+0x80)
   8440 FFFCC11D 47 4F 54 CF                 	DC.B	'GOT',('O'+0x80)
   8441 FFFCC121 47 4F 53 55 C2              	DC.B	'GOSU',('B'+0x80)
   8442 FFFCC126 52 45 54 55 52 CE           	DC.B	'RETUR',('N'+0x80)
   8443 FFFCC12C 52 45 CD                    	DC.B	'RE',('M'+0x80)
   8444 FFFCC12F 46 4F D2                    	DC.B	'FO',('R'+0x80)
   8445 FFFCC132 49 4E 50 55 D4              	DC.B	'INPU',('T'+0x80)
   8446 FFFCC137 50 52 49 4E D4              	DC.B	'PRIN',('T'+0x80)
   8447 FFFCC13C 50 4F 4B C5                 	DC.B	'POK',('E'+0x80)
   8448 FFFCC140 53 54 4F D0                 	DC.B	'STO',('P'+0x80)
   8449 FFFCC144 42 59 C5                    	DC.B	'BY',('E'+0x80)
   8450 FFFCC147 43 41 4C CC                 	DC.B	'CAL',('L'+0x80)
   8451 FFFCC14B 00                          	DC.B	0
   8452 FFFCC14C                             TAB4:
   8453 FFFCC14C 50 45 45 CB                 	DC.B	'PEE',('K'+0x80)   ;      Functions
   8454 FFFCC150 52 4E C4                    	DC.B	'RN',('D'+0x80)
   8455 FFFCC153 41 42 D3                    	DC.B	'AB',('S'+0x80)
   8456 FFFCC156 53 49 5A C5                 	DC.B	'SIZ',('E'+0x80)
   8457 FFFCC15A 00                          	DC.B	0
   8458 FFFCC15B                             TAB5:
   8459 FFFCC15B 54 CF                       	DC.B	'T',('O'+0x80)      ;     "TO" in "FOR"
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 89
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8460 FFFCC15D 00                          	DC.B	0
   8461 FFFCC15E                             TAB6:
   8462 FFFCC15E 53 54 45 D0                 	DC.B	'STE',('P'+0x80)     ;    "STEP" in "FOR"
   8463 FFFCC162 00                          	DC.B	0
   8464 FFFCC163                             TAB8:
   8465 FFFCC163 3E BD                       	DC.B	'>',('='+0x80)        ;   Relational operators
   8466 FFFCC165 3C BE                       	DC.B	'<',('>'+0x80)
   8467 FFFCC167 BE                          	DC.B	('>'+0x80)
   8468 FFFCC168 BD                          	DC.B	('='+0x80)
   8469 FFFCC169 3C BD                       	DC.B	'<',('='+0x80)
   8470 FFFCC16B BC                          	DC.B	('<'+0x80)
   8471 FFFCC16C 00                          	DC.B	0
   8472 FFFCC16D 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             ;* Execution address tables:
   8475 FFFCC16E                             TAB1_1:
   8476 FFFCC16E C266                        	DC.W	LIST_			;Direct commands
   8477 FFFCC170 C4A8                        	DC.W	LOAD
   8478 FFFCC172 C200                        	DC.W	NEW
   8479 FFFCC174 C214                        	DC.W	RUN
   8480 FFFCC176 C50C                        	DC.W	SAVE
   8481 FFFCC178                             TAB2_1:
   8482 FFFCC178 C3B4                        	DC.W	NEXT			;Direct / statement
   8483 FFFCC17A C498                        	DC.W	LET
   8484 FFFCC17C C404                        	DC.W	IF
   8485 FFFCC17E C252                        	DC.W	GOTO
   8486 FFFCC180 C2FC                        	DC.W	GOSUB
   8487 FFFCC182 C324                        	DC.W	RETURN
   8488 FFFCC184 C402                        	DC.W	REM
   8489 FFFCC186 C342                        	DC.W	FOR
   8490 FFFCC188 C42A                        	DC.W	INPUT
   8491 FFFCC18A C292                        	DC.W	PRINT
   8492 FFFCC18C C590                        	DC.W	POKE
   8493 FFFCC18E C20C                        	DC.W	STOP_
   8494 FFFCC190 C018                        	DC.W	GOBYE
   8495 FFFCC192 C5AC                        	DC.W	CALL
   8496 FFFCC194 C492                        	DC.W	DEFLT
   8497 FFFCC196                             TAB4_1:
   8498 FFFCC196 C7A2                        	DC.W	PEEK			;Functions
   8499 FFFCC198 C7AE                        	DC.W	RND
   8500 FFFCC19A C7E4                        	DC.W	ABS
   8501 FFFCC19C C7F4                        	DC.W	SIZE_
   8502 FFFCC19E C6A6                        	DC.W	XP40
   8503 FFFCC1A0                             TAB5_1:
   8504 FFFCC1A0 C35E                        	DC.W	FR1		;	"TO" in "FOR"
   8505 FFFCC1A2 C83E                        	DC.W	QWHAT
   8506 FFFCC1A4                             TAB6_1:
   8507 FFFCC1A4 C376                        	DC.W	FR2		;	"STEP" in "FOR"
   8508 FFFCC1A6 C37C                        	DC.W	FR3
   8509 FFFCC1A8                             TAB8_1:
   8510 FFFCC1A8 C5D8                        	DC.W	XP11;	>=		Relational operators
   8511 FFFCC1AA C5E0                        	DC.W	XP12	;<>
   8512 FFFCC1AC C5E8                        	DC.W	XP13	;>
   8513 FFFCC1AE C5F8                        	DC.W	XP15	;=
   8514 FFFCC1B0 C5F0                        	DC.W	XP14	;<=
   8515 FFFCC1B2 C602                        	DC.W	XP16	;<
   8516 FFFCC1B4 C614                        	DC.W	XP17
                                             ;*
   8518 FFFCC1B6                             DIRECT:
   8519 FFFCC1B6 43F9 FFFC C102              	LEA	TAB1,A1
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 90
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8520 FFFCC1BC 45F9 FFFC C16E              	LEA	TAB1_1,A2
   8521 FFFCC1C2                             EXEC:
   8522 FFFCC1C2 6100 0932                   	BSR.L	IGNBLK;		ignore leading blanks
   8523 FFFCC1C6 2648                        	MOVE.L	A0,A3		;save the pointer
   8524 FFFCC1C8 4202                        	CLR.B	D2		;clear match flag
   8525 FFFCC1CA                             EXLP:
   8526 FFFCC1CA 1018                        	MOVE.B	(A0)+,D0;	get the program character
   8527 FFFCC1CC 1211                        	MOVE.B	(A1),D1 	;get the table character
   8528 FFFCC1CE 6604                        	BNE	EXNGO		;If end of table,
   8529 FFFCC1D0 204B                        	MOVE.L	A3,A0	;;	restore the text pointer and...
   8530 FFFCC1D2 6024                        	BRA	EXGO		;execute the default.
   8531 FFFCC1D4                             EXNGO:
   8532 FFFCC1D4 1600                        	MOVE.B	D0,D3	;	Else check for period...
   8533 FFFCC1D6 C602                        	AND.B	D2,D3		;and a match.
   8534 FFFCC1D8 B63C 002E                   	CMP.B	#'.',D3
   8535 FFFCC1DC 671A                        	BEQ	EXGO		;if so, execute
   8536 FFFCC1DE 0201 007F                   	AND.B	#0x7F,D1 ;	ignore the table's high bit
   8537 FFFCC1E2 B200                        	CMP.B	D0,D1	;	is there a match?
   8538 FFFCC1E4 670C                        	BEQ	EXMAT
   8539 FFFCC1E6 548A                        	ADDQ.L	#2,A2	;	if not, try the next entry
   8540 FFFCC1E8 204B                        	MOVE.L	A3,A0	;	reset the program pointer
   8541 FFFCC1EA 4202                        	CLR.B	D2		;sorry, no match
   8542 FFFCC1EC                             EX1:
   8543 FFFCC1EC 4A19                        	TST.B	(A1)+	;	get to the end of the entry
   8544 FFFCC1EE 6AFC                        	BPL	EX1
   8545 FFFCC1F0 60D8                        	BRA	EXLP		;back for more matching
   8546 FFFCC1F2                             EXMAT:
   8547 FFFCC1F2 74FF                        	MOVEQ	#-1,D2;		we've got a match so far
   8548 FFFCC1F4 4A19                        	TST.B	(A1)+	;	end of table entry?
   8549 FFFCC1F6 6AD2                        	BPL	EXLP		;if not, go back for more
   8550 FFFCC1F8                             EXGO:
   8551 FFFCC1F8 47F8 0000                   	LEA	0,A3	;	execute the appropriate routine
   8552 FFFCC1FC 2652                        	MOVE	(A2),A3
   8553 FFFCC1FE 4ED3                        	JMP	(A3)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* What follows is the code to execute direct and statement
                                             ;* commands. Control is transferred to these points via the command
                                             ;* table lookup code of 'DIRECT' and 'EXEC' in the last section.
                                             ;* After the command is executed, control is transferred to other
                                             ;* sections as follows:
                                             ;*
                                             ;* For 'LIST', 'NEW', and 'STOP': go back to the warm start point.
                                             ;* For 'RUN': go execute the first stored line if any; else go
                                             ;* back to the warm start point.
                                             ;* For 'GOTO' and 'GOSUB': go execute the target line.
                                             ;* For 'RETURN' and 'NEXT'; go back to saved return line.
                                             ;* For all others: if 'CURRNT' is 0, go to warm start; else go;
                                             ;* execute next command. (This is done in 'FINISH'.)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** NEW *** STOP *** RUN (& friends) *** GOTO ***
                                             ;*
                                             ;* 'NEW<CR>' sets TXTUNF to point to TXTBGN
                                             ;*
                                             ;* 'STOP<CR>' goes back to WSTART
                                             ;*
                                             ;* 'RUN<CR>' finds the first stored line, stores its address
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 91
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* in CURRNT, and starts executing it. Note that only those
                                             ;* commands in TAB2 are legal for a stored program.
                                             ;*
                                             ;* There are 3 more entries in 'RUN':
                                             ;* 'RUNNXL' finds next line, stores it's address and executes it.
                                             ;* 'RUNTSL' stores the address of this line and executes it.
                                             ;* 'RUNSML' continues the execution on same line.
                                             ;*
                                             ;* 'GOTO expr<CR>' evaluates the expression, finds the target
                                             ;* line, and jumps to 'RUNTSL' to do it.
                                             ;*
   8591 FFFCC200                             NEW:
   8592 FFFCC200 6100 0630                   	BSR.L	ENDCHK
   8593 FFFCC204 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;set the end pointer
                                             
   8595 FFFCC20C                             STOP_:
   8596 FFFCC20C 6100 0624                   	BSR.L	ENDCHK
   8597 FFFCC210 6000 FE4E                   	BRA	WSTART
                                             
   8599 FFFCC214                             RUN:
   8600 FFFCC214 6100 061C                   	BSR.L	ENDCHK
   8601 FFFCC218 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to beginning
   8602 FFFCC21E 21C8 0604                   	MOVE.L	A0,CURRNT
                                             
   8604 FFFCC222                             RUNNXL:
   8605 FFFCC222 4AB8 0604                   	TST.L	CURRNT	;	executing a program?
   8606 FFFCC226 6700 FE38                   	BEQ.L	WSTART		;if not, we've finished a direct stat.
   8607 FFFCC22A 4281                        	CLR.L	D1		;else find the next line number
   8608 FFFCC22C 2248                        	MOVE.L	A0,A1
   8609 FFFCC22E 6100 0714                   	BSR.L	FNDLNP
   8610 FFFCC232 6500 FE2C                   	BCS	WSTART		;if we've fallen off the end, stop
                                             
   8612 FFFCC236                             RUNTSL:
   8613 FFFCC236 21C9 0604                   	MOVE.L	A1,CURRNT	;set CURRNT to point to the line no.
   8614 FFFCC23A 2049                        	MOVE.L	A1,A0		;set the text pointer to
   8615 FFFCC23C 5488                        	ADDQ.L	#2,A0		;the start of the line text
                                             
   8617 FFFCC23E                             RUNSML:
   8618 FFFCC23E 6100 090E                   	BSR.L	CHKIO	;	see if a control-C was pressed
   8619 FFFCC242 43F9 FFFC C114              	LEA	TAB2,A1 	;find command in TAB2
   8620 FFFCC248 45F9 FFFC C178              	LEA	TAB2_1,A2
   8621 FFFCC24E 6000 FF72                   	BRA	EXEC		;and execute it
                                             
   8623 FFFCC252                             GOTO:
   8624 FFFCC252 6100 036E                   	BSR.L	EXPR	;	evaluate the following expression
   8625 FFFCC256 6100 05DA                   	BSR.L	ENDCHK		;must find end of line
   8626 FFFCC25A 2200                        	MOVE.L	D0,D1
   8627 FFFCC25C 6100 06D6                   	BSR.L	FNDLN		;find the target line
   8628 FFFCC260 6600 0628                   	BNE.L	QHOW		;no such line no.
   8629 FFFCC264 60D0                        	BRA	RUNTSL		;go do it
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LIST *** PRINT ***
                                             ;*
                                             ;* LIST has two forms:
                                             ;* 'LIST<CR>' lists all saved lines
                                             ;* 'LIST #<CR>' starts listing at the line #
                                             ;* Control-S pauses the listing, control-C stops it.
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 92
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
                                             ;* PRINT command is 'PRINT ....:' or 'PRINT ....<CR>'
                                             ;* where '....' is a list of expressions, formats, back-arrows,
                                             ;* and strings.	These items a separated by commas.
                                             ;*
                                             ;* A format is a pound sign followed by a number.  It controls
                                             ;* the number of spaces the value of an expression is going to
                                             ;* be printed in.  It stays effective for the rest of the print
                                             ;* command unless changed by another format.  If no format is
                                             ;* specified, 11 positions will be used.
                                             ;*
                                             ;* A string is quoted in a pair of single- or double-quotes.
                                             ;*
                                             ;* An underline (back-arrow) means generate a <CR> without a <LF>
                                             ;*
                                             ;* A <CR LF> is generated after the entire list has been printed
                                             ;* or if the list is empty.  If the list ends with a semicolon,
                                             ;* however, no <CR LF> is generated.
                                             ;*
                                             
   8660 FFFCC266                             LIST_:
   8661 FFFCC266 6100 0856                   	BSR.L	TSTNUM	;	see if there's a line no.
   8662 FFFCC26A 6100 05C6                   	BSR.L	ENDCHK		;if not, we get a zero
   8663 FFFCC26E 6100 06C4                   	BSR.L	FNDLN		;find this or next line
   8664 FFFCC272                             LS1:
   8665 FFFCC272 6500 FDEC                   	BCS	WSTART		;warm start if we passed the end
   8666 FFFCC276 6100 0810                   	BSR.L	PRTLN	;	print the line
   8667 FFFCC27A 6100 08D2                   	BSR.L	CHKIO	;	check for listing halt request
   8668 FFFCC27E 670C                        	BEQ	LS3
   8669 FFFCC280 B03C 0013                   	CMP.B	#CTRLS,D0	;pause the listing?
   8670 FFFCC284 6606                        	BNE	LS3
   8671 FFFCC286                             LS2:
   8672 FFFCC286 6100 08C6                   	BSR.L	CHKIO		;if so, wait for another keypress
   8673 FFFCC28A 67FA                        	BEQ	LS2
   8674 FFFCC28C                             LS3:
   8675 FFFCC28C 6100 06B6                   	BSR.L	FNDLNP		;find the next line
   8676 FFFCC290 60E0                        	BRA	LS1
                                             
   8678 FFFCC292                             PRINT:
   8679 FFFCC292 780B                        	MOVE	#11,D4	;	D4 = number of print spaces
   8680 FFFCC294 6100 080E                   	BSR.L	TSTC		;if null list and ":"
   8681 FFFCC298 3A 07                       	DC.B	':',PR2-$
   8682 FFFCC29A 6100 08C4                   	BSR.L	CRLF		;give CR-LF and continue
   8683 FFFCC29E 609E                        	BRA	RUNSML		;execution on the same line
   8684 FFFCC2A0                             PR2:
   8685 FFFCC2A0 6100 0802                   	BSR.L	TSTC		;if null list and <CR>
   8686 FFFCC2A4 0D 09                       	DC.B	CR,PR0-$
   8687 FFFCC2A6 6100 08B8                   	BSR.L	CRLF		;also give CR-LF and
   8688 FFFCC2AA 6000 FF76                   	BRA	RUNNXL		;execute the next line
   8689 FFFCC2AE                             PR0:
   8690 FFFCC2AE 6100 07F4                   	BSR.L	TSTC		;else is it a format?
   8691 FFFCC2B2 23 09                       	DC.B	'#',PR1-$
   8692 FFFCC2B4 6100 030C                   	BSR.L	EXPR		;yes, evaluate expression
   8693 FFFCC2B8 2800                        	MOVE	D0,D4		;and save it as print width
   8694 FFFCC2BA 6016                        	BRA	PR3		;look for more to print
   8695 FFFCC2BC                             PR1:
   8696 FFFCC2BC 6100 07E6                   	BSR.L	TSTC		;is character expression? (MRL)
   8697 FFFCC2C0 24 0B                       	DC.B	'$',PR4-$
   8698 FFFCC2C2 6100 02FE                   	BSR.L	EXPR		;yep. Evaluate expression (MRL)
   8699 FFFCC2C6 6100 FD40                   	BSR	GOOUT		;print low byte (MRL)
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 93
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8700 FFFCC2CA 6006                        	BRA	PR3		;look for more. (MRL)
   8701 FFFCC2CC                             PR4:
   8702 FFFCC2CC 6100 0706                   	BSR.L	QTSTG	;	is it a string?
   8703 FFFCC2D0 6012                        	BRA.S	PR8		;if not, must be an expression
   8704 FFFCC2D2                             PR3:
   8705 FFFCC2D2 6100 07D0                   	BSR.L	TSTC	;	if ",", go find next
   8706 FFFCC2D6 2C 07                       	DC.B	',',PR6-$
   8707 FFFCC2D8 6100 053E                   	BSR.L	FIN		;in the list.
   8708 FFFCC2DC 60D0                        	BRA	PR0
   8709 FFFCC2DE                             PR6:
   8710 FFFCC2DE 6100 0880                   	BSR.L	CRLF	;	list ends here
   8711 FFFCC2E2 6010                        	BRA	FINISH
   8712 FFFCC2E4                             PR8:
   8713 FFFCC2E4 2F04                        	MOVE	D4,-(SP)	;save the width value
   8714 FFFCC2E6 6100 02DA                   	BSR.L	EXPR		;evaluate the expression
   8715 FFFCC2EA 281F                        	MOVE	(SP)+,D4	;restore the width
   8716 FFFCC2EC 2200                        	MOVE.L	D0,D1
   8717 FFFCC2EE 6100 0724                   	BSR.L	PRTNUM		;print its value
   8718 FFFCC2F2 60DE                        	BRA	PR3		;more to print?
                                             
   8720 FFFCC2F4                             FINISH:
   8721 FFFCC2F4 6100 0522                   	BSR.L	FIN	;	Check end of command
   8722 FFFCC2F8 6000 0544                   	BRA.L	QWHAT	;	print "What?" if wrong
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GOSUB *** & RETURN ***
                                             ;*
                                             ;* 'GOSUB expr:' or 'GOSUB expr<CR>' is like the 'GOTO' command,
                                             ;* except that the current text pointer, stack pointer, etc. are
                                             ;* saved so that execution can be continued after the subroutine
                                             ;* 'RETURN's.  In order that 'GOSUB' can be nested (and even
                                             ;* recursive), the save area must be stacked.  The stack pointer
                                             ;* is saved in 'STKGOS'.  The old 'STKGOS' is saved on the stack.
                                             ;* If we are in the main routine, 'STKGOS' is zero (this was done
                                             ;* in the initialization section of the interpreter), but we still
                                             ;* save it as a flag for no further 'RETURN's.
                                             ;*
                                             ;* 'RETURN<CR>' undoes everything that 'GOSUB' did, and thus
                                             ;* returns the execution to the command after the most recent
                                             ;* 'GOSUB'.  If 'STKGOS' is zero, it indicates that we never had
                                             ;* a 'GOSUB' and is thus an error.
                                             ;*
   8744 FFFCC2FC                             GOSUB:
   8745 FFFCC2FC 6100 0694                   	BSR.L	PUSHA	;	save the current 'FOR' parameters
   8746 FFFCC300 6100 02C0                   	BSR.L	EXPR		;get line number
   8747 FFFCC304 2F08                        	MOVE.L	A0,-(SP)	;save text pointer
   8748 FFFCC306 2200                        	MOVE.L	D0,D1
   8749 FFFCC308 6100 062A                   	BSR.L	FNDLN		;find the target line
   8750 FFFCC30C 6600 057E                   	BNE.L	AHOW		;if not there, say "How?"
   8751 FFFCC310 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;found it, save old 'CURRNT'...
   8752 FFFCC314 2F38 0608                   	MOVE.L	STKGOS,-(SP)	;and 'STKGOS'
   8753 FFFCC318 42B8 0610                   	CLR.L	LOPVAR		;load new values
   8754 FFFCC31C 21CF 0608                   	MOVE.L	SP,STKGOS
   8755 FFFCC320 6000 FF14                   	BRA	RUNTSL
                                             
   8757 FFFCC324                             RETURN:
   8758 FFFCC324 6100 050C                   	BSR.L	ENDCHK	;	there should be just a <CR>
   8759 FFFCC328 2238 0608                   	MOVE.L	STKGOS,D1	;get old stack pointer
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 94
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8760 FFFCC32C 6700 0510                   	BEQ.L	QWHAT		;if zero, it doesn't exist
   8761 FFFCC330 2E41                        	MOVE.L	D1,SP		;else restore it
   8762 FFFCC332 21DF 0608                   	MOVE.L	(SP)+,STKGOS	;and the old 'STKGOS'
   8763 FFFCC336 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;and the old 'CURRNT'
   8764 FFFCC33A 205F                        	MOVE.L	(SP)+,A0	;and the old text pointer
   8765 FFFCC33C 6100 063A                   	BSR.L	POPA		;and the old 'FOR' parameters
   8766 FFFCC340 60B2                        	BRA	FINISH		;and we are back home
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** FOR *** & NEXT ***
                                             ;*
                                             ;* 'FOR' has two forms:
                                             ;* 'FOR var=exp1 TO exp2 STEP exp1' and 'FOR var=exp1 TO exp2'
                                             ;* The second form means the same thing as the first form with a
                                             ;* STEP of positive 1.  The interpreter will find the variable 'var'
                                             ;* and set its value to the current value of 'exp1'.  It also
                                             ;* evaluates 'exp2' and 'exp1' and saves all these together with
                                             ;* the text pointer, etc. in the 'FOR' save area, which consisits of
                                             ;* 'LOPVAR', 'LOPINC', 'LOPLMT', 'LOPLN', and 'LOPPT'.  If there is
                                             ;* already something in the save area (indicated by a non-zero
                                             ;* 'LOPVAR'), then the old save area is saved on the stack before
                                             ;* the new values are stored.  The interpreter will then dig in the
                                             ;* stack and find out if this same variable was used in another
                                             ;* currently active 'FOR' loop.  If that is the case, then the old
                                             ;* 'FOR' loop is deactivated. (i.e. purged from the stack)
                                             ;*
                                             ;* 'NEXT var' serves as the logical (not necessarily physical) end
                                             ;* of the 'FOR' loop.  The control variable 'var' is checked with
                                             ;* the 'LOPVAR'.  If they are not the same, the interpreter digs in
                                             ;* the stack to find the right one and purges all those that didn't
                                             ;* match.  Either way, it then adds the 'STEP' to that variable and
                                             ;* checks the result with against the limit value.  If it is within
                                             ;* the limit, control loops back to the command following the
                                             ;* 'FOR'.  If it's outside the limit, the save area is purged and
                                             ;* execution continues.
                                             ;*
   8798 FFFCC342                             FOR:
   8799 FFFCC342 6100 064E                   	BSR.L	PUSHA		;save the old 'FOR' save area
   8800 FFFCC346 6100 04B6                   	BSR.L	SETVAL		;set the control variable
   8801 FFFCC34A 21CE 0610                   	MOVE.L	A6,LOPVAR	;save its address
   8802 FFFCC34E 43F9 FFFC C15B              	LEA	TAB5,A1 	;use 'EXEC' to test for 'TO'
   8803 FFFCC354 45F9 FFFC C1A0              	LEA	TAB5_1,A2
   8804 FFFCC35A 6000 FE66                   	BRA	EXEC
   8805 FFFCC35E                             FR1:
   8806 FFFCC35E 6100 0262                   	BSR.L	EXPR		;evaluate the limit
   8807 FFFCC362 21C0 0618                   	MOVE.L	D0,LOPLMT	;save that
   8808 FFFCC366 43F9 FFFC C15E              	LEA	TAB6,A1 	;use 'EXEC' to look for the
   8809 FFFCC36C 45F9 FFFC C1A4              	LEA	TAB6_1,A2	;word 'STEP'
   8810 FFFCC372 6000 FE4E                   	BRA	EXEC
   8811 FFFCC376                             FR2:
   8812 FFFCC376 6100 024A                   	BSR.L	EXPR	;	found it, get the step value
   8813 FFFCC37A 6002                        	BRA	FR4
   8814 FFFCC37C                             FR3:
   8815 FFFCC37C 7001                        	MOVEQ	#1,D0	;	not found, step defaults to 1
   8816 FFFCC37E                             FR4:
   8817 FFFCC37E 21C0 0614                   	MOVE.L	D0,LOPINC	;save that too
   8818 FFFCC382                             FR5:
   8819 FFFCC382 21F8 0604 061C              	MOVE.L	CURRNT,LOPLN	;save address of current line number
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 95
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8820 FFFCC388 21C8 0620                   	MOVE.L	A0,LOPPT	;and text pointer
   8821 FFFCC38C 2C4F                        	MOVE.L	SP,A6		;dig into the stack to find 'LOPVAR'
   8822 FFFCC38E 6006                        	BRA	FR7
   8823 FFFCC390                             FR6:
   8824 FFFCC390 DDFC 0000 0014              	ADD.L	#20,A6		;look at next stack frame
   8825 FFFCC396                             FR7:
   8826 FFFCC396 2016                        	MOVE.L	(A6),D0 	;is it zero?
   8827 FFFCC398 6716                        	BEQ	FR8		;if so, we're done
   8828 FFFCC39A B0B8 0610                   	CMP.L	LOPVAR,D0	;same as current LOPVAR?
   8829 FFFCC39E 66F0                        	BNE	FR6		;nope, look some more
   8830 FFFCC3A0 244F                        	MOVE.L	SP,A2	;	Else remove 5 long words from...
   8831 FFFCC3A2 224E                        	MOVE.L	A6,A1	;	inside the stack.
   8832 FFFCC3A4 47F8 0014                   	LEA	20,A3
   8833 FFFCC3A8 D7C9                        	ADD.L	A1,A3
   8834 FFFCC3AA 6100 05C4                   	BSR.L	MVDOWN
   8835 FFFCC3AE 2E4B                        	MOVE.L	A3,SP	;	set the SP 5 long words up
   8836 FFFCC3B0                             FR8:
   8837 FFFCC3B0 6000 FF42                   	BRA	FINISH		;and continue execution
                                             
   8839 FFFCC3B4                             NEXT:
   8840 FFFCC3B4 6100 031E                   	BSR.L	TSTV;		get address of variable
   8841 FFFCC3B8 6500 0484                   	BCS.L	QWHAT	;	if no variable, say "What?"
   8842 FFFCC3BC 2240                        	MOVE.L	D0,A1	;	save variable's address
   8843 FFFCC3BE                             NX0:
   8844 FFFCC3BE 2038 0610                   	MOVE.L	LOPVAR,D0;	If 'LOPVAR' is zero, we never...
   8845 FFFCC3C2 6700 047A                   	BEQ.L	QWHAT	;	had a FOR loop, so say "What?"
   8846 FFFCC3C6 B3C0                        	CMP.L	D0,A1	;;	else we check them
   8847 FFFCC3C8 6706                        	BEQ	NX3	;	OK, they agree
   8848 FFFCC3CA 6100 05AC                   	BSR.L	POPA	;	nope, let's see the next frame
   8849 FFFCC3CE 60EE                        	BRA	NX0
   8850 FFFCC3D0                             NX3:
   8851 FFFCC3D0 2011                        	MOVE.L	(A1),D0 ;	get control variable's value
   8852 FFFCC3D2 D0B8 0614                   	ADD.L	LOPINC,D0;	add in loop increment
   8853 FFFCC3D6 6900 04B2                   	BVS.L	QHOW	;	say "How?" for 32-bit overflow
   8854 FFFCC3DA 2280                        	MOVE.L	D0,(A1) ;	save control variable's new value
   8855 FFFCC3DC 2238 0618                   	MOVE.L	LOPLMT,D1;	get loop's limit value
   8856 FFFCC3E0 4AB8 0614                   	TST.L	LOPINC
   8857 FFFCC3E4 6A02                        	BPL	NX1	;	branch if loop increment is positive
   8858 FFFCC3E6 C141                        	EXG	D0,D1
   8859 FFFCC3E8                             NX1:
   8860 FFFCC3E8 B280                        	CMP.L	D0,D1;		test against limit
   8861 FFFCC3EA 6D0E                        	BLT	NX2;		branch if outside limit
   8862 FFFCC3EC 21F8 061C 0604              	MOVE.L	LOPLN,CURRNT	;Within limit, go back to the...
   8863 FFFCC3F2 2078 0620                   	MOVE.L	LOPPT,A0	;saved 'CURRNT' and text pointer.
   8864 FFFCC3F6 6000 FEFC                   	BRA	FINISH
   8865 FFFCC3FA                             NX2:
   8866 FFFCC3FA 6100 057C                   	BSR.L	POPA		;purge this loop
   8867 FFFCC3FE 6000 FEF4                   	BRA	FINISH
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** REM *** IF *** INPUT *** LET (& DEFLT) ***
                                             ;*
                                             ;* 'REM' can be followed by anything and is ignored by the
                                             ;* interpreter.
                                             ;*
                                             ;* 'IF' is followed by an expression, as a condition and one or
                                             ;* more commands (including other 'IF's) separated by colons.
                                             ;* Note that the word 'THEN' is not used.  The interpreter evaluates
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 96
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* the expression.  If it is non-zero, execution continues.  If it
                                             ;* is zero, the commands that follow are ignored and execution
                                             ;* continues on the next line.
                                             ;*
                                             ;* 'INPUT' is like the 'PRINT' command, and is followed by a list
                                             ;* of items.  If the item is a string in single or double quotes,
                                             ;* or is an underline (back arrow), it has the same effect as in
                                             ;* 'PRINT'.  If an item is a variable, this variable name is
                                             ;* printed out followed by a colon, then the interpreter waits for
                                             ;* an expression to be typed in.  The variable is then set to the
                                             ;* value of this expression.  If the variable is preceeded by a
                                             ;* string (again in single or double quotes), the string will be
                                             ;* displayed followed by a colon.  The interpreter the waits for an
                                             ;* expression to be entered and sets the variable equal to the
                                             ;* expression's value.  If the input expression is invalid, the
                                             ;* interpreter will print "What?", "How?", or "Sorry" and reprint
                                             ;* the prompt and redo the input.  The execution will not terminate
                                             ;* unless you press control-C.  This is handled in 'INPERR'.
                                             ;*
                                             ;* 'LET' is followed by a list of items separated by commas.
                                             ;* Each item consists of a variable, an equals sign, and an
                                             ;* expression.  The interpreter evaluates the expression and sets
                                             ;* the variable to that value.  The interpreter will also handle
                                             ;* 'LET' commands without the word 'LET'.  This is done by 'DEFLT'.
                                             ;*
   8905 FFFCC402                             REM:
   8906 FFFCC402 600A                        	BRA	IF2		;skip the rest of the line
                                             
   8908 FFFCC404                             IF:	
   8909 FFFCC404 6100 01BC                   	BSR.L	EXPR	;	evaluate the expression
   8910 FFFCC408                             IF1:
   8911 FFFCC408 4A80                        	TST.L	D0		;is it zero?
   8912 FFFCC40A 6600 FE32                   	BNE	RUNSML		;if not, continue
   8913 FFFCC40E                             IF2:
   8914 FFFCC40E 2248                        	MOVE.L	A0,A1
   8915 FFFCC410 4281                        	CLR.L	D1
   8916 FFFCC412 6100 054A                   	BSR.L	FNDSKP	;	if so, skip the rest of the line
   8917 FFFCC416 6400 FE1E                   	BCC	RUNTSL		;and run the next line
   8918 FFFCC41A 6000 FC44                   	BRA.L	WSTART	;	if no next line, do a warm start
                                             
   8920 FFFCC41E                             INPERR:
   8921 FFFCC41E 2E78 060C                   	MOVE.L	STKINP,SP;	restore the old stack pointer
   8922 FFFCC422 21DF 0604                   	MOVE.L	(SP)+,CURRNT;	and old 'CURRNT'
   8923 FFFCC426 588F                        	ADDQ.L	#4,SP
   8924 FFFCC428 205F                        	MOVE.L	(SP)+,A0	;and old text pointer
                                             
   8926 FFFCC42A                             INPUT:
   8927 FFFCC42A 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   8928 FFFCC42C 6100 05A6                   	BSR.L	QTSTG		;is next item a string?
   8929 FFFCC430 600A                        	BRA.S	IP2		;nope
   8930 FFFCC432 6100 02A0                   	BSR.L	TSTV	;	yes, but is it followed by a variable?
   8931 FFFCC436 654C                        	BCS	IP4		;if not, branch
   8932 FFFCC438 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   8933 FFFCC43A 601A                        	BRA	IP3		;if so, input to variable
   8934 FFFCC43C                             IP2:
   8935 FFFCC43C 2F08                        	MOVE.L	A0,-(SP);	save for 'PRTSTG'
   8936 FFFCC43E 6100 0294                   	BSR.L	TSTV	;	must be a variable now
   8937 FFFCC442 6500 03FA                   	BCS.L	QWHAT	;	"What?" it isn't?
   8938 FFFCC446 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   8939 FFFCC448 1410                        	MOVE.B	(A0),D2 ;	get ready for 'PRTSTG'
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 97
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8940 FFFCC44A 4200                        	CLR.B	D0
   8941 FFFCC44C 1080                        	MOVE.B	D0,(A0)
   8942 FFFCC44E 225F                        	MOVE.L	(SP)+,A1
   8943 FFFCC450 6100 0566                   	BSR.L	PRTSTG	;	print string as prompt
   8944 FFFCC454 1082                        	MOVE.B	D2,(A0) ;	restore text
   8945 FFFCC456                             IP3:
   8946 FFFCC456 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   8947 FFFCC458 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;also save 'CURRNT'
   8948 FFFCC45C 21FC FFFF FFFF 0604         	MOVE.L	#-1,CURRNT	;flag that we are in INPUT
   8949 FFFCC464 21CF 060C                   	MOVE.L	SP,STKINP	;save the stack pointer too
   8950 FFFCC468 2F0A                        	MOVE.L	A2,-(SP)	;save the variable address
   8951 FFFCC46A 103C 003A                   	MOVE.B	#':',D0     ;    print a colon first
   8952 FFFCC46E 6100 0424                   	BSR.L	GETLN		;then get an input line
   8953 FFFCC472 41F8 0630                   	LEA	BUFFER,A0	;point to the buffer
   8954 FFFCC476 6100 014A                   	BSR.L	EXPR	;	evaluate the input
   8955 FFFCC47A 245F                        	MOVE.L	(SP)+,A2	;restore the variable address
   8956 FFFCC47C 2480                        	MOVE.L	D0,(A2) 	;save value in variable
   8957 FFFCC47E 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;restore old 'CURRNT'
   8958 FFFCC482 205F                        	MOVE.L	(SP)+,A0;	and the old text pointer
   8959 FFFCC484                             IP4:
   8960 FFFCC484 588F                        	ADDQ.L	#4,SP	;	clean up the stack
   8961 FFFCC486 6100 061C                   	BSR.L	TSTC	;	is the next thing a comma?
   8962 FFFCC48A 2C 03                       	DC.B	',',IP5-$
   8963 FFFCC48C 609C                        	BRA	INPUT	;	yes, more items
   8964 FFFCC48E                             IP5:
   8965 FFFCC48E 6000 FE64                   	BRA	FINISH
                                             
   8967 FFFCC492                             DEFLT:
   8968 FFFCC492 0C10 000D                   	CMP.B	#CR,(A0);	empty line is OK
   8969 FFFCC496 670C                        	BEQ	LT1		;else it is 'LET'
                                             
   8971 FFFCC498                             LET:
   8972 FFFCC498 6100 0364                   	BSR.L	SETVAL		;do the assignment
   8973 FFFCC49C 6100 0606                   	BSR.L	TSTC		;check for more 'LET' items
   8974 FFFCC4A0 2C 03                       	DC.B	',',LT1-$
   8975 FFFCC4A2 60F4                        	BRA	LET
   8976 FFFCC4A4                             LT1:
   8977 FFFCC4A4 6000 FE4E                   	BRA	FINISH		;until we are finished.
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LOAD *** & SAVE ***
                                             ;*
                                             ;* These two commands transfer a program to/from an auxiliary
                                             ;* device such as a cassette, another computer, etc.  The program
                                             ;* is converted to an easily-stored format: each line starts with
                                             ;* a colon, the line no. as 4 hex digits, and the rest of the line.
                                             ;* At the end, a line starting with an '@' sign is sent.  This
                                             ;* format can be read back with a minimum of processing time by
                                             ;* the 68000.
                                             ;*
   8992 FFFCC4A8                             LOAD:
   8993 FFFCC4A8 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to start of prog. area
   8994 FFFCC4AE 103C 000D                   	MOVE.B	#CR,D0		;For a CP/M host, tell it we're ready...
   8995 FFFCC4B2 6100 FB5C                   	BSR	GOAUXO		;by sending a CR to finish PIP command.
   8996 FFFCC4B6                             LOD1:
   8997 FFFCC4B6 6100 FB5C                   	BSR	GOAUXI	;	look for start of line
   8998 FFFCC4BA 67FA                        	BEQ	LOD1
   8999 FFFCC4BC B03C 0040                   	CMP.B	#'@',D0  ;       end of program?
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 98
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9000 FFFCC4C0 6722                        	BEQ	LODEND
   9001 FFFCC4C2 B03C 003A                   	CMP.B	#':',D0   ;      if not, is it start of line?
   9002 FFFCC4C6 66EE                        	BNE	LOD1		;if not, wait for it
   9003 FFFCC4C8 6100 0022                   	BSR	GBYTE		;get first byte of line no.
   9004 FFFCC4CC 10C1                        	MOVE.B	D1,(A0)+	;store it
   9005 FFFCC4CE 6100 001C                   	BSR	GBYTE		;get 2nd bye of line no.
   9006 FFFCC4D2 10C1                        	MOVE.B	D1,(A0)+;	store that, too
   9007 FFFCC4D4                             LOD2:
   9008 FFFCC4D4 6100 FB3E                   	BSR	GOAUXI	;	get another text char.
   9009 FFFCC4D8 67FA                        	BEQ	LOD2
   9010 FFFCC4DA 10C0                        	MOVE.B	D0,(A0)+	;store it
   9011 FFFCC4DC B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9012 FFFCC4E0 66F2                        	BNE	LOD2		;if not, go back for more
   9013 FFFCC4E2 60D2                        	BRA	LOD1		;if so, start a new line
   9014 FFFCC4E4                             LODEND:
   9015 FFFCC4E4 21C8 0624                   	MOVE.L	A0,TXTUNF	;set end-of program pointer
   9016 FFFCC4E8 6000 FB76                   	BRA	WSTART		;back to direct mode
                                             
   9018 FFFCC4EC                             GBYTE:
   9019 FFFCC4EC 7401                        	MOVEQ	#1,D2;		get two hex characters from auxiliary
   9020 FFFCC4EE 4281                        	CLR	D1		;and store them as a byte in D1
   9021 FFFCC4F0                             GBYTE1:
   9022 FFFCC4F0 6100 FB22                   	BSR	GOAUXI	;	get a char.
   9023 FFFCC4F4 67FA                        	BEQ	GBYTE1
   9024 FFFCC4F6 B03C 0041                   	CMP.B	#'A',D0
   9025 FFFCC4FA 6502                        	BCS	GBYTE2
   9026 FFFCC4FC 5F00                        	SUBQ.B	#7,D0	;	if greater than 9, adjust
   9027 FFFCC4FE                             GBYTE2:
   9028 FFFCC4FE 0200 000F                   	AND.B	#0xF,D0		;strip ASCII
   9029 FFFCC502 E909                        	LSL.B	#4,D1		;put nybble into the result
   9030 FFFCC504 8200                        	OR.B	D0,D1
   9031 FFFCC506 51CA FFE8                   	DBRA	D2,GBYTE1	;get another char.
   9032 FFFCC50A 4E75                        	RTS
                                             
   9034 FFFCC50C                             SAVE:
   9035 FFFCC50C 2079 FFFC C01C              	MOVE.L	TXTBGN,A0;	set pointer to start of prog. area
   9036 FFFCC512 2278 0624                   	MOVE.L	TXTUNF,A1	;set pointer to end of prog. area
   9037 FFFCC516                             SAVE1:
   9038 FFFCC516 103C 000D                   	MOVE.B	#CR,D0	;	send out a CR & LF (CP/M likes this)
   9039 FFFCC51A 6100 FAF4                   	BSR	GOAUXO
   9040 FFFCC51E 103C 000A                   	MOVE.B	#LF,D0
   9041 FFFCC522 6100 FAEC                   	BSR	GOAUXO
   9042 FFFCC526 B3C8                        	CMP.L	A0,A1		;are we finished?
   9043 FFFCC528 6322                        	BLS	SAVEND
   9044 FFFCC52A 103C 003A                   	MOVE.B	#':',D0      ;   if not, start a line
   9045 FFFCC52E 6100 FAE0                   	BSR	GOAUXO
   9046 FFFCC532 1218                        	MOVE.B	(A0)+,D1	;send first half of line no.
   9047 FFFCC534 6100 003A                   	BSR	PBYTE
   9048 FFFCC538 1218                        	MOVE.B	(A0)+,D1	;and send 2nd half
   9049 FFFCC53A 6100 0034                   	BSR	PBYTE
   9050 FFFCC53E                             SAVE2:
   9051 FFFCC53E 1018                        	MOVE.B	(A0)+,D0;	get a text char.
   9052 FFFCC540 B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9053 FFFCC544 67D0                        	BEQ	SAVE1		;if so, send CR & LF and start new line
   9054 FFFCC546 6100 FAC8                   	BSR	GOAUXO		;send it out
   9055 FFFCC54A 60F2                        	BRA	SAVE2		;go back for more text
   9056 FFFCC54C                             SAVEND:
   9057 FFFCC54C 103C 0040                   	MOVE.B	#'@',D0 ;        send end-of-program indicator
   9058 FFFCC550 6100 FABE                   	BSR	GOAUXO
   9059 FFFCC554 103C 000D                   	MOVE.B	#CR,D0	;	followed by a CR & LF
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 99
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9060 FFFCC558 6100 FAB6                   	BSR	GOAUXO
   9061 FFFCC55C 103C 000A                   	MOVE.B	#LF,D0
   9062 FFFCC560 6100 FAAE                   	BSR	GOAUXO
   9063 FFFCC564 103C 001A                   	MOVE.B	#0x1A,D0 	;and a control-Z to end the CP/M file
   9064 FFFCC568 6100 FAA6                   	BSR	GOAUXO
   9065 FFFCC56C 6000 FAF2                   	BRA	WSTART		;then go do a warm start
                                             
   9067 FFFCC570                             PBYTE:
   9068 FFFCC570 7401                        	MOVEQ	#1,D2	;	send two hex characters from D1's low byte
   9069 FFFCC572                             PBYTE1:
   9070 FFFCC572 E919                        	ROL.B	#4,D1	;	get the next nybble
   9071 FFFCC574 1001                        	MOVE.B	D1,D0
   9072 FFFCC576 0200 000F                   	AND.B	#0xF,D0	;	strip off garbage
   9073 FFFCC57A 0600 0030                   	ADD.B	#'0',D0   ;      make it into ASCII
   9074 FFFCC57E B03C 0039                   	CMP.B	#'9',D0
   9075 FFFCC582 6302                        	BLS	PBYTE2
   9076 FFFCC584 5E00                        	ADDQ.B	#7,D0		;adjust if greater than 9
   9077 FFFCC586                             PBYTE2:
   9078 FFFCC586 6100 FA88                   	BSR	GOAUXO		;send it out
   9079 FFFCC58A 51CA FFE6                   	DBRA	D2,PBYTE1	;then send the next nybble
   9080 FFFCC58E 4E75                        	RTS
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** POKE *** & CALL ***
                                             ;*
                                             ;* 'POKE expr1,expr2' stores the byte from 'expr2' into the memory
                                             ;* address specified by 'expr1'.
                                             ;*
                                             ;* 'CALL expr' jumps to the machine language subroutine whose
                                             ;* starting address is specified by 'expr'.  The subroutine can use
                                             ;* all registers but must leave the stack the way it found it.
                                             ;* The subroutine returns to the interpreter by executing an RTS.
                                             ;*
   9095 FFFCC590                             POKE:
   9096 FFFCC590 6100 0030                   	BSR	EXPR		;get the memory address
   9097 FFFCC594 6100 050E                   	BSR.L	TSTC		;it must be followed by a comma
   9098 FFFCC598 2C 0F                       	DC.B	',',PKER-$
   9099 FFFCC59A 2F00                        	MOVE.L	D0,-(SP)	;save the address
   9100 FFFCC59C 6100 0024                   	BSR	EXPR		;get the byte to be POKE'd
   9101 FFFCC5A0 225F                        	MOVE.L	(SP)+,A1	;get the address back
   9102 FFFCC5A2 1280                        	MOVE.B	D0,(A1) 	;store the byte in memory
   9103 FFFCC5A4 6000 FD4E                   	BRA	FINISH
   9104 FFFCC5A8                             PKER:
   9105 FFFCC5A8 6000 0294                   	BRA.L	QWHAT	;	if no comma, say "What?"
                                             
   9107 FFFCC5AC                             CALL:
   9108 FFFCC5AC 6100 0014                   	BSR	EXPR		;get the subroutine's address
   9109 FFFCC5B0 4A80                        	TST.L	D0		;make sure we got a valid address
   9110 FFFCC5B2 6700 02D6                   	BEQ.L	QHOW	;	if not, say "How?"
   9111 FFFCC5B6 2F08                        	MOVE.L	A0,-(SP);	save the text pointer
   9112 FFFCC5B8 2240                        	MOVE.L	D0,A1
   9113 FFFCC5BA 4E91                        	JSR	(A1)		;jump to the subroutine
   9114 FFFCC5BC 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9115 FFFCC5BE 6000 FD34                   	BRA	FINISH
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** EXPR ***
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 100
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
                                             ;* 'EXPR' evaluates arithmetical or logical expressions.
                                             ;* <EXPR>::=<EXPR2>
                                             ;*	   <EXPR2><rel.op.><EXPR2>
                                             ;* where <rel.op.> is one of the operators in TAB8 and the result
                                             ;* of these operations is 1 if true and 0 if false.
                                             ;* <EXPR2>::=(+ or -)<EXPR3>(+ or -)<EXPR3>(...
                                             ;* where () are optional and (... are optional repeats.
                                             ;* <EXPR3>::=<EXPR4>( <* or /><EXPR4> )(...
                                             ;* <EXPR4>::=<variable>
                                             ;*	    <function>
                                             ;*	    (<EXPR>)
                                             ;* <EXPR> is recursive so that the variable '@' can have an <EXPR>
                                             ;* as an index, functions can have an <EXPR> as arguments, and
                                             ;* <EXPR4> can be an <EXPR> in parenthesis.
                                             ;*
   9136 FFFCC5C2                             EXPR:
   9137 FFFCC5C2 6100 0066                   	BSR	EXPR2
   9138 FFFCC5C6 2F00                        	MOVE.L	D0,-(SP);	save <EXPR2> value
   9139 FFFCC5C8 43F9 FFFC C163              	LEA	TAB8,A1 	;look up a relational operator
   9140 FFFCC5CE 45F9 FFFC C1A8              	LEA	TAB8_1,A2
   9141 FFFCC5D4 6000 FBEC                   	BRA	EXEC		;go do it
                                             
   9143 FFFCC5D8                             XP11:
   9144 FFFCC5D8 6100 003E                   	BSR	XP18	;	is it ">="?
   9145 FFFCC5DC 6D2E                        	BLT	XPRT0		;no, return D0=0
   9146 FFFCC5DE 6030                        	BRA	XPRT1		;else return D0=1
                                             
   9148 FFFCC5E0                             XP12:
   9149 FFFCC5E0 6100 0036                   	BSR	XP18	;	is it "<>"?
   9150 FFFCC5E4 6726                        	BEQ	XPRT0		;no, return D0=0
   9151 FFFCC5E6 6028                        	BRA	XPRT1		;else return D0=1
                                             
   9153 FFFCC5E8                             XP13:
   9154 FFFCC5E8 6100 002E                   	BSR	XP18	;	is it ">"?
   9155 FFFCC5EC 6F1E                        	BLE	XPRT0		;no, return D0=0
   9156 FFFCC5EE 6020                        	BRA	XPRT1		;else return D0=1
                                             
   9158 FFFCC5F0                             XP14:
   9159 FFFCC5F0 6100 0026                   	BSR	XP18	;	is it "<="?
   9160 FFFCC5F4 6E16                        	BGT	XPRT0		;no, return D0=0
   9161 FFFCC5F6 6018                        	BRA	XPRT1		;else return D0=1
                                             
   9163 FFFCC5F8                             XP15:
   9164 FFFCC5F8 6100 001E                   	BSR	XP18	;	is it "="?
   9165 FFFCC5FC 660E                        	BNE	XPRT0		;if not, return D0=0
   9166 FFFCC5FE 6010                        	BRA	XPRT1		;else return D0=1
   9167 FFFCC600                             XP15RT:
   9168 FFFCC600 4E75                        	RTS
                                             
   9170 FFFCC602                             XP16:
   9171 FFFCC602 6100 0014                   	BSR	XP18	;	is it "<"?
   9172 FFFCC606 6C04                        	BGE	XPRT0		;if not, return D0=0
   9173 FFFCC608 6006                        	BRA	XPRT1		;else return D0=1
   9174 FFFCC60A                             XP16RT:
   9175 FFFCC60A 4E75                        	RTS
                                             
   9177 FFFCC60C                             XPRT0:
   9178 FFFCC60C 4280                        	CLR.L	D0	;	return D0=0 (false)
   9179 FFFCC60E 4E75                        	RTS
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 101
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
   9181 FFFCC610                             XPRT1:
   9182 FFFCC610 7001                        	MOVEQ	#1,D0;		return D0=1 (true)
   9183 FFFCC612 4E75                        	RTS
                                             
   9185 FFFCC614                             XP17:
   9186 FFFCC614 201F                        	MOVE.L	(SP)+,D0	;it's not a rel. operator
   9187 FFFCC616 4E75                        	RTS			;return D0=<EXPR2>
                                             
   9189 FFFCC618                             XP18:
   9190 FFFCC618 201F                        	MOVE.L	(SP)+,D0	;reverse the top two stack items
   9191 FFFCC61A 221F                        	MOVE.L	(SP)+,D1
   9192 FFFCC61C 2F00                        	MOVE.L	D0,-(SP)
   9193 FFFCC61E 2F01                        	MOVE.L	D1,-(SP)
   9194 FFFCC620 6100 0008                   	BSR	EXPR2		;do second <EXPR2>
   9195 FFFCC624 221F                        	MOVE.L	(SP)+,D1
   9196 FFFCC626 B280                        	CMP.L	D0,D1	;	compare with the first result
   9197 FFFCC628 4E75                        	RTS			;return the result
                                             
   9199 FFFCC62A                             EXPR2:
   9200 FFFCC62A 6100 0478                   	BSR.L	TSTC		;negative sign?
   9201 FFFCC62E 2D 05                       	DC.B	'-',XP21-$
   9202 FFFCC630 4280                        	CLR.L	D0	;	yes, fake '0-'
   9203 FFFCC632 6026                        	BRA	XP26
   9204 FFFCC634                             XP21:
   9205 FFFCC634 6100 046E                   	BSR.L	TSTC	;	positive sign? ignore it
   9206 FFFCC638 2B 01                       	DC.B	'+',XP22-$
   9207 FFFCC63A                             XP22:
   9208 FFFCC63A 6100 002C                   	BSR	EXPR3		;first <EXPR3>
   9209 FFFCC63E                             XP23:
   9210 FFFCC63E 6100 0464                   	BSR.L	TSTC	;	add?
   9211 FFFCC642 2B 11                       	DC.B	'+',XP25-$
   9212 FFFCC644 2F00                        	MOVE.L	D0,-(SP)	;yes, save the value
   9213 FFFCC646 6100 0020                   	BSR	EXPR3		;get the second <EXPR3>
   9214 FFFCC64A                             XP24:
   9215 FFFCC64A 221F                        	MOVE.L	(SP)+,D1
   9216 FFFCC64C D081                        	ADD.L	D1,D0	;	add it to the first <EXPR3>
   9217 FFFCC64E 6900 023A                   	BVS.L	QHOW	;	branch if there's an overflow
   9218 FFFCC652 60EA                        	BRA	XP23	;	else go back for more operations
   9219 FFFCC654                             XP25:
   9220 FFFCC654 6100 044E                   	BSR.L	TSTC		;subtract?
   9221 FFFCC658 2D 75                       	DC.B	'-',XP42-$
   9222 FFFCC65A                             XP26:
   9223 FFFCC65A 2F00                        	MOVE.L	D0,-(SP)	;yes, save the result of 1st <EXPR3>
   9224 FFFCC65C 6100 000A                   	BSR	EXPR3		;get second <EXPR3>
   9225 FFFCC660 4480                        	NEG.L	D0		;change its sign
   9226 FFFCC662 4EF9 FFFC C64A              	JMP	XP24		;and do an addition
                                             
   9228 FFFCC668                             EXPR3:
   9229 FFFCC668 6100 002C                   	BSR	EXPR4		;get first <EXPR4>
   9230 FFFCC66C                             XP31:
   9231 FFFCC66C 6100 0436                   	BSR.L	TSTC	;	multiply?
   9232 FFFCC670 2A 0F                       	DC.B	'*',XP34-$
   9233 FFFCC672 2F00                        	MOVE.L	D0,-(SP);	yes, save that first result
   9234 FFFCC674 6100 0020                   	BSR	EXPR4		;get second <EXPR4>
   9235 FFFCC678 221F                        	MOVE.L	(SP)+,D1
   9236 FFFCC67A 6100 00A8                   	BSR.L	MULT32	;	multiply the two
   9237 FFFCC67E 60EC                        	BRA	XP31		;then look for more terms
   9238 FFFCC680                             XP34:
   9239 FFFCC680 6100 0422                   	BSR.L	TSTC;		divide?
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 102
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9240 FFFCC684 2F 49                       	DC.B	'/',XP42-$
   9241 FFFCC686 2F00                        	MOVE.L	D0,-(SP);	save result of 1st <EXPR4>
   9242 FFFCC688 6100 000C                   	BSR	EXPR4		;get second <EXPR4>
   9243 FFFCC68C 221F                        	MOVE.L	(SP)+,D1
   9244 FFFCC68E C141                        	EXG	D0,D1
   9245 FFFCC690 6100 00D4                   	BSR.L	DIV32	;	do the division
   9246 FFFCC694 60D6                        	BRA	XP31		;go back for any more terms
                                             
   9248 FFFCC696                             EXPR4:
   9249 FFFCC696 43F9 FFFC C14C              	LEA	TAB4,A1 ;	find possible function
   9250 FFFCC69C 45F9 FFFC C196              	LEA	TAB4_1,A2
   9251 FFFCC6A2 6000 FB1E                   	BRA	EXEC
   9252 FFFCC6A6                             XP40:
   9253 FFFCC6A6 6100 002C                   	BSR	TSTV	;	nope, not a function
   9254 FFFCC6AA 6508                        	BCS	XP41		;nor a variable
   9255 FFFCC6AC 2240                        	MOVE.L	D0,A1
   9256 FFFCC6AE 4280                        	CLR.L	D0
   9257 FFFCC6B0 2011                        	MOVE.L	(A1),D0 ;	if a variable, return its value in D0
   9258 FFFCC6B2                             EXP4RT:
   9259 FFFCC6B2 4E75                        	RTS
   9260 FFFCC6B4                             XP41:
   9261 FFFCC6B4 6100 0408                   	BSR.L	TSTNUM	;	or is it a number?
   9262 FFFCC6B8 2001                        	MOVE.L	D1,D0
   9263 FFFCC6BA 4A82                        	TST	D2		;(if not, # of digits will be zero)
   9264 FFFCC6BC 66F4                        	BNE	EXP4RT	;	if so, return it in D0
   9265 FFFCC6BE                             PARN:
   9266 FFFCC6BE 6100 03E4                   	BSR.L	TSTC	;	else look for ( EXPR )
   9267 FFFCC6C2 28 0D                       	DC.B	'(',XP43-$
   9268 FFFCC6C4 6100 FEFC                   	BSR	EXPR
   9269 FFFCC6C8 6100 03DA                   	BSR.L	TSTC
   9270 FFFCC6CC 29 03                       	DC.B	')',XP43-$
   9271 FFFCC6CE                             XP42:
   9272 FFFCC6CE 4E75                        	RTS
   9273 FFFCC6D0                             XP43:
   9274 FFFCC6D0 6000 016C                   	BRA.L	QWHAT	;	else say "What?"
                                             
                                             ;*
                                             ;* ===== Test for a valid variable name.  Returns Carry=1 if not
                                             ;*	found, else returns Carry=0 and the address of the
                                             ;*	variable in D0.
                                             
   9281 FFFCC6D4                             TSTV:
   9282 FFFCC6D4 6100 0420                   	BSR.L	IGNBLK
   9283 FFFCC6D8 4280                        	CLR.L	D0
   9284 FFFCC6DA 1010                        	MOVE.B	(A0),D0 ;	look at the program text
   9285 FFFCC6DC 0400 0040                   	SUB.B	#'@',D0
   9286 FFFCC6E0 6540                        	BCS	TSTVRT	;	C=1: not a variable
   9287 FFFCC6E2 6628                        	BNE	TV1		;branch if not "@" array
   9288 FFFCC6E4 5288                        	ADDQ	#1,A0	;	If it is, it should be
   9289 FFFCC6E6 6100 FFD6                   	BSR	PARN		;followed by (EXPR) as its index.
   9290 FFFCC6EA D080                        	ADD.L	D0,D0
   9291 FFFCC6EC 6500 019C                   	BCS.L	QHOW	;	say "How?" if index is too big
   9292 FFFCC6F0 D080                        	ADD.L	D0,D0
   9293 FFFCC6F2 6500 0196                   	BCS.L	QHOW
   9294 FFFCC6F6 2F00                        	MOVE.L	D0,-(SP)	;save the index
   9295 FFFCC6F8 6100 00FA                   	BSR.L	SIZE_		;get amount of free memory
   9296 FFFCC6FC 221F                        	MOVE.L	(SP)+,D1	;get back the index
   9297 FFFCC6FE B081                        	CMP.L	D1,D0		;see if there's enough memory
   9298 FFFCC700 6300 017E                   	BLS.L	QSORRY		;if not, say "Sorry"
   9299 FFFCC704 2038 0628                   	MOVE.L	VARBGN,D0	;put address of array element...
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 103
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9300 FFFCC708 9081                        	SUB.L	D1,D0		;into D0
   9301 FFFCC70A 4E75                        	RTS
   9302 FFFCC70C                             TV1:
   9303 FFFCC70C B03C 001B                   	CMP.B	#27,D0		;if not @, is it A through Z?
   9304 FFFCC710 0A3C 0001                   	EOR	#1,CCR
   9305 FFFCC714 650C                        	BCS	TSTVRT		;if not, set Carry and return
   9306 FFFCC716 5288                        	ADDQ	#1,A0	;	else bump the text pointer
   9307 FFFCC718 D080                        	ADD	D0,D0		;compute the variable's address
   9308 FFFCC71A D080                        	ADD	D0,D0
   9309 FFFCC71C 2238 0628                   	MOVE.L	VARBGN,D1
   9310 FFFCC720 D081                        	ADD	D1,D0		;and return it in D0 with Carry=0
   9311 FFFCC722                             TSTVRT:
   9312 FFFCC722 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Multiplies the 32 bit values in D0 and D1, returning
                                             ;*	the 32 bit result in D0.
                                             ;*
   9318 FFFCC724                             MULT32:
   9319 FFFCC724 2801                        	MOVE.L	D1,D4
   9320 FFFCC726 B184                        	EOR.L	D0,D4	;	see if the signs are the same
   9321 FFFCC728 4A80                        	TST.L	D0		;take absolute value of D0
   9322 FFFCC72A 6A02                        	BPL	MLT1
   9323 FFFCC72C 4480                        	NEG.L	D0
   9324 FFFCC72E                             MLT1:
   9325 FFFCC72E 4A81                        	TST.L	D1	;	take absolute value of D1
   9326 FFFCC730 6A02                        	BPL	MLT2
   9327 FFFCC732 4481                        	NEG.L	D1
   9328 FFFCC734                             MLT2:
   9329 FFFCC734 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;is second argument <= 16 bits?
   9330 FFFCC73A 630C                        	BLS	MLT3	;	OK, let it through
   9331 FFFCC73C C141                        	EXG	D0,D1	;	else swap the two arguments
   9332 FFFCC73E B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;and check 2nd argument again
   9333 FFFCC744 6200 0144                   	BHI.L	QHOW		;one of them MUST be 16 bits
   9334 FFFCC748                             MLT3:
   9335 FFFCC748 2400                        	MOVE	D0,D2	;	prepare for 32 bit X 16 bit multiply
   9336 FFFCC74A C4C1                        	MULU	D1,D2		;multiply low word
   9337 FFFCC74C 4840                        	SWAP	D0
   9338 FFFCC74E C0C1                        	MULU	D1,D0		;multiply high word
   9339 FFFCC750 4840                        	SWAP	D0
                                             ;*** Rick Murray's bug correction follows:
   9341 FFFCC752 4A80                        	TST	D0		;if lower word not 0, then overflow
   9342 FFFCC754 6600 0134                   	BNE.L	QHOW	;	if overflow, say "How?"
   9343 FFFCC758 D082                        	ADD.L	D2,D0	;	D0 now holds the product
   9344 FFFCC75A 6B00 012E                   	BMI.L	QHOW	;	if sign bit set, it's an overflow
   9345 FFFCC75E 4A84                        	TST.L	D4		;were the signs the same?
   9346 FFFCC760 6A02                        	BPL	MLTRET
   9347 FFFCC762 4480                        	NEG.L	D0		;if not, make the result negative
   9348 FFFCC764                             MLTRET:
   9349 FFFCC764 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Divide the 32 bit value in D0 by the 32 bit value in D1.
                                             ;*	Returns the 32 bit quotient in D0, remainder in D1.
                                             ;*
   9355 FFFCC766                             DIV32:
   9356 FFFCC766 4A81                        	TST.L	D1		;check for divide-by-zero
   9357 FFFCC768 6700 0120                   	BEQ.L	QHOW		;if so, say "How?"
   9358 FFFCC76C 2401                        	MOVE.L	D1,D2
   9359 FFFCC76E 2801                        	MOVE.L	D1,D4
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 104
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9360 FFFCC770 B184                        	EOR.L	D0,D4		;see if the signs are the same
   9361 FFFCC772 4A80                        	TST.L	D0		;take absolute value of D0
   9362 FFFCC774 6A02                        	BPL	DIV1
   9363 FFFCC776 4480                        	NEG.L	D0
   9364 FFFCC778                             DIV1:
   9365 FFFCC778 4A81                        	TST.L	D1	;	take absolute value of D1
   9366 FFFCC77A 6A02                        	BPL	DIV2
   9367 FFFCC77C 4481                        	NEG.L	D1
   9368 FFFCC77E                             DIV2:
   9369 FFFCC77E 761F                        	MOVEQ	#31,D3	;	iteration count for 32 bits
   9370 FFFCC780 2200                        	MOVE.L	D0,D1
   9371 FFFCC782 4280                        	CLR.L	D0
   9372 FFFCC784                             DIV3:
   9373 FFFCC784 D281                        	ADD.L	D1,D1	;	(This algorithm was translated from
   9374 FFFCC786 D180                        	ADDX.L	D0,D0		;the divide routine in Ron Cain's
   9375 FFFCC788 6708                        	BEQ	DIV4		;Small-C run time library.)
   9376 FFFCC78A B082                        	CMP.L	D2,D0
   9377 FFFCC78C 6B04                        	BMI	DIV4
   9378 FFFCC78E 5281                        	ADDQ.L	#1,D1
   9379 FFFCC790 9082                        	SUB.L	D2,D0
   9380 FFFCC792                             DIV4:
   9381 FFFCC792 51CB FFF0                   	DBRA	D3,DIV3
   9382 FFFCC796 C141                        	EXG	D0,D1	;	put rem. & quot. in proper registers
   9383 FFFCC798 4A84                        	TST.L	D4	;	were the signs the same?
   9384 FFFCC79A 6A04                        	BPL	DIVRT
   9385 FFFCC79C 4480                        	NEG.L	D0	;	if not, results are negative
   9386 FFFCC79E 4481                        	NEG.L	D1
   9387 FFFCC7A0                             DIVRT:
   9388 FFFCC7A0 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The PEEK function returns the byte stored at the address
                                             ;*	contained in the following expression.
                                             ;*
   9394 FFFCC7A2                             PEEK:
   9395 FFFCC7A2 6100 FF1A                   	BSR	PARN	;	get the memory address
   9396 FFFCC7A6 2240                        	MOVE.L	D0,A1
   9397 FFFCC7A8 4280                        	CLR.L	D0		;upper 3 bytes will be zero
   9398 FFFCC7AA 1011                        	MOVE.B	(A1),D0 ;	get the addressed byte
   9399 FFFCC7AC 4E75                        	RTS			;and return it
                                             
                                             ;*
                                             ;* ===== The RND function returns a random number from 1 to
                                             ;*	the value of the following expression in D0.
                                             ;*
   9405 FFFCC7AE                             RND:
   9406 FFFCC7AE 6100 FF0E                   	BSR	PARN	;	get the upper limit
   9407 FFFCC7B2 4A80                        	TST.L	D0	;	it must be positive and non-zero
   9408 FFFCC7B4 6700 00D4                   	BEQ.L	QHOW
   9409 FFFCC7B8 6B00 00D0                   	BMI.L	QHOW
   9410 FFFCC7BC 2200                        	MOVE.L	D0,D1
   9411 FFFCC7BE 2278 0600                   	MOVE.L	RANPNT,A1	;get memory as a random number
   9412 FFFCC7C2 B3FC FFFC CC78              	CMP.L	#LSTROM,A1
   9413 FFFCC7C8 6506                        	BCS	RA1
   9414 FFFCC7CA 43F9 FFFC C000              	LEA	START,A1	;wrap around if end of program
   9415 FFFCC7D0                             RA1:
   9416 FFFCC7D0 2019                        	MOVE.L	(A1)+,D0;	get the slightly random number
   9417 FFFCC7D2 0880 001F                   	BCLR	#31,D0	;	make sure it's positive
   9418 FFFCC7D6 21C9 0600                   	MOVE.L	A1,RANPNT	;(even I can do better than this!)
   9419 FFFCC7DA 6100 FF8A                   	BSR	DIV32		;RND(n)=MOD(number,n)+1
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 105
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9420 FFFCC7DE 2001                        	MOVE.L	D1,D0	;	MOD is the remainder of the div.
   9421 FFFCC7E0 5280                        	ADDQ.L	#1,D0
   9422 FFFCC7E2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The ABS function returns an absolute value in D0.
                                             ;*
   9427 FFFCC7E4                             ABS:
   9428 FFFCC7E4 6100 FED8                   	BSR	PARN		;get the following expr.'s value
   9429 FFFCC7E8 4A80                        	TST.L	D0
   9430 FFFCC7EA 6A06                        	BPL	ABSRT
   9431 FFFCC7EC 4480                        	NEG.L	D0		;if negative, complement it
   9432 FFFCC7EE 6B00 009A                   	BMI.L	QHOW	;	if still negative, it was too big
   9433 FFFCC7F2                             ABSRT:
   9434 FFFCC7F2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The SIZE function returns the size of free memory in D0.
                                             ;*
   9439 FFFCC7F4                             SIZE_:
   9440 FFFCC7F4 2038 0628                   	MOVE.L	VARBGN,D0	;get the number of free bytes...
   9441 FFFCC7F8 90B8 0624                   	SUB.L	TXTUNF,D0	;between 'TXTUNF' and 'VARBGN'
   9442 FFFCC7FC 4E75                        	RTS			;return the number in D0
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** SETVAL *** FIN *** ENDCHK *** ERROR (& friends) ***
                                             ;*
                                             ;* 'SETVAL' expects a variable, followed by an equal sign and then
                                             ;* an expression.  It evaluates the expression and sets the variable
                                             ;* to that value.
                                             ;*
                                             ;* 'FIN' checks the end of a command.  If it ended with ":",
                                             ;* execution continues.	If it ended with a CR, it finds the
                                             ;* the next line and continues from there.
                                             ;*
                                             ;* 'ENDCHK' checks if a command is ended with a CR. This is
                                             ;* required in certain commands, such as GOTO, RETURN, STOP, etc.
                                             ;*
                                             ;* 'ERROR' prints the string pointed to by A0. It then prints the
                                             ;* line pointed to by CURRNT with a "?" inserted at where the
                                             ;* old text pointer (should be on top of the stack) points to.
                                             ;* Execution of Tiny BASIC is stopped and a warm start is done.
                                             ;* If CURRNT is zero (indicating a direct command), the direct
                                             ;* command is not printed. If CURRNT is -1 (indicating
                                             ;* 'INPUT' command in progress), the input line is not printed
                                             ;* and execution is not terminated but continues at 'INPERR'.
                                             ;*
                                             ;* Related to 'ERROR' are the following:
                                             ;* 'QWHAT' saves text pointer on stack and gets "What?" message.
                                             ;* 'AWHAT' just gets the "What?" message and jumps to 'ERROR'.
                                             ;* 'QSORRY' and 'ASORRY' do the same kind of thing.
                                             ;* 'QHOW' and 'AHOW' also do this for "How?".
                                             ;*
   9475 FFFCC7FE                             SETVAL:
   9476 FFFCC7FE 6100 FED4                   	BSR	TSTV	;	variable name?
   9477 FFFCC802 653A                        	BCS	QWHAT		;if not, say "What?"
   9478 FFFCC804 2F00                        	MOVE.L	D0,-(SP);	save the variable's address
   9479 FFFCC806 6100 029C                   	BSR.L	TSTC	;	get past the "=" sign
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 106
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9480 FFFCC80A 3D 0B                       	DC.B	'=',SV1-$
   9481 FFFCC80C 6100 FDB4                   	BSR	EXPR	;	evaluate the expression
   9482 FFFCC810 2C5F                        	MOVE.L	(SP)+,A6
   9483 FFFCC812 2C80                        	MOVE.L	D0,(A6) ;	and save its value in the variable
   9484 FFFCC814 4E75                        	RTS
   9485 FFFCC816                             SV1:
   9486 FFFCC816 6026                        	BRA	QWHAT	;	if no "=" sign
                                             
   9488 FFFCC818                             FIN:
   9489 FFFCC818 6100 028A                   	BSR.L	TSTC	;	*** FIN ***
   9490 FFFCC81C 3A 07                       	DC.B	':',FI1-$
   9491 FFFCC81E 588F                        	ADDQ.L	#4,SP	;	if ":", discard return address
   9492 FFFCC820 6000 FA1C                   	BRA	RUNSML	;	continue on the same line
   9493 FFFCC824                             FI1:
   9494 FFFCC824 6100 027E                   	BSR.L	TSTC	;	not ":", is it a CR?
   9495 FFFCC828 0D 07                       	DC.B	CR,FI2-$
   9496 FFFCC82A 588F                        	ADDQ.L	#4,SP	;	yes, purge return address
   9497 FFFCC82C 6000 F9F4                   	BRA	RUNNXL		;execute the next line
   9498 FFFCC830                             FI2:
   9499 FFFCC830 4E75                        	RTS			;else return to the caller
                                             
   9501 FFFCC832                             ENDCHK:
   9502 FFFCC832 6100 02C2                   	BSR.L	IGNBLK
   9503 FFFCC836 0C10 000D                   	CMP.B	#CR,(A0);	does it end with a CR?
   9504 FFFCC83A 6602                        	BNE	QWHAT	;	if not, say "WHAT?"
   9505 FFFCC83C 4E75                        	RTS
                                             
   9507 FFFCC83E                             QWHAT:
   9508 FFFCC83E 2F08                        	MOVE.L	A0,-(SP)
   9509 FFFCC840                             AWHAT:
   9510 FFFCC840 4DF9 FFFC CBFA              	LEA	WHTMSG,A6
   9511 FFFCC846                             ERROR:
   9512 FFFCC846 6100 031E                   	BSR.L	PRMESG	;	display the error message
   9513 FFFCC84A 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9514 FFFCC84C 2038 0604                   	MOVE.L	CURRNT,D0	;get the current line number
   9515 FFFCC850 6700 F80E                   	BEQ	WSTART		;if zero, do a warm start
   9516 FFFCC854 B0BC FFFF FFFF              	CMP.L	#-1,D0		;is the line no. pointer = -1?
   9517 FFFCC85A 6700 FBC2                   	BEQ	INPERR		;if so, redo input
   9518 FFFCC85E 1F10                        	MOVE.B	(A0),-(SP)	;save the char. pointed to
   9519 FFFCC860 4210                        	CLR.B	(A0)		;put a zero where the error is
   9520 FFFCC862 2278 0604                   	MOVE.L	CURRNT,A1	;point to start of current line
   9521 FFFCC866 6100 0220                   	BSR.L	PRTLN		;display the line in error up to the 0
   9522 FFFCC86A 109F                        	MOVE.B	(SP)+,(A0)	;restore the character
   9523 FFFCC86C 103C 003F                   	MOVE.B	#'?',D0     ;    display a "?"
   9524 FFFCC870 6100 F796                   	BSR	GOOUT
   9525 FFFCC874 4280                        	CLR	D0
   9526 FFFCC876 5389                        	SUBQ.L	#1,A1		;point back to the error char.
   9527 FFFCC878 6100 013E                   	BSR.L	PRTSTG		;display the rest of the line
   9528 FFFCC87C 6000 F7E2                   	BRA	WSTART		;and do a warm start
   9529 FFFCC880                             QSORRY:
   9530 FFFCC880 2F08                        	MOVE.L	A0,-(SP)
   9531 FFFCC882                             ASORRY:
   9532 FFFCC882 4DF9 FFFC CC02              	LEA	SRYMSG,A6
   9533 FFFCC888 60BC                        	BRA	ERROR
   9534 FFFCC88A                             QHOW:
   9535 FFFCC88A 2F08                        	MOVE.L	A0,-(SP)	;Error: "How?"
   9536 FFFCC88C                             AHOW:
   9537 FFFCC88C 4DF9 FFFC CBF3              	LEA	HOWMSG,A6
   9538 FFFCC892 60B2                        	BRA	ERROR
                                             ;*
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 107
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GETLN *** FNDLN (& friends) ***
                                             ;*
                                             ;* 'GETLN' reads in input line into 'BUFFER'. It first prompts with
                                             ;* the character in D0 (given by the caller), then it fills the
                                             ;* buffer and echos. It ignores LF's but still echos
                                             ;* them back. Control-H is used to delete the last character
                                             ;* entered (if there is one), and control-X is used to delete the
                                             ;* whole line and start over again. CR signals the end of a line,
                                             ;* and causes 'GETLN' to return.
                                             ;*
                                             ;* 'FNDLN' finds a line with a given line no. (in D1) in the
                                             ;* text save area.  A1 is used as the text pointer. If the line
                                             ;* is found, A1 will point to the beginning of that line
                                             ;* (i.e. the high byte of the line no.), and flags are NC & Z.
                                             ;* If that line is not there and a line with a higher line no.
                                             ;* is found, A1 points there and flags are NC & NZ. If we reached
                                             ;* the end of the text save area and cannot find the line, flags
                                             ;* are C & NZ.
                                             ;* 'FNDLN' will initialize A1 to the beginning of the text save
                                             ;* area to start the search. Some other entries of this routine
                                             ;* will not initialize A1 and do the search.
                                             ;* 'FNDLNP' will start with A1 and search for the line no.
                                             ;* 'FNDNXT' will bump A1 by 2, find a CR and then start search.
                                             ;* 'FNDSKP' uses A1 to find a CR, and then starts the search.
                                             ;*
   9567 FFFCC894                             GETLN:
   9568 FFFCC894 6100 F772                   	BSR	GOOUT		;display the prompt
   9569 FFFCC898 103C 0020                   	MOVE.B	#' ',D0      ;   and a space
   9570 FFFCC89C 6100 F76A                   	BSR	GOOUT
   9571 FFFCC8A0 41F8 0630                   	LEA	BUFFER,A0;	A0 is the buffer pointer
   9572 FFFCC8A4                             GL1:
   9573 FFFCC8A4 6100 02A8                   	BSR.L	CHKIO;		check keyboard
   9574 FFFCC8A8 67FA                        	BEQ	GL1	;	wait for a char. to come in
   9575 FFFCC8AA B03C 0008                   	CMP.B	#CTRLH,D0	;delete last character?
   9576 FFFCC8AE 6726                        	BEQ	GL3	;	if so
   9577 FFFCC8B0 B03C 0018                   	CMP.B	#CTRLX,D0;	delete the whole line?
   9578 FFFCC8B4 6744                        	BEQ	GL4	;	if so
   9579 FFFCC8B6 B03C 000D                   	CMP.B	#CR,D0	;	accept a CR
   9580 FFFCC8BA 6706                        	BEQ	GL2
   9581 FFFCC8BC B03C 0020                   	CMP.B	#' ',D0  ;       if other control char., discard it
   9582 FFFCC8C0 65E2                        	BCS	GL1
   9583 FFFCC8C2                             GL2:
   9584 FFFCC8C2 10C0                        	MOVE.B	D0,(A0)+;	save the char.
   9585 FFFCC8C4 6100 F742                   	BSR	GOOUT		;echo the char back out
   9586 FFFCC8C8 B03C 000D                   	CMP.B	#CR,D0	;	if it's a CR, end the line
   9587 FFFCC8CC 675C                        	BEQ	GL7
   9588 FFFCC8CE B1FC 0000 067F              	CMP.L	#(BUFFER+BUFLEN-1),A0	;any more room?
   9589 FFFCC8D4 65CE                        	BCS	GL1	;	yes: get some more, else delete last char.
   9590 FFFCC8D6                             GL3:
   9591 FFFCC8D6 103C 0008                   	MOVE.B	#CTRLH,D0	;delete a char. if possible
   9592 FFFCC8DA 6100 F72C                   	BSR	GOOUT
   9593 FFFCC8DE 103C 0020                   	MOVE.B	#' ',D0
   9594 FFFCC8E2 6100 F724                   	BSR	GOOUT
   9595 FFFCC8E6 B1FC 0000 0630              	CMP.L	#BUFFER,A0	;any char.'s left?
   9596 FFFCC8EC 63B6                        	BLS	GL1		;if not
   9597 FFFCC8EE 103C 0008                   	MOVE.B	#CTRLH,D0;	if so, finish the BS-space-BS sequence
   9598 FFFCC8F2 6100 F714                   	BSR	GOOUT
   9599 FFFCC8F6 5388                        	SUBQ.L	#1,A0	;	decrement the text pointer
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 108
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9600 FFFCC8F8 60AA                        	BRA	GL1		;back for more
   9601 FFFCC8FA                             GL4:
   9602 FFFCC8FA 2208                        	MOVE.L	A0,D1	;	delete the whole line
   9603 FFFCC8FC 0481 0000 0630              	SUB.L	#BUFFER,D1;	figure out how many backspaces we need
   9604 FFFCC902 671E                        	BEQ	GL6		;if none needed, branch
   9605 FFFCC904 5381                        	SUBQ	#1,D1	;	adjust for DBRA
   9606 FFFCC906                             GL5:
   9607 FFFCC906 103C 0008                   	MOVE.B	#CTRLH,D0	;and display BS-space-BS sequences
   9608 FFFCC90A 6100 F6FC                   	BSR	GOOUT
   9609 FFFCC90E 103C 0020                   	MOVE.B	#' ',D0
   9610 FFFCC912 6100 F6F4                   	BSR	GOOUT
   9611 FFFCC916 103C 0008                   	MOVE.B	#CTRLH,D0
   9612 FFFCC91A 6100 F6EC                   	BSR	GOOUT
   9613 FFFCC91E 51C9 FFE6                   	DBRA	D1,GL5
   9614 FFFCC922                             GL6:
   9615 FFFCC922 41F8 0630                   	LEA	BUFFER,A0	;reinitialize the text pointer
   9616 FFFCC926 6000 FF7C                   	BRA	GL1		;and go back for more
   9617 FFFCC92A                             GL7:
   9618 FFFCC92A 103C 000A                   	MOVE.B	#LF,D0	;	echo a LF for the CR
   9619 FFFCC92E 6100 F6D8                   	BSR	GOOUT
   9620 FFFCC932 4E75                        	RTS
                                             
   9622 FFFCC934                             FNDLN:
   9623 FFFCC934 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;line no. must be < 65535
   9624 FFFCC93A 6400 FF4E                   	BCC	QHOW
   9625 FFFCC93E 2279 FFFC C01C              	MOVE.L	TXTBGN,A1	;init. the text save pointer
                                             
   9627 FFFCC944                             FNDLNP:
   9628 FFFCC944 2478 0624                   	MOVE.L	TXTUNF,A2	;check if we passed the end
   9629 FFFCC948 538A                        	SUBQ.L	#1,A2
   9630 FFFCC94A B5C9                        	CMP	A1,A2
   9631 FFFCC94C 650C                        	BCS	FNDRET	;	if so, return with Z=0 & C=1
   9632 FFFCC94E 1419                        	MOVE.B	(A1)+,D2	;if not, get a line no.
   9633 FFFCC950 E18A                        	LSL	#8,D2
   9634 FFFCC952 1411                        	MOVE.B	(A1),D2
   9635 FFFCC954 5389                        	SUBQ.L	#1,A1
   9636 FFFCC956 B481                        	CMP	D1,D2		;is this the line we want?
   9637 FFFCC958 6502                        	BCS	FNDNXT		;no, not there yet
   9638 FFFCC95A                             FNDRET:
   9639 FFFCC95A 4E75                        	RTS			;return the cond. codes
                                             
   9641 FFFCC95C                             FNDNXT:
   9642 FFFCC95C 5489                        	ADDQ.L	#2,A1;		find the next line
                                             
   9644 FFFCC95E                             FNDSKP:
   9645 FFFCC95E 0C19 000D                   	CMP.B	#CR,(A1)+	;try to find a CR
   9646 FFFCC962 66FA                        	BNE	FNDSKP		;keep looking
   9647 FFFCC964 60DE                        	BRA	FNDLNP		;check if end of text
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** MVUP *** MVDOWN *** POPA *** PUSHA ***
                                             ;*
                                             ;* 'MVUP' moves a block up from where A1 points to where A2 points
                                             ;* until A1=A3
                                             ;*
                                             ;* 'MVDOWN' moves a block down from where A1 points to where A3
                                             ;* points until A1=A2
                                             ;*
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 109
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* 'POPA' restores the 'FOR' loop variable save area from the stack
                                             ;*
                                             ;* 'PUSHA' stacks for 'FOR' loop variable save area onto the stack
                                             ;*
   9664 FFFCC966                             MVUP:
   9665 FFFCC966 B7C9                        	CMP.L	A1,A3	;	see the above description
   9666 FFFCC968 6704                        	BEQ	MVRET
   9667 FFFCC96A 14D9                        	MOVE.B	(A1)+,(A2)+
   9668 FFFCC96C 60F8                        	BRA	MVUP
   9669 FFFCC96E                             MVRET:
   9670 FFFCC96E 4E75                        	RTS
                                             
   9672 FFFCC970                             MVDOWN:
   9673 FFFCC970 B5C9                        	CMP.L	A1,A2	;	see the above description
   9674 FFFCC972 67FA                        	BEQ	MVRET
   9675 FFFCC974 1721                        	MOVE.B	-(A1),-(A3)
   9676 FFFCC976 60F8                        	BRA	MVDOWN
                                             
   9678 FFFCC978                             POPA:
   9679 FFFCC978 2C5F                        	MOVE.L	(SP)+,A6	;A6 = return address
   9680 FFFCC97A 21DF 0610                   	MOVE.L	(SP)+,LOPVAR	;restore LOPVAR, but zero means no more
   9681 FFFCC97E 6710                        	BEQ	PP1
   9682 FFFCC980 21DF 0614                   	MOVE.L	(SP)+,LOPINC	;if not zero, restore the rest
   9683 FFFCC984 21DF 0618                   	MOVE.L	(SP)+,LOPLMT
   9684 FFFCC988 21DF 061C                   	MOVE.L	(SP)+,LOPLN
   9685 FFFCC98C 21DF 0620                   	MOVE.L	(SP)+,LOPPT
   9686 FFFCC990                             PP1:
   9687 FFFCC990 4ED6                        	JMP	(A6)	;	return
                                             
   9689 FFFCC992                             PUSHA:
   9690 FFFCC992 2238 062C                   	MOVE.L	STKLMT,D1	;Are we running out of stack room?
   9691 FFFCC996 928F                        	SUB.L	SP,D1
   9692 FFFCC998 6400 FEE6                   	BCC	QSORRY		;if so, say we're sorry
   9693 FFFCC99C 2C5F                        	MOVE.L	(SP)+,A6	;else get the return address
   9694 FFFCC99E 2238 0610                   	MOVE.L	LOPVAR,D1	;save loop variables
   9695 FFFCC9A2 6710                        	BEQ	PU1		;if LOPVAR is zero, that's all
   9696 FFFCC9A4 2F38 0620                   	MOVE.L	LOPPT,-(SP)	;else save all the others
   9697 FFFCC9A8 2F38 061C                   	MOVE.L	LOPLN,-(SP)
   9698 FFFCC9AC 2F38 0618                   	MOVE.L	LOPLMT,-(SP)
   9699 FFFCC9B0 2F38 0614                   	MOVE.L	LOPINC,-(SP)
   9700 FFFCC9B4                             PU1:
   9701 FFFCC9B4 2F01                        	MOVE.L	D1,-(SP)
   9702 FFFCC9B6 4ED6                        	JMP	(A6)		;return
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** PRTSTG *** QTSTG *** PRTNUM *** PRTLN ***
                                             ;*
                                             ;* 'PRTSTG' prints a string pointed to by A1. It stops printing
                                             ;* and returns to the caller when either a CR is printed or when
                                             ;* the next byte is the same as what was passed in D0 by the
                                             ;* caller.
                                             ;*
                                             ;* 'QTSTG' looks for an underline (back-arrow on some systems),
                                             ;* single-quote, or double-quote.  If none of these are found, returns
                                             ;* to the caller.  If underline, outputs a CR without a LF.  If single
                                             ;* or double quote, prints the quoted string and demands a matching
                                             ;* end quote.  After the printing, the next 2 bytes of the caller are
                                             ;* skipped over (usually a short branch instruction).
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 110
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
                                             ;* 'PRTNUM' prints the 32 bit number in D1, leading blanks are added if
                                             ;* needed to pad the number of spaces to the number in D4.
                                             ;* However, if the number of digits is larger than the no. in
                                             ;* D4, all digits are printed anyway. Negative sign is also
                                             ;* printed and counted in, positive sign is not.
                                             ;*
                                             ;* 'PRTLN' prints the saved text line pointed to by A1
                                             ;* with line no. and all.
                                             ;*
   9730 FFFCC9B8                             PRTSTG:
   9731 FFFCC9B8 1200                        	MOVE.B	D0,D1	;	save the stop character
   9732 FFFCC9BA                             PS1:
   9733 FFFCC9BA 1019                        	MOVE.B	(A1)+,D0	;get a text character
   9734 FFFCC9BC B200                        	CMP.B	D0,D1		;same as stop character?
   9735 FFFCC9BE 6712                        	BEQ	PRTRET		;if so, return
   9736 FFFCC9C0 6100 F646                   	BSR	GOOUT		;display the char.
   9737 FFFCC9C4 B03C 000D                   	CMP.B	#CR,D0		;;is it a C.R.?
   9738 FFFCC9C8 66F0                        	BNE	PS1		;no, go back for more
   9739 FFFCC9CA 103C 000A                   	MOVE.B	#LF,D0	;	yes, add a L.F.
   9740 FFFCC9CE 6100 F638                   	BSR	GOOUT
   9741 FFFCC9D2                             PRTRET:
   9742 FFFCC9D2 4E75                        	RTS			;then return
                                             
   9744 FFFCC9D4                             QTSTG:
   9745 FFFCC9D4 6100 00CE                   	BSR.L	TSTC;		*** QTSTG ***
   9746 FFFCC9D8 22 1B                       	DC.B	'"',QT3-$
   9747 FFFCC9DA 103C 0022                   	MOVE.B	#'"',D0  ;       it is a "
   9748 FFFCC9DE                             QT1:
   9749 FFFCC9DE 2248                        	MOVE.L	A0,A1
   9750 FFFCC9E0 6100 FFD6                   	BSR	PRTSTG		;print until another
   9751 FFFCC9E4 2049                        	MOVE.L	A1,A0
   9752 FFFCC9E6 225F                        	MOVE.L	(SP)+,A1;	pop return address
   9753 FFFCC9E8 B03C 000A                   	CMP.B	#LF,D0	;	was last one a CR?
   9754 FFFCC9EC 6700 F834                   	BEQ	RUNNXL		;if so, run next line
   9755 FFFCC9F0                             QT2:
   9756 FFFCC9F0 5489                        	ADDQ.L	#2,A1	;	skip 2 bytes on return
   9757 FFFCC9F2 4ED1                        	JMP	(A1)		;return
   9758 FFFCC9F4                             QT3:
   9759 FFFCC9F4 6100 00AE                   	BSR.L	TSTC	;	is it a single quote?
   9760 FFFCC9F8 27 07                       	DC.B	'\'',QT4-$
   9761 FFFCC9FA 103C 0027                   	MOVE.B	#'''',D0  ;      if so, do same as above
   9762 FFFCC9FE 60DE                        	BRA	QT1
   9763 FFFCCA00                             QT4:
   9764 FFFCCA00 6100 00A2                   	BSR.L	TSTC		;is it an underline?
   9765 FFFCCA04 5F 0D                       	DC.B	'_',QT5-$
   9766 FFFCCA06 103C 000D                   	MOVE.B	#CR,D0		;if so, output a CR without LF
   9767 FFFCCA0A 6100 F5FC                   	BSR.L	GOOUT
   9768 FFFCCA0E 225F                        	MOVE.L	(SP)+,A1	;pop return address
   9769 FFFCCA10 60DE                        	BRA	QT2
   9770 FFFCCA12                             QT5:
   9771 FFFCCA12 4E75                        	RTS			;none of the above
                                             
   9773 FFFCCA14                             PRTNUM:
   9774 FFFCCA14 2601                        	MOVE.L	D1,D3	;	save the number for later
   9775 FFFCCA16 2F04                        	MOVE	D4,-(SP)	;save the width value
   9776 FFFCCA18 1F3C 00FF                   	MOVE.B	#0xFF,-(SP)	;flag for end of digit string
   9777 FFFCCA1C 4A81                        	TST.L	D1		;is it negative?
   9778 FFFCCA1E 6A04                        	BPL	PN1		;if not
   9779 FFFCCA20 4481                        	NEG.L	D1	;	else make it positive
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 111
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9780 FFFCCA22 5384                        	SUBQ	#1,D4	;	one less for width count
   9781 FFFCCA24                             PN1:
   9782 FFFCCA24 82FC 000A                   	DIVU	#10,D1	;	get the next digit
   9783 FFFCCA28 690A                        	BVS	PNOV	;	overflow flag set?
   9784 FFFCCA2A 2001                        	MOVE.L	D1,D0	;	if not, save remainder
   9785 FFFCCA2C 0281 0000 FFFF              	AND.L	#0xFFFF,D1	;strip the remainder
   9786 FFFCCA32 601A                        	BRA	TOASCII 	;skip the overflow stuff
   9787 FFFCCA34                             PNOV:
   9788 FFFCCA34 2001                        	MOVE	D1,D0	;	prepare for long word division
   9789 FFFCCA36 4241                        	CLR.W	D1		;zero out low word
   9790 FFFCCA38 4841                        	SWAP	D1		;high word into low
   9791 FFFCCA3A 82FC 000A                   	DIVU	#10,D1	;	divide high word
   9792 FFFCCA3E 2401                        	MOVE	D1,D2	;	save quotient
   9793 FFFCCA40 2200                        	MOVE	D0,D1	;	low word into low
   9794 FFFCCA42 82FC 000A                   	DIVU	#10,D1	;	divide low word
   9795 FFFCCA46 2001                        	MOVE.L	D1,D0	;	D0 = remainder
   9796 FFFCCA48 4841                        	SWAP	D1	;	R/Q becomes Q/R
   9797 FFFCCA4A 2202                        	MOVE	D2,D1	;	D1 is low/high
   9798 FFFCCA4C 4841                        	SWAP	D1	;	D1 is finally high/low
   9799 FFFCCA4E                             TOASCII:
   9800 FFFCCA4E 4840                        	SWAP	D0	;	get remainder
   9801 FFFCCA50 1F00                        	MOVE.B	D0,-(SP);	stack it as a digit
   9802 FFFCCA52 4840                        	SWAP	D0
   9803 FFFCCA54 5384                        	SUBQ	#1,D4	;	decrement width count
   9804 FFFCCA56 4A81                        	TST.L	D1		;if quotient is zero, we're done
   9805 FFFCCA58 66CA                        	BNE	PN1
   9806 FFFCCA5A 5384                        	SUBQ	#1,D4	;	adjust padding count for DBRA
   9807 FFFCCA5C 6B0C                        	BMI	PN4		;skip padding if not needed
   9808 FFFCCA5E                             PN3:
   9809 FFFCCA5E 103C 0020                   	MOVE.B	#' ',D0  ;       display the required leading spaces
   9810 FFFCCA62 6100 F5A4                   	BSR	GOOUT
   9811 FFFCCA66 51CC FFF6                   	DBRA	D4,PN3
   9812 FFFCCA6A                             PN4:
   9813 FFFCCA6A 4A83                        	TST.L	D3		;is number negative?
   9814 FFFCCA6C 6A08                        	BPL	PN5
   9815 FFFCCA6E 103C 002D                   	MOVE.B	#'-',D0  ;       if so, display the sign
   9816 FFFCCA72 6100 F594                   	BSR	GOOUT
   9817 FFFCCA76                             PN5:
   9818 FFFCCA76 101F                        	MOVE.B	(SP)+,D0	;now unstack the digits and display
   9819 FFFCCA78 6B0A                        	BMI	PNRET		;until the flag code is reached
   9820 FFFCCA7A 0600 0030                   	ADD.B	#'0',D0   ;      make into ASCII
   9821 FFFCCA7E 6100 F588                   	BSR	GOOUT
   9822 FFFCCA82 60F2                        	BRA	PN5
   9823 FFFCCA84                             PNRET:
   9824 FFFCCA84 281F                        	MOVE	(SP)+,D4	;restore width value
   9825 FFFCCA86 4E75                        	RTS
                                             
   9827 FFFCCA88                             PRTLN:
   9828 FFFCCA88 4281                        	CLR.L	D1
   9829 FFFCCA8A 1219                        	MOVE.B	(A1)+,D1	;get the binary line number
   9830 FFFCCA8C E189                        	LSL	#8,D1
   9831 FFFCCA8E 1219                        	MOVE.B	(A1)+,D1
   9832 FFFCCA90 7805                        	MOVEQ	#5,D4		;display a 5 digit line no.
   9833 FFFCCA92 6100 FF80                   	BSR	PRTNUM
   9834 FFFCCA96 103C 0020                   	MOVE.B	#' ',D0      ;   followed by a blank
   9835 FFFCCA9A 6100 F56C                   	BSR	GOOUT
   9836 FFFCCA9E 4280                        	CLR	D0		;stop char. is a zero
   9837 FFFCCAA0 6000 FF16                   	BRA	PRTSTG	;	display the rest of the line
                                             
                                             ;*
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 112
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* ===== Test text byte following the call to this subroutine. If it
                                             ;*	equals the byte pointed to by A0, return to the code following
                                             ;*	the call. If they are not equal, branch to the point
                                             ;*	indicated by the offset byte following the text byte.
                                             ;*
   9845 FFFCCAA4                             TSTC:
   9846 FFFCCAA4 6100 0050                   	BSR	IGNBLK		;ignore leading blanks
   9847 FFFCCAA8 225F                        	MOVE.L	(SP)+,A1	;get the return address
   9848 FFFCCAAA 1219                        	MOVE.B	(A1)+,D1	;get the byte to compare
   9849 FFFCCAAC B210                        	CMP.B	(A0),D1 	;is it = to what A0 points to?
   9850 FFFCCAAE 6708                        	BEQ	TC1		;if so
   9851 FFFCCAB0 4281                        	CLR.L	D1		;If not, add the second
   9852 FFFCCAB2 1211                        	MOVE.B	(A1),D1 ;	byte following the call to
   9853 FFFCCAB4 D3C1                        	ADD.L	D1,A1	;	the return address.
   9854 FFFCCAB6 4ED1                        	JMP	(A1)		;jump to the routine
   9855 FFFCCAB8                             TC1:
   9856 FFFCCAB8 5288                        	ADDQ.L	#1,A0	;	if equal, bump text pointer
   9857 FFFCCABA 5289                        	ADDQ.L	#1,A1	;	Skip the 2 bytes following
   9858 FFFCCABC 4ED1                        	JMP	(A1)		;the call and continue.
                                             
                                             ;*
                                             ;* ===== See if the text pointed to by A0 is a number. If so,
                                             ;*	return the number in D1 and the number of digits in D2,
                                             ;*	else return zero in D1 and D2.
                                             ;*
   9865 FFFCCABE                             TSTNUM:
   9866 FFFCCABE 4281                        	CLR.L	D1		;initialize return parameters
   9867 FFFCCAC0 4282                        	CLR	D2
   9868 FFFCCAC2 6100 0032                   	BSR	IGNBLK		;skip over blanks
   9869 FFFCCAC6                             TN1:
   9870 FFFCCAC6 0C10 0030                   	CMP.B	#'0',(A0) ;      is it less than zero?
   9871 FFFCCACA 6528                        	BCS	TSNMRET 	;if so, that's all
   9872 FFFCCACC 0C10 0039                   	CMP.B	#'9',(A0) ;      is it greater than nine?
   9873 FFFCCAD0 6222                        	BHI	TSNMRET 	;if so, return
   9874 FFFCCAD2 B2BC 0CCC CCCC              	CMP.L	#214748364,D1	;see if there's room for new digit
   9875 FFFCCAD8 6400 FDB0                   	BCC	QHOW		;if not, we've overflowd
   9876 FFFCCADC 2001                        	MOVE.L	D1,D0	;	quickly multiply result by 10
   9877 FFFCCADE D281                        	ADD.L	D1,D1
   9878 FFFCCAE0 D281                        	ADD.L	D1,D1
   9879 FFFCCAE2 D280                        	ADD.L	D0,D1
   9880 FFFCCAE4 D281                        	ADD.L	D1,D1
   9881 FFFCCAE6 1018                        	MOVE.B	(A0)+,D0	;add in the new digit
   9882 FFFCCAE8 0280 0000 000F              	AND.L	#0xF,D0
   9883 FFFCCAEE D280                        	ADD.L	D0,D1
   9884 FFFCCAF0 5282                        	ADDQ	#1,D2		;increment the no. of digits
   9885 FFFCCAF2 60D2                        	BRA	TN1
   9886 FFFCCAF4                             TSNMRET:
   9887 FFFCCAF4 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Skip over blanks in the text pointed to by A0.
                                             ;*
   9892 FFFCCAF6                             IGNBLK:
   9893 FFFCCAF6 0C10 0020                   	CMP.B	#' ',(A0)   ;    see if it's a space
   9894 FFFCCAFA 6604                        	BNE	IGBRET		;if so, swallow it
   9895 FFFCCAFC                             IGB1:
   9896 FFFCCAFC 5288                        	ADDQ.L	#1,A0	;	increment the text pointer
   9897 FFFCCAFE 60F6                        	BRA	IGNBLK
   9898 FFFCCB00                             IGBRET:
   9899 FFFCCB00 4E75                        	RTS
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 113
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             ;*
                                             ;* ===== Convert the line of text in the input buffer to upper
                                             ;*	case (except for stuff between quotes).
                                             ;*
   9905 FFFCCB02                             TOUPBUF:
   9906 FFFCCB02 41F8 0630                   	LEA	BUFFER,A0	;set up text pointer
   9907 FFFCCB06 4201                        	CLR.B	D1		;clear quote flag
   9908 FFFCCB08                             TOUPB1:
   9909 FFFCCB08 1018                        	MOVE.B	(A0)+,D0	;get the next text char.
   9910 FFFCCB0A B03C 000D                   	CMP.B	#CR,D0		;is it end of line?
   9911 FFFCCB0E 671A                        	BEQ	TOUPBRT 	;if so, return
   9912 FFFCCB10 B03C 0022                   	CMP.B	#'"',D0  ;       a double quote?
   9913 FFFCCB14 6716                        	BEQ	DOQUO
   9914 FFFCCB16 B03C 0027                   	CMP.B	#'''',D0  ;      or a single quote?
   9915 FFFCCB1A 6710                        	BEQ	DOQUO
   9916 FFFCCB1C 4A01                        	TST.B	D1		;inside quotes?
   9917 FFFCCB1E 66E8                        	BNE	TOUPB1		;if so, do the next one
   9918 FFFCCB20 6100 001A                   	BSR	TOUPPER 	;convert to upper case
   9919 FFFCCB24 1100                        	MOVE.B	D0,-(A0);	store it
   9920 FFFCCB26 5288                        	ADDQ.L	#1,A0
   9921 FFFCCB28 60DE                        	BRA	TOUPB1		;and go back for more
   9922 FFFCCB2A                             TOUPBRT:
   9923 FFFCCB2A 4E75                        	RTS
                                             
   9925 FFFCCB2C                             DOQUO:
   9926 FFFCCB2C 4A01                        	TST.B	D1	;	are we inside quotes?
   9927 FFFCCB2E 6604                        	BNE	DOQUO1
   9928 FFFCCB30 1200                        	MOVE.B	D0,D1	;	if not, toggle inside-quotes flag
   9929 FFFCCB32 60D4                        	BRA	TOUPB1
   9930 FFFCCB34                             DOQUO1:
   9931 FFFCCB34 B200                        	CMP.B	D0,D1	;	make sure we're ending proper quote
   9932 FFFCCB36 66D0                        	BNE	TOUPB1		;if not, ignore it
   9933 FFFCCB38 4201                        	CLR.B	D1		;else clear quote flag
   9934 FFFCCB3A 60CC                        	BRA	TOUPB1
                                             
                                             ;*
                                             ;* ===== Convert the character in D0 to upper case
                                             ;*
   9939 FFFCCB3C                             TOUPPER:
   9940 FFFCCB3C B03C 0061                   	CMP.B	#'a',D0   ;      is it < 'a'?
   9941 FFFCCB40 650A                        	BCS	TOUPRET
   9942 FFFCCB42 B03C 007A                   	CMP.B	#'z',D0        ; or > 'z'?
   9943 FFFCCB46 6204                        	BHI	TOUPRET
   9944 FFFCCB48 0400 0020                   	SUB.B	#32,D0		;if not, make it upper case
   9945 FFFCCB4C                             TOUPRET:
   9946 FFFCCB4C 4E75                        	RTS
                                             
                                             ;*
                                             ;* 'CHKIO' checks the input. If there's no input, it will return
                                             ;* to the caller with the Z flag set. If there is input, the Z
                                             ;* flag is cleared and the input byte is in D0. However, if a
                                             ;* control-C is read, 'CHKIO' will warm-start BASIC and will not
                                             ;* return to the caller.
                                             ;*
   9955 FFFCCB4E                             CHKIO:
   9956 FFFCCB4E 6100 F4BC                   	BSR.L	GOIN	;	get input if possible
   9957 FFFCCB52 670A                        	BEQ	CHKRET		;if Zero, no input
   9958 FFFCCB54 B03C 0003                   	CMP.B	#CTRLC,D0	;is it control-C?
   9959 FFFCCB58 6604                        	BNE	CHKRET		;if not
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 114
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9960 FFFCCB5A 6000 F504                   	BRA.L	WSTART		;if so, do a warm start
   9961 FFFCCB5E                             CHKRET:
   9962 FFFCCB5E 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Display a CR-LF sequence
                                             ;*
   9967 FFFCCB60                             CRLF:
   9968 FFFCCB60 4DF9 FFFC CC08              	LEA	CLMSG,A6
                                             
                                             ;*
                                             ;* ===== Display a zero-ended string pointed to by register A6
                                             ;*
   9973 FFFCCB66                             PRMESG:
   9974 FFFCCB66 101E                        	MOVE.B	(A6)+,D0	;get the char.
   9975 FFFCCB68 6706                        	BEQ	PRMRET		;if it's zero, we're done
   9976 FFFCCB6A 6100 F49C                   	BSR	GOOUT		;else display it
   9977 FFFCCB6E 60F6                        	BRA	PRMESG
   9978 FFFCCB70                             PRMRET:
   9979 FFFCCB70 4E75                        	RTS
                                             
                                             ;******************************************************
                                             ;* The following routines are the only ones that need *
                                             ;* to be changed for a different I/O environment.     *
                                             ;******************************************************
                                             
                                             UART		EQU		0xFFDC0A00
                                             UART_LS		EQU		UART+1
                                             UART_CTRL	EQU		UART+7
                                             KEYBD		EQU		0xFFDC0000
                                             
                                             
                                             ;*
                                             ;* ===== Output character to the console (Port 1) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
   9996 FFFCCB72                             OUTC:
   9997 FFFCCB72 48E7 C000                   	MOVEM.L	D0/D1,-(SP)
   9998 FFFCCB76 2200                        	MOVE.L	D0,D1
   9999 FFFCCB78 7006                        	MOVEQ	#6,D0
  10000 FFFCCB7A 4E4F                        	TRAP	#15
  10001 FFFCCB7C 4CDF 0003                   	MOVEM.L	(SP)+,D0/D1
  10002 FFFCCB80 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the console into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10008 FFFCCB82                             INC:
  10009 FFFCCB82 2F01                        	move.l	d1,-(a7)
  10010 FFFCCB84 7007                        	moveq	#7,d0		; check for key
  10011 FFFCCB86 4E4F                        	trap	#15
  10012 FFFCCB88 4A00                        	tst.b	d0
  10013 FFFCCB8A 670A                        	beq.s	.0001
  10014 FFFCCB8C 7005                        	moveq	#5,d0
  10015 FFFCCB8E 4E4F                        	trap	#15
  10016 FFFCCB90 2001                        	move.l	d1,d0
  10017 FFFCCB92 221F                        	move.l	(a7)+,d1
  10018 FFFCCB94 4A00                        	tst.b	d0
  10019 FFFCCB96                             .0001:
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 115
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10020 FFFCCB96 4E75                        	rts
                                             
                                             ;*
                                             ;* ===== Output character to the host (Port 2) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10026 FFFCCB98                             AUXOUT:
  10027 FFFCCB98 0839 0005 FFDC 0A01         	BTST	#5,UART_LS	;is port ready for a character?
  10028 FFFCCBA0 67F6                        	BEQ		AUXOUT		;if not, wait for it
  10029 FFFCCBA2 13C0 FFDC 0A00              	MOVE.B	D0,UART		;out it goes.
  10030 FFFCCBA8 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the host into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10036 FFFCCBAA                             AUXIN:
  10037 FFFCCBAA 0839 0000 FFDC 0A01         	BTST	#0,UART_LS	;is character ready?
  10038 FFFCCBB2 670A                        	BEQ		AXIRET		;if not, return Zero status
  10039 FFFCCBB4 1039 FFDC 0A00              	MOVE.B	UART,D0		;else get the character
  10040 FFFCCBBA 0200 007F                   	AND.B	#0x7F,D0 	;zero out the high bit
  10041 FFFCCBBE                             AXIRET:
  10042 FFFCCBBE 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Return to the resident monitor, operating system, etc.
                                             ;*
  10047 FFFCCBC0                             BYEBYE:
  10048 FFFCCBC0 1E3C 00E4                   	MOVE.B	#228,D7 	;return to Tutor
  10049 FFFCCBC4 4E4E                        	TRAP	#14
                                             
  10051 FFFCCBC6                             INITMSG:
  10052 FFFCCBC6 0D 0A 47 6F 72 64 6F 27     	DC.B	CR,LF,"Gordo's MC68000 Tiny BASIC, v1.2",CR,LF,LF,0
  10053 FFFCCBCE 73 20 4D 43 36 38 30 30     
  10054 FFFCCBD6 30 20 54 69 6E 79 20 42     
  10055 FFFCCBDE 41 53 49 43 2C 20 76 31     
  10056 FFFCCBE6 2E 32 0D 0A 0A 00           
  10057 FFFCCBEC                             OKMSG:
  10058 FFFCCBEC 0D 0A 4F 4B 0D 0A 00        	DC.B	CR,LF,'OK',CR,LF,0
  10059 FFFCCBF3                             HOWMSG:
  10060 FFFCCBF3 48 6F 77 3F 0D 0A 00        	DC.B	'How?',CR,LF,0
  10061 FFFCCBFA                             WHTMSG:
  10062 FFFCCBFA 57 68 61 74 3F 0D 0A 00     	DC.B	'What?',CR,LF,0
                                             
  10064 FFFCCC02                             SRYMSG:
  10065 FFFCCC02 53 6F 72 72 79 2E           	DC.B	'Sorry.'
  10066 FFFCCC08                             CLMSG:
  10067 FFFCCC08 0D 0A 00                    	DC.B	CR,LF,0
  10068 FFFCCC0B 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             LSTROM	EQU		$
                                             	;	end of possible ROM area
                                             
Finitron asm68 assembler    version 5.6   Thu Dec 07 01:52:47 2017     Page 115
bootrom.asm


                                             .include C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             	;
                                             
                                             
