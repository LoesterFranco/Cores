Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 1
bootrom.asm

                                             ; N4V68kSys bootrom - (C) 2017 Robert Finch, Waterloo
                                             ;
                                             ; This file is part of N4V68kSys
                                             ;
                                             ; how to build:
                                             ; 1. assemble using "asm68 bootrom.asm /G00 /olyebvm"
                                             ; 2. copy bootrom.vh to the correct directory if not already there
                                             ;
                                             ;------------------------------------------------------------------------------
                                             ;
                                             ; system memory map
                                             ;
                                             ;
                                             ; 00000000 +----------------+
                                             ;          | startup sp,pc  | 8 B
                                             ; 00000008 +----------------+
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ;          :  dram memory   : 512 MB
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ; 20000000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FF800000 +----------------+
                                             ;          |                |
                                             ;          : display buffer : 896k
                                             ;          |                |
                                             ; FF8E0000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFD00000 +----------------+
                                             ;          |                |
                                             ;          :    I/O area    : 1.0 M
                                             ;          |                |
                                             ; FFE00000 +----------------+
                                             ;          |   VDG regs     |
                                             ; FFE01000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFFC0000 +----------------+
                                             ;          |                |
                                             ;          :    boot rom    :
                                             ;          |                |
                                             ; FFFFFFFF +----------------+
                                             ;
                                             ;
                                             RGBMASK		EQU		%0111111111111111
                                             RED			EQU		%0111110000000000
                                             DARK_BLUE	EQU		%0000000000001111
                                             BLACK		EQU		%0000000000000000
                                             WHITE		EQU		%0111111111111111
                                             
                                             CTRLC	EQU		$03
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 2
bootrom.asm
                                             CTRLH	EQU		$08
                                             LF		EQU		$0A
                                             CR		EQU		$0D
                                             
                                             SC_F12  EQU    $07
                                             SC_C    EQU    $21
                                             SC_T    EQU    $2C
                                             SC_Z    EQU    $1A
                                             SC_KEYUP	EQU		$F0
                                             SC_EXTEND   EQU		$E0
                                             SC_CTRL		EQU		$14
                                             SC_RSHIFT	EQU		$59
                                             SC_NUMLOCK	EQU		$77
                                             SC_SCROLLLOCK	EQU	$7E
                                             SC_CAPSLOCK		EQU	$58
                                             SC_ALT		EQU		$11
                                             SC_LSHIFT	EQU		$12
                                             SC_DEL		EQU		$71		; extend
                                             SC_LCTRL	EQU		$58
                                             SC_TAB      EQU		$0D
                                             
                                             TEXTCOLS	EQU	40
                                             TEXTROWS	EQU	32
                                             
                                             VDGBUF		EQU	$FF800000
                                             VDGREG		EQU	$FFE00000
                                             VDG_CURX	EQU	$0440
                                             VDG_CURY	EQU	$0442
                                             VDG_CURSZ	EQU	$0444
                                             VDG_CURFLSH	EQU	$0446
                                             VDG_CURCLR0	EQU	$0448
                                             VDG_CURCLR1	EQU	$044A
                                             VDG_CURCLR2	EQU	$044C
                                             VDG_CURCLR3	EQU	$044E
                                             VDG_CURIMG	EQU	$0460
                                             I2C			EQU	$FFDC0E00
                                             I2C2		EQU	$FFDC0E10
                                             VirtScreen	EQU	$1FFF0000
                                             KEYBD		EQU	$FFDC0000
                                             leds		EQU	$FFDC0600
                                             rand		EQU	$FFDC0C00
                                             
                                             fgcolor		EQU	$10002
                                             bkcolor		EQU	$10004
                                             fntsz		EQU	$10006
                                             memend		EQU	$10008
                                             CursorRow	EQU	$10418
                                             CursorCol	EQU $10419
                                             TextRows	EQU	$1041A
                                             TextCols	EQU	$1041B
                                             TextCurpos	EQU	$1041C
                                             TextScr		EQU	$10420
                                             KeybdEcho		EQU	$10424
                                             KeybdWaitFlag	EQU	$10425
                                             _KeyState1		EQU	$10426
                                             _KeyState2		EQU	$10427
                                             KeybdLEDs		EQU	$10428
                                             gfx_control_reg_mem		EQU	$1042C
                                             milliseconds	EQU	$10430
                                             systick			EQU	$10434
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 3
bootrom.asm
                                             
                                             GFX_CONTROL			EQU		$00
                                             GFX_STATUS			EQU		$04
                                             GFX_TARGET_BASE		EQU		$10
                                             GFX_TARGET_SIZE_X	EQU		$14
                                             GFX_TARGET_SIZE_Y	EQU		$18
                                             GFX_DEST_PIXEL_X	EQU		$38
                                             GFX_DEST_PIXEL_Y	EQU		$3C
                                             GFX_DEST_PIXEL_Z	EQU		$40
                                             GFX_COLOR0			EQU		$84
                                             
                                             GFX_ACTIVE_POINT0	EQU		0
                                             GFX_ACTIVE_POINT1	EQU		$10000
                                             GFX_LINE			EQU		$200
                                             
                                             reg_d0			EQU	$10500
                                             reg_d1			EQU	$10504
                                             reg_d2			EQU	$10508
                                             reg_d3			EQU	$1050C
                                             reg_d4			EQU $10510
                                             reg_d5			EQU $10514
                                             reg_d6			EQU	$10518
                                             reg_d7			EQU	$1051C
                                             reg_a0			EQU $10520
                                             reg_a1			EQU	$10524
                                             reg_a2			EQU	$10528
                                             reg_a3			EQU $1052C
                                             reg_a4			EQU $10530
                                             reg_a5			EQU $10534
                                             reg_a6			EQU $10538
                                             reg_ssp			EQU	$1053C
                                             reg_usp			EQU	$10540
                                             reg_pc			EQU $10544
                                             reg_sr			EQU	$10548
                                             
                                             RTCBuf			EQU	$10600
                                             RTFBufEnd		EQU	$10660
                                             
                                             	org		$FFFC0000
                                             
                                             ;------------------------------------------------------------------------------
                                             
    162 FFFC0000 FF401000                    	dc.l	$FF401000	; initial SSP
    163 FFFC0004 FFFC0010                    	dc.l	Start		; initial PC
                                             	
                                             ;------------------------------------------------------------------------------
    166 FFFC0008                             fpga_version:
    167 FFFC0008 41 41 30 30 30 30 30 30     	dc.b	"AA000000"	; FPGA core version - 8 ASCII characters
                                             
                                             
                                             ;------------------------------------------------------------------------------
    171 FFFC0010                             	Start:
                                             ;------------------------------------------------------------------------------
    173 FFFC0010 33FC A1A1 FFDC 0600         		move.w	#$A1A1,leds		; diagnostics
                                             
                                             		; SIM croaked because the upper half of D1 was undefined. This caused
                                             		; problems with a dbra instruction. So the contents of all the registers
                                             		; are defined at startup. This is only needed for SIM.
    178 FFFC0018 7000                        		moveq	#0,D0
    179 FFFC001A 7200                        		moveq	#0,D1				; for SIM
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 4
bootrom.asm
    180 FFFC001C 7400                        		moveq	#0,D2
    181 FFFC001E 7600                        		moveq	#0,D3
    182 FFFC0020 7800                        		moveq	#0,D4
    183 FFFC0022 7A00                        		moveq	#0,D5
    184 FFFC0024 7C00                        		moveq	#0,D6
    185 FFFC0026 7E00                        		moveq	#0,D7
    186 FFFC0028 4288                        		clr.l	A0
    187 FFFC002A 4289                        		clr.l	A1
    188 FFFC002C 428A                        		clr.l	A2
    189 FFFC002E 428B                        		clr.l	A3
    190 FFFC0030 428C                        		clr.l	A4
    191 FFFC0032 428D                        		clr.l	A5
    192 FFFC0034 428E                        		clr.l	A6
    193 FFFC0036 4E67                        		move.l	A7,usp
                                             
                                             		; setup vector table
                                             		;
    197 FFFC0038 41F9 0000 0000              		lea		BusError,a0
    198 FFFC003E 21C8 0008                   		move.l	a0,0x008		; set bus error vector
    199 FFFC0042 41F9 FFFC 014C              		lea		IllegalInstruction,a0
    200 FFFC0048 21C8 0010                   		move.l	a0,0x010
    201 FFFC004C 41F9 FFFC 0132              		lea		Pulse1000,a0
    202 FFFC0052 21C8 0078                   		move.l	a0,0x078		; set autovector 6
    203 FFFC0056 41F9 0000 0000              		lea		KeybdNMI,a0
    204 FFFC005C 21C8 007C                   		move.l	a0,0x07C		; set autovector 7
    205 FFFC0060 41F9 FFFC 016E              		lea		TRAP15,a0
    206 FFFC0066 21C8 00BC                   		move.l	a0,188			; set trap 15 vector
                                             
                                             ;		bsr		mmu_init
    209 FFFC006A 6100 157C                   		bsr		i2c_setup
                                             ;		bsr		rtc_read
    211 FFFC006E 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds		; diagnostics
                                             
    213 FFFC0076 13FC 0028 0001 041B         		move.b	#TEXTCOLS,TextCols
    214 FFFC007E 13FC 0020 0001 041A         		move.b	#TEXTROWS,TextRows
    215 FFFC0086 4239 0001 0419              		clr.b	CursorCol
    216 FFFC008C 4239 0001 0418              		clr.b	CursorRow
    217 FFFC0092 4279 0001 041C              		clr.w	TextCurpos
    218 FFFC0098 23FC 0002 0000 0001 0420    		move.l	#$00020000,TextScr		; set virtual screen location
                                             
                                             
    221 FFFC00A2 6100 051E                   		bsr		SetCursorColor
    222 FFFC00A6 6100 0544                   		bsr		SetCursorImage
    223 FFFC00AA 6100 057E                   		bsr		SetCursorImage64
                                             
    225 FFFC00AE 4DF9 FFDC 0000              		lea	$FFDC0000,A6	; I/O base
                                             
                                             		; Initialize random number generator
                                             
    229 FFFC00B4 426E 0C06                   		clr.w	$0C06(a6)				; select stream #0
    230 FFFC00B8 2D7C 8888 8888 0C08         		move.l	#$88888888,$0C08(a6)	; set initial m_z
    231 FFFC00C0 2D7C 0123 4567 0C0C         		move.l	#$01234567,$0C0C(a6)	; set initial m_w
                                             
    233 FFFC00C8 6100 03C8                   		bsr		BootClearScreen		
    234 FFFC00CC 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds			; diagnostics
                                             		
                                             		; turn on audio test mode
    237 FFFC00D4 4DF9 FFDC 0000              		lea		$FFDC0000,A6		; set I/O base
    238 FFFC00DA 3D7C FFFF 0700              		move.w	#$FFFF,$0700(a6)	; turn on audio clocks
    239 FFFC00E0 2A7C FFE0 0000              		movea.l	#VDGREG,a5
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 5
bootrom.asm
    240 FFFC00E6 3B7C 4000 0584              		move.w	#%0100000000000000,$584(a5)
                                             
    242 FFFC00EC 6100 13A4                   		bsr		DrawLines
    243 FFFC00F0 6100 1440                   		bsr		TestBlitter
                                             
    245 FFFC00F4 6100 03B2                   		bsr		BootCopyFont
    246 FFFC00F8 33FC A3A3 FFDC 0600         		move.w	#$A3A3,leds			; diagnostics
                                             
    248 FFFC0100 33FC 7FFF 0001 0002         		move.w	#WHITE,fgcolor		; set text colors
    249 FFFC0108 33FC 000F 0001 0004         		move.w	#DARK_BLUE,bkcolor
                                             
                                             		; Write startup message to screen
                                             
    253 FFFC0110 41F9 FFFC 1B5C              		lea		msg_start,a0
    254 FFFC0116 7200                        		moveq	#0,d1					; xpos
    255 FFFC0118 7400                        		moveq	#0,d2					; ypos
    256 FFFC011A 6100 05A0                   		bsr		DispStringAt
    257 FFFC011E 33FC A4A4 FFDC 0600         		move.w	#$A4A4,leds			; diagnostics
                                             
    259 FFFC0126 47F9 FFFC 0130              		lea		j1,a3
    260 FFFC012C 6000 11F6                   		bra		ramtest
    261 FFFC0130                             j1:
    262 FFFC0130 60FE                        		bra		j1
                                             
                                             ;------------------------------------------------------------------------------
                                             ; 1000 Hz interrupt
                                             ;------------------------------------------------------------------------------
                                             ;
    268 FFFC0132                             Pulse1000:
    269 FFFC0132 52B9 0001 0430              		add.l	#1,milliseconds
    270 FFFC0138 5279 0001 0434              		add.w	#1,systick
    271 FFFC013E 0279 001F 0001 0434         		and.w	#$1F,systick
    272 FFFC0146 6702                        		beq.s	Pulse31
    273 FFFC0148 4E73                        		rte
    274 FFFC014A                             Pulse31:
    275 FFFC014A 4E73                        		rte
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    280 FFFC014C                             IllegalInstruction:
    281 FFFC014C 43F9 FFFC 015A              		lea		MSG_ILLEGAL_INSN,a1
    282 FFFC0152 4EB9 FFFC 03EC              		jsr		DisplayString
    283 FFFC0158 4E73                        		rte
                                             
    285 FFFC015A                             MSG_ILLEGAL_INSN:
    286 FFFC015A 49 6C 6C 65 67 61 6C 20     		dc.b	"Illegal instruction",0
    287 FFFC0162 69 6E 73 74 72 75 63 74     
    288 FFFC016A 69 6F 6E 00                 
                                             
                                             		align	2
                                             
                                             ;------------------------------------------------------------------------------
                                             ; TRAP #15 handler
                                             ;------------------------------------------------------------------------------
                                             ;
    296 FFFC016E                             TRAP15:
    297 FFFC016E 48E7 8080                   		movem.l	d0/a0,-(a7)
    298 FFFC0172 41F9 FFFC 0188              		lea		T15DispatchTable,a0
    299 FFFC0178 E580                        		asl.l	#2,d0
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 6
bootrom.asm
    300 FFFC017A 2070 0000                   		move.l	(a0,d0.w),a0
    301 FFFC017E 4E90                        		jsr		(a0)
    302 FFFC0180 4CDF 0101                   		movem.l	(a7)+,d0/a0
    303 FFFC0184 4E73                        		rte
                                             
    305 FFFC0186 FF FF                       		align	4
    306 FFFC0188                             T15DispatchTable:
    307 FFFC0188 FFFC0228                    dc.l	StubRout
    308 FFFC018C FFFC0228                    dc.l	StubRout
    309 FFFC0190 FFFC0228                    dc.l	StubRout
    310 FFFC0194 FFFC0228                    dc.l	StubRout
    311 FFFC0198 FFFC0228                    dc.l	StubRout
    312 FFFC019C FFFC07BA                    dc.l	GetKey
    313 FFFC01A0 FFFC027C                    dc.l	DisplayChar
    314 FFFC01A4 FFFC07A8                    dc.l	CheckForKey
    315 FFFC01A8 FFFC0228                    dc.l	StubRout
    316 FFFC01AC FFFC0228                    dc.l	StubRout
    317 FFFC01B0 FFFC0228                    dc.l	StubRout
    318 FFFC01B4 FFFC0436                    dc.l	Cursor1
    319 FFFC01B8 FFFC022A                    dc.l	SetKeyboardEcho
    320 FFFC01BC FFFC0406                    dc.l	DisplayStringCRLF
    321 FFFC01C0 FFFC03EC                    dc.l	DisplayString
    322 FFFC01C4 FFFC0228                    dc.l	StubRout
    323 FFFC01C8 FFFC0228                    dc.l	StubRout
    324 FFFC01CC FFFC0228                    dc.l	StubRout
    325 FFFC01D0 FFFC0228                    dc.l	StubRout
    326 FFFC01D4 FFFC0228                    dc.l	StubRout
    327 FFFC01D8 FFFC0228                    dc.l	StubRout
    328 FFFC01DC FFFC0228                    dc.l	StubRout
    329 FFFC01E0 FFFC0228                    dc.l	StubRout
    330 FFFC01E4 FFFC0228                    dc.l	StubRout
    331 FFFC01E8 FFFC0228                    dc.l	StubRout
    332 FFFC01EC FFFC0228                    dc.l	StubRout
    333 FFFC01F0 FFFC0228                    dc.l	StubRout
    334 FFFC01F4 FFFC0228                    dc.l	StubRout
    335 FFFC01F8 FFFC0228                    dc.l	StubRout
    336 FFFC01FC FFFC0228                    dc.l	StubRout
    337 FFFC0200 FFFC0228                    dc.l	StubRout
    338 FFFC0204 FFFC0228                    dc.l	StubRout
    339 FFFC0208 FFFC0228                    dc.l	StubRout
    340 FFFC020C FFFC0228                    dc.l	StubRout
    341 FFFC0210 FFFC0228                    dc.l	StubRout
    342 FFFC0214 FFFC0228                    dc.l	StubRout
    343 FFFC0218 FFFC0228                    dc.l	StubRout
    344 FFFC021C FFFC0228                    dc.l	StubRout
    345 FFFC0220 FFFC0228                    dc.l	StubRout
    346 FFFC0224 FFFC0228                    dc.l	StubRout
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Stub routine for unimplemented functionality.
                                             ;------------------------------------------------------------------------------
                                             ;
    352 FFFC0228                             StubRout:
    353 FFFC0228 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; d1.b 0=echo off, non-zero = echo on
                                             ;------------------------------------------------------------------------------
    358 FFFC022A                             SetKeyboardEcho:
    359 FFFC022A 13C1 0001 0424              	move.b	d1,KeybdEcho
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 7
bootrom.asm
    360 FFFC0230 4E75                        	rts
                                             
                                             
    363 FFFC0232                             CRLF:
    364 FFFC0232 2F01                        		move.l	d1,-(a7)
    365 FFFC0234 123C 000D                   		move.b	#'\r',d1
    366 FFFC0238 4EB9 FFFC 027C              		jsr		DisplayChar
    367 FFFC023E 123C 000A                   		move.b	#'\n',d1
    368 FFFC0242 4EB9 FFFC 027C              		jsr		DisplayChar
    369 FFFC0248 221F                        		move.l	(a7)+,d1
    370 FFFC024A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Calculate screen memory location from CursorRow,CursorCol.
                                             ; Destroys d0,d2,a0
                                             ;------------------------------------------------------------------------------
                                             ;
    377 FFFC024C                             CalcScreenLoc:
    378 FFFC024C 1039 0001 0418              		move.b	CursorRow,d0		; compute screen location
    379 FFFC0252 0240 007F                   		andi.w	#0x7f,d0
    380 FFFC0256 1439 0001 041B              		move.b	TextCols,d2
    381 FFFC025C 4882                        		ext.w	d2
    382 FFFC025E C0C2                        		mulu.w	d2,d0
    383 FFFC0260 1439 0001 0419              		move.b	CursorCol,d2
    384 FFFC0266 0242 00FF                   		andi.w	#0xff,d2
    385 FFFC026A D042                        		add.w	d2,d0
    386 FFFC026C 33C0 0001 041C              		move.w	d0,TextCurpos
    387 FFFC0272 D0B9 0001 0420              		add.l	TextScr,d0
    388 FFFC0278 2040                        		move.l	d0,a0				; a0 = screen location
    389 FFFC027A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a character on the screen
                                             ; d1.b = char to display
                                             ;------------------------------------------------------------------------------
                                             ;
    396 FFFC027C                             DisplayChar:
    397 FFFC027C 0C01 000D                   		cmpi.b	#'\r',d1			; carriage return ?
    398 FFFC0280 6608                        		bne.s	dccr
    399 FFFC0282 4239 0001 0419              		clr.b	CursorCol			; just set cursor column to zero on a CR
    400 FFFC0288 4E75                        		rts
    401 FFFC028A                             dccr:
    402 FFFC028A 0C01 0091                   		cmpi.b	#0x91,d1			; cursor right ?
    403 FFFC028E 6616                        		bne.s   dcx6
    404 FFFC0290 0C39 004F 0001 0419         		cmpi.b	#79,CursorCol
    405 FFFC0298 670A                        		beq.s	dcx7
    406 FFFC029A 5239 0001 0419              		addi.b	#1,CursorCol
    407 FFFC02A0 6000 02EA                   		bra		DispCursor
    408 FFFC02A4                             dcx7:
    409 FFFC02A4 4E75                        		rts
    410 FFFC02A6                             dcx6:
    411 FFFC02A6 0C01 0090                   		cmpi.b	#0x90,d1			; cursor up ?
    412 FFFC02AA 6614                        		bne.s	dcx8
    413 FFFC02AC 0C39 0000 0001 0418         		cmpi.b	#0,CursorRow
    414 FFFC02B4 67EE                        		beq.s	dcx7
    415 FFFC02B6 5339 0001 0418              		subi.b	#1,CursorRow
    416 FFFC02BC 6000 02CE                   		bra		DispCursor
    417 FFFC02C0                             dcx8:
    418 FFFC02C0 0C01 0093                   		cmpi.b	#0x93,d1			; cursor left?
    419 FFFC02C4 6614                        		bne.s	dcx9
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 8
bootrom.asm
    420 FFFC02C6 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    421 FFFC02CE 67D4                        		beq.s	dcx7
    422 FFFC02D0 5339 0001 0419              		subi.b	#1,CursorCol
    423 FFFC02D6 6000 02B4                   		bra		DispCursor
    424 FFFC02DA                             dcx9:
    425 FFFC02DA 0C01 0092                   		cmpi.b	#0x92,d1			; cursor down ?
    426 FFFC02DE 6614                        		bne		dcx10
    427 FFFC02E0 0C39 003F 0001 0418         		cmpi.b	#63,CursorRow
    428 FFFC02E8 67BA                        		beq		dcx7
    429 FFFC02EA 5279 0001 0418              		addi.w	#1,CursorRow
    430 FFFC02F0 6000 029A                   		bra		DispCursor
    431 FFFC02F4                             dcx10:
    432 FFFC02F4 0C01 0094                   		cmpi.b	#0x94,d1			; cursor home ?
    433 FFFC02F8 661E                        		bne.s	dcx11
    434 FFFC02FA 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    435 FFFC0302 670A                        		beq.s	dcx12
    436 FFFC0304 4239 0001 0419              		clr.b	CursorCol
    437 FFFC030A 6000 0280                   		bra		DispCursor
    438 FFFC030E                             dcx12:
    439 FFFC030E 4239 0001 0418              		clr.b	CursorRow
    440 FFFC0314 6000 0276                   		bra		DispCursor
    441 FFFC0318                             dcx11:
    442 FFFC0318 48E7 E080                   		movem.l	d0/d1/d2/a0,-(a7)
    443 FFFC031C 0C01 0099                   		cmpi.b	#0x99,d1			; delete ?
    444 FFFC0320 660C                        		bne.s	dcx13
    445 FFFC0322 6100 FF28                   		bsr		CalcScreenLoc
    446 FFFC0326 1039 0001 0419              		move.b	CursorCol,d0
    447 FFFC032C 6020                        		bra.s	dcx5
    448 FFFC032E                             dcx13:
    449 FFFC032E 0C01 0008                   		cmpi.b	#CTRLH,d1			; backspace ?
    450 FFFC0332 6632                        		bne.s   dcx3
    451 FFFC0334 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    452 FFFC033C 6752                        		beq.s   dcx4
    453 FFFC033E 5339 0001 0419              		subi.b	#1,CursorCol
    454 FFFC0344 6100 FF06                   		bsr		CalcScreenLoc		; a0 = screen location
    455 FFFC0348 1039 0001 0419              		move.b	CursorCol,d0
    456 FFFC034E                             dcx5:
    457 FFFC034E 10E8 0001                   		move.b	1(a0),(a0)+
    458 FFFC0352 5200                        		addi.b	#1,d0
    459 FFFC0354 B039 0001 041B              		cmp.b	TextCols,d0
    460 FFFC035A 65F2                        		blo.s	dcx5
    461 FFFC035C 103C 0020                   		move.b	#32,d0
    462 FFFC0360 1140 FFFF                   		move.b	d0,-1(a0)
    463 FFFC0364 602A                        		bra.s	dcx4
    464 FFFC0366                             dcx3:
    465 FFFC0366 0C01 000A                   		cmpi.b	#'\n',d1		; linefeed ?
    466 FFFC036A 671C                        		beq.s	dclf
                                             
    468 FFFC036C 6100 FEDE                   		bsr		CalcScreenLoc	; a0 = screen location
                                             		;bsr		AsciiToScreen	; convert ascii char to screen char
    470 FFFC0370 1081                        		move.b	d1,(a0)
    471 FFFC0372 1001                        		move.b	d1,d0
    472 FFFC0374 4880                        		ext.w	d0
    473 FFFC0376 6100 01BA                   		bsr		DispChar
    474 FFFC037A 6100 001A                   		bsr		IncCursorPos
    475 FFFC037E 6100 020C                   		bsr		DispCursor
    476 FFFC0382 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0
    477 FFFC0386 4E75                        		rts
    478 FFFC0388                             dclf:
    479 FFFC0388 6100 002C                   		bsr		IncCursorRow
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 9
bootrom.asm
    480 FFFC038C 6100 01FE                   		bsr		DispCursor
    481 FFFC0390                             dcx4:
    482 FFFC0390 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0		; get back a0
    483 FFFC0394 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Increment the cursor position, scroll the screen if needed.
                                             ;------------------------------------------------------------------------------
                                             ;
    489 FFFC0396                             IncCursorPos:
    490 FFFC0396 5279 0001 041C              		addi.w	#1,TextCurpos
    491 FFFC039C 5239 0001 0419              		addi.b	#1,CursorCol
    492 FFFC03A2 1039 0001 041B              		move.b	TextCols,d0
    493 FFFC03A8 B039 0001 0419              		cmp.b	CursorCol,d0
    494 FFFC03AE 643A                        		bhs.s	icc1
    495 FFFC03B0 4239 0001 0419              		clr.b	CursorCol
    496 FFFC03B6                             IncCursorRow:
    497 FFFC03B6 5239 0001 0418              		addi.b	#1,CursorRow
    498 FFFC03BC 1039 0001 041A              		move.b	TextRows,d0
    499 FFFC03C2 B039 0001 0418              		cmp.b	CursorRow,d0
    500 FFFC03C8 6220                        		bhi.s	icc1
    501 FFFC03CA 1039 0001 041A              		move.b	TextRows,d0
    502 FFFC03D0 13C0 0001 0418              		move.b	d0,CursorRow		; in case CursorRow is way over
    503 FFFC03D6 5339 0001 0418              		subi.b	#1,CursorRow
    504 FFFC03DC 4880                        		ext.w	d0
    505 FFFC03DE E340                        		asl.w	#1,d0
    506 FFFC03E0 9179 0001 041C              		sub.w	d0,TextCurpos
    507 FFFC03E6 6100 0C68                   		bsr		ScrollUp
    508 FFFC03EA                             icc1:
    509 FFFC03EA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen.
                                             ;------------------------------------------------------------------------------
                                             ;
    515 FFFC03EC                             DisplayString:
    516 FFFC03EC 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    517 FFFC03F0                             dspj1:
    518 FFFC03F0 4281                        		clr.l	d1				; clear upper bits of d1
    519 FFFC03F2 1219                        		move.b	(a1)+,d1		; move string char into d1
    520 FFFC03F4 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    521 FFFC03F8 6706                        		beq		dsret			
    522 FFFC03FA 6100 FE80                   		bsr		DisplayChar		; display character
    523 FFFC03FE 60F0                        		bra		dspj1			; go back for next character
    524 FFFC0400                             dsret:
    525 FFFC0400 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    526 FFFC0404 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen followed by carriage return / linefeed.
                                             ;------------------------------------------------------------------------------
                                             ;
    532 FFFC0406                             DisplayStringCRLF:
    533 FFFC0406 6100 FFE4                   		bsr		DisplayString
    534 FFFC040A 6000 FE26                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ;------------------------------------------------------------------------------
                                             ;
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 10
bootrom.asm
    540 FFFC040E                             DisplayString1:
    541 FFFC040E 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    542 FFFC0412 0241 00FF                   		andi.w	#255,d1			; max 255 chars
    543 FFFC0416 2001                        		move.l	d1,d0
    544 FFFC0418                             dspj11:
    545 FFFC0418 1219                        		move.b	(a1)+,d1		; move string char into d1
    546 FFFC041A 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    547 FFFC041E 6708                        		beq		dsret1			
    548 FFFC0420 6100 FE5A                   		bsr		DisplayChar		; display character
    549 FFFC0424 57C8 FFF2                   		dbeq	d0,dspj11		; go back for next character
    550 FFFC0428                             dsret1:
    551 FFFC0428 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    552 FFFC042C 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ; end string with CR,LF
                                             ;------------------------------------------------------------------------------
                                             ;
    559 FFFC042E                             DisplayString0:
    560 FFFC042E 6100 FFDE                   		bsr		DisplayString1
    561 FFFC0432 6000 FDFE                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Dispatch cursor functions
                                             ;------------------------------------------------------------------------------
                                             ;
    567 FFFC0436                             Cursor1:
    568 FFFC0436 0C41 00FF                   		cmpi.w	#0x00ff,d1
    569 FFFC043A 670E                        		beq		GetCursorPos
    570 FFFC043C 0C41 FF00                   		cmpi.w	#0xFF00,d1
    571 FFFC0440 6718                        		beq		SetCursorPos
    572 FFFC0442 4EB9 FFFC 0FFE              		jsr		ClearScreen
    573 FFFC0448 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get the cursor position.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    581 FFFC044A                             GetCursorPos:
    582 FFFC044A 1239 0001 0419              		move.b	CursorCol,d1
    583 FFFC0450 E141                        		asl.w	#8,d1
    584 FFFC0452 1239 0001 0418              		move.b	CursorRow,d1
    585 FFFC0458 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Set the position of the cursor, update the linear screen pointer.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    593 FFFC045A                             SetCursorPos:
    594 FFFC045A 48E7 6000                   		movem.l	d1/d2,-(a7)
    595 FFFC045E 13C1 0001 0418              		move.b	d1,CursorRow
    596 FFFC0464 E049                        		lsr.w	#8,d1
    597 FFFC0466 13C1 0001 0419              		move.b	d1,CursorCol
    598 FFFC046C 1239 0001 0418              		move.b	CursorRow,d1
    599 FFFC0472 4881                        		ext.w	d1
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 11
bootrom.asm
    600 FFFC0474 1439 0001 041B              		move.b	TextCols,d2
    601 FFFC047A 4882                        		ext.w	d2
    602 FFFC047C C2C2                        		mulu.w	d2,d1
    603 FFFC047E 1439 0001 0419              		move.b	CursorCol,d2
    604 FFFC0484 D242                        		add.w	d2,d1
    605 FFFC0486 33C1 0001 041C              		move.w	d1,TextCurpos
    606 FFFC048C                             scp1:
    607 FFFC048C 4CDF 0006                   		movem.l	(a7)+,d1/d2
    608 FFFC0490 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; clear screen	
                                             ;
                                             ; Trashes:
                                             ;	a0,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    618 FFFC0492                             BootClearScreen:
    619 FFFC0492 207C FF80 0000              		move.l	#VDGBUF,A0
    620 FFFC0498 700F                        		moveq	#DARK_BLUE,D0			; dark blue
    621 FFFC049A 223C 0001 4000              		move.l	#320*256,D1				; number of pixels
    622 FFFC04A0                             .loop1:
    623 FFFC04A0 30C0                        		move.w	d0,(a0)+				; store it to the screen
    624 FFFC04A2 5381                        		sub.l	#1,d1					; can't use dbra here
    625 FFFC04A4 66FA                        		bne.s	.loop1
    626 FFFC04A6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; copy font to VDG ram
                                             ;
                                             ; The font address is 1/2 of the memory address that the cpu sees because
                                             ; the AV controller only deals with word accesses.
                                             ;
                                             ; Trashes:
                                             ;	a0,a1,a6,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    638 FFFC04A8                             BootCopyFont:
    639 FFFC04A8 2C7C FFE0 0000              		movea.l	#VDGREG,a6
                                             		; Setup font table
    641 FFFC04AE 2D7C 0005 C000 0590         		move.l	#$5C000,$590(a6)	; set font table address 1/2 B8000
    642 FFFC04B6 203C 0005 C004              		move.l	#$5C004,d0			; set bitmap address (directly follows)
    643 FFFC04BC 4840                        		swap	d0
    644 FFFC04BE 0040 9CE0                   		or.w	#%1001110011100000,d0	; set font fixed, width, height
    645 FFFC04C2 4840                        		swap	d0
    646 FFFC04C4 23C0 FF8B 8000              		move.l	d0,$FF8B8000
    647 FFFC04CA 42B9 FF8B 8004              		clr.l	$FF8B8004			; clear glyph width table address (not used)
    648 FFFC04D0 227C FF8B 8008              		movea.l	#$FF8B8008,a1		; font table address
                                             
    650 FFFC04D6 41F9 FFFC 1C14              		lea		font8,a0
    651 FFFC04DC 223C 0000 1000              		move.l	#8*512,d1			; 512 chars * 8 bytes per char
                                             
    653 FFFC04E2 3D7C 0000 0594              		move.w	#0,$594(a6)			; select font id (0)
                                             
    655 FFFC04E8 7000                        		moveq	#0,d0				; zero out high order bits
    656 FFFC04EA                             cpyfnt:
    657 FFFC04EA 1018                        		move.b	(a0)+,d0			; get a byte
    658 FFFC04EC 32C0                        		move.w	d0,(a1)+			; store in font table
    659 FFFC04EE 51C9 FFFA                   		dbra	d1,cpyfnt
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 12
bootrom.asm
    660 FFFC04F2 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Trashes:
                                             ;	a6
                                             ;------------------------------------------------------------------------------
                                             
    671 FFFC04F4                             DispCharAt:
    672 FFFC04F4 2C7C FFE0 0000              		move.l	#VDGREG,a6
    673 FFFC04FA 4840                        		swap	d0						; save off d0 low
    674 FFFC04FC                             .0001:									; wait for character que to empty
    675 FFFC04FC 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    676 FFFC0500 B07C 001C                   		cmp.w	#28,d0					; allow up 28 entries to be in progress
    677 FFFC0504 64F6                        		bhs.s	.0001					; branch if too many chars queued
    678 FFFC0506 4840                        		swap	d0						; get back d0 low
    679 FFFC0508 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    680 FFFC050C 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)		; set fg color
    681 FFFC0514 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)		; set bk color
    682 FFFC051C 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    683 FFFC0520 3D42 0428                   		move.w	d2,$428(a6)			; set y pos
    684 FFFC0524 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    685 FFFC052A 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    686 FFFC0530 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;------------------------------------------------------------------------------
                                             
    693 FFFC0532                             DispChar:
    694 FFFC0532 48E7 4002                   		movem.l	d1/a6,-(a7)
    695 FFFC0536 2C7C FFE0 0000              		move.l	#VDGREG,a6
    696 FFFC053C 4840                        		swap	d0					; save off d0 low
    697 FFFC053E                             .0001:								; wait for character que to empty
    698 FFFC053E 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    699 FFFC0542 B07C 001C                   		cmp.w	#28,d0				; allow up 28 entries to be in progress
    700 FFFC0546 64F6                        		bhs.s	.0001				; branch if too many chars queued
    701 FFFC0548 4840                        		swap	d0					; get back d0 low
    702 FFFC054A 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    703 FFFC054E 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)	; set fg color
    704 FFFC0556 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)	; set bk color
    705 FFFC055E 1239 0001 0419              		move.b	CursorCol,d1
    706 FFFC0564 4881                        		ext.w	d1
    707 FFFC0566 E741                        		asl.w	#3,d1
    708 FFFC0568 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    709 FFFC056C 1239 0001 0418              		move.b	CursorRow,d1
    710 FFFC0572 4881                        		ext.w	d1
    711 FFFC0574 E741                        		asl.w	#3,d1
    712 FFFC0576 3D41 0428                   		move.w	d1,$428(a6)			; set y pos
    713 FFFC057A 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    714 FFFC0580 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    715 FFFC0586 4CDF 4002                   		movem.l	(a7)+,d1/a6
    716 FFFC058A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 13
bootrom.asm
                                             
    721 FFFC058C                             DispCursor:
    722 FFFC058C 48E7 4002                   		movem.l	d1/a6,-(a7)
    723 FFFC0590 2C7C FFE0 0000              		move.l	#VDGREG,a6
    724 FFFC0596 3D7C 0A0A 0444              		move.w	#$0A0A,VDG_CURSZ(a6)
    725 FFFC059C 1239 0001 0419              		move.b	CursorCol,d1
    726 FFFC05A2 4881                        		ext.w	d1
    727 FFFC05A4 E741                        		asl.w	#3,d1
    728 FFFC05A6 5341                        		sub.w	#1,d1
    729 FFFC05A8 3D41 0440                   		move.w	d1,VDG_CURX(a6)
    730 FFFC05AC 1239 0001 0418              		move.b	CursorRow,d1
    731 FFFC05B2 4881                        		ext.w	d1
    732 FFFC05B4 E741                        		asl.w	#3,d1
    733 FFFC05B6 5341                        		sub.w	#1,d1
    734 FFFC05B8 3D41 0442                   		move.w	d1,VDG_CURY(a6)
    735 FFFC05BC 4CDF 4002                   		movem.l	(a7)+,d1/a6
    736 FFFC05C0 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Color
                                             ;
                                             ;	irrrrrgggggbbbbb
                                             ;	|  |    |    |
                                             ;   |  |    |    +-- blue
                                             ;	|  |    +------- green
                                             ;   |  +------------ red
                                             ;   +--------------- invert video (rgb ignored)
                                             ;
                                             ;
                                             ;   flash rate
                                             ;		 1xxxx = no flash
                                             ;        00001 = 1/8 vsync (7.5 Hz)
                                             ;	     00010 = 1/16 vsync (3.75 Hz)
                                             ;        00100 = 1/32 vsync (1.875 Hz)
                                             ;------------------------------------------------------------------------------
                                             
    756 FFFC05C2                             SetCursorColor:
    757 FFFC05C2 2F0E                        		move.l  a6,-(a7)
    758 FFFC05C4 2C7C FFE0 0000              		move.l	#VDGREG,a6
    759 FFFC05CA 3D7C 7FFF 0448              		move.w	#%0111111111111111,VDG_CURCLR0(a6)
    760 FFFC05D0 3D7C 7FFF 044A              		move.w	#%0111111111111111,VDG_CURCLR1(a6)
    761 FFFC05D6 3D7C 7FFF 044C              		move.w	#%0111111111111111,VDG_CURCLR2(a6)
    762 FFFC05DC 3D7C 7FFF 044E              		move.w	#%0111111111111111,VDG_CURCLR3(a6)
    763 FFFC05E2 3D7C 0004 0446              		move.w	#%00100,VDG_CURFLSH(a6)
    764 FFFC05E8 2C5F                        		move.l	(a7)+,a6
    765 FFFC05EA 4E75                        		rts
                                             		
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Image
                                             ; Cursor may be up to 16x16 pixels.
                                             ;------------------------------------------------------------------------------
                                             
    772 FFFC05EC                             SetCursorImage:
    773 FFFC05EC 48E7 4082                   		movem.l	d1/a0/a6,-(a7)
    774 FFFC05F0 41F9 FFFC 060A              		lea		CursorImage,a0
    775 FFFC05F6 2C7C FFE0 0460              		move.l	#VDGREG+VDG_CURIMG,a6
    776 FFFC05FC 720F                        		moveq	#15,d1
    777 FFFC05FE                             .0001:
    778 FFFC05FE 3CD8                        		move.w	(a0)+,(a6)+
    779 FFFC0600 51C9 FFFC                   		dbra	d1,.0001
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 14
bootrom.asm
    780 FFFC0604 4CDF 4102                   		movem.l	(a7)+,d1/a0/a6
    781 FFFC0608 4E75                        		rts
                                             
                                             	align	2
    784 FFFC060A                             CursorImage:
    785 FFFC060A 03FF                        	dc.w	%1111111111
    786 FFFC060C 0201                        	dc.w	%1000000001
    787 FFFC060E 0201                        	dc.w	%1000000001
    788 FFFC0610 0201                        	dc.w	%1000000001
    789 FFFC0612 0201                        	dc.w	%1000000001
    790 FFFC0614 0201                        	dc.w	%1000000001
    791 FFFC0616 0201                        	dc.w	%1000000001
    792 FFFC0618 0201                        	dc.w	%1000000001
    793 FFFC061A 0231                        	dc.w	%1000110001
    794 FFFC061C 03FF                        	dc.w	%1111111111
    795 FFFC061E 0000                        	dc.w	%0000000000
    796 FFFC0620 0000                        	dc.w	%0000000000
    797 FFFC0622 0000                        	dc.w	%0000000000
    798 FFFC0624 0000                        	dc.w	%0000000000
    799 FFFC0626 0000                        	dc.w	%0000000000
    800 FFFC0628 0000                        	dc.w	%0000000000
                                             
    802 FFFC062A                             SetCursorImage64:
    803 FFFC062A 48E7 40C0                   		movem.l	d1/a0/a1,-(a7)
    804 FFFC062E 41F9 FFFC 065C              		lea		CursorImage64,a0
    805 FFFC0634 7214                        		moveq	#20,d1					; set count number of long words to move
    806 FFFC0636 227C FF8B 7E00              		move.l	#$FF8B7E00,a1
    807 FFFC063C                             .0001:
    808 FFFC063C 22D8                        		move.l	(a0)+,(a1)+
    809 FFFC063E 51C9 FFFC                   		dbra	d1,.0001
    810 FFFC0642 23FC 0005 BF00 FFE0 0680    		move.l	#$5BF00,VDGREG+$680		; set cursor bitmap address
                                             
    812 FFFC064C 33FC 0A0A FFE0 0688         		move.w	#$0A0A,VDGREG+$688		; set cursor size
    813 FFFC0654 4CDF 0302                   		movem.l	(a7)+,d1/a0/a1
    814 FFFC0658 4E75                        		rts
                                             		
    816 FFFC065A FF FF                       	align	4
    817 FFFC065C                             CursorImage64:
    818 FFFC065C 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
    819 FFFC0664 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    820 FFFC066C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    821 FFFC0674 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    822 FFFC067C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    823 FFFC0684 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    824 FFFC068C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    825 FFFC0694 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    826 FFFC069C 40501000 00000000           	dc.l	%01000000010100000001000000000000,$00
    827 FFFC06A4 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
    828 FFFC06AC 00000000 00000000           	dc.l	$00,$00
    829 FFFC06B4 00000000 00000000           	dc.l	$00,$00
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	a0			pointer to string
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Returns:
                                             ;	a0			points to byte after NULL character
                                             ;	d1.w		updated x position
                                             ; Trashes:
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 15
bootrom.asm
                                             ;	d0,a6
                                             ;------------------------------------------------------------------------------
                                             
    843 FFFC06BC                             DispStringAt:
    844 FFFC06BC                             .0003:
    845 FFFC06BC 7000                        		moveq	#0,d0					; zero out high order bits
    846 FFFC06BE 1018                        		move.b	(a0)+,d0				; get character from string into d0
    847 FFFC06C0 6708                        		beq.s	.0002					; end of string ?
    848 FFFC06C2 6100 FE30                   		bsr		DispCharAt
    849 FFFC06C6 5041                        		add.w	#8,d1					; increment xpos
    850 FFFC06C8 60F2                        		bra.s	.0003
    851 FFFC06CA                             .0002:
    852 FFFC06CA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display nybble in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
    858 FFFC06CC                             DisplayNybble:
    859 FFFC06CC 3F01                        		move.w	d1,-(a7)
    860 FFFC06CE 0201 000F                   		andi.b	#0xF,d1
    861 FFFC06D2 0601 0030                   		addi.b	#'0',d1
    862 FFFC06D6 0C01 0039                   		cmpi.b	#'9',d1
    863 FFFC06DA 6302                        		bls.s	dispnyb1
    864 FFFC06DC 5E01                        		addi.b	#7,d1
    865 FFFC06DE                             dispnyb1:
    866 FFFC06DE 6100 FB9C                   		bsr		DisplayChar
    867 FFFC06E2 321F                        		move.w	(a7)+,d1
    868 FFFC06E4 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the byte in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
    874 FFFC06E6                             DisplayByte:
    875 FFFC06E6 3F01                        		move.w	d1,-(a7)
    876 FFFC06E8 E819                        		ror.b	#4,d1
    877 FFFC06EA 6100 FFE0                   		bsr		DisplayNybble
    878 FFFC06EE E919                        		rol.b	#4,d1
    879 FFFC06F0 6100 FFDA                   		bsr		DisplayNybble
    880 FFFC06F4 321F                        		move.w	(a7)+,d1
    881 FFFC06F6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the 32 bit word in D1.L
                                             ;------------------------------------------------------------------------------
                                             ;
    887 FFFC06F8                             DisplayWord:
    888 FFFC06F8 E199                        		rol.l	#8,d1
    889 FFFC06FA 6100 FFEA                   		bsr		DisplayByte
    890 FFFC06FE E199                        		rol.l	#8,d1
    891 FFFC0700 6100 FFE4                   		bsr		DisplayByte
    892 FFFC0704 E199                        		rol.l	#8,d1
    893 FFFC0706 6100 FFDE                   		bsr		DisplayByte
    894 FFFC070A E199                        		rol.l	#8,d1
    895 FFFC070C 6100 FFD8                   		bsr		DisplayByte
    896 FFFC0710 4E75                        		rts
                                             
    898 FFFC0712                             DisplayMem:
    899 FFFC0712 123C 003A                   		move.b	#':',d1
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 16
bootrom.asm
    900 FFFC0716 4EB9 FFFC 027C              		jsr		DisplayChar
    901 FFFC071C 2208                        		move.l	a0,d1
    902 FFFC071E 4EB9 FFFC 06F8              		jsr		DisplayWord
    903 FFFC0724 7407                        		moveq	#7,d2
    904 FFFC0726                             dspmem1:
    905 FFFC0726 123C 0020                   		move.b	#' ',d1
    906 FFFC072A 4EB9 FFFC 027C              		jsr		DisplayChar
    907 FFFC0730 1218                        		move.b	(a0)+,d1
    908 FFFC0732 4EB9 FFFC 06E6              		jsr		DisplayByte
    909 FFFC0738 51CA FFEC                   		dbra	d2,dspmem1
    910 FFFC073C 4EF9 FFFC 0232              		jmp		CRLF
                                             
                                             ;==============================================================================
                                             ; Keyboard stuff
                                             ;
                                             ; KeyState2_
                                             ; 876543210
                                             ; ||||||||+ = shift
                                             ; |||||||+- = alt
                                             ; ||||||+-- = control
                                             ; |||||+--- = numlock
                                             ; ||||+---- = capslock
                                             ; |||+----- = scrolllock
                                             ; ||+------ =
                                             ; |+------- = 
                                             ; +-------- = extended
                                             ;
                                             ;==============================================================================
                                             
    929 FFFC0742                             _KeybdGetStatus:
    930 FFFC0742 1239 FFDC 0001              		move.b	KEYBD+1,d1
    931 FFFC0748 4E75                        		rts
                                             
                                             ; Get the scancode from the keyboard port
                                             ;
    935 FFFC074A                             _KeybdGetScancode:
    936 FFFC074A 7200                        		moveq	#0,d1
    937 FFFC074C 1239 FFDC 0000              		move.b	KEYBD,d1				; get the scan code
    938 FFFC0752 13FC 0000 FFDC 0001         		move.b	#0,KEYBD+1				; clear receive register
    939 FFFC075A 4E75                        		rts
                                             
                                             ; Recieve a byte from the keyboard, used after a command is sent to the
                                             ; keyboard in order to wait for a response.
                                             ;
    944 FFFC075C                             KeybdRecvByte:
    945 FFFC075C 2F03                        		move.l	d3,-(a7)
    946 FFFC075E 363C 0064                   		move.w	#100,d3		; wait up to 1s
    947 FFFC0762                             .0003:
    948 FFFC0762 6100 FFDE                   		bsr		_KeybdGetStatus	; wait for response from keyboard
    949 FFFC0766 4A01                        		tst.b	d1
    950 FFFC0768 6B0E                        		bmi		.0004		; is input buffer full ? yes, branch
    951 FFFC076A 6100 02C4                   		bsr		Wait10ms		; wait a bit
    952 FFFC076E 51CB FFF2                   		dbra	d3,.0003	; go back and try again
    953 FFFC0772 261F                        		move.l	(a7)+,d3
    954 FFFC0774 72FF                        		moveq	#-1,d1			; return -1
    955 FFFC0776 4E75                        		rts
    956 FFFC0778                             .0004:
    957 FFFC0778 6100 FFD0                   		bsr		_KeybdGetScancode
    958 FFFC077C 261F                        		move.l	(a7)+,d3
    959 FFFC077E 4E75                        		rts
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 17
bootrom.asm
                                             
                                             
                                             ; Wait until the keyboard transmit is complete
                                             ; Returns .CF = 1 if successful, .CF=0 timeout
                                             ;
    965 FFFC0780                             KeybdWaitTx:
    966 FFFC0780 48E7 3000                   		movem.l	d2/d3,-(a7)
    967 FFFC0784 7664                        		moveq	#100,d3		; wait a max of 1s
    968 FFFC0786                             .0001:
    969 FFFC0786 6100 FFBA                   		bsr		_KeybdGetStatus
    970 FFFC078A 0801 0006                   		btst	#6,d1		; check for transmit complete bit
    971 FFFC078E 6610                        		bne	    .0002		; branch if bit set
    972 FFFC0790 6100 029E                   		bsr		Wait10ms		; delay a little bit
    973 FFFC0794 51CB FFF0                   		dbra	d3,.0001	; go back and try again
    974 FFFC0798 4CDF 000C                   		movem.l	(a7)+,d2/d3
    975 FFFC079C 72FF                        		moveq	#-1,d1		; return -1
    976 FFFC079E 4E75                        		rts
    977 FFFC07A0                             .0002:
    978 FFFC07A0 4CDF 000C                   		movem.l	(a7)+,d2/d3
    979 FFFC07A4 7200                        		moveq	#0,d1		; return 0
    980 FFFC07A6 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; get key pending status into d1.b
                                             ;------------------------------------------------------------------------------
                                             ;
    987 FFFC07A8                             CheckForKey:
    988 FFFC07A8 1239 FFDC 0001              		move.b	KEYBD+1,d1
    989 FFFC07AE 6A06                        		bpl.s	cfk1
    990 FFFC07B0 123C 0001                   		move.b	#1,d1
    991 FFFC07B4 4E75                        		rts
    992 FFFC07B6                             cfk1:
    993 FFFC07B6 4201                        		clr.b	d1
    994 FFFC07B8 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    999 FFFC07BA                             GetKey:
   1000 FFFC07BA 6100 0022                   		bsr		KeybdGetCharWait
   1001 FFFC07BE 0C39 0000 0001 0424         		cmpi.b	#0,KeybdEcho	; is keyboard echo on ?
   1002 FFFC07C6 670C                        		beq.s	gk1
   1003 FFFC07C8 0C01 000D                   		cmpi.b	#'\r',d1		; convert CR keystroke into CRLF
   1004 FFFC07CC 6700 FA64                   		beq		CRLF
   1005 FFFC07D0 6100 FAAA                   		bsr		DisplayChar
   1006 FFFC07D4                             gk1:
   1007 FFFC07D4 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1013 FFFC07D6                             KeybdGetCharNoWait:
   1014 FFFC07D6 4239 0001 0425              		clr.b	KeybdWaitFlag
   1015 FFFC07DC 6008                        		bra		KeybdGetChar
                                             
   1017 FFFC07DE                             KeybdGetCharWait:
   1018 FFFC07DE 13FC FFFF 0001 0425         		move.b	#-1,KeybdWaitFlag
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 18
bootrom.asm
   1020 FFFC07E6                             KeybdGetChar:
   1021 FFFC07E6 48E7 3080                   		movem.l	d2/d3/a0,-(a7)
   1022 FFFC07EA                             .0003:
   1023 FFFC07EA 6100 FF56                   		bsr		_KeybdGetStatus			; check keyboard status for key available
   1024 FFFC07EE 6B10                        		bmi		.0006					; yes, go process
   1025 FFFC07F0 4A39 0001 0425              		tst.b	KeybdWaitFlag			; are we willing to wait for a key ?
   1026 FFFC07F6 6BF2                        		bmi		.0003					; yes, branch back
   1027 FFFC07F8 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1028 FFFC07FC 72FF                        		moveq	#-1,d1					; flag no char available
   1029 FFFC07FE 4E75                        		rts
   1030 FFFC0800                             .0006:
   1031 FFFC0800 6100 FF48                   		bsr		_KeybdGetScancode
   1032 FFFC0804                             .0001:
   1033 FFFC0804 33FC 0001 FFDC 0600         		move.w	#1,leds
   1034 FFFC080C B23C 00F0                   		cmp.b	#SC_KEYUP,d1
   1035 FFFC0810 6700 00CA                   		beq		.doKeyup
   1036 FFFC0814 B23C 00E0                   		cmp.b	#SC_EXTEND,d1
   1037 FFFC0818 6700 00CE                   		beq		.doExtend
   1038 FFFC081C B23C 0014                   		cmp.b	#SC_CTRL,d1
   1039 FFFC0820 6700 00D2                   		beq		.doCtrl
   1040 FFFC0824 B23C 0012                   		cmp.b	#SC_LSHIFT,d1
   1041 FFFC0828 6700 0134                   		beq		.doShift
   1042 FFFC082C B23C 0059                   		cmp.b	#SC_RSHIFT,d1
   1043 FFFC0830 6700 012C                   		beq		.doShift
   1044 FFFC0834 B23C 0077                   		cmp.b	#SC_NUMLOCK,d1
   1045 FFFC0838 6700 014C                   		beq		.doNumLock
   1046 FFFC083C B23C 0058                   		cmp.b	#SC_CAPSLOCK,d1
   1047 FFFC0840 6700 0154                   		beq		.doCapsLock
   1048 FFFC0844 B23C 007E                   		cmp.b	#SC_SCROLLLOCK,d1
   1049 FFFC0848 6700 015C                   		beq		.doScrollLock
   1050 FFFC084C B23C 0011                   		cmp.b   #SC_ALT,d1
   1051 FFFC0850 6700 00CA                   		beq     .doAlt
   1052 FFFC0854 1439 0001 0426              		move.b	_KeyState1,d2			; check key up/down
   1053 FFFC085A 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup status
   1054 FFFC0862 4A02                        		tst.b	d2
   1055 FFFC0864 6684                        		bne	    .0003					; ignore key up
   1056 FFFC0866 B23C 000D                   		cmp.b   #SC_TAB,d1
   1057 FFFC086A 6700 00D8                   		beq     .doTab
   1058 FFFC086E                             .0013:
   1059 FFFC086E 1439 0001 0427              		move.b	_KeyState2,d2
   1060 FFFC0874 6A1E                        		bpl		.0010					; is it extended code ?
   1061 FFFC0876 0202 007F                   		and.b	#$7F,d2					; clear extended bit
   1062 FFFC087A 13C2 0001 0427              		move.b	d2,_KeyState2
   1063 FFFC0880 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup
   1064 FFFC0888 41F9 FFFC 0CC0              		lea		_keybdExtendedCodes,a0
   1065 FFFC088E 1230 1000                   		move.b	(a0,d1.w),d1
   1066 FFFC0892 603A                        		bra		.0008
   1067 FFFC0894                             .0010:
   1068 FFFC0894 0802 0002                   		btst	#2,d2					; is it CTRL code ?
   1069 FFFC0898 6710                        		beq		.0009
   1070 FFFC089A 0241 007F                   		and.w	#$7F,d1
   1071 FFFC089E 41F9 FFFC 0C40              		lea		_keybdControlCodes,a0
   1072 FFFC08A4 1230 1000                   		move.b	(a0,d1.w),d1
   1073 FFFC08A8 6024                        		bra		.0008
   1074 FFFC08AA                             .0009:
   1075 FFFC08AA 0802 0000                   		btst	#0,d2					; is it shift down ?
   1076 FFFC08AE 670C                        		beq  	.0007
   1077 FFFC08B0 41F9 FFFC 0B40              		lea		_shiftedScanCodes,a0
   1078 FFFC08B6 1230 1000                   		move.b	(a0,d1.w),d1
   1079 FFFC08BA 6012                        		bra		.0008
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 19
bootrom.asm
   1080 FFFC08BC                             .0007:
   1081 FFFC08BC 41F9 FFFC 0A40              		lea		_unshiftedScanCodes,a0
   1082 FFFC08C2 1230 1000                   		move.b	(a0,d1.w),d1
   1083 FFFC08C6 33FC 0202 FFDC 0600         		move.w	#$0202,leds
   1084 FFFC08CE                             .0008:
   1085 FFFC08CE 33FC 0303 FFDC 0600         		move.w	#$0303,leds
   1086 FFFC08D6 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1087 FFFC08DA 4E75                        		rts
   1088 FFFC08DC                             .doKeyup:
   1089 FFFC08DC 13FC FFFF 0001 0426         		move.b	#-1,_KeyState1
   1090 FFFC08E4 6000 FF04                   		bra		.0003
   1091 FFFC08E8                             .doExtend:
   1092 FFFC08E8 0039 0080 0001 0427         		or.b	#$80,_KeyState2
   1093 FFFC08F0 6000 FEF8                   		bra		.0003
   1094 FFFC08F4                             .doCtrl:
   1095 FFFC08F4 1239 0001 0426              		move.b	_KeyState1,d1
   1096 FFFC08FA 4239 0001 0426              		clr.b	_KeyState1
   1097 FFFC0900 4A01                        		tst.b	d1
   1098 FFFC0902 6A0C                        		bpl.s	.0004
   1099 FFFC0904 08B9 0002 0001 0427         		bclr	#2,_KeyState2
   1100 FFFC090C 6000 FEDC                   		bra		.0003
   1101 FFFC0910                             .0004:
   1102 FFFC0910 08F9 0002 0001 0427         		bset	#2,_KeyState2
   1103 FFFC0918 6000 FED0                   		bra		.0003
   1104 FFFC091C                             .doAlt:
   1105 FFFC091C 1239 0001 0426              		move.b	_KeyState1,d1
   1106 FFFC0922 4239 0001 0426              		clr.b	_KeyState1
   1107 FFFC0928 4A01                        		tst.b	d1
   1108 FFFC092A 6A0C                        		bpl		.0011
   1109 FFFC092C 08B9 0001 0001 0427         		bclr	#1,_KeyState2
   1110 FFFC0934 6000 FEB4                   		bra		.0003
   1111 FFFC0938                             .0011:
   1112 FFFC0938 08F9 0001 0001 0427         		bset	#1,_KeyState2
   1113 FFFC0940 6000 FEA8                   		bra		.0003
   1114 FFFC0944                             .doTab:
   1115 FFFC0944 2F01                        		move.l	d1,-(a7)
   1116 FFFC0946 1239 0001 0427              	    move.b  _KeyState2,d1
   1117 FFFC094C 0801 0000                   	    btst	#0,d1                 ; is ALT down ?
   1118 FFFC0950 6706                        	    beq     .0012
                                             ;    	inc     _iof_switch
   1120 FFFC0952 221F                        	    move.l	(a7)+,d1
   1121 FFFC0954 6000 FE94                   	    bra     .0003
   1122 FFFC0958                             .0012:
   1123 FFFC0958 221F                        	    move.l	(a7)+,d1
   1124 FFFC095A 6000 FF12                   	    bra     .0013
   1125 FFFC095E                             .doShift:
   1126 FFFC095E 1239 0001 0426              		move.b	_KeyState1,d1
   1127 FFFC0964 4239 0001 0426              		clr.b	_KeyState1
   1128 FFFC096A 4A01                        		tst.b	d1
   1129 FFFC096C 6A0C                        		bpl.s	.0005
   1130 FFFC096E 08B9 0000 0001 0427         		bclr	#0,_KeyState2
   1131 FFFC0976 6000 FE72                   		bra		.0003
   1132 FFFC097A                             .0005:
   1133 FFFC097A 08F9 0000 0001 0427         		bset	#0,_KeyState2
   1134 FFFC0982 6000 FE66                   		bra		.0003
   1135 FFFC0986                             .doNumLock:
   1136 FFFC0986 0879 0004 0001 0427         		bchg	#4,_KeyState2
   1137 FFFC098E 6100 0026                   		bsr		KeybdSetLEDStatus
   1138 FFFC0992 6000 FE56                   		bra		.0003
   1139 FFFC0996                             .doCapsLock:
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 20
bootrom.asm
   1140 FFFC0996 0879 0005 0001 0427         		bchg	#5,_KeyState2
   1141 FFFC099E 6100 0016                   		bsr		KeybdSetLEDStatus
   1142 FFFC09A2 6000 FE46                   		bra		.0003
   1143 FFFC09A6                             .doScrollLock:
   1144 FFFC09A6 0879 0006 0001 0427         		bchg	#6,_KeyState2
   1145 FFFC09AE 6100 0006                   		bsr		KeybdSetLEDStatus
   1146 FFFC09B2 6000 FE36                   		bra		.0003
                                             
   1148 FFFC09B6                             KeybdSetLEDStatus:
   1149 FFFC09B6 48E7 3000                   		movem.l	d2/d3,-(a7)
   1150 FFFC09BA 4239 0001 0428              		clr.b	KeybdLEDs
   1151 FFFC09C0 0839 0004 0001 0427         		btst	#4,_KeyState2
   1152 FFFC09C8 6708                        		beq.s	.0002
   1153 FFFC09CA 13FC 0002 0001 0428         		move.b	#2,KeybdLEDs
   1154 FFFC09D2                             .0002:
   1155 FFFC09D2 0839 0005 0001 0427         		btst	#5,_KeyState2
   1156 FFFC09DA 6708                        		beq.s	.0003
   1157 FFFC09DC 08F9 0002 0001 0428         		bset	#2,KeybdLEDs
   1158 FFFC09E4                             .0003:
   1159 FFFC09E4 0839 0006 0001 0427         		btst	#6,_KeyState2
   1160 FFFC09EC 6708                        		beq.s	.0004
   1161 FFFC09EE 08F9 0000 0001 0428         		bset	#0,KeybdLEDs
   1162 FFFC09F6                             .0004:
   1163 FFFC09F6 123C 00ED                   		move.b	#$ED,d1
   1164 FFFC09FA 6100 002C                   		bsr		KeybdSendByte
   1165 FFFC09FE 6100 FD80                   		bsr		KeybdWaitTx
   1166 FFFC0A02 6100 FD58                   		bsr		KeybdRecvByte
   1167 FFFC0A06 4A01                        		tst.b	d1
   1168 FFFC0A08 6B18                        		bmi		.0001
   1169 FFFC0A0A B2BC 0000 00FA              		cmp		#$FA,d1
   1170 FFFC0A10 1239 0001 0428              		move.b	KeybdLEDs,d1
   1171 FFFC0A16 6100 0010                   		bsr		KeybdSendByte
   1172 FFFC0A1A 6100 FD64                   		bsr		KeybdWaitTx
   1173 FFFC0A1E 6100 FD3C                   		bsr		KeybdRecvByte
   1174 FFFC0A22                             .0001:
   1175 FFFC0A22 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1176 FFFC0A26 4E75                        		rts
                                             
   1178 FFFC0A28                             KeybdSendByte:
   1179 FFFC0A28 13C1 FFDC 0000              		move.b	d1,KEYBD
   1180 FFFC0A2E 4E75                        		rts
                                             	
   1182 FFFC0A30                             Wait10ms:
   1183 FFFC0A30 2F03                        		move.l	d3,-(a7)
   1184 FFFC0A32 263C 0000 03E8              		move.l	#1000,d3
   1185 FFFC0A38                             .0001:
   1186 FFFC0A38 51CB FFFE                   		dbra	d3,.0001
   1187 FFFC0A3C 261F                        		move.l	(a7)+,d3
   1188 FFFC0A3E 4E75                        		rts
                                             
                                             
                                             ;--------------------------------------------------------------------------
                                             ; PS2 scan codes to ascii conversion tables.
                                             ;--------------------------------------------------------------------------
                                             ;
   1195 FFFC0A40                             _unshiftedScanCodes:
   1196 FFFC0A40 2E A9 2E A5 A3 A1 A2 AC     	dc.b	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
                                             
   1198 FFFC0A48 2E AA A8 A6 A4 09 60 2E     	dc.b	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 21
bootrom.asm
   1200 FFFC0A50 2E 2E 2E 2E 2E 71 31 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
                                             
   1202 FFFC0A58 2E 2E 7A 73 61 77 32 2E     	dc.b	$2e,$2e,$7a,$73,$61,$77,$32,$2e
                                             
   1204 FFFC0A60 2E 63 78 64 65 34 33 2E     	dc.b	$2e,$63,$78,$64,$65,$34,$33,$2e
                                             
   1206 FFFC0A68 2E 20 76 66 74 72 35 2E     	dc.b	$2e,$20,$76,$66,$74,$72,$35,$2e
                                             
   1208 FFFC0A70 2E 6E 62 68 67 79 36 2E     	dc.b	$2e,$6e,$62,$68,$67,$79,$36,$2e
                                             
   1210 FFFC0A78 2E 2E 6D 6A 75 37 38 2E     	dc.b	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
                                             
   1212 FFFC0A80 2E 2C 6B 69 6F 30 39 2E     	dc.b	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
                                             
   1214 FFFC0A88 2E 2E 2F 6C 3B 70 2D 2E     	dc.b	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
                                             
   1216 FFFC0A90 2E 2E 27 2E 5B 3D 2E 2E     	dc.b	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
                                             
   1218 FFFC0A98 AD 2E 0D 5D 2E 5C 2E 2E     	dc.b	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
                                             
   1220 FFFC0AA0 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1222 FFFC0AA8 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1224 FFFC0AB0 98 7F 92 2E 91 90 1B AF     	dc.b	$98,$7f,$92,$2e,$91,$90,$1b,$af
                                             
   1226 FFFC0AB8 AB 2E 97 2E 2E 96 AE 2E     	dc.b	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
                                             
                                             
   1229 FFFC0AC0 2E 2E 2E A7 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
                                             
   1231 FFFC0AC8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1233 FFFC0AD0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1235 FFFC0AD8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1237 FFFC0AE0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1239 FFFC0AE8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1241 FFFC0AF0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1243 FFFC0AF8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1245 FFFC0B00 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1247 FFFC0B08 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1249 FFFC0B10 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1251 FFFC0B18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1253 FFFC0B20 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1255 FFFC0B28 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1257 FFFC0B30 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1259 FFFC0B38 2E 2E FA 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 22
bootrom.asm
                                             
                                             
   1262 FFFC0B40                             _shiftedScanCodes:
   1263 FFFC0B40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1265 FFFC0B48 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1267 FFFC0B50 2E 2E 2E 2E 2E 51 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
                                             
   1269 FFFC0B58 2E 2E 5A 53 41 57 40 2E     	dc.b	$2e,$2e,$5a,$53,$41,$57,$40,$2e
                                             
   1271 FFFC0B60 2E 43 58 44 45 24 23 2E     	dc.b	$2e,$43,$58,$44,$45,$24,$23,$2e
                                             
   1273 FFFC0B68 2E 20 56 46 54 52 25 2E     	dc.b	$2e,$20,$56,$46,$54,$52,$25,$2e
                                             
   1275 FFFC0B70 2E 4E 42 48 47 59 5E 2E     	dc.b	$2e,$4e,$42,$48,$47,$59,$5e,$2e
                                             
   1277 FFFC0B78 2E 2E 4D 4A 55 26 2A 2E     	dc.b	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
                                             
   1279 FFFC0B80 2E 3C 4B 49 4F 29 28 2E     	dc.b	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
                                             
   1281 FFFC0B88 2E 3E 3F 4C 3A 50 5F 2E     	dc.b	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
                                             
   1283 FFFC0B90 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1285 FFFC0B98 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1287 FFFC0BA0 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1289 FFFC0BA8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1291 FFFC0BB0 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1293 FFFC0BB8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1296 FFFC0BC0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1298 FFFC0BC8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1300 FFFC0BD0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1302 FFFC0BD8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1304 FFFC0BE0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1306 FFFC0BE8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1308 FFFC0BF0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1310 FFFC0BF8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1312 FFFC0C00 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1314 FFFC0C08 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1316 FFFC0C10 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1318 FFFC0C18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 23
bootrom.asm
   1320 FFFC0C20 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1322 FFFC0C28 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1324 FFFC0C30 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1326 FFFC0C38 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
                                             ; control
   1330 FFFC0C40                             _keybdControlCodes:
   1331 FFFC0C40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1333 FFFC0C48 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1335 FFFC0C50 2E 2E 2E 2E 2E 11 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
                                             
   1337 FFFC0C58 2E 2E 1A 13 01 17 40 2E     	dc.b	$2e,$2e,$1a,$13,$01,$17,$40,$2e
                                             
   1339 FFFC0C60 2E 03 18 04 05 24 23 2E     	dc.b	$2e,$03,$18,$04,$05,$24,$23,$2e
                                             
   1341 FFFC0C68 2E 20 16 06 14 12 25 2E     	dc.b	$2e,$20,$16,$06,$14,$12,$25,$2e
                                             
   1343 FFFC0C70 2E 0E 02 08 07 19 5E 2E     	dc.b	$2e,$0e,$02,$08,$07,$19,$5e,$2e
                                             
   1345 FFFC0C78 2E 2E 0D 0A 15 26 2A 2E     	dc.b	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
                                             
   1347 FFFC0C80 2E 3C 0B 09 0F 29 28 2E     	dc.b	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
                                             
   1349 FFFC0C88 2E 3E 3F 0C 3A 10 5F 2E     	dc.b	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
                                             
   1351 FFFC0C90 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1353 FFFC0C98 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1355 FFFC0CA0 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1357 FFFC0CA8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1359 FFFC0CB0 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1361 FFFC0CB8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1364 FFFC0CC0                             _keybdExtendedCodes:
   1365 FFFC0CC0 2E 2E 2E 2E A3 A1 A2 2E     	dc.b	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
                                             
   1367 FFFC0CC8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1369 FFFC0CD0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1371 FFFC0CD8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1373 FFFC0CE0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1375 FFFC0CE8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1377 FFFC0CF0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1379 FFFC0CF8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 24
bootrom.asm
                                             
   1381 FFFC0D00 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1383 FFFC0D08 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1385 FFFC0D10 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1387 FFFC0D18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1389 FFFC0D20 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1391 FFFC0D28 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1393 FFFC0D30 98 99 92 2E 91 90 2E 2E     	dc.b	$98,$99,$92,$2e,$91,$90,$2e,$2e
                                             
   1395 FFFC0D38 2E 2E 97 2E 2E 96 2E 2E     	dc.b	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
                                             
                                             
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             ; Monitor
                                             ;==============================================================================
                                             ;==============================================================================
                                             ;
   1405 FFFC0D40                             StartMon:
   1406 FFFC0D40                             Monitor:
                                             ;	lea		STACK,a7		; reset the stack pointer
   1408 FFFC0D40 4239 0001 0424              		clr.b	KeybdEcho		; turn off keyboard echo
   1409 FFFC0D46                             PromptLn:
   1410 FFFC0D46 6100 F4EA                   		bsr		CRLF
   1411 FFFC0D4A 123C 0024                   		move.b	#'$',d1
   1412 FFFC0D4E 6100 F52C                   		bsr		DisplayChar
                                             
                                             ; Get characters until a CR is keyed
                                             ;
   1416 FFFC0D52                             Prompt3:
   1417 FFFC0D52 6100 FA66                   		bsr		GetKey
   1418 FFFC0D56 0C01 000D                   		cmpi.b	#CR,d1
   1419 FFFC0D5A 6706                        		beq.s	Prompt1
   1420 FFFC0D5C 6100 F51E                   		bsr		DisplayChar
   1421 FFFC0D60 60F0                        		bra.s	Prompt3
                                             
                                             ; Process the screen line that the CR was keyed on
                                             ;
   1425 FFFC0D62                             Prompt1:
   1426 FFFC0D62 4239 0001 0419              		clr.b	CursorCol		; go back to the start of the line
   1427 FFFC0D68 6100 F4E2                   		bsr		CalcScreenLoc	; a0 = screen memory location
   1428 FFFC0D6C 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1430 FFFC0D6E 0C01 0024                   		cmpi.b	#'$',d1			; skip over '$' prompt character
   1431 FFFC0D72 6602                        		bne.s	Prompt2
   1432 FFFC0D74 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
                                             	
                                             ; Dispatch based on command character
                                             ;
   1437 FFFC0D76                             Prompt2:
   1438 FFFC0D76 0C01 006F                   		cmpi.b	#'o',d1
   1439 FFFC0D7A 6700 0D8E                   		beq		gfx_demo
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 25
bootrom.asm
   1440 FFFC0D7E 0C01 0061                   		cmpi.b	#'a',d1
   1441 FFFC0D82 6700 08DC                   		beq		AudioInputTest
   1442 FFFC0D86 0C01 0067                   		cmpi.b	#'g',d1
   1443 FFFC0D8A 6700 0684                   		beq		GraphicsDemo
   1444 FFFC0D8E 0C01 003A                   		cmpi.b	#':',d1			; $: - edit memory
   1445 FFFC0D92 6700 015C                   		beq		EditMem
   1446 FFFC0D96 0C01 0044                   		cmpi.b	#'D',d1			; $D - dump memory
   1447 FFFC0D9A 6700 01C2                   		beq		DumpMem
   1448 FFFC0D9E 0C01 0046                   		cmpi.b	#'F',d1
   1449 FFFC0DA2 6700 00F6                   		beq		FillMem
   1450 FFFC0DA6 0C01 0042                   		cmpi.b	#'B',d1			; $B - start tiny basic
   1451 FFFC0DAA 6606                        		bne.s	.0001
   1452 FFFC0DAC 4EF9 FFFC C000              		jmp		$FFFCC000
   1453 FFFC0DB2                             .0001:
   1454 FFFC0DB2 0C01 004A                   		cmpi.b	#'J',d1			; $J - execute code
   1455 FFFC0DB6 6700 0196                   		beq		ExecuteCode
   1456 FFFC0DBA 0C01 004C                   		cmpi.b	#'L',d1			; $L - load S19 file
   1457 FFFC0DBE 6700 0368                   		beq		LoadS19
   1458 FFFC0DC2 0C01 003F                   		cmpi.b	#'?',d1			; $? - display help
   1459 FFFC0DC6 6726                        		beq		DisplayHelp
   1460 FFFC0DC8 0C01 0043                   		cmpi.b	#'C',d1			; $C - clear screen
   1461 FFFC0DCC 6704                        		beq		TestCLS
   1462 FFFC0DCE 6000 FF70                   		bra		Monitor
                                             
   1464 FFFC0DD2                             TestCLS:
   1465 FFFC0DD2 1218                        		move.b	(a0)+,d1
   1466 FFFC0DD4 0C01 004C                   		cmpi.b	#'L',d1
   1467 FFFC0DD8 6600 FF66                   		bne		Monitor
   1468 FFFC0DDC 1218                        		move.b	(a0)+,d1
   1469 FFFC0DDE 0C01 0053                   		cmpi.b	#'S',d1
   1470 FFFC0DE2 6600 FF5C                   		bne		Monitor
   1471 FFFC0DE6 6100 0216                   		bsr		ClearScreen
   1472 FFFC0DEA 6000 FF54                   		bra		Monitor
                                             	
   1474 FFFC0DEE                             DisplayHelp:
   1475 FFFC0DEE 43F9 FFFC 0DFE              		lea		HelpMsg,a1
   1476 FFFC0DF4 4EB9 FFFC 03EC              		jsr		DisplayString
   1477 FFFC0DFA 6000 FF44                   		bra		Monitor
                                             
   1479 FFFC0DFE                             HelpMsg:
   1480 FFFC0DFE 3F 20 3D 20 44 69 73 70     		dc.b	"? = Display help",CR,LF
   1481 FFFC0E06 6C 61 79 20 68 65 6C 70     
   1482 FFFC0E0E 0D 0A                       
   1483 FFFC0E10 43 4C 53 20 3D 20 63 6C     		dc.b	"CLS = clear screen",CR,LF
   1484 FFFC0E18 65 61 72 20 73 63 72 65     
   1485 FFFC0E20 65 6E 0D 0A                 
   1486 FFFC0E24 3A 20 3D 20 45 64 69 74     		dc.b	": = Edit memory bytes",CR,LF
   1487 FFFC0E2C 20 6D 65 6D 6F 72 79 20     
   1488 FFFC0E34 62 79 74 65 73 0D 0A        
   1489 FFFC0E3B 46 20 3D 20 46 69 6C 6C     		dc.b	"F = Fill memory",CR,LF
   1490 FFFC0E43 20 6D 65 6D 6F 72 79 0D     
   1491 FFFC0E4B 0A                          
   1492 FFFC0E4C 4C 20 3D 20 4C 6F 61 64     		dc.b	"L = Load S19 file",CR,LF
   1493 FFFC0E54 20 53 31 39 20 66 69 6C     
   1494 FFFC0E5C 65 0D 0A                    
   1495 FFFC0E5F 44 20 3D 20 44 75 6D 70     		dc.b	"D = Dump memory",CR,LF
   1496 FFFC0E67 20 6D 65 6D 6F 72 79 0D     
   1497 FFFC0E6F 0A                          
   1498 FFFC0E70 42 20 3D 20 73 74 61 72     		dc.b	"B = start tiny basic",CR,LF
   1499 FFFC0E78 74 20 74 69 6E 79 20 62     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 26
bootrom.asm
   1500 FFFC0E80 61 73 69 63 0D 0A           
   1501 FFFC0E86 4A 20 3D 20 4A 75 6D 70     		dc.b	"J = Jump to code",CR,LF,0
   1502 FFFC0E8E 20 74 6F 20 63 6F 64 65     
   1503 FFFC0E96 0D 0A 00                    
   1504 FFFC0E99 FF                         		even
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Fill memory
                                             ; FB = fill bytes		FB 00000010 100 FF	; fill starting at 10 for 256 bytes
                                             ; FW = fill words
                                             ; FL = fill longs
                                             ; F = fill bytes
                                             ;------------------------------------------------------------------------------
                                             ;
   1514 FFFC0E9A                             FillMem:
   1515 FFFC0E9A 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1517 FFFC0E9C 1801                        		move.b	d1,d4			; d4 = fill size
   1518 FFFC0E9E 6100 0044                   		bsr		ignBlanks
   1519 FFFC0EA2 6100 00EE                   		bsr		GetHexNumber
   1520 FFFC0EA6 2241                        		move.l	d1,a1			; a1 = start
   1521 FFFC0EA8 6100 003A                   		bsr		ignBlanks
   1522 FFFC0EAC 6100 00E4                   		bsr		GetHexNumber
   1523 FFFC0EB0 2601                        		move.l	d1,d3			; d3 = count
   1524 FFFC0EB2 6100 0030                   		bsr		ignBlanks
   1525 FFFC0EB6 6100 00DA                   		bsr		GetHexNumber	; fill value
   1526 FFFC0EBA 0C04 004C                   		cmpi.b	#'L',d4
   1527 FFFC0EBE 660A                        		bne		fmem1
   1528 FFFC0EC0                             fmemL:
   1529 FFFC0EC0 22C1                        		move.l	d1,(a1)+
   1530 FFFC0EC2 5383                        		sub.l	#1,d3
   1531 FFFC0EC4 66FA                        		bne.s	fmemL
   1532 FFFC0EC6 6000 FE78                   		bra		Monitor
   1533 FFFC0ECA                             fmem1
   1534 FFFC0ECA 0C04 0057                   		cmpi.b	#'W',d4
   1535 FFFC0ECE 660A                        		bne		fmemB
   1536 FFFC0ED0                             fmemW:
   1537 FFFC0ED0 32C1                        		move.w	d1,(a1)+
   1538 FFFC0ED2 5383                        		sub.l	#1,d3
   1539 FFFC0ED4 66FA                        		bne.s	fmemW
   1540 FFFC0ED6 6000 FE68                   		bra		Monitor
   1541 FFFC0EDA                             fmemB:
   1542 FFFC0EDA 12C1                        		move.b	d1,(a1)+
   1543 FFFC0EDC 5383                        		sub.l	#1,d3
   1544 FFFC0EDE 66FA                        		bne.s	fmemB
   1545 FFFC0EE0 6000 FE5E                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   1550 FFFC0EE4                             ignBlanks:
   1551 FFFC0EE4 1218                        		move.b	(a0)+,d1
   1552 FFFC0EE6 0C01 0020                   		cmpi.b	#' ',d1
   1553 FFFC0EEA 67F8                        		beq		ignBlanks
   1554 FFFC0EEC 5388                        		subq	#1,a0
   1555 FFFC0EEE 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Edit memory byte.
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 27
bootrom.asm
                                             ;
   1561 FFFC0EF0                             EditMem:
   1562 FFFC0EF0 6100 FFF2                   		bsr		ignBlanks
   1563 FFFC0EF4 6100 009C                   		bsr		GetHexNumber
   1564 FFFC0EF8 2241                        		move.l	d1,a1
   1565 FFFC0EFA                             edtmem1:
   1566 FFFC0EFA 6100 FFE8                   		bsr		ignBlanks
   1567 FFFC0EFE 6100 0092                   		bsr		GetHexNumber
   1568 FFFC0F02 12C1                        		move.b	d1,(a1)+
   1569 FFFC0F04 6100 FFDE                   		bsr		ignBlanks
   1570 FFFC0F08 6100 0088                   		bsr		GetHexNumber
   1571 FFFC0F0C 12C1                        		move.b	d1,(a1)+
   1572 FFFC0F0E 6100 FFD4                   		bsr		ignBlanks
   1573 FFFC0F12 6100 007E                   		bsr		GetHexNumber
   1574 FFFC0F16 12C1                        		move.b	d1,(a1)+
   1575 FFFC0F18 6100 FFCA                   		bsr		ignBlanks
   1576 FFFC0F1C 6100 0074                   		bsr		GetHexNumber
   1577 FFFC0F20 12C1                        		move.b	d1,(a1)+
   1578 FFFC0F22 6100 FFC0                   		bsr		ignBlanks
   1579 FFFC0F26 6100 006A                   		bsr		GetHexNumber
   1580 FFFC0F2A 12C1                        		move.b	d1,(a1)+
   1581 FFFC0F2C 6100 FFB6                   		bsr		ignBlanks
   1582 FFFC0F30 6100 0060                   		bsr		GetHexNumber
   1583 FFFC0F34 12C1                        		move.b	d1,(a1)+
   1584 FFFC0F36 6100 FFAC                   		bsr		ignBlanks
   1585 FFFC0F3A 6100 0056                   		bsr		GetHexNumber
   1586 FFFC0F3E 12C1                        		move.b	d1,(a1)+
   1587 FFFC0F40 6100 FFA2                   		bsr		ignBlanks
   1588 FFFC0F44 6100 004C                   		bsr		GetHexNumber
   1589 FFFC0F48 12C1                        		move.b	d1,(a1)+
   1590 FFFC0F4A 6000 FDF4                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Execute code at the specified address.
                                             ;------------------------------------------------------------------------------
                                             ;
   1596 FFFC0F4E                             ExecuteCode:
   1597 FFFC0F4E 6100 FF94                   		bsr		ignBlanks
   1598 FFFC0F52 6100 003E                   		bsr		GetHexNumber
   1599 FFFC0F56 2041                        		move.l	d1,a0
   1600 FFFC0F58 4E90                        		jsr		(a0)
   1601 FFFC0F5A 6000 FDE4                   		bra     Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Do a memory dump of the requested location.
                                             ;------------------------------------------------------------------------------
                                             ;
   1607 FFFC0F5E                             DumpMem:
   1608 FFFC0F5E 6100 FF84                   		bsr		ignBlanks
   1609 FFFC0F62 6100 002E                   		bsr		GetHexNumber
   1610 FFFC0F66                             DumpMem1:
   1611 FFFC0F66 2041                        		move.l	d1,a0
   1612 FFFC0F68 4EB9 FFFC 0232              		jsr		CRLF
   1613 FFFC0F6E 6100 F7A2                   		bsr		DisplayMem
   1614 FFFC0F72 6100 F79E                   		bsr		DisplayMem
   1615 FFFC0F76 6100 F79A                   		bsr		DisplayMem
   1616 FFFC0F7A 6100 F796                   		bsr		DisplayMem
   1617 FFFC0F7E 6100 F792                   		bsr		DisplayMem
   1618 FFFC0F82 6100 F78E                   		bsr		DisplayMem
   1619 FFFC0F86 6100 F78A                   		bsr		DisplayMem
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 28
bootrom.asm
   1620 FFFC0F8A 6100 F786                   		bsr		DisplayMem
   1621 FFFC0F8E 6000 FDB0                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a hexidecimal number. Maximum of eight digits.
                                             ;------------------------------------------------------------------------------
                                             ;
   1627 FFFC0F92                             GetHexNumber:
   1628 FFFC0F92 48E7 A000                   		movem.l	d0/d2,-(a7)
   1629 FFFC0F96 4282                        		clr.l	d2
   1630 FFFC0F98 7007                        		moveq	#7,d0
   1631 FFFC0F9A                             gthxn2:
   1632 FFFC0F9A 1218                        		move.b	(a0)+,d1
   1633 FFFC0F9C 6100 001E                   		bsr		AsciiToHexNybble
   1634 FFFC0FA0 B23C 00FF                   		cmp.b	#0xff,d1
   1635 FFFC0FA4 670E                        		beq		gthxn1
   1636 FFFC0FA6 E98A                        		lsl.l	#4,d2
   1637 FFFC0FA8 0281 0000 000F              		andi.l	#0x0f,d1
   1638 FFFC0FAE 8481                        		or.l	d1,d2
   1639 FFFC0FB0 51C8 FFE8                   		dbra	d0,gthxn2
   1640 FFFC0FB4                             gthxn1:
   1641 FFFC0FB4 2202                        		move.l	d2,d1
   1642 FFFC0FB6 4CDF 0005                   		movem.l	(a7)+,d0/d2
   1643 FFFC0FBA 4E75                        		rts	
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Convert ASCII character in the range '0' to '9', 'a' tr 'f' or 'A' to 'F'
                                             ; to a hex nybble.
                                             ;------------------------------------------------------------------------------
                                             ;
   1650 FFFC0FBC                             AsciiToHexNybble:
   1651 FFFC0FBC 0C01 0030                   		cmpi.b	#'0',d1
   1652 FFFC0FC0 6538                        		blo.s	gthx3
   1653 FFFC0FC2 0C01 0039                   		cmpi.b	#'9',d1
   1654 FFFC0FC6 6206                        		bhi.s	gthx5
   1655 FFFC0FC8 0401 0030                   		subi.b	#'0',d1
   1656 FFFC0FCC 4E75                        		rts
   1657 FFFC0FCE                             gthx5:
   1658 FFFC0FCE 0C01 0041                   		cmpi.b	#'A',d1
   1659 FFFC0FD2 6526                        		blo.s	gthx3
   1660 FFFC0FD4 0C01 0046                   		cmpi.b	#'F',d1
   1661 FFFC0FD8 620A                        		bhi.s	gthx6
   1662 FFFC0FDA 0401 0041                   		subi.b	#'A',d1
   1663 FFFC0FDE 0601 000A                   		addi.b	#10,d1
   1664 FFFC0FE2 4E75                        		rts
   1665 FFFC0FE4                             gthx6:
   1666 FFFC0FE4 0C01 0061                   		cmpi.b	#'a',d1
   1667 FFFC0FE8 6510                        		blo.s	gthx3
   1668 FFFC0FEA 0C01 0066                   		cmpi.b	#'f',d1
   1669 FFFC0FEE 620A                        		bhi.s	gthx3
   1670 FFFC0FF0 0401 0061                   		subi.b	#'a',d1
   1671 FFFC0FF4 0601 000A                   		addi.b	#10,d1
   1672 FFFC0FF8 4E75                        		rts
   1673 FFFC0FFA                             gthx3:
   1674 FFFC0FFA 72FF                        		moveq	#-1,d1		; not a hex number
   1675 FFFC0FFC 4E75                        		rts
                                             
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             ; The fast way to clear the screen. Uses the blitter.
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 29
bootrom.asm
                                             
   1681 FFFC0FFE                             ClearScreen:
   1682 FFFC0FFE 4BF9 FFE0 0000              		lea		VDGREG,a5
   1683 FFFC1004                             .0003:								
   1684 FFFC1004 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1685 FFFC1008 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1686 FFFC100C 67F6                        		beq.s	.0003				; branch if not done
   1687 FFFC100E 2B7C 0001 4000 04BC         		move.l	#320*256,$4BC(a5)		; set transfer count  pixels
   1688 FFFC1016 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   1689 FFFC101E 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   1690 FFFC1026 2B7C 0000 0140 04A4         		move.l	#320,$4A4(a5)		; set destination width
   1691 FFFC102E 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   1692 FFFC1036 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; clear virtual screen too
   1695 FFFC103C 7020                        		moveq	#$20,d0				; d0 = space character
   1696 FFFC103E 323C 0A00                   		move.w	#80*32,d1
   1697 FFFC1042 4BF9 1FFF 0000              		lea		VirtScreen,a5
   1698 FFFC1048                             .0001:
   1699 FFFC1048 1AC0                        		move.b	d0,(a5)+
   1700 FFFC104A 51C9 FFFC                   		dbra	d1,.0001
   1701 FFFC104E 4E75                        		rts
                                             
   1703 FFFC1050                             ScrollUp:
   1704 FFFC1050 48E7 8084                   		movem.l	d0/a0/a5,-(a7)
   1705 FFFC1054 4BF9 FFE0 0000              		lea		VDGREG,a5
   1706 FFFC105A                             .0003:								
   1707 FFFC105A 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1708 FFFC105E 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1709 FFFC1062 67F6                        		beq.s	.0003				; branch if not done
                                             		; Channel A
   1711 FFFC1064 2B7C 0001 3600 04B0         		move.l	#320*248,$4B0(a5)	; set source transfer count pixels
   1712 FFFC106C 2B7C 0000 0A00 0480         		move.l	#320*8,$480(a5)		; set source bitmap address (address in graphics mem)
   1713 FFFC1074 2B7C 0000 0000 0484         		move.l	#0,$484(a5)			; set src modulo
                                             		; Channel D
   1715 FFFC107C 2B7C 0001 3600 04BC         		move.l	#320*248,$4BC(a5)	; set destination transfer count pixels
   1716 FFFC1084 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   1717 FFFC108C 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
                                             
   1719 FFFC1094 2B7C FFFF FFFF 04A0         		move.l	#-1,$4A0(a5)		; set source width
   1720 FFFC109C 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   1721 FFFC10A4 3B7C 0011 04AE              		move.w	#$11,$4AE(a5)		; set op A ($11 = copy A)
   1722 FFFC10AA 3B7C 8082 04AC              		move.w	#%1000000010000010,$4AC(a5)		; enable channel A,D, start transfer
                                             
                                             		; Scroll virtual screen
   1725 FFFC10B0 4BF9 1FFF 0000              		lea		VirtScreen,a5
   1726 FFFC10B6 204D                        		movea.l	a5,a0
   1727 FFFC10B8 1039 0001 041B              		move.b	TextCols,d0
   1728 FFFC10BE 4880                        		ext.w	d0
   1729 FFFC10C0 D1C0                        		add.l	d0,a0
   1730 FFFC10C2 C0FC 001F                   		mulu	#31,d0
   1731 FFFC10C6                             .0001:
   1732 FFFC10C6 1AD8                        		move.b	(a0)+,(a5)+
   1733 FFFC10C8 51C8 FFFC                   		dbra	d0,.0001
   1734 FFFC10CC 4CDF 2101                   		movem.l	(a7)+,d0/a0/a5
                                             
   1736 FFFC10D0                             BlankLastLine:
   1737 FFFC10D0 48E7 8004                   		movem.l	d0/a5,-(a7)
                                             		; Channel D
   1739 FFFC10D4 4BF9 FFE0 0000              		lea		VDGREG,a5
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 30
bootrom.asm
   1740 FFFC10DA                             .0003:								
   1741 FFFC10DA 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1742 FFFC10DE 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1743 FFFC10E2 67F6                        		beq.s	.0003				; branch if not done
   1744 FFFC10E4 2B7C 0000 0A00 04BC         		move.l	#320*8,$4BC(a5)		; set destination transfer count pixels
   1745 FFFC10EC 2B7C 0001 3600 0498         		move.l	#320*248,$498(a5)	; set destination address
   1746 FFFC10F4 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   1747 FFFC10FC 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   1748 FFFC1104 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   1749 FFFC110C 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   1750 FFFC1112 4BF9 1FFF 04D8              		lea		VirtScreen+40*31,a5
   1751 FFFC1118 7028                        		moveq	#40,d0
   1752 FFFC111A                             .0001:
   1753 FFFC111A 1AFC 0020                   		move.b	#$20,(a5)+
   1754 FFFC111E 51C8 FFFA                   		dbra	d0,.0001
   1755 FFFC1122 4CDF 2001                   		movem.l	(a7)+,d0/a5
   1756 FFFC1126 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Load an S19 format file
                                             ;==============================================================================
                                             ;
   1762 FFFC1128                             LoadS19:
   1763 FFFC1128 600A                        	bra		ProcessRec
   1764 FFFC112A                             NextRec:
   1765 FFFC112A 6100 017A                   	bsr		sGetChar
   1766 FFFC112E 0C00 000A                   	cmpi.b	#LF,d0
   1767 FFFC1132 66F6                        	bne		NextRec
   1768 FFFC1134                             ProcessRec
   1769 FFFC1134 6100 0170                   	bsr		sGetChar
   1770 FFFC1138 1800                        	move.b	d0,d4
   1771 FFFC113A 0C04 001A                   	cmpi.b	#26,d4		; CTRL-Z ?
   1772 FFFC113E 6700 FC00                   	beq		Monitor
   1773 FFFC1142 0C04 0053                   	cmpi.b	#'S',d4
   1774 FFFC1146 66E2                        	bne		NextRec
   1775 FFFC1148 6100 015C                   	bsr		sGetChar
   1776 FFFC114C 1800                        	move.b	d0,d4
   1777 FFFC114E 0C04 0030                   	cmpi.b	#'0',d4
   1778 FFFC1152 65D6                        	blo		NextRec
   1779 FFFC1154 0C04 0039                   	cmpi.b	#'9',d4		; d4 = record type
   1780 FFFC1158 62D0                        	bhi		NextRec
   1781 FFFC115A 6100 014A                   	bsr		sGetChar
   1782 FFFC115E 6100 FE5C                   	bsr		AsciiToHexNybble
   1783 FFFC1162 1401                        	move.b	d1,d2
   1784 FFFC1164 6100 0140                   	bsr		sGetChar
   1785 FFFC1168 6100 FE52                   	bsr		AsciiToHexNybble
   1786 FFFC116C E90A                        	lsl.b	#4,d2
   1787 FFFC116E 8202                        	or.b	d2,d1		; d1 = byte count
   1788 FFFC1170 1601                        	move.b	d1,d3		; d3 = byte count
   1789 FFFC1172 0C04 0030                   	cmpi.b	#'0',d4		; manufacturer ID record, ignore
   1790 FFFC1176 67B2                        	beq		NextRec
   1791 FFFC1178 0C04 0031                   	cmpi.b	#'1',d4
   1792 FFFC117C 676A                        	beq		ProcessS1
   1793 FFFC117E 0C04 0032                   	cmpi.b	#'2',d4
   1794 FFFC1182 676A                        	beq		ProcessS2
   1795 FFFC1184 0C04 0033                   	cmpi.b	#'3',d4
   1796 FFFC1188 676A                        	beq		ProcessS3
   1797 FFFC118A 0C04 0035                   	cmpi.b	#'5',d4		; record count record, ignore
   1798 FFFC118E 679A                        	beq		NextRec
   1799 FFFC1190 0C04 0037                   	cmpi.b	#'7',d4
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 31
bootrom.asm
   1800 FFFC1194 6764                        	beq		ProcessS7
   1801 FFFC1196 0C04 0038                   	cmpi.b	#'8',d4
   1802 FFFC119A 676C                        	beq		ProcessS8
   1803 FFFC119C 0C04 0039                   	cmpi.b	#'9',d4
   1804 FFFC11A0 6774                        	beq		ProcessS9
   1805 FFFC11A2 6086                        	bra		NextRec
                                             
   1807 FFFC11A4                             pcssxa
   1808 FFFC11A4 0243 00FF                   	andi.w	#0xff,d3
   1809 FFFC11A8 5343                        	subi.w	#1,d3			; one less for dbra
   1810 FFFC11AA                             pcss1a
   1811 FFFC11AA 4282                        	clr.l	d2
   1812 FFFC11AC 6100 00F8                   	bsr		sGetChar
   1813 FFFC11B0 6100 FE0A                   	bsr		AsciiToHexNybble
   1814 FFFC11B4 E98A                        	lsl.l	#4,d2
   1815 FFFC11B6 8401                        	or.b	d1,d2
   1816 FFFC11B8 6100 00EC                   	bsr		sGetChar
   1817 FFFC11BC 6100 FDFE                   	bsr		AsciiToHexNybble
   1818 FFFC11C0 E98A                        	lsl.l	#4,d2
   1819 FFFC11C2 8401                        	or.b	d1,d2
   1820 FFFC11C4 12C2                        	move.b	d2,(a1)+
   1821 FFFC11C6 51CB FFE2                   	dbra	d3,pcss1a
                                             ; Get the checksum byte
   1823 FFFC11CA 4282                        	clr.l	d2
   1824 FFFC11CC 6100 00D8                   	bsr		sGetChar
   1825 FFFC11D0 6100 FDEA                   	bsr		AsciiToHexNybble
   1826 FFFC11D4 E98A                        	lsl.l	#4,d2
   1827 FFFC11D6 8401                        	or.b	d1,d2
   1828 FFFC11D8 6100 00CC                   	bsr		sGetChar
   1829 FFFC11DC 6100 FDDE                   	bsr		AsciiToHexNybble
   1830 FFFC11E0 E98A                        	lsl.l	#4,d2
   1831 FFFC11E2 8401                        	or.b	d1,d2
   1832 FFFC11E4 6000 FF44                   	bra		NextRec
                                             
   1834 FFFC11E8                             ProcessS1:
   1835 FFFC11E8 6100 003A                   	bsr		S19Get16BitAddress
   1836 FFFC11EC 60B6                        	bra		pcssxa
   1837 FFFC11EE                             ProcessS2:
   1838 FFFC11EE 6100 0042                   	bsr		S19Get24BitAddress
   1839 FFFC11F2 60B0                        	bra		pcssxa
   1840 FFFC11F4                             ProcessS3:
   1841 FFFC11F4 6100 004A                   	bsr		S19Get32BitAddress
   1842 FFFC11F8 60AA                        	bra		pcssxa
   1843 FFFC11FA                             ProcessS7:
   1844 FFFC11FA 6100 0044                   	bsr		S19Get32BitAddress
   1845 FFFC11FE 23C9 0000 0000              	move.l	a1,S19StartAddress
   1846 FFFC1204 6000 FB3A                   	bra		Monitor
   1847 FFFC1208                             ProcessS8:
   1848 FFFC1208 6100 0028                   	bsr		S19Get24BitAddress
   1849 FFFC120C 23C9 0000 0000              	move.l	a1,S19StartAddress
   1850 FFFC1212 6000 FB2C                   	bra		Monitor
   1851 FFFC1216                             ProcessS9:
   1852 FFFC1216 6100 000C                   	bsr		S19Get16BitAddress
   1853 FFFC121A 23C9 0000 0000              	move.l	a1,S19StartAddress
   1854 FFFC1220 6000 FB1E                   	bra		Monitor
                                             
   1856 FFFC1224                             S19Get16BitAddress:
   1857 FFFC1224 4282                        	clr.l	d2
   1858 FFFC1226 6100 007E                   	bsr		sGetChar
   1859 FFFC122A 6100 FD90                   	bsr		AsciiToHexNybble
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 32
bootrom.asm
   1860 FFFC122E 1401                        	move.b	d1,d2
   1861 FFFC1230 604A                        	bra		S1932b
                                             
   1863 FFFC1232                             S19Get24BitAddress:
   1864 FFFC1232 4282                        	clr.l	d2
   1865 FFFC1234 6100 0070                   	bsr		sGetChar
   1866 FFFC1238 6100 FD82                   	bsr		AsciiToHexNybble
   1867 FFFC123C 1401                        	move.b	d1,d2
   1868 FFFC123E 6024                        	bra		S1932a
                                             
   1870 FFFC1240                             S19Get32BitAddress:
   1871 FFFC1240 4282                        	clr.l	d2
   1872 FFFC1242 6100 0062                   	bsr		sGetChar
   1873 FFFC1246 6100 FD74                   	bsr		AsciiToHexNybble
   1874 FFFC124A 1401                        	move.b	d1,d2
   1875 FFFC124C 6100 0058                   	bsr		sGetChar
   1876 FFFC1250 6100 FD6A                   	bsr		AsciiToHexNybble
   1877 FFFC1254 E98A                        	lsl.l	#4,d2
   1878 FFFC1256 8401                        	or.b	d1,d2
   1879 FFFC1258 6100 004C                   	bsr		sGetChar
   1880 FFFC125C 6100 FD5E                   	bsr		AsciiToHexNybble
   1881 FFFC1260 E98A                        	lsl.l	#4,d2
   1882 FFFC1262 8401                        	or.b	d1,d2
   1883 FFFC1264                             S1932a:
   1884 FFFC1264 6100 0040                   	bsr		sGetChar
   1885 FFFC1268 6100 FD52                   	bsr		AsciiToHexNybble
   1886 FFFC126C E98A                        	lsl.l	#4,d2
   1887 FFFC126E 8401                        	or.b	d1,d2
   1888 FFFC1270 6100 0034                   	bsr		sGetChar
   1889 FFFC1274 6100 FD46                   	bsr		AsciiToHexNybble
   1890 FFFC1278 E98A                        	lsl.l	#4,d2
   1891 FFFC127A 8401                        	or.b	d1,d2
   1892 FFFC127C                             S1932b:
   1893 FFFC127C 6100 0028                   	bsr		sGetChar
   1894 FFFC1280 6100 FD3A                   	bsr		AsciiToHexNybble
   1895 FFFC1284 E98A                        	lsl.l	#4,d2
   1896 FFFC1286 8401                        	or.b	d1,d2
   1897 FFFC1288 6100 001C                   	bsr		sGetChar
   1898 FFFC128C 6100 FD2E                   	bsr		AsciiToHexNybble
   1899 FFFC1290 E98A                        	lsl.l	#4,d2
   1900 FFFC1292 8401                        	or.b	d1,d2
   1901 FFFC1294 6100 0010                   	bsr		sGetChar
   1902 FFFC1298 6100 FD22                   	bsr		AsciiToHexNybble
   1903 FFFC129C E98A                        	lsl.l	#4,d2
   1904 FFFC129E 8401                        	or.b	d1,d2
   1905 FFFC12A0 4284                        	clr.l	d4
   1906 FFFC12A2 2242                        	move.l	d2,a1
   1907 FFFC12A4 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a character from auxillary input, checking the keyboard status for a
                                             ; CTRL-C
                                             ;------------------------------------------------------------------------------
                                             ;
   1914 FFFC12A6                             sGetChar:
   1915 FFFC12A6 6100 F500                   	bsr		CheckForKey
   1916 FFFC12AA 670C                        	beq		sgc1
   1917 FFFC12AC 6100 F50C                   	bsr		GetKey
   1918 FFFC12B0 0C01 0003                   	cmpi.b	#CTRLC,d1
   1919 FFFC12B4 6700 FA8A                   	beq		Monitor
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 33
bootrom.asm
   1920 FFFC12B8                             sgc1:
   1921 FFFC12B8 6100 FFFF                   	bsr		AUXIN
   1922 FFFC12BC 67E8                        	beq		sGetChar
   1923 FFFC12BE 1200                        	move.b	d0,d1
   1924 FFFC12C0 4E75                        	rts
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   1932 FFFC12C2                             DisplayHexNumber:
   1933 FFFC12C2 33FC A6A6 FFDC 0600         		move.w	#$A6A6,leds		; diagnostics
   1934 FFFC12CA 2C7C FFE0 0000              		move.l	#VDGREG,a6
   1935 FFFC12D0 343C 0007                   		move.w	#7,d2		; number-1 of digits to display
   1936 FFFC12D4                             disphnum1:
   1937 FFFC12D4 1001                        		move.b	d1,d0		; get digit into d0.b
   1938 FFFC12D6 0240 000F                   		andi.w	#$0f,d0
   1939 FFFC12DA 0C40 0009                   		cmpi.w	#$09,d0
   1940 FFFC12DE 6302                        		bls.s	disphnum2
   1941 FFFC12E0 5E40                        		addi.w	#7,d0
   1942 FFFC12E2                             disphnum2:
   1943 FFFC12E2 0640 0030                   		addi.w	#$30,d0	; convert to display char
   1944 FFFC12E6 3602                        		move.w	d2,d3		; char count into d3
   1945 FFFC12E8 E743                        		asl.w	#3,d3		; scale * 8
   1946 FFFC12EA                             disphnum3:
   1947 FFFC12EA 382E 042C                   		move.w	$42C(a6),d4			; read character queue index into d4
   1948 FFFC12EE B87C 001C                   		cmp.w	#28,d4					; allow up 28 entries to be in progress
   1949 FFFC12F2 64F6                        		bhs.s	disphnum3				; branch if too many chars queued
   1950 FFFC12F4 4880                        		ext.w	d0						; zero out high order bits
   1951 FFFC12F6 3D40 0420                   		move.w	d0,$420(a6)			; set char code
   1952 FFFC12FA 3D7C 7FFF 0422              		move.w	#WHITE,$422(a6)		; set fg color
   1953 FFFC1300 3D7C 000F 0424              		move.w	#DARK_BLUE,$424(a6)	; set bk color
   1954 FFFC1306 3D43 0426                   		move.w	d3,$426(a6)			; set x pos
   1955 FFFC130A 3D7C 0008 0428              		move.w	#8,$428(a6)			; set y pos
   1956 FFFC1310 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
   1957 FFFC1316 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
   1958 FFFC131C E899                        		ror.l	#4,d1					; rot to next digit
   1959 FFFC131E 57CA FFB4                   		dbeq	d2,disphnum1
   1960 FFFC1322 4ED5                        		jmp		(a5)
                                             
                                             ;===============================================================================
                                             ;    Perform ram test. (Uses checkerboard testing).
                                             ; 
                                             ;    Return address must be stored in a3 since the stack cannot be used (it
                                             ; would get overwritten in test). Note this routine uses no ram at all.
                                             ;===============================================================================
   1968 FFFC1324                             ramtest:
   1969 FFFC1324 33FC A5A5 FFDC 0600         		move.w	#$A5A5,leds		; diagnostics
   1970 FFFC132C 207C 0003 0000                      movea.l #$30000,a0
   1971 FFFC1332 203C AAAA 5555                      move.l #$aaaa5555,d0
                                             ;-----------------------------------------------------------
                                             ;   Write checkerboard pattern to ram then read it back to
                                             ; find the highest usable ram address (maybe). This address
                                             ; must be lower than the start of the rom (0xe00000).
                                             ;-----------------------------------------------------------
   1977 FFFC1338                             ramtest1:
   1978 FFFC1338 20C0                                move.l 	d0,(a0)+
   1979 FFFC133A 2208                                move.l	a0,d1
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 34
bootrom.asm
   1980 FFFC133C 4A41                                tst.w	d1
   1981 FFFC133E 660A                                bne.s	rmtst1
   1982 FFFC1340 4BF9 FFFC 134A                      lea		rmtst1,a5
   1983 FFFC1346 6000 FF7A                           bra		DisplayHexNumber
   1984 FFFC134A                             rmtst1:
   1985 FFFC134A 33FC A9A9 FFDC 0600         		move.w	#$A9A9,leds		; diagnostics
   1986 FFFC1352 B1FC 0005 FFFC                      cmpa.l 	#$5FFFC,a0
   1987 FFFC1358 66DE                                bne.s 	ramtest1
   1988 FFFC135A 7200                                move.l	#0,d1
   1989 FFFC135C 6100 EEEE                           bsr		CalcScreenLoc
   1990 FFFC1360 6000 FC04                           bra		DumpMem1
                                             
                                             ;------------------------------------------------------
                                             ;   Save maximum useable address for later comparison.
                                             ;------------------------------------------------------
   1995 FFFC1364                             ramtest6:
   1996 FFFC1364 33FC A7A7 FFDC 0600         		move.w	#$A7A7,leds		; diagnostics
   1997 FFFC136C 2448                                movea.l a0,a2
   1998 FFFC136E 207C 0003 0000                      movea.l #$30000,a0
                                             ;--------------------------------------------
                                             ;   Read back checkerboard pattern from ram.
                                             ;--------------------------------------------
   2002 FFFC1374                             ramtest2:
   2003 FFFC1374 2A18                                move.l  (a0)+,d5
   2004 FFFC1376 B5C8                                cmpa.l	a0,a2
   2005 FFFC1378 671A                                beq.s	ramtest3
   2006 FFFC137A 2208                                move.l	a0,d1
   2007 FFFC137C 4A41                                tst.w	d1
   2008 FFFC137E 660A                                bne.s	rmtst2
   2009 FFFC1380 4BF9 FFFC 138A                      lea		rmtst2,a5
   2010 FFFC1386 6000 FF3A                           bra		DisplayHexNumber
   2011 FFFC138A                             rmtst2:
   2012 FFFC138A 0C85 AAAA 5555                      cmpi.l 	#$aaaa5555,d5
   2013 FFFC1390 67E2                                beq.s 	ramtest2
   2014 FFFC1392 6678                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   The following section does the same test except
                                             ; with the checkerboard order switched around.
                                             ;---------------------------------------------------
   2019 FFFC1394                             ramtest3:                
   2020 FFFC1394 33FC A8A8 FFDC 0600         		move.w	#$A8A8,leds		; diagnostics
   2021 FFFC139C 207C 0003 0000                      movea.l #$30000,a0
   2022 FFFC13A2 203C 5555 AAAA                      move.l 	#$5555aaaa,d0
   2023 FFFC13A8                             ramtest4:
   2024 FFFC13A8 20C0                                move.l 	d0,(a0)+
   2025 FFFC13AA 2208                                move.l 	a0,d1
   2026 FFFC13AC 4A41                                tst.w	d1
   2027 FFFC13AE 660A                                bne.s   rmtst3
   2028 FFFC13B0 4BF9 FFFC 13BA                      lea		rmtst3,a5
   2029 FFFC13B6 6000 FF0A                           bra		DisplayHexNumber
   2030 FFFC13BA                             rmtst3:
   2031 FFFC13BA B1FC 1FFF FFFC                      cmpa.l 	#$1FFFFFFC,a0
   2032 FFFC13C0 66E6                                bne.s 	ramtest4
   2033 FFFC13C2                             ramtest8:
   2034 FFFC13C2 2448                                movea.l a0,a2
   2035 FFFC13C4 207C 0003 0000                      movea.l #$30000,a0
   2036 FFFC13CA                             ramtest5:
   2037 FFFC13CA 2018                                move.l 	(a0)+,d0
   2038 FFFC13CC B5C8                                cmpa.l	a0,a2
   2039 FFFC13CE 671A                                beq.s	rmtst5
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 35
bootrom.asm
   2040 FFFC13D0 2208                                move.l 	a0,d1
   2041 FFFC13D2 4A41                                tst.w	d1
   2042 FFFC13D4 660A                                bne.s	rmtst4
   2043 FFFC13D6 4BF9 FFFC 13E0                      lea		rmtst4,a5
   2044 FFFC13DC 6000 FEE4                           bra		DisplayHexNumber
   2045 FFFC13E0                             rmtst4:
   2046 FFFC13E0 0C80 5555 AAAA                      cmpi.l 	#$5555aaaa,d0
   2047 FFFC13E6 67E2                                beq.s 	ramtest5
   2048 FFFC13E8 6622                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   Save last ram address in end of memory pointer.
                                             ;---------------------------------------------------
   2052 FFFC13EA                             rmtst5:
   2053 FFFC13EA 23C8 0001 0008                      move.l a0,memend
                                             ;-----------------------------------
                                             ;   Create very first memory block.
                                             ;-----------------------------------
   2057 FFFC13F0 91FC 0000 000C                      suba.l 	#12,a0
   2058 FFFC13F6 21C8 0404                           move.l 	a0,$0404
   2059 FFFC13FA 21FC 4652 4545 0400                 move.l 	#$46524545,$0400
   2060 FFFC1402 21FC 0000 0408 0408                 move.l 	#$408,$408			; point back-link to self
   2061 FFFC140A 4ED3                                jmp 	(a3)
                                             ;----------------------------------
                                             ; Error in ram - go no farther.
                                             ;----------------------------------
   2065 FFFC140C                             ramtest7:
   2066 FFFC140C 4ED3                        		jmp 	(a3)
   2067 FFFC140E 60FC                                bra.s 	ramtest7
                                             
                                             
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2075 FFFC1410                             GraphicsDemo:
   2076 FFFC1410 6100 0080                   		bsr		DrawLines
   2077 FFFC1414 6100 0006                   		bsr		DrawRects
   2078 FFFC1418 6000 F926                   		bra		Monitor
                                             
   2080 FFFC141C                             DrawRects:
   2081 FFFC141C 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2082 FFFC1422 4BF9 FFE0 0000              		lea		VDGREG,a5
   2083 FFFC1428 2C3C 0000 4E20              		move.l	#20000,d6		; repeat a few times
   2084 FFFC142E                             .0001:
   2085 FFFC142E 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2086 FFFC1432 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2087 FFFC1434 4840                        		swap	d0				; and bits 16 to 24 for x0
   2088 FFFC1436 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2089 FFFC143A 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2090 FFFC143E 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2091 FFFC1442 242E 0C00                   		move.l	$0C00(a6),d2
   2092 FFFC1446 3602                        		move.w	d2,d3
   2093 FFFC1448 4842                        		swap	d2
   2094 FFFC144A 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2095 FFFC144E 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2096 FFFC1452 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2097 FFFC1456 282E 0C00                   		move.l	$0C00(a6),d4
   2098 FFFC145A 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2099 FFFC145E 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 36
bootrom.asm
   2100 FFFC1462                             .0002:
   2101 FFFC1462 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2102 FFFC1466 BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2103 FFFC146A 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2104 FFFC146C 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2105 FFFC1472 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2106 FFFC1476 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2107 FFFC147A 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2108 FFFC147E 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2109 FFFC1482 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2110 FFFC1486 3B7C 0003 042E              		move.w	#3,$42E(a5)		; pulse command queue (3 = draw rect)
   2111 FFFC148C 5386                        		sub.l	#1,d6
   2112 FFFC148E 669E                        		bne		.0001			; go back and do more lines
   2113 FFFC1490 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Draw lines randomly on the screen.
                                             ;===============================================================================
                                             
   2119 FFFC1492                             DrawLines:
   2120 FFFC1492 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2121 FFFC1498 4BF9 FFE0 0000              		lea		VDGREG,a5
   2122 FFFC149E 2C3C 0003 0D40              		move.l	#200000,d6		; repeat a few times
   2123 FFFC14A4                             .0001:
                                             		; Wait for blitter to be done
   2125 FFFC14A4                             .0003:								
   2126 FFFC14A4 33FC 000A FFDC 0600         		move.w	#10,leds
   2127 FFFC14AC 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2128 FFFC14B0 0800 000E                   		btst	#14,d0
   2129 FFFC14B4 6706                        		beq.s	.0004
   2130 FFFC14B6 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2131 FFFC14BA 67E8                        		beq.s	.0003				; branch if not done
   2132 FFFC14BC                             .0004:
   2133 FFFC14BC 33FC 000B FFDC 0600         		move.w	#11,leds
   2134 FFFC14C4 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2135 FFFC14C8 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2136 FFFC14CA 4840                        		swap	d0				; and bits 16 to 24 for x0
   2137 FFFC14CC 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2138 FFFC14D0 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2139 FFFC14D4 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2140 FFFC14D8 242E 0C00                   		move.l	$0C00(a6),d2
   2141 FFFC14DC 3602                        		move.w	d2,d3
   2142 FFFC14DE 4842                        		swap	d2
   2143 FFFC14E0 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2144 FFFC14E4 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2145 FFFC14E8 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2146 FFFC14EC 282E 0C00                   		move.l	$0C00(a6),d4
   2147 FFFC14F0 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2148 FFFC14F4 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2149 FFFC14F8                             .0002:
   2150 FFFC14F8 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2151 FFFC14FC BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2152 FFFC1500 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2153 FFFC1502 33FC 000C FFDC 0600         		move.w	#12,leds
   2154 FFFC150A 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2155 FFFC1510 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2156 FFFC1514 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2157 FFFC1518 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2158 FFFC151C 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2159 FFFC1520 3B43 0432                   		move.w	d3,$432(a5)		; set y1
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 37
bootrom.asm
   2160 FFFC1524 3B7C 0002 042E              		move.w	#2,$42E(a5)		; pulse command queue (2 = draw line)
   2161 FFFC152A 5386                        		sub.l	#1,d6
   2162 FFFC152C 6600 FF76                   		bne		.0001			; go back and do more lines
   2163 FFFC1530 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Test Blitter
                                             ;===============================================================================
                                             
   2169 FFFC1532                             TestBlitter:
                                             		; puts a red rectangle on screen
   2171 FFFC1532 4BF9 FFE0 0000              		lea		VDGREG,a5
   2172 FFFC1538                             .0003:								
   2173 FFFC1538 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2174 FFFC153C 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2175 FFFC1540 67F6                        		beq.s	.0003				; branch if not done
   2176 FFFC1542 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set transfer count 8000 pixels
   2177 FFFC154A 3B7C 7C00 04A8              		move.w	#RED,$4A8(a5)		; set color red
   2178 FFFC1550 2B7C 0000 0118 0498         		move.l	#280,$498(a5)		; set destination address
   2179 FFFC1558 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2180 FFFC1560 2B7C 0000 0118 049C         		move.l	#280,$49C(a5)		; set dst modulo
   2181 FFFC1568 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; makes a copy of the upper left corner of the screen
   2184 FFFC156E                             .0001:								
   2185 FFFC156E 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2186 FFFC1572 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2187 FFFC1576 67F6                        		beq.s	.0001				; branch if not done
                                             		; Channel A
   2189 FFFC1578 2B7C 0000 03E8 04B0         		move.l	#1000,$4B0(a5)		; set source transfer count 8000 pixels
   2190 FFFC1580 2B7C 0000 0000 0480         		move.l	#0,$480(a5)			; set source bitmap address (address in graphics mem)
   2191 FFFC1588 2B7C 0000 0118 0484         		move.l	#280,$484(a5)		; set src modulo
                                             		; Channel C
   2193 FFFC1590 2B7C 0000 03E8 04B8         		move.l	#1000,$4B8(a5)		; set source transfer count 8000 pixels
   2194 FFFC1598 2B7C 0000 0000 0490         		move.l	#0,$490(a5)			; set source bitmap address (address in graphics mem)
   2195 FFFC15A0 2B7C 0000 0118 0494         		move.l	#280,$494(a5)		; set src modulo
                                             		; Channel D
   2197 FFFC15A8 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set destination transfer count 8000 pixels
   2198 FFFC15B0 2B7C 0000 00F0 0498         		move.l	#240,$498(a5)		; set destination address
   2199 FFFC15B8 2B7C 0000 0118 049C         		move.l	#280,$49C(a5)		; set dst modulo
                                             		
   2201 FFFC15C0 2B7C 0000 0028 04A0         		move.l	#40,$4A0(a5)		; set source width
   2202 FFFC15C8 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2203 FFFC15D0 3B7C 0091 04AE              		move.w	#$91,$4AE(a5)		; set op A|C	($11 = copy A)
   2204 FFFC15D6 3B7C 80A2 04AC              		move.w	#%1000000010100010,$4AC(a5)		; enable channel A,C,D, start transfer
   2205 FFFC15DC                             .0002:								
   2206 FFFC15DC 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2207 FFFC15E0 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2208 FFFC15E4 67F6                        		beq.s	.0002				; branch if not done
   2209 FFFC15E6 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Generic I2C routines
                                             ;===============================================================================
                                             
                                             I2C_PREL	EQU		$0
                                             I2C_PREH	EQU		$2
                                             I2C_CTRL	EQU		$4
                                             I2C_RXR		EQU		$6
                                             I2C_TXR		EQU		$6
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 38
bootrom.asm
                                             I2C_CMD		EQU		$8
                                             I2C_STAT	EQU		$A
                                             
                                             ; i2c
   2224 FFFC15E8                             i2c_setup:
   2225 FFFC15E8 4DF9 FFDC 0E00              		lea		I2C,a6				
   2226 FFFC15EE 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2227 FFFC15F2 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2228 FFFC15F8 4DF9 FFDC 0E10              		lea		I2C2,a6				
   2229 FFFC15FE 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2230 FFFC1602 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2231 FFFC1608 4E75                        		rts
                                             
                                             ; Wait for I2C transfer to complete
                                             ;
                                             ; Parameters
                                             ; 	a6 - I2C controller base address
                                             
   2238 FFFC160A                             i2c_wait_tip:
   2239 FFFC160A 3F00                        		move.w	d0,-(a7)
   2240 FFFC160C                             .0001:					
   2241 FFFC160C 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for tip to clear
   2242 FFFC1610 0800 0001                   		btst	#1,d0
   2243 FFFC1614 66F6                        		bne.s	.0001
   2244 FFFC1616 301F                        		move.w	(a7)+,d0
   2245 FFFC1618 4E75                        		rts
                                             
                                             ; Parameters
                                             ;	d0.w - data to transmit
                                             ;	d1.w - command value
                                             ;	a6	 - I2C controller base address
                                             ;
   2252 FFFC161A                             i2c_wr_cmd:
   2253 FFFC161A 3D40 0006                   		move.w	d0,I2C_TXR(a6)
   2254 FFFC161E 3D41 0008                   		move.w	d1,I2C_CMD(a6)
   2255 FFFC1622 6100 FFE6                   		bsr		i2c_wait_tip
   2256 FFFC1626 302E 000A                   		move.w	I2C_STAT(a6),d0
   2257 FFFC162A 4E75                        		rts
                                             
   2259 FFFC162C                             i2c_xmit1:
   2260 FFFC162C 3F00                        		move.w	d0,-(a7)
   2261 FFFC162E 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2262 FFFC1634 7076                        		moveq	#$76,d0				; set slave address = %0111011
   2263 FFFC1636 323C 0090                   		move.w	#$90,d1				; set STA, WR
   2264 FFFC163A 6100 FFDE                   		bsr		i2c_wr_cmd
   2265 FFFC163E 6100 0010                   		bsr		i2c_wait_rx_nack
   2266 FFFC1642 301F                        		move.w	(a7)+,d0
   2267 FFFC1644 323C 0050                   		move.w	#$50,d1				; set STO, WR
   2268 FFFC1648 6100 FFD0                   		bsr		i2c_wr_cmd
   2269 FFFC164C 6100 0002                   		bsr		i2c_wait_rx_nack
                                             
   2271 FFFC1650                             i2c_wait_rx_nack:
   2272 FFFC1650 3F00                        		move.w	d0,-(a7)
   2273 FFFC1652                             .0001:							
   2274 FFFC1652 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for RXack = 0
   2275 FFFC1656 0800 0007                   		btst	#7,d0
   2276 FFFC165A 66F6                        		bne.s	.0001
   2277 FFFC165C 301F                        		move.w	(a7)+,d0
   2278 FFFC165E 4E75                        		rts
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 39
bootrom.asm
                                             ;===============================================================================
                                             ; Audio
                                             ;===============================================================================
                                             
   2284 FFFC1660                             AudioInputTest:
   2285 FFFC1660 4BF9 FFE0 0000              		lea		VDGREG,a5
   2286 FFFC1666 2B7C 0005 8000 0640         		move.l	#$58000,$640(a5)	; set buffer address ($FF8B0000)
   2287 FFFC166E 3B7C 4000 0644              		move.w	#$4000,$644(a5)		; set buffer length
   2288 FFFC1674 3B7C 0716 0646              		move.w	#1814,$646(a5)		; set period = 22.05kHz
   2289 FFFC167A 3B7C 1090 0584              		move.w	#$1090,$584(a5)		; enable input channel, plot mode
   2290 FFFC1680 3B7C 0090 0584              		move.w	#$0090,$584(a5)		; turn off reset
                                             		; should have input now
                                             
                                             		; puts a dark blue rectangle on screen
   2294 FFFC1686                             .0003:								
   2295 FFFC1686 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2296 FFFC168A 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2297 FFFC168E 67F6                        		beq.s	.0003				; branch if not done
   2298 FFFC1690 2B7C 0001 0000 04BC         		move.l	#256*256,$4BC(a5)		; set transfer count pixels
   2299 FFFC1698 3B7C 000F 04A8              		move.w	#DARK_BLUE,$4A8(a5)		; set color 
   2300 FFFC169E 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2301 FFFC16A6 2B7C 0000 0100 04A4         		move.l	#256,$4A4(a5)		; set destination width
   2302 FFFC16AE 2B7C 0000 0040 049C         		move.l	#64,$49C(a5)		; set dst modulo
   2303 FFFC16B6 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; delay a bit
   2306 FFFC16BC 203C 0003 D090              		move.l	#250000,d0
   2307 FFFC16C2                             .0004:
   2308 FFFC16C2 5380                        		sub.l	#1,d0
   2309 FFFC16C4 66FC                        		bne.s	.0004
   2310 FFFC16C6 60BE                        		bra.s	.0003
                                             		
                                             
   2313 FFFC16C8                             audio_pll_config:
   2314 FFFC16C8 7000                        		moveq	#0,d0
   2315 FFFC16CA 720E                        		moveq	#$0E,d1
   2316 FFFC16CC 6100 001C                   		bsr		audio_write_reg
   2317 FFFC16D0 7002                        		moveq	#2,d0
   2318 FFFC16D2 41F9 FFFC 1744              		lea		audio_tbl1,a0
   2319 FFFC16D8 6100 0076                   		bsr		audio_write_reg6
   2320 FFFC16DC 4E75                        		rts
                                             
   2322 FFFC16DE                             audio_startup_config:
   2323 FFFC16DE 4E75                        		rts
                                             
   2325 FFFC16E0                             audio_init:
   2326 FFFC16E0 6100 FFE6                   		bsr		audio_pll_config
   2327 FFFC16E4 6100 FFF8                   		bsr		audio_startup_config
   2328 FFFC16E8 4E75                        		rts
                                             
                                             ; d0.w = register number
                                             ; d1.w = data to write
                                             		
   2333 FFFC16EA                             audio_write_reg:
   2334 FFFC16EA 4DF9 FFDC 0E00              		lea		I2C,a6				
   2335 FFFC16F0 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2336 FFFC16F6 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2337 FFFC16FC 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2338 FFFC1702 6100 FF06                   		bsr		i2c_wait_tip	; wait for tip to clear
   2339 FFFC1706 6100 FF48                   		bsr		i2c_wait_rx_nack
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 40
bootrom.asm
   2340 FFFC170A 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2341 FFFC1710 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2342 FFFC1716 6100 FEF2                   		bsr		i2c_wait_tip	; wait for tip to clear
   2343 FFFC171A 6100 FF34                   		bsr		i2c_wait_rx_nack
   2344 FFFC171E 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2345 FFFC1722 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2346 FFFC1728 6100 FEE0                   		bsr		i2c_wait_tip	; wait for tip to clear
   2347 FFFC172C 6100 FF22                   		bsr		i2c_wait_rx_nack
   2348 FFFC1730 3D41 0006                   		move.w	d1,I2C_TXR(a6)		; send data
   2349 FFFC1734 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set STO, WR
   2350 FFFC173A 6100 FECE                   		bsr		i2c_wait_tip	; wait for tip to clear
   2351 FFFC173E 6100 FF10                   		bsr		i2c_wait_rx_nack
   2352 FFFC1742 4E75                        		rts
                                             
   2354 FFFC1744                             audio_tbl1:
   2355 FFFC1744 0000 007D 0000 000C         		dc.w	$00,$7D,$00,$0C,$20,$01
   2356 FFFC174C 0020 0001                   
                                             ; a0
                                             ;
   2359 FFFC1750                             audio_write_reg6:
   2360 FFFC1750 41F9 FFFC 1744              		lea		audio_tbl1,a0
   2361 FFFC1756 4DF9 FFDC 0E00              		lea		I2C,a6				
   2362 FFFC175C 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2363 FFFC1762 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2364 FFFC1768 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2365 FFFC176E 6100 FE9A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2366 FFFC1772 6100 FEDC                   		bsr		i2c_wait_rx_nack
   2367 FFFC1776 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2368 FFFC177C 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2369 FFFC1782 6100 FE86                   		bsr		i2c_wait_tip	; wait for tip to clear
   2370 FFFC1786 6100 FEC8                   		bsr		i2c_wait_rx_nack
                                             
   2372 FFFC178A 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2373 FFFC178E 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2374 FFFC1794 6100 FE74                   		bsr		i2c_wait_tip	; wait for tip to clear
   2375 FFFC1798 6100 FEB6                   		bsr		i2c_wait_rx_nack
                                             		
   2377 FFFC179C 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #0
   2378 FFFC17A0 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2379 FFFC17A6 6100 FE62                   		bsr		i2c_wait_tip	; wait for tip to clear
   2380 FFFC17AA 6100 FEA4                   		bsr		i2c_wait_rx_nack
                                             
   2382 FFFC17AE 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #1
   2383 FFFC17B2 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2384 FFFC17B8 6100 FE50                   		bsr		i2c_wait_tip	; wait for tip to clear
   2385 FFFC17BC 6100 FE92                   		bsr		i2c_wait_rx_nack
                                             
   2387 FFFC17C0 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #2
   2388 FFFC17C4 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2389 FFFC17CA 6100 FE3E                   		bsr		i2c_wait_tip	; wait for tip to clear
   2390 FFFC17CE 6100 FE80                   		bsr		i2c_wait_rx_nack
                                             
   2392 FFFC17D2 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #3
   2393 FFFC17D6 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2394 FFFC17DC 6100 FE2C                   		bsr		i2c_wait_tip	; wait for tip to clear
   2395 FFFC17E0 6100 FE6E                   		bsr		i2c_wait_rx_nack
                                             
   2397 FFFC17E4 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #4
   2398 FFFC17E8 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2399 FFFC17EE 6100 FE1A                   		bsr		i2c_wait_tip	; wait for tip to clear
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 41
bootrom.asm
   2400 FFFC17F2 6100 FE5C                   		bsr		i2c_wait_rx_nack
                                             
   2402 FFFC17F6 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #5
   2403 FFFC17FA 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set WR, STO
   2404 FFFC1800 6100 FE08                   		bsr		i2c_wait_tip		; wait for tip to clear
   2405 FFFC1804 6100 FE4A                   		bsr		i2c_wait_rx_nack
   2406 FFFC1808 4E75                        		rts
                                             
   2408 FFFC180A                             set_hp_output:
   2409 FFFC180A 7021                        		moveq	#$21,d0				;
   2410 FFFC180C 7200                        		moveq	#0,d1
   2411 FFFC180E 6100 FEDA                   		bsr		audio_write_reg
   2412 FFFC1812 7020                        		moveq	#$20,d0				;
   2413 FFFC1814 6100 FED4                   		bsr		audio_write_reg
   2414 FFFC1818 7023                        		moveq	#$23,d0
   2415 FFFC181A 323C 00E7                   		move.w	#$E7,d1		
   2416 FFFC181E 6100 FECA                   		bsr		audio_write_reg
   2417 FFFC1822 7024                        		moveq	#$24,d0
   2418 FFFC1824 323C 00E7                   		move.w	#$E7,d1		
   2419 FFFC1828 6100 FEC0                   		bsr		audio_write_reg
   2420 FFFC182C 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Realtime clock routines
                                             ;===============================================================================
                                             
   2426 FFFC182E                             rtc_read:
   2427 FFFC182E 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2428 FFFC1834 4BF9 0001 0600              		lea		RTCBuf,a5
   2429 FFFC183A 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2430 FFFC1840 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2431 FFFC1844 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2432 FFFC1848 6100 FDD0                   		bsr		i2c_wr_cmd
   2433 FFFC184C 4A00                        		tst.b	d0
   2434 FFFC184E 6B72                        		bmi		.rxerr
   2435 FFFC1850 303C 0000                   		move.w	#$00,d0				; address zero
   2436 FFFC1854 323C 0010                   		move.w	#$10,d1				; wr bit
   2437 FFFC1858 6100 FDC0                   		bsr		i2c_wr_cmd
   2438 FFFC185C 4A00                        		tst.b	d0
   2439 FFFC185E 6B62                        		bmi		.rxerr
   2440 FFFC1860 303C 00DF                   		move.w	#$DF,d0				; read address, read op
   2441 FFFC1864 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2442 FFFC1868 6100 FDB0                   		bsr		i2c_wr_cmd
   2443 FFFC186C 4A00                        		tst.b	d0
   2444 FFFC186E 6B52                        		bmi		.rxerr
                                             		
   2446 FFFC1870 343C 0020                   		move.w	#$20,d2
   2447 FFFC1874                             .0001:
   2448 FFFC1874 3D7C 0020 0008              		move.w	#$20,I2C_CMD(a6)	; rd bit
   2449 FFFC187A 6100 FD8E                   		bsr		i2c_wait_tip
   2450 FFFC187E 6100 FDD0                   		bsr		i2c_wait_rx_nack
   2451 FFFC1882 302E 000A                   		move.w	I2C_STAT(a6),d0
   2452 FFFC1886 4A00                        		tst.b	d0
   2453 FFFC1888 6B38                        		bmi		.rxerr
   2454 FFFC188A 302E 0006                   		move.w	I2C_RXR(a6),d0
   2455 FFFC188E 1B80 2000                   		move.b	d0,(a5,d2.w)
   2456 FFFC1892 5242                        		add.w	#1,d2
   2457 FFFC1894 B47C 005F                   		cmp.w	#$5F,d2
   2458 FFFC1898 66DA                        		bne		.0001
   2459 FFFC189A 3D7C 0068 0008              		move.w	#$68,I2C_CMD(a6)	; STO, rd bit + nack
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 42
bootrom.asm
   2460 FFFC18A0 6100 FD68                   		bsr		i2c_wait_tip
   2461 FFFC18A4 6100 FDAA                   		bsr		i2c_wait_rx_nack
   2462 FFFC18A8 302E 000A                   		move.w	I2C_STAT(a6),d0
   2463 FFFC18AC 4A00                        		tst.b	d0
   2464 FFFC18AE 6B12                        		bmi		.rxerr
   2465 FFFC18B0 302E 0006                   		move.w	I2C_RXR(a6),d0
   2466 FFFC18B4 1B80 2000                   		move.b	d0,(a5,d2.w)
   2467 FFFC18B8 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2468 FFFC18BE 7000                        		moveq	#0,d0
   2469 FFFC18C0 4E75                        		rts
   2470 FFFC18C2                             .rxerr:
   2471 FFFC18C2 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2472 FFFC18C8 4E75                        		rts
                                             
   2474 FFFC18CA                             rtc_write:
   2475 FFFC18CA 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2476 FFFC18D0 4BF9 0001 0600              		lea		RTCBuf,a5
   2477 FFFC18D6 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2478 FFFC18DC 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2479 FFFC18E0 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2480 FFFC18E4 6100 FD34                   		bsr		i2c_wr_cmd
   2481 FFFC18E8 4A00                        		tst.b	d0
   2482 FFFC18EA 6B46                        		bmi		.rxerr
   2483 FFFC18EC 303C 0000                   		move.w	#$00,d0				; address zero
   2484 FFFC18F0 323C 0010                   		move.w	#$10,d1				; wr bit
   2485 FFFC18F4 6100 FD24                   		bsr		i2c_wr_cmd
   2486 FFFC18F8 4A00                        		tst.b	d0
   2487 FFFC18FA 6B36                        		bmi		.rxerr
   2488 FFFC18FC 343C 0020                   		move.w	#$20,d2
   2489 FFFC1900                             .0001:
   2490 FFFC1900 1035 2000                   		move.b	(a5,d2.w),d0
   2491 FFFC1904 323C 0010                   		move.w	#$10,d1
   2492 FFFC1908 6100 FD10                   		bsr		i2c_wr_cmd
   2493 FFFC190C 4A00                        		tst.b	d0
   2494 FFFC190E 6B22                        		bmi		.rxerr
   2495 FFFC1910 5242                        		add.w	#1,d2
   2496 FFFC1912 B47C 005F                   		cmp.w	#$5F,d2
   2497 FFFC1916 66E8                        		bne.s	.0001
   2498 FFFC1918 1035 2000                   		move.b	(a5,d2.w),d0
   2499 FFFC191C 323C 0050                   		move.w	#$50,d1				; STO, wr bit
   2500 FFFC1920 6100 FCF8                   		bsr		i2c_wr_cmd
   2501 FFFC1924 4A00                        		tst.b	d0
   2502 FFFC1926 6B0A                        		bmi		.rxerr
   2503 FFFC1928 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2504 FFFC192E 7000                        		moveq	#0,d0
   2505 FFFC1930 4E75                        		rts
   2506 FFFC1932                             .rxerr:
   2507 FFFC1932 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2508 FFFC1938 4E75                        		rts
                                             
   2510 FFFC193A                             msgRtcReadFail:
   2511 FFFC193A 52 54 43 20 72 65 61 64     		dc.b	"RTC read/write failed.",$0D,$0A,$00
   2512 FFFC1942 2F 77 72 69 74 65 20 66     
   2513 FFFC194A 61 69 6C 65 64 2E 0D 0A     
   2514 FFFC1952 00                          
                                             
                                             
                                             ;===============================================================================
                                             ; ORGFX routines
                                             ;===============================================================================
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 43
bootrom.asm
                                             
   2521 FFFC1953 FF                          		align	2
   2522 FFFC1954                             gfx_wait:
   2523 FFFC1954 48E7 8004                   		movem.l	d0/a5,-(a7)
   2524 FFFC1958 4BF9 FFE0 0000              		lea		VDGREG,a5
   2525 FFFC195E 2B7C 0000 0004 0700         		move.l	#GFX_STATUS,$700(a5)	; address status register
   2526 FFFC1966                             .0001:
   2527 FFFC1966 3B7C 00F3 0708              		move.w	#$F3,$708(a5)		; set control (generate bus access to gfx)
   2528 FFFC196C 202D 0704                   		move.l	$704(a5),d0			; get status value
   2529 FFFC1970 0800 0000                   		btst	#0,d0				; test bit 0
   2530 FFFC1974 66F0                        		bne.s	.0001
   2531 FFFC1976 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2532 FFFC197A 4E75                        		rts
                                             
   2534 FFFC197C                             gfx_set_320x256:
   2535 FFFC197C 6100 FFD6                   		bsr		gfx_wait
   2536 FFFC1980 4BF9 FFE0 0000              		lea		VDGREG,a5
   2537 FFFC1986 2B7C 0000 0014 0700         		move.l	#GFX_TARGET_SIZE_X,$700(a5)	; address register
   2538 FFFC198E 2B7C 0000 0140 0704         		move.l	#320,$704(a5)				; set data
   2539 FFFC1996 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2540 FFFC199C 2B7C 0000 0018 0700         		move.l	#GFX_TARGET_SIZE_Y,$700(a5)	; address register
   2541 FFFC19A4 2B7C 0000 0100 0704         		move.l	#256,$704(a5)				; set data
   2542 FFFC19AC 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2543 FFFC19B2 4E75                        		rts
                                             
   2545 FFFC19B4                             gfx_init:
   2546 FFFC19B4 6100 FF9E                   		bsr		gfx_wait
   2547 FFFC19B8 4BF9 FFE0 0000              		lea		VDGREG,a5
   2548 FFFC19BE 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2549 FFFC19C6 23FC 0000 0000 0001 042C    		move.l	#0,gfx_control_reg_mem
                                             
   2551 FFFC19D0 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2552 FFFC19D8 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2553 FFFC19DE 2B7C 0000 0010 0700         		move.l	#GFX_TARGET_BASE,$700(a5)	; address register
   2554 FFFC19E6 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2555 FFFC19EC 4E75                        		rts
                                             
   2557 FFFC19EE                             gfx_set_color_depth:
   2558 FFFC19EE 4BF9 FFE0 0000              		lea		VDGREG,a5
   2559 FFFC19F4 02B9 FFFF FFFD 0001 042C    		and.l	#-3,gfx_control_reg_mem		; mask off 2 LSB (color depth field)
                                             
   2561 FFFC19FE 00B9 0000 0001 0001 042C    		or.l	#1,gfx_control_reg_mem		; select 16 bpp
                                             
   2563 FFFC1A08 6100 FF4A                   		bsr		gfx_wait
   2564 FFFC1A0C 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2565 FFFC1A14 2B79 0001 042C 0704         		move.l	gfx_control_reg_mem,$704(a5)
   2566 FFFC1A1C 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2567 FFFC1A22 4E75                        		rts
                                             
   2569 FFFC1A24                             gfx_set_color:
   2570 FFFC1A24 6100 FF2E                   		bsr		gfx_wait
   2571 FFFC1A28 4BF9 FFE0 0000              		lea		VDGREG,a5
   2572 FFFC1A2E 2B7C 0000 0084 0700         		move.l	#GFX_COLOR0,$700(a5)
   2573 FFFC1A36 2B40 0704                   		move.l	d0,$704(a5)
   2574 FFFC1A3A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2575 FFFC1A40 4E75                        		rts
                                             
   2577 FFFC1A42                             gfx_line:
   2578 FFFC1A42 6100 FF10                   		bsr		gfx_wait
   2579 FFFC1A46 4BF9 FFE0 0000              		lea		VDGREG,a5
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 44
bootrom.asm
   2580 FFFC1A4C 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2581 FFFC1A54 2B40 0704                   		move.l	d0,$704(a5)
   2582 FFFC1A58 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2583 FFFC1A5E 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2584 FFFC1A66 2B41 0704                   		move.l	d1,$704(a5)
   2585 FFFC1A6A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2586 FFFC1A70 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2587 FFFC1A78 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2588 FFFC1A80 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2589 FFFC1A86 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2590 FFFC1A8C 0086 0000 0000              		or.l	#GFX_ACTIVE_POINT0,d6
   2591 FFFC1A92 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2592 FFFC1A94 2B46 0704                   		move.l	d6,$704(a5)
   2593 FFFC1A98 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2594 FFFC1A9E 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2595 FFFC1AA6 2B42 0704                   		move.l	d2,$704(a5)
   2596 FFFC1AAA 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2597 FFFC1AB0 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2598 FFFC1AB8 2B43 0704                   		move.l	d3,$704(a5)
   2599 FFFC1ABC 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2600 FFFC1AC2 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2601 FFFC1ACA 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2602 FFFC1AD2 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2603 FFFC1AD8 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2604 FFFC1ADE 0086 0001 0000              		or.l	#GFX_ACTIVE_POINT1,d6
   2605 FFFC1AE4 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2606 FFFC1AE6 2B46 0704                   		move.l	d6,$704(a5)
   2607 FFFC1AEA 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2608 FFFC1AF0 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2609 FFFC1AF6 0086 0000 0200              		or.l	#GFX_LINE,d6
   2610 FFFC1AFC 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2611 FFFC1AFE 2B46 0704                   		move.l	d6,$704(a5)
   2612 FFFC1B02 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2613 FFFC1B08 4E75                        		rts
                                             
   2615 FFFC1B0A                             gfx_demo:
   2616 FFFC1B0A 6100 FEA8                   		bsr		gfx_init
   2617 FFFC1B0E 6100 FE6C                   		bsr		gfx_set_320x256
   2618 FFFC1B12                             .0001:
   2619 FFFC1B12 4DF9 FFDC 0000              		lea		$FFDC0000,a6	; set I/O base
   2620 FFFC1B18 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2621 FFFC1B1C 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2622 FFFC1B1E 4840                        		swap	d0				; and bits 16 to 24 for x0
   2623 FFFC1B20 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2624 FFFC1B24 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2625 FFFC1B28 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2626 FFFC1B2C 242E 0C00                   		move.l	$0C00(a6),d2
   2627 FFFC1B30 3602                        		move.w	d2,d3
   2628 FFFC1B32 4842                        		swap	d2
   2629 FFFC1B34 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2630 FFFC1B38 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2631 FFFC1B3C 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2632 FFFC1B40 282E 0C00                   		move.l	$0C00(a6),d4
   2633 FFFC1B44 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2634 FFFC1B48 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2635 FFFC1B4C 2C00                        		move.l	d0,d6
   2636 FFFC1B4E 2004                        		move.l	d4,d0
   2637 FFFC1B50 6100 FED2                   		bsr		gfx_set_color
   2638 FFFC1B54 2006                        		move.l	d6,d0
   2639 FFFC1B56 6100 FEEA                   		bsr		gfx_line
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 45
bootrom.asm
   2640 FFFC1B5A 60B6                        		bra		.0001
                                             
                                             		
                                             ; Randomize the screen	
                                             ;		move.l	#VDGBUF,A0
                                             ;		move.l	#%011011111,D0		; light blue
                                             ;		move.l	#640*512,D1
                                             ;clrscr_loop1:
                                             ;		move.l	$0C00(a6),d0			; get a random number
                                             ;		clr.w	$0C04(a6)				; generate next number
                                             ;		move.w	d0,(a0)+				; store it to the screen
                                             ;		sub.l	#1,d1
                                             ;		bne		clrscr_loop1
                                             
   2654 FFFC1B5C                             msg_start:
   2655 FFFC1B5C 4E 34 56 20 36 38 6B 20     	dc.b	"N4V 68k System Starting",0
   2656 FFFC1B64 53 79 73 74 65 6D 20 53     
   2657 FFFC1B6C 74 61 72 74 69 6E 67 00     
                                             
                                             
                                             ;===============================================================================
                                             ; MMU
                                             ;===============================================================================
                                             		align	2
   2664 FFFC1B74                             mmu_init:
   2665 FFFC1B74 33FC 1010 FFDC 0600         		move.w	#$1010,leds
   2666 FFFC1B7C 223C 0002 0000              		move.l	#131072,d1					; count of addresses to set map
   2667 FFFC1B82 207C 1FF4 0000              		movea.l	#$1FF40000,a0				; base of page tables
   2668 FFFC1B88 7007                        		moveq	#7,d0						; start at page zero, read,write,execute
   2669 FFFC1B8A                             .0001:
   2670 FFFC1B8A 20C0                        		move.l	d0,(a0)+					; update page table entry
   2671 FFFC1B8C 0680 0000 1000              		add.l	#$1000,d0
   2672 FFFC1B92 5381                        		sub.l	#1,d1
   2673 FFFC1B94 66F4                        		bne.s	.0001
                                             	
                                             		; Setup the page directory
                                             		; There are only 128 entries to be set, but all entries must be
                                             		; setup because there's no page faulting on not present. All the
                                             		; entries must point to present pages. So the part of the address
                                             		; space that isn't present is setup to point to a dummy page
                                             		; table.
                                             
   2682 FFFC1B96 33FC 1111 FFDC 0600         		move.w	#$1111,leds
   2683 FFFC1B9E 323C 0400                   		move.w	#1024,d1			; 1024 entries to setup
   2684 FFFC1BA2 207C 1FFF E000              		move.l	#$1FFFE000,a0		; page table for not present entries
   2685 FFFC1BA8 203C 1FFF D006              		move.l	#$1FFFD006,d0		; point all entries for not present pages to $1FFFD000
   2686 FFFC1BAE                             .0003:
   2687 FFFC1BAE 20C0                        		move.l	d0,(a0)+
   2688 FFFC1BB0 51C9 FFFC                   		dbra	d1,.0003
                                             
   2690 FFFC1BB4 33FC 1212 FFDC 0600         		move.w	#$1212,leds
   2691 FFFC1BBC 747F                        		move.l	#127,d2
   2692 FFFC1BBE 207C 1FFF F000              		movea.l	#$1FFFF000,a0		; a0 = page directory address
   2693 FFFC1BC4 223C 1FFF E000              		move.l	#$1FFFE000,d1		; point to not present page table
   2694 FFFC1BCA 203C 1FF4 0007              		move.l	#$1FF40007,d0
   2695 FFFC1BD0                             .0002:
   2696 FFFC1BD0 2141 0200                   		move.l	d1,$0200(a0)		; 7/8 of memory isn't available
   2697 FFFC1BD4 2141 0400                   		move.l	d1,$0400(a0)
   2698 FFFC1BD8 2141 0600                   		move.l	d1,$0600(a0)
   2699 FFFC1BDC 2141 0800                   		move.l	d1,$0800(a0)
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 46
bootrom.asm
   2700 FFFC1BE0 2141 0A00                   		move.l	d1,$0A00(a0)
   2701 FFFC1BE4 2141 0C00                   		move.l	d1,$0C00(a0)
   2702 FFFC1BE8 2141 0E00                   		move.l	d1,$0E00(a0)
   2703 FFFC1BEC 20C0                        		move.l	d0,(a0)+
   2704 FFFC1BEE 0680 0000 1000              		add.l	#$1000,d0
   2705 FFFC1BF4 51CA FFDA                   		dbra	d2,.0002
   2706 FFFC1BF8 33FC 1919 FFDC 0600         		move.w	#$1919,leds
   2707 FFFC1C00 33FC 0000 FFFF FFF6         		move.w	#$00,$FFFFFFF6				; set asid
   2708 FFFC1C08 23F9 1FFF F000 FFFF FFF0    		move.l	$1FFFF000,$FFFFFFF0			; set page directory address, enable
                                             
   2710 FFFC1C12 4E75                        		rts
                                             		
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2717 FFFC1C14                             font8:
   2718 FFFC1C14 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $00
                                             
   2720 FFFC1C1C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2722 FFFC1C24 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2724 FFFC1C2C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2726 FFFC1C34 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $04
                                             
   2728 FFFC1C3C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2730 FFFC1C44 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2732 FFFC1C4C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2734 FFFC1C54 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $08
                                             
   2736 FFFC1C5C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2738 FFFC1C64 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2740 FFFC1C6C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2742 FFFC1C74 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $0C
                                             
   2744 FFFC1C7C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2746 FFFC1C84 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2748 FFFC1C8C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2750 FFFC1C94 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $10
                                             
   2752 FFFC1C9C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2754 FFFC1CA4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2756 FFFC1CAC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2758 FFFC1CB4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $14
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 47
bootrom.asm
   2760 FFFC1CBC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2762 FFFC1CC4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2764 FFFC1CCC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2766 FFFC1CD4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $18
                                             
   2768 FFFC1CDC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2770 FFFC1CE4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2772 FFFC1CEC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2774 FFFC1CF4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $1C
                                             
   2776 FFFC1CFC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2778 FFFC1D04 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2780 FFFC1D0C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2782 FFFC1D14 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; SPACE
                                             
   2784 FFFC1D1C 18 18 18 18 18 00 18 00     	dc.b	$18,$18,$18,$18,$18,$00,$18,$00	; !
                                             
   2786 FFFC1D24 6C 6C 00 00 00 00 00 00     	dc.b	$6C,$6C,$00,$00,$00,$00,$00,$00	; "
                                             
   2788 FFFC1D2C 6C 6C FE 6C FE 6C 6C 00     	dc.b	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00	; #
                                             
   2790 FFFC1D34 18 3E 60 3C 06 7C 18 00     	dc.b	$18,$3E,$60,$3C,$06,$7C,$18,$00	; $
                                             
   2792 FFFC1D3C 00 66 AC D8 36 6A CC 00     	dc.b	$00,$66,$AC,$D8,$36,$6A,$CC,$00	; %
                                             
   2794 FFFC1D44 38 6C 68 76 DC CE 7B 00     	dc.b	$38,$6C,$68,$76,$DC,$CE,$7B,$00	; &
                                             
   2796 FFFC1D4C 18 18 30 00 00 00 00 00     	dc.b	$18,$18,$30,$00,$00,$00,$00,$00	; '
                                             
   2798 FFFC1D54 0C 18 30 30 30 18 0C 00     	dc.b	$0C,$18,$30,$30,$30,$18,$0C,$00	; (
                                             
   2800 FFFC1D5C 30 18 0C 0C 0C 18 30 00     	dc.b	$30,$18,$0C,$0C,$0C,$18,$30,$00	; )
                                             
   2802 FFFC1D64 00 66 3C FF 3C 66 00 00     	dc.b	$00,$66,$3C,$FF,$3C,$66,$00,$00	; *
                                             
   2804 FFFC1D6C 00 18 18 7E 18 18 00 00     	dc.b	$00,$18,$18,$7E,$18,$18,$00,$00	; +
                                             
   2806 FFFC1D74 00 00 00 00 00 18 18 30     	dc.b	$00,$00,$00,$00,$00,$18,$18,$30	; ,
                                             
   2808 FFFC1D7C 00 00 00 7E 00 00 00 00     	dc.b	$00,$00,$00,$7E,$00,$00,$00,$00	; -
                                             
   2810 FFFC1D84 00 00 00 00 00 18 18 00     	dc.b	$00,$00,$00,$00,$00,$18,$18,$00	; .
                                             
   2812 FFFC1D8C 03 06 0C 18 30 60 C0 00     	dc.b	$03,$06,$0C,$18,$30,$60,$C0,$00	; /
                                             
   2814 FFFC1D94 3C 66 6E 7E 76 66 3C 00     	dc.b	$3C,$66,$6E,$7E,$76,$66,$3C,$00	; 0
                                             
   2816 FFFC1D9C 18 38 78 18 18 18 18 00     	dc.b	$18,$38,$78,$18,$18,$18,$18,$00	; 1
                                             
   2818 FFFC1DA4 3C 66 06 0C 18 30 7E 00     	dc.b	$3C,$66,$06,$0C,$18,$30,$7E,$00	; 2
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 48
bootrom.asm
   2820 FFFC1DAC 3C 66 06 1C 06 66 3C 00     	dc.b	$3C,$66,$06,$1C,$06,$66,$3C,$00	; 3
                                             
   2822 FFFC1DB4 1C 3C 6C CC FE 0C 0C 00     	dc.b	$1C,$3C,$6C,$CC,$FE,$0C,$0C,$00	; 4
                                             
   2824 FFFC1DBC 7E 60 7C 06 06 66 3C 00     	dc.b	$7E,$60,$7C,$06,$06,$66,$3C,$00	; 5
                                             
   2826 FFFC1DC4 1C 30 60 7C 66 66 3C 00     	dc.b	$1C,$30,$60,$7C,$66,$66,$3C,$00	; 6
                                             
   2828 FFFC1DCC 7E 06 06 0C 18 18 18 00     	dc.b	$7E,$06,$06,$0C,$18,$18,$18,$00	; 7
                                             
   2830 FFFC1DD4 3C 66 66 3C 66 66 3C 00     	dc.b	$3C,$66,$66,$3C,$66,$66,$3C,$00	; 8
                                             
   2832 FFFC1DDC 3C 66 66 3E 06 0C 38 00     	dc.b	$3C,$66,$66,$3E,$06,$0C,$38,$00	; 9
                                             
   2834 FFFC1DE4 00 18 18 00 00 18 18 00     	dc.b	$00,$18,$18,$00,$00,$18,$18,$00	; :
                                             
   2836 FFFC1DEC 00 18 18 00 00 18 18 30     	dc.b	$00,$18,$18,$00,$00,$18,$18,$30	; ;
                                             
   2838 FFFC1DF4 00 06 18 60 18 06 00 00     	dc.b	$00,$06,$18,$60,$18,$06,$00,$00	; <
                                             
   2840 FFFC1DFC 00 00 7E 00 7E 00 00 00     	dc.b	$00,$00,$7E,$00,$7E,$00,$00,$00	; =
                                             
   2842 FFFC1E04 00 60 18 06 18 60 00 00     	dc.b	$00,$60,$18,$06,$18,$60,$00,$00	; >
                                             
   2844 FFFC1E0C 3C 66 06 0C 18 00 18 00     	dc.b	$3C,$66,$06,$0C,$18,$00,$18,$00	; ?
                                             
   2846 FFFC1E14 7C C6 DE D6 DE C0 78 00     	dc.b	$7C,$C6,$DE,$D6,$DE,$C0,$78,$00	; @
                                             
   2848 FFFC1E1C 3C 66 66 7E 66 66 66 00     	dc.b	$3C,$66,$66,$7E,$66,$66,$66,$00	; A
                                             
   2850 FFFC1E24 7C 66 66 7C 66 66 7C 00     	dc.b	$7C,$66,$66,$7C,$66,$66,$7C,$00	; B
                                             
   2852 FFFC1E2C 1E 30 60 60 60 30 1E 00     	dc.b	$1E,$30,$60,$60,$60,$30,$1E,$00	; C
                                             
   2854 FFFC1E34 78 6C 66 66 66 6C 78 00     	dc.b	$78,$6C,$66,$66,$66,$6C,$78,$00	; D
                                             
   2856 FFFC1E3C 7E 60 60 78 60 60 7E 00     	dc.b	$7E,$60,$60,$78,$60,$60,$7E,$00	; E
                                             
   2858 FFFC1E44 7E 60 60 78 60 60 60 00     	dc.b	$7E,$60,$60,$78,$60,$60,$60,$00	; F
                                             
   2860 FFFC1E4C 3C 66 60 6E 66 66 3E 00     	dc.b	$3C,$66,$60,$6E,$66,$66,$3E,$00	; G
                                             
   2862 FFFC1E54 66 66 66 7E 66 66 66 00     	dc.b	$66,$66,$66,$7E,$66,$66,$66,$00	; H
                                             
   2864 FFFC1E5C 3C 18 18 18 18 18 3C 00     	dc.b	$3C,$18,$18,$18,$18,$18,$3C,$00	; I
                                             
   2866 FFFC1E64 06 06 06 06 06 66 3C 00     	dc.b	$06,$06,$06,$06,$06,$66,$3C,$00	; J
                                             
   2868 FFFC1E6C C6 CC D8 F0 D8 CC C6 00     	dc.b	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00	; K
                                             
   2870 FFFC1E74 60 60 60 60 60 60 7E 00     	dc.b	$60,$60,$60,$60,$60,$60,$7E,$00	; L
                                             
   2872 FFFC1E7C C6 EE FE D6 C6 C6 C6 00     	dc.b	$C6,$EE,$FE,$D6,$C6,$C6,$C6,$00	; M
                                             
   2874 FFFC1E84 C6 E6 F6 DE CE C6 C6 00     	dc.b	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00	; N
                                             
   2876 FFFC1E8C 3C 66 66 66 66 66 3C 00     	dc.b	$3C,$66,$66,$66,$66,$66,$3C,$00	; O
                                             
   2878 FFFC1E94 7C 66 66 7C 60 60 60 00     	dc.b	$7C,$66,$66,$7C,$60,$60,$60,$00	; P
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 49
bootrom.asm
   2880 FFFC1E9C 78 CC CC CC CC DC 7E 00     	dc.b	$78,$CC,$CC,$CC,$CC,$DC,$7E,$00	; Q
                                             
   2882 FFFC1EA4 7C 66 66 7C 6C 66 66 00     	dc.b	$7C,$66,$66,$7C,$6C,$66,$66,$00	; R
                                             
   2884 FFFC1EAC 3C 66 70 3C 0E 66 3C 00     	dc.b	$3C,$66,$70,$3C,$0E,$66,$3C,$00	; S
                                             
   2886 FFFC1EB4 7E 18 18 18 18 18 18 00     	dc.b	$7E,$18,$18,$18,$18,$18,$18,$00	; T
                                             
   2888 FFFC1EBC 66 66 66 66 66 66 3C 00     	dc.b	$66,$66,$66,$66,$66,$66,$3C,$00	; U
                                             
   2890 FFFC1EC4 66 66 66 66 3C 3C 18 00     	dc.b	$66,$66,$66,$66,$3C,$3C,$18,$00	; V
                                             
   2892 FFFC1ECC C6 C6 C6 D6 FE EE C6 00     	dc.b	$C6,$C6,$C6,$D6,$FE,$EE,$C6,$00	; W
                                             
   2894 FFFC1ED4 C3 66 3C 18 3C 66 C3 00     	dc.b	$C3,$66,$3C,$18,$3C,$66,$C3,$00	; X
                                             
   2896 FFFC1EDC C3 66 3C 18 18 18 18 00     	dc.b	$C3,$66,$3C,$18,$18,$18,$18,$00	; Y
                                             
   2898 FFFC1EE4 FE 0C 18 30 60 C0 FE 00     	dc.b	$FE,$0C,$18,$30,$60,$C0,$FE,$00	; Z
                                             
   2900 FFFC1EEC 3C 30 30 30 30 30 3C 00     	dc.b	$3C,$30,$30,$30,$30,$30,$3C,$00	; [
                                             
   2902 FFFC1EF4 C0 60 30 18 0C 06 03 00     	dc.b	$C0,$60,$30,$18,$0C,$06,$03,$00	; \
                                             
   2904 FFFC1EFC 3C 0C 0C 0C 0C 0C 3C 00     	dc.b	$3C,$0C,$0C,$0C,$0C,$0C,$3C,$00	; ]
                                             
   2906 FFFC1F04 10 38 6C C6 00 00 00 00     	dc.b	$10,$38,$6C,$C6,$00,$00,$00,$00	; ^
                                             
   2908 FFFC1F0C 00 00 00 00 00 00 00 FE     	dc.b	$00,$00,$00,$00,$00,$00,$00,$FE	; _
                                             
   2910 FFFC1F14 18 18 0C 00 00 00 00 00     	dc.b	$18,$18,$0C,$00,$00,$00,$00,$00	; `
                                             
   2912 FFFC1F1C 00 00 3C 06 3E 66 3E 00     	dc.b	$00,$00,$3C,$06,$3E,$66,$3E,$00	; a
                                             
   2914 FFFC1F24 60 60 7C 66 66 66 7C 00     	dc.b	$60,$60,$7C,$66,$66,$66,$7C,$00	; b
                                             
   2916 FFFC1F2C 00 00 3C 60 60 60 3C 00     	dc.b	$00,$00,$3C,$60,$60,$60,$3C,$00	; c
                                             
   2918 FFFC1F34 06 06 3E 66 66 66 3E 00     	dc.b	$06,$06,$3E,$66,$66,$66,$3E,$00	; d
                                             
   2920 FFFC1F3C 00 00 3C 66 7E 60 3C 00     	dc.b	$00,$00,$3C,$66,$7E,$60,$3C,$00	; e
                                             
   2922 FFFC1F44 1C 30 7C 30 30 30 30 00     	dc.b	$1C,$30,$7C,$30,$30,$30,$30,$00	; f
                                             
   2924 FFFC1F4C 00 00 3E 66 66 3E 06 3C     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$3C	; g
                                             
   2926 FFFC1F54 60 60 7C 66 66 66 66 00     	dc.b	$60,$60,$7C,$66,$66,$66,$66,$00	; h
                                             
   2928 FFFC1F5C 18 00 18 18 18 18 0C 00     	dc.b	$18,$00,$18,$18,$18,$18,$0C,$00	; i
                                             
   2930 FFFC1F64 0C 00 0C 0C 0C 0C 0C 78     	dc.b	$0C,$00,$0C,$0C,$0C,$0C,$0C,$78	; j
                                             
   2932 FFFC1F6C 60 60 66 6C 78 6C 66 00     	dc.b	$60,$60,$66,$6C,$78,$6C,$66,$00	; k
                                             
   2934 FFFC1F74 18 18 18 18 18 18 0C 00     	dc.b	$18,$18,$18,$18,$18,$18,$0C,$00	; l
                                             
   2936 FFFC1F7C 00 00 EC FE D6 C6 C6 00     	dc.b	$00,$00,$EC,$FE,$D6,$C6,$C6,$00	; m
                                             
   2938 FFFC1F84 00 00 7C 66 66 66 66 00     	dc.b	$00,$00,$7C,$66,$66,$66,$66,$00	; n
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 50
bootrom.asm
   2940 FFFC1F8C 00 00 3C 66 66 66 3C 00     	dc.b	$00,$00,$3C,$66,$66,$66,$3C,$00	; o
                                             
   2942 FFFC1F94 00 00 7C 66 66 7C 60 60     	dc.b	$00,$00,$7C,$66,$66,$7C,$60,$60	; p
                                             
   2944 FFFC1F9C 00 00 3E 66 66 3E 06 06     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$06	; q
                                             
   2946 FFFC1FA4 00 00 7C 66 60 60 60 00     	dc.b	$00,$00,$7C,$66,$60,$60,$60,$00	; r
                                             
   2948 FFFC1FAC 00 00 3C 60 3C 06 7C 00     	dc.b	$00,$00,$3C,$60,$3C,$06,$7C,$00	; s
                                             
   2950 FFFC1FB4 30 30 7C 30 30 30 1C 00     	dc.b	$30,$30,$7C,$30,$30,$30,$1C,$00	; t
                                             
   2952 FFFC1FBC 00 00 66 66 66 66 3E 00     	dc.b	$00,$00,$66,$66,$66,$66,$3E,$00	; u
                                             
   2954 FFFC1FC4 00 00 66 66 66 3C 18 00     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$00	; v
                                             
   2956 FFFC1FCC 00 00 C6 C6 D6 FE 6C 00     	dc.b	$00,$00,$C6,$C6,$D6,$FE,$6C,$00	; w
                                             
   2958 FFFC1FD4 00 00 C6 6C 38 6C C6 00     	dc.b	$00,$00,$C6,$6C,$38,$6C,$C6,$00	; x
                                             
   2960 FFFC1FDC 00 00 66 66 66 3C 18 30     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$30	; y
                                             
   2962 FFFC1FE4 00 00 7E 0C 18 30 7E 00     	dc.b	$00,$00,$7E,$0C,$18,$30,$7E,$00	; z
                                             
   2964 FFFC1FEC 0E 18 18 70 18 18 0E 00     	dc.b	$0E,$18,$18,$70,$18,$18,$0E,$00	; {
                                             
   2966 FFFC1FF4 18 18 18 18 18 18 18 00     	dc.b	$18,$18,$18,$18,$18,$18,$18,$00	; |
                                             
   2968 FFFC1FFC 70 18 18 0E 18 18 70 00     	dc.b	$70,$18,$18,$0E,$18,$18,$70,$00	; }
                                             
   2970 FFFC2004 72 9C 00 00 00 00 00 00     	dc.b	$72,$9C,$00,$00,$00,$00,$00,$00	; ~
                                             
   2972 FFFC200C FE FE FE FE FE FE FE 00     	dc.b	$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00	; 
                                             
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 1
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm

                                             ;*****************************************************************
                                             ;								 *
                                             ;		Tiny BASIC for the Motorola MC68000		 *
                                             ;								 *
                                             ; Derived from Palo Alto Tiny BASIC as published in the May 1976 *
                                             ; issue of Dr. Dobb's Journal.  Adapted to the 68000 by:         *
                                             ;	Gordon Brandly						 *
                                             ;	12147 - 51 Street					 *
                                             ;	Edmonton AB  T5W 3G8					 *
                                             ;	Canada							 *
                                             ;	(updated mailing address for 1996)			 *
                                             ;								 *
                                             ; This version is for MEX68KECB Educational Computer Board I/O.  *
                                             ;								 *
                                             ;*****************************************************************
                                             ;    Copyright (C) 1984 by Gordon Brandly. This program may be	 *
                                             ;    freely distributed for personal use only. All commercial	 *
                                             ;		       rights are reserved.			 *
                                             ;*****************************************************************
                                             
                                             ; Vers. 1.0  1984/7/17	- Original version by Gordon Brandly
                                             ;	1.1  1984/12/9	- Addition of '$' print term by Marvin Lipford
                                             ;	1.2  1985/4/9	- Bug fix in multiply routine by Rick Murray
                                             
                                             ;	OPT	FRS,BRS 	forward ref.'s & branches default to short
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 2
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             CR	EQU	0x0D		;ASCII equates
                                             LF	EQU	0x0A
                                             TAB	EQU	0x09
                                             CTRLC	EQU	0x03
                                             CTRLH	EQU	0x08
                                             CTRLS	EQU	0x13
                                             CTRLX	EQU	0x18
                                             
                                             BUFLEN	EQU	80	;	length of keyboard input buffer
                                             
                                             ;*
                                             ;* Internal variables follow:
                                             ;*
                                             	BSS
                                             	ORG		0x600
   3016 00000600                             RANPNT:
   3017 00000600                             	DC.L	START	;	random number pointer
   3018 00000604                             CURRNT:
   3019 00000604                             	DC.L	1		;Current line pointer
   3020 00000608                             STKGOS:
   3021 00000608                             	DC.L	1		;Saves stack pointer in 'GOSUB'
   3022 0000060C                             STKINP:
   3023 0000060C                             	DC.L	1		;Saves stack pointer during 'INPUT'
   3024 00000610                             LOPVAR:
   3025 00000610                             	DC.L	1		;'FOR' loop save area
   3026 00000614                             LOPINC:
   3027 00000614                             	DC.L	1		;increment
   3028 00000618                             LOPLMT:
   3029 00000618                             	DC.L	1		;limit
   3030 0000061C                             LOPLN:
   3031 0000061C                             	DC.L	1		;line number
   3032 00000620                             LOPPT:
   3033 00000620                             	DC.L	1		;text pointer
   3034 00000624                             TXTUNF:
   3035 00000624                             	DC.L	1		;points to unfilled text area
   3036 00000628                             VARBGN:
   3037 00000628                             	DC.L	1		;points to variable area
   3038 0000062C                             STKLMT:
   3039 0000062C                             	DC.L	1		;holds lower limit for stack growth
   3040 00000630                             BUFFER:
   3041 00000630                             	FILL.B	BUFLEN,0x00	;	Keyboard input buffer
                                             
                                             TXT	EQU	$		;Beginning of program area
                                             
                                             	CODE
   3046 FFFC2014 FF FF FF FF FF FF FF FF     	ORG	0xFFFCC000	;
   3047 FFFC201C FF FF FF FF FF FF FF FF     
   3048 FFFC2024 FF FF FF FF FF FF FF FF     
   3049 FFFC202C FF FF FF FF FF FF FF FF     
   3050 FFFC2034 FF FF FF FF FF FF FF FF     
   3051 FFFC203C FF FF FF FF FF FF FF FF     
   3052 FFFC2044 FF FF FF FF FF FF FF FF     
   3053 FFFC204C FF FF FF FF FF FF FF FF     
   3054 FFFC2054 FF FF FF FF FF FF FF FF     
   3055 FFFC205C FF FF FF FF FF FF FF FF     
   3056 FFFC2064 FF FF FF FF FF FF FF FF     
   3057 FFFC206C FF FF FF FF FF FF FF FF     
   3058 FFFC2074 FF FF FF FF FF FF FF FF     
   3059 FFFC207C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 3
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3060 FFFC2084 FF FF FF FF FF FF FF FF     
   3061 FFFC208C FF FF FF FF FF FF FF FF     
   3062 FFFC2094 FF FF FF FF FF FF FF FF     
   3063 FFFC209C FF FF FF FF FF FF FF FF     
   3064 FFFC20A4 FF FF FF FF FF FF FF FF     
   3065 FFFC20AC FF FF FF FF FF FF FF FF     
   3066 FFFC20B4 FF FF FF FF FF FF FF FF     
   3067 FFFC20BC FF FF FF FF FF FF FF FF     
   3068 FFFC20C4 FF FF FF FF FF FF FF FF     
   3069 FFFC20CC FF FF FF FF FF FF FF FF     
   3070 FFFC20D4 FF FF FF FF FF FF FF FF     
   3071 FFFC20DC FF FF FF FF FF FF FF FF     
   3072 FFFC20E4 FF FF FF FF FF FF FF FF     
   3073 FFFC20EC FF FF FF FF FF FF FF FF     
   3074 FFFC20F4 FF FF FF FF FF FF FF FF     
   3075 FFFC20FC FF FF FF FF FF FF FF FF     
   3076 FFFC2104 FF FF FF FF FF FF FF FF     
   3077 FFFC210C FF FF FF FF FF FF FF FF     
   3078 FFFC2114 FF FF FF FF FF FF FF FF     
   3079 FFFC211C FF FF FF FF FF FF FF FF     
   3080 FFFC2124 FF FF FF FF FF FF FF FF     
   3081 FFFC212C FF FF FF FF FF FF FF FF     
   3082 FFFC2134 FF FF FF FF FF FF FF FF     
   3083 FFFC213C FF FF FF FF FF FF FF FF     
   3084 FFFC2144 FF FF FF FF FF FF FF FF     
   3085 FFFC214C FF FF FF FF FF FF FF FF     
   3086 FFFC2154 FF FF FF FF FF FF FF FF     
   3087 FFFC215C FF FF FF FF FF FF FF FF     
   3088 FFFC2164 FF FF FF FF FF FF FF FF     
   3089 FFFC216C FF FF FF FF FF FF FF FF     
   3090 FFFC2174 FF FF FF FF FF FF FF FF     
   3091 FFFC217C FF FF FF FF FF FF FF FF     
   3092 FFFC2184 FF FF FF FF FF FF FF FF     
   3093 FFFC218C FF FF FF FF FF FF FF FF     
   3094 FFFC2194 FF FF FF FF FF FF FF FF     
   3095 FFFC219C FF FF FF FF FF FF FF FF     
   3096 FFFC21A4 FF FF FF FF FF FF FF FF     
   3097 FFFC21AC FF FF FF FF FF FF FF FF     
   3098 FFFC21B4 FF FF FF FF FF FF FF FF     
   3099 FFFC21BC FF FF FF FF FF FF FF FF     
   3100 FFFC21C4 FF FF FF FF FF FF FF FF     
   3101 FFFC21CC FF FF FF FF FF FF FF FF     
   3102 FFFC21D4 FF FF FF FF FF FF FF FF     
   3103 FFFC21DC FF FF FF FF FF FF FF FF     
   3104 FFFC21E4 FF FF FF FF FF FF FF FF     
   3105 FFFC21EC FF FF FF FF FF FF FF FF     
   3106 FFFC21F4 FF FF FF FF FF FF FF FF     
   3107 FFFC21FC FF FF FF FF FF FF FF FF     
   3108 FFFC2204 FF FF FF FF FF FF FF FF     
   3109 FFFC220C FF FF FF FF FF FF FF FF     
   3110 FFFC2214 FF FF FF FF FF FF FF FF     
   3111 FFFC221C FF FF FF FF FF FF FF FF     
   3112 FFFC2224 FF FF FF FF FF FF FF FF     
   3113 FFFC222C FF FF FF FF FF FF FF FF     
   3114 FFFC2234 FF FF FF FF FF FF FF FF     
   3115 FFFC223C FF FF FF FF FF FF FF FF     
   3116 FFFC2244 FF FF FF FF FF FF FF FF     
   3117 FFFC224C FF FF FF FF FF FF FF FF     
   3118 FFFC2254 FF FF FF FF FF FF FF FF     
   3119 FFFC225C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 4
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3120 FFFC2264 FF FF FF FF FF FF FF FF     
   3121 FFFC226C FF FF FF FF FF FF FF FF     
   3122 FFFC2274 FF FF FF FF FF FF FF FF     
   3123 FFFC227C FF FF FF FF FF FF FF FF     
   3124 FFFC2284 FF FF FF FF FF FF FF FF     
   3125 FFFC228C FF FF FF FF FF FF FF FF     
   3126 FFFC2294 FF FF FF FF FF FF FF FF     
   3127 FFFC229C FF FF FF FF FF FF FF FF     
   3128 FFFC22A4 FF FF FF FF FF FF FF FF     
   3129 FFFC22AC FF FF FF FF FF FF FF FF     
   3130 FFFC22B4 FF FF FF FF FF FF FF FF     
   3131 FFFC22BC FF FF FF FF FF FF FF FF     
   3132 FFFC22C4 FF FF FF FF FF FF FF FF     
   3133 FFFC22CC FF FF FF FF FF FF FF FF     
   3134 FFFC22D4 FF FF FF FF FF FF FF FF     
   3135 FFFC22DC FF FF FF FF FF FF FF FF     
   3136 FFFC22E4 FF FF FF FF FF FF FF FF     
   3137 FFFC22EC FF FF FF FF FF FF FF FF     
   3138 FFFC22F4 FF FF FF FF FF FF FF FF     
   3139 FFFC22FC FF FF FF FF FF FF FF FF     
   3140 FFFC2304 FF FF FF FF FF FF FF FF     
   3141 FFFC230C FF FF FF FF FF FF FF FF     
   3142 FFFC2314 FF FF FF FF FF FF FF FF     
   3143 FFFC231C FF FF FF FF FF FF FF FF     
   3144 FFFC2324 FF FF FF FF FF FF FF FF     
   3145 FFFC232C FF FF FF FF FF FF FF FF     
   3146 FFFC2334 FF FF FF FF FF FF FF FF     
   3147 FFFC233C FF FF FF FF FF FF FF FF     
   3148 FFFC2344 FF FF FF FF FF FF FF FF     
   3149 FFFC234C FF FF FF FF FF FF FF FF     
   3150 FFFC2354 FF FF FF FF FF FF FF FF     
   3151 FFFC235C FF FF FF FF FF FF FF FF     
   3152 FFFC2364 FF FF FF FF FF FF FF FF     
   3153 FFFC236C FF FF FF FF FF FF FF FF     
   3154 FFFC2374 FF FF FF FF FF FF FF FF     
   3155 FFFC237C FF FF FF FF FF FF FF FF     
   3156 FFFC2384 FF FF FF FF FF FF FF FF     
   3157 FFFC238C FF FF FF FF FF FF FF FF     
   3158 FFFC2394 FF FF FF FF FF FF FF FF     
   3159 FFFC239C FF FF FF FF FF FF FF FF     
   3160 FFFC23A4 FF FF FF FF FF FF FF FF     
   3161 FFFC23AC FF FF FF FF FF FF FF FF     
   3162 FFFC23B4 FF FF FF FF FF FF FF FF     
   3163 FFFC23BC FF FF FF FF FF FF FF FF     
   3164 FFFC23C4 FF FF FF FF FF FF FF FF     
   3165 FFFC23CC FF FF FF FF FF FF FF FF     
   3166 FFFC23D4 FF FF FF FF FF FF FF FF     
   3167 FFFC23DC FF FF FF FF FF FF FF FF     
   3168 FFFC23E4 FF FF FF FF FF FF FF FF     
   3169 FFFC23EC FF FF FF FF FF FF FF FF     
   3170 FFFC23F4 FF FF FF FF FF FF FF FF     
   3171 FFFC23FC FF FF FF FF FF FF FF FF     
   3172 FFFC2404 FF FF FF FF FF FF FF FF     
   3173 FFFC240C FF FF FF FF FF FF FF FF     
   3174 FFFC2414 FF FF FF FF FF FF FF FF     
   3175 FFFC241C FF FF FF FF FF FF FF FF     
   3176 FFFC2424 FF FF FF FF FF FF FF FF     
   3177 FFFC242C FF FF FF FF FF FF FF FF     
   3178 FFFC2434 FF FF FF FF FF FF FF FF     
   3179 FFFC243C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 5
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3180 FFFC2444 FF FF FF FF FF FF FF FF     
   3181 FFFC244C FF FF FF FF FF FF FF FF     
   3182 FFFC2454 FF FF FF FF FF FF FF FF     
   3183 FFFC245C FF FF FF FF FF FF FF FF     
   3184 FFFC2464 FF FF FF FF FF FF FF FF     
   3185 FFFC246C FF FF FF FF FF FF FF FF     
   3186 FFFC2474 FF FF FF FF FF FF FF FF     
   3187 FFFC247C FF FF FF FF FF FF FF FF     
   3188 FFFC2484 FF FF FF FF FF FF FF FF     
   3189 FFFC248C FF FF FF FF FF FF FF FF     
   3190 FFFC2494 FF FF FF FF FF FF FF FF     
   3191 FFFC249C FF FF FF FF FF FF FF FF     
   3192 FFFC24A4 FF FF FF FF FF FF FF FF     
   3193 FFFC24AC FF FF FF FF FF FF FF FF     
   3194 FFFC24B4 FF FF FF FF FF FF FF FF     
   3195 FFFC24BC FF FF FF FF FF FF FF FF     
   3196 FFFC24C4 FF FF FF FF FF FF FF FF     
   3197 FFFC24CC FF FF FF FF FF FF FF FF     
   3198 FFFC24D4 FF FF FF FF FF FF FF FF     
   3199 FFFC24DC FF FF FF FF FF FF FF FF     
   3200 FFFC24E4 FF FF FF FF FF FF FF FF     
   3201 FFFC24EC FF FF FF FF FF FF FF FF     
   3202 FFFC24F4 FF FF FF FF FF FF FF FF     
   3203 FFFC24FC FF FF FF FF FF FF FF FF     
   3204 FFFC2504 FF FF FF FF FF FF FF FF     
   3205 FFFC250C FF FF FF FF FF FF FF FF     
   3206 FFFC2514 FF FF FF FF FF FF FF FF     
   3207 FFFC251C FF FF FF FF FF FF FF FF     
   3208 FFFC2524 FF FF FF FF FF FF FF FF     
   3209 FFFC252C FF FF FF FF FF FF FF FF     
   3210 FFFC2534 FF FF FF FF FF FF FF FF     
   3211 FFFC253C FF FF FF FF FF FF FF FF     
   3212 FFFC2544 FF FF FF FF FF FF FF FF     
   3213 FFFC254C FF FF FF FF FF FF FF FF     
   3214 FFFC2554 FF FF FF FF FF FF FF FF     
   3215 FFFC255C FF FF FF FF FF FF FF FF     
   3216 FFFC2564 FF FF FF FF FF FF FF FF     
   3217 FFFC256C FF FF FF FF FF FF FF FF     
   3218 FFFC2574 FF FF FF FF FF FF FF FF     
   3219 FFFC257C FF FF FF FF FF FF FF FF     
   3220 FFFC2584 FF FF FF FF FF FF FF FF     
   3221 FFFC258C FF FF FF FF FF FF FF FF     
   3222 FFFC2594 FF FF FF FF FF FF FF FF     
   3223 FFFC259C FF FF FF FF FF FF FF FF     
   3224 FFFC25A4 FF FF FF FF FF FF FF FF     
   3225 FFFC25AC FF FF FF FF FF FF FF FF     
   3226 FFFC25B4 FF FF FF FF FF FF FF FF     
   3227 FFFC25BC FF FF FF FF FF FF FF FF     
   3228 FFFC25C4 FF FF FF FF FF FF FF FF     
   3229 FFFC25CC FF FF FF FF FF FF FF FF     
   3230 FFFC25D4 FF FF FF FF FF FF FF FF     
   3231 FFFC25DC FF FF FF FF FF FF FF FF     
   3232 FFFC25E4 FF FF FF FF FF FF FF FF     
   3233 FFFC25EC FF FF FF FF FF FF FF FF     
   3234 FFFC25F4 FF FF FF FF FF FF FF FF     
   3235 FFFC25FC FF FF FF FF FF FF FF FF     
   3236 FFFC2604 FF FF FF FF FF FF FF FF     
   3237 FFFC260C FF FF FF FF FF FF FF FF     
   3238 FFFC2614 FF FF FF FF FF FF FF FF     
   3239 FFFC261C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 6
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3240 FFFC2624 FF FF FF FF FF FF FF FF     
   3241 FFFC262C FF FF FF FF FF FF FF FF     
   3242 FFFC2634 FF FF FF FF FF FF FF FF     
   3243 FFFC263C FF FF FF FF FF FF FF FF     
   3244 FFFC2644 FF FF FF FF FF FF FF FF     
   3245 FFFC264C FF FF FF FF FF FF FF FF     
   3246 FFFC2654 FF FF FF FF FF FF FF FF     
   3247 FFFC265C FF FF FF FF FF FF FF FF     
   3248 FFFC2664 FF FF FF FF FF FF FF FF     
   3249 FFFC266C FF FF FF FF FF FF FF FF     
   3250 FFFC2674 FF FF FF FF FF FF FF FF     
   3251 FFFC267C FF FF FF FF FF FF FF FF     
   3252 FFFC2684 FF FF FF FF FF FF FF FF     
   3253 FFFC268C FF FF FF FF FF FF FF FF     
   3254 FFFC2694 FF FF FF FF FF FF FF FF     
   3255 FFFC269C FF FF FF FF FF FF FF FF     
   3256 FFFC26A4 FF FF FF FF FF FF FF FF     
   3257 FFFC26AC FF FF FF FF FF FF FF FF     
   3258 FFFC26B4 FF FF FF FF FF FF FF FF     
   3259 FFFC26BC FF FF FF FF FF FF FF FF     
   3260 FFFC26C4 FF FF FF FF FF FF FF FF     
   3261 FFFC26CC FF FF FF FF FF FF FF FF     
   3262 FFFC26D4 FF FF FF FF FF FF FF FF     
   3263 FFFC26DC FF FF FF FF FF FF FF FF     
   3264 FFFC26E4 FF FF FF FF FF FF FF FF     
   3265 FFFC26EC FF FF FF FF FF FF FF FF     
   3266 FFFC26F4 FF FF FF FF FF FF FF FF     
   3267 FFFC26FC FF FF FF FF FF FF FF FF     
   3268 FFFC2704 FF FF FF FF FF FF FF FF     
   3269 FFFC270C FF FF FF FF FF FF FF FF     
   3270 FFFC2714 FF FF FF FF FF FF FF FF     
   3271 FFFC271C FF FF FF FF FF FF FF FF     
   3272 FFFC2724 FF FF FF FF FF FF FF FF     
   3273 FFFC272C FF FF FF FF FF FF FF FF     
   3274 FFFC2734 FF FF FF FF FF FF FF FF     
   3275 FFFC273C FF FF FF FF FF FF FF FF     
   3276 FFFC2744 FF FF FF FF FF FF FF FF     
   3277 FFFC274C FF FF FF FF FF FF FF FF     
   3278 FFFC2754 FF FF FF FF FF FF FF FF     
   3279 FFFC275C FF FF FF FF FF FF FF FF     
   3280 FFFC2764 FF FF FF FF FF FF FF FF     
   3281 FFFC276C FF FF FF FF FF FF FF FF     
   3282 FFFC2774 FF FF FF FF FF FF FF FF     
   3283 FFFC277C FF FF FF FF FF FF FF FF     
   3284 FFFC2784 FF FF FF FF FF FF FF FF     
   3285 FFFC278C FF FF FF FF FF FF FF FF     
   3286 FFFC2794 FF FF FF FF FF FF FF FF     
   3287 FFFC279C FF FF FF FF FF FF FF FF     
   3288 FFFC27A4 FF FF FF FF FF FF FF FF     
   3289 FFFC27AC FF FF FF FF FF FF FF FF     
   3290 FFFC27B4 FF FF FF FF FF FF FF FF     
   3291 FFFC27BC FF FF FF FF FF FF FF FF     
   3292 FFFC27C4 FF FF FF FF FF FF FF FF     
   3293 FFFC27CC FF FF FF FF FF FF FF FF     
   3294 FFFC27D4 FF FF FF FF FF FF FF FF     
   3295 FFFC27DC FF FF FF FF FF FF FF FF     
   3296 FFFC27E4 FF FF FF FF FF FF FF FF     
   3297 FFFC27EC FF FF FF FF FF FF FF FF     
   3298 FFFC27F4 FF FF FF FF FF FF FF FF     
   3299 FFFC27FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 7
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3300 FFFC2804 FF FF FF FF FF FF FF FF     
   3301 FFFC280C FF FF FF FF FF FF FF FF     
   3302 FFFC2814 FF FF FF FF FF FF FF FF     
   3303 FFFC281C FF FF FF FF FF FF FF FF     
   3304 FFFC2824 FF FF FF FF FF FF FF FF     
   3305 FFFC282C FF FF FF FF FF FF FF FF     
   3306 FFFC2834 FF FF FF FF FF FF FF FF     
   3307 FFFC283C FF FF FF FF FF FF FF FF     
   3308 FFFC2844 FF FF FF FF FF FF FF FF     
   3309 FFFC284C FF FF FF FF FF FF FF FF     
   3310 FFFC2854 FF FF FF FF FF FF FF FF     
   3311 FFFC285C FF FF FF FF FF FF FF FF     
   3312 FFFC2864 FF FF FF FF FF FF FF FF     
   3313 FFFC286C FF FF FF FF FF FF FF FF     
   3314 FFFC2874 FF FF FF FF FF FF FF FF     
   3315 FFFC287C FF FF FF FF FF FF FF FF     
   3316 FFFC2884 FF FF FF FF FF FF FF FF     
   3317 FFFC288C FF FF FF FF FF FF FF FF     
   3318 FFFC2894 FF FF FF FF FF FF FF FF     
   3319 FFFC289C FF FF FF FF FF FF FF FF     
   3320 FFFC28A4 FF FF FF FF FF FF FF FF     
   3321 FFFC28AC FF FF FF FF FF FF FF FF     
   3322 FFFC28B4 FF FF FF FF FF FF FF FF     
   3323 FFFC28BC FF FF FF FF FF FF FF FF     
   3324 FFFC28C4 FF FF FF FF FF FF FF FF     
   3325 FFFC28CC FF FF FF FF FF FF FF FF     
   3326 FFFC28D4 FF FF FF FF FF FF FF FF     
   3327 FFFC28DC FF FF FF FF FF FF FF FF     
   3328 FFFC28E4 FF FF FF FF FF FF FF FF     
   3329 FFFC28EC FF FF FF FF FF FF FF FF     
   3330 FFFC28F4 FF FF FF FF FF FF FF FF     
   3331 FFFC28FC FF FF FF FF FF FF FF FF     
   3332 FFFC2904 FF FF FF FF FF FF FF FF     
   3333 FFFC290C FF FF FF FF FF FF FF FF     
   3334 FFFC2914 FF FF FF FF FF FF FF FF     
   3335 FFFC291C FF FF FF FF FF FF FF FF     
   3336 FFFC2924 FF FF FF FF FF FF FF FF     
   3337 FFFC292C FF FF FF FF FF FF FF FF     
   3338 FFFC2934 FF FF FF FF FF FF FF FF     
   3339 FFFC293C FF FF FF FF FF FF FF FF     
   3340 FFFC2944 FF FF FF FF FF FF FF FF     
   3341 FFFC294C FF FF FF FF FF FF FF FF     
   3342 FFFC2954 FF FF FF FF FF FF FF FF     
   3343 FFFC295C FF FF FF FF FF FF FF FF     
   3344 FFFC2964 FF FF FF FF FF FF FF FF     
   3345 FFFC296C FF FF FF FF FF FF FF FF     
   3346 FFFC2974 FF FF FF FF FF FF FF FF     
   3347 FFFC297C FF FF FF FF FF FF FF FF     
   3348 FFFC2984 FF FF FF FF FF FF FF FF     
   3349 FFFC298C FF FF FF FF FF FF FF FF     
   3350 FFFC2994 FF FF FF FF FF FF FF FF     
   3351 FFFC299C FF FF FF FF FF FF FF FF     
   3352 FFFC29A4 FF FF FF FF FF FF FF FF     
   3353 FFFC29AC FF FF FF FF FF FF FF FF     
   3354 FFFC29B4 FF FF FF FF FF FF FF FF     
   3355 FFFC29BC FF FF FF FF FF FF FF FF     
   3356 FFFC29C4 FF FF FF FF FF FF FF FF     
   3357 FFFC29CC FF FF FF FF FF FF FF FF     
   3358 FFFC29D4 FF FF FF FF FF FF FF FF     
   3359 FFFC29DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 8
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3360 FFFC29E4 FF FF FF FF FF FF FF FF     
   3361 FFFC29EC FF FF FF FF FF FF FF FF     
   3362 FFFC29F4 FF FF FF FF FF FF FF FF     
   3363 FFFC29FC FF FF FF FF FF FF FF FF     
   3364 FFFC2A04 FF FF FF FF FF FF FF FF     
   3365 FFFC2A0C FF FF FF FF FF FF FF FF     
   3366 FFFC2A14 FF FF FF FF FF FF FF FF     
   3367 FFFC2A1C FF FF FF FF FF FF FF FF     
   3368 FFFC2A24 FF FF FF FF FF FF FF FF     
   3369 FFFC2A2C FF FF FF FF FF FF FF FF     
   3370 FFFC2A34 FF FF FF FF FF FF FF FF     
   3371 FFFC2A3C FF FF FF FF FF FF FF FF     
   3372 FFFC2A44 FF FF FF FF FF FF FF FF     
   3373 FFFC2A4C FF FF FF FF FF FF FF FF     
   3374 FFFC2A54 FF FF FF FF FF FF FF FF     
   3375 FFFC2A5C FF FF FF FF FF FF FF FF     
   3376 FFFC2A64 FF FF FF FF FF FF FF FF     
   3377 FFFC2A6C FF FF FF FF FF FF FF FF     
   3378 FFFC2A74 FF FF FF FF FF FF FF FF     
   3379 FFFC2A7C FF FF FF FF FF FF FF FF     
   3380 FFFC2A84 FF FF FF FF FF FF FF FF     
   3381 FFFC2A8C FF FF FF FF FF FF FF FF     
   3382 FFFC2A94 FF FF FF FF FF FF FF FF     
   3383 FFFC2A9C FF FF FF FF FF FF FF FF     
   3384 FFFC2AA4 FF FF FF FF FF FF FF FF     
   3385 FFFC2AAC FF FF FF FF FF FF FF FF     
   3386 FFFC2AB4 FF FF FF FF FF FF FF FF     
   3387 FFFC2ABC FF FF FF FF FF FF FF FF     
   3388 FFFC2AC4 FF FF FF FF FF FF FF FF     
   3389 FFFC2ACC FF FF FF FF FF FF FF FF     
   3390 FFFC2AD4 FF FF FF FF FF FF FF FF     
   3391 FFFC2ADC FF FF FF FF FF FF FF FF     
   3392 FFFC2AE4 FF FF FF FF FF FF FF FF     
   3393 FFFC2AEC FF FF FF FF FF FF FF FF     
   3394 FFFC2AF4 FF FF FF FF FF FF FF FF     
   3395 FFFC2AFC FF FF FF FF FF FF FF FF     
   3396 FFFC2B04 FF FF FF FF FF FF FF FF     
   3397 FFFC2B0C FF FF FF FF FF FF FF FF     
   3398 FFFC2B14 FF FF FF FF FF FF FF FF     
   3399 FFFC2B1C FF FF FF FF FF FF FF FF     
   3400 FFFC2B24 FF FF FF FF FF FF FF FF     
   3401 FFFC2B2C FF FF FF FF FF FF FF FF     
   3402 FFFC2B34 FF FF FF FF FF FF FF FF     
   3403 FFFC2B3C FF FF FF FF FF FF FF FF     
   3404 FFFC2B44 FF FF FF FF FF FF FF FF     
   3405 FFFC2B4C FF FF FF FF FF FF FF FF     
   3406 FFFC2B54 FF FF FF FF FF FF FF FF     
   3407 FFFC2B5C FF FF FF FF FF FF FF FF     
   3408 FFFC2B64 FF FF FF FF FF FF FF FF     
   3409 FFFC2B6C FF FF FF FF FF FF FF FF     
   3410 FFFC2B74 FF FF FF FF FF FF FF FF     
   3411 FFFC2B7C FF FF FF FF FF FF FF FF     
   3412 FFFC2B84 FF FF FF FF FF FF FF FF     
   3413 FFFC2B8C FF FF FF FF FF FF FF FF     
   3414 FFFC2B94 FF FF FF FF FF FF FF FF     
   3415 FFFC2B9C FF FF FF FF FF FF FF FF     
   3416 FFFC2BA4 FF FF FF FF FF FF FF FF     
   3417 FFFC2BAC FF FF FF FF FF FF FF FF     
   3418 FFFC2BB4 FF FF FF FF FF FF FF FF     
   3419 FFFC2BBC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 9
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3420 FFFC2BC4 FF FF FF FF FF FF FF FF     
   3421 FFFC2BCC FF FF FF FF FF FF FF FF     
   3422 FFFC2BD4 FF FF FF FF FF FF FF FF     
   3423 FFFC2BDC FF FF FF FF FF FF FF FF     
   3424 FFFC2BE4 FF FF FF FF FF FF FF FF     
   3425 FFFC2BEC FF FF FF FF FF FF FF FF     
   3426 FFFC2BF4 FF FF FF FF FF FF FF FF     
   3427 FFFC2BFC FF FF FF FF FF FF FF FF     
   3428 FFFC2C04 FF FF FF FF FF FF FF FF     
   3429 FFFC2C0C FF FF FF FF FF FF FF FF     
   3430 FFFC2C14 FF FF FF FF FF FF FF FF     
   3431 FFFC2C1C FF FF FF FF FF FF FF FF     
   3432 FFFC2C24 FF FF FF FF FF FF FF FF     
   3433 FFFC2C2C FF FF FF FF FF FF FF FF     
   3434 FFFC2C34 FF FF FF FF FF FF FF FF     
   3435 FFFC2C3C FF FF FF FF FF FF FF FF     
   3436 FFFC2C44 FF FF FF FF FF FF FF FF     
   3437 FFFC2C4C FF FF FF FF FF FF FF FF     
   3438 FFFC2C54 FF FF FF FF FF FF FF FF     
   3439 FFFC2C5C FF FF FF FF FF FF FF FF     
   3440 FFFC2C64 FF FF FF FF FF FF FF FF     
   3441 FFFC2C6C FF FF FF FF FF FF FF FF     
   3442 FFFC2C74 FF FF FF FF FF FF FF FF     
   3443 FFFC2C7C FF FF FF FF FF FF FF FF     
   3444 FFFC2C84 FF FF FF FF FF FF FF FF     
   3445 FFFC2C8C FF FF FF FF FF FF FF FF     
   3446 FFFC2C94 FF FF FF FF FF FF FF FF     
   3447 FFFC2C9C FF FF FF FF FF FF FF FF     
   3448 FFFC2CA4 FF FF FF FF FF FF FF FF     
   3449 FFFC2CAC FF FF FF FF FF FF FF FF     
   3450 FFFC2CB4 FF FF FF FF FF FF FF FF     
   3451 FFFC2CBC FF FF FF FF FF FF FF FF     
   3452 FFFC2CC4 FF FF FF FF FF FF FF FF     
   3453 FFFC2CCC FF FF FF FF FF FF FF FF     
   3454 FFFC2CD4 FF FF FF FF FF FF FF FF     
   3455 FFFC2CDC FF FF FF FF FF FF FF FF     
   3456 FFFC2CE4 FF FF FF FF FF FF FF FF     
   3457 FFFC2CEC FF FF FF FF FF FF FF FF     
   3458 FFFC2CF4 FF FF FF FF FF FF FF FF     
   3459 FFFC2CFC FF FF FF FF FF FF FF FF     
   3460 FFFC2D04 FF FF FF FF FF FF FF FF     
   3461 FFFC2D0C FF FF FF FF FF FF FF FF     
   3462 FFFC2D14 FF FF FF FF FF FF FF FF     
   3463 FFFC2D1C FF FF FF FF FF FF FF FF     
   3464 FFFC2D24 FF FF FF FF FF FF FF FF     
   3465 FFFC2D2C FF FF FF FF FF FF FF FF     
   3466 FFFC2D34 FF FF FF FF FF FF FF FF     
   3467 FFFC2D3C FF FF FF FF FF FF FF FF     
   3468 FFFC2D44 FF FF FF FF FF FF FF FF     
   3469 FFFC2D4C FF FF FF FF FF FF FF FF     
   3470 FFFC2D54 FF FF FF FF FF FF FF FF     
   3471 FFFC2D5C FF FF FF FF FF FF FF FF     
   3472 FFFC2D64 FF FF FF FF FF FF FF FF     
   3473 FFFC2D6C FF FF FF FF FF FF FF FF     
   3474 FFFC2D74 FF FF FF FF FF FF FF FF     
   3475 FFFC2D7C FF FF FF FF FF FF FF FF     
   3476 FFFC2D84 FF FF FF FF FF FF FF FF     
   3477 FFFC2D8C FF FF FF FF FF FF FF FF     
   3478 FFFC2D94 FF FF FF FF FF FF FF FF     
   3479 FFFC2D9C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 10
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3480 FFFC2DA4 FF FF FF FF FF FF FF FF     
   3481 FFFC2DAC FF FF FF FF FF FF FF FF     
   3482 FFFC2DB4 FF FF FF FF FF FF FF FF     
   3483 FFFC2DBC FF FF FF FF FF FF FF FF     
   3484 FFFC2DC4 FF FF FF FF FF FF FF FF     
   3485 FFFC2DCC FF FF FF FF FF FF FF FF     
   3486 FFFC2DD4 FF FF FF FF FF FF FF FF     
   3487 FFFC2DDC FF FF FF FF FF FF FF FF     
   3488 FFFC2DE4 FF FF FF FF FF FF FF FF     
   3489 FFFC2DEC FF FF FF FF FF FF FF FF     
   3490 FFFC2DF4 FF FF FF FF FF FF FF FF     
   3491 FFFC2DFC FF FF FF FF FF FF FF FF     
   3492 FFFC2E04 FF FF FF FF FF FF FF FF     
   3493 FFFC2E0C FF FF FF FF FF FF FF FF     
   3494 FFFC2E14 FF FF FF FF FF FF FF FF     
   3495 FFFC2E1C FF FF FF FF FF FF FF FF     
   3496 FFFC2E24 FF FF FF FF FF FF FF FF     
   3497 FFFC2E2C FF FF FF FF FF FF FF FF     
   3498 FFFC2E34 FF FF FF FF FF FF FF FF     
   3499 FFFC2E3C FF FF FF FF FF FF FF FF     
   3500 FFFC2E44 FF FF FF FF FF FF FF FF     
   3501 FFFC2E4C FF FF FF FF FF FF FF FF     
   3502 FFFC2E54 FF FF FF FF FF FF FF FF     
   3503 FFFC2E5C FF FF FF FF FF FF FF FF     
   3504 FFFC2E64 FF FF FF FF FF FF FF FF     
   3505 FFFC2E6C FF FF FF FF FF FF FF FF     
   3506 FFFC2E74 FF FF FF FF FF FF FF FF     
   3507 FFFC2E7C FF FF FF FF FF FF FF FF     
   3508 FFFC2E84 FF FF FF FF FF FF FF FF     
   3509 FFFC2E8C FF FF FF FF FF FF FF FF     
   3510 FFFC2E94 FF FF FF FF FF FF FF FF     
   3511 FFFC2E9C FF FF FF FF FF FF FF FF     
   3512 FFFC2EA4 FF FF FF FF FF FF FF FF     
   3513 FFFC2EAC FF FF FF FF FF FF FF FF     
   3514 FFFC2EB4 FF FF FF FF FF FF FF FF     
   3515 FFFC2EBC FF FF FF FF FF FF FF FF     
   3516 FFFC2EC4 FF FF FF FF FF FF FF FF     
   3517 FFFC2ECC FF FF FF FF FF FF FF FF     
   3518 FFFC2ED4 FF FF FF FF FF FF FF FF     
   3519 FFFC2EDC FF FF FF FF FF FF FF FF     
   3520 FFFC2EE4 FF FF FF FF FF FF FF FF     
   3521 FFFC2EEC FF FF FF FF FF FF FF FF     
   3522 FFFC2EF4 FF FF FF FF FF FF FF FF     
   3523 FFFC2EFC FF FF FF FF FF FF FF FF     
   3524 FFFC2F04 FF FF FF FF FF FF FF FF     
   3525 FFFC2F0C FF FF FF FF FF FF FF FF     
   3526 FFFC2F14 FF FF FF FF FF FF FF FF     
   3527 FFFC2F1C FF FF FF FF FF FF FF FF     
   3528 FFFC2F24 FF FF FF FF FF FF FF FF     
   3529 FFFC2F2C FF FF FF FF FF FF FF FF     
   3530 FFFC2F34 FF FF FF FF FF FF FF FF     
   3531 FFFC2F3C FF FF FF FF FF FF FF FF     
   3532 FFFC2F44 FF FF FF FF FF FF FF FF     
   3533 FFFC2F4C FF FF FF FF FF FF FF FF     
   3534 FFFC2F54 FF FF FF FF FF FF FF FF     
   3535 FFFC2F5C FF FF FF FF FF FF FF FF     
   3536 FFFC2F64 FF FF FF FF FF FF FF FF     
   3537 FFFC2F6C FF FF FF FF FF FF FF FF     
   3538 FFFC2F74 FF FF FF FF FF FF FF FF     
   3539 FFFC2F7C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 11
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3540 FFFC2F84 FF FF FF FF FF FF FF FF     
   3541 FFFC2F8C FF FF FF FF FF FF FF FF     
   3542 FFFC2F94 FF FF FF FF FF FF FF FF     
   3543 FFFC2F9C FF FF FF FF FF FF FF FF     
   3544 FFFC2FA4 FF FF FF FF FF FF FF FF     
   3545 FFFC2FAC FF FF FF FF FF FF FF FF     
   3546 FFFC2FB4 FF FF FF FF FF FF FF FF     
   3547 FFFC2FBC FF FF FF FF FF FF FF FF     
   3548 FFFC2FC4 FF FF FF FF FF FF FF FF     
   3549 FFFC2FCC FF FF FF FF FF FF FF FF     
   3550 FFFC2FD4 FF FF FF FF FF FF FF FF     
   3551 FFFC2FDC FF FF FF FF FF FF FF FF     
   3552 FFFC2FE4 FF FF FF FF FF FF FF FF     
   3553 FFFC2FEC FF FF FF FF FF FF FF FF     
   3554 FFFC2FF4 FF FF FF FF FF FF FF FF     
   3555 FFFC2FFC FF FF FF FF FF FF FF FF     
   3556 FFFC3004 FF FF FF FF FF FF FF FF     
   3557 FFFC300C FF FF FF FF FF FF FF FF     
   3558 FFFC3014 FF FF FF FF FF FF FF FF     
   3559 FFFC301C FF FF FF FF FF FF FF FF     
   3560 FFFC3024 FF FF FF FF FF FF FF FF     
   3561 FFFC302C FF FF FF FF FF FF FF FF     
   3562 FFFC3034 FF FF FF FF FF FF FF FF     
   3563 FFFC303C FF FF FF FF FF FF FF FF     
   3564 FFFC3044 FF FF FF FF FF FF FF FF     
   3565 FFFC304C FF FF FF FF FF FF FF FF     
   3566 FFFC3054 FF FF FF FF FF FF FF FF     
   3567 FFFC305C FF FF FF FF FF FF FF FF     
   3568 FFFC3064 FF FF FF FF FF FF FF FF     
   3569 FFFC306C FF FF FF FF FF FF FF FF     
   3570 FFFC3074 FF FF FF FF FF FF FF FF     
   3571 FFFC307C FF FF FF FF FF FF FF FF     
   3572 FFFC3084 FF FF FF FF FF FF FF FF     
   3573 FFFC308C FF FF FF FF FF FF FF FF     
   3574 FFFC3094 FF FF FF FF FF FF FF FF     
   3575 FFFC309C FF FF FF FF FF FF FF FF     
   3576 FFFC30A4 FF FF FF FF FF FF FF FF     
   3577 FFFC30AC FF FF FF FF FF FF FF FF     
   3578 FFFC30B4 FF FF FF FF FF FF FF FF     
   3579 FFFC30BC FF FF FF FF FF FF FF FF     
   3580 FFFC30C4 FF FF FF FF FF FF FF FF     
   3581 FFFC30CC FF FF FF FF FF FF FF FF     
   3582 FFFC30D4 FF FF FF FF FF FF FF FF     
   3583 FFFC30DC FF FF FF FF FF FF FF FF     
   3584 FFFC30E4 FF FF FF FF FF FF FF FF     
   3585 FFFC30EC FF FF FF FF FF FF FF FF     
   3586 FFFC30F4 FF FF FF FF FF FF FF FF     
   3587 FFFC30FC FF FF FF FF FF FF FF FF     
   3588 FFFC3104 FF FF FF FF FF FF FF FF     
   3589 FFFC310C FF FF FF FF FF FF FF FF     
   3590 FFFC3114 FF FF FF FF FF FF FF FF     
   3591 FFFC311C FF FF FF FF FF FF FF FF     
   3592 FFFC3124 FF FF FF FF FF FF FF FF     
   3593 FFFC312C FF FF FF FF FF FF FF FF     
   3594 FFFC3134 FF FF FF FF FF FF FF FF     
   3595 FFFC313C FF FF FF FF FF FF FF FF     
   3596 FFFC3144 FF FF FF FF FF FF FF FF     
   3597 FFFC314C FF FF FF FF FF FF FF FF     
   3598 FFFC3154 FF FF FF FF FF FF FF FF     
   3599 FFFC315C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 12
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3600 FFFC3164 FF FF FF FF FF FF FF FF     
   3601 FFFC316C FF FF FF FF FF FF FF FF     
   3602 FFFC3174 FF FF FF FF FF FF FF FF     
   3603 FFFC317C FF FF FF FF FF FF FF FF     
   3604 FFFC3184 FF FF FF FF FF FF FF FF     
   3605 FFFC318C FF FF FF FF FF FF FF FF     
   3606 FFFC3194 FF FF FF FF FF FF FF FF     
   3607 FFFC319C FF FF FF FF FF FF FF FF     
   3608 FFFC31A4 FF FF FF FF FF FF FF FF     
   3609 FFFC31AC FF FF FF FF FF FF FF FF     
   3610 FFFC31B4 FF FF FF FF FF FF FF FF     
   3611 FFFC31BC FF FF FF FF FF FF FF FF     
   3612 FFFC31C4 FF FF FF FF FF FF FF FF     
   3613 FFFC31CC FF FF FF FF FF FF FF FF     
   3614 FFFC31D4 FF FF FF FF FF FF FF FF     
   3615 FFFC31DC FF FF FF FF FF FF FF FF     
   3616 FFFC31E4 FF FF FF FF FF FF FF FF     
   3617 FFFC31EC FF FF FF FF FF FF FF FF     
   3618 FFFC31F4 FF FF FF FF FF FF FF FF     
   3619 FFFC31FC FF FF FF FF FF FF FF FF     
   3620 FFFC3204 FF FF FF FF FF FF FF FF     
   3621 FFFC320C FF FF FF FF FF FF FF FF     
   3622 FFFC3214 FF FF FF FF FF FF FF FF     
   3623 FFFC321C FF FF FF FF FF FF FF FF     
   3624 FFFC3224 FF FF FF FF FF FF FF FF     
   3625 FFFC322C FF FF FF FF FF FF FF FF     
   3626 FFFC3234 FF FF FF FF FF FF FF FF     
   3627 FFFC323C FF FF FF FF FF FF FF FF     
   3628 FFFC3244 FF FF FF FF FF FF FF FF     
   3629 FFFC324C FF FF FF FF FF FF FF FF     
   3630 FFFC3254 FF FF FF FF FF FF FF FF     
   3631 FFFC325C FF FF FF FF FF FF FF FF     
   3632 FFFC3264 FF FF FF FF FF FF FF FF     
   3633 FFFC326C FF FF FF FF FF FF FF FF     
   3634 FFFC3274 FF FF FF FF FF FF FF FF     
   3635 FFFC327C FF FF FF FF FF FF FF FF     
   3636 FFFC3284 FF FF FF FF FF FF FF FF     
   3637 FFFC328C FF FF FF FF FF FF FF FF     
   3638 FFFC3294 FF FF FF FF FF FF FF FF     
   3639 FFFC329C FF FF FF FF FF FF FF FF     
   3640 FFFC32A4 FF FF FF FF FF FF FF FF     
   3641 FFFC32AC FF FF FF FF FF FF FF FF     
   3642 FFFC32B4 FF FF FF FF FF FF FF FF     
   3643 FFFC32BC FF FF FF FF FF FF FF FF     
   3644 FFFC32C4 FF FF FF FF FF FF FF FF     
   3645 FFFC32CC FF FF FF FF FF FF FF FF     
   3646 FFFC32D4 FF FF FF FF FF FF FF FF     
   3647 FFFC32DC FF FF FF FF FF FF FF FF     
   3648 FFFC32E4 FF FF FF FF FF FF FF FF     
   3649 FFFC32EC FF FF FF FF FF FF FF FF     
   3650 FFFC32F4 FF FF FF FF FF FF FF FF     
   3651 FFFC32FC FF FF FF FF FF FF FF FF     
   3652 FFFC3304 FF FF FF FF FF FF FF FF     
   3653 FFFC330C FF FF FF FF FF FF FF FF     
   3654 FFFC3314 FF FF FF FF FF FF FF FF     
   3655 FFFC331C FF FF FF FF FF FF FF FF     
   3656 FFFC3324 FF FF FF FF FF FF FF FF     
   3657 FFFC332C FF FF FF FF FF FF FF FF     
   3658 FFFC3334 FF FF FF FF FF FF FF FF     
   3659 FFFC333C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 13
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3660 FFFC3344 FF FF FF FF FF FF FF FF     
   3661 FFFC334C FF FF FF FF FF FF FF FF     
   3662 FFFC3354 FF FF FF FF FF FF FF FF     
   3663 FFFC335C FF FF FF FF FF FF FF FF     
   3664 FFFC3364 FF FF FF FF FF FF FF FF     
   3665 FFFC336C FF FF FF FF FF FF FF FF     
   3666 FFFC3374 FF FF FF FF FF FF FF FF     
   3667 FFFC337C FF FF FF FF FF FF FF FF     
   3668 FFFC3384 FF FF FF FF FF FF FF FF     
   3669 FFFC338C FF FF FF FF FF FF FF FF     
   3670 FFFC3394 FF FF FF FF FF FF FF FF     
   3671 FFFC339C FF FF FF FF FF FF FF FF     
   3672 FFFC33A4 FF FF FF FF FF FF FF FF     
   3673 FFFC33AC FF FF FF FF FF FF FF FF     
   3674 FFFC33B4 FF FF FF FF FF FF FF FF     
   3675 FFFC33BC FF FF FF FF FF FF FF FF     
   3676 FFFC33C4 FF FF FF FF FF FF FF FF     
   3677 FFFC33CC FF FF FF FF FF FF FF FF     
   3678 FFFC33D4 FF FF FF FF FF FF FF FF     
   3679 FFFC33DC FF FF FF FF FF FF FF FF     
   3680 FFFC33E4 FF FF FF FF FF FF FF FF     
   3681 FFFC33EC FF FF FF FF FF FF FF FF     
   3682 FFFC33F4 FF FF FF FF FF FF FF FF     
   3683 FFFC33FC FF FF FF FF FF FF FF FF     
   3684 FFFC3404 FF FF FF FF FF FF FF FF     
   3685 FFFC340C FF FF FF FF FF FF FF FF     
   3686 FFFC3414 FF FF FF FF FF FF FF FF     
   3687 FFFC341C FF FF FF FF FF FF FF FF     
   3688 FFFC3424 FF FF FF FF FF FF FF FF     
   3689 FFFC342C FF FF FF FF FF FF FF FF     
   3690 FFFC3434 FF FF FF FF FF FF FF FF     
   3691 FFFC343C FF FF FF FF FF FF FF FF     
   3692 FFFC3444 FF FF FF FF FF FF FF FF     
   3693 FFFC344C FF FF FF FF FF FF FF FF     
   3694 FFFC3454 FF FF FF FF FF FF FF FF     
   3695 FFFC345C FF FF FF FF FF FF FF FF     
   3696 FFFC3464 FF FF FF FF FF FF FF FF     
   3697 FFFC346C FF FF FF FF FF FF FF FF     
   3698 FFFC3474 FF FF FF FF FF FF FF FF     
   3699 FFFC347C FF FF FF FF FF FF FF FF     
   3700 FFFC3484 FF FF FF FF FF FF FF FF     
   3701 FFFC348C FF FF FF FF FF FF FF FF     
   3702 FFFC3494 FF FF FF FF FF FF FF FF     
   3703 FFFC349C FF FF FF FF FF FF FF FF     
   3704 FFFC34A4 FF FF FF FF FF FF FF FF     
   3705 FFFC34AC FF FF FF FF FF FF FF FF     
   3706 FFFC34B4 FF FF FF FF FF FF FF FF     
   3707 FFFC34BC FF FF FF FF FF FF FF FF     
   3708 FFFC34C4 FF FF FF FF FF FF FF FF     
   3709 FFFC34CC FF FF FF FF FF FF FF FF     
   3710 FFFC34D4 FF FF FF FF FF FF FF FF     
   3711 FFFC34DC FF FF FF FF FF FF FF FF     
   3712 FFFC34E4 FF FF FF FF FF FF FF FF     
   3713 FFFC34EC FF FF FF FF FF FF FF FF     
   3714 FFFC34F4 FF FF FF FF FF FF FF FF     
   3715 FFFC34FC FF FF FF FF FF FF FF FF     
   3716 FFFC3504 FF FF FF FF FF FF FF FF     
   3717 FFFC350C FF FF FF FF FF FF FF FF     
   3718 FFFC3514 FF FF FF FF FF FF FF FF     
   3719 FFFC351C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 14
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3720 FFFC3524 FF FF FF FF FF FF FF FF     
   3721 FFFC352C FF FF FF FF FF FF FF FF     
   3722 FFFC3534 FF FF FF FF FF FF FF FF     
   3723 FFFC353C FF FF FF FF FF FF FF FF     
   3724 FFFC3544 FF FF FF FF FF FF FF FF     
   3725 FFFC354C FF FF FF FF FF FF FF FF     
   3726 FFFC3554 FF FF FF FF FF FF FF FF     
   3727 FFFC355C FF FF FF FF FF FF FF FF     
   3728 FFFC3564 FF FF FF FF FF FF FF FF     
   3729 FFFC356C FF FF FF FF FF FF FF FF     
   3730 FFFC3574 FF FF FF FF FF FF FF FF     
   3731 FFFC357C FF FF FF FF FF FF FF FF     
   3732 FFFC3584 FF FF FF FF FF FF FF FF     
   3733 FFFC358C FF FF FF FF FF FF FF FF     
   3734 FFFC3594 FF FF FF FF FF FF FF FF     
   3735 FFFC359C FF FF FF FF FF FF FF FF     
   3736 FFFC35A4 FF FF FF FF FF FF FF FF     
   3737 FFFC35AC FF FF FF FF FF FF FF FF     
   3738 FFFC35B4 FF FF FF FF FF FF FF FF     
   3739 FFFC35BC FF FF FF FF FF FF FF FF     
   3740 FFFC35C4 FF FF FF FF FF FF FF FF     
   3741 FFFC35CC FF FF FF FF FF FF FF FF     
   3742 FFFC35D4 FF FF FF FF FF FF FF FF     
   3743 FFFC35DC FF FF FF FF FF FF FF FF     
   3744 FFFC35E4 FF FF FF FF FF FF FF FF     
   3745 FFFC35EC FF FF FF FF FF FF FF FF     
   3746 FFFC35F4 FF FF FF FF FF FF FF FF     
   3747 FFFC35FC FF FF FF FF FF FF FF FF     
   3748 FFFC3604 FF FF FF FF FF FF FF FF     
   3749 FFFC360C FF FF FF FF FF FF FF FF     
   3750 FFFC3614 FF FF FF FF FF FF FF FF     
   3751 FFFC361C FF FF FF FF FF FF FF FF     
   3752 FFFC3624 FF FF FF FF FF FF FF FF     
   3753 FFFC362C FF FF FF FF FF FF FF FF     
   3754 FFFC3634 FF FF FF FF FF FF FF FF     
   3755 FFFC363C FF FF FF FF FF FF FF FF     
   3756 FFFC3644 FF FF FF FF FF FF FF FF     
   3757 FFFC364C FF FF FF FF FF FF FF FF     
   3758 FFFC3654 FF FF FF FF FF FF FF FF     
   3759 FFFC365C FF FF FF FF FF FF FF FF     
   3760 FFFC3664 FF FF FF FF FF FF FF FF     
   3761 FFFC366C FF FF FF FF FF FF FF FF     
   3762 FFFC3674 FF FF FF FF FF FF FF FF     
   3763 FFFC367C FF FF FF FF FF FF FF FF     
   3764 FFFC3684 FF FF FF FF FF FF FF FF     
   3765 FFFC368C FF FF FF FF FF FF FF FF     
   3766 FFFC3694 FF FF FF FF FF FF FF FF     
   3767 FFFC369C FF FF FF FF FF FF FF FF     
   3768 FFFC36A4 FF FF FF FF FF FF FF FF     
   3769 FFFC36AC FF FF FF FF FF FF FF FF     
   3770 FFFC36B4 FF FF FF FF FF FF FF FF     
   3771 FFFC36BC FF FF FF FF FF FF FF FF     
   3772 FFFC36C4 FF FF FF FF FF FF FF FF     
   3773 FFFC36CC FF FF FF FF FF FF FF FF     
   3774 FFFC36D4 FF FF FF FF FF FF FF FF     
   3775 FFFC36DC FF FF FF FF FF FF FF FF     
   3776 FFFC36E4 FF FF FF FF FF FF FF FF     
   3777 FFFC36EC FF FF FF FF FF FF FF FF     
   3778 FFFC36F4 FF FF FF FF FF FF FF FF     
   3779 FFFC36FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 15
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3780 FFFC3704 FF FF FF FF FF FF FF FF     
   3781 FFFC370C FF FF FF FF FF FF FF FF     
   3782 FFFC3714 FF FF FF FF FF FF FF FF     
   3783 FFFC371C FF FF FF FF FF FF FF FF     
   3784 FFFC3724 FF FF FF FF FF FF FF FF     
   3785 FFFC372C FF FF FF FF FF FF FF FF     
   3786 FFFC3734 FF FF FF FF FF FF FF FF     
   3787 FFFC373C FF FF FF FF FF FF FF FF     
   3788 FFFC3744 FF FF FF FF FF FF FF FF     
   3789 FFFC374C FF FF FF FF FF FF FF FF     
   3790 FFFC3754 FF FF FF FF FF FF FF FF     
   3791 FFFC375C FF FF FF FF FF FF FF FF     
   3792 FFFC3764 FF FF FF FF FF FF FF FF     
   3793 FFFC376C FF FF FF FF FF FF FF FF     
   3794 FFFC3774 FF FF FF FF FF FF FF FF     
   3795 FFFC377C FF FF FF FF FF FF FF FF     
   3796 FFFC3784 FF FF FF FF FF FF FF FF     
   3797 FFFC378C FF FF FF FF FF FF FF FF     
   3798 FFFC3794 FF FF FF FF FF FF FF FF     
   3799 FFFC379C FF FF FF FF FF FF FF FF     
   3800 FFFC37A4 FF FF FF FF FF FF FF FF     
   3801 FFFC37AC FF FF FF FF FF FF FF FF     
   3802 FFFC37B4 FF FF FF FF FF FF FF FF     
   3803 FFFC37BC FF FF FF FF FF FF FF FF     
   3804 FFFC37C4 FF FF FF FF FF FF FF FF     
   3805 FFFC37CC FF FF FF FF FF FF FF FF     
   3806 FFFC37D4 FF FF FF FF FF FF FF FF     
   3807 FFFC37DC FF FF FF FF FF FF FF FF     
   3808 FFFC37E4 FF FF FF FF FF FF FF FF     
   3809 FFFC37EC FF FF FF FF FF FF FF FF     
   3810 FFFC37F4 FF FF FF FF FF FF FF FF     
   3811 FFFC37FC FF FF FF FF FF FF FF FF     
   3812 FFFC3804 FF FF FF FF FF FF FF FF     
   3813 FFFC380C FF FF FF FF FF FF FF FF     
   3814 FFFC3814 FF FF FF FF FF FF FF FF     
   3815 FFFC381C FF FF FF FF FF FF FF FF     
   3816 FFFC3824 FF FF FF FF FF FF FF FF     
   3817 FFFC382C FF FF FF FF FF FF FF FF     
   3818 FFFC3834 FF FF FF FF FF FF FF FF     
   3819 FFFC383C FF FF FF FF FF FF FF FF     
   3820 FFFC3844 FF FF FF FF FF FF FF FF     
   3821 FFFC384C FF FF FF FF FF FF FF FF     
   3822 FFFC3854 FF FF FF FF FF FF FF FF     
   3823 FFFC385C FF FF FF FF FF FF FF FF     
   3824 FFFC3864 FF FF FF FF FF FF FF FF     
   3825 FFFC386C FF FF FF FF FF FF FF FF     
   3826 FFFC3874 FF FF FF FF FF FF FF FF     
   3827 FFFC387C FF FF FF FF FF FF FF FF     
   3828 FFFC3884 FF FF FF FF FF FF FF FF     
   3829 FFFC388C FF FF FF FF FF FF FF FF     
   3830 FFFC3894 FF FF FF FF FF FF FF FF     
   3831 FFFC389C FF FF FF FF FF FF FF FF     
   3832 FFFC38A4 FF FF FF FF FF FF FF FF     
   3833 FFFC38AC FF FF FF FF FF FF FF FF     
   3834 FFFC38B4 FF FF FF FF FF FF FF FF     
   3835 FFFC38BC FF FF FF FF FF FF FF FF     
   3836 FFFC38C4 FF FF FF FF FF FF FF FF     
   3837 FFFC38CC FF FF FF FF FF FF FF FF     
   3838 FFFC38D4 FF FF FF FF FF FF FF FF     
   3839 FFFC38DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 16
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3840 FFFC38E4 FF FF FF FF FF FF FF FF     
   3841 FFFC38EC FF FF FF FF FF FF FF FF     
   3842 FFFC38F4 FF FF FF FF FF FF FF FF     
   3843 FFFC38FC FF FF FF FF FF FF FF FF     
   3844 FFFC3904 FF FF FF FF FF FF FF FF     
   3845 FFFC390C FF FF FF FF FF FF FF FF     
   3846 FFFC3914 FF FF FF FF FF FF FF FF     
   3847 FFFC391C FF FF FF FF FF FF FF FF     
   3848 FFFC3924 FF FF FF FF FF FF FF FF     
   3849 FFFC392C FF FF FF FF FF FF FF FF     
   3850 FFFC3934 FF FF FF FF FF FF FF FF     
   3851 FFFC393C FF FF FF FF FF FF FF FF     
   3852 FFFC3944 FF FF FF FF FF FF FF FF     
   3853 FFFC394C FF FF FF FF FF FF FF FF     
   3854 FFFC3954 FF FF FF FF FF FF FF FF     
   3855 FFFC395C FF FF FF FF FF FF FF FF     
   3856 FFFC3964 FF FF FF FF FF FF FF FF     
   3857 FFFC396C FF FF FF FF FF FF FF FF     
   3858 FFFC3974 FF FF FF FF FF FF FF FF     
   3859 FFFC397C FF FF FF FF FF FF FF FF     
   3860 FFFC3984 FF FF FF FF FF FF FF FF     
   3861 FFFC398C FF FF FF FF FF FF FF FF     
   3862 FFFC3994 FF FF FF FF FF FF FF FF     
   3863 FFFC399C FF FF FF FF FF FF FF FF     
   3864 FFFC39A4 FF FF FF FF FF FF FF FF     
   3865 FFFC39AC FF FF FF FF FF FF FF FF     
   3866 FFFC39B4 FF FF FF FF FF FF FF FF     
   3867 FFFC39BC FF FF FF FF FF FF FF FF     
   3868 FFFC39C4 FF FF FF FF FF FF FF FF     
   3869 FFFC39CC FF FF FF FF FF FF FF FF     
   3870 FFFC39D4 FF FF FF FF FF FF FF FF     
   3871 FFFC39DC FF FF FF FF FF FF FF FF     
   3872 FFFC39E4 FF FF FF FF FF FF FF FF     
   3873 FFFC39EC FF FF FF FF FF FF FF FF     
   3874 FFFC39F4 FF FF FF FF FF FF FF FF     
   3875 FFFC39FC FF FF FF FF FF FF FF FF     
   3876 FFFC3A04 FF FF FF FF FF FF FF FF     
   3877 FFFC3A0C FF FF FF FF FF FF FF FF     
   3878 FFFC3A14 FF FF FF FF FF FF FF FF     
   3879 FFFC3A1C FF FF FF FF FF FF FF FF     
   3880 FFFC3A24 FF FF FF FF FF FF FF FF     
   3881 FFFC3A2C FF FF FF FF FF FF FF FF     
   3882 FFFC3A34 FF FF FF FF FF FF FF FF     
   3883 FFFC3A3C FF FF FF FF FF FF FF FF     
   3884 FFFC3A44 FF FF FF FF FF FF FF FF     
   3885 FFFC3A4C FF FF FF FF FF FF FF FF     
   3886 FFFC3A54 FF FF FF FF FF FF FF FF     
   3887 FFFC3A5C FF FF FF FF FF FF FF FF     
   3888 FFFC3A64 FF FF FF FF FF FF FF FF     
   3889 FFFC3A6C FF FF FF FF FF FF FF FF     
   3890 FFFC3A74 FF FF FF FF FF FF FF FF     
   3891 FFFC3A7C FF FF FF FF FF FF FF FF     
   3892 FFFC3A84 FF FF FF FF FF FF FF FF     
   3893 FFFC3A8C FF FF FF FF FF FF FF FF     
   3894 FFFC3A94 FF FF FF FF FF FF FF FF     
   3895 FFFC3A9C FF FF FF FF FF FF FF FF     
   3896 FFFC3AA4 FF FF FF FF FF FF FF FF     
   3897 FFFC3AAC FF FF FF FF FF FF FF FF     
   3898 FFFC3AB4 FF FF FF FF FF FF FF FF     
   3899 FFFC3ABC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 17
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3900 FFFC3AC4 FF FF FF FF FF FF FF FF     
   3901 FFFC3ACC FF FF FF FF FF FF FF FF     
   3902 FFFC3AD4 FF FF FF FF FF FF FF FF     
   3903 FFFC3ADC FF FF FF FF FF FF FF FF     
   3904 FFFC3AE4 FF FF FF FF FF FF FF FF     
   3905 FFFC3AEC FF FF FF FF FF FF FF FF     
   3906 FFFC3AF4 FF FF FF FF FF FF FF FF     
   3907 FFFC3AFC FF FF FF FF FF FF FF FF     
   3908 FFFC3B04 FF FF FF FF FF FF FF FF     
   3909 FFFC3B0C FF FF FF FF FF FF FF FF     
   3910 FFFC3B14 FF FF FF FF FF FF FF FF     
   3911 FFFC3B1C FF FF FF FF FF FF FF FF     
   3912 FFFC3B24 FF FF FF FF FF FF FF FF     
   3913 FFFC3B2C FF FF FF FF FF FF FF FF     
   3914 FFFC3B34 FF FF FF FF FF FF FF FF     
   3915 FFFC3B3C FF FF FF FF FF FF FF FF     
   3916 FFFC3B44 FF FF FF FF FF FF FF FF     
   3917 FFFC3B4C FF FF FF FF FF FF FF FF     
   3918 FFFC3B54 FF FF FF FF FF FF FF FF     
   3919 FFFC3B5C FF FF FF FF FF FF FF FF     
   3920 FFFC3B64 FF FF FF FF FF FF FF FF     
   3921 FFFC3B6C FF FF FF FF FF FF FF FF     
   3922 FFFC3B74 FF FF FF FF FF FF FF FF     
   3923 FFFC3B7C FF FF FF FF FF FF FF FF     
   3924 FFFC3B84 FF FF FF FF FF FF FF FF     
   3925 FFFC3B8C FF FF FF FF FF FF FF FF     
   3926 FFFC3B94 FF FF FF FF FF FF FF FF     
   3927 FFFC3B9C FF FF FF FF FF FF FF FF     
   3928 FFFC3BA4 FF FF FF FF FF FF FF FF     
   3929 FFFC3BAC FF FF FF FF FF FF FF FF     
   3930 FFFC3BB4 FF FF FF FF FF FF FF FF     
   3931 FFFC3BBC FF FF FF FF FF FF FF FF     
   3932 FFFC3BC4 FF FF FF FF FF FF FF FF     
   3933 FFFC3BCC FF FF FF FF FF FF FF FF     
   3934 FFFC3BD4 FF FF FF FF FF FF FF FF     
   3935 FFFC3BDC FF FF FF FF FF FF FF FF     
   3936 FFFC3BE4 FF FF FF FF FF FF FF FF     
   3937 FFFC3BEC FF FF FF FF FF FF FF FF     
   3938 FFFC3BF4 FF FF FF FF FF FF FF FF     
   3939 FFFC3BFC FF FF FF FF FF FF FF FF     
   3940 FFFC3C04 FF FF FF FF FF FF FF FF     
   3941 FFFC3C0C FF FF FF FF FF FF FF FF     
   3942 FFFC3C14 FF FF FF FF FF FF FF FF     
   3943 FFFC3C1C FF FF FF FF FF FF FF FF     
   3944 FFFC3C24 FF FF FF FF FF FF FF FF     
   3945 FFFC3C2C FF FF FF FF FF FF FF FF     
   3946 FFFC3C34 FF FF FF FF FF FF FF FF     
   3947 FFFC3C3C FF FF FF FF FF FF FF FF     
   3948 FFFC3C44 FF FF FF FF FF FF FF FF     
   3949 FFFC3C4C FF FF FF FF FF FF FF FF     
   3950 FFFC3C54 FF FF FF FF FF FF FF FF     
   3951 FFFC3C5C FF FF FF FF FF FF FF FF     
   3952 FFFC3C64 FF FF FF FF FF FF FF FF     
   3953 FFFC3C6C FF FF FF FF FF FF FF FF     
   3954 FFFC3C74 FF FF FF FF FF FF FF FF     
   3955 FFFC3C7C FF FF FF FF FF FF FF FF     
   3956 FFFC3C84 FF FF FF FF FF FF FF FF     
   3957 FFFC3C8C FF FF FF FF FF FF FF FF     
   3958 FFFC3C94 FF FF FF FF FF FF FF FF     
   3959 FFFC3C9C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 18
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3960 FFFC3CA4 FF FF FF FF FF FF FF FF     
   3961 FFFC3CAC FF FF FF FF FF FF FF FF     
   3962 FFFC3CB4 FF FF FF FF FF FF FF FF     
   3963 FFFC3CBC FF FF FF FF FF FF FF FF     
   3964 FFFC3CC4 FF FF FF FF FF FF FF FF     
   3965 FFFC3CCC FF FF FF FF FF FF FF FF     
   3966 FFFC3CD4 FF FF FF FF FF FF FF FF     
   3967 FFFC3CDC FF FF FF FF FF FF FF FF     
   3968 FFFC3CE4 FF FF FF FF FF FF FF FF     
   3969 FFFC3CEC FF FF FF FF FF FF FF FF     
   3970 FFFC3CF4 FF FF FF FF FF FF FF FF     
   3971 FFFC3CFC FF FF FF FF FF FF FF FF     
   3972 FFFC3D04 FF FF FF FF FF FF FF FF     
   3973 FFFC3D0C FF FF FF FF FF FF FF FF     
   3974 FFFC3D14 FF FF FF FF FF FF FF FF     
   3975 FFFC3D1C FF FF FF FF FF FF FF FF     
   3976 FFFC3D24 FF FF FF FF FF FF FF FF     
   3977 FFFC3D2C FF FF FF FF FF FF FF FF     
   3978 FFFC3D34 FF FF FF FF FF FF FF FF     
   3979 FFFC3D3C FF FF FF FF FF FF FF FF     
   3980 FFFC3D44 FF FF FF FF FF FF FF FF     
   3981 FFFC3D4C FF FF FF FF FF FF FF FF     
   3982 FFFC3D54 FF FF FF FF FF FF FF FF     
   3983 FFFC3D5C FF FF FF FF FF FF FF FF     
   3984 FFFC3D64 FF FF FF FF FF FF FF FF     
   3985 FFFC3D6C FF FF FF FF FF FF FF FF     
   3986 FFFC3D74 FF FF FF FF FF FF FF FF     
   3987 FFFC3D7C FF FF FF FF FF FF FF FF     
   3988 FFFC3D84 FF FF FF FF FF FF FF FF     
   3989 FFFC3D8C FF FF FF FF FF FF FF FF     
   3990 FFFC3D94 FF FF FF FF FF FF FF FF     
   3991 FFFC3D9C FF FF FF FF FF FF FF FF     
   3992 FFFC3DA4 FF FF FF FF FF FF FF FF     
   3993 FFFC3DAC FF FF FF FF FF FF FF FF     
   3994 FFFC3DB4 FF FF FF FF FF FF FF FF     
   3995 FFFC3DBC FF FF FF FF FF FF FF FF     
   3996 FFFC3DC4 FF FF FF FF FF FF FF FF     
   3997 FFFC3DCC FF FF FF FF FF FF FF FF     
   3998 FFFC3DD4 FF FF FF FF FF FF FF FF     
   3999 FFFC3DDC FF FF FF FF FF FF FF FF     
   4000 FFFC3DE4 FF FF FF FF FF FF FF FF     
   4001 FFFC3DEC FF FF FF FF FF FF FF FF     
   4002 FFFC3DF4 FF FF FF FF FF FF FF FF     
   4003 FFFC3DFC FF FF FF FF FF FF FF FF     
   4004 FFFC3E04 FF FF FF FF FF FF FF FF     
   4005 FFFC3E0C FF FF FF FF FF FF FF FF     
   4006 FFFC3E14 FF FF FF FF FF FF FF FF     
   4007 FFFC3E1C FF FF FF FF FF FF FF FF     
   4008 FFFC3E24 FF FF FF FF FF FF FF FF     
   4009 FFFC3E2C FF FF FF FF FF FF FF FF     
   4010 FFFC3E34 FF FF FF FF FF FF FF FF     
   4011 FFFC3E3C FF FF FF FF FF FF FF FF     
   4012 FFFC3E44 FF FF FF FF FF FF FF FF     
   4013 FFFC3E4C FF FF FF FF FF FF FF FF     
   4014 FFFC3E54 FF FF FF FF FF FF FF FF     
   4015 FFFC3E5C FF FF FF FF FF FF FF FF     
   4016 FFFC3E64 FF FF FF FF FF FF FF FF     
   4017 FFFC3E6C FF FF FF FF FF FF FF FF     
   4018 FFFC3E74 FF FF FF FF FF FF FF FF     
   4019 FFFC3E7C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 19
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4020 FFFC3E84 FF FF FF FF FF FF FF FF     
   4021 FFFC3E8C FF FF FF FF FF FF FF FF     
   4022 FFFC3E94 FF FF FF FF FF FF FF FF     
   4023 FFFC3E9C FF FF FF FF FF FF FF FF     
   4024 FFFC3EA4 FF FF FF FF FF FF FF FF     
   4025 FFFC3EAC FF FF FF FF FF FF FF FF     
   4026 FFFC3EB4 FF FF FF FF FF FF FF FF     
   4027 FFFC3EBC FF FF FF FF FF FF FF FF     
   4028 FFFC3EC4 FF FF FF FF FF FF FF FF     
   4029 FFFC3ECC FF FF FF FF FF FF FF FF     
   4030 FFFC3ED4 FF FF FF FF FF FF FF FF     
   4031 FFFC3EDC FF FF FF FF FF FF FF FF     
   4032 FFFC3EE4 FF FF FF FF FF FF FF FF     
   4033 FFFC3EEC FF FF FF FF FF FF FF FF     
   4034 FFFC3EF4 FF FF FF FF FF FF FF FF     
   4035 FFFC3EFC FF FF FF FF FF FF FF FF     
   4036 FFFC3F04 FF FF FF FF FF FF FF FF     
   4037 FFFC3F0C FF FF FF FF FF FF FF FF     
   4038 FFFC3F14 FF FF FF FF FF FF FF FF     
   4039 FFFC3F1C FF FF FF FF FF FF FF FF     
   4040 FFFC3F24 FF FF FF FF FF FF FF FF     
   4041 FFFC3F2C FF FF FF FF FF FF FF FF     
   4042 FFFC3F34 FF FF FF FF FF FF FF FF     
   4043 FFFC3F3C FF FF FF FF FF FF FF FF     
   4044 FFFC3F44 FF FF FF FF FF FF FF FF     
   4045 FFFC3F4C FF FF FF FF FF FF FF FF     
   4046 FFFC3F54 FF FF FF FF FF FF FF FF     
   4047 FFFC3F5C FF FF FF FF FF FF FF FF     
   4048 FFFC3F64 FF FF FF FF FF FF FF FF     
   4049 FFFC3F6C FF FF FF FF FF FF FF FF     
   4050 FFFC3F74 FF FF FF FF FF FF FF FF     
   4051 FFFC3F7C FF FF FF FF FF FF FF FF     
   4052 FFFC3F84 FF FF FF FF FF FF FF FF     
   4053 FFFC3F8C FF FF FF FF FF FF FF FF     
   4054 FFFC3F94 FF FF FF FF FF FF FF FF     
   4055 FFFC3F9C FF FF FF FF FF FF FF FF     
   4056 FFFC3FA4 FF FF FF FF FF FF FF FF     
   4057 FFFC3FAC FF FF FF FF FF FF FF FF     
   4058 FFFC3FB4 FF FF FF FF FF FF FF FF     
   4059 FFFC3FBC FF FF FF FF FF FF FF FF     
   4060 FFFC3FC4 FF FF FF FF FF FF FF FF     
   4061 FFFC3FCC FF FF FF FF FF FF FF FF     
   4062 FFFC3FD4 FF FF FF FF FF FF FF FF     
   4063 FFFC3FDC FF FF FF FF FF FF FF FF     
   4064 FFFC3FE4 FF FF FF FF FF FF FF FF     
   4065 FFFC3FEC FF FF FF FF FF FF FF FF     
   4066 FFFC3FF4 FF FF FF FF FF FF FF FF     
   4067 FFFC3FFC FF FF FF FF FF FF FF FF     
   4068 FFFC4004 FF FF FF FF FF FF FF FF     
   4069 FFFC400C FF FF FF FF FF FF FF FF     
   4070 FFFC4014 FF FF FF FF FF FF FF FF     
   4071 FFFC401C FF FF FF FF FF FF FF FF     
   4072 FFFC4024 FF FF FF FF FF FF FF FF     
   4073 FFFC402C FF FF FF FF FF FF FF FF     
   4074 FFFC4034 FF FF FF FF FF FF FF FF     
   4075 FFFC403C FF FF FF FF FF FF FF FF     
   4076 FFFC4044 FF FF FF FF FF FF FF FF     
   4077 FFFC404C FF FF FF FF FF FF FF FF     
   4078 FFFC4054 FF FF FF FF FF FF FF FF     
   4079 FFFC405C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 20
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4080 FFFC4064 FF FF FF FF FF FF FF FF     
   4081 FFFC406C FF FF FF FF FF FF FF FF     
   4082 FFFC4074 FF FF FF FF FF FF FF FF     
   4083 FFFC407C FF FF FF FF FF FF FF FF     
   4084 FFFC4084 FF FF FF FF FF FF FF FF     
   4085 FFFC408C FF FF FF FF FF FF FF FF     
   4086 FFFC4094 FF FF FF FF FF FF FF FF     
   4087 FFFC409C FF FF FF FF FF FF FF FF     
   4088 FFFC40A4 FF FF FF FF FF FF FF FF     
   4089 FFFC40AC FF FF FF FF FF FF FF FF     
   4090 FFFC40B4 FF FF FF FF FF FF FF FF     
   4091 FFFC40BC FF FF FF FF FF FF FF FF     
   4092 FFFC40C4 FF FF FF FF FF FF FF FF     
   4093 FFFC40CC FF FF FF FF FF FF FF FF     
   4094 FFFC40D4 FF FF FF FF FF FF FF FF     
   4095 FFFC40DC FF FF FF FF FF FF FF FF     
   4096 FFFC40E4 FF FF FF FF FF FF FF FF     
   4097 FFFC40EC FF FF FF FF FF FF FF FF     
   4098 FFFC40F4 FF FF FF FF FF FF FF FF     
   4099 FFFC40FC FF FF FF FF FF FF FF FF     
   4100 FFFC4104 FF FF FF FF FF FF FF FF     
   4101 FFFC410C FF FF FF FF FF FF FF FF     
   4102 FFFC4114 FF FF FF FF FF FF FF FF     
   4103 FFFC411C FF FF FF FF FF FF FF FF     
   4104 FFFC4124 FF FF FF FF FF FF FF FF     
   4105 FFFC412C FF FF FF FF FF FF FF FF     
   4106 FFFC4134 FF FF FF FF FF FF FF FF     
   4107 FFFC413C FF FF FF FF FF FF FF FF     
   4108 FFFC4144 FF FF FF FF FF FF FF FF     
   4109 FFFC414C FF FF FF FF FF FF FF FF     
   4110 FFFC4154 FF FF FF FF FF FF FF FF     
   4111 FFFC415C FF FF FF FF FF FF FF FF     
   4112 FFFC4164 FF FF FF FF FF FF FF FF     
   4113 FFFC416C FF FF FF FF FF FF FF FF     
   4114 FFFC4174 FF FF FF FF FF FF FF FF     
   4115 FFFC417C FF FF FF FF FF FF FF FF     
   4116 FFFC4184 FF FF FF FF FF FF FF FF     
   4117 FFFC418C FF FF FF FF FF FF FF FF     
   4118 FFFC4194 FF FF FF FF FF FF FF FF     
   4119 FFFC419C FF FF FF FF FF FF FF FF     
   4120 FFFC41A4 FF FF FF FF FF FF FF FF     
   4121 FFFC41AC FF FF FF FF FF FF FF FF     
   4122 FFFC41B4 FF FF FF FF FF FF FF FF     
   4123 FFFC41BC FF FF FF FF FF FF FF FF     
   4124 FFFC41C4 FF FF FF FF FF FF FF FF     
   4125 FFFC41CC FF FF FF FF FF FF FF FF     
   4126 FFFC41D4 FF FF FF FF FF FF FF FF     
   4127 FFFC41DC FF FF FF FF FF FF FF FF     
   4128 FFFC41E4 FF FF FF FF FF FF FF FF     
   4129 FFFC41EC FF FF FF FF FF FF FF FF     
   4130 FFFC41F4 FF FF FF FF FF FF FF FF     
   4131 FFFC41FC FF FF FF FF FF FF FF FF     
   4132 FFFC4204 FF FF FF FF FF FF FF FF     
   4133 FFFC420C FF FF FF FF FF FF FF FF     
   4134 FFFC4214 FF FF FF FF FF FF FF FF     
   4135 FFFC421C FF FF FF FF FF FF FF FF     
   4136 FFFC4224 FF FF FF FF FF FF FF FF     
   4137 FFFC422C FF FF FF FF FF FF FF FF     
   4138 FFFC4234 FF FF FF FF FF FF FF FF     
   4139 FFFC423C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 21
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4140 FFFC4244 FF FF FF FF FF FF FF FF     
   4141 FFFC424C FF FF FF FF FF FF FF FF     
   4142 FFFC4254 FF FF FF FF FF FF FF FF     
   4143 FFFC425C FF FF FF FF FF FF FF FF     
   4144 FFFC4264 FF FF FF FF FF FF FF FF     
   4145 FFFC426C FF FF FF FF FF FF FF FF     
   4146 FFFC4274 FF FF FF FF FF FF FF FF     
   4147 FFFC427C FF FF FF FF FF FF FF FF     
   4148 FFFC4284 FF FF FF FF FF FF FF FF     
   4149 FFFC428C FF FF FF FF FF FF FF FF     
   4150 FFFC4294 FF FF FF FF FF FF FF FF     
   4151 FFFC429C FF FF FF FF FF FF FF FF     
   4152 FFFC42A4 FF FF FF FF FF FF FF FF     
   4153 FFFC42AC FF FF FF FF FF FF FF FF     
   4154 FFFC42B4 FF FF FF FF FF FF FF FF     
   4155 FFFC42BC FF FF FF FF FF FF FF FF     
   4156 FFFC42C4 FF FF FF FF FF FF FF FF     
   4157 FFFC42CC FF FF FF FF FF FF FF FF     
   4158 FFFC42D4 FF FF FF FF FF FF FF FF     
   4159 FFFC42DC FF FF FF FF FF FF FF FF     
   4160 FFFC42E4 FF FF FF FF FF FF FF FF     
   4161 FFFC42EC FF FF FF FF FF FF FF FF     
   4162 FFFC42F4 FF FF FF FF FF FF FF FF     
   4163 FFFC42FC FF FF FF FF FF FF FF FF     
   4164 FFFC4304 FF FF FF FF FF FF FF FF     
   4165 FFFC430C FF FF FF FF FF FF FF FF     
   4166 FFFC4314 FF FF FF FF FF FF FF FF     
   4167 FFFC431C FF FF FF FF FF FF FF FF     
   4168 FFFC4324 FF FF FF FF FF FF FF FF     
   4169 FFFC432C FF FF FF FF FF FF FF FF     
   4170 FFFC4334 FF FF FF FF FF FF FF FF     
   4171 FFFC433C FF FF FF FF FF FF FF FF     
   4172 FFFC4344 FF FF FF FF FF FF FF FF     
   4173 FFFC434C FF FF FF FF FF FF FF FF     
   4174 FFFC4354 FF FF FF FF FF FF FF FF     
   4175 FFFC435C FF FF FF FF FF FF FF FF     
   4176 FFFC4364 FF FF FF FF FF FF FF FF     
   4177 FFFC436C FF FF FF FF FF FF FF FF     
   4178 FFFC4374 FF FF FF FF FF FF FF FF     
   4179 FFFC437C FF FF FF FF FF FF FF FF     
   4180 FFFC4384 FF FF FF FF FF FF FF FF     
   4181 FFFC438C FF FF FF FF FF FF FF FF     
   4182 FFFC4394 FF FF FF FF FF FF FF FF     
   4183 FFFC439C FF FF FF FF FF FF FF FF     
   4184 FFFC43A4 FF FF FF FF FF FF FF FF     
   4185 FFFC43AC FF FF FF FF FF FF FF FF     
   4186 FFFC43B4 FF FF FF FF FF FF FF FF     
   4187 FFFC43BC FF FF FF FF FF FF FF FF     
   4188 FFFC43C4 FF FF FF FF FF FF FF FF     
   4189 FFFC43CC FF FF FF FF FF FF FF FF     
   4190 FFFC43D4 FF FF FF FF FF FF FF FF     
   4191 FFFC43DC FF FF FF FF FF FF FF FF     
   4192 FFFC43E4 FF FF FF FF FF FF FF FF     
   4193 FFFC43EC FF FF FF FF FF FF FF FF     
   4194 FFFC43F4 FF FF FF FF FF FF FF FF     
   4195 FFFC43FC FF FF FF FF FF FF FF FF     
   4196 FFFC4404 FF FF FF FF FF FF FF FF     
   4197 FFFC440C FF FF FF FF FF FF FF FF     
   4198 FFFC4414 FF FF FF FF FF FF FF FF     
   4199 FFFC441C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 22
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4200 FFFC4424 FF FF FF FF FF FF FF FF     
   4201 FFFC442C FF FF FF FF FF FF FF FF     
   4202 FFFC4434 FF FF FF FF FF FF FF FF     
   4203 FFFC443C FF FF FF FF FF FF FF FF     
   4204 FFFC4444 FF FF FF FF FF FF FF FF     
   4205 FFFC444C FF FF FF FF FF FF FF FF     
   4206 FFFC4454 FF FF FF FF FF FF FF FF     
   4207 FFFC445C FF FF FF FF FF FF FF FF     
   4208 FFFC4464 FF FF FF FF FF FF FF FF     
   4209 FFFC446C FF FF FF FF FF FF FF FF     
   4210 FFFC4474 FF FF FF FF FF FF FF FF     
   4211 FFFC447C FF FF FF FF FF FF FF FF     
   4212 FFFC4484 FF FF FF FF FF FF FF FF     
   4213 FFFC448C FF FF FF FF FF FF FF FF     
   4214 FFFC4494 FF FF FF FF FF FF FF FF     
   4215 FFFC449C FF FF FF FF FF FF FF FF     
   4216 FFFC44A4 FF FF FF FF FF FF FF FF     
   4217 FFFC44AC FF FF FF FF FF FF FF FF     
   4218 FFFC44B4 FF FF FF FF FF FF FF FF     
   4219 FFFC44BC FF FF FF FF FF FF FF FF     
   4220 FFFC44C4 FF FF FF FF FF FF FF FF     
   4221 FFFC44CC FF FF FF FF FF FF FF FF     
   4222 FFFC44D4 FF FF FF FF FF FF FF FF     
   4223 FFFC44DC FF FF FF FF FF FF FF FF     
   4224 FFFC44E4 FF FF FF FF FF FF FF FF     
   4225 FFFC44EC FF FF FF FF FF FF FF FF     
   4226 FFFC44F4 FF FF FF FF FF FF FF FF     
   4227 FFFC44FC FF FF FF FF FF FF FF FF     
   4228 FFFC4504 FF FF FF FF FF FF FF FF     
   4229 FFFC450C FF FF FF FF FF FF FF FF     
   4230 FFFC4514 FF FF FF FF FF FF FF FF     
   4231 FFFC451C FF FF FF FF FF FF FF FF     
   4232 FFFC4524 FF FF FF FF FF FF FF FF     
   4233 FFFC452C FF FF FF FF FF FF FF FF     
   4234 FFFC4534 FF FF FF FF FF FF FF FF     
   4235 FFFC453C FF FF FF FF FF FF FF FF     
   4236 FFFC4544 FF FF FF FF FF FF FF FF     
   4237 FFFC454C FF FF FF FF FF FF FF FF     
   4238 FFFC4554 FF FF FF FF FF FF FF FF     
   4239 FFFC455C FF FF FF FF FF FF FF FF     
   4240 FFFC4564 FF FF FF FF FF FF FF FF     
   4241 FFFC456C FF FF FF FF FF FF FF FF     
   4242 FFFC4574 FF FF FF FF FF FF FF FF     
   4243 FFFC457C FF FF FF FF FF FF FF FF     
   4244 FFFC4584 FF FF FF FF FF FF FF FF     
   4245 FFFC458C FF FF FF FF FF FF FF FF     
   4246 FFFC4594 FF FF FF FF FF FF FF FF     
   4247 FFFC459C FF FF FF FF FF FF FF FF     
   4248 FFFC45A4 FF FF FF FF FF FF FF FF     
   4249 FFFC45AC FF FF FF FF FF FF FF FF     
   4250 FFFC45B4 FF FF FF FF FF FF FF FF     
   4251 FFFC45BC FF FF FF FF FF FF FF FF     
   4252 FFFC45C4 FF FF FF FF FF FF FF FF     
   4253 FFFC45CC FF FF FF FF FF FF FF FF     
   4254 FFFC45D4 FF FF FF FF FF FF FF FF     
   4255 FFFC45DC FF FF FF FF FF FF FF FF     
   4256 FFFC45E4 FF FF FF FF FF FF FF FF     
   4257 FFFC45EC FF FF FF FF FF FF FF FF     
   4258 FFFC45F4 FF FF FF FF FF FF FF FF     
   4259 FFFC45FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 23
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4260 FFFC4604 FF FF FF FF FF FF FF FF     
   4261 FFFC460C FF FF FF FF FF FF FF FF     
   4262 FFFC4614 FF FF FF FF FF FF FF FF     
   4263 FFFC461C FF FF FF FF FF FF FF FF     
   4264 FFFC4624 FF FF FF FF FF FF FF FF     
   4265 FFFC462C FF FF FF FF FF FF FF FF     
   4266 FFFC4634 FF FF FF FF FF FF FF FF     
   4267 FFFC463C FF FF FF FF FF FF FF FF     
   4268 FFFC4644 FF FF FF FF FF FF FF FF     
   4269 FFFC464C FF FF FF FF FF FF FF FF     
   4270 FFFC4654 FF FF FF FF FF FF FF FF     
   4271 FFFC465C FF FF FF FF FF FF FF FF     
   4272 FFFC4664 FF FF FF FF FF FF FF FF     
   4273 FFFC466C FF FF FF FF FF FF FF FF     
   4274 FFFC4674 FF FF FF FF FF FF FF FF     
   4275 FFFC467C FF FF FF FF FF FF FF FF     
   4276 FFFC4684 FF FF FF FF FF FF FF FF     
   4277 FFFC468C FF FF FF FF FF FF FF FF     
   4278 FFFC4694 FF FF FF FF FF FF FF FF     
   4279 FFFC469C FF FF FF FF FF FF FF FF     
   4280 FFFC46A4 FF FF FF FF FF FF FF FF     
   4281 FFFC46AC FF FF FF FF FF FF FF FF     
   4282 FFFC46B4 FF FF FF FF FF FF FF FF     
   4283 FFFC46BC FF FF FF FF FF FF FF FF     
   4284 FFFC46C4 FF FF FF FF FF FF FF FF     
   4285 FFFC46CC FF FF FF FF FF FF FF FF     
   4286 FFFC46D4 FF FF FF FF FF FF FF FF     
   4287 FFFC46DC FF FF FF FF FF FF FF FF     
   4288 FFFC46E4 FF FF FF FF FF FF FF FF     
   4289 FFFC46EC FF FF FF FF FF FF FF FF     
   4290 FFFC46F4 FF FF FF FF FF FF FF FF     
   4291 FFFC46FC FF FF FF FF FF FF FF FF     
   4292 FFFC4704 FF FF FF FF FF FF FF FF     
   4293 FFFC470C FF FF FF FF FF FF FF FF     
   4294 FFFC4714 FF FF FF FF FF FF FF FF     
   4295 FFFC471C FF FF FF FF FF FF FF FF     
   4296 FFFC4724 FF FF FF FF FF FF FF FF     
   4297 FFFC472C FF FF FF FF FF FF FF FF     
   4298 FFFC4734 FF FF FF FF FF FF FF FF     
   4299 FFFC473C FF FF FF FF FF FF FF FF     
   4300 FFFC4744 FF FF FF FF FF FF FF FF     
   4301 FFFC474C FF FF FF FF FF FF FF FF     
   4302 FFFC4754 FF FF FF FF FF FF FF FF     
   4303 FFFC475C FF FF FF FF FF FF FF FF     
   4304 FFFC4764 FF FF FF FF FF FF FF FF     
   4305 FFFC476C FF FF FF FF FF FF FF FF     
   4306 FFFC4774 FF FF FF FF FF FF FF FF     
   4307 FFFC477C FF FF FF FF FF FF FF FF     
   4308 FFFC4784 FF FF FF FF FF FF FF FF     
   4309 FFFC478C FF FF FF FF FF FF FF FF     
   4310 FFFC4794 FF FF FF FF FF FF FF FF     
   4311 FFFC479C FF FF FF FF FF FF FF FF     
   4312 FFFC47A4 FF FF FF FF FF FF FF FF     
   4313 FFFC47AC FF FF FF FF FF FF FF FF     
   4314 FFFC47B4 FF FF FF FF FF FF FF FF     
   4315 FFFC47BC FF FF FF FF FF FF FF FF     
   4316 FFFC47C4 FF FF FF FF FF FF FF FF     
   4317 FFFC47CC FF FF FF FF FF FF FF FF     
   4318 FFFC47D4 FF FF FF FF FF FF FF FF     
   4319 FFFC47DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 24
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4320 FFFC47E4 FF FF FF FF FF FF FF FF     
   4321 FFFC47EC FF FF FF FF FF FF FF FF     
   4322 FFFC47F4 FF FF FF FF FF FF FF FF     
   4323 FFFC47FC FF FF FF FF FF FF FF FF     
   4324 FFFC4804 FF FF FF FF FF FF FF FF     
   4325 FFFC480C FF FF FF FF FF FF FF FF     
   4326 FFFC4814 FF FF FF FF FF FF FF FF     
   4327 FFFC481C FF FF FF FF FF FF FF FF     
   4328 FFFC4824 FF FF FF FF FF FF FF FF     
   4329 FFFC482C FF FF FF FF FF FF FF FF     
   4330 FFFC4834 FF FF FF FF FF FF FF FF     
   4331 FFFC483C FF FF FF FF FF FF FF FF     
   4332 FFFC4844 FF FF FF FF FF FF FF FF     
   4333 FFFC484C FF FF FF FF FF FF FF FF     
   4334 FFFC4854 FF FF FF FF FF FF FF FF     
   4335 FFFC485C FF FF FF FF FF FF FF FF     
   4336 FFFC4864 FF FF FF FF FF FF FF FF     
   4337 FFFC486C FF FF FF FF FF FF FF FF     
   4338 FFFC4874 FF FF FF FF FF FF FF FF     
   4339 FFFC487C FF FF FF FF FF FF FF FF     
   4340 FFFC4884 FF FF FF FF FF FF FF FF     
   4341 FFFC488C FF FF FF FF FF FF FF FF     
   4342 FFFC4894 FF FF FF FF FF FF FF FF     
   4343 FFFC489C FF FF FF FF FF FF FF FF     
   4344 FFFC48A4 FF FF FF FF FF FF FF FF     
   4345 FFFC48AC FF FF FF FF FF FF FF FF     
   4346 FFFC48B4 FF FF FF FF FF FF FF FF     
   4347 FFFC48BC FF FF FF FF FF FF FF FF     
   4348 FFFC48C4 FF FF FF FF FF FF FF FF     
   4349 FFFC48CC FF FF FF FF FF FF FF FF     
   4350 FFFC48D4 FF FF FF FF FF FF FF FF     
   4351 FFFC48DC FF FF FF FF FF FF FF FF     
   4352 FFFC48E4 FF FF FF FF FF FF FF FF     
   4353 FFFC48EC FF FF FF FF FF FF FF FF     
   4354 FFFC48F4 FF FF FF FF FF FF FF FF     
   4355 FFFC48FC FF FF FF FF FF FF FF FF     
   4356 FFFC4904 FF FF FF FF FF FF FF FF     
   4357 FFFC490C FF FF FF FF FF FF FF FF     
   4358 FFFC4914 FF FF FF FF FF FF FF FF     
   4359 FFFC491C FF FF FF FF FF FF FF FF     
   4360 FFFC4924 FF FF FF FF FF FF FF FF     
   4361 FFFC492C FF FF FF FF FF FF FF FF     
   4362 FFFC4934 FF FF FF FF FF FF FF FF     
   4363 FFFC493C FF FF FF FF FF FF FF FF     
   4364 FFFC4944 FF FF FF FF FF FF FF FF     
   4365 FFFC494C FF FF FF FF FF FF FF FF     
   4366 FFFC4954 FF FF FF FF FF FF FF FF     
   4367 FFFC495C FF FF FF FF FF FF FF FF     
   4368 FFFC4964 FF FF FF FF FF FF FF FF     
   4369 FFFC496C FF FF FF FF FF FF FF FF     
   4370 FFFC4974 FF FF FF FF FF FF FF FF     
   4371 FFFC497C FF FF FF FF FF FF FF FF     
   4372 FFFC4984 FF FF FF FF FF FF FF FF     
   4373 FFFC498C FF FF FF FF FF FF FF FF     
   4374 FFFC4994 FF FF FF FF FF FF FF FF     
   4375 FFFC499C FF FF FF FF FF FF FF FF     
   4376 FFFC49A4 FF FF FF FF FF FF FF FF     
   4377 FFFC49AC FF FF FF FF FF FF FF FF     
   4378 FFFC49B4 FF FF FF FF FF FF FF FF     
   4379 FFFC49BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 25
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4380 FFFC49C4 FF FF FF FF FF FF FF FF     
   4381 FFFC49CC FF FF FF FF FF FF FF FF     
   4382 FFFC49D4 FF FF FF FF FF FF FF FF     
   4383 FFFC49DC FF FF FF FF FF FF FF FF     
   4384 FFFC49E4 FF FF FF FF FF FF FF FF     
   4385 FFFC49EC FF FF FF FF FF FF FF FF     
   4386 FFFC49F4 FF FF FF FF FF FF FF FF     
   4387 FFFC49FC FF FF FF FF FF FF FF FF     
   4388 FFFC4A04 FF FF FF FF FF FF FF FF     
   4389 FFFC4A0C FF FF FF FF FF FF FF FF     
   4390 FFFC4A14 FF FF FF FF FF FF FF FF     
   4391 FFFC4A1C FF FF FF FF FF FF FF FF     
   4392 FFFC4A24 FF FF FF FF FF FF FF FF     
   4393 FFFC4A2C FF FF FF FF FF FF FF FF     
   4394 FFFC4A34 FF FF FF FF FF FF FF FF     
   4395 FFFC4A3C FF FF FF FF FF FF FF FF     
   4396 FFFC4A44 FF FF FF FF FF FF FF FF     
   4397 FFFC4A4C FF FF FF FF FF FF FF FF     
   4398 FFFC4A54 FF FF FF FF FF FF FF FF     
   4399 FFFC4A5C FF FF FF FF FF FF FF FF     
   4400 FFFC4A64 FF FF FF FF FF FF FF FF     
   4401 FFFC4A6C FF FF FF FF FF FF FF FF     
   4402 FFFC4A74 FF FF FF FF FF FF FF FF     
   4403 FFFC4A7C FF FF FF FF FF FF FF FF     
   4404 FFFC4A84 FF FF FF FF FF FF FF FF     
   4405 FFFC4A8C FF FF FF FF FF FF FF FF     
   4406 FFFC4A94 FF FF FF FF FF FF FF FF     
   4407 FFFC4A9C FF FF FF FF FF FF FF FF     
   4408 FFFC4AA4 FF FF FF FF FF FF FF FF     
   4409 FFFC4AAC FF FF FF FF FF FF FF FF     
   4410 FFFC4AB4 FF FF FF FF FF FF FF FF     
   4411 FFFC4ABC FF FF FF FF FF FF FF FF     
   4412 FFFC4AC4 FF FF FF FF FF FF FF FF     
   4413 FFFC4ACC FF FF FF FF FF FF FF FF     
   4414 FFFC4AD4 FF FF FF FF FF FF FF FF     
   4415 FFFC4ADC FF FF FF FF FF FF FF FF     
   4416 FFFC4AE4 FF FF FF FF FF FF FF FF     
   4417 FFFC4AEC FF FF FF FF FF FF FF FF     
   4418 FFFC4AF4 FF FF FF FF FF FF FF FF     
   4419 FFFC4AFC FF FF FF FF FF FF FF FF     
   4420 FFFC4B04 FF FF FF FF FF FF FF FF     
   4421 FFFC4B0C FF FF FF FF FF FF FF FF     
   4422 FFFC4B14 FF FF FF FF FF FF FF FF     
   4423 FFFC4B1C FF FF FF FF FF FF FF FF     
   4424 FFFC4B24 FF FF FF FF FF FF FF FF     
   4425 FFFC4B2C FF FF FF FF FF FF FF FF     
   4426 FFFC4B34 FF FF FF FF FF FF FF FF     
   4427 FFFC4B3C FF FF FF FF FF FF FF FF     
   4428 FFFC4B44 FF FF FF FF FF FF FF FF     
   4429 FFFC4B4C FF FF FF FF FF FF FF FF     
   4430 FFFC4B54 FF FF FF FF FF FF FF FF     
   4431 FFFC4B5C FF FF FF FF FF FF FF FF     
   4432 FFFC4B64 FF FF FF FF FF FF FF FF     
   4433 FFFC4B6C FF FF FF FF FF FF FF FF     
   4434 FFFC4B74 FF FF FF FF FF FF FF FF     
   4435 FFFC4B7C FF FF FF FF FF FF FF FF     
   4436 FFFC4B84 FF FF FF FF FF FF FF FF     
   4437 FFFC4B8C FF FF FF FF FF FF FF FF     
   4438 FFFC4B94 FF FF FF FF FF FF FF FF     
   4439 FFFC4B9C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 26
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4440 FFFC4BA4 FF FF FF FF FF FF FF FF     
   4441 FFFC4BAC FF FF FF FF FF FF FF FF     
   4442 FFFC4BB4 FF FF FF FF FF FF FF FF     
   4443 FFFC4BBC FF FF FF FF FF FF FF FF     
   4444 FFFC4BC4 FF FF FF FF FF FF FF FF     
   4445 FFFC4BCC FF FF FF FF FF FF FF FF     
   4446 FFFC4BD4 FF FF FF FF FF FF FF FF     
   4447 FFFC4BDC FF FF FF FF FF FF FF FF     
   4448 FFFC4BE4 FF FF FF FF FF FF FF FF     
   4449 FFFC4BEC FF FF FF FF FF FF FF FF     
   4450 FFFC4BF4 FF FF FF FF FF FF FF FF     
   4451 FFFC4BFC FF FF FF FF FF FF FF FF     
   4452 FFFC4C04 FF FF FF FF FF FF FF FF     
   4453 FFFC4C0C FF FF FF FF FF FF FF FF     
   4454 FFFC4C14 FF FF FF FF FF FF FF FF     
   4455 FFFC4C1C FF FF FF FF FF FF FF FF     
   4456 FFFC4C24 FF FF FF FF FF FF FF FF     
   4457 FFFC4C2C FF FF FF FF FF FF FF FF     
   4458 FFFC4C34 FF FF FF FF FF FF FF FF     
   4459 FFFC4C3C FF FF FF FF FF FF FF FF     
   4460 FFFC4C44 FF FF FF FF FF FF FF FF     
   4461 FFFC4C4C FF FF FF FF FF FF FF FF     
   4462 FFFC4C54 FF FF FF FF FF FF FF FF     
   4463 FFFC4C5C FF FF FF FF FF FF FF FF     
   4464 FFFC4C64 FF FF FF FF FF FF FF FF     
   4465 FFFC4C6C FF FF FF FF FF FF FF FF     
   4466 FFFC4C74 FF FF FF FF FF FF FF FF     
   4467 FFFC4C7C FF FF FF FF FF FF FF FF     
   4468 FFFC4C84 FF FF FF FF FF FF FF FF     
   4469 FFFC4C8C FF FF FF FF FF FF FF FF     
   4470 FFFC4C94 FF FF FF FF FF FF FF FF     
   4471 FFFC4C9C FF FF FF FF FF FF FF FF     
   4472 FFFC4CA4 FF FF FF FF FF FF FF FF     
   4473 FFFC4CAC FF FF FF FF FF FF FF FF     
   4474 FFFC4CB4 FF FF FF FF FF FF FF FF     
   4475 FFFC4CBC FF FF FF FF FF FF FF FF     
   4476 FFFC4CC4 FF FF FF FF FF FF FF FF     
   4477 FFFC4CCC FF FF FF FF FF FF FF FF     
   4478 FFFC4CD4 FF FF FF FF FF FF FF FF     
   4479 FFFC4CDC FF FF FF FF FF FF FF FF     
   4480 FFFC4CE4 FF FF FF FF FF FF FF FF     
   4481 FFFC4CEC FF FF FF FF FF FF FF FF     
   4482 FFFC4CF4 FF FF FF FF FF FF FF FF     
   4483 FFFC4CFC FF FF FF FF FF FF FF FF     
   4484 FFFC4D04 FF FF FF FF FF FF FF FF     
   4485 FFFC4D0C FF FF FF FF FF FF FF FF     
   4486 FFFC4D14 FF FF FF FF FF FF FF FF     
   4487 FFFC4D1C FF FF FF FF FF FF FF FF     
   4488 FFFC4D24 FF FF FF FF FF FF FF FF     
   4489 FFFC4D2C FF FF FF FF FF FF FF FF     
   4490 FFFC4D34 FF FF FF FF FF FF FF FF     
   4491 FFFC4D3C FF FF FF FF FF FF FF FF     
   4492 FFFC4D44 FF FF FF FF FF FF FF FF     
   4493 FFFC4D4C FF FF FF FF FF FF FF FF     
   4494 FFFC4D54 FF FF FF FF FF FF FF FF     
   4495 FFFC4D5C FF FF FF FF FF FF FF FF     
   4496 FFFC4D64 FF FF FF FF FF FF FF FF     
   4497 FFFC4D6C FF FF FF FF FF FF FF FF     
   4498 FFFC4D74 FF FF FF FF FF FF FF FF     
   4499 FFFC4D7C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 27
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4500 FFFC4D84 FF FF FF FF FF FF FF FF     
   4501 FFFC4D8C FF FF FF FF FF FF FF FF     
   4502 FFFC4D94 FF FF FF FF FF FF FF FF     
   4503 FFFC4D9C FF FF FF FF FF FF FF FF     
   4504 FFFC4DA4 FF FF FF FF FF FF FF FF     
   4505 FFFC4DAC FF FF FF FF FF FF FF FF     
   4506 FFFC4DB4 FF FF FF FF FF FF FF FF     
   4507 FFFC4DBC FF FF FF FF FF FF FF FF     
   4508 FFFC4DC4 FF FF FF FF FF FF FF FF     
   4509 FFFC4DCC FF FF FF FF FF FF FF FF     
   4510 FFFC4DD4 FF FF FF FF FF FF FF FF     
   4511 FFFC4DDC FF FF FF FF FF FF FF FF     
   4512 FFFC4DE4 FF FF FF FF FF FF FF FF     
   4513 FFFC4DEC FF FF FF FF FF FF FF FF     
   4514 FFFC4DF4 FF FF FF FF FF FF FF FF     
   4515 FFFC4DFC FF FF FF FF FF FF FF FF     
   4516 FFFC4E04 FF FF FF FF FF FF FF FF     
   4517 FFFC4E0C FF FF FF FF FF FF FF FF     
   4518 FFFC4E14 FF FF FF FF FF FF FF FF     
   4519 FFFC4E1C FF FF FF FF FF FF FF FF     
   4520 FFFC4E24 FF FF FF FF FF FF FF FF     
   4521 FFFC4E2C FF FF FF FF FF FF FF FF     
   4522 FFFC4E34 FF FF FF FF FF FF FF FF     
   4523 FFFC4E3C FF FF FF FF FF FF FF FF     
   4524 FFFC4E44 FF FF FF FF FF FF FF FF     
   4525 FFFC4E4C FF FF FF FF FF FF FF FF     
   4526 FFFC4E54 FF FF FF FF FF FF FF FF     
   4527 FFFC4E5C FF FF FF FF FF FF FF FF     
   4528 FFFC4E64 FF FF FF FF FF FF FF FF     
   4529 FFFC4E6C FF FF FF FF FF FF FF FF     
   4530 FFFC4E74 FF FF FF FF FF FF FF FF     
   4531 FFFC4E7C FF FF FF FF FF FF FF FF     
   4532 FFFC4E84 FF FF FF FF FF FF FF FF     
   4533 FFFC4E8C FF FF FF FF FF FF FF FF     
   4534 FFFC4E94 FF FF FF FF FF FF FF FF     
   4535 FFFC4E9C FF FF FF FF FF FF FF FF     
   4536 FFFC4EA4 FF FF FF FF FF FF FF FF     
   4537 FFFC4EAC FF FF FF FF FF FF FF FF     
   4538 FFFC4EB4 FF FF FF FF FF FF FF FF     
   4539 FFFC4EBC FF FF FF FF FF FF FF FF     
   4540 FFFC4EC4 FF FF FF FF FF FF FF FF     
   4541 FFFC4ECC FF FF FF FF FF FF FF FF     
   4542 FFFC4ED4 FF FF FF FF FF FF FF FF     
   4543 FFFC4EDC FF FF FF FF FF FF FF FF     
   4544 FFFC4EE4 FF FF FF FF FF FF FF FF     
   4545 FFFC4EEC FF FF FF FF FF FF FF FF     
   4546 FFFC4EF4 FF FF FF FF FF FF FF FF     
   4547 FFFC4EFC FF FF FF FF FF FF FF FF     
   4548 FFFC4F04 FF FF FF FF FF FF FF FF     
   4549 FFFC4F0C FF FF FF FF FF FF FF FF     
   4550 FFFC4F14 FF FF FF FF FF FF FF FF     
   4551 FFFC4F1C FF FF FF FF FF FF FF FF     
   4552 FFFC4F24 FF FF FF FF FF FF FF FF     
   4553 FFFC4F2C FF FF FF FF FF FF FF FF     
   4554 FFFC4F34 FF FF FF FF FF FF FF FF     
   4555 FFFC4F3C FF FF FF FF FF FF FF FF     
   4556 FFFC4F44 FF FF FF FF FF FF FF FF     
   4557 FFFC4F4C FF FF FF FF FF FF FF FF     
   4558 FFFC4F54 FF FF FF FF FF FF FF FF     
   4559 FFFC4F5C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 28
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4560 FFFC4F64 FF FF FF FF FF FF FF FF     
   4561 FFFC4F6C FF FF FF FF FF FF FF FF     
   4562 FFFC4F74 FF FF FF FF FF FF FF FF     
   4563 FFFC4F7C FF FF FF FF FF FF FF FF     
   4564 FFFC4F84 FF FF FF FF FF FF FF FF     
   4565 FFFC4F8C FF FF FF FF FF FF FF FF     
   4566 FFFC4F94 FF FF FF FF FF FF FF FF     
   4567 FFFC4F9C FF FF FF FF FF FF FF FF     
   4568 FFFC4FA4 FF FF FF FF FF FF FF FF     
   4569 FFFC4FAC FF FF FF FF FF FF FF FF     
   4570 FFFC4FB4 FF FF FF FF FF FF FF FF     
   4571 FFFC4FBC FF FF FF FF FF FF FF FF     
   4572 FFFC4FC4 FF FF FF FF FF FF FF FF     
   4573 FFFC4FCC FF FF FF FF FF FF FF FF     
   4574 FFFC4FD4 FF FF FF FF FF FF FF FF     
   4575 FFFC4FDC FF FF FF FF FF FF FF FF     
   4576 FFFC4FE4 FF FF FF FF FF FF FF FF     
   4577 FFFC4FEC FF FF FF FF FF FF FF FF     
   4578 FFFC4FF4 FF FF FF FF FF FF FF FF     
   4579 FFFC4FFC FF FF FF FF FF FF FF FF     
   4580 FFFC5004 FF FF FF FF FF FF FF FF     
   4581 FFFC500C FF FF FF FF FF FF FF FF     
   4582 FFFC5014 FF FF FF FF FF FF FF FF     
   4583 FFFC501C FF FF FF FF FF FF FF FF     
   4584 FFFC5024 FF FF FF FF FF FF FF FF     
   4585 FFFC502C FF FF FF FF FF FF FF FF     
   4586 FFFC5034 FF FF FF FF FF FF FF FF     
   4587 FFFC503C FF FF FF FF FF FF FF FF     
   4588 FFFC5044 FF FF FF FF FF FF FF FF     
   4589 FFFC504C FF FF FF FF FF FF FF FF     
   4590 FFFC5054 FF FF FF FF FF FF FF FF     
   4591 FFFC505C FF FF FF FF FF FF FF FF     
   4592 FFFC5064 FF FF FF FF FF FF FF FF     
   4593 FFFC506C FF FF FF FF FF FF FF FF     
   4594 FFFC5074 FF FF FF FF FF FF FF FF     
   4595 FFFC507C FF FF FF FF FF FF FF FF     
   4596 FFFC5084 FF FF FF FF FF FF FF FF     
   4597 FFFC508C FF FF FF FF FF FF FF FF     
   4598 FFFC5094 FF FF FF FF FF FF FF FF     
   4599 FFFC509C FF FF FF FF FF FF FF FF     
   4600 FFFC50A4 FF FF FF FF FF FF FF FF     
   4601 FFFC50AC FF FF FF FF FF FF FF FF     
   4602 FFFC50B4 FF FF FF FF FF FF FF FF     
   4603 FFFC50BC FF FF FF FF FF FF FF FF     
   4604 FFFC50C4 FF FF FF FF FF FF FF FF     
   4605 FFFC50CC FF FF FF FF FF FF FF FF     
   4606 FFFC50D4 FF FF FF FF FF FF FF FF     
   4607 FFFC50DC FF FF FF FF FF FF FF FF     
   4608 FFFC50E4 FF FF FF FF FF FF FF FF     
   4609 FFFC50EC FF FF FF FF FF FF FF FF     
   4610 FFFC50F4 FF FF FF FF FF FF FF FF     
   4611 FFFC50FC FF FF FF FF FF FF FF FF     
   4612 FFFC5104 FF FF FF FF FF FF FF FF     
   4613 FFFC510C FF FF FF FF FF FF FF FF     
   4614 FFFC5114 FF FF FF FF FF FF FF FF     
   4615 FFFC511C FF FF FF FF FF FF FF FF     
   4616 FFFC5124 FF FF FF FF FF FF FF FF     
   4617 FFFC512C FF FF FF FF FF FF FF FF     
   4618 FFFC5134 FF FF FF FF FF FF FF FF     
   4619 FFFC513C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 29
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4620 FFFC5144 FF FF FF FF FF FF FF FF     
   4621 FFFC514C FF FF FF FF FF FF FF FF     
   4622 FFFC5154 FF FF FF FF FF FF FF FF     
   4623 FFFC515C FF FF FF FF FF FF FF FF     
   4624 FFFC5164 FF FF FF FF FF FF FF FF     
   4625 FFFC516C FF FF FF FF FF FF FF FF     
   4626 FFFC5174 FF FF FF FF FF FF FF FF     
   4627 FFFC517C FF FF FF FF FF FF FF FF     
   4628 FFFC5184 FF FF FF FF FF FF FF FF     
   4629 FFFC518C FF FF FF FF FF FF FF FF     
   4630 FFFC5194 FF FF FF FF FF FF FF FF     
   4631 FFFC519C FF FF FF FF FF FF FF FF     
   4632 FFFC51A4 FF FF FF FF FF FF FF FF     
   4633 FFFC51AC FF FF FF FF FF FF FF FF     
   4634 FFFC51B4 FF FF FF FF FF FF FF FF     
   4635 FFFC51BC FF FF FF FF FF FF FF FF     
   4636 FFFC51C4 FF FF FF FF FF FF FF FF     
   4637 FFFC51CC FF FF FF FF FF FF FF FF     
   4638 FFFC51D4 FF FF FF FF FF FF FF FF     
   4639 FFFC51DC FF FF FF FF FF FF FF FF     
   4640 FFFC51E4 FF FF FF FF FF FF FF FF     
   4641 FFFC51EC FF FF FF FF FF FF FF FF     
   4642 FFFC51F4 FF FF FF FF FF FF FF FF     
   4643 FFFC51FC FF FF FF FF FF FF FF FF     
   4644 FFFC5204 FF FF FF FF FF FF FF FF     
   4645 FFFC520C FF FF FF FF FF FF FF FF     
   4646 FFFC5214 FF FF FF FF FF FF FF FF     
   4647 FFFC521C FF FF FF FF FF FF FF FF     
   4648 FFFC5224 FF FF FF FF FF FF FF FF     
   4649 FFFC522C FF FF FF FF FF FF FF FF     
   4650 FFFC5234 FF FF FF FF FF FF FF FF     
   4651 FFFC523C FF FF FF FF FF FF FF FF     
   4652 FFFC5244 FF FF FF FF FF FF FF FF     
   4653 FFFC524C FF FF FF FF FF FF FF FF     
   4654 FFFC5254 FF FF FF FF FF FF FF FF     
   4655 FFFC525C FF FF FF FF FF FF FF FF     
   4656 FFFC5264 FF FF FF FF FF FF FF FF     
   4657 FFFC526C FF FF FF FF FF FF FF FF     
   4658 FFFC5274 FF FF FF FF FF FF FF FF     
   4659 FFFC527C FF FF FF FF FF FF FF FF     
   4660 FFFC5284 FF FF FF FF FF FF FF FF     
   4661 FFFC528C FF FF FF FF FF FF FF FF     
   4662 FFFC5294 FF FF FF FF FF FF FF FF     
   4663 FFFC529C FF FF FF FF FF FF FF FF     
   4664 FFFC52A4 FF FF FF FF FF FF FF FF     
   4665 FFFC52AC FF FF FF FF FF FF FF FF     
   4666 FFFC52B4 FF FF FF FF FF FF FF FF     
   4667 FFFC52BC FF FF FF FF FF FF FF FF     
   4668 FFFC52C4 FF FF FF FF FF FF FF FF     
   4669 FFFC52CC FF FF FF FF FF FF FF FF     
   4670 FFFC52D4 FF FF FF FF FF FF FF FF     
   4671 FFFC52DC FF FF FF FF FF FF FF FF     
   4672 FFFC52E4 FF FF FF FF FF FF FF FF     
   4673 FFFC52EC FF FF FF FF FF FF FF FF     
   4674 FFFC52F4 FF FF FF FF FF FF FF FF     
   4675 FFFC52FC FF FF FF FF FF FF FF FF     
   4676 FFFC5304 FF FF FF FF FF FF FF FF     
   4677 FFFC530C FF FF FF FF FF FF FF FF     
   4678 FFFC5314 FF FF FF FF FF FF FF FF     
   4679 FFFC531C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 30
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4680 FFFC5324 FF FF FF FF FF FF FF FF     
   4681 FFFC532C FF FF FF FF FF FF FF FF     
   4682 FFFC5334 FF FF FF FF FF FF FF FF     
   4683 FFFC533C FF FF FF FF FF FF FF FF     
   4684 FFFC5344 FF FF FF FF FF FF FF FF     
   4685 FFFC534C FF FF FF FF FF FF FF FF     
   4686 FFFC5354 FF FF FF FF FF FF FF FF     
   4687 FFFC535C FF FF FF FF FF FF FF FF     
   4688 FFFC5364 FF FF FF FF FF FF FF FF     
   4689 FFFC536C FF FF FF FF FF FF FF FF     
   4690 FFFC5374 FF FF FF FF FF FF FF FF     
   4691 FFFC537C FF FF FF FF FF FF FF FF     
   4692 FFFC5384 FF FF FF FF FF FF FF FF     
   4693 FFFC538C FF FF FF FF FF FF FF FF     
   4694 FFFC5394 FF FF FF FF FF FF FF FF     
   4695 FFFC539C FF FF FF FF FF FF FF FF     
   4696 FFFC53A4 FF FF FF FF FF FF FF FF     
   4697 FFFC53AC FF FF FF FF FF FF FF FF     
   4698 FFFC53B4 FF FF FF FF FF FF FF FF     
   4699 FFFC53BC FF FF FF FF FF FF FF FF     
   4700 FFFC53C4 FF FF FF FF FF FF FF FF     
   4701 FFFC53CC FF FF FF FF FF FF FF FF     
   4702 FFFC53D4 FF FF FF FF FF FF FF FF     
   4703 FFFC53DC FF FF FF FF FF FF FF FF     
   4704 FFFC53E4 FF FF FF FF FF FF FF FF     
   4705 FFFC53EC FF FF FF FF FF FF FF FF     
   4706 FFFC53F4 FF FF FF FF FF FF FF FF     
   4707 FFFC53FC FF FF FF FF FF FF FF FF     
   4708 FFFC5404 FF FF FF FF FF FF FF FF     
   4709 FFFC540C FF FF FF FF FF FF FF FF     
   4710 FFFC5414 FF FF FF FF FF FF FF FF     
   4711 FFFC541C FF FF FF FF FF FF FF FF     
   4712 FFFC5424 FF FF FF FF FF FF FF FF     
   4713 FFFC542C FF FF FF FF FF FF FF FF     
   4714 FFFC5434 FF FF FF FF FF FF FF FF     
   4715 FFFC543C FF FF FF FF FF FF FF FF     
   4716 FFFC5444 FF FF FF FF FF FF FF FF     
   4717 FFFC544C FF FF FF FF FF FF FF FF     
   4718 FFFC5454 FF FF FF FF FF FF FF FF     
   4719 FFFC545C FF FF FF FF FF FF FF FF     
   4720 FFFC5464 FF FF FF FF FF FF FF FF     
   4721 FFFC546C FF FF FF FF FF FF FF FF     
   4722 FFFC5474 FF FF FF FF FF FF FF FF     
   4723 FFFC547C FF FF FF FF FF FF FF FF     
   4724 FFFC5484 FF FF FF FF FF FF FF FF     
   4725 FFFC548C FF FF FF FF FF FF FF FF     
   4726 FFFC5494 FF FF FF FF FF FF FF FF     
   4727 FFFC549C FF FF FF FF FF FF FF FF     
   4728 FFFC54A4 FF FF FF FF FF FF FF FF     
   4729 FFFC54AC FF FF FF FF FF FF FF FF     
   4730 FFFC54B4 FF FF FF FF FF FF FF FF     
   4731 FFFC54BC FF FF FF FF FF FF FF FF     
   4732 FFFC54C4 FF FF FF FF FF FF FF FF     
   4733 FFFC54CC FF FF FF FF FF FF FF FF     
   4734 FFFC54D4 FF FF FF FF FF FF FF FF     
   4735 FFFC54DC FF FF FF FF FF FF FF FF     
   4736 FFFC54E4 FF FF FF FF FF FF FF FF     
   4737 FFFC54EC FF FF FF FF FF FF FF FF     
   4738 FFFC54F4 FF FF FF FF FF FF FF FF     
   4739 FFFC54FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 31
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4740 FFFC5504 FF FF FF FF FF FF FF FF     
   4741 FFFC550C FF FF FF FF FF FF FF FF     
   4742 FFFC5514 FF FF FF FF FF FF FF FF     
   4743 FFFC551C FF FF FF FF FF FF FF FF     
   4744 FFFC5524 FF FF FF FF FF FF FF FF     
   4745 FFFC552C FF FF FF FF FF FF FF FF     
   4746 FFFC5534 FF FF FF FF FF FF FF FF     
   4747 FFFC553C FF FF FF FF FF FF FF FF     
   4748 FFFC5544 FF FF FF FF FF FF FF FF     
   4749 FFFC554C FF FF FF FF FF FF FF FF     
   4750 FFFC5554 FF FF FF FF FF FF FF FF     
   4751 FFFC555C FF FF FF FF FF FF FF FF     
   4752 FFFC5564 FF FF FF FF FF FF FF FF     
   4753 FFFC556C FF FF FF FF FF FF FF FF     
   4754 FFFC5574 FF FF FF FF FF FF FF FF     
   4755 FFFC557C FF FF FF FF FF FF FF FF     
   4756 FFFC5584 FF FF FF FF FF FF FF FF     
   4757 FFFC558C FF FF FF FF FF FF FF FF     
   4758 FFFC5594 FF FF FF FF FF FF FF FF     
   4759 FFFC559C FF FF FF FF FF FF FF FF     
   4760 FFFC55A4 FF FF FF FF FF FF FF FF     
   4761 FFFC55AC FF FF FF FF FF FF FF FF     
   4762 FFFC55B4 FF FF FF FF FF FF FF FF     
   4763 FFFC55BC FF FF FF FF FF FF FF FF     
   4764 FFFC55C4 FF FF FF FF FF FF FF FF     
   4765 FFFC55CC FF FF FF FF FF FF FF FF     
   4766 FFFC55D4 FF FF FF FF FF FF FF FF     
   4767 FFFC55DC FF FF FF FF FF FF FF FF     
   4768 FFFC55E4 FF FF FF FF FF FF FF FF     
   4769 FFFC55EC FF FF FF FF FF FF FF FF     
   4770 FFFC55F4 FF FF FF FF FF FF FF FF     
   4771 FFFC55FC FF FF FF FF FF FF FF FF     
   4772 FFFC5604 FF FF FF FF FF FF FF FF     
   4773 FFFC560C FF FF FF FF FF FF FF FF     
   4774 FFFC5614 FF FF FF FF FF FF FF FF     
   4775 FFFC561C FF FF FF FF FF FF FF FF     
   4776 FFFC5624 FF FF FF FF FF FF FF FF     
   4777 FFFC562C FF FF FF FF FF FF FF FF     
   4778 FFFC5634 FF FF FF FF FF FF FF FF     
   4779 FFFC563C FF FF FF FF FF FF FF FF     
   4780 FFFC5644 FF FF FF FF FF FF FF FF     
   4781 FFFC564C FF FF FF FF FF FF FF FF     
   4782 FFFC5654 FF FF FF FF FF FF FF FF     
   4783 FFFC565C FF FF FF FF FF FF FF FF     
   4784 FFFC5664 FF FF FF FF FF FF FF FF     
   4785 FFFC566C FF FF FF FF FF FF FF FF     
   4786 FFFC5674 FF FF FF FF FF FF FF FF     
   4787 FFFC567C FF FF FF FF FF FF FF FF     
   4788 FFFC5684 FF FF FF FF FF FF FF FF     
   4789 FFFC568C FF FF FF FF FF FF FF FF     
   4790 FFFC5694 FF FF FF FF FF FF FF FF     
   4791 FFFC569C FF FF FF FF FF FF FF FF     
   4792 FFFC56A4 FF FF FF FF FF FF FF FF     
   4793 FFFC56AC FF FF FF FF FF FF FF FF     
   4794 FFFC56B4 FF FF FF FF FF FF FF FF     
   4795 FFFC56BC FF FF FF FF FF FF FF FF     
   4796 FFFC56C4 FF FF FF FF FF FF FF FF     
   4797 FFFC56CC FF FF FF FF FF FF FF FF     
   4798 FFFC56D4 FF FF FF FF FF FF FF FF     
   4799 FFFC56DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 32
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4800 FFFC56E4 FF FF FF FF FF FF FF FF     
   4801 FFFC56EC FF FF FF FF FF FF FF FF     
   4802 FFFC56F4 FF FF FF FF FF FF FF FF     
   4803 FFFC56FC FF FF FF FF FF FF FF FF     
   4804 FFFC5704 FF FF FF FF FF FF FF FF     
   4805 FFFC570C FF FF FF FF FF FF FF FF     
   4806 FFFC5714 FF FF FF FF FF FF FF FF     
   4807 FFFC571C FF FF FF FF FF FF FF FF     
   4808 FFFC5724 FF FF FF FF FF FF FF FF     
   4809 FFFC572C FF FF FF FF FF FF FF FF     
   4810 FFFC5734 FF FF FF FF FF FF FF FF     
   4811 FFFC573C FF FF FF FF FF FF FF FF     
   4812 FFFC5744 FF FF FF FF FF FF FF FF     
   4813 FFFC574C FF FF FF FF FF FF FF FF     
   4814 FFFC5754 FF FF FF FF FF FF FF FF     
   4815 FFFC575C FF FF FF FF FF FF FF FF     
   4816 FFFC5764 FF FF FF FF FF FF FF FF     
   4817 FFFC576C FF FF FF FF FF FF FF FF     
   4818 FFFC5774 FF FF FF FF FF FF FF FF     
   4819 FFFC577C FF FF FF FF FF FF FF FF     
   4820 FFFC5784 FF FF FF FF FF FF FF FF     
   4821 FFFC578C FF FF FF FF FF FF FF FF     
   4822 FFFC5794 FF FF FF FF FF FF FF FF     
   4823 FFFC579C FF FF FF FF FF FF FF FF     
   4824 FFFC57A4 FF FF FF FF FF FF FF FF     
   4825 FFFC57AC FF FF FF FF FF FF FF FF     
   4826 FFFC57B4 FF FF FF FF FF FF FF FF     
   4827 FFFC57BC FF FF FF FF FF FF FF FF     
   4828 FFFC57C4 FF FF FF FF FF FF FF FF     
   4829 FFFC57CC FF FF FF FF FF FF FF FF     
   4830 FFFC57D4 FF FF FF FF FF FF FF FF     
   4831 FFFC57DC FF FF FF FF FF FF FF FF     
   4832 FFFC57E4 FF FF FF FF FF FF FF FF     
   4833 FFFC57EC FF FF FF FF FF FF FF FF     
   4834 FFFC57F4 FF FF FF FF FF FF FF FF     
   4835 FFFC57FC FF FF FF FF FF FF FF FF     
   4836 FFFC5804 FF FF FF FF FF FF FF FF     
   4837 FFFC580C FF FF FF FF FF FF FF FF     
   4838 FFFC5814 FF FF FF FF FF FF FF FF     
   4839 FFFC581C FF FF FF FF FF FF FF FF     
   4840 FFFC5824 FF FF FF FF FF FF FF FF     
   4841 FFFC582C FF FF FF FF FF FF FF FF     
   4842 FFFC5834 FF FF FF FF FF FF FF FF     
   4843 FFFC583C FF FF FF FF FF FF FF FF     
   4844 FFFC5844 FF FF FF FF FF FF FF FF     
   4845 FFFC584C FF FF FF FF FF FF FF FF     
   4846 FFFC5854 FF FF FF FF FF FF FF FF     
   4847 FFFC585C FF FF FF FF FF FF FF FF     
   4848 FFFC5864 FF FF FF FF FF FF FF FF     
   4849 FFFC586C FF FF FF FF FF FF FF FF     
   4850 FFFC5874 FF FF FF FF FF FF FF FF     
   4851 FFFC587C FF FF FF FF FF FF FF FF     
   4852 FFFC5884 FF FF FF FF FF FF FF FF     
   4853 FFFC588C FF FF FF FF FF FF FF FF     
   4854 FFFC5894 FF FF FF FF FF FF FF FF     
   4855 FFFC589C FF FF FF FF FF FF FF FF     
   4856 FFFC58A4 FF FF FF FF FF FF FF FF     
   4857 FFFC58AC FF FF FF FF FF FF FF FF     
   4858 FFFC58B4 FF FF FF FF FF FF FF FF     
   4859 FFFC58BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 33
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4860 FFFC58C4 FF FF FF FF FF FF FF FF     
   4861 FFFC58CC FF FF FF FF FF FF FF FF     
   4862 FFFC58D4 FF FF FF FF FF FF FF FF     
   4863 FFFC58DC FF FF FF FF FF FF FF FF     
   4864 FFFC58E4 FF FF FF FF FF FF FF FF     
   4865 FFFC58EC FF FF FF FF FF FF FF FF     
   4866 FFFC58F4 FF FF FF FF FF FF FF FF     
   4867 FFFC58FC FF FF FF FF FF FF FF FF     
   4868 FFFC5904 FF FF FF FF FF FF FF FF     
   4869 FFFC590C FF FF FF FF FF FF FF FF     
   4870 FFFC5914 FF FF FF FF FF FF FF FF     
   4871 FFFC591C FF FF FF FF FF FF FF FF     
   4872 FFFC5924 FF FF FF FF FF FF FF FF     
   4873 FFFC592C FF FF FF FF FF FF FF FF     
   4874 FFFC5934 FF FF FF FF FF FF FF FF     
   4875 FFFC593C FF FF FF FF FF FF FF FF     
   4876 FFFC5944 FF FF FF FF FF FF FF FF     
   4877 FFFC594C FF FF FF FF FF FF FF FF     
   4878 FFFC5954 FF FF FF FF FF FF FF FF     
   4879 FFFC595C FF FF FF FF FF FF FF FF     
   4880 FFFC5964 FF FF FF FF FF FF FF FF     
   4881 FFFC596C FF FF FF FF FF FF FF FF     
   4882 FFFC5974 FF FF FF FF FF FF FF FF     
   4883 FFFC597C FF FF FF FF FF FF FF FF     
   4884 FFFC5984 FF FF FF FF FF FF FF FF     
   4885 FFFC598C FF FF FF FF FF FF FF FF     
   4886 FFFC5994 FF FF FF FF FF FF FF FF     
   4887 FFFC599C FF FF FF FF FF FF FF FF     
   4888 FFFC59A4 FF FF FF FF FF FF FF FF     
   4889 FFFC59AC FF FF FF FF FF FF FF FF     
   4890 FFFC59B4 FF FF FF FF FF FF FF FF     
   4891 FFFC59BC FF FF FF FF FF FF FF FF     
   4892 FFFC59C4 FF FF FF FF FF FF FF FF     
   4893 FFFC59CC FF FF FF FF FF FF FF FF     
   4894 FFFC59D4 FF FF FF FF FF FF FF FF     
   4895 FFFC59DC FF FF FF FF FF FF FF FF     
   4896 FFFC59E4 FF FF FF FF FF FF FF FF     
   4897 FFFC59EC FF FF FF FF FF FF FF FF     
   4898 FFFC59F4 FF FF FF FF FF FF FF FF     
   4899 FFFC59FC FF FF FF FF FF FF FF FF     
   4900 FFFC5A04 FF FF FF FF FF FF FF FF     
   4901 FFFC5A0C FF FF FF FF FF FF FF FF     
   4902 FFFC5A14 FF FF FF FF FF FF FF FF     
   4903 FFFC5A1C FF FF FF FF FF FF FF FF     
   4904 FFFC5A24 FF FF FF FF FF FF FF FF     
   4905 FFFC5A2C FF FF FF FF FF FF FF FF     
   4906 FFFC5A34 FF FF FF FF FF FF FF FF     
   4907 FFFC5A3C FF FF FF FF FF FF FF FF     
   4908 FFFC5A44 FF FF FF FF FF FF FF FF     
   4909 FFFC5A4C FF FF FF FF FF FF FF FF     
   4910 FFFC5A54 FF FF FF FF FF FF FF FF     
   4911 FFFC5A5C FF FF FF FF FF FF FF FF     
   4912 FFFC5A64 FF FF FF FF FF FF FF FF     
   4913 FFFC5A6C FF FF FF FF FF FF FF FF     
   4914 FFFC5A74 FF FF FF FF FF FF FF FF     
   4915 FFFC5A7C FF FF FF FF FF FF FF FF     
   4916 FFFC5A84 FF FF FF FF FF FF FF FF     
   4917 FFFC5A8C FF FF FF FF FF FF FF FF     
   4918 FFFC5A94 FF FF FF FF FF FF FF FF     
   4919 FFFC5A9C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 34
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4920 FFFC5AA4 FF FF FF FF FF FF FF FF     
   4921 FFFC5AAC FF FF FF FF FF FF FF FF     
   4922 FFFC5AB4 FF FF FF FF FF FF FF FF     
   4923 FFFC5ABC FF FF FF FF FF FF FF FF     
   4924 FFFC5AC4 FF FF FF FF FF FF FF FF     
   4925 FFFC5ACC FF FF FF FF FF FF FF FF     
   4926 FFFC5AD4 FF FF FF FF FF FF FF FF     
   4927 FFFC5ADC FF FF FF FF FF FF FF FF     
   4928 FFFC5AE4 FF FF FF FF FF FF FF FF     
   4929 FFFC5AEC FF FF FF FF FF FF FF FF     
   4930 FFFC5AF4 FF FF FF FF FF FF FF FF     
   4931 FFFC5AFC FF FF FF FF FF FF FF FF     
   4932 FFFC5B04 FF FF FF FF FF FF FF FF     
   4933 FFFC5B0C FF FF FF FF FF FF FF FF     
   4934 FFFC5B14 FF FF FF FF FF FF FF FF     
   4935 FFFC5B1C FF FF FF FF FF FF FF FF     
   4936 FFFC5B24 FF FF FF FF FF FF FF FF     
   4937 FFFC5B2C FF FF FF FF FF FF FF FF     
   4938 FFFC5B34 FF FF FF FF FF FF FF FF     
   4939 FFFC5B3C FF FF FF FF FF FF FF FF     
   4940 FFFC5B44 FF FF FF FF FF FF FF FF     
   4941 FFFC5B4C FF FF FF FF FF FF FF FF     
   4942 FFFC5B54 FF FF FF FF FF FF FF FF     
   4943 FFFC5B5C FF FF FF FF FF FF FF FF     
   4944 FFFC5B64 FF FF FF FF FF FF FF FF     
   4945 FFFC5B6C FF FF FF FF FF FF FF FF     
   4946 FFFC5B74 FF FF FF FF FF FF FF FF     
   4947 FFFC5B7C FF FF FF FF FF FF FF FF     
   4948 FFFC5B84 FF FF FF FF FF FF FF FF     
   4949 FFFC5B8C FF FF FF FF FF FF FF FF     
   4950 FFFC5B94 FF FF FF FF FF FF FF FF     
   4951 FFFC5B9C FF FF FF FF FF FF FF FF     
   4952 FFFC5BA4 FF FF FF FF FF FF FF FF     
   4953 FFFC5BAC FF FF FF FF FF FF FF FF     
   4954 FFFC5BB4 FF FF FF FF FF FF FF FF     
   4955 FFFC5BBC FF FF FF FF FF FF FF FF     
   4956 FFFC5BC4 FF FF FF FF FF FF FF FF     
   4957 FFFC5BCC FF FF FF FF FF FF FF FF     
   4958 FFFC5BD4 FF FF FF FF FF FF FF FF     
   4959 FFFC5BDC FF FF FF FF FF FF FF FF     
   4960 FFFC5BE4 FF FF FF FF FF FF FF FF     
   4961 FFFC5BEC FF FF FF FF FF FF FF FF     
   4962 FFFC5BF4 FF FF FF FF FF FF FF FF     
   4963 FFFC5BFC FF FF FF FF FF FF FF FF     
   4964 FFFC5C04 FF FF FF FF FF FF FF FF     
   4965 FFFC5C0C FF FF FF FF FF FF FF FF     
   4966 FFFC5C14 FF FF FF FF FF FF FF FF     
   4967 FFFC5C1C FF FF FF FF FF FF FF FF     
   4968 FFFC5C24 FF FF FF FF FF FF FF FF     
   4969 FFFC5C2C FF FF FF FF FF FF FF FF     
   4970 FFFC5C34 FF FF FF FF FF FF FF FF     
   4971 FFFC5C3C FF FF FF FF FF FF FF FF     
   4972 FFFC5C44 FF FF FF FF FF FF FF FF     
   4973 FFFC5C4C FF FF FF FF FF FF FF FF     
   4974 FFFC5C54 FF FF FF FF FF FF FF FF     
   4975 FFFC5C5C FF FF FF FF FF FF FF FF     
   4976 FFFC5C64 FF FF FF FF FF FF FF FF     
   4977 FFFC5C6C FF FF FF FF FF FF FF FF     
   4978 FFFC5C74 FF FF FF FF FF FF FF FF     
   4979 FFFC5C7C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 35
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4980 FFFC5C84 FF FF FF FF FF FF FF FF     
   4981 FFFC5C8C FF FF FF FF FF FF FF FF     
   4982 FFFC5C94 FF FF FF FF FF FF FF FF     
   4983 FFFC5C9C FF FF FF FF FF FF FF FF     
   4984 FFFC5CA4 FF FF FF FF FF FF FF FF     
   4985 FFFC5CAC FF FF FF FF FF FF FF FF     
   4986 FFFC5CB4 FF FF FF FF FF FF FF FF     
   4987 FFFC5CBC FF FF FF FF FF FF FF FF     
   4988 FFFC5CC4 FF FF FF FF FF FF FF FF     
   4989 FFFC5CCC FF FF FF FF FF FF FF FF     
   4990 FFFC5CD4 FF FF FF FF FF FF FF FF     
   4991 FFFC5CDC FF FF FF FF FF FF FF FF     
   4992 FFFC5CE4 FF FF FF FF FF FF FF FF     
   4993 FFFC5CEC FF FF FF FF FF FF FF FF     
   4994 FFFC5CF4 FF FF FF FF FF FF FF FF     
   4995 FFFC5CFC FF FF FF FF FF FF FF FF     
   4996 FFFC5D04 FF FF FF FF FF FF FF FF     
   4997 FFFC5D0C FF FF FF FF FF FF FF FF     
   4998 FFFC5D14 FF FF FF FF FF FF FF FF     
   4999 FFFC5D1C FF FF FF FF FF FF FF FF     
   5000 FFFC5D24 FF FF FF FF FF FF FF FF     
   5001 FFFC5D2C FF FF FF FF FF FF FF FF     
   5002 FFFC5D34 FF FF FF FF FF FF FF FF     
   5003 FFFC5D3C FF FF FF FF FF FF FF FF     
   5004 FFFC5D44 FF FF FF FF FF FF FF FF     
   5005 FFFC5D4C FF FF FF FF FF FF FF FF     
   5006 FFFC5D54 FF FF FF FF FF FF FF FF     
   5007 FFFC5D5C FF FF FF FF FF FF FF FF     
   5008 FFFC5D64 FF FF FF FF FF FF FF FF     
   5009 FFFC5D6C FF FF FF FF FF FF FF FF     
   5010 FFFC5D74 FF FF FF FF FF FF FF FF     
   5011 FFFC5D7C FF FF FF FF FF FF FF FF     
   5012 FFFC5D84 FF FF FF FF FF FF FF FF     
   5013 FFFC5D8C FF FF FF FF FF FF FF FF     
   5014 FFFC5D94 FF FF FF FF FF FF FF FF     
   5015 FFFC5D9C FF FF FF FF FF FF FF FF     
   5016 FFFC5DA4 FF FF FF FF FF FF FF FF     
   5017 FFFC5DAC FF FF FF FF FF FF FF FF     
   5018 FFFC5DB4 FF FF FF FF FF FF FF FF     
   5019 FFFC5DBC FF FF FF FF FF FF FF FF     
   5020 FFFC5DC4 FF FF FF FF FF FF FF FF     
   5021 FFFC5DCC FF FF FF FF FF FF FF FF     
   5022 FFFC5DD4 FF FF FF FF FF FF FF FF     
   5023 FFFC5DDC FF FF FF FF FF FF FF FF     
   5024 FFFC5DE4 FF FF FF FF FF FF FF FF     
   5025 FFFC5DEC FF FF FF FF FF FF FF FF     
   5026 FFFC5DF4 FF FF FF FF FF FF FF FF     
   5027 FFFC5DFC FF FF FF FF FF FF FF FF     
   5028 FFFC5E04 FF FF FF FF FF FF FF FF     
   5029 FFFC5E0C FF FF FF FF FF FF FF FF     
   5030 FFFC5E14 FF FF FF FF FF FF FF FF     
   5031 FFFC5E1C FF FF FF FF FF FF FF FF     
   5032 FFFC5E24 FF FF FF FF FF FF FF FF     
   5033 FFFC5E2C FF FF FF FF FF FF FF FF     
   5034 FFFC5E34 FF FF FF FF FF FF FF FF     
   5035 FFFC5E3C FF FF FF FF FF FF FF FF     
   5036 FFFC5E44 FF FF FF FF FF FF FF FF     
   5037 FFFC5E4C FF FF FF FF FF FF FF FF     
   5038 FFFC5E54 FF FF FF FF FF FF FF FF     
   5039 FFFC5E5C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 36
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5040 FFFC5E64 FF FF FF FF FF FF FF FF     
   5041 FFFC5E6C FF FF FF FF FF FF FF FF     
   5042 FFFC5E74 FF FF FF FF FF FF FF FF     
   5043 FFFC5E7C FF FF FF FF FF FF FF FF     
   5044 FFFC5E84 FF FF FF FF FF FF FF FF     
   5045 FFFC5E8C FF FF FF FF FF FF FF FF     
   5046 FFFC5E94 FF FF FF FF FF FF FF FF     
   5047 FFFC5E9C FF FF FF FF FF FF FF FF     
   5048 FFFC5EA4 FF FF FF FF FF FF FF FF     
   5049 FFFC5EAC FF FF FF FF FF FF FF FF     
   5050 FFFC5EB4 FF FF FF FF FF FF FF FF     
   5051 FFFC5EBC FF FF FF FF FF FF FF FF     
   5052 FFFC5EC4 FF FF FF FF FF FF FF FF     
   5053 FFFC5ECC FF FF FF FF FF FF FF FF     
   5054 FFFC5ED4 FF FF FF FF FF FF FF FF     
   5055 FFFC5EDC FF FF FF FF FF FF FF FF     
   5056 FFFC5EE4 FF FF FF FF FF FF FF FF     
   5057 FFFC5EEC FF FF FF FF FF FF FF FF     
   5058 FFFC5EF4 FF FF FF FF FF FF FF FF     
   5059 FFFC5EFC FF FF FF FF FF FF FF FF     
   5060 FFFC5F04 FF FF FF FF FF FF FF FF     
   5061 FFFC5F0C FF FF FF FF FF FF FF FF     
   5062 FFFC5F14 FF FF FF FF FF FF FF FF     
   5063 FFFC5F1C FF FF FF FF FF FF FF FF     
   5064 FFFC5F24 FF FF FF FF FF FF FF FF     
   5065 FFFC5F2C FF FF FF FF FF FF FF FF     
   5066 FFFC5F34 FF FF FF FF FF FF FF FF     
   5067 FFFC5F3C FF FF FF FF FF FF FF FF     
   5068 FFFC5F44 FF FF FF FF FF FF FF FF     
   5069 FFFC5F4C FF FF FF FF FF FF FF FF     
   5070 FFFC5F54 FF FF FF FF FF FF FF FF     
   5071 FFFC5F5C FF FF FF FF FF FF FF FF     
   5072 FFFC5F64 FF FF FF FF FF FF FF FF     
   5073 FFFC5F6C FF FF FF FF FF FF FF FF     
   5074 FFFC5F74 FF FF FF FF FF FF FF FF     
   5075 FFFC5F7C FF FF FF FF FF FF FF FF     
   5076 FFFC5F84 FF FF FF FF FF FF FF FF     
   5077 FFFC5F8C FF FF FF FF FF FF FF FF     
   5078 FFFC5F94 FF FF FF FF FF FF FF FF     
   5079 FFFC5F9C FF FF FF FF FF FF FF FF     
   5080 FFFC5FA4 FF FF FF FF FF FF FF FF     
   5081 FFFC5FAC FF FF FF FF FF FF FF FF     
   5082 FFFC5FB4 FF FF FF FF FF FF FF FF     
   5083 FFFC5FBC FF FF FF FF FF FF FF FF     
   5084 FFFC5FC4 FF FF FF FF FF FF FF FF     
   5085 FFFC5FCC FF FF FF FF FF FF FF FF     
   5086 FFFC5FD4 FF FF FF FF FF FF FF FF     
   5087 FFFC5FDC FF FF FF FF FF FF FF FF     
   5088 FFFC5FE4 FF FF FF FF FF FF FF FF     
   5089 FFFC5FEC FF FF FF FF FF FF FF FF     
   5090 FFFC5FF4 FF FF FF FF FF FF FF FF     
   5091 FFFC5FFC FF FF FF FF FF FF FF FF     
   5092 FFFC6004 FF FF FF FF FF FF FF FF     
   5093 FFFC600C FF FF FF FF FF FF FF FF     
   5094 FFFC6014 FF FF FF FF FF FF FF FF     
   5095 FFFC601C FF FF FF FF FF FF FF FF     
   5096 FFFC6024 FF FF FF FF FF FF FF FF     
   5097 FFFC602C FF FF FF FF FF FF FF FF     
   5098 FFFC6034 FF FF FF FF FF FF FF FF     
   5099 FFFC603C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 37
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5100 FFFC6044 FF FF FF FF FF FF FF FF     
   5101 FFFC604C FF FF FF FF FF FF FF FF     
   5102 FFFC6054 FF FF FF FF FF FF FF FF     
   5103 FFFC605C FF FF FF FF FF FF FF FF     
   5104 FFFC6064 FF FF FF FF FF FF FF FF     
   5105 FFFC606C FF FF FF FF FF FF FF FF     
   5106 FFFC6074 FF FF FF FF FF FF FF FF     
   5107 FFFC607C FF FF FF FF FF FF FF FF     
   5108 FFFC6084 FF FF FF FF FF FF FF FF     
   5109 FFFC608C FF FF FF FF FF FF FF FF     
   5110 FFFC6094 FF FF FF FF FF FF FF FF     
   5111 FFFC609C FF FF FF FF FF FF FF FF     
   5112 FFFC60A4 FF FF FF FF FF FF FF FF     
   5113 FFFC60AC FF FF FF FF FF FF FF FF     
   5114 FFFC60B4 FF FF FF FF FF FF FF FF     
   5115 FFFC60BC FF FF FF FF FF FF FF FF     
   5116 FFFC60C4 FF FF FF FF FF FF FF FF     
   5117 FFFC60CC FF FF FF FF FF FF FF FF     
   5118 FFFC60D4 FF FF FF FF FF FF FF FF     
   5119 FFFC60DC FF FF FF FF FF FF FF FF     
   5120 FFFC60E4 FF FF FF FF FF FF FF FF     
   5121 FFFC60EC FF FF FF FF FF FF FF FF     
   5122 FFFC60F4 FF FF FF FF FF FF FF FF     
   5123 FFFC60FC FF FF FF FF FF FF FF FF     
   5124 FFFC6104 FF FF FF FF FF FF FF FF     
   5125 FFFC610C FF FF FF FF FF FF FF FF     
   5126 FFFC6114 FF FF FF FF FF FF FF FF     
   5127 FFFC611C FF FF FF FF FF FF FF FF     
   5128 FFFC6124 FF FF FF FF FF FF FF FF     
   5129 FFFC612C FF FF FF FF FF FF FF FF     
   5130 FFFC6134 FF FF FF FF FF FF FF FF     
   5131 FFFC613C FF FF FF FF FF FF FF FF     
   5132 FFFC6144 FF FF FF FF FF FF FF FF     
   5133 FFFC614C FF FF FF FF FF FF FF FF     
   5134 FFFC6154 FF FF FF FF FF FF FF FF     
   5135 FFFC615C FF FF FF FF FF FF FF FF     
   5136 FFFC6164 FF FF FF FF FF FF FF FF     
   5137 FFFC616C FF FF FF FF FF FF FF FF     
   5138 FFFC6174 FF FF FF FF FF FF FF FF     
   5139 FFFC617C FF FF FF FF FF FF FF FF     
   5140 FFFC6184 FF FF FF FF FF FF FF FF     
   5141 FFFC618C FF FF FF FF FF FF FF FF     
   5142 FFFC6194 FF FF FF FF FF FF FF FF     
   5143 FFFC619C FF FF FF FF FF FF FF FF     
   5144 FFFC61A4 FF FF FF FF FF FF FF FF     
   5145 FFFC61AC FF FF FF FF FF FF FF FF     
   5146 FFFC61B4 FF FF FF FF FF FF FF FF     
   5147 FFFC61BC FF FF FF FF FF FF FF FF     
   5148 FFFC61C4 FF FF FF FF FF FF FF FF     
   5149 FFFC61CC FF FF FF FF FF FF FF FF     
   5150 FFFC61D4 FF FF FF FF FF FF FF FF     
   5151 FFFC61DC FF FF FF FF FF FF FF FF     
   5152 FFFC61E4 FF FF FF FF FF FF FF FF     
   5153 FFFC61EC FF FF FF FF FF FF FF FF     
   5154 FFFC61F4 FF FF FF FF FF FF FF FF     
   5155 FFFC61FC FF FF FF FF FF FF FF FF     
   5156 FFFC6204 FF FF FF FF FF FF FF FF     
   5157 FFFC620C FF FF FF FF FF FF FF FF     
   5158 FFFC6214 FF FF FF FF FF FF FF FF     
   5159 FFFC621C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 38
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5160 FFFC6224 FF FF FF FF FF FF FF FF     
   5161 FFFC622C FF FF FF FF FF FF FF FF     
   5162 FFFC6234 FF FF FF FF FF FF FF FF     
   5163 FFFC623C FF FF FF FF FF FF FF FF     
   5164 FFFC6244 FF FF FF FF FF FF FF FF     
   5165 FFFC624C FF FF FF FF FF FF FF FF     
   5166 FFFC6254 FF FF FF FF FF FF FF FF     
   5167 FFFC625C FF FF FF FF FF FF FF FF     
   5168 FFFC6264 FF FF FF FF FF FF FF FF     
   5169 FFFC626C FF FF FF FF FF FF FF FF     
   5170 FFFC6274 FF FF FF FF FF FF FF FF     
   5171 FFFC627C FF FF FF FF FF FF FF FF     
   5172 FFFC6284 FF FF FF FF FF FF FF FF     
   5173 FFFC628C FF FF FF FF FF FF FF FF     
   5174 FFFC6294 FF FF FF FF FF FF FF FF     
   5175 FFFC629C FF FF FF FF FF FF FF FF     
   5176 FFFC62A4 FF FF FF FF FF FF FF FF     
   5177 FFFC62AC FF FF FF FF FF FF FF FF     
   5178 FFFC62B4 FF FF FF FF FF FF FF FF     
   5179 FFFC62BC FF FF FF FF FF FF FF FF     
   5180 FFFC62C4 FF FF FF FF FF FF FF FF     
   5181 FFFC62CC FF FF FF FF FF FF FF FF     
   5182 FFFC62D4 FF FF FF FF FF FF FF FF     
   5183 FFFC62DC FF FF FF FF FF FF FF FF     
   5184 FFFC62E4 FF FF FF FF FF FF FF FF     
   5185 FFFC62EC FF FF FF FF FF FF FF FF     
   5186 FFFC62F4 FF FF FF FF FF FF FF FF     
   5187 FFFC62FC FF FF FF FF FF FF FF FF     
   5188 FFFC6304 FF FF FF FF FF FF FF FF     
   5189 FFFC630C FF FF FF FF FF FF FF FF     
   5190 FFFC6314 FF FF FF FF FF FF FF FF     
   5191 FFFC631C FF FF FF FF FF FF FF FF     
   5192 FFFC6324 FF FF FF FF FF FF FF FF     
   5193 FFFC632C FF FF FF FF FF FF FF FF     
   5194 FFFC6334 FF FF FF FF FF FF FF FF     
   5195 FFFC633C FF FF FF FF FF FF FF FF     
   5196 FFFC6344 FF FF FF FF FF FF FF FF     
   5197 FFFC634C FF FF FF FF FF FF FF FF     
   5198 FFFC6354 FF FF FF FF FF FF FF FF     
   5199 FFFC635C FF FF FF FF FF FF FF FF     
   5200 FFFC6364 FF FF FF FF FF FF FF FF     
   5201 FFFC636C FF FF FF FF FF FF FF FF     
   5202 FFFC6374 FF FF FF FF FF FF FF FF     
   5203 FFFC637C FF FF FF FF FF FF FF FF     
   5204 FFFC6384 FF FF FF FF FF FF FF FF     
   5205 FFFC638C FF FF FF FF FF FF FF FF     
   5206 FFFC6394 FF FF FF FF FF FF FF FF     
   5207 FFFC639C FF FF FF FF FF FF FF FF     
   5208 FFFC63A4 FF FF FF FF FF FF FF FF     
   5209 FFFC63AC FF FF FF FF FF FF FF FF     
   5210 FFFC63B4 FF FF FF FF FF FF FF FF     
   5211 FFFC63BC FF FF FF FF FF FF FF FF     
   5212 FFFC63C4 FF FF FF FF FF FF FF FF     
   5213 FFFC63CC FF FF FF FF FF FF FF FF     
   5214 FFFC63D4 FF FF FF FF FF FF FF FF     
   5215 FFFC63DC FF FF FF FF FF FF FF FF     
   5216 FFFC63E4 FF FF FF FF FF FF FF FF     
   5217 FFFC63EC FF FF FF FF FF FF FF FF     
   5218 FFFC63F4 FF FF FF FF FF FF FF FF     
   5219 FFFC63FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 39
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5220 FFFC6404 FF FF FF FF FF FF FF FF     
   5221 FFFC640C FF FF FF FF FF FF FF FF     
   5222 FFFC6414 FF FF FF FF FF FF FF FF     
   5223 FFFC641C FF FF FF FF FF FF FF FF     
   5224 FFFC6424 FF FF FF FF FF FF FF FF     
   5225 FFFC642C FF FF FF FF FF FF FF FF     
   5226 FFFC6434 FF FF FF FF FF FF FF FF     
   5227 FFFC643C FF FF FF FF FF FF FF FF     
   5228 FFFC6444 FF FF FF FF FF FF FF FF     
   5229 FFFC644C FF FF FF FF FF FF FF FF     
   5230 FFFC6454 FF FF FF FF FF FF FF FF     
   5231 FFFC645C FF FF FF FF FF FF FF FF     
   5232 FFFC6464 FF FF FF FF FF FF FF FF     
   5233 FFFC646C FF FF FF FF FF FF FF FF     
   5234 FFFC6474 FF FF FF FF FF FF FF FF     
   5235 FFFC647C FF FF FF FF FF FF FF FF     
   5236 FFFC6484 FF FF FF FF FF FF FF FF     
   5237 FFFC648C FF FF FF FF FF FF FF FF     
   5238 FFFC6494 FF FF FF FF FF FF FF FF     
   5239 FFFC649C FF FF FF FF FF FF FF FF     
   5240 FFFC64A4 FF FF FF FF FF FF FF FF     
   5241 FFFC64AC FF FF FF FF FF FF FF FF     
   5242 FFFC64B4 FF FF FF FF FF FF FF FF     
   5243 FFFC64BC FF FF FF FF FF FF FF FF     
   5244 FFFC64C4 FF FF FF FF FF FF FF FF     
   5245 FFFC64CC FF FF FF FF FF FF FF FF     
   5246 FFFC64D4 FF FF FF FF FF FF FF FF     
   5247 FFFC64DC FF FF FF FF FF FF FF FF     
   5248 FFFC64E4 FF FF FF FF FF FF FF FF     
   5249 FFFC64EC FF FF FF FF FF FF FF FF     
   5250 FFFC64F4 FF FF FF FF FF FF FF FF     
   5251 FFFC64FC FF FF FF FF FF FF FF FF     
   5252 FFFC6504 FF FF FF FF FF FF FF FF     
   5253 FFFC650C FF FF FF FF FF FF FF FF     
   5254 FFFC6514 FF FF FF FF FF FF FF FF     
   5255 FFFC651C FF FF FF FF FF FF FF FF     
   5256 FFFC6524 FF FF FF FF FF FF FF FF     
   5257 FFFC652C FF FF FF FF FF FF FF FF     
   5258 FFFC6534 FF FF FF FF FF FF FF FF     
   5259 FFFC653C FF FF FF FF FF FF FF FF     
   5260 FFFC6544 FF FF FF FF FF FF FF FF     
   5261 FFFC654C FF FF FF FF FF FF FF FF     
   5262 FFFC6554 FF FF FF FF FF FF FF FF     
   5263 FFFC655C FF FF FF FF FF FF FF FF     
   5264 FFFC6564 FF FF FF FF FF FF FF FF     
   5265 FFFC656C FF FF FF FF FF FF FF FF     
   5266 FFFC6574 FF FF FF FF FF FF FF FF     
   5267 FFFC657C FF FF FF FF FF FF FF FF     
   5268 FFFC6584 FF FF FF FF FF FF FF FF     
   5269 FFFC658C FF FF FF FF FF FF FF FF     
   5270 FFFC6594 FF FF FF FF FF FF FF FF     
   5271 FFFC659C FF FF FF FF FF FF FF FF     
   5272 FFFC65A4 FF FF FF FF FF FF FF FF     
   5273 FFFC65AC FF FF FF FF FF FF FF FF     
   5274 FFFC65B4 FF FF FF FF FF FF FF FF     
   5275 FFFC65BC FF FF FF FF FF FF FF FF     
   5276 FFFC65C4 FF FF FF FF FF FF FF FF     
   5277 FFFC65CC FF FF FF FF FF FF FF FF     
   5278 FFFC65D4 FF FF FF FF FF FF FF FF     
   5279 FFFC65DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 40
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5280 FFFC65E4 FF FF FF FF FF FF FF FF     
   5281 FFFC65EC FF FF FF FF FF FF FF FF     
   5282 FFFC65F4 FF FF FF FF FF FF FF FF     
   5283 FFFC65FC FF FF FF FF FF FF FF FF     
   5284 FFFC6604 FF FF FF FF FF FF FF FF     
   5285 FFFC660C FF FF FF FF FF FF FF FF     
   5286 FFFC6614 FF FF FF FF FF FF FF FF     
   5287 FFFC661C FF FF FF FF FF FF FF FF     
   5288 FFFC6624 FF FF FF FF FF FF FF FF     
   5289 FFFC662C FF FF FF FF FF FF FF FF     
   5290 FFFC6634 FF FF FF FF FF FF FF FF     
   5291 FFFC663C FF FF FF FF FF FF FF FF     
   5292 FFFC6644 FF FF FF FF FF FF FF FF     
   5293 FFFC664C FF FF FF FF FF FF FF FF     
   5294 FFFC6654 FF FF FF FF FF FF FF FF     
   5295 FFFC665C FF FF FF FF FF FF FF FF     
   5296 FFFC6664 FF FF FF FF FF FF FF FF     
   5297 FFFC666C FF FF FF FF FF FF FF FF     
   5298 FFFC6674 FF FF FF FF FF FF FF FF     
   5299 FFFC667C FF FF FF FF FF FF FF FF     
   5300 FFFC6684 FF FF FF FF FF FF FF FF     
   5301 FFFC668C FF FF FF FF FF FF FF FF     
   5302 FFFC6694 FF FF FF FF FF FF FF FF     
   5303 FFFC669C FF FF FF FF FF FF FF FF     
   5304 FFFC66A4 FF FF FF FF FF FF FF FF     
   5305 FFFC66AC FF FF FF FF FF FF FF FF     
   5306 FFFC66B4 FF FF FF FF FF FF FF FF     
   5307 FFFC66BC FF FF FF FF FF FF FF FF     
   5308 FFFC66C4 FF FF FF FF FF FF FF FF     
   5309 FFFC66CC FF FF FF FF FF FF FF FF     
   5310 FFFC66D4 FF FF FF FF FF FF FF FF     
   5311 FFFC66DC FF FF FF FF FF FF FF FF     
   5312 FFFC66E4 FF FF FF FF FF FF FF FF     
   5313 FFFC66EC FF FF FF FF FF FF FF FF     
   5314 FFFC66F4 FF FF FF FF FF FF FF FF     
   5315 FFFC66FC FF FF FF FF FF FF FF FF     
   5316 FFFC6704 FF FF FF FF FF FF FF FF     
   5317 FFFC670C FF FF FF FF FF FF FF FF     
   5318 FFFC6714 FF FF FF FF FF FF FF FF     
   5319 FFFC671C FF FF FF FF FF FF FF FF     
   5320 FFFC6724 FF FF FF FF FF FF FF FF     
   5321 FFFC672C FF FF FF FF FF FF FF FF     
   5322 FFFC6734 FF FF FF FF FF FF FF FF     
   5323 FFFC673C FF FF FF FF FF FF FF FF     
   5324 FFFC6744 FF FF FF FF FF FF FF FF     
   5325 FFFC674C FF FF FF FF FF FF FF FF     
   5326 FFFC6754 FF FF FF FF FF FF FF FF     
   5327 FFFC675C FF FF FF FF FF FF FF FF     
   5328 FFFC6764 FF FF FF FF FF FF FF FF     
   5329 FFFC676C FF FF FF FF FF FF FF FF     
   5330 FFFC6774 FF FF FF FF FF FF FF FF     
   5331 FFFC677C FF FF FF FF FF FF FF FF     
   5332 FFFC6784 FF FF FF FF FF FF FF FF     
   5333 FFFC678C FF FF FF FF FF FF FF FF     
   5334 FFFC6794 FF FF FF FF FF FF FF FF     
   5335 FFFC679C FF FF FF FF FF FF FF FF     
   5336 FFFC67A4 FF FF FF FF FF FF FF FF     
   5337 FFFC67AC FF FF FF FF FF FF FF FF     
   5338 FFFC67B4 FF FF FF FF FF FF FF FF     
   5339 FFFC67BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 41
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5340 FFFC67C4 FF FF FF FF FF FF FF FF     
   5341 FFFC67CC FF FF FF FF FF FF FF FF     
   5342 FFFC67D4 FF FF FF FF FF FF FF FF     
   5343 FFFC67DC FF FF FF FF FF FF FF FF     
   5344 FFFC67E4 FF FF FF FF FF FF FF FF     
   5345 FFFC67EC FF FF FF FF FF FF FF FF     
   5346 FFFC67F4 FF FF FF FF FF FF FF FF     
   5347 FFFC67FC FF FF FF FF FF FF FF FF     
   5348 FFFC6804 FF FF FF FF FF FF FF FF     
   5349 FFFC680C FF FF FF FF FF FF FF FF     
   5350 FFFC6814 FF FF FF FF FF FF FF FF     
   5351 FFFC681C FF FF FF FF FF FF FF FF     
   5352 FFFC6824 FF FF FF FF FF FF FF FF     
   5353 FFFC682C FF FF FF FF FF FF FF FF     
   5354 FFFC6834 FF FF FF FF FF FF FF FF     
   5355 FFFC683C FF FF FF FF FF FF FF FF     
   5356 FFFC6844 FF FF FF FF FF FF FF FF     
   5357 FFFC684C FF FF FF FF FF FF FF FF     
   5358 FFFC6854 FF FF FF FF FF FF FF FF     
   5359 FFFC685C FF FF FF FF FF FF FF FF     
   5360 FFFC6864 FF FF FF FF FF FF FF FF     
   5361 FFFC686C FF FF FF FF FF FF FF FF     
   5362 FFFC6874 FF FF FF FF FF FF FF FF     
   5363 FFFC687C FF FF FF FF FF FF FF FF     
   5364 FFFC6884 FF FF FF FF FF FF FF FF     
   5365 FFFC688C FF FF FF FF FF FF FF FF     
   5366 FFFC6894 FF FF FF FF FF FF FF FF     
   5367 FFFC689C FF FF FF FF FF FF FF FF     
   5368 FFFC68A4 FF FF FF FF FF FF FF FF     
   5369 FFFC68AC FF FF FF FF FF FF FF FF     
   5370 FFFC68B4 FF FF FF FF FF FF FF FF     
   5371 FFFC68BC FF FF FF FF FF FF FF FF     
   5372 FFFC68C4 FF FF FF FF FF FF FF FF     
   5373 FFFC68CC FF FF FF FF FF FF FF FF     
   5374 FFFC68D4 FF FF FF FF FF FF FF FF     
   5375 FFFC68DC FF FF FF FF FF FF FF FF     
   5376 FFFC68E4 FF FF FF FF FF FF FF FF     
   5377 FFFC68EC FF FF FF FF FF FF FF FF     
   5378 FFFC68F4 FF FF FF FF FF FF FF FF     
   5379 FFFC68FC FF FF FF FF FF FF FF FF     
   5380 FFFC6904 FF FF FF FF FF FF FF FF     
   5381 FFFC690C FF FF FF FF FF FF FF FF     
   5382 FFFC6914 FF FF FF FF FF FF FF FF     
   5383 FFFC691C FF FF FF FF FF FF FF FF     
   5384 FFFC6924 FF FF FF FF FF FF FF FF     
   5385 FFFC692C FF FF FF FF FF FF FF FF     
   5386 FFFC6934 FF FF FF FF FF FF FF FF     
   5387 FFFC693C FF FF FF FF FF FF FF FF     
   5388 FFFC6944 FF FF FF FF FF FF FF FF     
   5389 FFFC694C FF FF FF FF FF FF FF FF     
   5390 FFFC6954 FF FF FF FF FF FF FF FF     
   5391 FFFC695C FF FF FF FF FF FF FF FF     
   5392 FFFC6964 FF FF FF FF FF FF FF FF     
   5393 FFFC696C FF FF FF FF FF FF FF FF     
   5394 FFFC6974 FF FF FF FF FF FF FF FF     
   5395 FFFC697C FF FF FF FF FF FF FF FF     
   5396 FFFC6984 FF FF FF FF FF FF FF FF     
   5397 FFFC698C FF FF FF FF FF FF FF FF     
   5398 FFFC6994 FF FF FF FF FF FF FF FF     
   5399 FFFC699C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 42
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5400 FFFC69A4 FF FF FF FF FF FF FF FF     
   5401 FFFC69AC FF FF FF FF FF FF FF FF     
   5402 FFFC69B4 FF FF FF FF FF FF FF FF     
   5403 FFFC69BC FF FF FF FF FF FF FF FF     
   5404 FFFC69C4 FF FF FF FF FF FF FF FF     
   5405 FFFC69CC FF FF FF FF FF FF FF FF     
   5406 FFFC69D4 FF FF FF FF FF FF FF FF     
   5407 FFFC69DC FF FF FF FF FF FF FF FF     
   5408 FFFC69E4 FF FF FF FF FF FF FF FF     
   5409 FFFC69EC FF FF FF FF FF FF FF FF     
   5410 FFFC69F4 FF FF FF FF FF FF FF FF     
   5411 FFFC69FC FF FF FF FF FF FF FF FF     
   5412 FFFC6A04 FF FF FF FF FF FF FF FF     
   5413 FFFC6A0C FF FF FF FF FF FF FF FF     
   5414 FFFC6A14 FF FF FF FF FF FF FF FF     
   5415 FFFC6A1C FF FF FF FF FF FF FF FF     
   5416 FFFC6A24 FF FF FF FF FF FF FF FF     
   5417 FFFC6A2C FF FF FF FF FF FF FF FF     
   5418 FFFC6A34 FF FF FF FF FF FF FF FF     
   5419 FFFC6A3C FF FF FF FF FF FF FF FF     
   5420 FFFC6A44 FF FF FF FF FF FF FF FF     
   5421 FFFC6A4C FF FF FF FF FF FF FF FF     
   5422 FFFC6A54 FF FF FF FF FF FF FF FF     
   5423 FFFC6A5C FF FF FF FF FF FF FF FF     
   5424 FFFC6A64 FF FF FF FF FF FF FF FF     
   5425 FFFC6A6C FF FF FF FF FF FF FF FF     
   5426 FFFC6A74 FF FF FF FF FF FF FF FF     
   5427 FFFC6A7C FF FF FF FF FF FF FF FF     
   5428 FFFC6A84 FF FF FF FF FF FF FF FF     
   5429 FFFC6A8C FF FF FF FF FF FF FF FF     
   5430 FFFC6A94 FF FF FF FF FF FF FF FF     
   5431 FFFC6A9C FF FF FF FF FF FF FF FF     
   5432 FFFC6AA4 FF FF FF FF FF FF FF FF     
   5433 FFFC6AAC FF FF FF FF FF FF FF FF     
   5434 FFFC6AB4 FF FF FF FF FF FF FF FF     
   5435 FFFC6ABC FF FF FF FF FF FF FF FF     
   5436 FFFC6AC4 FF FF FF FF FF FF FF FF     
   5437 FFFC6ACC FF FF FF FF FF FF FF FF     
   5438 FFFC6AD4 FF FF FF FF FF FF FF FF     
   5439 FFFC6ADC FF FF FF FF FF FF FF FF     
   5440 FFFC6AE4 FF FF FF FF FF FF FF FF     
   5441 FFFC6AEC FF FF FF FF FF FF FF FF     
   5442 FFFC6AF4 FF FF FF FF FF FF FF FF     
   5443 FFFC6AFC FF FF FF FF FF FF FF FF     
   5444 FFFC6B04 FF FF FF FF FF FF FF FF     
   5445 FFFC6B0C FF FF FF FF FF FF FF FF     
   5446 FFFC6B14 FF FF FF FF FF FF FF FF     
   5447 FFFC6B1C FF FF FF FF FF FF FF FF     
   5448 FFFC6B24 FF FF FF FF FF FF FF FF     
   5449 FFFC6B2C FF FF FF FF FF FF FF FF     
   5450 FFFC6B34 FF FF FF FF FF FF FF FF     
   5451 FFFC6B3C FF FF FF FF FF FF FF FF     
   5452 FFFC6B44 FF FF FF FF FF FF FF FF     
   5453 FFFC6B4C FF FF FF FF FF FF FF FF     
   5454 FFFC6B54 FF FF FF FF FF FF FF FF     
   5455 FFFC6B5C FF FF FF FF FF FF FF FF     
   5456 FFFC6B64 FF FF FF FF FF FF FF FF     
   5457 FFFC6B6C FF FF FF FF FF FF FF FF     
   5458 FFFC6B74 FF FF FF FF FF FF FF FF     
   5459 FFFC6B7C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 43
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5460 FFFC6B84 FF FF FF FF FF FF FF FF     
   5461 FFFC6B8C FF FF FF FF FF FF FF FF     
   5462 FFFC6B94 FF FF FF FF FF FF FF FF     
   5463 FFFC6B9C FF FF FF FF FF FF FF FF     
   5464 FFFC6BA4 FF FF FF FF FF FF FF FF     
   5465 FFFC6BAC FF FF FF FF FF FF FF FF     
   5466 FFFC6BB4 FF FF FF FF FF FF FF FF     
   5467 FFFC6BBC FF FF FF FF FF FF FF FF     
   5468 FFFC6BC4 FF FF FF FF FF FF FF FF     
   5469 FFFC6BCC FF FF FF FF FF FF FF FF     
   5470 FFFC6BD4 FF FF FF FF FF FF FF FF     
   5471 FFFC6BDC FF FF FF FF FF FF FF FF     
   5472 FFFC6BE4 FF FF FF FF FF FF FF FF     
   5473 FFFC6BEC FF FF FF FF FF FF FF FF     
   5474 FFFC6BF4 FF FF FF FF FF FF FF FF     
   5475 FFFC6BFC FF FF FF FF FF FF FF FF     
   5476 FFFC6C04 FF FF FF FF FF FF FF FF     
   5477 FFFC6C0C FF FF FF FF FF FF FF FF     
   5478 FFFC6C14 FF FF FF FF FF FF FF FF     
   5479 FFFC6C1C FF FF FF FF FF FF FF FF     
   5480 FFFC6C24 FF FF FF FF FF FF FF FF     
   5481 FFFC6C2C FF FF FF FF FF FF FF FF     
   5482 FFFC6C34 FF FF FF FF FF FF FF FF     
   5483 FFFC6C3C FF FF FF FF FF FF FF FF     
   5484 FFFC6C44 FF FF FF FF FF FF FF FF     
   5485 FFFC6C4C FF FF FF FF FF FF FF FF     
   5486 FFFC6C54 FF FF FF FF FF FF FF FF     
   5487 FFFC6C5C FF FF FF FF FF FF FF FF     
   5488 FFFC6C64 FF FF FF FF FF FF FF FF     
   5489 FFFC6C6C FF FF FF FF FF FF FF FF     
   5490 FFFC6C74 FF FF FF FF FF FF FF FF     
   5491 FFFC6C7C FF FF FF FF FF FF FF FF     
   5492 FFFC6C84 FF FF FF FF FF FF FF FF     
   5493 FFFC6C8C FF FF FF FF FF FF FF FF     
   5494 FFFC6C94 FF FF FF FF FF FF FF FF     
   5495 FFFC6C9C FF FF FF FF FF FF FF FF     
   5496 FFFC6CA4 FF FF FF FF FF FF FF FF     
   5497 FFFC6CAC FF FF FF FF FF FF FF FF     
   5498 FFFC6CB4 FF FF FF FF FF FF FF FF     
   5499 FFFC6CBC FF FF FF FF FF FF FF FF     
   5500 FFFC6CC4 FF FF FF FF FF FF FF FF     
   5501 FFFC6CCC FF FF FF FF FF FF FF FF     
   5502 FFFC6CD4 FF FF FF FF FF FF FF FF     
   5503 FFFC6CDC FF FF FF FF FF FF FF FF     
   5504 FFFC6CE4 FF FF FF FF FF FF FF FF     
   5505 FFFC6CEC FF FF FF FF FF FF FF FF     
   5506 FFFC6CF4 FF FF FF FF FF FF FF FF     
   5507 FFFC6CFC FF FF FF FF FF FF FF FF     
   5508 FFFC6D04 FF FF FF FF FF FF FF FF     
   5509 FFFC6D0C FF FF FF FF FF FF FF FF     
   5510 FFFC6D14 FF FF FF FF FF FF FF FF     
   5511 FFFC6D1C FF FF FF FF FF FF FF FF     
   5512 FFFC6D24 FF FF FF FF FF FF FF FF     
   5513 FFFC6D2C FF FF FF FF FF FF FF FF     
   5514 FFFC6D34 FF FF FF FF FF FF FF FF     
   5515 FFFC6D3C FF FF FF FF FF FF FF FF     
   5516 FFFC6D44 FF FF FF FF FF FF FF FF     
   5517 FFFC6D4C FF FF FF FF FF FF FF FF     
   5518 FFFC6D54 FF FF FF FF FF FF FF FF     
   5519 FFFC6D5C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 44
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5520 FFFC6D64 FF FF FF FF FF FF FF FF     
   5521 FFFC6D6C FF FF FF FF FF FF FF FF     
   5522 FFFC6D74 FF FF FF FF FF FF FF FF     
   5523 FFFC6D7C FF FF FF FF FF FF FF FF     
   5524 FFFC6D84 FF FF FF FF FF FF FF FF     
   5525 FFFC6D8C FF FF FF FF FF FF FF FF     
   5526 FFFC6D94 FF FF FF FF FF FF FF FF     
   5527 FFFC6D9C FF FF FF FF FF FF FF FF     
   5528 FFFC6DA4 FF FF FF FF FF FF FF FF     
   5529 FFFC6DAC FF FF FF FF FF FF FF FF     
   5530 FFFC6DB4 FF FF FF FF FF FF FF FF     
   5531 FFFC6DBC FF FF FF FF FF FF FF FF     
   5532 FFFC6DC4 FF FF FF FF FF FF FF FF     
   5533 FFFC6DCC FF FF FF FF FF FF FF FF     
   5534 FFFC6DD4 FF FF FF FF FF FF FF FF     
   5535 FFFC6DDC FF FF FF FF FF FF FF FF     
   5536 FFFC6DE4 FF FF FF FF FF FF FF FF     
   5537 FFFC6DEC FF FF FF FF FF FF FF FF     
   5538 FFFC6DF4 FF FF FF FF FF FF FF FF     
   5539 FFFC6DFC FF FF FF FF FF FF FF FF     
   5540 FFFC6E04 FF FF FF FF FF FF FF FF     
   5541 FFFC6E0C FF FF FF FF FF FF FF FF     
   5542 FFFC6E14 FF FF FF FF FF FF FF FF     
   5543 FFFC6E1C FF FF FF FF FF FF FF FF     
   5544 FFFC6E24 FF FF FF FF FF FF FF FF     
   5545 FFFC6E2C FF FF FF FF FF FF FF FF     
   5546 FFFC6E34 FF FF FF FF FF FF FF FF     
   5547 FFFC6E3C FF FF FF FF FF FF FF FF     
   5548 FFFC6E44 FF FF FF FF FF FF FF FF     
   5549 FFFC6E4C FF FF FF FF FF FF FF FF     
   5550 FFFC6E54 FF FF FF FF FF FF FF FF     
   5551 FFFC6E5C FF FF FF FF FF FF FF FF     
   5552 FFFC6E64 FF FF FF FF FF FF FF FF     
   5553 FFFC6E6C FF FF FF FF FF FF FF FF     
   5554 FFFC6E74 FF FF FF FF FF FF FF FF     
   5555 FFFC6E7C FF FF FF FF FF FF FF FF     
   5556 FFFC6E84 FF FF FF FF FF FF FF FF     
   5557 FFFC6E8C FF FF FF FF FF FF FF FF     
   5558 FFFC6E94 FF FF FF FF FF FF FF FF     
   5559 FFFC6E9C FF FF FF FF FF FF FF FF     
   5560 FFFC6EA4 FF FF FF FF FF FF FF FF     
   5561 FFFC6EAC FF FF FF FF FF FF FF FF     
   5562 FFFC6EB4 FF FF FF FF FF FF FF FF     
   5563 FFFC6EBC FF FF FF FF FF FF FF FF     
   5564 FFFC6EC4 FF FF FF FF FF FF FF FF     
   5565 FFFC6ECC FF FF FF FF FF FF FF FF     
   5566 FFFC6ED4 FF FF FF FF FF FF FF FF     
   5567 FFFC6EDC FF FF FF FF FF FF FF FF     
   5568 FFFC6EE4 FF FF FF FF FF FF FF FF     
   5569 FFFC6EEC FF FF FF FF FF FF FF FF     
   5570 FFFC6EF4 FF FF FF FF FF FF FF FF     
   5571 FFFC6EFC FF FF FF FF FF FF FF FF     
   5572 FFFC6F04 FF FF FF FF FF FF FF FF     
   5573 FFFC6F0C FF FF FF FF FF FF FF FF     
   5574 FFFC6F14 FF FF FF FF FF FF FF FF     
   5575 FFFC6F1C FF FF FF FF FF FF FF FF     
   5576 FFFC6F24 FF FF FF FF FF FF FF FF     
   5577 FFFC6F2C FF FF FF FF FF FF FF FF     
   5578 FFFC6F34 FF FF FF FF FF FF FF FF     
   5579 FFFC6F3C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 45
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5580 FFFC6F44 FF FF FF FF FF FF FF FF     
   5581 FFFC6F4C FF FF FF FF FF FF FF FF     
   5582 FFFC6F54 FF FF FF FF FF FF FF FF     
   5583 FFFC6F5C FF FF FF FF FF FF FF FF     
   5584 FFFC6F64 FF FF FF FF FF FF FF FF     
   5585 FFFC6F6C FF FF FF FF FF FF FF FF     
   5586 FFFC6F74 FF FF FF FF FF FF FF FF     
   5587 FFFC6F7C FF FF FF FF FF FF FF FF     
   5588 FFFC6F84 FF FF FF FF FF FF FF FF     
   5589 FFFC6F8C FF FF FF FF FF FF FF FF     
   5590 FFFC6F94 FF FF FF FF FF FF FF FF     
   5591 FFFC6F9C FF FF FF FF FF FF FF FF     
   5592 FFFC6FA4 FF FF FF FF FF FF FF FF     
   5593 FFFC6FAC FF FF FF FF FF FF FF FF     
   5594 FFFC6FB4 FF FF FF FF FF FF FF FF     
   5595 FFFC6FBC FF FF FF FF FF FF FF FF     
   5596 FFFC6FC4 FF FF FF FF FF FF FF FF     
   5597 FFFC6FCC FF FF FF FF FF FF FF FF     
   5598 FFFC6FD4 FF FF FF FF FF FF FF FF     
   5599 FFFC6FDC FF FF FF FF FF FF FF FF     
   5600 FFFC6FE4 FF FF FF FF FF FF FF FF     
   5601 FFFC6FEC FF FF FF FF FF FF FF FF     
   5602 FFFC6FF4 FF FF FF FF FF FF FF FF     
   5603 FFFC6FFC FF FF FF FF FF FF FF FF     
   5604 FFFC7004 FF FF FF FF FF FF FF FF     
   5605 FFFC700C FF FF FF FF FF FF FF FF     
   5606 FFFC7014 FF FF FF FF FF FF FF FF     
   5607 FFFC701C FF FF FF FF FF FF FF FF     
   5608 FFFC7024 FF FF FF FF FF FF FF FF     
   5609 FFFC702C FF FF FF FF FF FF FF FF     
   5610 FFFC7034 FF FF FF FF FF FF FF FF     
   5611 FFFC703C FF FF FF FF FF FF FF FF     
   5612 FFFC7044 FF FF FF FF FF FF FF FF     
   5613 FFFC704C FF FF FF FF FF FF FF FF     
   5614 FFFC7054 FF FF FF FF FF FF FF FF     
   5615 FFFC705C FF FF FF FF FF FF FF FF     
   5616 FFFC7064 FF FF FF FF FF FF FF FF     
   5617 FFFC706C FF FF FF FF FF FF FF FF     
   5618 FFFC7074 FF FF FF FF FF FF FF FF     
   5619 FFFC707C FF FF FF FF FF FF FF FF     
   5620 FFFC7084 FF FF FF FF FF FF FF FF     
   5621 FFFC708C FF FF FF FF FF FF FF FF     
   5622 FFFC7094 FF FF FF FF FF FF FF FF     
   5623 FFFC709C FF FF FF FF FF FF FF FF     
   5624 FFFC70A4 FF FF FF FF FF FF FF FF     
   5625 FFFC70AC FF FF FF FF FF FF FF FF     
   5626 FFFC70B4 FF FF FF FF FF FF FF FF     
   5627 FFFC70BC FF FF FF FF FF FF FF FF     
   5628 FFFC70C4 FF FF FF FF FF FF FF FF     
   5629 FFFC70CC FF FF FF FF FF FF FF FF     
   5630 FFFC70D4 FF FF FF FF FF FF FF FF     
   5631 FFFC70DC FF FF FF FF FF FF FF FF     
   5632 FFFC70E4 FF FF FF FF FF FF FF FF     
   5633 FFFC70EC FF FF FF FF FF FF FF FF     
   5634 FFFC70F4 FF FF FF FF FF FF FF FF     
   5635 FFFC70FC FF FF FF FF FF FF FF FF     
   5636 FFFC7104 FF FF FF FF FF FF FF FF     
   5637 FFFC710C FF FF FF FF FF FF FF FF     
   5638 FFFC7114 FF FF FF FF FF FF FF FF     
   5639 FFFC711C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 46
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5640 FFFC7124 FF FF FF FF FF FF FF FF     
   5641 FFFC712C FF FF FF FF FF FF FF FF     
   5642 FFFC7134 FF FF FF FF FF FF FF FF     
   5643 FFFC713C FF FF FF FF FF FF FF FF     
   5644 FFFC7144 FF FF FF FF FF FF FF FF     
   5645 FFFC714C FF FF FF FF FF FF FF FF     
   5646 FFFC7154 FF FF FF FF FF FF FF FF     
   5647 FFFC715C FF FF FF FF FF FF FF FF     
   5648 FFFC7164 FF FF FF FF FF FF FF FF     
   5649 FFFC716C FF FF FF FF FF FF FF FF     
   5650 FFFC7174 FF FF FF FF FF FF FF FF     
   5651 FFFC717C FF FF FF FF FF FF FF FF     
   5652 FFFC7184 FF FF FF FF FF FF FF FF     
   5653 FFFC718C FF FF FF FF FF FF FF FF     
   5654 FFFC7194 FF FF FF FF FF FF FF FF     
   5655 FFFC719C FF FF FF FF FF FF FF FF     
   5656 FFFC71A4 FF FF FF FF FF FF FF FF     
   5657 FFFC71AC FF FF FF FF FF FF FF FF     
   5658 FFFC71B4 FF FF FF FF FF FF FF FF     
   5659 FFFC71BC FF FF FF FF FF FF FF FF     
   5660 FFFC71C4 FF FF FF FF FF FF FF FF     
   5661 FFFC71CC FF FF FF FF FF FF FF FF     
   5662 FFFC71D4 FF FF FF FF FF FF FF FF     
   5663 FFFC71DC FF FF FF FF FF FF FF FF     
   5664 FFFC71E4 FF FF FF FF FF FF FF FF     
   5665 FFFC71EC FF FF FF FF FF FF FF FF     
   5666 FFFC71F4 FF FF FF FF FF FF FF FF     
   5667 FFFC71FC FF FF FF FF FF FF FF FF     
   5668 FFFC7204 FF FF FF FF FF FF FF FF     
   5669 FFFC720C FF FF FF FF FF FF FF FF     
   5670 FFFC7214 FF FF FF FF FF FF FF FF     
   5671 FFFC721C FF FF FF FF FF FF FF FF     
   5672 FFFC7224 FF FF FF FF FF FF FF FF     
   5673 FFFC722C FF FF FF FF FF FF FF FF     
   5674 FFFC7234 FF FF FF FF FF FF FF FF     
   5675 FFFC723C FF FF FF FF FF FF FF FF     
   5676 FFFC7244 FF FF FF FF FF FF FF FF     
   5677 FFFC724C FF FF FF FF FF FF FF FF     
   5678 FFFC7254 FF FF FF FF FF FF FF FF     
   5679 FFFC725C FF FF FF FF FF FF FF FF     
   5680 FFFC7264 FF FF FF FF FF FF FF FF     
   5681 FFFC726C FF FF FF FF FF FF FF FF     
   5682 FFFC7274 FF FF FF FF FF FF FF FF     
   5683 FFFC727C FF FF FF FF FF FF FF FF     
   5684 FFFC7284 FF FF FF FF FF FF FF FF     
   5685 FFFC728C FF FF FF FF FF FF FF FF     
   5686 FFFC7294 FF FF FF FF FF FF FF FF     
   5687 FFFC729C FF FF FF FF FF FF FF FF     
   5688 FFFC72A4 FF FF FF FF FF FF FF FF     
   5689 FFFC72AC FF FF FF FF FF FF FF FF     
   5690 FFFC72B4 FF FF FF FF FF FF FF FF     
   5691 FFFC72BC FF FF FF FF FF FF FF FF     
   5692 FFFC72C4 FF FF FF FF FF FF FF FF     
   5693 FFFC72CC FF FF FF FF FF FF FF FF     
   5694 FFFC72D4 FF FF FF FF FF FF FF FF     
   5695 FFFC72DC FF FF FF FF FF FF FF FF     
   5696 FFFC72E4 FF FF FF FF FF FF FF FF     
   5697 FFFC72EC FF FF FF FF FF FF FF FF     
   5698 FFFC72F4 FF FF FF FF FF FF FF FF     
   5699 FFFC72FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 47
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5700 FFFC7304 FF FF FF FF FF FF FF FF     
   5701 FFFC730C FF FF FF FF FF FF FF FF     
   5702 FFFC7314 FF FF FF FF FF FF FF FF     
   5703 FFFC731C FF FF FF FF FF FF FF FF     
   5704 FFFC7324 FF FF FF FF FF FF FF FF     
   5705 FFFC732C FF FF FF FF FF FF FF FF     
   5706 FFFC7334 FF FF FF FF FF FF FF FF     
   5707 FFFC733C FF FF FF FF FF FF FF FF     
   5708 FFFC7344 FF FF FF FF FF FF FF FF     
   5709 FFFC734C FF FF FF FF FF FF FF FF     
   5710 FFFC7354 FF FF FF FF FF FF FF FF     
   5711 FFFC735C FF FF FF FF FF FF FF FF     
   5712 FFFC7364 FF FF FF FF FF FF FF FF     
   5713 FFFC736C FF FF FF FF FF FF FF FF     
   5714 FFFC7374 FF FF FF FF FF FF FF FF     
   5715 FFFC737C FF FF FF FF FF FF FF FF     
   5716 FFFC7384 FF FF FF FF FF FF FF FF     
   5717 FFFC738C FF FF FF FF FF FF FF FF     
   5718 FFFC7394 FF FF FF FF FF FF FF FF     
   5719 FFFC739C FF FF FF FF FF FF FF FF     
   5720 FFFC73A4 FF FF FF FF FF FF FF FF     
   5721 FFFC73AC FF FF FF FF FF FF FF FF     
   5722 FFFC73B4 FF FF FF FF FF FF FF FF     
   5723 FFFC73BC FF FF FF FF FF FF FF FF     
   5724 FFFC73C4 FF FF FF FF FF FF FF FF     
   5725 FFFC73CC FF FF FF FF FF FF FF FF     
   5726 FFFC73D4 FF FF FF FF FF FF FF FF     
   5727 FFFC73DC FF FF FF FF FF FF FF FF     
   5728 FFFC73E4 FF FF FF FF FF FF FF FF     
   5729 FFFC73EC FF FF FF FF FF FF FF FF     
   5730 FFFC73F4 FF FF FF FF FF FF FF FF     
   5731 FFFC73FC FF FF FF FF FF FF FF FF     
   5732 FFFC7404 FF FF FF FF FF FF FF FF     
   5733 FFFC740C FF FF FF FF FF FF FF FF     
   5734 FFFC7414 FF FF FF FF FF FF FF FF     
   5735 FFFC741C FF FF FF FF FF FF FF FF     
   5736 FFFC7424 FF FF FF FF FF FF FF FF     
   5737 FFFC742C FF FF FF FF FF FF FF FF     
   5738 FFFC7434 FF FF FF FF FF FF FF FF     
   5739 FFFC743C FF FF FF FF FF FF FF FF     
   5740 FFFC7444 FF FF FF FF FF FF FF FF     
   5741 FFFC744C FF FF FF FF FF FF FF FF     
   5742 FFFC7454 FF FF FF FF FF FF FF FF     
   5743 FFFC745C FF FF FF FF FF FF FF FF     
   5744 FFFC7464 FF FF FF FF FF FF FF FF     
   5745 FFFC746C FF FF FF FF FF FF FF FF     
   5746 FFFC7474 FF FF FF FF FF FF FF FF     
   5747 FFFC747C FF FF FF FF FF FF FF FF     
   5748 FFFC7484 FF FF FF FF FF FF FF FF     
   5749 FFFC748C FF FF FF FF FF FF FF FF     
   5750 FFFC7494 FF FF FF FF FF FF FF FF     
   5751 FFFC749C FF FF FF FF FF FF FF FF     
   5752 FFFC74A4 FF FF FF FF FF FF FF FF     
   5753 FFFC74AC FF FF FF FF FF FF FF FF     
   5754 FFFC74B4 FF FF FF FF FF FF FF FF     
   5755 FFFC74BC FF FF FF FF FF FF FF FF     
   5756 FFFC74C4 FF FF FF FF FF FF FF FF     
   5757 FFFC74CC FF FF FF FF FF FF FF FF     
   5758 FFFC74D4 FF FF FF FF FF FF FF FF     
   5759 FFFC74DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 48
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5760 FFFC74E4 FF FF FF FF FF FF FF FF     
   5761 FFFC74EC FF FF FF FF FF FF FF FF     
   5762 FFFC74F4 FF FF FF FF FF FF FF FF     
   5763 FFFC74FC FF FF FF FF FF FF FF FF     
   5764 FFFC7504 FF FF FF FF FF FF FF FF     
   5765 FFFC750C FF FF FF FF FF FF FF FF     
   5766 FFFC7514 FF FF FF FF FF FF FF FF     
   5767 FFFC751C FF FF FF FF FF FF FF FF     
   5768 FFFC7524 FF FF FF FF FF FF FF FF     
   5769 FFFC752C FF FF FF FF FF FF FF FF     
   5770 FFFC7534 FF FF FF FF FF FF FF FF     
   5771 FFFC753C FF FF FF FF FF FF FF FF     
   5772 FFFC7544 FF FF FF FF FF FF FF FF     
   5773 FFFC754C FF FF FF FF FF FF FF FF     
   5774 FFFC7554 FF FF FF FF FF FF FF FF     
   5775 FFFC755C FF FF FF FF FF FF FF FF     
   5776 FFFC7564 FF FF FF FF FF FF FF FF     
   5777 FFFC756C FF FF FF FF FF FF FF FF     
   5778 FFFC7574 FF FF FF FF FF FF FF FF     
   5779 FFFC757C FF FF FF FF FF FF FF FF     
   5780 FFFC7584 FF FF FF FF FF FF FF FF     
   5781 FFFC758C FF FF FF FF FF FF FF FF     
   5782 FFFC7594 FF FF FF FF FF FF FF FF     
   5783 FFFC759C FF FF FF FF FF FF FF FF     
   5784 FFFC75A4 FF FF FF FF FF FF FF FF     
   5785 FFFC75AC FF FF FF FF FF FF FF FF     
   5786 FFFC75B4 FF FF FF FF FF FF FF FF     
   5787 FFFC75BC FF FF FF FF FF FF FF FF     
   5788 FFFC75C4 FF FF FF FF FF FF FF FF     
   5789 FFFC75CC FF FF FF FF FF FF FF FF     
   5790 FFFC75D4 FF FF FF FF FF FF FF FF     
   5791 FFFC75DC FF FF FF FF FF FF FF FF     
   5792 FFFC75E4 FF FF FF FF FF FF FF FF     
   5793 FFFC75EC FF FF FF FF FF FF FF FF     
   5794 FFFC75F4 FF FF FF FF FF FF FF FF     
   5795 FFFC75FC FF FF FF FF FF FF FF FF     
   5796 FFFC7604 FF FF FF FF FF FF FF FF     
   5797 FFFC760C FF FF FF FF FF FF FF FF     
   5798 FFFC7614 FF FF FF FF FF FF FF FF     
   5799 FFFC761C FF FF FF FF FF FF FF FF     
   5800 FFFC7624 FF FF FF FF FF FF FF FF     
   5801 FFFC762C FF FF FF FF FF FF FF FF     
   5802 FFFC7634 FF FF FF FF FF FF FF FF     
   5803 FFFC763C FF FF FF FF FF FF FF FF     
   5804 FFFC7644 FF FF FF FF FF FF FF FF     
   5805 FFFC764C FF FF FF FF FF FF FF FF     
   5806 FFFC7654 FF FF FF FF FF FF FF FF     
   5807 FFFC765C FF FF FF FF FF FF FF FF     
   5808 FFFC7664 FF FF FF FF FF FF FF FF     
   5809 FFFC766C FF FF FF FF FF FF FF FF     
   5810 FFFC7674 FF FF FF FF FF FF FF FF     
   5811 FFFC767C FF FF FF FF FF FF FF FF     
   5812 FFFC7684 FF FF FF FF FF FF FF FF     
   5813 FFFC768C FF FF FF FF FF FF FF FF     
   5814 FFFC7694 FF FF FF FF FF FF FF FF     
   5815 FFFC769C FF FF FF FF FF FF FF FF     
   5816 FFFC76A4 FF FF FF FF FF FF FF FF     
   5817 FFFC76AC FF FF FF FF FF FF FF FF     
   5818 FFFC76B4 FF FF FF FF FF FF FF FF     
   5819 FFFC76BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 49
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5820 FFFC76C4 FF FF FF FF FF FF FF FF     
   5821 FFFC76CC FF FF FF FF FF FF FF FF     
   5822 FFFC76D4 FF FF FF FF FF FF FF FF     
   5823 FFFC76DC FF FF FF FF FF FF FF FF     
   5824 FFFC76E4 FF FF FF FF FF FF FF FF     
   5825 FFFC76EC FF FF FF FF FF FF FF FF     
   5826 FFFC76F4 FF FF FF FF FF FF FF FF     
   5827 FFFC76FC FF FF FF FF FF FF FF FF     
   5828 FFFC7704 FF FF FF FF FF FF FF FF     
   5829 FFFC770C FF FF FF FF FF FF FF FF     
   5830 FFFC7714 FF FF FF FF FF FF FF FF     
   5831 FFFC771C FF FF FF FF FF FF FF FF     
   5832 FFFC7724 FF FF FF FF FF FF FF FF     
   5833 FFFC772C FF FF FF FF FF FF FF FF     
   5834 FFFC7734 FF FF FF FF FF FF FF FF     
   5835 FFFC773C FF FF FF FF FF FF FF FF     
   5836 FFFC7744 FF FF FF FF FF FF FF FF     
   5837 FFFC774C FF FF FF FF FF FF FF FF     
   5838 FFFC7754 FF FF FF FF FF FF FF FF     
   5839 FFFC775C FF FF FF FF FF FF FF FF     
   5840 FFFC7764 FF FF FF FF FF FF FF FF     
   5841 FFFC776C FF FF FF FF FF FF FF FF     
   5842 FFFC7774 FF FF FF FF FF FF FF FF     
   5843 FFFC777C FF FF FF FF FF FF FF FF     
   5844 FFFC7784 FF FF FF FF FF FF FF FF     
   5845 FFFC778C FF FF FF FF FF FF FF FF     
   5846 FFFC7794 FF FF FF FF FF FF FF FF     
   5847 FFFC779C FF FF FF FF FF FF FF FF     
   5848 FFFC77A4 FF FF FF FF FF FF FF FF     
   5849 FFFC77AC FF FF FF FF FF FF FF FF     
   5850 FFFC77B4 FF FF FF FF FF FF FF FF     
   5851 FFFC77BC FF FF FF FF FF FF FF FF     
   5852 FFFC77C4 FF FF FF FF FF FF FF FF     
   5853 FFFC77CC FF FF FF FF FF FF FF FF     
   5854 FFFC77D4 FF FF FF FF FF FF FF FF     
   5855 FFFC77DC FF FF FF FF FF FF FF FF     
   5856 FFFC77E4 FF FF FF FF FF FF FF FF     
   5857 FFFC77EC FF FF FF FF FF FF FF FF     
   5858 FFFC77F4 FF FF FF FF FF FF FF FF     
   5859 FFFC77FC FF FF FF FF FF FF FF FF     
   5860 FFFC7804 FF FF FF FF FF FF FF FF     
   5861 FFFC780C FF FF FF FF FF FF FF FF     
   5862 FFFC7814 FF FF FF FF FF FF FF FF     
   5863 FFFC781C FF FF FF FF FF FF FF FF     
   5864 FFFC7824 FF FF FF FF FF FF FF FF     
   5865 FFFC782C FF FF FF FF FF FF FF FF     
   5866 FFFC7834 FF FF FF FF FF FF FF FF     
   5867 FFFC783C FF FF FF FF FF FF FF FF     
   5868 FFFC7844 FF FF FF FF FF FF FF FF     
   5869 FFFC784C FF FF FF FF FF FF FF FF     
   5870 FFFC7854 FF FF FF FF FF FF FF FF     
   5871 FFFC785C FF FF FF FF FF FF FF FF     
   5872 FFFC7864 FF FF FF FF FF FF FF FF     
   5873 FFFC786C FF FF FF FF FF FF FF FF     
   5874 FFFC7874 FF FF FF FF FF FF FF FF     
   5875 FFFC787C FF FF FF FF FF FF FF FF     
   5876 FFFC7884 FF FF FF FF FF FF FF FF     
   5877 FFFC788C FF FF FF FF FF FF FF FF     
   5878 FFFC7894 FF FF FF FF FF FF FF FF     
   5879 FFFC789C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 50
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5880 FFFC78A4 FF FF FF FF FF FF FF FF     
   5881 FFFC78AC FF FF FF FF FF FF FF FF     
   5882 FFFC78B4 FF FF FF FF FF FF FF FF     
   5883 FFFC78BC FF FF FF FF FF FF FF FF     
   5884 FFFC78C4 FF FF FF FF FF FF FF FF     
   5885 FFFC78CC FF FF FF FF FF FF FF FF     
   5886 FFFC78D4 FF FF FF FF FF FF FF FF     
   5887 FFFC78DC FF FF FF FF FF FF FF FF     
   5888 FFFC78E4 FF FF FF FF FF FF FF FF     
   5889 FFFC78EC FF FF FF FF FF FF FF FF     
   5890 FFFC78F4 FF FF FF FF FF FF FF FF     
   5891 FFFC78FC FF FF FF FF FF FF FF FF     
   5892 FFFC7904 FF FF FF FF FF FF FF FF     
   5893 FFFC790C FF FF FF FF FF FF FF FF     
   5894 FFFC7914 FF FF FF FF FF FF FF FF     
   5895 FFFC791C FF FF FF FF FF FF FF FF     
   5896 FFFC7924 FF FF FF FF FF FF FF FF     
   5897 FFFC792C FF FF FF FF FF FF FF FF     
   5898 FFFC7934 FF FF FF FF FF FF FF FF     
   5899 FFFC793C FF FF FF FF FF FF FF FF     
   5900 FFFC7944 FF FF FF FF FF FF FF FF     
   5901 FFFC794C FF FF FF FF FF FF FF FF     
   5902 FFFC7954 FF FF FF FF FF FF FF FF     
   5903 FFFC795C FF FF FF FF FF FF FF FF     
   5904 FFFC7964 FF FF FF FF FF FF FF FF     
   5905 FFFC796C FF FF FF FF FF FF FF FF     
   5906 FFFC7974 FF FF FF FF FF FF FF FF     
   5907 FFFC797C FF FF FF FF FF FF FF FF     
   5908 FFFC7984 FF FF FF FF FF FF FF FF     
   5909 FFFC798C FF FF FF FF FF FF FF FF     
   5910 FFFC7994 FF FF FF FF FF FF FF FF     
   5911 FFFC799C FF FF FF FF FF FF FF FF     
   5912 FFFC79A4 FF FF FF FF FF FF FF FF     
   5913 FFFC79AC FF FF FF FF FF FF FF FF     
   5914 FFFC79B4 FF FF FF FF FF FF FF FF     
   5915 FFFC79BC FF FF FF FF FF FF FF FF     
   5916 FFFC79C4 FF FF FF FF FF FF FF FF     
   5917 FFFC79CC FF FF FF FF FF FF FF FF     
   5918 FFFC79D4 FF FF FF FF FF FF FF FF     
   5919 FFFC79DC FF FF FF FF FF FF FF FF     
   5920 FFFC79E4 FF FF FF FF FF FF FF FF     
   5921 FFFC79EC FF FF FF FF FF FF FF FF     
   5922 FFFC79F4 FF FF FF FF FF FF FF FF     
   5923 FFFC79FC FF FF FF FF FF FF FF FF     
   5924 FFFC7A04 FF FF FF FF FF FF FF FF     
   5925 FFFC7A0C FF FF FF FF FF FF FF FF     
   5926 FFFC7A14 FF FF FF FF FF FF FF FF     
   5927 FFFC7A1C FF FF FF FF FF FF FF FF     
   5928 FFFC7A24 FF FF FF FF FF FF FF FF     
   5929 FFFC7A2C FF FF FF FF FF FF FF FF     
   5930 FFFC7A34 FF FF FF FF FF FF FF FF     
   5931 FFFC7A3C FF FF FF FF FF FF FF FF     
   5932 FFFC7A44 FF FF FF FF FF FF FF FF     
   5933 FFFC7A4C FF FF FF FF FF FF FF FF     
   5934 FFFC7A54 FF FF FF FF FF FF FF FF     
   5935 FFFC7A5C FF FF FF FF FF FF FF FF     
   5936 FFFC7A64 FF FF FF FF FF FF FF FF     
   5937 FFFC7A6C FF FF FF FF FF FF FF FF     
   5938 FFFC7A74 FF FF FF FF FF FF FF FF     
   5939 FFFC7A7C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 51
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5940 FFFC7A84 FF FF FF FF FF FF FF FF     
   5941 FFFC7A8C FF FF FF FF FF FF FF FF     
   5942 FFFC7A94 FF FF FF FF FF FF FF FF     
   5943 FFFC7A9C FF FF FF FF FF FF FF FF     
   5944 FFFC7AA4 FF FF FF FF FF FF FF FF     
   5945 FFFC7AAC FF FF FF FF FF FF FF FF     
   5946 FFFC7AB4 FF FF FF FF FF FF FF FF     
   5947 FFFC7ABC FF FF FF FF FF FF FF FF     
   5948 FFFC7AC4 FF FF FF FF FF FF FF FF     
   5949 FFFC7ACC FF FF FF FF FF FF FF FF     
   5950 FFFC7AD4 FF FF FF FF FF FF FF FF     
   5951 FFFC7ADC FF FF FF FF FF FF FF FF     
   5952 FFFC7AE4 FF FF FF FF FF FF FF FF     
   5953 FFFC7AEC FF FF FF FF FF FF FF FF     
   5954 FFFC7AF4 FF FF FF FF FF FF FF FF     
   5955 FFFC7AFC FF FF FF FF FF FF FF FF     
   5956 FFFC7B04 FF FF FF FF FF FF FF FF     
   5957 FFFC7B0C FF FF FF FF FF FF FF FF     
   5958 FFFC7B14 FF FF FF FF FF FF FF FF     
   5959 FFFC7B1C FF FF FF FF FF FF FF FF     
   5960 FFFC7B24 FF FF FF FF FF FF FF FF     
   5961 FFFC7B2C FF FF FF FF FF FF FF FF     
   5962 FFFC7B34 FF FF FF FF FF FF FF FF     
   5963 FFFC7B3C FF FF FF FF FF FF FF FF     
   5964 FFFC7B44 FF FF FF FF FF FF FF FF     
   5965 FFFC7B4C FF FF FF FF FF FF FF FF     
   5966 FFFC7B54 FF FF FF FF FF FF FF FF     
   5967 FFFC7B5C FF FF FF FF FF FF FF FF     
   5968 FFFC7B64 FF FF FF FF FF FF FF FF     
   5969 FFFC7B6C FF FF FF FF FF FF FF FF     
   5970 FFFC7B74 FF FF FF FF FF FF FF FF     
   5971 FFFC7B7C FF FF FF FF FF FF FF FF     
   5972 FFFC7B84 FF FF FF FF FF FF FF FF     
   5973 FFFC7B8C FF FF FF FF FF FF FF FF     
   5974 FFFC7B94 FF FF FF FF FF FF FF FF     
   5975 FFFC7B9C FF FF FF FF FF FF FF FF     
   5976 FFFC7BA4 FF FF FF FF FF FF FF FF     
   5977 FFFC7BAC FF FF FF FF FF FF FF FF     
   5978 FFFC7BB4 FF FF FF FF FF FF FF FF     
   5979 FFFC7BBC FF FF FF FF FF FF FF FF     
   5980 FFFC7BC4 FF FF FF FF FF FF FF FF     
   5981 FFFC7BCC FF FF FF FF FF FF FF FF     
   5982 FFFC7BD4 FF FF FF FF FF FF FF FF     
   5983 FFFC7BDC FF FF FF FF FF FF FF FF     
   5984 FFFC7BE4 FF FF FF FF FF FF FF FF     
   5985 FFFC7BEC FF FF FF FF FF FF FF FF     
   5986 FFFC7BF4 FF FF FF FF FF FF FF FF     
   5987 FFFC7BFC FF FF FF FF FF FF FF FF     
   5988 FFFC7C04 FF FF FF FF FF FF FF FF     
   5989 FFFC7C0C FF FF FF FF FF FF FF FF     
   5990 FFFC7C14 FF FF FF FF FF FF FF FF     
   5991 FFFC7C1C FF FF FF FF FF FF FF FF     
   5992 FFFC7C24 FF FF FF FF FF FF FF FF     
   5993 FFFC7C2C FF FF FF FF FF FF FF FF     
   5994 FFFC7C34 FF FF FF FF FF FF FF FF     
   5995 FFFC7C3C FF FF FF FF FF FF FF FF     
   5996 FFFC7C44 FF FF FF FF FF FF FF FF     
   5997 FFFC7C4C FF FF FF FF FF FF FF FF     
   5998 FFFC7C54 FF FF FF FF FF FF FF FF     
   5999 FFFC7C5C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 52
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6000 FFFC7C64 FF FF FF FF FF FF FF FF     
   6001 FFFC7C6C FF FF FF FF FF FF FF FF     
   6002 FFFC7C74 FF FF FF FF FF FF FF FF     
   6003 FFFC7C7C FF FF FF FF FF FF FF FF     
   6004 FFFC7C84 FF FF FF FF FF FF FF FF     
   6005 FFFC7C8C FF FF FF FF FF FF FF FF     
   6006 FFFC7C94 FF FF FF FF FF FF FF FF     
   6007 FFFC7C9C FF FF FF FF FF FF FF FF     
   6008 FFFC7CA4 FF FF FF FF FF FF FF FF     
   6009 FFFC7CAC FF FF FF FF FF FF FF FF     
   6010 FFFC7CB4 FF FF FF FF FF FF FF FF     
   6011 FFFC7CBC FF FF FF FF FF FF FF FF     
   6012 FFFC7CC4 FF FF FF FF FF FF FF FF     
   6013 FFFC7CCC FF FF FF FF FF FF FF FF     
   6014 FFFC7CD4 FF FF FF FF FF FF FF FF     
   6015 FFFC7CDC FF FF FF FF FF FF FF FF     
   6016 FFFC7CE4 FF FF FF FF FF FF FF FF     
   6017 FFFC7CEC FF FF FF FF FF FF FF FF     
   6018 FFFC7CF4 FF FF FF FF FF FF FF FF     
   6019 FFFC7CFC FF FF FF FF FF FF FF FF     
   6020 FFFC7D04 FF FF FF FF FF FF FF FF     
   6021 FFFC7D0C FF FF FF FF FF FF FF FF     
   6022 FFFC7D14 FF FF FF FF FF FF FF FF     
   6023 FFFC7D1C FF FF FF FF FF FF FF FF     
   6024 FFFC7D24 FF FF FF FF FF FF FF FF     
   6025 FFFC7D2C FF FF FF FF FF FF FF FF     
   6026 FFFC7D34 FF FF FF FF FF FF FF FF     
   6027 FFFC7D3C FF FF FF FF FF FF FF FF     
   6028 FFFC7D44 FF FF FF FF FF FF FF FF     
   6029 FFFC7D4C FF FF FF FF FF FF FF FF     
   6030 FFFC7D54 FF FF FF FF FF FF FF FF     
   6031 FFFC7D5C FF FF FF FF FF FF FF FF     
   6032 FFFC7D64 FF FF FF FF FF FF FF FF     
   6033 FFFC7D6C FF FF FF FF FF FF FF FF     
   6034 FFFC7D74 FF FF FF FF FF FF FF FF     
   6035 FFFC7D7C FF FF FF FF FF FF FF FF     
   6036 FFFC7D84 FF FF FF FF FF FF FF FF     
   6037 FFFC7D8C FF FF FF FF FF FF FF FF     
   6038 FFFC7D94 FF FF FF FF FF FF FF FF     
   6039 FFFC7D9C FF FF FF FF FF FF FF FF     
   6040 FFFC7DA4 FF FF FF FF FF FF FF FF     
   6041 FFFC7DAC FF FF FF FF FF FF FF FF     
   6042 FFFC7DB4 FF FF FF FF FF FF FF FF     
   6043 FFFC7DBC FF FF FF FF FF FF FF FF     
   6044 FFFC7DC4 FF FF FF FF FF FF FF FF     
   6045 FFFC7DCC FF FF FF FF FF FF FF FF     
   6046 FFFC7DD4 FF FF FF FF FF FF FF FF     
   6047 FFFC7DDC FF FF FF FF FF FF FF FF     
   6048 FFFC7DE4 FF FF FF FF FF FF FF FF     
   6049 FFFC7DEC FF FF FF FF FF FF FF FF     
   6050 FFFC7DF4 FF FF FF FF FF FF FF FF     
   6051 FFFC7DFC FF FF FF FF FF FF FF FF     
   6052 FFFC7E04 FF FF FF FF FF FF FF FF     
   6053 FFFC7E0C FF FF FF FF FF FF FF FF     
   6054 FFFC7E14 FF FF FF FF FF FF FF FF     
   6055 FFFC7E1C FF FF FF FF FF FF FF FF     
   6056 FFFC7E24 FF FF FF FF FF FF FF FF     
   6057 FFFC7E2C FF FF FF FF FF FF FF FF     
   6058 FFFC7E34 FF FF FF FF FF FF FF FF     
   6059 FFFC7E3C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 53
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6060 FFFC7E44 FF FF FF FF FF FF FF FF     
   6061 FFFC7E4C FF FF FF FF FF FF FF FF     
   6062 FFFC7E54 FF FF FF FF FF FF FF FF     
   6063 FFFC7E5C FF FF FF FF FF FF FF FF     
   6064 FFFC7E64 FF FF FF FF FF FF FF FF     
   6065 FFFC7E6C FF FF FF FF FF FF FF FF     
   6066 FFFC7E74 FF FF FF FF FF FF FF FF     
   6067 FFFC7E7C FF FF FF FF FF FF FF FF     
   6068 FFFC7E84 FF FF FF FF FF FF FF FF     
   6069 FFFC7E8C FF FF FF FF FF FF FF FF     
   6070 FFFC7E94 FF FF FF FF FF FF FF FF     
   6071 FFFC7E9C FF FF FF FF FF FF FF FF     
   6072 FFFC7EA4 FF FF FF FF FF FF FF FF     
   6073 FFFC7EAC FF FF FF FF FF FF FF FF     
   6074 FFFC7EB4 FF FF FF FF FF FF FF FF     
   6075 FFFC7EBC FF FF FF FF FF FF FF FF     
   6076 FFFC7EC4 FF FF FF FF FF FF FF FF     
   6077 FFFC7ECC FF FF FF FF FF FF FF FF     
   6078 FFFC7ED4 FF FF FF FF FF FF FF FF     
   6079 FFFC7EDC FF FF FF FF FF FF FF FF     
   6080 FFFC7EE4 FF FF FF FF FF FF FF FF     
   6081 FFFC7EEC FF FF FF FF FF FF FF FF     
   6082 FFFC7EF4 FF FF FF FF FF FF FF FF     
   6083 FFFC7EFC FF FF FF FF FF FF FF FF     
   6084 FFFC7F04 FF FF FF FF FF FF FF FF     
   6085 FFFC7F0C FF FF FF FF FF FF FF FF     
   6086 FFFC7F14 FF FF FF FF FF FF FF FF     
   6087 FFFC7F1C FF FF FF FF FF FF FF FF     
   6088 FFFC7F24 FF FF FF FF FF FF FF FF     
   6089 FFFC7F2C FF FF FF FF FF FF FF FF     
   6090 FFFC7F34 FF FF FF FF FF FF FF FF     
   6091 FFFC7F3C FF FF FF FF FF FF FF FF     
   6092 FFFC7F44 FF FF FF FF FF FF FF FF     
   6093 FFFC7F4C FF FF FF FF FF FF FF FF     
   6094 FFFC7F54 FF FF FF FF FF FF FF FF     
   6095 FFFC7F5C FF FF FF FF FF FF FF FF     
   6096 FFFC7F64 FF FF FF FF FF FF FF FF     
   6097 FFFC7F6C FF FF FF FF FF FF FF FF     
   6098 FFFC7F74 FF FF FF FF FF FF FF FF     
   6099 FFFC7F7C FF FF FF FF FF FF FF FF     
   6100 FFFC7F84 FF FF FF FF FF FF FF FF     
   6101 FFFC7F8C FF FF FF FF FF FF FF FF     
   6102 FFFC7F94 FF FF FF FF FF FF FF FF     
   6103 FFFC7F9C FF FF FF FF FF FF FF FF     
   6104 FFFC7FA4 FF FF FF FF FF FF FF FF     
   6105 FFFC7FAC FF FF FF FF FF FF FF FF     
   6106 FFFC7FB4 FF FF FF FF FF FF FF FF     
   6107 FFFC7FBC FF FF FF FF FF FF FF FF     
   6108 FFFC7FC4 FF FF FF FF FF FF FF FF     
   6109 FFFC7FCC FF FF FF FF FF FF FF FF     
   6110 FFFC7FD4 FF FF FF FF FF FF FF FF     
   6111 FFFC7FDC FF FF FF FF FF FF FF FF     
   6112 FFFC7FE4 FF FF FF FF FF FF FF FF     
   6113 FFFC7FEC FF FF FF FF FF FF FF FF     
   6114 FFFC7FF4 FF FF FF FF FF FF FF FF     
   6115 FFFC7FFC FF FF FF FF FF FF FF FF     
   6116 FFFC8004 FF FF FF FF FF FF FF FF     
   6117 FFFC800C FF FF FF FF FF FF FF FF     
   6118 FFFC8014 FF FF FF FF FF FF FF FF     
   6119 FFFC801C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 54
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6120 FFFC8024 FF FF FF FF FF FF FF FF     
   6121 FFFC802C FF FF FF FF FF FF FF FF     
   6122 FFFC8034 FF FF FF FF FF FF FF FF     
   6123 FFFC803C FF FF FF FF FF FF FF FF     
   6124 FFFC8044 FF FF FF FF FF FF FF FF     
   6125 FFFC804C FF FF FF FF FF FF FF FF     
   6126 FFFC8054 FF FF FF FF FF FF FF FF     
   6127 FFFC805C FF FF FF FF FF FF FF FF     
   6128 FFFC8064 FF FF FF FF FF FF FF FF     
   6129 FFFC806C FF FF FF FF FF FF FF FF     
   6130 FFFC8074 FF FF FF FF FF FF FF FF     
   6131 FFFC807C FF FF FF FF FF FF FF FF     
   6132 FFFC8084 FF FF FF FF FF FF FF FF     
   6133 FFFC808C FF FF FF FF FF FF FF FF     
   6134 FFFC8094 FF FF FF FF FF FF FF FF     
   6135 FFFC809C FF FF FF FF FF FF FF FF     
   6136 FFFC80A4 FF FF FF FF FF FF FF FF     
   6137 FFFC80AC FF FF FF FF FF FF FF FF     
   6138 FFFC80B4 FF FF FF FF FF FF FF FF     
   6139 FFFC80BC FF FF FF FF FF FF FF FF     
   6140 FFFC80C4 FF FF FF FF FF FF FF FF     
   6141 FFFC80CC FF FF FF FF FF FF FF FF     
   6142 FFFC80D4 FF FF FF FF FF FF FF FF     
   6143 FFFC80DC FF FF FF FF FF FF FF FF     
   6144 FFFC80E4 FF FF FF FF FF FF FF FF     
   6145 FFFC80EC FF FF FF FF FF FF FF FF     
   6146 FFFC80F4 FF FF FF FF FF FF FF FF     
   6147 FFFC80FC FF FF FF FF FF FF FF FF     
   6148 FFFC8104 FF FF FF FF FF FF FF FF     
   6149 FFFC810C FF FF FF FF FF FF FF FF     
   6150 FFFC8114 FF FF FF FF FF FF FF FF     
   6151 FFFC811C FF FF FF FF FF FF FF FF     
   6152 FFFC8124 FF FF FF FF FF FF FF FF     
   6153 FFFC812C FF FF FF FF FF FF FF FF     
   6154 FFFC8134 FF FF FF FF FF FF FF FF     
   6155 FFFC813C FF FF FF FF FF FF FF FF     
   6156 FFFC8144 FF FF FF FF FF FF FF FF     
   6157 FFFC814C FF FF FF FF FF FF FF FF     
   6158 FFFC8154 FF FF FF FF FF FF FF FF     
   6159 FFFC815C FF FF FF FF FF FF FF FF     
   6160 FFFC8164 FF FF FF FF FF FF FF FF     
   6161 FFFC816C FF FF FF FF FF FF FF FF     
   6162 FFFC8174 FF FF FF FF FF FF FF FF     
   6163 FFFC817C FF FF FF FF FF FF FF FF     
   6164 FFFC8184 FF FF FF FF FF FF FF FF     
   6165 FFFC818C FF FF FF FF FF FF FF FF     
   6166 FFFC8194 FF FF FF FF FF FF FF FF     
   6167 FFFC819C FF FF FF FF FF FF FF FF     
   6168 FFFC81A4 FF FF FF FF FF FF FF FF     
   6169 FFFC81AC FF FF FF FF FF FF FF FF     
   6170 FFFC81B4 FF FF FF FF FF FF FF FF     
   6171 FFFC81BC FF FF FF FF FF FF FF FF     
   6172 FFFC81C4 FF FF FF FF FF FF FF FF     
   6173 FFFC81CC FF FF FF FF FF FF FF FF     
   6174 FFFC81D4 FF FF FF FF FF FF FF FF     
   6175 FFFC81DC FF FF FF FF FF FF FF FF     
   6176 FFFC81E4 FF FF FF FF FF FF FF FF     
   6177 FFFC81EC FF FF FF FF FF FF FF FF     
   6178 FFFC81F4 FF FF FF FF FF FF FF FF     
   6179 FFFC81FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 55
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6180 FFFC8204 FF FF FF FF FF FF FF FF     
   6181 FFFC820C FF FF FF FF FF FF FF FF     
   6182 FFFC8214 FF FF FF FF FF FF FF FF     
   6183 FFFC821C FF FF FF FF FF FF FF FF     
   6184 FFFC8224 FF FF FF FF FF FF FF FF     
   6185 FFFC822C FF FF FF FF FF FF FF FF     
   6186 FFFC8234 FF FF FF FF FF FF FF FF     
   6187 FFFC823C FF FF FF FF FF FF FF FF     
   6188 FFFC8244 FF FF FF FF FF FF FF FF     
   6189 FFFC824C FF FF FF FF FF FF FF FF     
   6190 FFFC8254 FF FF FF FF FF FF FF FF     
   6191 FFFC825C FF FF FF FF FF FF FF FF     
   6192 FFFC8264 FF FF FF FF FF FF FF FF     
   6193 FFFC826C FF FF FF FF FF FF FF FF     
   6194 FFFC8274 FF FF FF FF FF FF FF FF     
   6195 FFFC827C FF FF FF FF FF FF FF FF     
   6196 FFFC8284 FF FF FF FF FF FF FF FF     
   6197 FFFC828C FF FF FF FF FF FF FF FF     
   6198 FFFC8294 FF FF FF FF FF FF FF FF     
   6199 FFFC829C FF FF FF FF FF FF FF FF     
   6200 FFFC82A4 FF FF FF FF FF FF FF FF     
   6201 FFFC82AC FF FF FF FF FF FF FF FF     
   6202 FFFC82B4 FF FF FF FF FF FF FF FF     
   6203 FFFC82BC FF FF FF FF FF FF FF FF     
   6204 FFFC82C4 FF FF FF FF FF FF FF FF     
   6205 FFFC82CC FF FF FF FF FF FF FF FF     
   6206 FFFC82D4 FF FF FF FF FF FF FF FF     
   6207 FFFC82DC FF FF FF FF FF FF FF FF     
   6208 FFFC82E4 FF FF FF FF FF FF FF FF     
   6209 FFFC82EC FF FF FF FF FF FF FF FF     
   6210 FFFC82F4 FF FF FF FF FF FF FF FF     
   6211 FFFC82FC FF FF FF FF FF FF FF FF     
   6212 FFFC8304 FF FF FF FF FF FF FF FF     
   6213 FFFC830C FF FF FF FF FF FF FF FF     
   6214 FFFC8314 FF FF FF FF FF FF FF FF     
   6215 FFFC831C FF FF FF FF FF FF FF FF     
   6216 FFFC8324 FF FF FF FF FF FF FF FF     
   6217 FFFC832C FF FF FF FF FF FF FF FF     
   6218 FFFC8334 FF FF FF FF FF FF FF FF     
   6219 FFFC833C FF FF FF FF FF FF FF FF     
   6220 FFFC8344 FF FF FF FF FF FF FF FF     
   6221 FFFC834C FF FF FF FF FF FF FF FF     
   6222 FFFC8354 FF FF FF FF FF FF FF FF     
   6223 FFFC835C FF FF FF FF FF FF FF FF     
   6224 FFFC8364 FF FF FF FF FF FF FF FF     
   6225 FFFC836C FF FF FF FF FF FF FF FF     
   6226 FFFC8374 FF FF FF FF FF FF FF FF     
   6227 FFFC837C FF FF FF FF FF FF FF FF     
   6228 FFFC8384 FF FF FF FF FF FF FF FF     
   6229 FFFC838C FF FF FF FF FF FF FF FF     
   6230 FFFC8394 FF FF FF FF FF FF FF FF     
   6231 FFFC839C FF FF FF FF FF FF FF FF     
   6232 FFFC83A4 FF FF FF FF FF FF FF FF     
   6233 FFFC83AC FF FF FF FF FF FF FF FF     
   6234 FFFC83B4 FF FF FF FF FF FF FF FF     
   6235 FFFC83BC FF FF FF FF FF FF FF FF     
   6236 FFFC83C4 FF FF FF FF FF FF FF FF     
   6237 FFFC83CC FF FF FF FF FF FF FF FF     
   6238 FFFC83D4 FF FF FF FF FF FF FF FF     
   6239 FFFC83DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 56
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6240 FFFC83E4 FF FF FF FF FF FF FF FF     
   6241 FFFC83EC FF FF FF FF FF FF FF FF     
   6242 FFFC83F4 FF FF FF FF FF FF FF FF     
   6243 FFFC83FC FF FF FF FF FF FF FF FF     
   6244 FFFC8404 FF FF FF FF FF FF FF FF     
   6245 FFFC840C FF FF FF FF FF FF FF FF     
   6246 FFFC8414 FF FF FF FF FF FF FF FF     
   6247 FFFC841C FF FF FF FF FF FF FF FF     
   6248 FFFC8424 FF FF FF FF FF FF FF FF     
   6249 FFFC842C FF FF FF FF FF FF FF FF     
   6250 FFFC8434 FF FF FF FF FF FF FF FF     
   6251 FFFC843C FF FF FF FF FF FF FF FF     
   6252 FFFC8444 FF FF FF FF FF FF FF FF     
   6253 FFFC844C FF FF FF FF FF FF FF FF     
   6254 FFFC8454 FF FF FF FF FF FF FF FF     
   6255 FFFC845C FF FF FF FF FF FF FF FF     
   6256 FFFC8464 FF FF FF FF FF FF FF FF     
   6257 FFFC846C FF FF FF FF FF FF FF FF     
   6258 FFFC8474 FF FF FF FF FF FF FF FF     
   6259 FFFC847C FF FF FF FF FF FF FF FF     
   6260 FFFC8484 FF FF FF FF FF FF FF FF     
   6261 FFFC848C FF FF FF FF FF FF FF FF     
   6262 FFFC8494 FF FF FF FF FF FF FF FF     
   6263 FFFC849C FF FF FF FF FF FF FF FF     
   6264 FFFC84A4 FF FF FF FF FF FF FF FF     
   6265 FFFC84AC FF FF FF FF FF FF FF FF     
   6266 FFFC84B4 FF FF FF FF FF FF FF FF     
   6267 FFFC84BC FF FF FF FF FF FF FF FF     
   6268 FFFC84C4 FF FF FF FF FF FF FF FF     
   6269 FFFC84CC FF FF FF FF FF FF FF FF     
   6270 FFFC84D4 FF FF FF FF FF FF FF FF     
   6271 FFFC84DC FF FF FF FF FF FF FF FF     
   6272 FFFC84E4 FF FF FF FF FF FF FF FF     
   6273 FFFC84EC FF FF FF FF FF FF FF FF     
   6274 FFFC84F4 FF FF FF FF FF FF FF FF     
   6275 FFFC84FC FF FF FF FF FF FF FF FF     
   6276 FFFC8504 FF FF FF FF FF FF FF FF     
   6277 FFFC850C FF FF FF FF FF FF FF FF     
   6278 FFFC8514 FF FF FF FF FF FF FF FF     
   6279 FFFC851C FF FF FF FF FF FF FF FF     
   6280 FFFC8524 FF FF FF FF FF FF FF FF     
   6281 FFFC852C FF FF FF FF FF FF FF FF     
   6282 FFFC8534 FF FF FF FF FF FF FF FF     
   6283 FFFC853C FF FF FF FF FF FF FF FF     
   6284 FFFC8544 FF FF FF FF FF FF FF FF     
   6285 FFFC854C FF FF FF FF FF FF FF FF     
   6286 FFFC8554 FF FF FF FF FF FF FF FF     
   6287 FFFC855C FF FF FF FF FF FF FF FF     
   6288 FFFC8564 FF FF FF FF FF FF FF FF     
   6289 FFFC856C FF FF FF FF FF FF FF FF     
   6290 FFFC8574 FF FF FF FF FF FF FF FF     
   6291 FFFC857C FF FF FF FF FF FF FF FF     
   6292 FFFC8584 FF FF FF FF FF FF FF FF     
   6293 FFFC858C FF FF FF FF FF FF FF FF     
   6294 FFFC8594 FF FF FF FF FF FF FF FF     
   6295 FFFC859C FF FF FF FF FF FF FF FF     
   6296 FFFC85A4 FF FF FF FF FF FF FF FF     
   6297 FFFC85AC FF FF FF FF FF FF FF FF     
   6298 FFFC85B4 FF FF FF FF FF FF FF FF     
   6299 FFFC85BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 57
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6300 FFFC85C4 FF FF FF FF FF FF FF FF     
   6301 FFFC85CC FF FF FF FF FF FF FF FF     
   6302 FFFC85D4 FF FF FF FF FF FF FF FF     
   6303 FFFC85DC FF FF FF FF FF FF FF FF     
   6304 FFFC85E4 FF FF FF FF FF FF FF FF     
   6305 FFFC85EC FF FF FF FF FF FF FF FF     
   6306 FFFC85F4 FF FF FF FF FF FF FF FF     
   6307 FFFC85FC FF FF FF FF FF FF FF FF     
   6308 FFFC8604 FF FF FF FF FF FF FF FF     
   6309 FFFC860C FF FF FF FF FF FF FF FF     
   6310 FFFC8614 FF FF FF FF FF FF FF FF     
   6311 FFFC861C FF FF FF FF FF FF FF FF     
   6312 FFFC8624 FF FF FF FF FF FF FF FF     
   6313 FFFC862C FF FF FF FF FF FF FF FF     
   6314 FFFC8634 FF FF FF FF FF FF FF FF     
   6315 FFFC863C FF FF FF FF FF FF FF FF     
   6316 FFFC8644 FF FF FF FF FF FF FF FF     
   6317 FFFC864C FF FF FF FF FF FF FF FF     
   6318 FFFC8654 FF FF FF FF FF FF FF FF     
   6319 FFFC865C FF FF FF FF FF FF FF FF     
   6320 FFFC8664 FF FF FF FF FF FF FF FF     
   6321 FFFC866C FF FF FF FF FF FF FF FF     
   6322 FFFC8674 FF FF FF FF FF FF FF FF     
   6323 FFFC867C FF FF FF FF FF FF FF FF     
   6324 FFFC8684 FF FF FF FF FF FF FF FF     
   6325 FFFC868C FF FF FF FF FF FF FF FF     
   6326 FFFC8694 FF FF FF FF FF FF FF FF     
   6327 FFFC869C FF FF FF FF FF FF FF FF     
   6328 FFFC86A4 FF FF FF FF FF FF FF FF     
   6329 FFFC86AC FF FF FF FF FF FF FF FF     
   6330 FFFC86B4 FF FF FF FF FF FF FF FF     
   6331 FFFC86BC FF FF FF FF FF FF FF FF     
   6332 FFFC86C4 FF FF FF FF FF FF FF FF     
   6333 FFFC86CC FF FF FF FF FF FF FF FF     
   6334 FFFC86D4 FF FF FF FF FF FF FF FF     
   6335 FFFC86DC FF FF FF FF FF FF FF FF     
   6336 FFFC86E4 FF FF FF FF FF FF FF FF     
   6337 FFFC86EC FF FF FF FF FF FF FF FF     
   6338 FFFC86F4 FF FF FF FF FF FF FF FF     
   6339 FFFC86FC FF FF FF FF FF FF FF FF     
   6340 FFFC8704 FF FF FF FF FF FF FF FF     
   6341 FFFC870C FF FF FF FF FF FF FF FF     
   6342 FFFC8714 FF FF FF FF FF FF FF FF     
   6343 FFFC871C FF FF FF FF FF FF FF FF     
   6344 FFFC8724 FF FF FF FF FF FF FF FF     
   6345 FFFC872C FF FF FF FF FF FF FF FF     
   6346 FFFC8734 FF FF FF FF FF FF FF FF     
   6347 FFFC873C FF FF FF FF FF FF FF FF     
   6348 FFFC8744 FF FF FF FF FF FF FF FF     
   6349 FFFC874C FF FF FF FF FF FF FF FF     
   6350 FFFC8754 FF FF FF FF FF FF FF FF     
   6351 FFFC875C FF FF FF FF FF FF FF FF     
   6352 FFFC8764 FF FF FF FF FF FF FF FF     
   6353 FFFC876C FF FF FF FF FF FF FF FF     
   6354 FFFC8774 FF FF FF FF FF FF FF FF     
   6355 FFFC877C FF FF FF FF FF FF FF FF     
   6356 FFFC8784 FF FF FF FF FF FF FF FF     
   6357 FFFC878C FF FF FF FF FF FF FF FF     
   6358 FFFC8794 FF FF FF FF FF FF FF FF     
   6359 FFFC879C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 58
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6360 FFFC87A4 FF FF FF FF FF FF FF FF     
   6361 FFFC87AC FF FF FF FF FF FF FF FF     
   6362 FFFC87B4 FF FF FF FF FF FF FF FF     
   6363 FFFC87BC FF FF FF FF FF FF FF FF     
   6364 FFFC87C4 FF FF FF FF FF FF FF FF     
   6365 FFFC87CC FF FF FF FF FF FF FF FF     
   6366 FFFC87D4 FF FF FF FF FF FF FF FF     
   6367 FFFC87DC FF FF FF FF FF FF FF FF     
   6368 FFFC87E4 FF FF FF FF FF FF FF FF     
   6369 FFFC87EC FF FF FF FF FF FF FF FF     
   6370 FFFC87F4 FF FF FF FF FF FF FF FF     
   6371 FFFC87FC FF FF FF FF FF FF FF FF     
   6372 FFFC8804 FF FF FF FF FF FF FF FF     
   6373 FFFC880C FF FF FF FF FF FF FF FF     
   6374 FFFC8814 FF FF FF FF FF FF FF FF     
   6375 FFFC881C FF FF FF FF FF FF FF FF     
   6376 FFFC8824 FF FF FF FF FF FF FF FF     
   6377 FFFC882C FF FF FF FF FF FF FF FF     
   6378 FFFC8834 FF FF FF FF FF FF FF FF     
   6379 FFFC883C FF FF FF FF FF FF FF FF     
   6380 FFFC8844 FF FF FF FF FF FF FF FF     
   6381 FFFC884C FF FF FF FF FF FF FF FF     
   6382 FFFC8854 FF FF FF FF FF FF FF FF     
   6383 FFFC885C FF FF FF FF FF FF FF FF     
   6384 FFFC8864 FF FF FF FF FF FF FF FF     
   6385 FFFC886C FF FF FF FF FF FF FF FF     
   6386 FFFC8874 FF FF FF FF FF FF FF FF     
   6387 FFFC887C FF FF FF FF FF FF FF FF     
   6388 FFFC8884 FF FF FF FF FF FF FF FF     
   6389 FFFC888C FF FF FF FF FF FF FF FF     
   6390 FFFC8894 FF FF FF FF FF FF FF FF     
   6391 FFFC889C FF FF FF FF FF FF FF FF     
   6392 FFFC88A4 FF FF FF FF FF FF FF FF     
   6393 FFFC88AC FF FF FF FF FF FF FF FF     
   6394 FFFC88B4 FF FF FF FF FF FF FF FF     
   6395 FFFC88BC FF FF FF FF FF FF FF FF     
   6396 FFFC88C4 FF FF FF FF FF FF FF FF     
   6397 FFFC88CC FF FF FF FF FF FF FF FF     
   6398 FFFC88D4 FF FF FF FF FF FF FF FF     
   6399 FFFC88DC FF FF FF FF FF FF FF FF     
   6400 FFFC88E4 FF FF FF FF FF FF FF FF     
   6401 FFFC88EC FF FF FF FF FF FF FF FF     
   6402 FFFC88F4 FF FF FF FF FF FF FF FF     
   6403 FFFC88FC FF FF FF FF FF FF FF FF     
   6404 FFFC8904 FF FF FF FF FF FF FF FF     
   6405 FFFC890C FF FF FF FF FF FF FF FF     
   6406 FFFC8914 FF FF FF FF FF FF FF FF     
   6407 FFFC891C FF FF FF FF FF FF FF FF     
   6408 FFFC8924 FF FF FF FF FF FF FF FF     
   6409 FFFC892C FF FF FF FF FF FF FF FF     
   6410 FFFC8934 FF FF FF FF FF FF FF FF     
   6411 FFFC893C FF FF FF FF FF FF FF FF     
   6412 FFFC8944 FF FF FF FF FF FF FF FF     
   6413 FFFC894C FF FF FF FF FF FF FF FF     
   6414 FFFC8954 FF FF FF FF FF FF FF FF     
   6415 FFFC895C FF FF FF FF FF FF FF FF     
   6416 FFFC8964 FF FF FF FF FF FF FF FF     
   6417 FFFC896C FF FF FF FF FF FF FF FF     
   6418 FFFC8974 FF FF FF FF FF FF FF FF     
   6419 FFFC897C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 59
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6420 FFFC8984 FF FF FF FF FF FF FF FF     
   6421 FFFC898C FF FF FF FF FF FF FF FF     
   6422 FFFC8994 FF FF FF FF FF FF FF FF     
   6423 FFFC899C FF FF FF FF FF FF FF FF     
   6424 FFFC89A4 FF FF FF FF FF FF FF FF     
   6425 FFFC89AC FF FF FF FF FF FF FF FF     
   6426 FFFC89B4 FF FF FF FF FF FF FF FF     
   6427 FFFC89BC FF FF FF FF FF FF FF FF     
   6428 FFFC89C4 FF FF FF FF FF FF FF FF     
   6429 FFFC89CC FF FF FF FF FF FF FF FF     
   6430 FFFC89D4 FF FF FF FF FF FF FF FF     
   6431 FFFC89DC FF FF FF FF FF FF FF FF     
   6432 FFFC89E4 FF FF FF FF FF FF FF FF     
   6433 FFFC89EC FF FF FF FF FF FF FF FF     
   6434 FFFC89F4 FF FF FF FF FF FF FF FF     
   6435 FFFC89FC FF FF FF FF FF FF FF FF     
   6436 FFFC8A04 FF FF FF FF FF FF FF FF     
   6437 FFFC8A0C FF FF FF FF FF FF FF FF     
   6438 FFFC8A14 FF FF FF FF FF FF FF FF     
   6439 FFFC8A1C FF FF FF FF FF FF FF FF     
   6440 FFFC8A24 FF FF FF FF FF FF FF FF     
   6441 FFFC8A2C FF FF FF FF FF FF FF FF     
   6442 FFFC8A34 FF FF FF FF FF FF FF FF     
   6443 FFFC8A3C FF FF FF FF FF FF FF FF     
   6444 FFFC8A44 FF FF FF FF FF FF FF FF     
   6445 FFFC8A4C FF FF FF FF FF FF FF FF     
   6446 FFFC8A54 FF FF FF FF FF FF FF FF     
   6447 FFFC8A5C FF FF FF FF FF FF FF FF     
   6448 FFFC8A64 FF FF FF FF FF FF FF FF     
   6449 FFFC8A6C FF FF FF FF FF FF FF FF     
   6450 FFFC8A74 FF FF FF FF FF FF FF FF     
   6451 FFFC8A7C FF FF FF FF FF FF FF FF     
   6452 FFFC8A84 FF FF FF FF FF FF FF FF     
   6453 FFFC8A8C FF FF FF FF FF FF FF FF     
   6454 FFFC8A94 FF FF FF FF FF FF FF FF     
   6455 FFFC8A9C FF FF FF FF FF FF FF FF     
   6456 FFFC8AA4 FF FF FF FF FF FF FF FF     
   6457 FFFC8AAC FF FF FF FF FF FF FF FF     
   6458 FFFC8AB4 FF FF FF FF FF FF FF FF     
   6459 FFFC8ABC FF FF FF FF FF FF FF FF     
   6460 FFFC8AC4 FF FF FF FF FF FF FF FF     
   6461 FFFC8ACC FF FF FF FF FF FF FF FF     
   6462 FFFC8AD4 FF FF FF FF FF FF FF FF     
   6463 FFFC8ADC FF FF FF FF FF FF FF FF     
   6464 FFFC8AE4 FF FF FF FF FF FF FF FF     
   6465 FFFC8AEC FF FF FF FF FF FF FF FF     
   6466 FFFC8AF4 FF FF FF FF FF FF FF FF     
   6467 FFFC8AFC FF FF FF FF FF FF FF FF     
   6468 FFFC8B04 FF FF FF FF FF FF FF FF     
   6469 FFFC8B0C FF FF FF FF FF FF FF FF     
   6470 FFFC8B14 FF FF FF FF FF FF FF FF     
   6471 FFFC8B1C FF FF FF FF FF FF FF FF     
   6472 FFFC8B24 FF FF FF FF FF FF FF FF     
   6473 FFFC8B2C FF FF FF FF FF FF FF FF     
   6474 FFFC8B34 FF FF FF FF FF FF FF FF     
   6475 FFFC8B3C FF FF FF FF FF FF FF FF     
   6476 FFFC8B44 FF FF FF FF FF FF FF FF     
   6477 FFFC8B4C FF FF FF FF FF FF FF FF     
   6478 FFFC8B54 FF FF FF FF FF FF FF FF     
   6479 FFFC8B5C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 60
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6480 FFFC8B64 FF FF FF FF FF FF FF FF     
   6481 FFFC8B6C FF FF FF FF FF FF FF FF     
   6482 FFFC8B74 FF FF FF FF FF FF FF FF     
   6483 FFFC8B7C FF FF FF FF FF FF FF FF     
   6484 FFFC8B84 FF FF FF FF FF FF FF FF     
   6485 FFFC8B8C FF FF FF FF FF FF FF FF     
   6486 FFFC8B94 FF FF FF FF FF FF FF FF     
   6487 FFFC8B9C FF FF FF FF FF FF FF FF     
   6488 FFFC8BA4 FF FF FF FF FF FF FF FF     
   6489 FFFC8BAC FF FF FF FF FF FF FF FF     
   6490 FFFC8BB4 FF FF FF FF FF FF FF FF     
   6491 FFFC8BBC FF FF FF FF FF FF FF FF     
   6492 FFFC8BC4 FF FF FF FF FF FF FF FF     
   6493 FFFC8BCC FF FF FF FF FF FF FF FF     
   6494 FFFC8BD4 FF FF FF FF FF FF FF FF     
   6495 FFFC8BDC FF FF FF FF FF FF FF FF     
   6496 FFFC8BE4 FF FF FF FF FF FF FF FF     
   6497 FFFC8BEC FF FF FF FF FF FF FF FF     
   6498 FFFC8BF4 FF FF FF FF FF FF FF FF     
   6499 FFFC8BFC FF FF FF FF FF FF FF FF     
   6500 FFFC8C04 FF FF FF FF FF FF FF FF     
   6501 FFFC8C0C FF FF FF FF FF FF FF FF     
   6502 FFFC8C14 FF FF FF FF FF FF FF FF     
   6503 FFFC8C1C FF FF FF FF FF FF FF FF     
   6504 FFFC8C24 FF FF FF FF FF FF FF FF     
   6505 FFFC8C2C FF FF FF FF FF FF FF FF     
   6506 FFFC8C34 FF FF FF FF FF FF FF FF     
   6507 FFFC8C3C FF FF FF FF FF FF FF FF     
   6508 FFFC8C44 FF FF FF FF FF FF FF FF     
   6509 FFFC8C4C FF FF FF FF FF FF FF FF     
   6510 FFFC8C54 FF FF FF FF FF FF FF FF     
   6511 FFFC8C5C FF FF FF FF FF FF FF FF     
   6512 FFFC8C64 FF FF FF FF FF FF FF FF     
   6513 FFFC8C6C FF FF FF FF FF FF FF FF     
   6514 FFFC8C74 FF FF FF FF FF FF FF FF     
   6515 FFFC8C7C FF FF FF FF FF FF FF FF     
   6516 FFFC8C84 FF FF FF FF FF FF FF FF     
   6517 FFFC8C8C FF FF FF FF FF FF FF FF     
   6518 FFFC8C94 FF FF FF FF FF FF FF FF     
   6519 FFFC8C9C FF FF FF FF FF FF FF FF     
   6520 FFFC8CA4 FF FF FF FF FF FF FF FF     
   6521 FFFC8CAC FF FF FF FF FF FF FF FF     
   6522 FFFC8CB4 FF FF FF FF FF FF FF FF     
   6523 FFFC8CBC FF FF FF FF FF FF FF FF     
   6524 FFFC8CC4 FF FF FF FF FF FF FF FF     
   6525 FFFC8CCC FF FF FF FF FF FF FF FF     
   6526 FFFC8CD4 FF FF FF FF FF FF FF FF     
   6527 FFFC8CDC FF FF FF FF FF FF FF FF     
   6528 FFFC8CE4 FF FF FF FF FF FF FF FF     
   6529 FFFC8CEC FF FF FF FF FF FF FF FF     
   6530 FFFC8CF4 FF FF FF FF FF FF FF FF     
   6531 FFFC8CFC FF FF FF FF FF FF FF FF     
   6532 FFFC8D04 FF FF FF FF FF FF FF FF     
   6533 FFFC8D0C FF FF FF FF FF FF FF FF     
   6534 FFFC8D14 FF FF FF FF FF FF FF FF     
   6535 FFFC8D1C FF FF FF FF FF FF FF FF     
   6536 FFFC8D24 FF FF FF FF FF FF FF FF     
   6537 FFFC8D2C FF FF FF FF FF FF FF FF     
   6538 FFFC8D34 FF FF FF FF FF FF FF FF     
   6539 FFFC8D3C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 61
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6540 FFFC8D44 FF FF FF FF FF FF FF FF     
   6541 FFFC8D4C FF FF FF FF FF FF FF FF     
   6542 FFFC8D54 FF FF FF FF FF FF FF FF     
   6543 FFFC8D5C FF FF FF FF FF FF FF FF     
   6544 FFFC8D64 FF FF FF FF FF FF FF FF     
   6545 FFFC8D6C FF FF FF FF FF FF FF FF     
   6546 FFFC8D74 FF FF FF FF FF FF FF FF     
   6547 FFFC8D7C FF FF FF FF FF FF FF FF     
   6548 FFFC8D84 FF FF FF FF FF FF FF FF     
   6549 FFFC8D8C FF FF FF FF FF FF FF FF     
   6550 FFFC8D94 FF FF FF FF FF FF FF FF     
   6551 FFFC8D9C FF FF FF FF FF FF FF FF     
   6552 FFFC8DA4 FF FF FF FF FF FF FF FF     
   6553 FFFC8DAC FF FF FF FF FF FF FF FF     
   6554 FFFC8DB4 FF FF FF FF FF FF FF FF     
   6555 FFFC8DBC FF FF FF FF FF FF FF FF     
   6556 FFFC8DC4 FF FF FF FF FF FF FF FF     
   6557 FFFC8DCC FF FF FF FF FF FF FF FF     
   6558 FFFC8DD4 FF FF FF FF FF FF FF FF     
   6559 FFFC8DDC FF FF FF FF FF FF FF FF     
   6560 FFFC8DE4 FF FF FF FF FF FF FF FF     
   6561 FFFC8DEC FF FF FF FF FF FF FF FF     
   6562 FFFC8DF4 FF FF FF FF FF FF FF FF     
   6563 FFFC8DFC FF FF FF FF FF FF FF FF     
   6564 FFFC8E04 FF FF FF FF FF FF FF FF     
   6565 FFFC8E0C FF FF FF FF FF FF FF FF     
   6566 FFFC8E14 FF FF FF FF FF FF FF FF     
   6567 FFFC8E1C FF FF FF FF FF FF FF FF     
   6568 FFFC8E24 FF FF FF FF FF FF FF FF     
   6569 FFFC8E2C FF FF FF FF FF FF FF FF     
   6570 FFFC8E34 FF FF FF FF FF FF FF FF     
   6571 FFFC8E3C FF FF FF FF FF FF FF FF     
   6572 FFFC8E44 FF FF FF FF FF FF FF FF     
   6573 FFFC8E4C FF FF FF FF FF FF FF FF     
   6574 FFFC8E54 FF FF FF FF FF FF FF FF     
   6575 FFFC8E5C FF FF FF FF FF FF FF FF     
   6576 FFFC8E64 FF FF FF FF FF FF FF FF     
   6577 FFFC8E6C FF FF FF FF FF FF FF FF     
   6578 FFFC8E74 FF FF FF FF FF FF FF FF     
   6579 FFFC8E7C FF FF FF FF FF FF FF FF     
   6580 FFFC8E84 FF FF FF FF FF FF FF FF     
   6581 FFFC8E8C FF FF FF FF FF FF FF FF     
   6582 FFFC8E94 FF FF FF FF FF FF FF FF     
   6583 FFFC8E9C FF FF FF FF FF FF FF FF     
   6584 FFFC8EA4 FF FF FF FF FF FF FF FF     
   6585 FFFC8EAC FF FF FF FF FF FF FF FF     
   6586 FFFC8EB4 FF FF FF FF FF FF FF FF     
   6587 FFFC8EBC FF FF FF FF FF FF FF FF     
   6588 FFFC8EC4 FF FF FF FF FF FF FF FF     
   6589 FFFC8ECC FF FF FF FF FF FF FF FF     
   6590 FFFC8ED4 FF FF FF FF FF FF FF FF     
   6591 FFFC8EDC FF FF FF FF FF FF FF FF     
   6592 FFFC8EE4 FF FF FF FF FF FF FF FF     
   6593 FFFC8EEC FF FF FF FF FF FF FF FF     
   6594 FFFC8EF4 FF FF FF FF FF FF FF FF     
   6595 FFFC8EFC FF FF FF FF FF FF FF FF     
   6596 FFFC8F04 FF FF FF FF FF FF FF FF     
   6597 FFFC8F0C FF FF FF FF FF FF FF FF     
   6598 FFFC8F14 FF FF FF FF FF FF FF FF     
   6599 FFFC8F1C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 62
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6600 FFFC8F24 FF FF FF FF FF FF FF FF     
   6601 FFFC8F2C FF FF FF FF FF FF FF FF     
   6602 FFFC8F34 FF FF FF FF FF FF FF FF     
   6603 FFFC8F3C FF FF FF FF FF FF FF FF     
   6604 FFFC8F44 FF FF FF FF FF FF FF FF     
   6605 FFFC8F4C FF FF FF FF FF FF FF FF     
   6606 FFFC8F54 FF FF FF FF FF FF FF FF     
   6607 FFFC8F5C FF FF FF FF FF FF FF FF     
   6608 FFFC8F64 FF FF FF FF FF FF FF FF     
   6609 FFFC8F6C FF FF FF FF FF FF FF FF     
   6610 FFFC8F74 FF FF FF FF FF FF FF FF     
   6611 FFFC8F7C FF FF FF FF FF FF FF FF     
   6612 FFFC8F84 FF FF FF FF FF FF FF FF     
   6613 FFFC8F8C FF FF FF FF FF FF FF FF     
   6614 FFFC8F94 FF FF FF FF FF FF FF FF     
   6615 FFFC8F9C FF FF FF FF FF FF FF FF     
   6616 FFFC8FA4 FF FF FF FF FF FF FF FF     
   6617 FFFC8FAC FF FF FF FF FF FF FF FF     
   6618 FFFC8FB4 FF FF FF FF FF FF FF FF     
   6619 FFFC8FBC FF FF FF FF FF FF FF FF     
   6620 FFFC8FC4 FF FF FF FF FF FF FF FF     
   6621 FFFC8FCC FF FF FF FF FF FF FF FF     
   6622 FFFC8FD4 FF FF FF FF FF FF FF FF     
   6623 FFFC8FDC FF FF FF FF FF FF FF FF     
   6624 FFFC8FE4 FF FF FF FF FF FF FF FF     
   6625 FFFC8FEC FF FF FF FF FF FF FF FF     
   6626 FFFC8FF4 FF FF FF FF FF FF FF FF     
   6627 FFFC8FFC FF FF FF FF FF FF FF FF     
   6628 FFFC9004 FF FF FF FF FF FF FF FF     
   6629 FFFC900C FF FF FF FF FF FF FF FF     
   6630 FFFC9014 FF FF FF FF FF FF FF FF     
   6631 FFFC901C FF FF FF FF FF FF FF FF     
   6632 FFFC9024 FF FF FF FF FF FF FF FF     
   6633 FFFC902C FF FF FF FF FF FF FF FF     
   6634 FFFC9034 FF FF FF FF FF FF FF FF     
   6635 FFFC903C FF FF FF FF FF FF FF FF     
   6636 FFFC9044 FF FF FF FF FF FF FF FF     
   6637 FFFC904C FF FF FF FF FF FF FF FF     
   6638 FFFC9054 FF FF FF FF FF FF FF FF     
   6639 FFFC905C FF FF FF FF FF FF FF FF     
   6640 FFFC9064 FF FF FF FF FF FF FF FF     
   6641 FFFC906C FF FF FF FF FF FF FF FF     
   6642 FFFC9074 FF FF FF FF FF FF FF FF     
   6643 FFFC907C FF FF FF FF FF FF FF FF     
   6644 FFFC9084 FF FF FF FF FF FF FF FF     
   6645 FFFC908C FF FF FF FF FF FF FF FF     
   6646 FFFC9094 FF FF FF FF FF FF FF FF     
   6647 FFFC909C FF FF FF FF FF FF FF FF     
   6648 FFFC90A4 FF FF FF FF FF FF FF FF     
   6649 FFFC90AC FF FF FF FF FF FF FF FF     
   6650 FFFC90B4 FF FF FF FF FF FF FF FF     
   6651 FFFC90BC FF FF FF FF FF FF FF FF     
   6652 FFFC90C4 FF FF FF FF FF FF FF FF     
   6653 FFFC90CC FF FF FF FF FF FF FF FF     
   6654 FFFC90D4 FF FF FF FF FF FF FF FF     
   6655 FFFC90DC FF FF FF FF FF FF FF FF     
   6656 FFFC90E4 FF FF FF FF FF FF FF FF     
   6657 FFFC90EC FF FF FF FF FF FF FF FF     
   6658 FFFC90F4 FF FF FF FF FF FF FF FF     
   6659 FFFC90FC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 63
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6660 FFFC9104 FF FF FF FF FF FF FF FF     
   6661 FFFC910C FF FF FF FF FF FF FF FF     
   6662 FFFC9114 FF FF FF FF FF FF FF FF     
   6663 FFFC911C FF FF FF FF FF FF FF FF     
   6664 FFFC9124 FF FF FF FF FF FF FF FF     
   6665 FFFC912C FF FF FF FF FF FF FF FF     
   6666 FFFC9134 FF FF FF FF FF FF FF FF     
   6667 FFFC913C FF FF FF FF FF FF FF FF     
   6668 FFFC9144 FF FF FF FF FF FF FF FF     
   6669 FFFC914C FF FF FF FF FF FF FF FF     
   6670 FFFC9154 FF FF FF FF FF FF FF FF     
   6671 FFFC915C FF FF FF FF FF FF FF FF     
   6672 FFFC9164 FF FF FF FF FF FF FF FF     
   6673 FFFC916C FF FF FF FF FF FF FF FF     
   6674 FFFC9174 FF FF FF FF FF FF FF FF     
   6675 FFFC917C FF FF FF FF FF FF FF FF     
   6676 FFFC9184 FF FF FF FF FF FF FF FF     
   6677 FFFC918C FF FF FF FF FF FF FF FF     
   6678 FFFC9194 FF FF FF FF FF FF FF FF     
   6679 FFFC919C FF FF FF FF FF FF FF FF     
   6680 FFFC91A4 FF FF FF FF FF FF FF FF     
   6681 FFFC91AC FF FF FF FF FF FF FF FF     
   6682 FFFC91B4 FF FF FF FF FF FF FF FF     
   6683 FFFC91BC FF FF FF FF FF FF FF FF     
   6684 FFFC91C4 FF FF FF FF FF FF FF FF     
   6685 FFFC91CC FF FF FF FF FF FF FF FF     
   6686 FFFC91D4 FF FF FF FF FF FF FF FF     
   6687 FFFC91DC FF FF FF FF FF FF FF FF     
   6688 FFFC91E4 FF FF FF FF FF FF FF FF     
   6689 FFFC91EC FF FF FF FF FF FF FF FF     
   6690 FFFC91F4 FF FF FF FF FF FF FF FF     
   6691 FFFC91FC FF FF FF FF FF FF FF FF     
   6692 FFFC9204 FF FF FF FF FF FF FF FF     
   6693 FFFC920C FF FF FF FF FF FF FF FF     
   6694 FFFC9214 FF FF FF FF FF FF FF FF     
   6695 FFFC921C FF FF FF FF FF FF FF FF     
   6696 FFFC9224 FF FF FF FF FF FF FF FF     
   6697 FFFC922C FF FF FF FF FF FF FF FF     
   6698 FFFC9234 FF FF FF FF FF FF FF FF     
   6699 FFFC923C FF FF FF FF FF FF FF FF     
   6700 FFFC9244 FF FF FF FF FF FF FF FF     
   6701 FFFC924C FF FF FF FF FF FF FF FF     
   6702 FFFC9254 FF FF FF FF FF FF FF FF     
   6703 FFFC925C FF FF FF FF FF FF FF FF     
   6704 FFFC9264 FF FF FF FF FF FF FF FF     
   6705 FFFC926C FF FF FF FF FF FF FF FF     
   6706 FFFC9274 FF FF FF FF FF FF FF FF     
   6707 FFFC927C FF FF FF FF FF FF FF FF     
   6708 FFFC9284 FF FF FF FF FF FF FF FF     
   6709 FFFC928C FF FF FF FF FF FF FF FF     
   6710 FFFC9294 FF FF FF FF FF FF FF FF     
   6711 FFFC929C FF FF FF FF FF FF FF FF     
   6712 FFFC92A4 FF FF FF FF FF FF FF FF     
   6713 FFFC92AC FF FF FF FF FF FF FF FF     
   6714 FFFC92B4 FF FF FF FF FF FF FF FF     
   6715 FFFC92BC FF FF FF FF FF FF FF FF     
   6716 FFFC92C4 FF FF FF FF FF FF FF FF     
   6717 FFFC92CC FF FF FF FF FF FF FF FF     
   6718 FFFC92D4 FF FF FF FF FF FF FF FF     
   6719 FFFC92DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 64
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6720 FFFC92E4 FF FF FF FF FF FF FF FF     
   6721 FFFC92EC FF FF FF FF FF FF FF FF     
   6722 FFFC92F4 FF FF FF FF FF FF FF FF     
   6723 FFFC92FC FF FF FF FF FF FF FF FF     
   6724 FFFC9304 FF FF FF FF FF FF FF FF     
   6725 FFFC930C FF FF FF FF FF FF FF FF     
   6726 FFFC9314 FF FF FF FF FF FF FF FF     
   6727 FFFC931C FF FF FF FF FF FF FF FF     
   6728 FFFC9324 FF FF FF FF FF FF FF FF     
   6729 FFFC932C FF FF FF FF FF FF FF FF     
   6730 FFFC9334 FF FF FF FF FF FF FF FF     
   6731 FFFC933C FF FF FF FF FF FF FF FF     
   6732 FFFC9344 FF FF FF FF FF FF FF FF     
   6733 FFFC934C FF FF FF FF FF FF FF FF     
   6734 FFFC9354 FF FF FF FF FF FF FF FF     
   6735 FFFC935C FF FF FF FF FF FF FF FF     
   6736 FFFC9364 FF FF FF FF FF FF FF FF     
   6737 FFFC936C FF FF FF FF FF FF FF FF     
   6738 FFFC9374 FF FF FF FF FF FF FF FF     
   6739 FFFC937C FF FF FF FF FF FF FF FF     
   6740 FFFC9384 FF FF FF FF FF FF FF FF     
   6741 FFFC938C FF FF FF FF FF FF FF FF     
   6742 FFFC9394 FF FF FF FF FF FF FF FF     
   6743 FFFC939C FF FF FF FF FF FF FF FF     
   6744 FFFC93A4 FF FF FF FF FF FF FF FF     
   6745 FFFC93AC FF FF FF FF FF FF FF FF     
   6746 FFFC93B4 FF FF FF FF FF FF FF FF     
   6747 FFFC93BC FF FF FF FF FF FF FF FF     
   6748 FFFC93C4 FF FF FF FF FF FF FF FF     
   6749 FFFC93CC FF FF FF FF FF FF FF FF     
   6750 FFFC93D4 FF FF FF FF FF FF FF FF     
   6751 FFFC93DC FF FF FF FF FF FF FF FF     
   6752 FFFC93E4 FF FF FF FF FF FF FF FF     
   6753 FFFC93EC FF FF FF FF FF FF FF FF     
   6754 FFFC93F4 FF FF FF FF FF FF FF FF     
   6755 FFFC93FC FF FF FF FF FF FF FF FF     
   6756 FFFC9404 FF FF FF FF FF FF FF FF     
   6757 FFFC940C FF FF FF FF FF FF FF FF     
   6758 FFFC9414 FF FF FF FF FF FF FF FF     
   6759 FFFC941C FF FF FF FF FF FF FF FF     
   6760 FFFC9424 FF FF FF FF FF FF FF FF     
   6761 FFFC942C FF FF FF FF FF FF FF FF     
   6762 FFFC9434 FF FF FF FF FF FF FF FF     
   6763 FFFC943C FF FF FF FF FF FF FF FF     
   6764 FFFC9444 FF FF FF FF FF FF FF FF     
   6765 FFFC944C FF FF FF FF FF FF FF FF     
   6766 FFFC9454 FF FF FF FF FF FF FF FF     
   6767 FFFC945C FF FF FF FF FF FF FF FF     
   6768 FFFC9464 FF FF FF FF FF FF FF FF     
   6769 FFFC946C FF FF FF FF FF FF FF FF     
   6770 FFFC9474 FF FF FF FF FF FF FF FF     
   6771 FFFC947C FF FF FF FF FF FF FF FF     
   6772 FFFC9484 FF FF FF FF FF FF FF FF     
   6773 FFFC948C FF FF FF FF FF FF FF FF     
   6774 FFFC9494 FF FF FF FF FF FF FF FF     
   6775 FFFC949C FF FF FF FF FF FF FF FF     
   6776 FFFC94A4 FF FF FF FF FF FF FF FF     
   6777 FFFC94AC FF FF FF FF FF FF FF FF     
   6778 FFFC94B4 FF FF FF FF FF FF FF FF     
   6779 FFFC94BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 65
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6780 FFFC94C4 FF FF FF FF FF FF FF FF     
   6781 FFFC94CC FF FF FF FF FF FF FF FF     
   6782 FFFC94D4 FF FF FF FF FF FF FF FF     
   6783 FFFC94DC FF FF FF FF FF FF FF FF     
   6784 FFFC94E4 FF FF FF FF FF FF FF FF     
   6785 FFFC94EC FF FF FF FF FF FF FF FF     
   6786 FFFC94F4 FF FF FF FF FF FF FF FF     
   6787 FFFC94FC FF FF FF FF FF FF FF FF     
   6788 FFFC9504 FF FF FF FF FF FF FF FF     
   6789 FFFC950C FF FF FF FF FF FF FF FF     
   6790 FFFC9514 FF FF FF FF FF FF FF FF     
   6791 FFFC951C FF FF FF FF FF FF FF FF     
   6792 FFFC9524 FF FF FF FF FF FF FF FF     
   6793 FFFC952C FF FF FF FF FF FF FF FF     
   6794 FFFC9534 FF FF FF FF FF FF FF FF     
   6795 FFFC953C FF FF FF FF FF FF FF FF     
   6796 FFFC9544 FF FF FF FF FF FF FF FF     
   6797 FFFC954C FF FF FF FF FF FF FF FF     
   6798 FFFC9554 FF FF FF FF FF FF FF FF     
   6799 FFFC955C FF FF FF FF FF FF FF FF     
   6800 FFFC9564 FF FF FF FF FF FF FF FF     
   6801 FFFC956C FF FF FF FF FF FF FF FF     
   6802 FFFC9574 FF FF FF FF FF FF FF FF     
   6803 FFFC957C FF FF FF FF FF FF FF FF     
   6804 FFFC9584 FF FF FF FF FF FF FF FF     
   6805 FFFC958C FF FF FF FF FF FF FF FF     
   6806 FFFC9594 FF FF FF FF FF FF FF FF     
   6807 FFFC959C FF FF FF FF FF FF FF FF     
   6808 FFFC95A4 FF FF FF FF FF FF FF FF     
   6809 FFFC95AC FF FF FF FF FF FF FF FF     
   6810 FFFC95B4 FF FF FF FF FF FF FF FF     
   6811 FFFC95BC FF FF FF FF FF FF FF FF     
   6812 FFFC95C4 FF FF FF FF FF FF FF FF     
   6813 FFFC95CC FF FF FF FF FF FF FF FF     
   6814 FFFC95D4 FF FF FF FF FF FF FF FF     
   6815 FFFC95DC FF FF FF FF FF FF FF FF     
   6816 FFFC95E4 FF FF FF FF FF FF FF FF     
   6817 FFFC95EC FF FF FF FF FF FF FF FF     
   6818 FFFC95F4 FF FF FF FF FF FF FF FF     
   6819 FFFC95FC FF FF FF FF FF FF FF FF     
   6820 FFFC9604 FF FF FF FF FF FF FF FF     
   6821 FFFC960C FF FF FF FF FF FF FF FF     
   6822 FFFC9614 FF FF FF FF FF FF FF FF     
   6823 FFFC961C FF FF FF FF FF FF FF FF     
   6824 FFFC9624 FF FF FF FF FF FF FF FF     
   6825 FFFC962C FF FF FF FF FF FF FF FF     
   6826 FFFC9634 FF FF FF FF FF FF FF FF     
   6827 FFFC963C FF FF FF FF FF FF FF FF     
   6828 FFFC9644 FF FF FF FF FF FF FF FF     
   6829 FFFC964C FF FF FF FF FF FF FF FF     
   6830 FFFC9654 FF FF FF FF FF FF FF FF     
   6831 FFFC965C FF FF FF FF FF FF FF FF     
   6832 FFFC9664 FF FF FF FF FF FF FF FF     
   6833 FFFC966C FF FF FF FF FF FF FF FF     
   6834 FFFC9674 FF FF FF FF FF FF FF FF     
   6835 FFFC967C FF FF FF FF FF FF FF FF     
   6836 FFFC9684 FF FF FF FF FF FF FF FF     
   6837 FFFC968C FF FF FF FF FF FF FF FF     
   6838 FFFC9694 FF FF FF FF FF FF FF FF     
   6839 FFFC969C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 66
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6840 FFFC96A4 FF FF FF FF FF FF FF FF     
   6841 FFFC96AC FF FF FF FF FF FF FF FF     
   6842 FFFC96B4 FF FF FF FF FF FF FF FF     
   6843 FFFC96BC FF FF FF FF FF FF FF FF     
   6844 FFFC96C4 FF FF FF FF FF FF FF FF     
   6845 FFFC96CC FF FF FF FF FF FF FF FF     
   6846 FFFC96D4 FF FF FF FF FF FF FF FF     
   6847 FFFC96DC FF FF FF FF FF FF FF FF     
   6848 FFFC96E4 FF FF FF FF FF FF FF FF     
   6849 FFFC96EC FF FF FF FF FF FF FF FF     
   6850 FFFC96F4 FF FF FF FF FF FF FF FF     
   6851 FFFC96FC FF FF FF FF FF FF FF FF     
   6852 FFFC9704 FF FF FF FF FF FF FF FF     
   6853 FFFC970C FF FF FF FF FF FF FF FF     
   6854 FFFC9714 FF FF FF FF FF FF FF FF     
   6855 FFFC971C FF FF FF FF FF FF FF FF     
   6856 FFFC9724 FF FF FF FF FF FF FF FF     
   6857 FFFC972C FF FF FF FF FF FF FF FF     
   6858 FFFC9734 FF FF FF FF FF FF FF FF     
   6859 FFFC973C FF FF FF FF FF FF FF FF     
   6860 FFFC9744 FF FF FF FF FF FF FF FF     
   6861 FFFC974C FF FF FF FF FF FF FF FF     
   6862 FFFC9754 FF FF FF FF FF FF FF FF     
   6863 FFFC975C FF FF FF FF FF FF FF FF     
   6864 FFFC9764 FF FF FF FF FF FF FF FF     
   6865 FFFC976C FF FF FF FF FF FF FF FF     
   6866 FFFC9774 FF FF FF FF FF FF FF FF     
   6867 FFFC977C FF FF FF FF FF FF FF FF     
   6868 FFFC9784 FF FF FF FF FF FF FF FF     
   6869 FFFC978C FF FF FF FF FF FF FF FF     
   6870 FFFC9794 FF FF FF FF FF FF FF FF     
   6871 FFFC979C FF FF FF FF FF FF FF FF     
   6872 FFFC97A4 FF FF FF FF FF FF FF FF     
   6873 FFFC97AC FF FF FF FF FF FF FF FF     
   6874 FFFC97B4 FF FF FF FF FF FF FF FF     
   6875 FFFC97BC FF FF FF FF FF FF FF FF     
   6876 FFFC97C4 FF FF FF FF FF FF FF FF     
   6877 FFFC97CC FF FF FF FF FF FF FF FF     
   6878 FFFC97D4 FF FF FF FF FF FF FF FF     
   6879 FFFC97DC FF FF FF FF FF FF FF FF     
   6880 FFFC97E4 FF FF FF FF FF FF FF FF     
   6881 FFFC97EC FF FF FF FF FF FF FF FF     
   6882 FFFC97F4 FF FF FF FF FF FF FF FF     
   6883 FFFC97FC FF FF FF FF FF FF FF FF     
   6884 FFFC9804 FF FF FF FF FF FF FF FF     
   6885 FFFC980C FF FF FF FF FF FF FF FF     
   6886 FFFC9814 FF FF FF FF FF FF FF FF     
   6887 FFFC981C FF FF FF FF FF FF FF FF     
   6888 FFFC9824 FF FF FF FF FF FF FF FF     
   6889 FFFC982C FF FF FF FF FF FF FF FF     
   6890 FFFC9834 FF FF FF FF FF FF FF FF     
   6891 FFFC983C FF FF FF FF FF FF FF FF     
   6892 FFFC9844 FF FF FF FF FF FF FF FF     
   6893 FFFC984C FF FF FF FF FF FF FF FF     
   6894 FFFC9854 FF FF FF FF FF FF FF FF     
   6895 FFFC985C FF FF FF FF FF FF FF FF     
   6896 FFFC9864 FF FF FF FF FF FF FF FF     
   6897 FFFC986C FF FF FF FF FF FF FF FF     
   6898 FFFC9874 FF FF FF FF FF FF FF FF     
   6899 FFFC987C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 67
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6900 FFFC9884 FF FF FF FF FF FF FF FF     
   6901 FFFC988C FF FF FF FF FF FF FF FF     
   6902 FFFC9894 FF FF FF FF FF FF FF FF     
   6903 FFFC989C FF FF FF FF FF FF FF FF     
   6904 FFFC98A4 FF FF FF FF FF FF FF FF     
   6905 FFFC98AC FF FF FF FF FF FF FF FF     
   6906 FFFC98B4 FF FF FF FF FF FF FF FF     
   6907 FFFC98BC FF FF FF FF FF FF FF FF     
   6908 FFFC98C4 FF FF FF FF FF FF FF FF     
   6909 FFFC98CC FF FF FF FF FF FF FF FF     
   6910 FFFC98D4 FF FF FF FF FF FF FF FF     
   6911 FFFC98DC FF FF FF FF FF FF FF FF     
   6912 FFFC98E4 FF FF FF FF FF FF FF FF     
   6913 FFFC98EC FF FF FF FF FF FF FF FF     
   6914 FFFC98F4 FF FF FF FF FF FF FF FF     
   6915 FFFC98FC FF FF FF FF FF FF FF FF     
   6916 FFFC9904 FF FF FF FF FF FF FF FF     
   6917 FFFC990C FF FF FF FF FF FF FF FF     
   6918 FFFC9914 FF FF FF FF FF FF FF FF     
   6919 FFFC991C FF FF FF FF FF FF FF FF     
   6920 FFFC9924 FF FF FF FF FF FF FF FF     
   6921 FFFC992C FF FF FF FF FF FF FF FF     
   6922 FFFC9934 FF FF FF FF FF FF FF FF     
   6923 FFFC993C FF FF FF FF FF FF FF FF     
   6924 FFFC9944 FF FF FF FF FF FF FF FF     
   6925 FFFC994C FF FF FF FF FF FF FF FF     
   6926 FFFC9954 FF FF FF FF FF FF FF FF     
   6927 FFFC995C FF FF FF FF FF FF FF FF     
   6928 FFFC9964 FF FF FF FF FF FF FF FF     
   6929 FFFC996C FF FF FF FF FF FF FF FF     
   6930 FFFC9974 FF FF FF FF FF FF FF FF     
   6931 FFFC997C FF FF FF FF FF FF FF FF     
   6932 FFFC9984 FF FF FF FF FF FF FF FF     
   6933 FFFC998C FF FF FF FF FF FF FF FF     
   6934 FFFC9994 FF FF FF FF FF FF FF FF     
   6935 FFFC999C FF FF FF FF FF FF FF FF     
   6936 FFFC99A4 FF FF FF FF FF FF FF FF     
   6937 FFFC99AC FF FF FF FF FF FF FF FF     
   6938 FFFC99B4 FF FF FF FF FF FF FF FF     
   6939 FFFC99BC FF FF FF FF FF FF FF FF     
   6940 FFFC99C4 FF FF FF FF FF FF FF FF     
   6941 FFFC99CC FF FF FF FF FF FF FF FF     
   6942 FFFC99D4 FF FF FF FF FF FF FF FF     
   6943 FFFC99DC FF FF FF FF FF FF FF FF     
   6944 FFFC99E4 FF FF FF FF FF FF FF FF     
   6945 FFFC99EC FF FF FF FF FF FF FF FF     
   6946 FFFC99F4 FF FF FF FF FF FF FF FF     
   6947 FFFC99FC FF FF FF FF FF FF FF FF     
   6948 FFFC9A04 FF FF FF FF FF FF FF FF     
   6949 FFFC9A0C FF FF FF FF FF FF FF FF     
   6950 FFFC9A14 FF FF FF FF FF FF FF FF     
   6951 FFFC9A1C FF FF FF FF FF FF FF FF     
   6952 FFFC9A24 FF FF FF FF FF FF FF FF     
   6953 FFFC9A2C FF FF FF FF FF FF FF FF     
   6954 FFFC9A34 FF FF FF FF FF FF FF FF     
   6955 FFFC9A3C FF FF FF FF FF FF FF FF     
   6956 FFFC9A44 FF FF FF FF FF FF FF FF     
   6957 FFFC9A4C FF FF FF FF FF FF FF FF     
   6958 FFFC9A54 FF FF FF FF FF FF FF FF     
   6959 FFFC9A5C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 68
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6960 FFFC9A64 FF FF FF FF FF FF FF FF     
   6961 FFFC9A6C FF FF FF FF FF FF FF FF     
   6962 FFFC9A74 FF FF FF FF FF FF FF FF     
   6963 FFFC9A7C FF FF FF FF FF FF FF FF     
   6964 FFFC9A84 FF FF FF FF FF FF FF FF     
   6965 FFFC9A8C FF FF FF FF FF FF FF FF     
   6966 FFFC9A94 FF FF FF FF FF FF FF FF     
   6967 FFFC9A9C FF FF FF FF FF FF FF FF     
   6968 FFFC9AA4 FF FF FF FF FF FF FF FF     
   6969 FFFC9AAC FF FF FF FF FF FF FF FF     
   6970 FFFC9AB4 FF FF FF FF FF FF FF FF     
   6971 FFFC9ABC FF FF FF FF FF FF FF FF     
   6972 FFFC9AC4 FF FF FF FF FF FF FF FF     
   6973 FFFC9ACC FF FF FF FF FF FF FF FF     
   6974 FFFC9AD4 FF FF FF FF FF FF FF FF     
   6975 FFFC9ADC FF FF FF FF FF FF FF FF     
   6976 FFFC9AE4 FF FF FF FF FF FF FF FF     
   6977 FFFC9AEC FF FF FF FF FF FF FF FF     
   6978 FFFC9AF4 FF FF FF FF FF FF FF FF     
   6979 FFFC9AFC FF FF FF FF FF FF FF FF     
   6980 FFFC9B04 FF FF FF FF FF FF FF FF     
   6981 FFFC9B0C FF FF FF FF FF FF FF FF     
   6982 FFFC9B14 FF FF FF FF FF FF FF FF     
   6983 FFFC9B1C FF FF FF FF FF FF FF FF     
   6984 FFFC9B24 FF FF FF FF FF FF FF FF     
   6985 FFFC9B2C FF FF FF FF FF FF FF FF     
   6986 FFFC9B34 FF FF FF FF FF FF FF FF     
   6987 FFFC9B3C FF FF FF FF FF FF FF FF     
   6988 FFFC9B44 FF FF FF FF FF FF FF FF     
   6989 FFFC9B4C FF FF FF FF FF FF FF FF     
   6990 FFFC9B54 FF FF FF FF FF FF FF FF     
   6991 FFFC9B5C FF FF FF FF FF FF FF FF     
   6992 FFFC9B64 FF FF FF FF FF FF FF FF     
   6993 FFFC9B6C FF FF FF FF FF FF FF FF     
   6994 FFFC9B74 FF FF FF FF FF FF FF FF     
   6995 FFFC9B7C FF FF FF FF FF FF FF FF     
   6996 FFFC9B84 FF FF FF FF FF FF FF FF     
   6997 FFFC9B8C FF FF FF FF FF FF FF FF     
   6998 FFFC9B94 FF FF FF FF FF FF FF FF     
   6999 FFFC9B9C FF FF FF FF FF FF FF FF     
   7000 FFFC9BA4 FF FF FF FF FF FF FF FF     
   7001 FFFC9BAC FF FF FF FF FF FF FF FF     
   7002 FFFC9BB4 FF FF FF FF FF FF FF FF     
   7003 FFFC9BBC FF FF FF FF FF FF FF FF     
   7004 FFFC9BC4 FF FF FF FF FF FF FF FF     
   7005 FFFC9BCC FF FF FF FF FF FF FF FF     
   7006 FFFC9BD4 FF FF FF FF FF FF FF FF     
   7007 FFFC9BDC FF FF FF FF FF FF FF FF     
   7008 FFFC9BE4 FF FF FF FF FF FF FF FF     
   7009 FFFC9BEC FF FF FF FF FF FF FF FF     
   7010 FFFC9BF4 FF FF FF FF FF FF FF FF     
   7011 FFFC9BFC FF FF FF FF FF FF FF FF     
   7012 FFFC9C04 FF FF FF FF FF FF FF FF     
   7013 FFFC9C0C FF FF FF FF FF FF FF FF     
   7014 FFFC9C14 FF FF FF FF FF FF FF FF     
   7015 FFFC9C1C FF FF FF FF FF FF FF FF     
   7016 FFFC9C24 FF FF FF FF FF FF FF FF     
   7017 FFFC9C2C FF FF FF FF FF FF FF FF     
   7018 FFFC9C34 FF FF FF FF FF FF FF FF     
   7019 FFFC9C3C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 69
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7020 FFFC9C44 FF FF FF FF FF FF FF FF     
   7021 FFFC9C4C FF FF FF FF FF FF FF FF     
   7022 FFFC9C54 FF FF FF FF FF FF FF FF     
   7023 FFFC9C5C FF FF FF FF FF FF FF FF     
   7024 FFFC9C64 FF FF FF FF FF FF FF FF     
   7025 FFFC9C6C FF FF FF FF FF FF FF FF     
   7026 FFFC9C74 FF FF FF FF FF FF FF FF     
   7027 FFFC9C7C FF FF FF FF FF FF FF FF     
   7028 FFFC9C84 FF FF FF FF FF FF FF FF     
   7029 FFFC9C8C FF FF FF FF FF FF FF FF     
   7030 FFFC9C94 FF FF FF FF FF FF FF FF     
   7031 FFFC9C9C FF FF FF FF FF FF FF FF     
   7032 FFFC9CA4 FF FF FF FF FF FF FF FF     
   7033 FFFC9CAC FF FF FF FF FF FF FF FF     
   7034 FFFC9CB4 FF FF FF FF FF FF FF FF     
   7035 FFFC9CBC FF FF FF FF FF FF FF FF     
   7036 FFFC9CC4 FF FF FF FF FF FF FF FF     
   7037 FFFC9CCC FF FF FF FF FF FF FF FF     
   7038 FFFC9CD4 FF FF FF FF FF FF FF FF     
   7039 FFFC9CDC FF FF FF FF FF FF FF FF     
   7040 FFFC9CE4 FF FF FF FF FF FF FF FF     
   7041 FFFC9CEC FF FF FF FF FF FF FF FF     
   7042 FFFC9CF4 FF FF FF FF FF FF FF FF     
   7043 FFFC9CFC FF FF FF FF FF FF FF FF     
   7044 FFFC9D04 FF FF FF FF FF FF FF FF     
   7045 FFFC9D0C FF FF FF FF FF FF FF FF     
   7046 FFFC9D14 FF FF FF FF FF FF FF FF     
   7047 FFFC9D1C FF FF FF FF FF FF FF FF     
   7048 FFFC9D24 FF FF FF FF FF FF FF FF     
   7049 FFFC9D2C FF FF FF FF FF FF FF FF     
   7050 FFFC9D34 FF FF FF FF FF FF FF FF     
   7051 FFFC9D3C FF FF FF FF FF FF FF FF     
   7052 FFFC9D44 FF FF FF FF FF FF FF FF     
   7053 FFFC9D4C FF FF FF FF FF FF FF FF     
   7054 FFFC9D54 FF FF FF FF FF FF FF FF     
   7055 FFFC9D5C FF FF FF FF FF FF FF FF     
   7056 FFFC9D64 FF FF FF FF FF FF FF FF     
   7057 FFFC9D6C FF FF FF FF FF FF FF FF     
   7058 FFFC9D74 FF FF FF FF FF FF FF FF     
   7059 FFFC9D7C FF FF FF FF FF FF FF FF     
   7060 FFFC9D84 FF FF FF FF FF FF FF FF     
   7061 FFFC9D8C FF FF FF FF FF FF FF FF     
   7062 FFFC9D94 FF FF FF FF FF FF FF FF     
   7063 FFFC9D9C FF FF FF FF FF FF FF FF     
   7064 FFFC9DA4 FF FF FF FF FF FF FF FF     
   7065 FFFC9DAC FF FF FF FF FF FF FF FF     
   7066 FFFC9DB4 FF FF FF FF FF FF FF FF     
   7067 FFFC9DBC FF FF FF FF FF FF FF FF     
   7068 FFFC9DC4 FF FF FF FF FF FF FF FF     
   7069 FFFC9DCC FF FF FF FF FF FF FF FF     
   7070 FFFC9DD4 FF FF FF FF FF FF FF FF     
   7071 FFFC9DDC FF FF FF FF FF FF FF FF     
   7072 FFFC9DE4 FF FF FF FF FF FF FF FF     
   7073 FFFC9DEC FF FF FF FF FF FF FF FF     
   7074 FFFC9DF4 FF FF FF FF FF FF FF FF     
   7075 FFFC9DFC FF FF FF FF FF FF FF FF     
   7076 FFFC9E04 FF FF FF FF FF FF FF FF     
   7077 FFFC9E0C FF FF FF FF FF FF FF FF     
   7078 FFFC9E14 FF FF FF FF FF FF FF FF     
   7079 FFFC9E1C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 70
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7080 FFFC9E24 FF FF FF FF FF FF FF FF     
   7081 FFFC9E2C FF FF FF FF FF FF FF FF     
   7082 FFFC9E34 FF FF FF FF FF FF FF FF     
   7083 FFFC9E3C FF FF FF FF FF FF FF FF     
   7084 FFFC9E44 FF FF FF FF FF FF FF FF     
   7085 FFFC9E4C FF FF FF FF FF FF FF FF     
   7086 FFFC9E54 FF FF FF FF FF FF FF FF     
   7087 FFFC9E5C FF FF FF FF FF FF FF FF     
   7088 FFFC9E64 FF FF FF FF FF FF FF FF     
   7089 FFFC9E6C FF FF FF FF FF FF FF FF     
   7090 FFFC9E74 FF FF FF FF FF FF FF FF     
   7091 FFFC9E7C FF FF FF FF FF FF FF FF     
   7092 FFFC9E84 FF FF FF FF FF FF FF FF     
   7093 FFFC9E8C FF FF FF FF FF FF FF FF     
   7094 FFFC9E94 FF FF FF FF FF FF FF FF     
   7095 FFFC9E9C FF FF FF FF FF FF FF FF     
   7096 FFFC9EA4 FF FF FF FF FF FF FF FF     
   7097 FFFC9EAC FF FF FF FF FF FF FF FF     
   7098 FFFC9EB4 FF FF FF FF FF FF FF FF     
   7099 FFFC9EBC FF FF FF FF FF FF FF FF     
   7100 FFFC9EC4 FF FF FF FF FF FF FF FF     
   7101 FFFC9ECC FF FF FF FF FF FF FF FF     
   7102 FFFC9ED4 FF FF FF FF FF FF FF FF     
   7103 FFFC9EDC FF FF FF FF FF FF FF FF     
   7104 FFFC9EE4 FF FF FF FF FF FF FF FF     
   7105 FFFC9EEC FF FF FF FF FF FF FF FF     
   7106 FFFC9EF4 FF FF FF FF FF FF FF FF     
   7107 FFFC9EFC FF FF FF FF FF FF FF FF     
   7108 FFFC9F04 FF FF FF FF FF FF FF FF     
   7109 FFFC9F0C FF FF FF FF FF FF FF FF     
   7110 FFFC9F14 FF FF FF FF FF FF FF FF     
   7111 FFFC9F1C FF FF FF FF FF FF FF FF     
   7112 FFFC9F24 FF FF FF FF FF FF FF FF     
   7113 FFFC9F2C FF FF FF FF FF FF FF FF     
   7114 FFFC9F34 FF FF FF FF FF FF FF FF     
   7115 FFFC9F3C FF FF FF FF FF FF FF FF     
   7116 FFFC9F44 FF FF FF FF FF FF FF FF     
   7117 FFFC9F4C FF FF FF FF FF FF FF FF     
   7118 FFFC9F54 FF FF FF FF FF FF FF FF     
   7119 FFFC9F5C FF FF FF FF FF FF FF FF     
   7120 FFFC9F64 FF FF FF FF FF FF FF FF     
   7121 FFFC9F6C FF FF FF FF FF FF FF FF     
   7122 FFFC9F74 FF FF FF FF FF FF FF FF     
   7123 FFFC9F7C FF FF FF FF FF FF FF FF     
   7124 FFFC9F84 FF FF FF FF FF FF FF FF     
   7125 FFFC9F8C FF FF FF FF FF FF FF FF     
   7126 FFFC9F94 FF FF FF FF FF FF FF FF     
   7127 FFFC9F9C FF FF FF FF FF FF FF FF     
   7128 FFFC9FA4 FF FF FF FF FF FF FF FF     
   7129 FFFC9FAC FF FF FF FF FF FF FF FF     
   7130 FFFC9FB4 FF FF FF FF FF FF FF FF     
   7131 FFFC9FBC FF FF FF FF FF FF FF FF     
   7132 FFFC9FC4 FF FF FF FF FF FF FF FF     
   7133 FFFC9FCC FF FF FF FF FF FF FF FF     
   7134 FFFC9FD4 FF FF FF FF FF FF FF FF     
   7135 FFFC9FDC FF FF FF FF FF FF FF FF     
   7136 FFFC9FE4 FF FF FF FF FF FF FF FF     
   7137 FFFC9FEC FF FF FF FF FF FF FF FF     
   7138 FFFC9FF4 FF FF FF FF FF FF FF FF     
   7139 FFFC9FFC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 71
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7140 FFFCA004 FF FF FF FF FF FF FF FF     
   7141 FFFCA00C FF FF FF FF FF FF FF FF     
   7142 FFFCA014 FF FF FF FF FF FF FF FF     
   7143 FFFCA01C FF FF FF FF FF FF FF FF     
   7144 FFFCA024 FF FF FF FF FF FF FF FF     
   7145 FFFCA02C FF FF FF FF FF FF FF FF     
   7146 FFFCA034 FF FF FF FF FF FF FF FF     
   7147 FFFCA03C FF FF FF FF FF FF FF FF     
   7148 FFFCA044 FF FF FF FF FF FF FF FF     
   7149 FFFCA04C FF FF FF FF FF FF FF FF     
   7150 FFFCA054 FF FF FF FF FF FF FF FF     
   7151 FFFCA05C FF FF FF FF FF FF FF FF     
   7152 FFFCA064 FF FF FF FF FF FF FF FF     
   7153 FFFCA06C FF FF FF FF FF FF FF FF     
   7154 FFFCA074 FF FF FF FF FF FF FF FF     
   7155 FFFCA07C FF FF FF FF FF FF FF FF     
   7156 FFFCA084 FF FF FF FF FF FF FF FF     
   7157 FFFCA08C FF FF FF FF FF FF FF FF     
   7158 FFFCA094 FF FF FF FF FF FF FF FF     
   7159 FFFCA09C FF FF FF FF FF FF FF FF     
   7160 FFFCA0A4 FF FF FF FF FF FF FF FF     
   7161 FFFCA0AC FF FF FF FF FF FF FF FF     
   7162 FFFCA0B4 FF FF FF FF FF FF FF FF     
   7163 FFFCA0BC FF FF FF FF FF FF FF FF     
   7164 FFFCA0C4 FF FF FF FF FF FF FF FF     
   7165 FFFCA0CC FF FF FF FF FF FF FF FF     
   7166 FFFCA0D4 FF FF FF FF FF FF FF FF     
   7167 FFFCA0DC FF FF FF FF FF FF FF FF     
   7168 FFFCA0E4 FF FF FF FF FF FF FF FF     
   7169 FFFCA0EC FF FF FF FF FF FF FF FF     
   7170 FFFCA0F4 FF FF FF FF FF FF FF FF     
   7171 FFFCA0FC FF FF FF FF FF FF FF FF     
   7172 FFFCA104 FF FF FF FF FF FF FF FF     
   7173 FFFCA10C FF FF FF FF FF FF FF FF     
   7174 FFFCA114 FF FF FF FF FF FF FF FF     
   7175 FFFCA11C FF FF FF FF FF FF FF FF     
   7176 FFFCA124 FF FF FF FF FF FF FF FF     
   7177 FFFCA12C FF FF FF FF FF FF FF FF     
   7178 FFFCA134 FF FF FF FF FF FF FF FF     
   7179 FFFCA13C FF FF FF FF FF FF FF FF     
   7180 FFFCA144 FF FF FF FF FF FF FF FF     
   7181 FFFCA14C FF FF FF FF FF FF FF FF     
   7182 FFFCA154 FF FF FF FF FF FF FF FF     
   7183 FFFCA15C FF FF FF FF FF FF FF FF     
   7184 FFFCA164 FF FF FF FF FF FF FF FF     
   7185 FFFCA16C FF FF FF FF FF FF FF FF     
   7186 FFFCA174 FF FF FF FF FF FF FF FF     
   7187 FFFCA17C FF FF FF FF FF FF FF FF     
   7188 FFFCA184 FF FF FF FF FF FF FF FF     
   7189 FFFCA18C FF FF FF FF FF FF FF FF     
   7190 FFFCA194 FF FF FF FF FF FF FF FF     
   7191 FFFCA19C FF FF FF FF FF FF FF FF     
   7192 FFFCA1A4 FF FF FF FF FF FF FF FF     
   7193 FFFCA1AC FF FF FF FF FF FF FF FF     
   7194 FFFCA1B4 FF FF FF FF FF FF FF FF     
   7195 FFFCA1BC FF FF FF FF FF FF FF FF     
   7196 FFFCA1C4 FF FF FF FF FF FF FF FF     
   7197 FFFCA1CC FF FF FF FF FF FF FF FF     
   7198 FFFCA1D4 FF FF FF FF FF FF FF FF     
   7199 FFFCA1DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 72
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7200 FFFCA1E4 FF FF FF FF FF FF FF FF     
   7201 FFFCA1EC FF FF FF FF FF FF FF FF     
   7202 FFFCA1F4 FF FF FF FF FF FF FF FF     
   7203 FFFCA1FC FF FF FF FF FF FF FF FF     
   7204 FFFCA204 FF FF FF FF FF FF FF FF     
   7205 FFFCA20C FF FF FF FF FF FF FF FF     
   7206 FFFCA214 FF FF FF FF FF FF FF FF     
   7207 FFFCA21C FF FF FF FF FF FF FF FF     
   7208 FFFCA224 FF FF FF FF FF FF FF FF     
   7209 FFFCA22C FF FF FF FF FF FF FF FF     
   7210 FFFCA234 FF FF FF FF FF FF FF FF     
   7211 FFFCA23C FF FF FF FF FF FF FF FF     
   7212 FFFCA244 FF FF FF FF FF FF FF FF     
   7213 FFFCA24C FF FF FF FF FF FF FF FF     
   7214 FFFCA254 FF FF FF FF FF FF FF FF     
   7215 FFFCA25C FF FF FF FF FF FF FF FF     
   7216 FFFCA264 FF FF FF FF FF FF FF FF     
   7217 FFFCA26C FF FF FF FF FF FF FF FF     
   7218 FFFCA274 FF FF FF FF FF FF FF FF     
   7219 FFFCA27C FF FF FF FF FF FF FF FF     
   7220 FFFCA284 FF FF FF FF FF FF FF FF     
   7221 FFFCA28C FF FF FF FF FF FF FF FF     
   7222 FFFCA294 FF FF FF FF FF FF FF FF     
   7223 FFFCA29C FF FF FF FF FF FF FF FF     
   7224 FFFCA2A4 FF FF FF FF FF FF FF FF     
   7225 FFFCA2AC FF FF FF FF FF FF FF FF     
   7226 FFFCA2B4 FF FF FF FF FF FF FF FF     
   7227 FFFCA2BC FF FF FF FF FF FF FF FF     
   7228 FFFCA2C4 FF FF FF FF FF FF FF FF     
   7229 FFFCA2CC FF FF FF FF FF FF FF FF     
   7230 FFFCA2D4 FF FF FF FF FF FF FF FF     
   7231 FFFCA2DC FF FF FF FF FF FF FF FF     
   7232 FFFCA2E4 FF FF FF FF FF FF FF FF     
   7233 FFFCA2EC FF FF FF FF FF FF FF FF     
   7234 FFFCA2F4 FF FF FF FF FF FF FF FF     
   7235 FFFCA2FC FF FF FF FF FF FF FF FF     
   7236 FFFCA304 FF FF FF FF FF FF FF FF     
   7237 FFFCA30C FF FF FF FF FF FF FF FF     
   7238 FFFCA314 FF FF FF FF FF FF FF FF     
   7239 FFFCA31C FF FF FF FF FF FF FF FF     
   7240 FFFCA324 FF FF FF FF FF FF FF FF     
   7241 FFFCA32C FF FF FF FF FF FF FF FF     
   7242 FFFCA334 FF FF FF FF FF FF FF FF     
   7243 FFFCA33C FF FF FF FF FF FF FF FF     
   7244 FFFCA344 FF FF FF FF FF FF FF FF     
   7245 FFFCA34C FF FF FF FF FF FF FF FF     
   7246 FFFCA354 FF FF FF FF FF FF FF FF     
   7247 FFFCA35C FF FF FF FF FF FF FF FF     
   7248 FFFCA364 FF FF FF FF FF FF FF FF     
   7249 FFFCA36C FF FF FF FF FF FF FF FF     
   7250 FFFCA374 FF FF FF FF FF FF FF FF     
   7251 FFFCA37C FF FF FF FF FF FF FF FF     
   7252 FFFCA384 FF FF FF FF FF FF FF FF     
   7253 FFFCA38C FF FF FF FF FF FF FF FF     
   7254 FFFCA394 FF FF FF FF FF FF FF FF     
   7255 FFFCA39C FF FF FF FF FF FF FF FF     
   7256 FFFCA3A4 FF FF FF FF FF FF FF FF     
   7257 FFFCA3AC FF FF FF FF FF FF FF FF     
   7258 FFFCA3B4 FF FF FF FF FF FF FF FF     
   7259 FFFCA3BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 73
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7260 FFFCA3C4 FF FF FF FF FF FF FF FF     
   7261 FFFCA3CC FF FF FF FF FF FF FF FF     
   7262 FFFCA3D4 FF FF FF FF FF FF FF FF     
   7263 FFFCA3DC FF FF FF FF FF FF FF FF     
   7264 FFFCA3E4 FF FF FF FF FF FF FF FF     
   7265 FFFCA3EC FF FF FF FF FF FF FF FF     
   7266 FFFCA3F4 FF FF FF FF FF FF FF FF     
   7267 FFFCA3FC FF FF FF FF FF FF FF FF     
   7268 FFFCA404 FF FF FF FF FF FF FF FF     
   7269 FFFCA40C FF FF FF FF FF FF FF FF     
   7270 FFFCA414 FF FF FF FF FF FF FF FF     
   7271 FFFCA41C FF FF FF FF FF FF FF FF     
   7272 FFFCA424 FF FF FF FF FF FF FF FF     
   7273 FFFCA42C FF FF FF FF FF FF FF FF     
   7274 FFFCA434 FF FF FF FF FF FF FF FF     
   7275 FFFCA43C FF FF FF FF FF FF FF FF     
   7276 FFFCA444 FF FF FF FF FF FF FF FF     
   7277 FFFCA44C FF FF FF FF FF FF FF FF     
   7278 FFFCA454 FF FF FF FF FF FF FF FF     
   7279 FFFCA45C FF FF FF FF FF FF FF FF     
   7280 FFFCA464 FF FF FF FF FF FF FF FF     
   7281 FFFCA46C FF FF FF FF FF FF FF FF     
   7282 FFFCA474 FF FF FF FF FF FF FF FF     
   7283 FFFCA47C FF FF FF FF FF FF FF FF     
   7284 FFFCA484 FF FF FF FF FF FF FF FF     
   7285 FFFCA48C FF FF FF FF FF FF FF FF     
   7286 FFFCA494 FF FF FF FF FF FF FF FF     
   7287 FFFCA49C FF FF FF FF FF FF FF FF     
   7288 FFFCA4A4 FF FF FF FF FF FF FF FF     
   7289 FFFCA4AC FF FF FF FF FF FF FF FF     
   7290 FFFCA4B4 FF FF FF FF FF FF FF FF     
   7291 FFFCA4BC FF FF FF FF FF FF FF FF     
   7292 FFFCA4C4 FF FF FF FF FF FF FF FF     
   7293 FFFCA4CC FF FF FF FF FF FF FF FF     
   7294 FFFCA4D4 FF FF FF FF FF FF FF FF     
   7295 FFFCA4DC FF FF FF FF FF FF FF FF     
   7296 FFFCA4E4 FF FF FF FF FF FF FF FF     
   7297 FFFCA4EC FF FF FF FF FF FF FF FF     
   7298 FFFCA4F4 FF FF FF FF FF FF FF FF     
   7299 FFFCA4FC FF FF FF FF FF FF FF FF     
   7300 FFFCA504 FF FF FF FF FF FF FF FF     
   7301 FFFCA50C FF FF FF FF FF FF FF FF     
   7302 FFFCA514 FF FF FF FF FF FF FF FF     
   7303 FFFCA51C FF FF FF FF FF FF FF FF     
   7304 FFFCA524 FF FF FF FF FF FF FF FF     
   7305 FFFCA52C FF FF FF FF FF FF FF FF     
   7306 FFFCA534 FF FF FF FF FF FF FF FF     
   7307 FFFCA53C FF FF FF FF FF FF FF FF     
   7308 FFFCA544 FF FF FF FF FF FF FF FF     
   7309 FFFCA54C FF FF FF FF FF FF FF FF     
   7310 FFFCA554 FF FF FF FF FF FF FF FF     
   7311 FFFCA55C FF FF FF FF FF FF FF FF     
   7312 FFFCA564 FF FF FF FF FF FF FF FF     
   7313 FFFCA56C FF FF FF FF FF FF FF FF     
   7314 FFFCA574 FF FF FF FF FF FF FF FF     
   7315 FFFCA57C FF FF FF FF FF FF FF FF     
   7316 FFFCA584 FF FF FF FF FF FF FF FF     
   7317 FFFCA58C FF FF FF FF FF FF FF FF     
   7318 FFFCA594 FF FF FF FF FF FF FF FF     
   7319 FFFCA59C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 74
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7320 FFFCA5A4 FF FF FF FF FF FF FF FF     
   7321 FFFCA5AC FF FF FF FF FF FF FF FF     
   7322 FFFCA5B4 FF FF FF FF FF FF FF FF     
   7323 FFFCA5BC FF FF FF FF FF FF FF FF     
   7324 FFFCA5C4 FF FF FF FF FF FF FF FF     
   7325 FFFCA5CC FF FF FF FF FF FF FF FF     
   7326 FFFCA5D4 FF FF FF FF FF FF FF FF     
   7327 FFFCA5DC FF FF FF FF FF FF FF FF     
   7328 FFFCA5E4 FF FF FF FF FF FF FF FF     
   7329 FFFCA5EC FF FF FF FF FF FF FF FF     
   7330 FFFCA5F4 FF FF FF FF FF FF FF FF     
   7331 FFFCA5FC FF FF FF FF FF FF FF FF     
   7332 FFFCA604 FF FF FF FF FF FF FF FF     
   7333 FFFCA60C FF FF FF FF FF FF FF FF     
   7334 FFFCA614 FF FF FF FF FF FF FF FF     
   7335 FFFCA61C FF FF FF FF FF FF FF FF     
   7336 FFFCA624 FF FF FF FF FF FF FF FF     
   7337 FFFCA62C FF FF FF FF FF FF FF FF     
   7338 FFFCA634 FF FF FF FF FF FF FF FF     
   7339 FFFCA63C FF FF FF FF FF FF FF FF     
   7340 FFFCA644 FF FF FF FF FF FF FF FF     
   7341 FFFCA64C FF FF FF FF FF FF FF FF     
   7342 FFFCA654 FF FF FF FF FF FF FF FF     
   7343 FFFCA65C FF FF FF FF FF FF FF FF     
   7344 FFFCA664 FF FF FF FF FF FF FF FF     
   7345 FFFCA66C FF FF FF FF FF FF FF FF     
   7346 FFFCA674 FF FF FF FF FF FF FF FF     
   7347 FFFCA67C FF FF FF FF FF FF FF FF     
   7348 FFFCA684 FF FF FF FF FF FF FF FF     
   7349 FFFCA68C FF FF FF FF FF FF FF FF     
   7350 FFFCA694 FF FF FF FF FF FF FF FF     
   7351 FFFCA69C FF FF FF FF FF FF FF FF     
   7352 FFFCA6A4 FF FF FF FF FF FF FF FF     
   7353 FFFCA6AC FF FF FF FF FF FF FF FF     
   7354 FFFCA6B4 FF FF FF FF FF FF FF FF     
   7355 FFFCA6BC FF FF FF FF FF FF FF FF     
   7356 FFFCA6C4 FF FF FF FF FF FF FF FF     
   7357 FFFCA6CC FF FF FF FF FF FF FF FF     
   7358 FFFCA6D4 FF FF FF FF FF FF FF FF     
   7359 FFFCA6DC FF FF FF FF FF FF FF FF     
   7360 FFFCA6E4 FF FF FF FF FF FF FF FF     
   7361 FFFCA6EC FF FF FF FF FF FF FF FF     
   7362 FFFCA6F4 FF FF FF FF FF FF FF FF     
   7363 FFFCA6FC FF FF FF FF FF FF FF FF     
   7364 FFFCA704 FF FF FF FF FF FF FF FF     
   7365 FFFCA70C FF FF FF FF FF FF FF FF     
   7366 FFFCA714 FF FF FF FF FF FF FF FF     
   7367 FFFCA71C FF FF FF FF FF FF FF FF     
   7368 FFFCA724 FF FF FF FF FF FF FF FF     
   7369 FFFCA72C FF FF FF FF FF FF FF FF     
   7370 FFFCA734 FF FF FF FF FF FF FF FF     
   7371 FFFCA73C FF FF FF FF FF FF FF FF     
   7372 FFFCA744 FF FF FF FF FF FF FF FF     
   7373 FFFCA74C FF FF FF FF FF FF FF FF     
   7374 FFFCA754 FF FF FF FF FF FF FF FF     
   7375 FFFCA75C FF FF FF FF FF FF FF FF     
   7376 FFFCA764 FF FF FF FF FF FF FF FF     
   7377 FFFCA76C FF FF FF FF FF FF FF FF     
   7378 FFFCA774 FF FF FF FF FF FF FF FF     
   7379 FFFCA77C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 75
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7380 FFFCA784 FF FF FF FF FF FF FF FF     
   7381 FFFCA78C FF FF FF FF FF FF FF FF     
   7382 FFFCA794 FF FF FF FF FF FF FF FF     
   7383 FFFCA79C FF FF FF FF FF FF FF FF     
   7384 FFFCA7A4 FF FF FF FF FF FF FF FF     
   7385 FFFCA7AC FF FF FF FF FF FF FF FF     
   7386 FFFCA7B4 FF FF FF FF FF FF FF FF     
   7387 FFFCA7BC FF FF FF FF FF FF FF FF     
   7388 FFFCA7C4 FF FF FF FF FF FF FF FF     
   7389 FFFCA7CC FF FF FF FF FF FF FF FF     
   7390 FFFCA7D4 FF FF FF FF FF FF FF FF     
   7391 FFFCA7DC FF FF FF FF FF FF FF FF     
   7392 FFFCA7E4 FF FF FF FF FF FF FF FF     
   7393 FFFCA7EC FF FF FF FF FF FF FF FF     
   7394 FFFCA7F4 FF FF FF FF FF FF FF FF     
   7395 FFFCA7FC FF FF FF FF FF FF FF FF     
   7396 FFFCA804 FF FF FF FF FF FF FF FF     
   7397 FFFCA80C FF FF FF FF FF FF FF FF     
   7398 FFFCA814 FF FF FF FF FF FF FF FF     
   7399 FFFCA81C FF FF FF FF FF FF FF FF     
   7400 FFFCA824 FF FF FF FF FF FF FF FF     
   7401 FFFCA82C FF FF FF FF FF FF FF FF     
   7402 FFFCA834 FF FF FF FF FF FF FF FF     
   7403 FFFCA83C FF FF FF FF FF FF FF FF     
   7404 FFFCA844 FF FF FF FF FF FF FF FF     
   7405 FFFCA84C FF FF FF FF FF FF FF FF     
   7406 FFFCA854 FF FF FF FF FF FF FF FF     
   7407 FFFCA85C FF FF FF FF FF FF FF FF     
   7408 FFFCA864 FF FF FF FF FF FF FF FF     
   7409 FFFCA86C FF FF FF FF FF FF FF FF     
   7410 FFFCA874 FF FF FF FF FF FF FF FF     
   7411 FFFCA87C FF FF FF FF FF FF FF FF     
   7412 FFFCA884 FF FF FF FF FF FF FF FF     
   7413 FFFCA88C FF FF FF FF FF FF FF FF     
   7414 FFFCA894 FF FF FF FF FF FF FF FF     
   7415 FFFCA89C FF FF FF FF FF FF FF FF     
   7416 FFFCA8A4 FF FF FF FF FF FF FF FF     
   7417 FFFCA8AC FF FF FF FF FF FF FF FF     
   7418 FFFCA8B4 FF FF FF FF FF FF FF FF     
   7419 FFFCA8BC FF FF FF FF FF FF FF FF     
   7420 FFFCA8C4 FF FF FF FF FF FF FF FF     
   7421 FFFCA8CC FF FF FF FF FF FF FF FF     
   7422 FFFCA8D4 FF FF FF FF FF FF FF FF     
   7423 FFFCA8DC FF FF FF FF FF FF FF FF     
   7424 FFFCA8E4 FF FF FF FF FF FF FF FF     
   7425 FFFCA8EC FF FF FF FF FF FF FF FF     
   7426 FFFCA8F4 FF FF FF FF FF FF FF FF     
   7427 FFFCA8FC FF FF FF FF FF FF FF FF     
   7428 FFFCA904 FF FF FF FF FF FF FF FF     
   7429 FFFCA90C FF FF FF FF FF FF FF FF     
   7430 FFFCA914 FF FF FF FF FF FF FF FF     
   7431 FFFCA91C FF FF FF FF FF FF FF FF     
   7432 FFFCA924 FF FF FF FF FF FF FF FF     
   7433 FFFCA92C FF FF FF FF FF FF FF FF     
   7434 FFFCA934 FF FF FF FF FF FF FF FF     
   7435 FFFCA93C FF FF FF FF FF FF FF FF     
   7436 FFFCA944 FF FF FF FF FF FF FF FF     
   7437 FFFCA94C FF FF FF FF FF FF FF FF     
   7438 FFFCA954 FF FF FF FF FF FF FF FF     
   7439 FFFCA95C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 76
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7440 FFFCA964 FF FF FF FF FF FF FF FF     
   7441 FFFCA96C FF FF FF FF FF FF FF FF     
   7442 FFFCA974 FF FF FF FF FF FF FF FF     
   7443 FFFCA97C FF FF FF FF FF FF FF FF     
   7444 FFFCA984 FF FF FF FF FF FF FF FF     
   7445 FFFCA98C FF FF FF FF FF FF FF FF     
   7446 FFFCA994 FF FF FF FF FF FF FF FF     
   7447 FFFCA99C FF FF FF FF FF FF FF FF     
   7448 FFFCA9A4 FF FF FF FF FF FF FF FF     
   7449 FFFCA9AC FF FF FF FF FF FF FF FF     
   7450 FFFCA9B4 FF FF FF FF FF FF FF FF     
   7451 FFFCA9BC FF FF FF FF FF FF FF FF     
   7452 FFFCA9C4 FF FF FF FF FF FF FF FF     
   7453 FFFCA9CC FF FF FF FF FF FF FF FF     
   7454 FFFCA9D4 FF FF FF FF FF FF FF FF     
   7455 FFFCA9DC FF FF FF FF FF FF FF FF     
   7456 FFFCA9E4 FF FF FF FF FF FF FF FF     
   7457 FFFCA9EC FF FF FF FF FF FF FF FF     
   7458 FFFCA9F4 FF FF FF FF FF FF FF FF     
   7459 FFFCA9FC FF FF FF FF FF FF FF FF     
   7460 FFFCAA04 FF FF FF FF FF FF FF FF     
   7461 FFFCAA0C FF FF FF FF FF FF FF FF     
   7462 FFFCAA14 FF FF FF FF FF FF FF FF     
   7463 FFFCAA1C FF FF FF FF FF FF FF FF     
   7464 FFFCAA24 FF FF FF FF FF FF FF FF     
   7465 FFFCAA2C FF FF FF FF FF FF FF FF     
   7466 FFFCAA34 FF FF FF FF FF FF FF FF     
   7467 FFFCAA3C FF FF FF FF FF FF FF FF     
   7468 FFFCAA44 FF FF FF FF FF FF FF FF     
   7469 FFFCAA4C FF FF FF FF FF FF FF FF     
   7470 FFFCAA54 FF FF FF FF FF FF FF FF     
   7471 FFFCAA5C FF FF FF FF FF FF FF FF     
   7472 FFFCAA64 FF FF FF FF FF FF FF FF     
   7473 FFFCAA6C FF FF FF FF FF FF FF FF     
   7474 FFFCAA74 FF FF FF FF FF FF FF FF     
   7475 FFFCAA7C FF FF FF FF FF FF FF FF     
   7476 FFFCAA84 FF FF FF FF FF FF FF FF     
   7477 FFFCAA8C FF FF FF FF FF FF FF FF     
   7478 FFFCAA94 FF FF FF FF FF FF FF FF     
   7479 FFFCAA9C FF FF FF FF FF FF FF FF     
   7480 FFFCAAA4 FF FF FF FF FF FF FF FF     
   7481 FFFCAAAC FF FF FF FF FF FF FF FF     
   7482 FFFCAAB4 FF FF FF FF FF FF FF FF     
   7483 FFFCAABC FF FF FF FF FF FF FF FF     
   7484 FFFCAAC4 FF FF FF FF FF FF FF FF     
   7485 FFFCAACC FF FF FF FF FF FF FF FF     
   7486 FFFCAAD4 FF FF FF FF FF FF FF FF     
   7487 FFFCAADC FF FF FF FF FF FF FF FF     
   7488 FFFCAAE4 FF FF FF FF FF FF FF FF     
   7489 FFFCAAEC FF FF FF FF FF FF FF FF     
   7490 FFFCAAF4 FF FF FF FF FF FF FF FF     
   7491 FFFCAAFC FF FF FF FF FF FF FF FF     
   7492 FFFCAB04 FF FF FF FF FF FF FF FF     
   7493 FFFCAB0C FF FF FF FF FF FF FF FF     
   7494 FFFCAB14 FF FF FF FF FF FF FF FF     
   7495 FFFCAB1C FF FF FF FF FF FF FF FF     
   7496 FFFCAB24 FF FF FF FF FF FF FF FF     
   7497 FFFCAB2C FF FF FF FF FF FF FF FF     
   7498 FFFCAB34 FF FF FF FF FF FF FF FF     
   7499 FFFCAB3C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 77
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7500 FFFCAB44 FF FF FF FF FF FF FF FF     
   7501 FFFCAB4C FF FF FF FF FF FF FF FF     
   7502 FFFCAB54 FF FF FF FF FF FF FF FF     
   7503 FFFCAB5C FF FF FF FF FF FF FF FF     
   7504 FFFCAB64 FF FF FF FF FF FF FF FF     
   7505 FFFCAB6C FF FF FF FF FF FF FF FF     
   7506 FFFCAB74 FF FF FF FF FF FF FF FF     
   7507 FFFCAB7C FF FF FF FF FF FF FF FF     
   7508 FFFCAB84 FF FF FF FF FF FF FF FF     
   7509 FFFCAB8C FF FF FF FF FF FF FF FF     
   7510 FFFCAB94 FF FF FF FF FF FF FF FF     
   7511 FFFCAB9C FF FF FF FF FF FF FF FF     
   7512 FFFCABA4 FF FF FF FF FF FF FF FF     
   7513 FFFCABAC FF FF FF FF FF FF FF FF     
   7514 FFFCABB4 FF FF FF FF FF FF FF FF     
   7515 FFFCABBC FF FF FF FF FF FF FF FF     
   7516 FFFCABC4 FF FF FF FF FF FF FF FF     
   7517 FFFCABCC FF FF FF FF FF FF FF FF     
   7518 FFFCABD4 FF FF FF FF FF FF FF FF     
   7519 FFFCABDC FF FF FF FF FF FF FF FF     
   7520 FFFCABE4 FF FF FF FF FF FF FF FF     
   7521 FFFCABEC FF FF FF FF FF FF FF FF     
   7522 FFFCABF4 FF FF FF FF FF FF FF FF     
   7523 FFFCABFC FF FF FF FF FF FF FF FF     
   7524 FFFCAC04 FF FF FF FF FF FF FF FF     
   7525 FFFCAC0C FF FF FF FF FF FF FF FF     
   7526 FFFCAC14 FF FF FF FF FF FF FF FF     
   7527 FFFCAC1C FF FF FF FF FF FF FF FF     
   7528 FFFCAC24 FF FF FF FF FF FF FF FF     
   7529 FFFCAC2C FF FF FF FF FF FF FF FF     
   7530 FFFCAC34 FF FF FF FF FF FF FF FF     
   7531 FFFCAC3C FF FF FF FF FF FF FF FF     
   7532 FFFCAC44 FF FF FF FF FF FF FF FF     
   7533 FFFCAC4C FF FF FF FF FF FF FF FF     
   7534 FFFCAC54 FF FF FF FF FF FF FF FF     
   7535 FFFCAC5C FF FF FF FF FF FF FF FF     
   7536 FFFCAC64 FF FF FF FF FF FF FF FF     
   7537 FFFCAC6C FF FF FF FF FF FF FF FF     
   7538 FFFCAC74 FF FF FF FF FF FF FF FF     
   7539 FFFCAC7C FF FF FF FF FF FF FF FF     
   7540 FFFCAC84 FF FF FF FF FF FF FF FF     
   7541 FFFCAC8C FF FF FF FF FF FF FF FF     
   7542 FFFCAC94 FF FF FF FF FF FF FF FF     
   7543 FFFCAC9C FF FF FF FF FF FF FF FF     
   7544 FFFCACA4 FF FF FF FF FF FF FF FF     
   7545 FFFCACAC FF FF FF FF FF FF FF FF     
   7546 FFFCACB4 FF FF FF FF FF FF FF FF     
   7547 FFFCACBC FF FF FF FF FF FF FF FF     
   7548 FFFCACC4 FF FF FF FF FF FF FF FF     
   7549 FFFCACCC FF FF FF FF FF FF FF FF     
   7550 FFFCACD4 FF FF FF FF FF FF FF FF     
   7551 FFFCACDC FF FF FF FF FF FF FF FF     
   7552 FFFCACE4 FF FF FF FF FF FF FF FF     
   7553 FFFCACEC FF FF FF FF FF FF FF FF     
   7554 FFFCACF4 FF FF FF FF FF FF FF FF     
   7555 FFFCACFC FF FF FF FF FF FF FF FF     
   7556 FFFCAD04 FF FF FF FF FF FF FF FF     
   7557 FFFCAD0C FF FF FF FF FF FF FF FF     
   7558 FFFCAD14 FF FF FF FF FF FF FF FF     
   7559 FFFCAD1C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 78
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7560 FFFCAD24 FF FF FF FF FF FF FF FF     
   7561 FFFCAD2C FF FF FF FF FF FF FF FF     
   7562 FFFCAD34 FF FF FF FF FF FF FF FF     
   7563 FFFCAD3C FF FF FF FF FF FF FF FF     
   7564 FFFCAD44 FF FF FF FF FF FF FF FF     
   7565 FFFCAD4C FF FF FF FF FF FF FF FF     
   7566 FFFCAD54 FF FF FF FF FF FF FF FF     
   7567 FFFCAD5C FF FF FF FF FF FF FF FF     
   7568 FFFCAD64 FF FF FF FF FF FF FF FF     
   7569 FFFCAD6C FF FF FF FF FF FF FF FF     
   7570 FFFCAD74 FF FF FF FF FF FF FF FF     
   7571 FFFCAD7C FF FF FF FF FF FF FF FF     
   7572 FFFCAD84 FF FF FF FF FF FF FF FF     
   7573 FFFCAD8C FF FF FF FF FF FF FF FF     
   7574 FFFCAD94 FF FF FF FF FF FF FF FF     
   7575 FFFCAD9C FF FF FF FF FF FF FF FF     
   7576 FFFCADA4 FF FF FF FF FF FF FF FF     
   7577 FFFCADAC FF FF FF FF FF FF FF FF     
   7578 FFFCADB4 FF FF FF FF FF FF FF FF     
   7579 FFFCADBC FF FF FF FF FF FF FF FF     
   7580 FFFCADC4 FF FF FF FF FF FF FF FF     
   7581 FFFCADCC FF FF FF FF FF FF FF FF     
   7582 FFFCADD4 FF FF FF FF FF FF FF FF     
   7583 FFFCADDC FF FF FF FF FF FF FF FF     
   7584 FFFCADE4 FF FF FF FF FF FF FF FF     
   7585 FFFCADEC FF FF FF FF FF FF FF FF     
   7586 FFFCADF4 FF FF FF FF FF FF FF FF     
   7587 FFFCADFC FF FF FF FF FF FF FF FF     
   7588 FFFCAE04 FF FF FF FF FF FF FF FF     
   7589 FFFCAE0C FF FF FF FF FF FF FF FF     
   7590 FFFCAE14 FF FF FF FF FF FF FF FF     
   7591 FFFCAE1C FF FF FF FF FF FF FF FF     
   7592 FFFCAE24 FF FF FF FF FF FF FF FF     
   7593 FFFCAE2C FF FF FF FF FF FF FF FF     
   7594 FFFCAE34 FF FF FF FF FF FF FF FF     
   7595 FFFCAE3C FF FF FF FF FF FF FF FF     
   7596 FFFCAE44 FF FF FF FF FF FF FF FF     
   7597 FFFCAE4C FF FF FF FF FF FF FF FF     
   7598 FFFCAE54 FF FF FF FF FF FF FF FF     
   7599 FFFCAE5C FF FF FF FF FF FF FF FF     
   7600 FFFCAE64 FF FF FF FF FF FF FF FF     
   7601 FFFCAE6C FF FF FF FF FF FF FF FF     
   7602 FFFCAE74 FF FF FF FF FF FF FF FF     
   7603 FFFCAE7C FF FF FF FF FF FF FF FF     
   7604 FFFCAE84 FF FF FF FF FF FF FF FF     
   7605 FFFCAE8C FF FF FF FF FF FF FF FF     
   7606 FFFCAE94 FF FF FF FF FF FF FF FF     
   7607 FFFCAE9C FF FF FF FF FF FF FF FF     
   7608 FFFCAEA4 FF FF FF FF FF FF FF FF     
   7609 FFFCAEAC FF FF FF FF FF FF FF FF     
   7610 FFFCAEB4 FF FF FF FF FF FF FF FF     
   7611 FFFCAEBC FF FF FF FF FF FF FF FF     
   7612 FFFCAEC4 FF FF FF FF FF FF FF FF     
   7613 FFFCAECC FF FF FF FF FF FF FF FF     
   7614 FFFCAED4 FF FF FF FF FF FF FF FF     
   7615 FFFCAEDC FF FF FF FF FF FF FF FF     
   7616 FFFCAEE4 FF FF FF FF FF FF FF FF     
   7617 FFFCAEEC FF FF FF FF FF FF FF FF     
   7618 FFFCAEF4 FF FF FF FF FF FF FF FF     
   7619 FFFCAEFC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 79
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7620 FFFCAF04 FF FF FF FF FF FF FF FF     
   7621 FFFCAF0C FF FF FF FF FF FF FF FF     
   7622 FFFCAF14 FF FF FF FF FF FF FF FF     
   7623 FFFCAF1C FF FF FF FF FF FF FF FF     
   7624 FFFCAF24 FF FF FF FF FF FF FF FF     
   7625 FFFCAF2C FF FF FF FF FF FF FF FF     
   7626 FFFCAF34 FF FF FF FF FF FF FF FF     
   7627 FFFCAF3C FF FF FF FF FF FF FF FF     
   7628 FFFCAF44 FF FF FF FF FF FF FF FF     
   7629 FFFCAF4C FF FF FF FF FF FF FF FF     
   7630 FFFCAF54 FF FF FF FF FF FF FF FF     
   7631 FFFCAF5C FF FF FF FF FF FF FF FF     
   7632 FFFCAF64 FF FF FF FF FF FF FF FF     
   7633 FFFCAF6C FF FF FF FF FF FF FF FF     
   7634 FFFCAF74 FF FF FF FF FF FF FF FF     
   7635 FFFCAF7C FF FF FF FF FF FF FF FF     
   7636 FFFCAF84 FF FF FF FF FF FF FF FF     
   7637 FFFCAF8C FF FF FF FF FF FF FF FF     
   7638 FFFCAF94 FF FF FF FF FF FF FF FF     
   7639 FFFCAF9C FF FF FF FF FF FF FF FF     
   7640 FFFCAFA4 FF FF FF FF FF FF FF FF     
   7641 FFFCAFAC FF FF FF FF FF FF FF FF     
   7642 FFFCAFB4 FF FF FF FF FF FF FF FF     
   7643 FFFCAFBC FF FF FF FF FF FF FF FF     
   7644 FFFCAFC4 FF FF FF FF FF FF FF FF     
   7645 FFFCAFCC FF FF FF FF FF FF FF FF     
   7646 FFFCAFD4 FF FF FF FF FF FF FF FF     
   7647 FFFCAFDC FF FF FF FF FF FF FF FF     
   7648 FFFCAFE4 FF FF FF FF FF FF FF FF     
   7649 FFFCAFEC FF FF FF FF FF FF FF FF     
   7650 FFFCAFF4 FF FF FF FF FF FF FF FF     
   7651 FFFCAFFC FF FF FF FF FF FF FF FF     
   7652 FFFCB004 FF FF FF FF FF FF FF FF     
   7653 FFFCB00C FF FF FF FF FF FF FF FF     
   7654 FFFCB014 FF FF FF FF FF FF FF FF     
   7655 FFFCB01C FF FF FF FF FF FF FF FF     
   7656 FFFCB024 FF FF FF FF FF FF FF FF     
   7657 FFFCB02C FF FF FF FF FF FF FF FF     
   7658 FFFCB034 FF FF FF FF FF FF FF FF     
   7659 FFFCB03C FF FF FF FF FF FF FF FF     
   7660 FFFCB044 FF FF FF FF FF FF FF FF     
   7661 FFFCB04C FF FF FF FF FF FF FF FF     
   7662 FFFCB054 FF FF FF FF FF FF FF FF     
   7663 FFFCB05C FF FF FF FF FF FF FF FF     
   7664 FFFCB064 FF FF FF FF FF FF FF FF     
   7665 FFFCB06C FF FF FF FF FF FF FF FF     
   7666 FFFCB074 FF FF FF FF FF FF FF FF     
   7667 FFFCB07C FF FF FF FF FF FF FF FF     
   7668 FFFCB084 FF FF FF FF FF FF FF FF     
   7669 FFFCB08C FF FF FF FF FF FF FF FF     
   7670 FFFCB094 FF FF FF FF FF FF FF FF     
   7671 FFFCB09C FF FF FF FF FF FF FF FF     
   7672 FFFCB0A4 FF FF FF FF FF FF FF FF     
   7673 FFFCB0AC FF FF FF FF FF FF FF FF     
   7674 FFFCB0B4 FF FF FF FF FF FF FF FF     
   7675 FFFCB0BC FF FF FF FF FF FF FF FF     
   7676 FFFCB0C4 FF FF FF FF FF FF FF FF     
   7677 FFFCB0CC FF FF FF FF FF FF FF FF     
   7678 FFFCB0D4 FF FF FF FF FF FF FF FF     
   7679 FFFCB0DC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 80
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7680 FFFCB0E4 FF FF FF FF FF FF FF FF     
   7681 FFFCB0EC FF FF FF FF FF FF FF FF     
   7682 FFFCB0F4 FF FF FF FF FF FF FF FF     
   7683 FFFCB0FC FF FF FF FF FF FF FF FF     
   7684 FFFCB104 FF FF FF FF FF FF FF FF     
   7685 FFFCB10C FF FF FF FF FF FF FF FF     
   7686 FFFCB114 FF FF FF FF FF FF FF FF     
   7687 FFFCB11C FF FF FF FF FF FF FF FF     
   7688 FFFCB124 FF FF FF FF FF FF FF FF     
   7689 FFFCB12C FF FF FF FF FF FF FF FF     
   7690 FFFCB134 FF FF FF FF FF FF FF FF     
   7691 FFFCB13C FF FF FF FF FF FF FF FF     
   7692 FFFCB144 FF FF FF FF FF FF FF FF     
   7693 FFFCB14C FF FF FF FF FF FF FF FF     
   7694 FFFCB154 FF FF FF FF FF FF FF FF     
   7695 FFFCB15C FF FF FF FF FF FF FF FF     
   7696 FFFCB164 FF FF FF FF FF FF FF FF     
   7697 FFFCB16C FF FF FF FF FF FF FF FF     
   7698 FFFCB174 FF FF FF FF FF FF FF FF     
   7699 FFFCB17C FF FF FF FF FF FF FF FF     
   7700 FFFCB184 FF FF FF FF FF FF FF FF     
   7701 FFFCB18C FF FF FF FF FF FF FF FF     
   7702 FFFCB194 FF FF FF FF FF FF FF FF     
   7703 FFFCB19C FF FF FF FF FF FF FF FF     
   7704 FFFCB1A4 FF FF FF FF FF FF FF FF     
   7705 FFFCB1AC FF FF FF FF FF FF FF FF     
   7706 FFFCB1B4 FF FF FF FF FF FF FF FF     
   7707 FFFCB1BC FF FF FF FF FF FF FF FF     
   7708 FFFCB1C4 FF FF FF FF FF FF FF FF     
   7709 FFFCB1CC FF FF FF FF FF FF FF FF     
   7710 FFFCB1D4 FF FF FF FF FF FF FF FF     
   7711 FFFCB1DC FF FF FF FF FF FF FF FF     
   7712 FFFCB1E4 FF FF FF FF FF FF FF FF     
   7713 FFFCB1EC FF FF FF FF FF FF FF FF     
   7714 FFFCB1F4 FF FF FF FF FF FF FF FF     
   7715 FFFCB1FC FF FF FF FF FF FF FF FF     
   7716 FFFCB204 FF FF FF FF FF FF FF FF     
   7717 FFFCB20C FF FF FF FF FF FF FF FF     
   7718 FFFCB214 FF FF FF FF FF FF FF FF     
   7719 FFFCB21C FF FF FF FF FF FF FF FF     
   7720 FFFCB224 FF FF FF FF FF FF FF FF     
   7721 FFFCB22C FF FF FF FF FF FF FF FF     
   7722 FFFCB234 FF FF FF FF FF FF FF FF     
   7723 FFFCB23C FF FF FF FF FF FF FF FF     
   7724 FFFCB244 FF FF FF FF FF FF FF FF     
   7725 FFFCB24C FF FF FF FF FF FF FF FF     
   7726 FFFCB254 FF FF FF FF FF FF FF FF     
   7727 FFFCB25C FF FF FF FF FF FF FF FF     
   7728 FFFCB264 FF FF FF FF FF FF FF FF     
   7729 FFFCB26C FF FF FF FF FF FF FF FF     
   7730 FFFCB274 FF FF FF FF FF FF FF FF     
   7731 FFFCB27C FF FF FF FF FF FF FF FF     
   7732 FFFCB284 FF FF FF FF FF FF FF FF     
   7733 FFFCB28C FF FF FF FF FF FF FF FF     
   7734 FFFCB294 FF FF FF FF FF FF FF FF     
   7735 FFFCB29C FF FF FF FF FF FF FF FF     
   7736 FFFCB2A4 FF FF FF FF FF FF FF FF     
   7737 FFFCB2AC FF FF FF FF FF FF FF FF     
   7738 FFFCB2B4 FF FF FF FF FF FF FF FF     
   7739 FFFCB2BC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 81
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7740 FFFCB2C4 FF FF FF FF FF FF FF FF     
   7741 FFFCB2CC FF FF FF FF FF FF FF FF     
   7742 FFFCB2D4 FF FF FF FF FF FF FF FF     
   7743 FFFCB2DC FF FF FF FF FF FF FF FF     
   7744 FFFCB2E4 FF FF FF FF FF FF FF FF     
   7745 FFFCB2EC FF FF FF FF FF FF FF FF     
   7746 FFFCB2F4 FF FF FF FF FF FF FF FF     
   7747 FFFCB2FC FF FF FF FF FF FF FF FF     
   7748 FFFCB304 FF FF FF FF FF FF FF FF     
   7749 FFFCB30C FF FF FF FF FF FF FF FF     
   7750 FFFCB314 FF FF FF FF FF FF FF FF     
   7751 FFFCB31C FF FF FF FF FF FF FF FF     
   7752 FFFCB324 FF FF FF FF FF FF FF FF     
   7753 FFFCB32C FF FF FF FF FF FF FF FF     
   7754 FFFCB334 FF FF FF FF FF FF FF FF     
   7755 FFFCB33C FF FF FF FF FF FF FF FF     
   7756 FFFCB344 FF FF FF FF FF FF FF FF     
   7757 FFFCB34C FF FF FF FF FF FF FF FF     
   7758 FFFCB354 FF FF FF FF FF FF FF FF     
   7759 FFFCB35C FF FF FF FF FF FF FF FF     
   7760 FFFCB364 FF FF FF FF FF FF FF FF     
   7761 FFFCB36C FF FF FF FF FF FF FF FF     
   7762 FFFCB374 FF FF FF FF FF FF FF FF     
   7763 FFFCB37C FF FF FF FF FF FF FF FF     
   7764 FFFCB384 FF FF FF FF FF FF FF FF     
   7765 FFFCB38C FF FF FF FF FF FF FF FF     
   7766 FFFCB394 FF FF FF FF FF FF FF FF     
   7767 FFFCB39C FF FF FF FF FF FF FF FF     
   7768 FFFCB3A4 FF FF FF FF FF FF FF FF     
   7769 FFFCB3AC FF FF FF FF FF FF FF FF     
   7770 FFFCB3B4 FF FF FF FF FF FF FF FF     
   7771 FFFCB3BC FF FF FF FF FF FF FF FF     
   7772 FFFCB3C4 FF FF FF FF FF FF FF FF     
   7773 FFFCB3CC FF FF FF FF FF FF FF FF     
   7774 FFFCB3D4 FF FF FF FF FF FF FF FF     
   7775 FFFCB3DC FF FF FF FF FF FF FF FF     
   7776 FFFCB3E4 FF FF FF FF FF FF FF FF     
   7777 FFFCB3EC FF FF FF FF FF FF FF FF     
   7778 FFFCB3F4 FF FF FF FF FF FF FF FF     
   7779 FFFCB3FC FF FF FF FF FF FF FF FF     
   7780 FFFCB404 FF FF FF FF FF FF FF FF     
   7781 FFFCB40C FF FF FF FF FF FF FF FF     
   7782 FFFCB414 FF FF FF FF FF FF FF FF     
   7783 FFFCB41C FF FF FF FF FF FF FF FF     
   7784 FFFCB424 FF FF FF FF FF FF FF FF     
   7785 FFFCB42C FF FF FF FF FF FF FF FF     
   7786 FFFCB434 FF FF FF FF FF FF FF FF     
   7787 FFFCB43C FF FF FF FF FF FF FF FF     
   7788 FFFCB444 FF FF FF FF FF FF FF FF     
   7789 FFFCB44C FF FF FF FF FF FF FF FF     
   7790 FFFCB454 FF FF FF FF FF FF FF FF     
   7791 FFFCB45C FF FF FF FF FF FF FF FF     
   7792 FFFCB464 FF FF FF FF FF FF FF FF     
   7793 FFFCB46C FF FF FF FF FF FF FF FF     
   7794 FFFCB474 FF FF FF FF FF FF FF FF     
   7795 FFFCB47C FF FF FF FF FF FF FF FF     
   7796 FFFCB484 FF FF FF FF FF FF FF FF     
   7797 FFFCB48C FF FF FF FF FF FF FF FF     
   7798 FFFCB494 FF FF FF FF FF FF FF FF     
   7799 FFFCB49C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 82
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7800 FFFCB4A4 FF FF FF FF FF FF FF FF     
   7801 FFFCB4AC FF FF FF FF FF FF FF FF     
   7802 FFFCB4B4 FF FF FF FF FF FF FF FF     
   7803 FFFCB4BC FF FF FF FF FF FF FF FF     
   7804 FFFCB4C4 FF FF FF FF FF FF FF FF     
   7805 FFFCB4CC FF FF FF FF FF FF FF FF     
   7806 FFFCB4D4 FF FF FF FF FF FF FF FF     
   7807 FFFCB4DC FF FF FF FF FF FF FF FF     
   7808 FFFCB4E4 FF FF FF FF FF FF FF FF     
   7809 FFFCB4EC FF FF FF FF FF FF FF FF     
   7810 FFFCB4F4 FF FF FF FF FF FF FF FF     
   7811 FFFCB4FC FF FF FF FF FF FF FF FF     
   7812 FFFCB504 FF FF FF FF FF FF FF FF     
   7813 FFFCB50C FF FF FF FF FF FF FF FF     
   7814 FFFCB514 FF FF FF FF FF FF FF FF     
   7815 FFFCB51C FF FF FF FF FF FF FF FF     
   7816 FFFCB524 FF FF FF FF FF FF FF FF     
   7817 FFFCB52C FF FF FF FF FF FF FF FF     
   7818 FFFCB534 FF FF FF FF FF FF FF FF     
   7819 FFFCB53C FF FF FF FF FF FF FF FF     
   7820 FFFCB544 FF FF FF FF FF FF FF FF     
   7821 FFFCB54C FF FF FF FF FF FF FF FF     
   7822 FFFCB554 FF FF FF FF FF FF FF FF     
   7823 FFFCB55C FF FF FF FF FF FF FF FF     
   7824 FFFCB564 FF FF FF FF FF FF FF FF     
   7825 FFFCB56C FF FF FF FF FF FF FF FF     
   7826 FFFCB574 FF FF FF FF FF FF FF FF     
   7827 FFFCB57C FF FF FF FF FF FF FF FF     
   7828 FFFCB584 FF FF FF FF FF FF FF FF     
   7829 FFFCB58C FF FF FF FF FF FF FF FF     
   7830 FFFCB594 FF FF FF FF FF FF FF FF     
   7831 FFFCB59C FF FF FF FF FF FF FF FF     
   7832 FFFCB5A4 FF FF FF FF FF FF FF FF     
   7833 FFFCB5AC FF FF FF FF FF FF FF FF     
   7834 FFFCB5B4 FF FF FF FF FF FF FF FF     
   7835 FFFCB5BC FF FF FF FF FF FF FF FF     
   7836 FFFCB5C4 FF FF FF FF FF FF FF FF     
   7837 FFFCB5CC FF FF FF FF FF FF FF FF     
   7838 FFFCB5D4 FF FF FF FF FF FF FF FF     
   7839 FFFCB5DC FF FF FF FF FF FF FF FF     
   7840 FFFCB5E4 FF FF FF FF FF FF FF FF     
   7841 FFFCB5EC FF FF FF FF FF FF FF FF     
   7842 FFFCB5F4 FF FF FF FF FF FF FF FF     
   7843 FFFCB5FC FF FF FF FF FF FF FF FF     
   7844 FFFCB604 FF FF FF FF FF FF FF FF     
   7845 FFFCB60C FF FF FF FF FF FF FF FF     
   7846 FFFCB614 FF FF FF FF FF FF FF FF     
   7847 FFFCB61C FF FF FF FF FF FF FF FF     
   7848 FFFCB624 FF FF FF FF FF FF FF FF     
   7849 FFFCB62C FF FF FF FF FF FF FF FF     
   7850 FFFCB634 FF FF FF FF FF FF FF FF     
   7851 FFFCB63C FF FF FF FF FF FF FF FF     
   7852 FFFCB644 FF FF FF FF FF FF FF FF     
   7853 FFFCB64C FF FF FF FF FF FF FF FF     
   7854 FFFCB654 FF FF FF FF FF FF FF FF     
   7855 FFFCB65C FF FF FF FF FF FF FF FF     
   7856 FFFCB664 FF FF FF FF FF FF FF FF     
   7857 FFFCB66C FF FF FF FF FF FF FF FF     
   7858 FFFCB674 FF FF FF FF FF FF FF FF     
   7859 FFFCB67C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 83
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7860 FFFCB684 FF FF FF FF FF FF FF FF     
   7861 FFFCB68C FF FF FF FF FF FF FF FF     
   7862 FFFCB694 FF FF FF FF FF FF FF FF     
   7863 FFFCB69C FF FF FF FF FF FF FF FF     
   7864 FFFCB6A4 FF FF FF FF FF FF FF FF     
   7865 FFFCB6AC FF FF FF FF FF FF FF FF     
   7866 FFFCB6B4 FF FF FF FF FF FF FF FF     
   7867 FFFCB6BC FF FF FF FF FF FF FF FF     
   7868 FFFCB6C4 FF FF FF FF FF FF FF FF     
   7869 FFFCB6CC FF FF FF FF FF FF FF FF     
   7870 FFFCB6D4 FF FF FF FF FF FF FF FF     
   7871 FFFCB6DC FF FF FF FF FF FF FF FF     
   7872 FFFCB6E4 FF FF FF FF FF FF FF FF     
   7873 FFFCB6EC FF FF FF FF FF FF FF FF     
   7874 FFFCB6F4 FF FF FF FF FF FF FF FF     
   7875 FFFCB6FC FF FF FF FF FF FF FF FF     
   7876 FFFCB704 FF FF FF FF FF FF FF FF     
   7877 FFFCB70C FF FF FF FF FF FF FF FF     
   7878 FFFCB714 FF FF FF FF FF FF FF FF     
   7879 FFFCB71C FF FF FF FF FF FF FF FF     
   7880 FFFCB724 FF FF FF FF FF FF FF FF     
   7881 FFFCB72C FF FF FF FF FF FF FF FF     
   7882 FFFCB734 FF FF FF FF FF FF FF FF     
   7883 FFFCB73C FF FF FF FF FF FF FF FF     
   7884 FFFCB744 FF FF FF FF FF FF FF FF     
   7885 FFFCB74C FF FF FF FF FF FF FF FF     
   7886 FFFCB754 FF FF FF FF FF FF FF FF     
   7887 FFFCB75C FF FF FF FF FF FF FF FF     
   7888 FFFCB764 FF FF FF FF FF FF FF FF     
   7889 FFFCB76C FF FF FF FF FF FF FF FF     
   7890 FFFCB774 FF FF FF FF FF FF FF FF     
   7891 FFFCB77C FF FF FF FF FF FF FF FF     
   7892 FFFCB784 FF FF FF FF FF FF FF FF     
   7893 FFFCB78C FF FF FF FF FF FF FF FF     
   7894 FFFCB794 FF FF FF FF FF FF FF FF     
   7895 FFFCB79C FF FF FF FF FF FF FF FF     
   7896 FFFCB7A4 FF FF FF FF FF FF FF FF     
   7897 FFFCB7AC FF FF FF FF FF FF FF FF     
   7898 FFFCB7B4 FF FF FF FF FF FF FF FF     
   7899 FFFCB7BC FF FF FF FF FF FF FF FF     
   7900 FFFCB7C4 FF FF FF FF FF FF FF FF     
   7901 FFFCB7CC FF FF FF FF FF FF FF FF     
   7902 FFFCB7D4 FF FF FF FF FF FF FF FF     
   7903 FFFCB7DC FF FF FF FF FF FF FF FF     
   7904 FFFCB7E4 FF FF FF FF FF FF FF FF     
   7905 FFFCB7EC FF FF FF FF FF FF FF FF     
   7906 FFFCB7F4 FF FF FF FF FF FF FF FF     
   7907 FFFCB7FC FF FF FF FF FF FF FF FF     
   7908 FFFCB804 FF FF FF FF FF FF FF FF     
   7909 FFFCB80C FF FF FF FF FF FF FF FF     
   7910 FFFCB814 FF FF FF FF FF FF FF FF     
   7911 FFFCB81C FF FF FF FF FF FF FF FF     
   7912 FFFCB824 FF FF FF FF FF FF FF FF     
   7913 FFFCB82C FF FF FF FF FF FF FF FF     
   7914 FFFCB834 FF FF FF FF FF FF FF FF     
   7915 FFFCB83C FF FF FF FF FF FF FF FF     
   7916 FFFCB844 FF FF FF FF FF FF FF FF     
   7917 FFFCB84C FF FF FF FF FF FF FF FF     
   7918 FFFCB854 FF FF FF FF FF FF FF FF     
   7919 FFFCB85C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 84
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7920 FFFCB864 FF FF FF FF FF FF FF FF     
   7921 FFFCB86C FF FF FF FF FF FF FF FF     
   7922 FFFCB874 FF FF FF FF FF FF FF FF     
   7923 FFFCB87C FF FF FF FF FF FF FF FF     
   7924 FFFCB884 FF FF FF FF FF FF FF FF     
   7925 FFFCB88C FF FF FF FF FF FF FF FF     
   7926 FFFCB894 FF FF FF FF FF FF FF FF     
   7927 FFFCB89C FF FF FF FF FF FF FF FF     
   7928 FFFCB8A4 FF FF FF FF FF FF FF FF     
   7929 FFFCB8AC FF FF FF FF FF FF FF FF     
   7930 FFFCB8B4 FF FF FF FF FF FF FF FF     
   7931 FFFCB8BC FF FF FF FF FF FF FF FF     
   7932 FFFCB8C4 FF FF FF FF FF FF FF FF     
   7933 FFFCB8CC FF FF FF FF FF FF FF FF     
   7934 FFFCB8D4 FF FF FF FF FF FF FF FF     
   7935 FFFCB8DC FF FF FF FF FF FF FF FF     
   7936 FFFCB8E4 FF FF FF FF FF FF FF FF     
   7937 FFFCB8EC FF FF FF FF FF FF FF FF     
   7938 FFFCB8F4 FF FF FF FF FF FF FF FF     
   7939 FFFCB8FC FF FF FF FF FF FF FF FF     
   7940 FFFCB904 FF FF FF FF FF FF FF FF     
   7941 FFFCB90C FF FF FF FF FF FF FF FF     
   7942 FFFCB914 FF FF FF FF FF FF FF FF     
   7943 FFFCB91C FF FF FF FF FF FF FF FF     
   7944 FFFCB924 FF FF FF FF FF FF FF FF     
   7945 FFFCB92C FF FF FF FF FF FF FF FF     
   7946 FFFCB934 FF FF FF FF FF FF FF FF     
   7947 FFFCB93C FF FF FF FF FF FF FF FF     
   7948 FFFCB944 FF FF FF FF FF FF FF FF     
   7949 FFFCB94C FF FF FF FF FF FF FF FF     
   7950 FFFCB954 FF FF FF FF FF FF FF FF     
   7951 FFFCB95C FF FF FF FF FF FF FF FF     
   7952 FFFCB964 FF FF FF FF FF FF FF FF     
   7953 FFFCB96C FF FF FF FF FF FF FF FF     
   7954 FFFCB974 FF FF FF FF FF FF FF FF     
   7955 FFFCB97C FF FF FF FF FF FF FF FF     
   7956 FFFCB984 FF FF FF FF FF FF FF FF     
   7957 FFFCB98C FF FF FF FF FF FF FF FF     
   7958 FFFCB994 FF FF FF FF FF FF FF FF     
   7959 FFFCB99C FF FF FF FF FF FF FF FF     
   7960 FFFCB9A4 FF FF FF FF FF FF FF FF     
   7961 FFFCB9AC FF FF FF FF FF FF FF FF     
   7962 FFFCB9B4 FF FF FF FF FF FF FF FF     
   7963 FFFCB9BC FF FF FF FF FF FF FF FF     
   7964 FFFCB9C4 FF FF FF FF FF FF FF FF     
   7965 FFFCB9CC FF FF FF FF FF FF FF FF     
   7966 FFFCB9D4 FF FF FF FF FF FF FF FF     
   7967 FFFCB9DC FF FF FF FF FF FF FF FF     
   7968 FFFCB9E4 FF FF FF FF FF FF FF FF     
   7969 FFFCB9EC FF FF FF FF FF FF FF FF     
   7970 FFFCB9F4 FF FF FF FF FF FF FF FF     
   7971 FFFCB9FC FF FF FF FF FF FF FF FF     
   7972 FFFCBA04 FF FF FF FF FF FF FF FF     
   7973 FFFCBA0C FF FF FF FF FF FF FF FF     
   7974 FFFCBA14 FF FF FF FF FF FF FF FF     
   7975 FFFCBA1C FF FF FF FF FF FF FF FF     
   7976 FFFCBA24 FF FF FF FF FF FF FF FF     
   7977 FFFCBA2C FF FF FF FF FF FF FF FF     
   7978 FFFCBA34 FF FF FF FF FF FF FF FF     
   7979 FFFCBA3C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 85
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7980 FFFCBA44 FF FF FF FF FF FF FF FF     
   7981 FFFCBA4C FF FF FF FF FF FF FF FF     
   7982 FFFCBA54 FF FF FF FF FF FF FF FF     
   7983 FFFCBA5C FF FF FF FF FF FF FF FF     
   7984 FFFCBA64 FF FF FF FF FF FF FF FF     
   7985 FFFCBA6C FF FF FF FF FF FF FF FF     
   7986 FFFCBA74 FF FF FF FF FF FF FF FF     
   7987 FFFCBA7C FF FF FF FF FF FF FF FF     
   7988 FFFCBA84 FF FF FF FF FF FF FF FF     
   7989 FFFCBA8C FF FF FF FF FF FF FF FF     
   7990 FFFCBA94 FF FF FF FF FF FF FF FF     
   7991 FFFCBA9C FF FF FF FF FF FF FF FF     
   7992 FFFCBAA4 FF FF FF FF FF FF FF FF     
   7993 FFFCBAAC FF FF FF FF FF FF FF FF     
   7994 FFFCBAB4 FF FF FF FF FF FF FF FF     
   7995 FFFCBABC FF FF FF FF FF FF FF FF     
   7996 FFFCBAC4 FF FF FF FF FF FF FF FF     
   7997 FFFCBACC FF FF FF FF FF FF FF FF     
   7998 FFFCBAD4 FF FF FF FF FF FF FF FF     
   7999 FFFCBADC FF FF FF FF FF FF FF FF     
   8000 FFFCBAE4 FF FF FF FF FF FF FF FF     
   8001 FFFCBAEC FF FF FF FF FF FF FF FF     
   8002 FFFCBAF4 FF FF FF FF FF FF FF FF     
   8003 FFFCBAFC FF FF FF FF FF FF FF FF     
   8004 FFFCBB04 FF FF FF FF FF FF FF FF     
   8005 FFFCBB0C FF FF FF FF FF FF FF FF     
   8006 FFFCBB14 FF FF FF FF FF FF FF FF     
   8007 FFFCBB1C FF FF FF FF FF FF FF FF     
   8008 FFFCBB24 FF FF FF FF FF FF FF FF     
   8009 FFFCBB2C FF FF FF FF FF FF FF FF     
   8010 FFFCBB34 FF FF FF FF FF FF FF FF     
   8011 FFFCBB3C FF FF FF FF FF FF FF FF     
   8012 FFFCBB44 FF FF FF FF FF FF FF FF     
   8013 FFFCBB4C FF FF FF FF FF FF FF FF     
   8014 FFFCBB54 FF FF FF FF FF FF FF FF     
   8015 FFFCBB5C FF FF FF FF FF FF FF FF     
   8016 FFFCBB64 FF FF FF FF FF FF FF FF     
   8017 FFFCBB6C FF FF FF FF FF FF FF FF     
   8018 FFFCBB74 FF FF FF FF FF FF FF FF     
   8019 FFFCBB7C FF FF FF FF FF FF FF FF     
   8020 FFFCBB84 FF FF FF FF FF FF FF FF     
   8021 FFFCBB8C FF FF FF FF FF FF FF FF     
   8022 FFFCBB94 FF FF FF FF FF FF FF FF     
   8023 FFFCBB9C FF FF FF FF FF FF FF FF     
   8024 FFFCBBA4 FF FF FF FF FF FF FF FF     
   8025 FFFCBBAC FF FF FF FF FF FF FF FF     
   8026 FFFCBBB4 FF FF FF FF FF FF FF FF     
   8027 FFFCBBBC FF FF FF FF FF FF FF FF     
   8028 FFFCBBC4 FF FF FF FF FF FF FF FF     
   8029 FFFCBBCC FF FF FF FF FF FF FF FF     
   8030 FFFCBBD4 FF FF FF FF FF FF FF FF     
   8031 FFFCBBDC FF FF FF FF FF FF FF FF     
   8032 FFFCBBE4 FF FF FF FF FF FF FF FF     
   8033 FFFCBBEC FF FF FF FF FF FF FF FF     
   8034 FFFCBBF4 FF FF FF FF FF FF FF FF     
   8035 FFFCBBFC FF FF FF FF FF FF FF FF     
   8036 FFFCBC04 FF FF FF FF FF FF FF FF     
   8037 FFFCBC0C FF FF FF FF FF FF FF FF     
   8038 FFFCBC14 FF FF FF FF FF FF FF FF     
   8039 FFFCBC1C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 86
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8040 FFFCBC24 FF FF FF FF FF FF FF FF     
   8041 FFFCBC2C FF FF FF FF FF FF FF FF     
   8042 FFFCBC34 FF FF FF FF FF FF FF FF     
   8043 FFFCBC3C FF FF FF FF FF FF FF FF     
   8044 FFFCBC44 FF FF FF FF FF FF FF FF     
   8045 FFFCBC4C FF FF FF FF FF FF FF FF     
   8046 FFFCBC54 FF FF FF FF FF FF FF FF     
   8047 FFFCBC5C FF FF FF FF FF FF FF FF     
   8048 FFFCBC64 FF FF FF FF FF FF FF FF     
   8049 FFFCBC6C FF FF FF FF FF FF FF FF     
   8050 FFFCBC74 FF FF FF FF FF FF FF FF     
   8051 FFFCBC7C FF FF FF FF FF FF FF FF     
   8052 FFFCBC84 FF FF FF FF FF FF FF FF     
   8053 FFFCBC8C FF FF FF FF FF FF FF FF     
   8054 FFFCBC94 FF FF FF FF FF FF FF FF     
   8055 FFFCBC9C FF FF FF FF FF FF FF FF     
   8056 FFFCBCA4 FF FF FF FF FF FF FF FF     
   8057 FFFCBCAC FF FF FF FF FF FF FF FF     
   8058 FFFCBCB4 FF FF FF FF FF FF FF FF     
   8059 FFFCBCBC FF FF FF FF FF FF FF FF     
   8060 FFFCBCC4 FF FF FF FF FF FF FF FF     
   8061 FFFCBCCC FF FF FF FF FF FF FF FF     
   8062 FFFCBCD4 FF FF FF FF FF FF FF FF     
   8063 FFFCBCDC FF FF FF FF FF FF FF FF     
   8064 FFFCBCE4 FF FF FF FF FF FF FF FF     
   8065 FFFCBCEC FF FF FF FF FF FF FF FF     
   8066 FFFCBCF4 FF FF FF FF FF FF FF FF     
   8067 FFFCBCFC FF FF FF FF FF FF FF FF     
   8068 FFFCBD04 FF FF FF FF FF FF FF FF     
   8069 FFFCBD0C FF FF FF FF FF FF FF FF     
   8070 FFFCBD14 FF FF FF FF FF FF FF FF     
   8071 FFFCBD1C FF FF FF FF FF FF FF FF     
   8072 FFFCBD24 FF FF FF FF FF FF FF FF     
   8073 FFFCBD2C FF FF FF FF FF FF FF FF     
   8074 FFFCBD34 FF FF FF FF FF FF FF FF     
   8075 FFFCBD3C FF FF FF FF FF FF FF FF     
   8076 FFFCBD44 FF FF FF FF FF FF FF FF     
   8077 FFFCBD4C FF FF FF FF FF FF FF FF     
   8078 FFFCBD54 FF FF FF FF FF FF FF FF     
   8079 FFFCBD5C FF FF FF FF FF FF FF FF     
   8080 FFFCBD64 FF FF FF FF FF FF FF FF     
   8081 FFFCBD6C FF FF FF FF FF FF FF FF     
   8082 FFFCBD74 FF FF FF FF FF FF FF FF     
   8083 FFFCBD7C FF FF FF FF FF FF FF FF     
   8084 FFFCBD84 FF FF FF FF FF FF FF FF     
   8085 FFFCBD8C FF FF FF FF FF FF FF FF     
   8086 FFFCBD94 FF FF FF FF FF FF FF FF     
   8087 FFFCBD9C FF FF FF FF FF FF FF FF     
   8088 FFFCBDA4 FF FF FF FF FF FF FF FF     
   8089 FFFCBDAC FF FF FF FF FF FF FF FF     
   8090 FFFCBDB4 FF FF FF FF FF FF FF FF     
   8091 FFFCBDBC FF FF FF FF FF FF FF FF     
   8092 FFFCBDC4 FF FF FF FF FF FF FF FF     
   8093 FFFCBDCC FF FF FF FF FF FF FF FF     
   8094 FFFCBDD4 FF FF FF FF FF FF FF FF     
   8095 FFFCBDDC FF FF FF FF FF FF FF FF     
   8096 FFFCBDE4 FF FF FF FF FF FF FF FF     
   8097 FFFCBDEC FF FF FF FF FF FF FF FF     
   8098 FFFCBDF4 FF FF FF FF FF FF FF FF     
   8099 FFFCBDFC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 87
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8100 FFFCBE04 FF FF FF FF FF FF FF FF     
   8101 FFFCBE0C FF FF FF FF FF FF FF FF     
   8102 FFFCBE14 FF FF FF FF FF FF FF FF     
   8103 FFFCBE1C FF FF FF FF FF FF FF FF     
   8104 FFFCBE24 FF FF FF FF FF FF FF FF     
   8105 FFFCBE2C FF FF FF FF FF FF FF FF     
   8106 FFFCBE34 FF FF FF FF FF FF FF FF     
   8107 FFFCBE3C FF FF FF FF FF FF FF FF     
   8108 FFFCBE44 FF FF FF FF FF FF FF FF     
   8109 FFFCBE4C FF FF FF FF FF FF FF FF     
   8110 FFFCBE54 FF FF FF FF FF FF FF FF     
   8111 FFFCBE5C FF FF FF FF FF FF FF FF     
   8112 FFFCBE64 FF FF FF FF FF FF FF FF     
   8113 FFFCBE6C FF FF FF FF FF FF FF FF     
   8114 FFFCBE74 FF FF FF FF FF FF FF FF     
   8115 FFFCBE7C FF FF FF FF FF FF FF FF     
   8116 FFFCBE84 FF FF FF FF FF FF FF FF     
   8117 FFFCBE8C FF FF FF FF FF FF FF FF     
   8118 FFFCBE94 FF FF FF FF FF FF FF FF     
   8119 FFFCBE9C FF FF FF FF FF FF FF FF     
   8120 FFFCBEA4 FF FF FF FF FF FF FF FF     
   8121 FFFCBEAC FF FF FF FF FF FF FF FF     
   8122 FFFCBEB4 FF FF FF FF FF FF FF FF     
   8123 FFFCBEBC FF FF FF FF FF FF FF FF     
   8124 FFFCBEC4 FF FF FF FF FF FF FF FF     
   8125 FFFCBECC FF FF FF FF FF FF FF FF     
   8126 FFFCBED4 FF FF FF FF FF FF FF FF     
   8127 FFFCBEDC FF FF FF FF FF FF FF FF     
   8128 FFFCBEE4 FF FF FF FF FF FF FF FF     
   8129 FFFCBEEC FF FF FF FF FF FF FF FF     
   8130 FFFCBEF4 FF FF FF FF FF FF FF FF     
   8131 FFFCBEFC FF FF FF FF FF FF FF FF     
   8132 FFFCBF04 FF FF FF FF FF FF FF FF     
   8133 FFFCBF0C FF FF FF FF FF FF FF FF     
   8134 FFFCBF14 FF FF FF FF FF FF FF FF     
   8135 FFFCBF1C FF FF FF FF FF FF FF FF     
   8136 FFFCBF24 FF FF FF FF FF FF FF FF     
   8137 FFFCBF2C FF FF FF FF FF FF FF FF     
   8138 FFFCBF34 FF FF FF FF FF FF FF FF     
   8139 FFFCBF3C FF FF FF FF FF FF FF FF     
   8140 FFFCBF44 FF FF FF FF FF FF FF FF     
   8141 FFFCBF4C FF FF FF FF FF FF FF FF     
   8142 FFFCBF54 FF FF FF FF FF FF FF FF     
   8143 FFFCBF5C FF FF FF FF FF FF FF FF     
   8144 FFFCBF64 FF FF FF FF FF FF FF FF     
   8145 FFFCBF6C FF FF FF FF FF FF FF FF     
   8146 FFFCBF74 FF FF FF FF FF FF FF FF     
   8147 FFFCBF7C FF FF FF FF FF FF FF FF     
   8148 FFFCBF84 FF FF FF FF FF FF FF FF     
   8149 FFFCBF8C FF FF FF FF FF FF FF FF     
   8150 FFFCBF94 FF FF FF FF FF FF FF FF     
   8151 FFFCBF9C FF FF FF FF FF FF FF FF     
   8152 FFFCBFA4 FF FF FF FF FF FF FF FF     
   8153 FFFCBFAC FF FF FF FF FF FF FF FF     
   8154 FFFCBFB4 FF FF FF FF FF FF FF FF     
   8155 FFFCBFBC FF FF FF FF FF FF FF FF     
   8156 FFFCBFC4 FF FF FF FF FF FF FF FF     
   8157 FFFCBFCC FF FF FF FF FF FF FF FF     
   8158 FFFCBFD4 FF FF FF FF FF FF FF FF     
   8159 FFFCBFDC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 88
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8160 FFFCBFE4 FF FF FF FF FF FF FF FF     
   8161 FFFCBFEC FF FF FF FF FF FF FF FF     
   8162 FFFCBFF4 FF FF FF FF FF FF FF FF     
   8163 FFFCBFFC FF FF FF FF                 
                                             ;*
                                             ;* Standard jump table. You can change these addresses if you are
                                             ;* customizing this interpreter for a different environment.
                                             ;*
   8168 FFFCC000 6000 0022                   START	BRA.L	CSTART		;Cold Start entry point
   8169 FFFCC004 6000 005A                   GOWARM	BRA.L	WSTART		;Warm Start entry point
   8170 FFFCC008 6000 0B68                   GOOUT	BRA.L	OUTC		;Jump to character-out routine
   8171 FFFCC00C 6000 0B74                   GOIN	BRA.L	INC		;Jump to character-in routine
   8172 FFFCC010 6000 0B86                   GOAUXO	BRA.L	AUXOUT		;Jump to auxiliary-out routine
   8173 FFFCC014 6000 0B94                   GOAUXI	BRA.L	AUXIN		;Jump to auxiliary-in routine
   8174 FFFCC018 6000 0BA6                   GOBYE	BRA.L	BYEBYE		;Jump to monitor, DOS, etc.
                                             ;*
                                             ;* Modifiable system constants:
                                             ;*
   8178 FFFCC01C 00200000                    TXTBGN	DC.L	0x200000	;beginning of program memory
   8179 FFFCC020 1F000000                    ENDMEM	DC.L	0x1F000000	;	end of available memory
                                             ;*
                                             ;* The main interpreter starts here:
                                             ;*
   8183 FFFCC024                             CSTART:
   8184 FFFCC024 41F9 FFFC C000              	LEA		START,A0
   8185 FFFCC02A 21C8 0600                   	MOVE.L	A0,RANPNT
   8186 FFFCC02E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;initialize stack pointer
   8187 FFFCC034 4DF9 FFFC CBC6              	LEA		INITMSG,A6	;tell who we are
   8188 FFFCC03A 6100 0B2A                   	BSR.L	PRMESG
   8189 FFFCC03E 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;init. end-of-program pointer
   8190 FFFCC046 2039 FFFC C020              	MOVE.L	ENDMEM,D0	;get address of end of memory
   8191 FFFCC04C 0480 0000 0800              	SUB.L	#2048,D0	;reserve 2K for the stack
   8192 FFFCC052 21C0 062C                   	MOVE.L	D0,STKLMT
   8193 FFFCC056 0480 0000 006C              	SUB.L	#108,D0 	;reserve variable area (27 long words)
   8194 FFFCC05C 21C0 0628                   	MOVE.L	D0,VARBGN
   8195 FFFCC060                             WSTART:
   8196 FFFCC060 4280                        	CLR.L	D0		;initialize internal variables
   8197 FFFCC062 21C0 0610                   	MOVE.L	D0,LOPVAR
   8198 FFFCC066 21C0 0608                   	MOVE.L	D0,STKGOS
   8199 FFFCC06A 21C0 0604                   	MOVE.L	D0,CURRNT	;current line number pointer = 0
   8200 FFFCC06E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;init S.P. again, just in case
   8201 FFFCC074 4DF9 FFFC CBD1              	LEA	OKMSG,A6	;display "OK"
   8202 FFFCC07A 6100 0AEA                   	BSR.L	PRMESG
   8203 FFFCC07E                             ST3:
   8204 FFFCC07E 103C 003E                   	MOVE.B	#'>',D0  ;       Prompt with a '>' and
   8205 FFFCC082 6100 0810                   	BSR.L	GETLN	;	read a line.
   8206 FFFCC086 6100 0A7A                   	BSR.L	TOUPBUF ;	convert to upper case
   8207 FFFCC08A 2848                        	MOVE.L	A0,A4	;	save pointer to end of line
   8208 FFFCC08C 41F8 0630                   	LEA	BUFFER,A0	;point to the beginning of line
   8209 FFFCC090 6100 0A2C                   	BSR.L	TSTNUM	;	is there a number there?
   8210 FFFCC094 6100 0A60                   	BSR.L	IGNBLK	;	skip trailing blanks
   8211 FFFCC098 4A81                        	TST	D1		;does line no. exist? (or nonzero?)
   8212 FFFCC09A 6700 011A                   	BEQ.L	DIRECT	;	if not, it's a direct statement
   8213 FFFCC09E B2BC 0000 FFFF              	CMP.L	#$FFFF,D1	;see if line no. is <= 16 bits
   8214 FFFCC0A4 6400 07E4                   	BCC.L	QHOW		;if not, we've overflowed
   8215 FFFCC0A8 1101                        	MOVE.B	D1,-(A0)	;store the binary line no.
   8216 FFFCC0AA E099                        	ROR	#8,D1		;(Kludge to store a word on a
   8217 FFFCC0AC 1101                        	MOVE.B	D1,-(A0)	;possible byte boundary)
   8218 FFFCC0AE E199                        	ROL	#8,D1
   8219 FFFCC0B0 6100 0882                   	BSR.L	FNDLN	;	find this line in save area
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 89
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8220 FFFCC0B4 2A49                        	MOVE.L	A1,A5	;	save possible line pointer
   8221 FFFCC0B6 6612                        	BNE	ST4				;	if not found, insert
   8222 FFFCC0B8 6100 08A2                   	BSR.L	FNDNXT		;find the next line (into A1)
   8223 FFFCC0BC 244D                        	MOVE.L	A5,A2		;pointer to line to be deleted
   8224 FFFCC0BE 2678 0624                   	MOVE.L	TXTUNF,A3	;points to top of save area
   8225 FFFCC0C2 6100 08A2                   	BSR.L	MVUP		;move up to delete
   8226 FFFCC0C6 21CA 0624                   	MOVE.L	A2,TXTUNF	;update the end pointer
   8227 FFFCC0CA                             ST4:
   8228 FFFCC0CA 200C                        	MOVE.L	A4,D0		;calculate the length of new line
   8229 FFFCC0CC 9088                        	SUB.L	A0,D0
   8230 FFFCC0CE B0BC 0000 0003              	CMP.L	#3,D0		;is it just a line no. & CR?
   8231 FFFCC0D4 67A8                        	BEQ	ST3				;if so, it was just a delete
   8232 FFFCC0D6 2678 0624                   	MOVE.L	TXTUNF,A3	;compute new end
   8233 FFFCC0DA 2C4B                        	MOVE.L	A3,A6
   8234 FFFCC0DC D7C0                        	ADD.L	D0,A3
   8235 FFFCC0DE 2038 0628                   	MOVE.L	VARBGN,D0	;see if there's enough room
   8236 FFFCC0E2 B08B                        	CMP.L	A3,D0
   8237 FFFCC0E4 6300 079A                   	BLS.L	QSORRY		;if not, say so
   8238 FFFCC0E8 21CB 0624                   	MOVE.L	A3,TXTUNF	;if so, store new end position
   8239 FFFCC0EC 224E                        	MOVE.L	A6,A1		;points to old unfilled area
   8240 FFFCC0EE 244D                        	MOVE.L	A5,A2		;points to beginning of move area
   8241 FFFCC0F0 6100 087E                   	BSR.L	MVDOWN		;move things out of the way
   8242 FFFCC0F4 2248                        	MOVE.L	A0,A1		;set up to do the insertion
   8243 FFFCC0F6 244D                        	MOVE.L	A5,A2
   8244 FFFCC0F8 264C                        	MOVE.L	A4,A3
   8245 FFFCC0FA 6100 086A                   	BSR.L	MVUP		;do it
   8246 FFFCC0FE 6000 FF7E                   	BRA	ST3		;go back and get another line
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** Tables *** DIRECT *** EXEC ***
                                             ;*
                                             ;* This section of the code tests a string against a table. When
                                             ;* a match is found, control is transferred to the section of
                                             ;* code according to the table.
                                             ;*
                                             ;* At 'EXEC', A0 should point to the string, A1 should point to
                                             ;* the character table, and A2 should point to the execution
                                             ;* table. At 'DIRECT', A0 should point to the string, A1 and
                                             ;* A2 will be set up to point to TAB1 and TAB1.1, which are
                                             ;* the tables of all direct and statement commands.
                                             ;*
                                             ;* A '.' in the string will terminate the test and the partial
                                             ;* match will be considered as a match, e.g. 'P.', 'PR.','PRI.',
                                             ;* 'PRIN.', or 'PRINT' will all match 'PRINT'.
                                             ;*
                                             ;* There are two tables: the character table and the execution
                                             ;* table. The character table consists of any number of text items.
                                             ;* Each item is a string of characters with the last character's
                                             ;* high bit set to one. The execution table holds a 16-bit
                                             ;* execution addresses that correspond to each entry in the
                                             ;* character table.
                                             ;*
                                             ;* The end of the character table is a 0 byte which corresponds
                                             ;* to the default routine in the execution table, which is
                                             ;* executed if none of the other table items are matched.
                                             ;*
                                             ;* Character-matching tables:
   8279 FFFCC102                             TAB1:
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 90
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8280 FFFCC102 4C 49 53 D4                 	DC.B	'LIS',('T'+0x80) ;        Direct commands
   8281 FFFCC106 4C 4F 41 C4                 	DC.B	'LOA',('D'+0x80)
   8282 FFFCC10A 4E 45 D7                    	DC.B	'NE',('W'+0x80)
   8283 FFFCC10D 52 55 CE                    	DC.B	'RU',('N'+0x80)
   8284 FFFCC110 53 41 56 C5                 	DC.B	'SAV',('E'+0x80)
   8285 FFFCC114                             TAB2:
   8286 FFFCC114 4E 45 58 D4                 	DC.B	'NEX',('T'+0x80)  ;       Direct / statement
   8287 FFFCC118 4C 45 D4                    	DC.B	'LE',('T'+0x80)
   8288 FFFCC11B 49 C6                       	DC.B	'I',('F'+0x80)
   8289 FFFCC11D 47 4F 54 CF                 	DC.B	'GOT',('O'+0x80)
   8290 FFFCC121 47 4F 53 55 C2              	DC.B	'GOSU',('B'+0x80)
   8291 FFFCC126 52 45 54 55 52 CE           	DC.B	'RETUR',('N'+0x80)
   8292 FFFCC12C 52 45 CD                    	DC.B	'RE',('M'+0x80)
   8293 FFFCC12F 46 4F D2                    	DC.B	'FO',('R'+0x80)
   8294 FFFCC132 49 4E 50 55 D4              	DC.B	'INPU',('T'+0x80)
   8295 FFFCC137 50 52 49 4E D4              	DC.B	'PRIN',('T'+0x80)
   8296 FFFCC13C 50 4F 4B C5                 	DC.B	'POK',('E'+0x80)
   8297 FFFCC140 53 54 4F D0                 	DC.B	'STO',('P'+0x80)
   8298 FFFCC144 42 59 C5                    	DC.B	'BY',('E'+0x80)
   8299 FFFCC147 43 41 4C CC                 	DC.B	'CAL',('L'+0x80)
   8300 FFFCC14B 00                          	DC.B	0
   8301 FFFCC14C                             TAB4:
   8302 FFFCC14C 50 45 45 CB                 	DC.B	'PEE',('K'+0x80)   ;      Functions
   8303 FFFCC150 52 4E C4                    	DC.B	'RN',('D'+0x80)
   8304 FFFCC153 41 42 D3                    	DC.B	'AB',('S'+0x80)
   8305 FFFCC156 53 49 5A C5                 	DC.B	'SIZ',('E'+0x80)
   8306 FFFCC15A 00                          	DC.B	0
   8307 FFFCC15B                             TAB5:
   8308 FFFCC15B 54 CF                       	DC.B	'T',('O'+0x80)      ;     "TO" in "FOR"
   8309 FFFCC15D 00                          	DC.B	0
   8310 FFFCC15E                             TAB6:
   8311 FFFCC15E 53 54 45 D0                 	DC.B	'STE',('P'+0x80)     ;    "STEP" in "FOR"
   8312 FFFCC162 00                          	DC.B	0
   8313 FFFCC163                             TAB8:
   8314 FFFCC163 3E BD                       	DC.B	'>',('='+0x80)        ;   Relational operators
   8315 FFFCC165 3C BE                       	DC.B	'<',('>'+0x80)
   8316 FFFCC167 BE                          	DC.B	('>'+0x80)
   8317 FFFCC168 BD                          	DC.B	('='+0x80)
   8318 FFFCC169 3C BD                       	DC.B	'<',('='+0x80)
   8319 FFFCC16B BC                          	DC.B	('<'+0x80)
   8320 FFFCC16C 00                          	DC.B	0
   8321 FFFCC16D 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             ;* Execution address tables:
   8324 FFFCC16E                             TAB1_1:
   8325 FFFCC16E C266                        	DC.W	LIST_			;Direct commands
   8326 FFFCC170 C4A8                        	DC.W	LOAD
   8327 FFFCC172 C200                        	DC.W	NEW
   8328 FFFCC174 C214                        	DC.W	RUN
   8329 FFFCC176 C50C                        	DC.W	SAVE
   8330 FFFCC178                             TAB2_1:
   8331 FFFCC178 C3B4                        	DC.W	NEXT			;Direct / statement
   8332 FFFCC17A C498                        	DC.W	LET
   8333 FFFCC17C C404                        	DC.W	IF
   8334 FFFCC17E C252                        	DC.W	GOTO
   8335 FFFCC180 C2FC                        	DC.W	GOSUB
   8336 FFFCC182 C324                        	DC.W	RETURN
   8337 FFFCC184 C402                        	DC.W	REM
   8338 FFFCC186 C342                        	DC.W	FOR
   8339 FFFCC188 C42A                        	DC.W	INPUT
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 91
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8340 FFFCC18A C292                        	DC.W	PRINT
   8341 FFFCC18C C590                        	DC.W	POKE
   8342 FFFCC18E C20C                        	DC.W	STOP_
   8343 FFFCC190 C018                        	DC.W	GOBYE
   8344 FFFCC192 C5AC                        	DC.W	CALL
   8345 FFFCC194 C492                        	DC.W	DEFLT
   8346 FFFCC196                             TAB4_1:
   8347 FFFCC196 C7A2                        	DC.W	PEEK			;Functions
   8348 FFFCC198 C7AE                        	DC.W	RND
   8349 FFFCC19A C7E4                        	DC.W	ABS
   8350 FFFCC19C C7F4                        	DC.W	SIZE_
   8351 FFFCC19E C6A6                        	DC.W	XP40
   8352 FFFCC1A0                             TAB5_1:
   8353 FFFCC1A0 C35E                        	DC.W	FR1		;	"TO" in "FOR"
   8354 FFFCC1A2 C83E                        	DC.W	QWHAT
   8355 FFFCC1A4                             TAB6_1:
   8356 FFFCC1A4 C376                        	DC.W	FR2		;	"STEP" in "FOR"
   8357 FFFCC1A6 C37C                        	DC.W	FR3
   8358 FFFCC1A8                             TAB8_1:
   8359 FFFCC1A8 C5D8                        	DC.W	XP11;	>=		Relational operators
   8360 FFFCC1AA C5E0                        	DC.W	XP12	;<>
   8361 FFFCC1AC C5E8                        	DC.W	XP13	;>
   8362 FFFCC1AE C5F8                        	DC.W	XP15	;=
   8363 FFFCC1B0 C5F0                        	DC.W	XP14	;<=
   8364 FFFCC1B2 C602                        	DC.W	XP16	;<
   8365 FFFCC1B4 C614                        	DC.W	XP17
                                             ;*
   8367 FFFCC1B6                             DIRECT:
   8368 FFFCC1B6 43F9 FFFC C102              	LEA	TAB1,A1
   8369 FFFCC1BC 45F9 FFFC C16E              	LEA	TAB1_1,A2
   8370 FFFCC1C2                             EXEC:
   8371 FFFCC1C2 6100 0932                   	BSR.L	IGNBLK;		ignore leading blanks
   8372 FFFCC1C6 2648                        	MOVE.L	A0,A3		;save the pointer
   8373 FFFCC1C8 4202                        	CLR.B	D2		;clear match flag
   8374 FFFCC1CA                             EXLP:
   8375 FFFCC1CA 1018                        	MOVE.B	(A0)+,D0;	get the program character
   8376 FFFCC1CC 1211                        	MOVE.B	(A1),D1 	;get the table character
   8377 FFFCC1CE 6604                        	BNE	EXNGO		;If end of table,
   8378 FFFCC1D0 204B                        	MOVE.L	A3,A0	;;	restore the text pointer and...
   8379 FFFCC1D2 6024                        	BRA	EXGO		;execute the default.
   8380 FFFCC1D4                             EXNGO:
   8381 FFFCC1D4 1600                        	MOVE.B	D0,D3	;	Else check for period...
   8382 FFFCC1D6 C602                        	AND.B	D2,D3		;and a match.
   8383 FFFCC1D8 B63C 002E                   	CMP.B	#'.',D3
   8384 FFFCC1DC 671A                        	BEQ	EXGO		;if so, execute
   8385 FFFCC1DE 0201 007F                   	AND.B	#0x7F,D1 ;	ignore the table's high bit
   8386 FFFCC1E2 B200                        	CMP.B	D0,D1	;	is there a match?
   8387 FFFCC1E4 670C                        	BEQ	EXMAT
   8388 FFFCC1E6 548A                        	ADDQ.L	#2,A2	;	if not, try the next entry
   8389 FFFCC1E8 204B                        	MOVE.L	A3,A0	;	reset the program pointer
   8390 FFFCC1EA 4202                        	CLR.B	D2		;sorry, no match
   8391 FFFCC1EC                             EX1:
   8392 FFFCC1EC 4A19                        	TST.B	(A1)+	;	get to the end of the entry
   8393 FFFCC1EE 6AFC                        	BPL	EX1
   8394 FFFCC1F0 60D8                        	BRA	EXLP		;back for more matching
   8395 FFFCC1F2                             EXMAT:
   8396 FFFCC1F2 74FF                        	MOVEQ	#-1,D2;		we've got a match so far
   8397 FFFCC1F4 4A19                        	TST.B	(A1)+	;	end of table entry?
   8398 FFFCC1F6 6AD2                        	BPL	EXLP		;if not, go back for more
   8399 FFFCC1F8                             EXGO:
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 92
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8400 FFFCC1F8 47F8 0000                   	LEA	0,A3	;	execute the appropriate routine
   8401 FFFCC1FC 2652                        	MOVE	(A2),A3
   8402 FFFCC1FE 4ED3                        	JMP	(A3)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* What follows is the code to execute direct and statement
                                             ;* commands. Control is transferred to these points via the command
                                             ;* table lookup code of 'DIRECT' and 'EXEC' in the last section.
                                             ;* After the command is executed, control is transferred to other
                                             ;* sections as follows:
                                             ;*
                                             ;* For 'LIST', 'NEW', and 'STOP': go back to the warm start point.
                                             ;* For 'RUN': go execute the first stored line if any; else go
                                             ;* back to the warm start point.
                                             ;* For 'GOTO' and 'GOSUB': go execute the target line.
                                             ;* For 'RETURN' and 'NEXT'; go back to saved return line.
                                             ;* For all others: if 'CURRNT' is 0, go to warm start; else go;
                                             ;* execute next command. (This is done in 'FINISH'.)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** NEW *** STOP *** RUN (& friends) *** GOTO ***
                                             ;*
                                             ;* 'NEW<CR>' sets TXTUNF to point to TXTBGN
                                             ;*
                                             ;* 'STOP<CR>' goes back to WSTART
                                             ;*
                                             ;* 'RUN<CR>' finds the first stored line, stores its address
                                             ;* in CURRNT, and starts executing it. Note that only those
                                             ;* commands in TAB2 are legal for a stored program.
                                             ;*
                                             ;* There are 3 more entries in 'RUN':
                                             ;* 'RUNNXL' finds next line, stores it's address and executes it.
                                             ;* 'RUNTSL' stores the address of this line and executes it.
                                             ;* 'RUNSML' continues the execution on same line.
                                             ;*
                                             ;* 'GOTO expr<CR>' evaluates the expression, finds the target
                                             ;* line, and jumps to 'RUNTSL' to do it.
                                             ;*
   8440 FFFCC200                             NEW:
   8441 FFFCC200 6100 0630                   	BSR.L	ENDCHK
   8442 FFFCC204 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;set the end pointer
                                             
   8444 FFFCC20C                             STOP_:
   8445 FFFCC20C 6100 0624                   	BSR.L	ENDCHK
   8446 FFFCC210 6000 FE4E                   	BRA	WSTART
                                             
   8448 FFFCC214                             RUN:
   8449 FFFCC214 6100 061C                   	BSR.L	ENDCHK
   8450 FFFCC218 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to beginning
   8451 FFFCC21E 21C8 0604                   	MOVE.L	A0,CURRNT
                                             
   8453 FFFCC222                             RUNNXL:
   8454 FFFCC222 4AB8 0604                   	TST.L	CURRNT	;	executing a program?
   8455 FFFCC226 6700 FE38                   	BEQ.L	WSTART		;if not, we've finished a direct stat.
   8456 FFFCC22A 4281                        	CLR.L	D1		;else find the next line number
   8457 FFFCC22C 2248                        	MOVE.L	A0,A1
   8458 FFFCC22E 6100 0714                   	BSR.L	FNDLNP
   8459 FFFCC232 6500 FE2C                   	BCS	WSTART		;if we've fallen off the end, stop
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 93
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
   8461 FFFCC236                             RUNTSL:
   8462 FFFCC236 21C9 0604                   	MOVE.L	A1,CURRNT	;set CURRNT to point to the line no.
   8463 FFFCC23A 2049                        	MOVE.L	A1,A0		;set the text pointer to
   8464 FFFCC23C 5488                        	ADDQ.L	#2,A0		;the start of the line text
                                             
   8466 FFFCC23E                             RUNSML:
   8467 FFFCC23E 6100 090E                   	BSR.L	CHKIO	;	see if a control-C was pressed
   8468 FFFCC242 43F9 FFFC C114              	LEA	TAB2,A1 	;find command in TAB2
   8469 FFFCC248 45F9 FFFC C178              	LEA	TAB2_1,A2
   8470 FFFCC24E 6000 FF72                   	BRA	EXEC		;and execute it
                                             
   8472 FFFCC252                             GOTO:
   8473 FFFCC252 6100 036E                   	BSR.L	EXPR	;	evaluate the following expression
   8474 FFFCC256 6100 05DA                   	BSR.L	ENDCHK		;must find end of line
   8475 FFFCC25A 2200                        	MOVE.L	D0,D1
   8476 FFFCC25C 6100 06D6                   	BSR.L	FNDLN		;find the target line
   8477 FFFCC260 6600 0628                   	BNE.L	QHOW		;no such line no.
   8478 FFFCC264 60D0                        	BRA	RUNTSL		;go do it
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LIST *** PRINT ***
                                             ;*
                                             ;* LIST has two forms:
                                             ;* 'LIST<CR>' lists all saved lines
                                             ;* 'LIST #<CR>' starts listing at the line #
                                             ;* Control-S pauses the listing, control-C stops it.
                                             ;*
                                             ;* PRINT command is 'PRINT ....:' or 'PRINT ....<CR>'
                                             ;* where '....' is a list of expressions, formats, back-arrows,
                                             ;* and strings.	These items a separated by commas.
                                             ;*
                                             ;* A format is a pound sign followed by a number.  It controls
                                             ;* the number of spaces the value of an expression is going to
                                             ;* be printed in.  It stays effective for the rest of the print
                                             ;* command unless changed by another format.  If no format is
                                             ;* specified, 11 positions will be used.
                                             ;*
                                             ;* A string is quoted in a pair of single- or double-quotes.
                                             ;*
                                             ;* An underline (back-arrow) means generate a <CR> without a <LF>
                                             ;*
                                             ;* A <CR LF> is generated after the entire list has been printed
                                             ;* or if the list is empty.  If the list ends with a semicolon,
                                             ;* however, no <CR LF> is generated.
                                             ;*
                                             
   8509 FFFCC266                             LIST_:
   8510 FFFCC266 6100 0856                   	BSR.L	TSTNUM	;	see if there's a line no.
   8511 FFFCC26A 6100 05C6                   	BSR.L	ENDCHK		;if not, we get a zero
   8512 FFFCC26E 6100 06C4                   	BSR.L	FNDLN		;find this or next line
   8513 FFFCC272                             LS1:
   8514 FFFCC272 6500 FDEC                   	BCS	WSTART		;warm start if we passed the end
   8515 FFFCC276 6100 0810                   	BSR.L	PRTLN	;	print the line
   8516 FFFCC27A 6100 08D2                   	BSR.L	CHKIO	;	check for listing halt request
   8517 FFFCC27E 670C                        	BEQ	LS3
   8518 FFFCC280 B03C 0013                   	CMP.B	#CTRLS,D0	;pause the listing?
   8519 FFFCC284 6606                        	BNE	LS3
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 94
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8520 FFFCC286                             LS2:
   8521 FFFCC286 6100 08C6                   	BSR.L	CHKIO		;if so, wait for another keypress
   8522 FFFCC28A 67FA                        	BEQ	LS2
   8523 FFFCC28C                             LS3:
   8524 FFFCC28C 6100 06B6                   	BSR.L	FNDLNP		;find the next line
   8525 FFFCC290 60E0                        	BRA	LS1
                                             
   8527 FFFCC292                             PRINT:
   8528 FFFCC292 780B                        	MOVE	#11,D4	;	D4 = number of print spaces
   8529 FFFCC294 6100 080E                   	BSR.L	TSTC		;if null list and ":"
   8530 FFFCC298 3A 07                       	DC.B	':',PR2-$
   8531 FFFCC29A 6100 08C4                   	BSR.L	CRLF		;give CR-LF and continue
   8532 FFFCC29E 609E                        	BRA	RUNSML		;execution on the same line
   8533 FFFCC2A0                             PR2:
   8534 FFFCC2A0 6100 0802                   	BSR.L	TSTC		;if null list and <CR>
   8535 FFFCC2A4 0D 09                       	DC.B	CR,PR0-$
   8536 FFFCC2A6 6100 08B8                   	BSR.L	CRLF		;also give CR-LF and
   8537 FFFCC2AA 6000 FF76                   	BRA	RUNNXL		;execute the next line
   8538 FFFCC2AE                             PR0:
   8539 FFFCC2AE 6100 07F4                   	BSR.L	TSTC		;else is it a format?
   8540 FFFCC2B2 23 09                       	DC.B	'#',PR1-$
   8541 FFFCC2B4 6100 030C                   	BSR.L	EXPR		;yes, evaluate expression
   8542 FFFCC2B8 2800                        	MOVE	D0,D4		;and save it as print width
   8543 FFFCC2BA 6016                        	BRA	PR3		;look for more to print
   8544 FFFCC2BC                             PR1:
   8545 FFFCC2BC 6100 07E6                   	BSR.L	TSTC		;is character expression? (MRL)
   8546 FFFCC2C0 24 0B                       	DC.B	'$',PR4-$
   8547 FFFCC2C2 6100 02FE                   	BSR.L	EXPR		;yep. Evaluate expression (MRL)
   8548 FFFCC2C6 6100 FD40                   	BSR	GOOUT		;print low byte (MRL)
   8549 FFFCC2CA 6006                        	BRA	PR3		;look for more. (MRL)
   8550 FFFCC2CC                             PR4:
   8551 FFFCC2CC 6100 0706                   	BSR.L	QTSTG	;	is it a string?
   8552 FFFCC2D0 6012                        	BRA.S	PR8		;if not, must be an expression
   8553 FFFCC2D2                             PR3:
   8554 FFFCC2D2 6100 07D0                   	BSR.L	TSTC	;	if ",", go find next
   8555 FFFCC2D6 2C 07                       	DC.B	',',PR6-$
   8556 FFFCC2D8 6100 053E                   	BSR.L	FIN		;in the list.
   8557 FFFCC2DC 60D0                        	BRA	PR0
   8558 FFFCC2DE                             PR6:
   8559 FFFCC2DE 6100 0880                   	BSR.L	CRLF	;	list ends here
   8560 FFFCC2E2 6010                        	BRA	FINISH
   8561 FFFCC2E4                             PR8:
   8562 FFFCC2E4 2F04                        	MOVE	D4,-(SP)	;save the width value
   8563 FFFCC2E6 6100 02DA                   	BSR.L	EXPR		;evaluate the expression
   8564 FFFCC2EA 281F                        	MOVE	(SP)+,D4	;restore the width
   8565 FFFCC2EC 2200                        	MOVE.L	D0,D1
   8566 FFFCC2EE 6100 0724                   	BSR.L	PRTNUM		;print its value
   8567 FFFCC2F2 60DE                        	BRA	PR3		;more to print?
                                             
   8569 FFFCC2F4                             FINISH:
   8570 FFFCC2F4 6100 0522                   	BSR.L	FIN	;	Check end of command
   8571 FFFCC2F8 6000 0544                   	BRA.L	QWHAT	;	print "What?" if wrong
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GOSUB *** & RETURN ***
                                             ;*
                                             ;* 'GOSUB expr:' or 'GOSUB expr<CR>' is like the 'GOTO' command,
                                             ;* except that the current text pointer, stack pointer, etc. are
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 95
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* saved so that execution can be continued after the subroutine
                                             ;* 'RETURN's.  In order that 'GOSUB' can be nested (and even
                                             ;* recursive), the save area must be stacked.  The stack pointer
                                             ;* is saved in 'STKGOS'.  The old 'STKGOS' is saved on the stack.
                                             ;* If we are in the main routine, 'STKGOS' is zero (this was done
                                             ;* in the initialization section of the interpreter), but we still
                                             ;* save it as a flag for no further 'RETURN's.
                                             ;*
                                             ;* 'RETURN<CR>' undoes everything that 'GOSUB' did, and thus
                                             ;* returns the execution to the command after the most recent
                                             ;* 'GOSUB'.  If 'STKGOS' is zero, it indicates that we never had
                                             ;* a 'GOSUB' and is thus an error.
                                             ;*
   8593 FFFCC2FC                             GOSUB:
   8594 FFFCC2FC 6100 0694                   	BSR.L	PUSHA	;	save the current 'FOR' parameters
   8595 FFFCC300 6100 02C0                   	BSR.L	EXPR		;get line number
   8596 FFFCC304 2F08                        	MOVE.L	A0,-(SP)	;save text pointer
   8597 FFFCC306 2200                        	MOVE.L	D0,D1
   8598 FFFCC308 6100 062A                   	BSR.L	FNDLN		;find the target line
   8599 FFFCC30C 6600 057E                   	BNE.L	AHOW		;if not there, say "How?"
   8600 FFFCC310 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;found it, save old 'CURRNT'...
   8601 FFFCC314 2F38 0608                   	MOVE.L	STKGOS,-(SP)	;and 'STKGOS'
   8602 FFFCC318 42B8 0610                   	CLR.L	LOPVAR		;load new values
   8603 FFFCC31C 21CF 0608                   	MOVE.L	SP,STKGOS
   8604 FFFCC320 6000 FF14                   	BRA	RUNTSL
                                             
   8606 FFFCC324                             RETURN:
   8607 FFFCC324 6100 050C                   	BSR.L	ENDCHK	;	there should be just a <CR>
   8608 FFFCC328 2238 0608                   	MOVE.L	STKGOS,D1	;get old stack pointer
   8609 FFFCC32C 6700 0510                   	BEQ.L	QWHAT		;if zero, it doesn't exist
   8610 FFFCC330 2E41                        	MOVE.L	D1,SP		;else restore it
   8611 FFFCC332 21DF 0608                   	MOVE.L	(SP)+,STKGOS	;and the old 'STKGOS'
   8612 FFFCC336 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;and the old 'CURRNT'
   8613 FFFCC33A 205F                        	MOVE.L	(SP)+,A0	;and the old text pointer
   8614 FFFCC33C 6100 063A                   	BSR.L	POPA		;and the old 'FOR' parameters
   8615 FFFCC340 60B2                        	BRA	FINISH		;and we are back home
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** FOR *** & NEXT ***
                                             ;*
                                             ;* 'FOR' has two forms:
                                             ;* 'FOR var=exp1 TO exp2 STEP exp1' and 'FOR var=exp1 TO exp2'
                                             ;* The second form means the same thing as the first form with a
                                             ;* STEP of positive 1.  The interpreter will find the variable 'var'
                                             ;* and set its value to the current value of 'exp1'.  It also
                                             ;* evaluates 'exp2' and 'exp1' and saves all these together with
                                             ;* the text pointer, etc. in the 'FOR' save area, which consisits of
                                             ;* 'LOPVAR', 'LOPINC', 'LOPLMT', 'LOPLN', and 'LOPPT'.  If there is
                                             ;* already something in the save area (indicated by a non-zero
                                             ;* 'LOPVAR'), then the old save area is saved on the stack before
                                             ;* the new values are stored.  The interpreter will then dig in the
                                             ;* stack and find out if this same variable was used in another
                                             ;* currently active 'FOR' loop.  If that is the case, then the old
                                             ;* 'FOR' loop is deactivated. (i.e. purged from the stack)
                                             ;*
                                             ;* 'NEXT var' serves as the logical (not necessarily physical) end
                                             ;* of the 'FOR' loop.  The control variable 'var' is checked with
                                             ;* the 'LOPVAR'.  If they are not the same, the interpreter digs in
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 96
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* the stack to find the right one and purges all those that didn't
                                             ;* match.  Either way, it then adds the 'STEP' to that variable and
                                             ;* checks the result with against the limit value.  If it is within
                                             ;* the limit, control loops back to the command following the
                                             ;* 'FOR'.  If it's outside the limit, the save area is purged and
                                             ;* execution continues.
                                             ;*
   8647 FFFCC342                             FOR:
   8648 FFFCC342 6100 064E                   	BSR.L	PUSHA		;save the old 'FOR' save area
   8649 FFFCC346 6100 04B6                   	BSR.L	SETVAL		;set the control variable
   8650 FFFCC34A 21CE 0610                   	MOVE.L	A6,LOPVAR	;save its address
   8651 FFFCC34E 43F9 FFFC C15B              	LEA	TAB5,A1 	;use 'EXEC' to test for 'TO'
   8652 FFFCC354 45F9 FFFC C1A0              	LEA	TAB5_1,A2
   8653 FFFCC35A 6000 FE66                   	BRA	EXEC
   8654 FFFCC35E                             FR1:
   8655 FFFCC35E 6100 0262                   	BSR.L	EXPR		;evaluate the limit
   8656 FFFCC362 21C0 0618                   	MOVE.L	D0,LOPLMT	;save that
   8657 FFFCC366 43F9 FFFC C15E              	LEA	TAB6,A1 	;use 'EXEC' to look for the
   8658 FFFCC36C 45F9 FFFC C1A4              	LEA	TAB6_1,A2	;word 'STEP'
   8659 FFFCC372 6000 FE4E                   	BRA	EXEC
   8660 FFFCC376                             FR2:
   8661 FFFCC376 6100 024A                   	BSR.L	EXPR	;	found it, get the step value
   8662 FFFCC37A 6002                        	BRA	FR4
   8663 FFFCC37C                             FR3:
   8664 FFFCC37C 7001                        	MOVEQ	#1,D0	;	not found, step defaults to 1
   8665 FFFCC37E                             FR4:
   8666 FFFCC37E 21C0 0614                   	MOVE.L	D0,LOPINC	;save that too
   8667 FFFCC382                             FR5:
   8668 FFFCC382 21F8 0604 061C              	MOVE.L	CURRNT,LOPLN	;save address of current line number
   8669 FFFCC388 21C8 0620                   	MOVE.L	A0,LOPPT	;and text pointer
   8670 FFFCC38C 2C4F                        	MOVE.L	SP,A6		;dig into the stack to find 'LOPVAR'
   8671 FFFCC38E 6006                        	BRA	FR7
   8672 FFFCC390                             FR6:
   8673 FFFCC390 DDFC 0000 0014              	ADD.L	#20,A6		;look at next stack frame
   8674 FFFCC396                             FR7:
   8675 FFFCC396 2016                        	MOVE.L	(A6),D0 	;is it zero?
   8676 FFFCC398 6716                        	BEQ	FR8		;if so, we're done
   8677 FFFCC39A B0B8 0610                   	CMP.L	LOPVAR,D0	;same as current LOPVAR?
   8678 FFFCC39E 66F0                        	BNE	FR6		;nope, look some more
   8679 FFFCC3A0 244F                        	MOVE.L	SP,A2	;	Else remove 5 long words from...
   8680 FFFCC3A2 224E                        	MOVE.L	A6,A1	;	inside the stack.
   8681 FFFCC3A4 47F8 0014                   	LEA	20,A3
   8682 FFFCC3A8 D7C9                        	ADD.L	A1,A3
   8683 FFFCC3AA 6100 05C4                   	BSR.L	MVDOWN
   8684 FFFCC3AE 2E4B                        	MOVE.L	A3,SP	;	set the SP 5 long words up
   8685 FFFCC3B0                             FR8:
   8686 FFFCC3B0 6000 FF42                   	BRA	FINISH		;and continue execution
                                             
   8688 FFFCC3B4                             NEXT:
   8689 FFFCC3B4 6100 031E                   	BSR.L	TSTV;		get address of variable
   8690 FFFCC3B8 6500 0484                   	BCS.L	QWHAT	;	if no variable, say "What?"
   8691 FFFCC3BC 2240                        	MOVE.L	D0,A1	;	save variable's address
   8692 FFFCC3BE                             NX0:
   8693 FFFCC3BE 2038 0610                   	MOVE.L	LOPVAR,D0;	If 'LOPVAR' is zero, we never...
   8694 FFFCC3C2 6700 047A                   	BEQ.L	QWHAT	;	had a FOR loop, so say "What?"
   8695 FFFCC3C6 B3C0                        	CMP.L	D0,A1	;;	else we check them
   8696 FFFCC3C8 6706                        	BEQ	NX3	;	OK, they agree
   8697 FFFCC3CA 6100 05AC                   	BSR.L	POPA	;	nope, let's see the next frame
   8698 FFFCC3CE 60EE                        	BRA	NX0
   8699 FFFCC3D0                             NX3:
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 97
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8700 FFFCC3D0 2011                        	MOVE.L	(A1),D0 ;	get control variable's value
   8701 FFFCC3D2 D0B8 0614                   	ADD.L	LOPINC,D0;	add in loop increment
   8702 FFFCC3D6 6900 04B2                   	BVS.L	QHOW	;	say "How?" for 32-bit overflow
   8703 FFFCC3DA 2280                        	MOVE.L	D0,(A1) ;	save control variable's new value
   8704 FFFCC3DC 2238 0618                   	MOVE.L	LOPLMT,D1;	get loop's limit value
   8705 FFFCC3E0 4AB8 0614                   	TST.L	LOPINC
   8706 FFFCC3E4 6A02                        	BPL	NX1	;	branch if loop increment is positive
   8707 FFFCC3E6 C141                        	EXG	D0,D1
   8708 FFFCC3E8                             NX1:
   8709 FFFCC3E8 B280                        	CMP.L	D0,D1;		test against limit
   8710 FFFCC3EA 6D0E                        	BLT	NX2;		branch if outside limit
   8711 FFFCC3EC 21F8 061C 0604              	MOVE.L	LOPLN,CURRNT	;Within limit, go back to the...
   8712 FFFCC3F2 2078 0620                   	MOVE.L	LOPPT,A0	;saved 'CURRNT' and text pointer.
   8713 FFFCC3F6 6000 FEFC                   	BRA	FINISH
   8714 FFFCC3FA                             NX2:
   8715 FFFCC3FA 6100 057C                   	BSR.L	POPA		;purge this loop
   8716 FFFCC3FE 6000 FEF4                   	BRA	FINISH
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** REM *** IF *** INPUT *** LET (& DEFLT) ***
                                             ;*
                                             ;* 'REM' can be followed by anything and is ignored by the
                                             ;* interpreter.
                                             ;*
                                             ;* 'IF' is followed by an expression, as a condition and one or
                                             ;* more commands (including other 'IF's) separated by colons.
                                             ;* Note that the word 'THEN' is not used.  The interpreter evaluates
                                             ;* the expression.  If it is non-zero, execution continues.  If it
                                             ;* is zero, the commands that follow are ignored and execution
                                             ;* continues on the next line.
                                             ;*
                                             ;* 'INPUT' is like the 'PRINT' command, and is followed by a list
                                             ;* of items.  If the item is a string in single or double quotes,
                                             ;* or is an underline (back arrow), it has the same effect as in
                                             ;* 'PRINT'.  If an item is a variable, this variable name is
                                             ;* printed out followed by a colon, then the interpreter waits for
                                             ;* an expression to be typed in.  The variable is then set to the
                                             ;* value of this expression.  If the variable is preceeded by a
                                             ;* string (again in single or double quotes), the string will be
                                             ;* displayed followed by a colon.  The interpreter the waits for an
                                             ;* expression to be entered and sets the variable equal to the
                                             ;* expression's value.  If the input expression is invalid, the
                                             ;* interpreter will print "What?", "How?", or "Sorry" and reprint
                                             ;* the prompt and redo the input.  The execution will not terminate
                                             ;* unless you press control-C.  This is handled in 'INPERR'.
                                             ;*
                                             ;* 'LET' is followed by a list of items separated by commas.
                                             ;* Each item consists of a variable, an equals sign, and an
                                             ;* expression.  The interpreter evaluates the expression and sets
                                             ;* the variable to that value.  The interpreter will also handle
                                             ;* 'LET' commands without the word 'LET'.  This is done by 'DEFLT'.
                                             ;*
   8754 FFFCC402                             REM:
   8755 FFFCC402 600A                        	BRA	IF2		;skip the rest of the line
                                             
   8757 FFFCC404                             IF:	
   8758 FFFCC404 6100 01BC                   	BSR.L	EXPR	;	evaluate the expression
   8759 FFFCC408                             IF1:
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 98
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8760 FFFCC408 4A80                        	TST.L	D0		;is it zero?
   8761 FFFCC40A 6600 FE32                   	BNE	RUNSML		;if not, continue
   8762 FFFCC40E                             IF2:
   8763 FFFCC40E 2248                        	MOVE.L	A0,A1
   8764 FFFCC410 4281                        	CLR.L	D1
   8765 FFFCC412 6100 054A                   	BSR.L	FNDSKP	;	if so, skip the rest of the line
   8766 FFFCC416 6400 FE1E                   	BCC	RUNTSL		;and run the next line
   8767 FFFCC41A 6000 FC44                   	BRA.L	WSTART	;	if no next line, do a warm start
                                             
   8769 FFFCC41E                             INPERR:
   8770 FFFCC41E 2E78 060C                   	MOVE.L	STKINP,SP;	restore the old stack pointer
   8771 FFFCC422 21DF 0604                   	MOVE.L	(SP)+,CURRNT;	and old 'CURRNT'
   8772 FFFCC426 588F                        	ADDQ.L	#4,SP
   8773 FFFCC428 205F                        	MOVE.L	(SP)+,A0	;and old text pointer
                                             
   8775 FFFCC42A                             INPUT:
   8776 FFFCC42A 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   8777 FFFCC42C 6100 05A6                   	BSR.L	QTSTG		;is next item a string?
   8778 FFFCC430 600A                        	BRA.S	IP2		;nope
   8779 FFFCC432 6100 02A0                   	BSR.L	TSTV	;	yes, but is it followed by a variable?
   8780 FFFCC436 654C                        	BCS	IP4		;if not, branch
   8781 FFFCC438 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   8782 FFFCC43A 601A                        	BRA	IP3		;if so, input to variable
   8783 FFFCC43C                             IP2:
   8784 FFFCC43C 2F08                        	MOVE.L	A0,-(SP);	save for 'PRTSTG'
   8785 FFFCC43E 6100 0294                   	BSR.L	TSTV	;	must be a variable now
   8786 FFFCC442 6500 03FA                   	BCS.L	QWHAT	;	"What?" it isn't?
   8787 FFFCC446 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   8788 FFFCC448 1410                        	MOVE.B	(A0),D2 ;	get ready for 'PRTSTG'
   8789 FFFCC44A 4200                        	CLR.B	D0
   8790 FFFCC44C 1080                        	MOVE.B	D0,(A0)
   8791 FFFCC44E 225F                        	MOVE.L	(SP)+,A1
   8792 FFFCC450 6100 0566                   	BSR.L	PRTSTG	;	print string as prompt
   8793 FFFCC454 1082                        	MOVE.B	D2,(A0) ;	restore text
   8794 FFFCC456                             IP3:
   8795 FFFCC456 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   8796 FFFCC458 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;also save 'CURRNT'
   8797 FFFCC45C 21FC FFFF FFFF 0604         	MOVE.L	#-1,CURRNT	;flag that we are in INPUT
   8798 FFFCC464 21CF 060C                   	MOVE.L	SP,STKINP	;save the stack pointer too
   8799 FFFCC468 2F0A                        	MOVE.L	A2,-(SP)	;save the variable address
   8800 FFFCC46A 103C 003A                   	MOVE.B	#':',D0     ;    print a colon first
   8801 FFFCC46E 6100 0424                   	BSR.L	GETLN		;then get an input line
   8802 FFFCC472 41F8 0630                   	LEA	BUFFER,A0	;point to the buffer
   8803 FFFCC476 6100 014A                   	BSR.L	EXPR	;	evaluate the input
   8804 FFFCC47A 245F                        	MOVE.L	(SP)+,A2	;restore the variable address
   8805 FFFCC47C 2480                        	MOVE.L	D0,(A2) 	;save value in variable
   8806 FFFCC47E 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;restore old 'CURRNT'
   8807 FFFCC482 205F                        	MOVE.L	(SP)+,A0;	and the old text pointer
   8808 FFFCC484                             IP4:
   8809 FFFCC484 588F                        	ADDQ.L	#4,SP	;	clean up the stack
   8810 FFFCC486 6100 061C                   	BSR.L	TSTC	;	is the next thing a comma?
   8811 FFFCC48A 2C 03                       	DC.B	',',IP5-$
   8812 FFFCC48C 609C                        	BRA	INPUT	;	yes, more items
   8813 FFFCC48E                             IP5:
   8814 FFFCC48E 6000 FE64                   	BRA	FINISH
                                             
   8816 FFFCC492                             DEFLT:
   8817 FFFCC492 0C10 000D                   	CMP.B	#CR,(A0);	empty line is OK
   8818 FFFCC496 670C                        	BEQ	LT1		;else it is 'LET'
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 99
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8820 FFFCC498                             LET:
   8821 FFFCC498 6100 0364                   	BSR.L	SETVAL		;do the assignment
   8822 FFFCC49C 6100 0606                   	BSR.L	TSTC		;check for more 'LET' items
   8823 FFFCC4A0 2C 03                       	DC.B	',',LT1-$
   8824 FFFCC4A2 60F4                        	BRA	LET
   8825 FFFCC4A4                             LT1:
   8826 FFFCC4A4 6000 FE4E                   	BRA	FINISH		;until we are finished.
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LOAD *** & SAVE ***
                                             ;*
                                             ;* These two commands transfer a program to/from an auxiliary
                                             ;* device such as a cassette, another computer, etc.  The program
                                             ;* is converted to an easily-stored format: each line starts with
                                             ;* a colon, the line no. as 4 hex digits, and the rest of the line.
                                             ;* At the end, a line starting with an '@' sign is sent.  This
                                             ;* format can be read back with a minimum of processing time by
                                             ;* the 68000.
                                             ;*
   8841 FFFCC4A8                             LOAD:
   8842 FFFCC4A8 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to start of prog. area
   8843 FFFCC4AE 103C 000D                   	MOVE.B	#CR,D0		;For a CP/M host, tell it we're ready...
   8844 FFFCC4B2 6100 FB5C                   	BSR	GOAUXO		;by sending a CR to finish PIP command.
   8845 FFFCC4B6                             LOD1:
   8846 FFFCC4B6 6100 FB5C                   	BSR	GOAUXI	;	look for start of line
   8847 FFFCC4BA 67FA                        	BEQ	LOD1
   8848 FFFCC4BC B03C 0040                   	CMP.B	#'@',D0  ;       end of program?
   8849 FFFCC4C0 6722                        	BEQ	LODEND
   8850 FFFCC4C2 B03C 003A                   	CMP.B	#':',D0   ;      if not, is it start of line?
   8851 FFFCC4C6 66EE                        	BNE	LOD1		;if not, wait for it
   8852 FFFCC4C8 6100 0022                   	BSR	GBYTE		;get first byte of line no.
   8853 FFFCC4CC 10C1                        	MOVE.B	D1,(A0)+	;store it
   8854 FFFCC4CE 6100 001C                   	BSR	GBYTE		;get 2nd bye of line no.
   8855 FFFCC4D2 10C1                        	MOVE.B	D1,(A0)+;	store that, too
   8856 FFFCC4D4                             LOD2:
   8857 FFFCC4D4 6100 FB3E                   	BSR	GOAUXI	;	get another text char.
   8858 FFFCC4D8 67FA                        	BEQ	LOD2
   8859 FFFCC4DA 10C0                        	MOVE.B	D0,(A0)+	;store it
   8860 FFFCC4DC B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   8861 FFFCC4E0 66F2                        	BNE	LOD2		;if not, go back for more
   8862 FFFCC4E2 60D2                        	BRA	LOD1		;if so, start a new line
   8863 FFFCC4E4                             LODEND:
   8864 FFFCC4E4 21C8 0624                   	MOVE.L	A0,TXTUNF	;set end-of program pointer
   8865 FFFCC4E8 6000 FB76                   	BRA	WSTART		;back to direct mode
                                             
   8867 FFFCC4EC                             GBYTE:
   8868 FFFCC4EC 7401                        	MOVEQ	#1,D2;		get two hex characters from auxiliary
   8869 FFFCC4EE 4281                        	CLR	D1		;and store them as a byte in D1
   8870 FFFCC4F0                             GBYTE1:
   8871 FFFCC4F0 6100 FB22                   	BSR	GOAUXI	;	get a char.
   8872 FFFCC4F4 67FA                        	BEQ	GBYTE1
   8873 FFFCC4F6 B03C 0041                   	CMP.B	#'A',D0
   8874 FFFCC4FA 6502                        	BCS	GBYTE2
   8875 FFFCC4FC 5F00                        	SUBQ.B	#7,D0	;	if greater than 9, adjust
   8876 FFFCC4FE                             GBYTE2:
   8877 FFFCC4FE 0200 000F                   	AND.B	#0xF,D0		;strip ASCII
   8878 FFFCC502 E909                        	LSL.B	#4,D1		;put nybble into the result
   8879 FFFCC504 8200                        	OR.B	D0,D1
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 100
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8880 FFFCC506 51CA FFE8                   	DBRA	D2,GBYTE1	;get another char.
   8881 FFFCC50A 4E75                        	RTS
                                             
   8883 FFFCC50C                             SAVE:
   8884 FFFCC50C 2079 FFFC C01C              	MOVE.L	TXTBGN,A0;	set pointer to start of prog. area
   8885 FFFCC512 2278 0624                   	MOVE.L	TXTUNF,A1	;set pointer to end of prog. area
   8886 FFFCC516                             SAVE1:
   8887 FFFCC516 103C 000D                   	MOVE.B	#CR,D0	;	send out a CR & LF (CP/M likes this)
   8888 FFFCC51A 6100 FAF4                   	BSR	GOAUXO
   8889 FFFCC51E 103C 000A                   	MOVE.B	#LF,D0
   8890 FFFCC522 6100 FAEC                   	BSR	GOAUXO
   8891 FFFCC526 B3C8                        	CMP.L	A0,A1		;are we finished?
   8892 FFFCC528 6322                        	BLS	SAVEND
   8893 FFFCC52A 103C 003A                   	MOVE.B	#':',D0      ;   if not, start a line
   8894 FFFCC52E 6100 FAE0                   	BSR	GOAUXO
   8895 FFFCC532 1218                        	MOVE.B	(A0)+,D1	;send first half of line no.
   8896 FFFCC534 6100 003A                   	BSR	PBYTE
   8897 FFFCC538 1218                        	MOVE.B	(A0)+,D1	;and send 2nd half
   8898 FFFCC53A 6100 0034                   	BSR	PBYTE
   8899 FFFCC53E                             SAVE2:
   8900 FFFCC53E 1018                        	MOVE.B	(A0)+,D0;	get a text char.
   8901 FFFCC540 B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   8902 FFFCC544 67D0                        	BEQ	SAVE1		;if so, send CR & LF and start new line
   8903 FFFCC546 6100 FAC8                   	BSR	GOAUXO		;send it out
   8904 FFFCC54A 60F2                        	BRA	SAVE2		;go back for more text
   8905 FFFCC54C                             SAVEND:
   8906 FFFCC54C 103C 0040                   	MOVE.B	#'@',D0 ;        send end-of-program indicator
   8907 FFFCC550 6100 FABE                   	BSR	GOAUXO
   8908 FFFCC554 103C 000D                   	MOVE.B	#CR,D0	;	followed by a CR & LF
   8909 FFFCC558 6100 FAB6                   	BSR	GOAUXO
   8910 FFFCC55C 103C 000A                   	MOVE.B	#LF,D0
   8911 FFFCC560 6100 FAAE                   	BSR	GOAUXO
   8912 FFFCC564 103C 001A                   	MOVE.B	#0x1A,D0 	;and a control-Z to end the CP/M file
   8913 FFFCC568 6100 FAA6                   	BSR	GOAUXO
   8914 FFFCC56C 6000 FAF2                   	BRA	WSTART		;then go do a warm start
                                             
   8916 FFFCC570                             PBYTE:
   8917 FFFCC570 7401                        	MOVEQ	#1,D2	;	send two hex characters from D1's low byte
   8918 FFFCC572                             PBYTE1:
   8919 FFFCC572 E919                        	ROL.B	#4,D1	;	get the next nybble
   8920 FFFCC574 1001                        	MOVE.B	D1,D0
   8921 FFFCC576 0200 000F                   	AND.B	#0xF,D0	;	strip off garbage
   8922 FFFCC57A 0600 0030                   	ADD.B	#'0',D0   ;      make it into ASCII
   8923 FFFCC57E B03C 0039                   	CMP.B	#'9',D0
   8924 FFFCC582 6302                        	BLS	PBYTE2
   8925 FFFCC584 5E00                        	ADDQ.B	#7,D0		;adjust if greater than 9
   8926 FFFCC586                             PBYTE2:
   8927 FFFCC586 6100 FA88                   	BSR	GOAUXO		;send it out
   8928 FFFCC58A 51CA FFE6                   	DBRA	D2,PBYTE1	;then send the next nybble
   8929 FFFCC58E 4E75                        	RTS
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** POKE *** & CALL ***
                                             ;*
                                             ;* 'POKE expr1,expr2' stores the byte from 'expr2' into the memory
                                             ;* address specified by 'expr1'.
                                             ;*
                                             ;* 'CALL expr' jumps to the machine language subroutine whose
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 101
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* starting address is specified by 'expr'.  The subroutine can use
                                             ;* all registers but must leave the stack the way it found it.
                                             ;* The subroutine returns to the interpreter by executing an RTS.
                                             ;*
   8944 FFFCC590                             POKE:
   8945 FFFCC590 6100 0030                   	BSR	EXPR		;get the memory address
   8946 FFFCC594 6100 050E                   	BSR.L	TSTC		;it must be followed by a comma
   8947 FFFCC598 2C 0F                       	DC.B	',',PKER-$
   8948 FFFCC59A 2F00                        	MOVE.L	D0,-(SP)	;save the address
   8949 FFFCC59C 6100 0024                   	BSR	EXPR		;get the byte to be POKE'd
   8950 FFFCC5A0 225F                        	MOVE.L	(SP)+,A1	;get the address back
   8951 FFFCC5A2 1280                        	MOVE.B	D0,(A1) 	;store the byte in memory
   8952 FFFCC5A4 6000 FD4E                   	BRA	FINISH
   8953 FFFCC5A8                             PKER:
   8954 FFFCC5A8 6000 0294                   	BRA.L	QWHAT	;	if no comma, say "What?"
                                             
   8956 FFFCC5AC                             CALL:
   8957 FFFCC5AC 6100 0014                   	BSR	EXPR		;get the subroutine's address
   8958 FFFCC5B0 4A80                        	TST.L	D0		;make sure we got a valid address
   8959 FFFCC5B2 6700 02D6                   	BEQ.L	QHOW	;	if not, say "How?"
   8960 FFFCC5B6 2F08                        	MOVE.L	A0,-(SP);	save the text pointer
   8961 FFFCC5B8 2240                        	MOVE.L	D0,A1
   8962 FFFCC5BA 4E91                        	JSR	(A1)		;jump to the subroutine
   8963 FFFCC5BC 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   8964 FFFCC5BE 6000 FD34                   	BRA	FINISH
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** EXPR ***
                                             ;*
                                             ;* 'EXPR' evaluates arithmetical or logical expressions.
                                             ;* <EXPR>::=<EXPR2>
                                             ;*	   <EXPR2><rel.op.><EXPR2>
                                             ;* where <rel.op.> is one of the operators in TAB8 and the result
                                             ;* of these operations is 1 if true and 0 if false.
                                             ;* <EXPR2>::=(+ or -)<EXPR3>(+ or -)<EXPR3>(...
                                             ;* where () are optional and (... are optional repeats.
                                             ;* <EXPR3>::=<EXPR4>( <* or /><EXPR4> )(...
                                             ;* <EXPR4>::=<variable>
                                             ;*	    <function>
                                             ;*	    (<EXPR>)
                                             ;* <EXPR> is recursive so that the variable '@' can have an <EXPR>
                                             ;* as an index, functions can have an <EXPR> as arguments, and
                                             ;* <EXPR4> can be an <EXPR> in parenthesis.
                                             ;*
   8985 FFFCC5C2                             EXPR:
   8986 FFFCC5C2 6100 0066                   	BSR	EXPR2
   8987 FFFCC5C6 2F00                        	MOVE.L	D0,-(SP);	save <EXPR2> value
   8988 FFFCC5C8 43F9 FFFC C163              	LEA	TAB8,A1 	;look up a relational operator
   8989 FFFCC5CE 45F9 FFFC C1A8              	LEA	TAB8_1,A2
   8990 FFFCC5D4 6000 FBEC                   	BRA	EXEC		;go do it
                                             
   8992 FFFCC5D8                             XP11:
   8993 FFFCC5D8 6100 003E                   	BSR	XP18	;	is it ">="?
   8994 FFFCC5DC 6D2E                        	BLT	XPRT0		;no, return D0=0
   8995 FFFCC5DE 6030                        	BRA	XPRT1		;else return D0=1
                                             
   8997 FFFCC5E0                             XP12:
   8998 FFFCC5E0 6100 0036                   	BSR	XP18	;	is it "<>"?
   8999 FFFCC5E4 6726                        	BEQ	XPRT0		;no, return D0=0
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 102
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9000 FFFCC5E6 6028                        	BRA	XPRT1		;else return D0=1
                                             
   9002 FFFCC5E8                             XP13:
   9003 FFFCC5E8 6100 002E                   	BSR	XP18	;	is it ">"?
   9004 FFFCC5EC 6F1E                        	BLE	XPRT0		;no, return D0=0
   9005 FFFCC5EE 6020                        	BRA	XPRT1		;else return D0=1
                                             
   9007 FFFCC5F0                             XP14:
   9008 FFFCC5F0 6100 0026                   	BSR	XP18	;	is it "<="?
   9009 FFFCC5F4 6E16                        	BGT	XPRT0		;no, return D0=0
   9010 FFFCC5F6 6018                        	BRA	XPRT1		;else return D0=1
                                             
   9012 FFFCC5F8                             XP15:
   9013 FFFCC5F8 6100 001E                   	BSR	XP18	;	is it "="?
   9014 FFFCC5FC 660E                        	BNE	XPRT0		;if not, return D0=0
   9015 FFFCC5FE 6010                        	BRA	XPRT1		;else return D0=1
   9016 FFFCC600                             XP15RT:
   9017 FFFCC600 4E75                        	RTS
                                             
   9019 FFFCC602                             XP16:
   9020 FFFCC602 6100 0014                   	BSR	XP18	;	is it "<"?
   9021 FFFCC606 6C04                        	BGE	XPRT0		;if not, return D0=0
   9022 FFFCC608 6006                        	BRA	XPRT1		;else return D0=1
   9023 FFFCC60A                             XP16RT:
   9024 FFFCC60A 4E75                        	RTS
                                             
   9026 FFFCC60C                             XPRT0:
   9027 FFFCC60C 4280                        	CLR.L	D0	;	return D0=0 (false)
   9028 FFFCC60E 4E75                        	RTS
                                             
   9030 FFFCC610                             XPRT1:
   9031 FFFCC610 7001                        	MOVEQ	#1,D0;		return D0=1 (true)
   9032 FFFCC612 4E75                        	RTS
                                             
   9034 FFFCC614                             XP17:
   9035 FFFCC614 201F                        	MOVE.L	(SP)+,D0	;it's not a rel. operator
   9036 FFFCC616 4E75                        	RTS			;return D0=<EXPR2>
                                             
   9038 FFFCC618                             XP18:
   9039 FFFCC618 201F                        	MOVE.L	(SP)+,D0	;reverse the top two stack items
   9040 FFFCC61A 221F                        	MOVE.L	(SP)+,D1
   9041 FFFCC61C 2F00                        	MOVE.L	D0,-(SP)
   9042 FFFCC61E 2F01                        	MOVE.L	D1,-(SP)
   9043 FFFCC620 6100 0008                   	BSR	EXPR2		;do second <EXPR2>
   9044 FFFCC624 221F                        	MOVE.L	(SP)+,D1
   9045 FFFCC626 B280                        	CMP.L	D0,D1	;	compare with the first result
   9046 FFFCC628 4E75                        	RTS			;return the result
                                             
   9048 FFFCC62A                             EXPR2:
   9049 FFFCC62A 6100 0478                   	BSR.L	TSTC		;negative sign?
   9050 FFFCC62E 2D 05                       	DC.B	'-',XP21-$
   9051 FFFCC630 4280                        	CLR.L	D0	;	yes, fake '0-'
   9052 FFFCC632 6026                        	BRA	XP26
   9053 FFFCC634                             XP21:
   9054 FFFCC634 6100 046E                   	BSR.L	TSTC	;	positive sign? ignore it
   9055 FFFCC638 2B 01                       	DC.B	'+',XP22-$
   9056 FFFCC63A                             XP22:
   9057 FFFCC63A 6100 002C                   	BSR	EXPR3		;first <EXPR3>
   9058 FFFCC63E                             XP23:
   9059 FFFCC63E 6100 0464                   	BSR.L	TSTC	;	add?
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 103
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9060 FFFCC642 2B 11                       	DC.B	'+',XP25-$
   9061 FFFCC644 2F00                        	MOVE.L	D0,-(SP)	;yes, save the value
   9062 FFFCC646 6100 0020                   	BSR	EXPR3		;get the second <EXPR3>
   9063 FFFCC64A                             XP24:
   9064 FFFCC64A 221F                        	MOVE.L	(SP)+,D1
   9065 FFFCC64C D081                        	ADD.L	D1,D0	;	add it to the first <EXPR3>
   9066 FFFCC64E 6900 023A                   	BVS.L	QHOW	;	branch if there's an overflow
   9067 FFFCC652 60EA                        	BRA	XP23	;	else go back for more operations
   9068 FFFCC654                             XP25:
   9069 FFFCC654 6100 044E                   	BSR.L	TSTC		;subtract?
   9070 FFFCC658 2D 75                       	DC.B	'-',XP42-$
   9071 FFFCC65A                             XP26:
   9072 FFFCC65A 2F00                        	MOVE.L	D0,-(SP)	;yes, save the result of 1st <EXPR3>
   9073 FFFCC65C 6100 000A                   	BSR	EXPR3		;get second <EXPR3>
   9074 FFFCC660 4480                        	NEG.L	D0		;change its sign
   9075 FFFCC662 4EF9 FFFC C64A              	JMP	XP24		;and do an addition
                                             
   9077 FFFCC668                             EXPR3:
   9078 FFFCC668 6100 002C                   	BSR	EXPR4		;get first <EXPR4>
   9079 FFFCC66C                             XP31:
   9080 FFFCC66C 6100 0436                   	BSR.L	TSTC	;	multiply?
   9081 FFFCC670 2A 0F                       	DC.B	'*',XP34-$
   9082 FFFCC672 2F00                        	MOVE.L	D0,-(SP);	yes, save that first result
   9083 FFFCC674 6100 0020                   	BSR	EXPR4		;get second <EXPR4>
   9084 FFFCC678 221F                        	MOVE.L	(SP)+,D1
   9085 FFFCC67A 6100 00A8                   	BSR.L	MULT32	;	multiply the two
   9086 FFFCC67E 60EC                        	BRA	XP31		;then look for more terms
   9087 FFFCC680                             XP34:
   9088 FFFCC680 6100 0422                   	BSR.L	TSTC;		divide?
   9089 FFFCC684 2F 49                       	DC.B	'/',XP42-$
   9090 FFFCC686 2F00                        	MOVE.L	D0,-(SP);	save result of 1st <EXPR4>
   9091 FFFCC688 6100 000C                   	BSR	EXPR4		;get second <EXPR4>
   9092 FFFCC68C 221F                        	MOVE.L	(SP)+,D1
   9093 FFFCC68E C141                        	EXG	D0,D1
   9094 FFFCC690 6100 00D4                   	BSR.L	DIV32	;	do the division
   9095 FFFCC694 60D6                        	BRA	XP31		;go back for any more terms
                                             
   9097 FFFCC696                             EXPR4:
   9098 FFFCC696 43F9 FFFC C14C              	LEA	TAB4,A1 ;	find possible function
   9099 FFFCC69C 45F9 FFFC C196              	LEA	TAB4_1,A2
   9100 FFFCC6A2 6000 FB1E                   	BRA	EXEC
   9101 FFFCC6A6                             XP40:
   9102 FFFCC6A6 6100 002C                   	BSR	TSTV	;	nope, not a function
   9103 FFFCC6AA 6508                        	BCS	XP41		;nor a variable
   9104 FFFCC6AC 2240                        	MOVE.L	D0,A1
   9105 FFFCC6AE 4280                        	CLR.L	D0
   9106 FFFCC6B0 2011                        	MOVE.L	(A1),D0 ;	if a variable, return its value in D0
   9107 FFFCC6B2                             EXP4RT:
   9108 FFFCC6B2 4E75                        	RTS
   9109 FFFCC6B4                             XP41:
   9110 FFFCC6B4 6100 0408                   	BSR.L	TSTNUM	;	or is it a number?
   9111 FFFCC6B8 2001                        	MOVE.L	D1,D0
   9112 FFFCC6BA 4A82                        	TST	D2		;(if not, # of digits will be zero)
   9113 FFFCC6BC 66F4                        	BNE	EXP4RT	;	if so, return it in D0
   9114 FFFCC6BE                             PARN:
   9115 FFFCC6BE 6100 03E4                   	BSR.L	TSTC	;	else look for ( EXPR )
   9116 FFFCC6C2 28 0D                       	DC.B	'(',XP43-$
   9117 FFFCC6C4 6100 FEFC                   	BSR	EXPR
   9118 FFFCC6C8 6100 03DA                   	BSR.L	TSTC
   9119 FFFCC6CC 29 03                       	DC.B	')',XP43-$
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 104
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9120 FFFCC6CE                             XP42:
   9121 FFFCC6CE 4E75                        	RTS
   9122 FFFCC6D0                             XP43:
   9123 FFFCC6D0 6000 016C                   	BRA.L	QWHAT	;	else say "What?"
                                             
                                             ;*
                                             ;* ===== Test for a valid variable name.  Returns Carry=1 if not
                                             ;*	found, else returns Carry=0 and the address of the
                                             ;*	variable in D0.
                                             
   9130 FFFCC6D4                             TSTV:
   9131 FFFCC6D4 6100 0420                   	BSR.L	IGNBLK
   9132 FFFCC6D8 4280                        	CLR.L	D0
   9133 FFFCC6DA 1010                        	MOVE.B	(A0),D0 ;	look at the program text
   9134 FFFCC6DC 0400 0040                   	SUB.B	#'@',D0
   9135 FFFCC6E0 6540                        	BCS	TSTVRT	;	C=1: not a variable
   9136 FFFCC6E2 6628                        	BNE	TV1		;branch if not "@" array
   9137 FFFCC6E4 5288                        	ADDQ	#1,A0	;	If it is, it should be
   9138 FFFCC6E6 6100 FFD6                   	BSR	PARN		;followed by (EXPR) as its index.
   9139 FFFCC6EA D080                        	ADD.L	D0,D0
   9140 FFFCC6EC 6500 019C                   	BCS.L	QHOW	;	say "How?" if index is too big
   9141 FFFCC6F0 D080                        	ADD.L	D0,D0
   9142 FFFCC6F2 6500 0196                   	BCS.L	QHOW
   9143 FFFCC6F6 2F00                        	MOVE.L	D0,-(SP)	;save the index
   9144 FFFCC6F8 6100 00FA                   	BSR.L	SIZE_		;get amount of free memory
   9145 FFFCC6FC 221F                        	MOVE.L	(SP)+,D1	;get back the index
   9146 FFFCC6FE B081                        	CMP.L	D1,D0		;see if there's enough memory
   9147 FFFCC700 6300 017E                   	BLS.L	QSORRY		;if not, say "Sorry"
   9148 FFFCC704 2038 0628                   	MOVE.L	VARBGN,D0	;put address of array element...
   9149 FFFCC708 9081                        	SUB.L	D1,D0		;into D0
   9150 FFFCC70A 4E75                        	RTS
   9151 FFFCC70C                             TV1:
   9152 FFFCC70C B03C 001B                   	CMP.B	#27,D0		;if not @, is it A through Z?
   9153 FFFCC710 0A3C 0001                   	EOR	#1,CCR
   9154 FFFCC714 650C                        	BCS	TSTVRT		;if not, set Carry and return
   9155 FFFCC716 5288                        	ADDQ	#1,A0	;	else bump the text pointer
   9156 FFFCC718 D080                        	ADD	D0,D0		;compute the variable's address
   9157 FFFCC71A D080                        	ADD	D0,D0
   9158 FFFCC71C 2238 0628                   	MOVE.L	VARBGN,D1
   9159 FFFCC720 D081                        	ADD	D1,D0		;and return it in D0 with Carry=0
   9160 FFFCC722                             TSTVRT:
   9161 FFFCC722 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Multiplies the 32 bit values in D0 and D1, returning
                                             ;*	the 32 bit result in D0.
                                             ;*
   9167 FFFCC724                             MULT32:
   9168 FFFCC724 2801                        	MOVE.L	D1,D4
   9169 FFFCC726 B184                        	EOR.L	D0,D4	;	see if the signs are the same
   9170 FFFCC728 4A80                        	TST.L	D0		;take absolute value of D0
   9171 FFFCC72A 6A02                        	BPL	MLT1
   9172 FFFCC72C 4480                        	NEG.L	D0
   9173 FFFCC72E                             MLT1:
   9174 FFFCC72E 4A81                        	TST.L	D1	;	take absolute value of D1
   9175 FFFCC730 6A02                        	BPL	MLT2
   9176 FFFCC732 4481                        	NEG.L	D1
   9177 FFFCC734                             MLT2:
   9178 FFFCC734 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;is second argument <= 16 bits?
   9179 FFFCC73A 630C                        	BLS	MLT3	;	OK, let it through
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 105
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9180 FFFCC73C C141                        	EXG	D0,D1	;	else swap the two arguments
   9181 FFFCC73E B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;and check 2nd argument again
   9182 FFFCC744 6200 0144                   	BHI.L	QHOW		;one of them MUST be 16 bits
   9183 FFFCC748                             MLT3:
   9184 FFFCC748 2400                        	MOVE	D0,D2	;	prepare for 32 bit X 16 bit multiply
   9185 FFFCC74A C4C1                        	MULU	D1,D2		;multiply low word
   9186 FFFCC74C 4840                        	SWAP	D0
   9187 FFFCC74E C0C1                        	MULU	D1,D0		;multiply high word
   9188 FFFCC750 4840                        	SWAP	D0
                                             ;*** Rick Murray's bug correction follows:
   9190 FFFCC752 4A80                        	TST	D0		;if lower word not 0, then overflow
   9191 FFFCC754 6600 0134                   	BNE.L	QHOW	;	if overflow, say "How?"
   9192 FFFCC758 D082                        	ADD.L	D2,D0	;	D0 now holds the product
   9193 FFFCC75A 6B00 012E                   	BMI.L	QHOW	;	if sign bit set, it's an overflow
   9194 FFFCC75E 4A84                        	TST.L	D4		;were the signs the same?
   9195 FFFCC760 6A02                        	BPL	MLTRET
   9196 FFFCC762 4480                        	NEG.L	D0		;if not, make the result negative
   9197 FFFCC764                             MLTRET:
   9198 FFFCC764 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Divide the 32 bit value in D0 by the 32 bit value in D1.
                                             ;*	Returns the 32 bit quotient in D0, remainder in D1.
                                             ;*
   9204 FFFCC766                             DIV32:
   9205 FFFCC766 4A81                        	TST.L	D1		;check for divide-by-zero
   9206 FFFCC768 6700 0120                   	BEQ.L	QHOW		;if so, say "How?"
   9207 FFFCC76C 2401                        	MOVE.L	D1,D2
   9208 FFFCC76E 2801                        	MOVE.L	D1,D4
   9209 FFFCC770 B184                        	EOR.L	D0,D4		;see if the signs are the same
   9210 FFFCC772 4A80                        	TST.L	D0		;take absolute value of D0
   9211 FFFCC774 6A02                        	BPL	DIV1
   9212 FFFCC776 4480                        	NEG.L	D0
   9213 FFFCC778                             DIV1:
   9214 FFFCC778 4A81                        	TST.L	D1	;	take absolute value of D1
   9215 FFFCC77A 6A02                        	BPL	DIV2
   9216 FFFCC77C 4481                        	NEG.L	D1
   9217 FFFCC77E                             DIV2:
   9218 FFFCC77E 761F                        	MOVEQ	#31,D3	;	iteration count for 32 bits
   9219 FFFCC780 2200                        	MOVE.L	D0,D1
   9220 FFFCC782 4280                        	CLR.L	D0
   9221 FFFCC784                             DIV3:
   9222 FFFCC784 D281                        	ADD.L	D1,D1	;	(This algorithm was translated from
   9223 FFFCC786 D180                        	ADDX.L	D0,D0		;the divide routine in Ron Cain's
   9224 FFFCC788 6708                        	BEQ	DIV4		;Small-C run time library.)
   9225 FFFCC78A B082                        	CMP.L	D2,D0
   9226 FFFCC78C 6B04                        	BMI	DIV4
   9227 FFFCC78E 5281                        	ADDQ.L	#1,D1
   9228 FFFCC790 9082                        	SUB.L	D2,D0
   9229 FFFCC792                             DIV4:
   9230 FFFCC792 51CB FFF0                   	DBRA	D3,DIV3
   9231 FFFCC796 C141                        	EXG	D0,D1	;	put rem. & quot. in proper registers
   9232 FFFCC798 4A84                        	TST.L	D4	;	were the signs the same?
   9233 FFFCC79A 6A04                        	BPL	DIVRT
   9234 FFFCC79C 4480                        	NEG.L	D0	;	if not, results are negative
   9235 FFFCC79E 4481                        	NEG.L	D1
   9236 FFFCC7A0                             DIVRT:
   9237 FFFCC7A0 4E75                        	RTS
                                             
                                             ;*
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 106
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* ===== The PEEK function returns the byte stored at the address
                                             ;*	contained in the following expression.
                                             ;*
   9243 FFFCC7A2                             PEEK:
   9244 FFFCC7A2 6100 FF1A                   	BSR	PARN	;	get the memory address
   9245 FFFCC7A6 2240                        	MOVE.L	D0,A1
   9246 FFFCC7A8 4280                        	CLR.L	D0		;upper 3 bytes will be zero
   9247 FFFCC7AA 1011                        	MOVE.B	(A1),D0 ;	get the addressed byte
   9248 FFFCC7AC 4E75                        	RTS			;and return it
                                             
                                             ;*
                                             ;* ===== The RND function returns a random number from 1 to
                                             ;*	the value of the following expression in D0.
                                             ;*
   9254 FFFCC7AE                             RND:
   9255 FFFCC7AE 6100 FF0E                   	BSR	PARN	;	get the upper limit
   9256 FFFCC7B2 4A80                        	TST.L	D0	;	it must be positive and non-zero
   9257 FFFCC7B4 6700 00D4                   	BEQ.L	QHOW
   9258 FFFCC7B8 6B00 00D0                   	BMI.L	QHOW
   9259 FFFCC7BC 2200                        	MOVE.L	D0,D1
   9260 FFFCC7BE 2278 0600                   	MOVE.L	RANPNT,A1	;get memory as a random number
   9261 FFFCC7C2 B3FC FFFC CC5D              	CMP.L	#LSTROM,A1
   9262 FFFCC7C8 6506                        	BCS	RA1
   9263 FFFCC7CA 43F9 FFFC C000              	LEA	START,A1	;wrap around if end of program
   9264 FFFCC7D0                             RA1:
   9265 FFFCC7D0 2019                        	MOVE.L	(A1)+,D0;	get the slightly random number
   9266 FFFCC7D2 0880 001F                   	BCLR	#31,D0	;	make sure it's positive
   9267 FFFCC7D6 21C9 0600                   	MOVE.L	A1,RANPNT	;(even I can do better than this!)
   9268 FFFCC7DA 6100 FF8A                   	BSR	DIV32		;RND(n)=MOD(number,n)+1
   9269 FFFCC7DE 2001                        	MOVE.L	D1,D0	;	MOD is the remainder of the div.
   9270 FFFCC7E0 5280                        	ADDQ.L	#1,D0
   9271 FFFCC7E2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The ABS function returns an absolute value in D0.
                                             ;*
   9276 FFFCC7E4                             ABS:
   9277 FFFCC7E4 6100 FED8                   	BSR	PARN		;get the following expr.'s value
   9278 FFFCC7E8 4A80                        	TST.L	D0
   9279 FFFCC7EA 6A06                        	BPL	ABSRT
   9280 FFFCC7EC 4480                        	NEG.L	D0		;if negative, complement it
   9281 FFFCC7EE 6B00 009A                   	BMI.L	QHOW	;	if still negative, it was too big
   9282 FFFCC7F2                             ABSRT:
   9283 FFFCC7F2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The SIZE function returns the size of free memory in D0.
                                             ;*
   9288 FFFCC7F4                             SIZE_:
   9289 FFFCC7F4 2038 0628                   	MOVE.L	VARBGN,D0	;get the number of free bytes...
   9290 FFFCC7F8 90B8 0624                   	SUB.L	TXTUNF,D0	;between 'TXTUNF' and 'VARBGN'
   9291 FFFCC7FC 4E75                        	RTS			;return the number in D0
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** SETVAL *** FIN *** ENDCHK *** ERROR (& friends) ***
                                             ;*
                                             ;* 'SETVAL' expects a variable, followed by an equal sign and then
                                             ;* an expression.  It evaluates the expression and sets the variable
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 107
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* to that value.
                                             ;*
                                             ;* 'FIN' checks the end of a command.  If it ended with ":",
                                             ;* execution continues.	If it ended with a CR, it finds the
                                             ;* the next line and continues from there.
                                             ;*
                                             ;* 'ENDCHK' checks if a command is ended with a CR. This is
                                             ;* required in certain commands, such as GOTO, RETURN, STOP, etc.
                                             ;*
                                             ;* 'ERROR' prints the string pointed to by A0. It then prints the
                                             ;* line pointed to by CURRNT with a "?" inserted at where the
                                             ;* old text pointer (should be on top of the stack) points to.
                                             ;* Execution of Tiny BASIC is stopped and a warm start is done.
                                             ;* If CURRNT is zero (indicating a direct command), the direct
                                             ;* command is not printed. If CURRNT is -1 (indicating
                                             ;* 'INPUT' command in progress), the input line is not printed
                                             ;* and execution is not terminated but continues at 'INPERR'.
                                             ;*
                                             ;* Related to 'ERROR' are the following:
                                             ;* 'QWHAT' saves text pointer on stack and gets "What?" message.
                                             ;* 'AWHAT' just gets the "What?" message and jumps to 'ERROR'.
                                             ;* 'QSORRY' and 'ASORRY' do the same kind of thing.
                                             ;* 'QHOW' and 'AHOW' also do this for "How?".
                                             ;*
   9324 FFFCC7FE                             SETVAL:
   9325 FFFCC7FE 6100 FED4                   	BSR	TSTV	;	variable name?
   9326 FFFCC802 653A                        	BCS	QWHAT		;if not, say "What?"
   9327 FFFCC804 2F00                        	MOVE.L	D0,-(SP);	save the variable's address
   9328 FFFCC806 6100 029C                   	BSR.L	TSTC	;	get past the "=" sign
   9329 FFFCC80A 3D 0B                       	DC.B	'=',SV1-$
   9330 FFFCC80C 6100 FDB4                   	BSR	EXPR	;	evaluate the expression
   9331 FFFCC810 2C5F                        	MOVE.L	(SP)+,A6
   9332 FFFCC812 2C80                        	MOVE.L	D0,(A6) ;	and save its value in the variable
   9333 FFFCC814 4E75                        	RTS
   9334 FFFCC816                             SV1:
   9335 FFFCC816 6026                        	BRA	QWHAT	;	if no "=" sign
                                             
   9337 FFFCC818                             FIN:
   9338 FFFCC818 6100 028A                   	BSR.L	TSTC	;	*** FIN ***
   9339 FFFCC81C 3A 07                       	DC.B	':',FI1-$
   9340 FFFCC81E 588F                        	ADDQ.L	#4,SP	;	if ":", discard return address
   9341 FFFCC820 6000 FA1C                   	BRA	RUNSML	;	continue on the same line
   9342 FFFCC824                             FI1:
   9343 FFFCC824 6100 027E                   	BSR.L	TSTC	;	not ":", is it a CR?
   9344 FFFCC828 0D 07                       	DC.B	CR,FI2-$
   9345 FFFCC82A 588F                        	ADDQ.L	#4,SP	;	yes, purge return address
   9346 FFFCC82C 6000 F9F4                   	BRA	RUNNXL		;execute the next line
   9347 FFFCC830                             FI2:
   9348 FFFCC830 4E75                        	RTS			;else return to the caller
                                             
   9350 FFFCC832                             ENDCHK:
   9351 FFFCC832 6100 02C2                   	BSR.L	IGNBLK
   9352 FFFCC836 0C10 000D                   	CMP.B	#CR,(A0);	does it end with a CR?
   9353 FFFCC83A 6602                        	BNE	QWHAT	;	if not, say "WHAT?"
   9354 FFFCC83C 4E75                        	RTS
                                             
   9356 FFFCC83E                             QWHAT:
   9357 FFFCC83E 2F08                        	MOVE.L	A0,-(SP)
   9358 FFFCC840                             AWHAT:
   9359 FFFCC840 4DF9 FFFC CBDF              	LEA	WHTMSG,A6
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 108
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9360 FFFCC846                             ERROR:
   9361 FFFCC846 6100 031E                   	BSR.L	PRMESG	;	display the error message
   9362 FFFCC84A 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9363 FFFCC84C 2038 0604                   	MOVE.L	CURRNT,D0	;get the current line number
   9364 FFFCC850 6700 F80E                   	BEQ	WSTART		;if zero, do a warm start
   9365 FFFCC854 B0BC FFFF FFFF              	CMP.L	#-1,D0		;is the line no. pointer = -1?
   9366 FFFCC85A 6700 FBC2                   	BEQ	INPERR		;if so, redo input
   9367 FFFCC85E 1F10                        	MOVE.B	(A0),-(SP)	;save the char. pointed to
   9368 FFFCC860 4210                        	CLR.B	(A0)		;put a zero where the error is
   9369 FFFCC862 2278 0604                   	MOVE.L	CURRNT,A1	;point to start of current line
   9370 FFFCC866 6100 0220                   	BSR.L	PRTLN		;display the line in error up to the 0
   9371 FFFCC86A 109F                        	MOVE.B	(SP)+,(A0)	;restore the character
   9372 FFFCC86C 103C 003F                   	MOVE.B	#'?',D0     ;    display a "?"
   9373 FFFCC870 6100 F796                   	BSR	GOOUT
   9374 FFFCC874 4280                        	CLR	D0
   9375 FFFCC876 5389                        	SUBQ.L	#1,A1		;point back to the error char.
   9376 FFFCC878 6100 013E                   	BSR.L	PRTSTG		;display the rest of the line
   9377 FFFCC87C 6000 F7E2                   	BRA	WSTART		;and do a warm start
   9378 FFFCC880                             QSORRY:
   9379 FFFCC880 2F08                        	MOVE.L	A0,-(SP)
   9380 FFFCC882                             ASORRY:
   9381 FFFCC882 4DF9 FFFC CBE7              	LEA	SRYMSG,A6
   9382 FFFCC888 60BC                        	BRA	ERROR
   9383 FFFCC88A                             QHOW:
   9384 FFFCC88A 2F08                        	MOVE.L	A0,-(SP)	;Error: "How?"
   9385 FFFCC88C                             AHOW:
   9386 FFFCC88C 4DF9 FFFC CBD8              	LEA	HOWMSG,A6
   9387 FFFCC892 60B2                        	BRA	ERROR
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GETLN *** FNDLN (& friends) ***
                                             ;*
                                             ;* 'GETLN' reads in input line into 'BUFFER'. It first prompts with
                                             ;* the character in D0 (given by the caller), then it fills the
                                             ;* buffer and echos. It ignores LF's but still echos
                                             ;* them back. Control-H is used to delete the last character
                                             ;* entered (if there is one), and control-X is used to delete the
                                             ;* whole line and start over again. CR signals the end of a line,
                                             ;* and causes 'GETLN' to return.
                                             ;*
                                             ;* 'FNDLN' finds a line with a given line no. (in D1) in the
                                             ;* text save area.  A1 is used as the text pointer. If the line
                                             ;* is found, A1 will point to the beginning of that line
                                             ;* (i.e. the high byte of the line no.), and flags are NC & Z.
                                             ;* If that line is not there and a line with a higher line no.
                                             ;* is found, A1 points there and flags are NC & NZ. If we reached
                                             ;* the end of the text save area and cannot find the line, flags
                                             ;* are C & NZ.
                                             ;* 'FNDLN' will initialize A1 to the beginning of the text save
                                             ;* area to start the search. Some other entries of this routine
                                             ;* will not initialize A1 and do the search.
                                             ;* 'FNDLNP' will start with A1 and search for the line no.
                                             ;* 'FNDNXT' will bump A1 by 2, find a CR and then start search.
                                             ;* 'FNDSKP' uses A1 to find a CR, and then starts the search.
                                             ;*
   9416 FFFCC894                             GETLN:
   9417 FFFCC894 6100 F772                   	BSR	GOOUT		;display the prompt
   9418 FFFCC898 103C 0020                   	MOVE.B	#' ',D0      ;   and a space
   9419 FFFCC89C 6100 F76A                   	BSR	GOOUT
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 109
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9420 FFFCC8A0 41F8 0630                   	LEA	BUFFER,A0;	A0 is the buffer pointer
   9421 FFFCC8A4                             GL1:
   9422 FFFCC8A4 6100 02A8                   	BSR.L	CHKIO;		check keyboard
   9423 FFFCC8A8 67FA                        	BEQ	GL1	;	wait for a char. to come in
   9424 FFFCC8AA B03C 0008                   	CMP.B	#CTRLH,D0	;delete last character?
   9425 FFFCC8AE 6726                        	BEQ	GL3	;	if so
   9426 FFFCC8B0 B03C 0018                   	CMP.B	#CTRLX,D0;	delete the whole line?
   9427 FFFCC8B4 6744                        	BEQ	GL4	;	if so
   9428 FFFCC8B6 B03C 000D                   	CMP.B	#CR,D0	;	accept a CR
   9429 FFFCC8BA 6706                        	BEQ	GL2
   9430 FFFCC8BC B03C 0020                   	CMP.B	#' ',D0  ;       if other control char., discard it
   9431 FFFCC8C0 65E2                        	BCS	GL1
   9432 FFFCC8C2                             GL2:
   9433 FFFCC8C2 10C0                        	MOVE.B	D0,(A0)+;	save the char.
   9434 FFFCC8C4 6100 F742                   	BSR	GOOUT		;echo the char back out
   9435 FFFCC8C8 B03C 000D                   	CMP.B	#CR,D0	;	if it's a CR, end the line
   9436 FFFCC8CC 675C                        	BEQ	GL7
   9437 FFFCC8CE B1FC 0000 067F              	CMP.L	#(BUFFER+BUFLEN-1),A0	;any more room?
   9438 FFFCC8D4 65CE                        	BCS	GL1	;	yes: get some more, else delete last char.
   9439 FFFCC8D6                             GL3:
   9440 FFFCC8D6 103C 0008                   	MOVE.B	#CTRLH,D0	;delete a char. if possible
   9441 FFFCC8DA 6100 F72C                   	BSR	GOOUT
   9442 FFFCC8DE 103C 0020                   	MOVE.B	#' ',D0
   9443 FFFCC8E2 6100 F724                   	BSR	GOOUT
   9444 FFFCC8E6 B1FC 0000 0630              	CMP.L	#BUFFER,A0	;any char.'s left?
   9445 FFFCC8EC 63B6                        	BLS	GL1		;if not
   9446 FFFCC8EE 103C 0008                   	MOVE.B	#CTRLH,D0;	if so, finish the BS-space-BS sequence
   9447 FFFCC8F2 6100 F714                   	BSR	GOOUT
   9448 FFFCC8F6 5388                        	SUBQ.L	#1,A0	;	decrement the text pointer
   9449 FFFCC8F8 60AA                        	BRA	GL1		;back for more
   9450 FFFCC8FA                             GL4:
   9451 FFFCC8FA 2208                        	MOVE.L	A0,D1	;	delete the whole line
   9452 FFFCC8FC 0481 0000 0630              	SUB.L	#BUFFER,D1;	figure out how many backspaces we need
   9453 FFFCC902 671E                        	BEQ	GL6		;if none needed, branch
   9454 FFFCC904 5381                        	SUBQ	#1,D1	;	adjust for DBRA
   9455 FFFCC906                             GL5:
   9456 FFFCC906 103C 0008                   	MOVE.B	#CTRLH,D0	;and display BS-space-BS sequences
   9457 FFFCC90A 6100 F6FC                   	BSR	GOOUT
   9458 FFFCC90E 103C 0020                   	MOVE.B	#' ',D0
   9459 FFFCC912 6100 F6F4                   	BSR	GOOUT
   9460 FFFCC916 103C 0008                   	MOVE.B	#CTRLH,D0
   9461 FFFCC91A 6100 F6EC                   	BSR	GOOUT
   9462 FFFCC91E 51C9 FFE6                   	DBRA	D1,GL5
   9463 FFFCC922                             GL6:
   9464 FFFCC922 41F8 0630                   	LEA	BUFFER,A0	;reinitialize the text pointer
   9465 FFFCC926 6000 FF7C                   	BRA	GL1		;and go back for more
   9466 FFFCC92A                             GL7:
   9467 FFFCC92A 103C 000A                   	MOVE.B	#LF,D0	;	echo a LF for the CR
   9468 FFFCC92E 6100 F6D8                   	BSR	GOOUT
   9469 FFFCC932 4E75                        	RTS
                                             
   9471 FFFCC934                             FNDLN:
   9472 FFFCC934 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;line no. must be < 65535
   9473 FFFCC93A 6400 FF4E                   	BCC	QHOW
   9474 FFFCC93E 2279 FFFC C01C              	MOVE.L	TXTBGN,A1	;init. the text save pointer
                                             
   9476 FFFCC944                             FNDLNP:
   9477 FFFCC944 2478 0624                   	MOVE.L	TXTUNF,A2	;check if we passed the end
   9478 FFFCC948 538A                        	SUBQ.L	#1,A2
   9479 FFFCC94A B5C9                        	CMP	A1,A2
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 110
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9480 FFFCC94C 650C                        	BCS	FNDRET	;	if so, return with Z=0 & C=1
   9481 FFFCC94E 1419                        	MOVE.B	(A1)+,D2	;if not, get a line no.
   9482 FFFCC950 E18A                        	LSL	#8,D2
   9483 FFFCC952 1411                        	MOVE.B	(A1),D2
   9484 FFFCC954 5389                        	SUBQ.L	#1,A1
   9485 FFFCC956 B481                        	CMP	D1,D2		;is this the line we want?
   9486 FFFCC958 6502                        	BCS	FNDNXT		;no, not there yet
   9487 FFFCC95A                             FNDRET:
   9488 FFFCC95A 4E75                        	RTS			;return the cond. codes
                                             
   9490 FFFCC95C                             FNDNXT:
   9491 FFFCC95C 5489                        	ADDQ.L	#2,A1;		find the next line
                                             
   9493 FFFCC95E                             FNDSKP:
   9494 FFFCC95E 0C19 000D                   	CMP.B	#CR,(A1)+	;try to find a CR
   9495 FFFCC962 66FA                        	BNE	FNDSKP		;keep looking
   9496 FFFCC964 60DE                        	BRA	FNDLNP		;check if end of text
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** MVUP *** MVDOWN *** POPA *** PUSHA ***
                                             ;*
                                             ;* 'MVUP' moves a block up from where A1 points to where A2 points
                                             ;* until A1=A3
                                             ;*
                                             ;* 'MVDOWN' moves a block down from where A1 points to where A3
                                             ;* points until A1=A2
                                             ;*
                                             ;* 'POPA' restores the 'FOR' loop variable save area from the stack
                                             ;*
                                             ;* 'PUSHA' stacks for 'FOR' loop variable save area onto the stack
                                             ;*
   9513 FFFCC966                             MVUP:
   9514 FFFCC966 B7C9                        	CMP.L	A1,A3	;	see the above description
   9515 FFFCC968 6704                        	BEQ	MVRET
   9516 FFFCC96A 14D9                        	MOVE.B	(A1)+,(A2)+
   9517 FFFCC96C 60F8                        	BRA	MVUP
   9518 FFFCC96E                             MVRET:
   9519 FFFCC96E 4E75                        	RTS
                                             
   9521 FFFCC970                             MVDOWN:
   9522 FFFCC970 B5C9                        	CMP.L	A1,A2	;	see the above description
   9523 FFFCC972 67FA                        	BEQ	MVRET
   9524 FFFCC974 1721                        	MOVE.B	-(A1),-(A3)
   9525 FFFCC976 60F8                        	BRA	MVDOWN
                                             
   9527 FFFCC978                             POPA:
   9528 FFFCC978 2C5F                        	MOVE.L	(SP)+,A6	;A6 = return address
   9529 FFFCC97A 21DF 0610                   	MOVE.L	(SP)+,LOPVAR	;restore LOPVAR, but zero means no more
   9530 FFFCC97E 6710                        	BEQ	PP1
   9531 FFFCC980 21DF 0614                   	MOVE.L	(SP)+,LOPINC	;if not zero, restore the rest
   9532 FFFCC984 21DF 0618                   	MOVE.L	(SP)+,LOPLMT
   9533 FFFCC988 21DF 061C                   	MOVE.L	(SP)+,LOPLN
   9534 FFFCC98C 21DF 0620                   	MOVE.L	(SP)+,LOPPT
   9535 FFFCC990                             PP1:
   9536 FFFCC990 4ED6                        	JMP	(A6)	;	return
                                             
   9538 FFFCC992                             PUSHA:
   9539 FFFCC992 2238 062C                   	MOVE.L	STKLMT,D1	;Are we running out of stack room?
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 111
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9540 FFFCC996 928F                        	SUB.L	SP,D1
   9541 FFFCC998 6400 FEE6                   	BCC	QSORRY		;if so, say we're sorry
   9542 FFFCC99C 2C5F                        	MOVE.L	(SP)+,A6	;else get the return address
   9543 FFFCC99E 2238 0610                   	MOVE.L	LOPVAR,D1	;save loop variables
   9544 FFFCC9A2 6710                        	BEQ	PU1		;if LOPVAR is zero, that's all
   9545 FFFCC9A4 2F38 0620                   	MOVE.L	LOPPT,-(SP)	;else save all the others
   9546 FFFCC9A8 2F38 061C                   	MOVE.L	LOPLN,-(SP)
   9547 FFFCC9AC 2F38 0618                   	MOVE.L	LOPLMT,-(SP)
   9548 FFFCC9B0 2F38 0614                   	MOVE.L	LOPINC,-(SP)
   9549 FFFCC9B4                             PU1:
   9550 FFFCC9B4 2F01                        	MOVE.L	D1,-(SP)
   9551 FFFCC9B6 4ED6                        	JMP	(A6)		;return
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** PRTSTG *** QTSTG *** PRTNUM *** PRTLN ***
                                             ;*
                                             ;* 'PRTSTG' prints a string pointed to by A1. It stops printing
                                             ;* and returns to the caller when either a CR is printed or when
                                             ;* the next byte is the same as what was passed in D0 by the
                                             ;* caller.
                                             ;*
                                             ;* 'QTSTG' looks for an underline (back-arrow on some systems),
                                             ;* single-quote, or double-quote.  If none of these are found, returns
                                             ;* to the caller.  If underline, outputs a CR without a LF.  If single
                                             ;* or double quote, prints the quoted string and demands a matching
                                             ;* end quote.  After the printing, the next 2 bytes of the caller are
                                             ;* skipped over (usually a short branch instruction).
                                             ;*
                                             ;* 'PRTNUM' prints the 32 bit number in D1, leading blanks are added if
                                             ;* needed to pad the number of spaces to the number in D4.
                                             ;* However, if the number of digits is larger than the no. in
                                             ;* D4, all digits are printed anyway. Negative sign is also
                                             ;* printed and counted in, positive sign is not.
                                             ;*
                                             ;* 'PRTLN' prints the saved text line pointed to by A1
                                             ;* with line no. and all.
                                             ;*
   9579 FFFCC9B8                             PRTSTG:
   9580 FFFCC9B8 1200                        	MOVE.B	D0,D1	;	save the stop character
   9581 FFFCC9BA                             PS1:
   9582 FFFCC9BA 1019                        	MOVE.B	(A1)+,D0	;get a text character
   9583 FFFCC9BC B200                        	CMP.B	D0,D1		;same as stop character?
   9584 FFFCC9BE 6712                        	BEQ	PRTRET		;if so, return
   9585 FFFCC9C0 6100 F646                   	BSR	GOOUT		;display the char.
   9586 FFFCC9C4 B03C 000D                   	CMP.B	#CR,D0		;;is it a C.R.?
   9587 FFFCC9C8 66F0                        	BNE	PS1		;no, go back for more
   9588 FFFCC9CA 103C 000A                   	MOVE.B	#LF,D0	;	yes, add a L.F.
   9589 FFFCC9CE 6100 F638                   	BSR	GOOUT
   9590 FFFCC9D2                             PRTRET:
   9591 FFFCC9D2 4E75                        	RTS			;then return
                                             
   9593 FFFCC9D4                             QTSTG:
   9594 FFFCC9D4 6100 00CE                   	BSR.L	TSTC;		*** QTSTG ***
   9595 FFFCC9D8 22 1B                       	DC.B	'"',QT3-$
   9596 FFFCC9DA 103C 0022                   	MOVE.B	#'"',D0  ;       it is a "
   9597 FFFCC9DE                             QT1:
   9598 FFFCC9DE 2248                        	MOVE.L	A0,A1
   9599 FFFCC9E0 6100 FFD6                   	BSR	PRTSTG		;print until another
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 112
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9600 FFFCC9E4 2049                        	MOVE.L	A1,A0
   9601 FFFCC9E6 225F                        	MOVE.L	(SP)+,A1;	pop return address
   9602 FFFCC9E8 B03C 000A                   	CMP.B	#LF,D0	;	was last one a CR?
   9603 FFFCC9EC 6700 F834                   	BEQ	RUNNXL		;if so, run next line
   9604 FFFCC9F0                             QT2:
   9605 FFFCC9F0 5489                        	ADDQ.L	#2,A1	;	skip 2 bytes on return
   9606 FFFCC9F2 4ED1                        	JMP	(A1)		;return
   9607 FFFCC9F4                             QT3:
   9608 FFFCC9F4 6100 00AE                   	BSR.L	TSTC	;	is it a single quote?
   9609 FFFCC9F8 27 07                       	DC.B	'\'',QT4-$
   9610 FFFCC9FA 103C 0027                   	MOVE.B	#'''',D0  ;      if so, do same as above
   9611 FFFCC9FE 60DE                        	BRA	QT1
   9612 FFFCCA00                             QT4:
   9613 FFFCCA00 6100 00A2                   	BSR.L	TSTC		;is it an underline?
   9614 FFFCCA04 5F 0D                       	DC.B	'_',QT5-$
   9615 FFFCCA06 103C 000D                   	MOVE.B	#CR,D0		;if so, output a CR without LF
   9616 FFFCCA0A 6100 F5FC                   	BSR.L	GOOUT
   9617 FFFCCA0E 225F                        	MOVE.L	(SP)+,A1	;pop return address
   9618 FFFCCA10 60DE                        	BRA	QT2
   9619 FFFCCA12                             QT5:
   9620 FFFCCA12 4E75                        	RTS			;none of the above
                                             
   9622 FFFCCA14                             PRTNUM:
   9623 FFFCCA14 2601                        	MOVE.L	D1,D3	;	save the number for later
   9624 FFFCCA16 2F04                        	MOVE	D4,-(SP)	;save the width value
   9625 FFFCCA18 1F3C 00FF                   	MOVE.B	#0xFF,-(SP)	;flag for end of digit string
   9626 FFFCCA1C 4A81                        	TST.L	D1		;is it negative?
   9627 FFFCCA1E 6A04                        	BPL	PN1		;if not
   9628 FFFCCA20 4481                        	NEG.L	D1	;	else make it positive
   9629 FFFCCA22 5384                        	SUBQ	#1,D4	;	one less for width count
   9630 FFFCCA24                             PN1:
   9631 FFFCCA24 82FC 000A                   	DIVU	#10,D1	;	get the next digit
   9632 FFFCCA28 690A                        	BVS	PNOV	;	overflow flag set?
   9633 FFFCCA2A 2001                        	MOVE.L	D1,D0	;	if not, save remainder
   9634 FFFCCA2C 0281 0000 FFFF              	AND.L	#0xFFFF,D1	;strip the remainder
   9635 FFFCCA32 601A                        	BRA	TOASCII 	;skip the overflow stuff
   9636 FFFCCA34                             PNOV:
   9637 FFFCCA34 2001                        	MOVE	D1,D0	;	prepare for long word division
   9638 FFFCCA36 4241                        	CLR.W	D1		;zero out low word
   9639 FFFCCA38 4841                        	SWAP	D1		;high word into low
   9640 FFFCCA3A 82FC 000A                   	DIVU	#10,D1	;	divide high word
   9641 FFFCCA3E 2401                        	MOVE	D1,D2	;	save quotient
   9642 FFFCCA40 2200                        	MOVE	D0,D1	;	low word into low
   9643 FFFCCA42 82FC 000A                   	DIVU	#10,D1	;	divide low word
   9644 FFFCCA46 2001                        	MOVE.L	D1,D0	;	D0 = remainder
   9645 FFFCCA48 4841                        	SWAP	D1	;	R/Q becomes Q/R
   9646 FFFCCA4A 2202                        	MOVE	D2,D1	;	D1 is low/high
   9647 FFFCCA4C 4841                        	SWAP	D1	;	D1 is finally high/low
   9648 FFFCCA4E                             TOASCII:
   9649 FFFCCA4E 4840                        	SWAP	D0	;	get remainder
   9650 FFFCCA50 1F00                        	MOVE.B	D0,-(SP);	stack it as a digit
   9651 FFFCCA52 4840                        	SWAP	D0
   9652 FFFCCA54 5384                        	SUBQ	#1,D4	;	decrement width count
   9653 FFFCCA56 4A81                        	TST.L	D1		;if quotient is zero, we're done
   9654 FFFCCA58 66CA                        	BNE	PN1
   9655 FFFCCA5A 5384                        	SUBQ	#1,D4	;	adjust padding count for DBRA
   9656 FFFCCA5C 6B0C                        	BMI	PN4		;skip padding if not needed
   9657 FFFCCA5E                             PN3:
   9658 FFFCCA5E 103C 0020                   	MOVE.B	#' ',D0  ;       display the required leading spaces
   9659 FFFCCA62 6100 F5A4                   	BSR	GOOUT
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 113
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9660 FFFCCA66 51CC FFF6                   	DBRA	D4,PN3
   9661 FFFCCA6A                             PN4:
   9662 FFFCCA6A 4A83                        	TST.L	D3		;is number negative?
   9663 FFFCCA6C 6A08                        	BPL	PN5
   9664 FFFCCA6E 103C 002D                   	MOVE.B	#'-',D0  ;       if so, display the sign
   9665 FFFCCA72 6100 F594                   	BSR	GOOUT
   9666 FFFCCA76                             PN5:
   9667 FFFCCA76 101F                        	MOVE.B	(SP)+,D0	;now unstack the digits and display
   9668 FFFCCA78 6B0A                        	BMI	PNRET		;until the flag code is reached
   9669 FFFCCA7A 0600 0030                   	ADD.B	#'0',D0   ;      make into ASCII
   9670 FFFCCA7E 6100 F588                   	BSR	GOOUT
   9671 FFFCCA82 60F2                        	BRA	PN5
   9672 FFFCCA84                             PNRET:
   9673 FFFCCA84 281F                        	MOVE	(SP)+,D4	;restore width value
   9674 FFFCCA86 4E75                        	RTS
                                             
   9676 FFFCCA88                             PRTLN:
   9677 FFFCCA88 4281                        	CLR.L	D1
   9678 FFFCCA8A 1219                        	MOVE.B	(A1)+,D1	;get the binary line number
   9679 FFFCCA8C E189                        	LSL	#8,D1
   9680 FFFCCA8E 1219                        	MOVE.B	(A1)+,D1
   9681 FFFCCA90 7805                        	MOVEQ	#5,D4		;display a 5 digit line no.
   9682 FFFCCA92 6100 FF80                   	BSR	PRTNUM
   9683 FFFCCA96 103C 0020                   	MOVE.B	#' ',D0      ;   followed by a blank
   9684 FFFCCA9A 6100 F56C                   	BSR	GOOUT
   9685 FFFCCA9E 4280                        	CLR	D0		;stop char. is a zero
   9686 FFFCCAA0 6000 FF16                   	BRA	PRTSTG	;	display the rest of the line
                                             
                                             ;*
                                             ;* ===== Test text byte following the call to this subroutine. If it
                                             ;*	equals the byte pointed to by A0, return to the code following
                                             ;*	the call. If they are not equal, branch to the point
                                             ;*	indicated by the offset byte following the text byte.
                                             ;*
   9694 FFFCCAA4                             TSTC:
   9695 FFFCCAA4 6100 0050                   	BSR	IGNBLK		;ignore leading blanks
   9696 FFFCCAA8 225F                        	MOVE.L	(SP)+,A1	;get the return address
   9697 FFFCCAAA 1219                        	MOVE.B	(A1)+,D1	;get the byte to compare
   9698 FFFCCAAC B210                        	CMP.B	(A0),D1 	;is it = to what A0 points to?
   9699 FFFCCAAE 6708                        	BEQ	TC1		;if so
   9700 FFFCCAB0 4281                        	CLR.L	D1		;If not, add the second
   9701 FFFCCAB2 1211                        	MOVE.B	(A1),D1 ;	byte following the call to
   9702 FFFCCAB4 D3C1                        	ADD.L	D1,A1	;	the return address.
   9703 FFFCCAB6 4ED1                        	JMP	(A1)		;jump to the routine
   9704 FFFCCAB8                             TC1:
   9705 FFFCCAB8 5288                        	ADDQ.L	#1,A0	;	if equal, bump text pointer
   9706 FFFCCABA 5289                        	ADDQ.L	#1,A1	;	Skip the 2 bytes following
   9707 FFFCCABC 4ED1                        	JMP	(A1)		;the call and continue.
                                             
                                             ;*
                                             ;* ===== See if the text pointed to by A0 is a number. If so,
                                             ;*	return the number in D1 and the number of digits in D2,
                                             ;*	else return zero in D1 and D2.
                                             ;*
   9714 FFFCCABE                             TSTNUM:
   9715 FFFCCABE 4281                        	CLR.L	D1		;initialize return parameters
   9716 FFFCCAC0 4282                        	CLR	D2
   9717 FFFCCAC2 6100 0032                   	BSR	IGNBLK		;skip over blanks
   9718 FFFCCAC6                             TN1:
   9719 FFFCCAC6 0C10 0030                   	CMP.B	#'0',(A0) ;      is it less than zero?
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 114
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9720 FFFCCACA 6528                        	BCS	TSNMRET 	;if so, that's all
   9721 FFFCCACC 0C10 0039                   	CMP.B	#'9',(A0) ;      is it greater than nine?
   9722 FFFCCAD0 6222                        	BHI	TSNMRET 	;if so, return
   9723 FFFCCAD2 B2BC 0CCC CCCC              	CMP.L	#214748364,D1	;see if there's room for new digit
   9724 FFFCCAD8 6400 FDB0                   	BCC	QHOW		;if not, we've overflowd
   9725 FFFCCADC 2001                        	MOVE.L	D1,D0	;	quickly multiply result by 10
   9726 FFFCCADE D281                        	ADD.L	D1,D1
   9727 FFFCCAE0 D281                        	ADD.L	D1,D1
   9728 FFFCCAE2 D280                        	ADD.L	D0,D1
   9729 FFFCCAE4 D281                        	ADD.L	D1,D1
   9730 FFFCCAE6 1018                        	MOVE.B	(A0)+,D0	;add in the new digit
   9731 FFFCCAE8 0280 0000 000F              	AND.L	#0xF,D0
   9732 FFFCCAEE D280                        	ADD.L	D0,D1
   9733 FFFCCAF0 5282                        	ADDQ	#1,D2		;increment the no. of digits
   9734 FFFCCAF2 60D2                        	BRA	TN1
   9735 FFFCCAF4                             TSNMRET:
   9736 FFFCCAF4 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Skip over blanks in the text pointed to by A0.
                                             ;*
   9741 FFFCCAF6                             IGNBLK:
   9742 FFFCCAF6 0C10 0020                   	CMP.B	#' ',(A0)   ;    see if it's a space
   9743 FFFCCAFA 6604                        	BNE	IGBRET		;if so, swallow it
   9744 FFFCCAFC                             IGB1:
   9745 FFFCCAFC 5288                        	ADDQ.L	#1,A0	;	increment the text pointer
   9746 FFFCCAFE 60F6                        	BRA	IGNBLK
   9747 FFFCCB00                             IGBRET:
   9748 FFFCCB00 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Convert the line of text in the input buffer to upper
                                             ;*	case (except for stuff between quotes).
                                             ;*
   9754 FFFCCB02                             TOUPBUF:
   9755 FFFCCB02 41F8 0630                   	LEA	BUFFER,A0	;set up text pointer
   9756 FFFCCB06 4201                        	CLR.B	D1		;clear quote flag
   9757 FFFCCB08                             TOUPB1:
   9758 FFFCCB08 1018                        	MOVE.B	(A0)+,D0	;get the next text char.
   9759 FFFCCB0A B03C 000D                   	CMP.B	#CR,D0		;is it end of line?
   9760 FFFCCB0E 671A                        	BEQ	TOUPBRT 	;if so, return
   9761 FFFCCB10 B03C 0022                   	CMP.B	#'"',D0  ;       a double quote?
   9762 FFFCCB14 6716                        	BEQ	DOQUO
   9763 FFFCCB16 B03C 0027                   	CMP.B	#'''',D0  ;      or a single quote?
   9764 FFFCCB1A 6710                        	BEQ	DOQUO
   9765 FFFCCB1C 4A01                        	TST.B	D1		;inside quotes?
   9766 FFFCCB1E 66E8                        	BNE	TOUPB1		;if so, do the next one
   9767 FFFCCB20 6100 001A                   	BSR	TOUPPER 	;convert to upper case
   9768 FFFCCB24 1100                        	MOVE.B	D0,-(A0);	store it
   9769 FFFCCB26 5288                        	ADDQ.L	#1,A0
   9770 FFFCCB28 60DE                        	BRA	TOUPB1		;and go back for more
   9771 FFFCCB2A                             TOUPBRT:
   9772 FFFCCB2A 4E75                        	RTS
                                             
   9774 FFFCCB2C                             DOQUO:
   9775 FFFCCB2C 4A01                        	TST.B	D1	;	are we inside quotes?
   9776 FFFCCB2E 6604                        	BNE	DOQUO1
   9777 FFFCCB30 1200                        	MOVE.B	D0,D1	;	if not, toggle inside-quotes flag
   9778 FFFCCB32 60D4                        	BRA	TOUPB1
   9779 FFFCCB34                             DOQUO1:
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 115
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9780 FFFCCB34 B200                        	CMP.B	D0,D1	;	make sure we're ending proper quote
   9781 FFFCCB36 66D0                        	BNE	TOUPB1		;if not, ignore it
   9782 FFFCCB38 4201                        	CLR.B	D1		;else clear quote flag
   9783 FFFCCB3A 60CC                        	BRA	TOUPB1
                                             
                                             ;*
                                             ;* ===== Convert the character in D0 to upper case
                                             ;*
   9788 FFFCCB3C                             TOUPPER:
   9789 FFFCCB3C B03C 0061                   	CMP.B	#'a',D0   ;      is it < 'a'?
   9790 FFFCCB40 650A                        	BCS	TOUPRET
   9791 FFFCCB42 B03C 007A                   	CMP.B	#'z',D0        ; or > 'z'?
   9792 FFFCCB46 6204                        	BHI	TOUPRET
   9793 FFFCCB48 0400 0020                   	SUB.B	#32,D0		;if not, make it upper case
   9794 FFFCCB4C                             TOUPRET:
   9795 FFFCCB4C 4E75                        	RTS
                                             
                                             ;*
                                             ;* 'CHKIO' checks the input. If there's no input, it will return
                                             ;* to the caller with the Z flag set. If there is input, the Z
                                             ;* flag is cleared and the input byte is in D0. However, if a
                                             ;* control-C is read, 'CHKIO' will warm-start BASIC and will not
                                             ;* return to the caller.
                                             ;*
   9804 FFFCCB4E                             CHKIO:
   9805 FFFCCB4E 6100 F4BC                   	BSR.L	GOIN	;	get input if possible
   9806 FFFCCB52 670A                        	BEQ	CHKRET		;if Zero, no input
   9807 FFFCCB54 B03C 0003                   	CMP.B	#CTRLC,D0	;is it control-C?
   9808 FFFCCB58 6604                        	BNE	CHKRET		;if not
   9809 FFFCCB5A 6000 F504                   	BRA.L	WSTART		;if so, do a warm start
   9810 FFFCCB5E                             CHKRET:
   9811 FFFCCB5E 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Display a CR-LF sequence
                                             ;*
   9816 FFFCCB60                             CRLF:
   9817 FFFCCB60 4DF9 FFFC CBED              	LEA	CLMSG,A6
                                             
                                             ;*
                                             ;* ===== Display a zero-ended string pointed to by register A6
                                             ;*
   9822 FFFCCB66                             PRMESG:
   9823 FFFCCB66 101E                        	MOVE.B	(A6)+,D0	;get the char.
   9824 FFFCCB68 6706                        	BEQ	PRMRET		;if it's zero, we're done
   9825 FFFCCB6A 6100 F49C                   	BSR	GOOUT		;else display it
   9826 FFFCCB6E 60F6                        	BRA	PRMESG
   9827 FFFCCB70                             PRMRET:
   9828 FFFCCB70 4E75                        	RTS
                                             
                                             ;******************************************************
                                             ;* The following routines are the only ones that need *
                                             ;* to be changed for a different I/O environment.     *
                                             ;******************************************************
                                             
                                             UART		EQU		0xFFDC0A00
                                             UART_LS		EQU		UART+1
                                             UART_CTRL	EQU		UART+7
                                             KEYBD		EQU		0xFFDC0000
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 116
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             ;*
                                             ;* ===== Output character to the console (Port 1) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
   9845 FFFCCB72                             OUTC:
   9846 FFFCCB72 48E7 C000                   	MOVEM.L	D0/D1,-(SP)
   9847 FFFCCB76 2200                        	MOVE.L	D0,D1
   9848 FFFCCB78 7006                        	MOVEQ	#6,D0
   9849 FFFCCB7A 4E4F                        	TRAP	#15
   9850 FFFCCB7C 4CDF 0003                   	MOVEM.L	(SP)+,D0/D1
   9851 FFFCCB80 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the console into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
   9857 FFFCCB82                             INC:
   9858 FFFCCB82 2F01                        	move.l	d1,-(a7)
   9859 FFFCCB84 7007                        	moveq	#7,d0		; check for key
   9860 FFFCCB86 4E4F                        	trap	#15
   9861 FFFCCB88 4A00                        	tst.b	d0
   9862 FFFCCB8A 670A                        	beq.s	.0001
   9863 FFFCCB8C 7005                        	moveq	#5,d0
   9864 FFFCCB8E 4E4F                        	trap	#15
   9865 FFFCCB90 2001                        	move.l	d1,d0
   9866 FFFCCB92 221F                        	move.l	(a7)+,d1
   9867 FFFCCB94 4A00                        	tst.b	d0
   9868 FFFCCB96                             .0001:
   9869 FFFCCB96 4E75                        	rts
                                             
                                             ;*
                                             ;* ===== Output character to the host (Port 2) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
   9875 FFFCCB98                             AUXOUT:
   9876 FFFCCB98 0839 0005 FFDC 0A01         	BTST	#5,UART_LS	;is port ready for a character?
   9877 FFFCCBA0 67F6                        	BEQ		AUXOUT		;if not, wait for it
   9878 FFFCCBA2 13C0 FFDC 0A00              	MOVE.B	D0,UART		;out it goes.
   9879 FFFCCBA8 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the host into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
   9885 FFFCCBAA                             AUXIN:
   9886 FFFCCBAA 0839 0000 FFDC 0A01         	BTST	#0,UART_LS	;is character ready?
   9887 FFFCCBB2 670A                        	BEQ		AXIRET		;if not, return Zero status
   9888 FFFCCBB4 1039 FFDC 0A00              	MOVE.B	UART,D0		;else get the character
   9889 FFFCCBBA 0200 007F                   	AND.B	#0x7F,D0 	;zero out the high bit
   9890 FFFCCBBE                             AXIRET:
   9891 FFFCCBBE 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Return to the resident monitor, operating system, etc.
                                             ;*
   9896 FFFCCBC0                             BYEBYE:
   9897 FFFCCBC0 1E3C 00E4                   	MOVE.B	#228,D7 	;return to Tutor
   9898 FFFCCBC4 4E4E                        	TRAP	#14
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 117
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9900 FFFCCBC6                             INITMSG:
   9901 FFFCCBC6 0D 0A 47 6F 72 64 6F 0D     	DC.B	CR,LF,'Gordo''s MC68000 Tiny BASIC, v1.2',CR,LF,LF,0
   9902 FFFCCBCE 0A 0A 00                    
   9903 FFFCCBD1                             OKMSG:
   9904 FFFCCBD1 0D 0A 4F 4B 0D 0A 00        	DC.B	CR,LF,'OK',CR,LF,0
   9905 FFFCCBD8                             HOWMSG:
   9906 FFFCCBD8 48 6F 77 3F 0D 0A 00        	DC.B	'How?',CR,LF,0
   9907 FFFCCBDF                             WHTMSG:
   9908 FFFCCBDF 57 68 61 74 3F 0D 0A 00     	DC.B	'What?',CR,LF,0
                                             
   9910 FFFCCBE7                             SRYMSG:
   9911 FFFCCBE7 53 6F 72 72 79 2E           	DC.B	'Sorry.'
   9912 FFFCCBED                             CLMSG:
   9913 FFFCCBED 0D 0A 00                    	DC.B	CR,LF,0
   9914 FFFCCBF0 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             LSTROM	EQU		$
                                             	;	end of possible ROM area
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 01:14:33 2017     Page 117
bootrom.asm


                                             .include C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             	;
                                             
                                             
