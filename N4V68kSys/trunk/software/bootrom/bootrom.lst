Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 1
bootrom.asm

                                             ; N4V68kSys bootrom - (C) 2017 Robert Finch, Waterloo
                                             ;
                                             ; This file is part of N4V68kSys
                                             ;
                                             ; how to build:
                                             ; 1. assemble using "asm68 bootrom.asm /G00 /olyebvm"
                                             ; 2. copy bootrom.vh to the correct directory if not already there
                                             ;
                                             ;------------------------------------------------------------------------------
                                             ;
                                             ; system memory map
                                             ;
                                             ;
                                             ; 00000000 +----------------+
                                             ;          | startup sp,pc  | 8 B
                                             ; 00000008 +----------------+
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ;          :  dram memory   : 512 MB
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ; 20000000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FF800000 +----------------+
                                             ;          |                |
                                             ;          : display buffer : 1.0 MB
                                             ;          |                |
                                             ; FF900000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFD00000 +----------------+
                                             ;          |                |
                                             ;          :    I/O area    : 1.0 M
                                             ;          |                |
                                             ; FFE00000 +----------------+
                                             ;          |   VDG regs     |
                                             ; FFE01000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFFC0000 +----------------+
                                             ;          |                |
                                             ;          :    boot rom    :
                                             ;          |                |
                                             ; FFFFFFFF +----------------+
                                             ;
                                             ;
                                             RGBMASK		EQU		%0111111111111111
                                             RED			EQU		%0111110000000000
                                             DARK_BLUE	EQU		%0000000000001111
                                             BLACK		EQU		%0000000000000000
                                             WHITE		EQU		%0111111111111111
                                             
                                             CTRLC	EQU		$03
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 2
bootrom.asm
                                             CTRLH	EQU		$08
                                             CTRLX	EQU		$18
                                             LF		EQU		$0A
                                             CR		EQU		$0D
                                             
                                             SC_F12  EQU    $07
                                             SC_C    EQU    $21
                                             SC_T    EQU    $2C
                                             SC_Z    EQU    $1A
                                             SC_KEYUP	EQU		$F0
                                             SC_EXTEND   EQU		$E0
                                             SC_CTRL		EQU		$14
                                             SC_RSHIFT	EQU		$59
                                             SC_NUMLOCK	EQU		$77
                                             SC_SCROLLLOCK	EQU	$7E
                                             SC_CAPSLOCK		EQU	$58
                                             SC_ALT		EQU		$11
                                             SC_LSHIFT	EQU		$12
                                             SC_DEL		EQU		$71		; extend
                                             SC_LCTRL	EQU		$58
                                             SC_TAB      EQU		$0D
                                             
                                             TEXTCOLS	EQU	50
                                             TEXTROWS	EQU	37
                                             BMP_WIDTH	EQU	400
                                             BMP_HEIGHT	EQU	300
                                             
                                             VDGBUF		EQU	$FF800000
                                             VDGREG		EQU	$FFE00000
                                             VDG_CURX	EQU	$0440
                                             VDG_CURY	EQU	$0442
                                             VDG_CURSZ	EQU	$0444
                                             VDG_CURFLSH	EQU	$0446
                                             VDG_CUR0X	EQU	$0204
                                             VDG_CUR0Y	EQU	$0206
                                             VDG_CURCLR0	EQU	$0448
                                             VDG_CURCLR1	EQU	$044A
                                             VDG_CURCLR2	EQU	$044C
                                             VDG_CURCLR3	EQU	$044E
                                             VDG_CURIMG	EQU	$0460
                                             I2C			EQU	$FFDC0E00
                                             I2C2		EQU	$FFDC0E10
                                             VirtScreen	EQU	$1FFF0000
                                             KEYBD		EQU	$FFDC0000
                                             leds		EQU	$FFDC0600
                                             rand		EQU	$FFDC0C00
                                             
                                             fgcolor		EQU	$10002
                                             bkcolor		EQU	$10004
                                             fntsz		EQU	$10006
                                             memend		EQU	$10008
                                             CursorRow	EQU	$10418
                                             CursorCol	EQU $10419
                                             TextRows	EQU	$1041A
                                             TextCols	EQU	$1041B
                                             TextCurpos	EQU	$1041C
                                             TextScr		EQU	$10420
                                             KeybdEcho		EQU	$10424
                                             KeybdWaitFlag	EQU	$10425
                                             _KeyState1		EQU	$10426
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 3
bootrom.asm
                                             _KeyState2		EQU	$10427
                                             KeybdLEDs		EQU	$10428
                                             gfx_control_reg_mem		EQU	$1042C
                                             milliseconds	EQU	$10430
                                             systick			EQU	$10434
                                             S19StartAddress	EQU	$10438
                                             
                                             ball_dx			EQU	$10500
                                             ball_dy			EQU	$10600
                                             
                                             GFX_CONTROL			EQU		$00
                                             GFX_STATUS			EQU		$04
                                             GFX_TARGET_BASE		EQU		$10
                                             GFX_TARGET_SIZE_X	EQU		$14
                                             GFX_TARGET_SIZE_Y	EQU		$18
                                             GFX_DEST_PIXEL_X	EQU		$38
                                             GFX_DEST_PIXEL_Y	EQU		$3C
                                             GFX_DEST_PIXEL_Z	EQU		$40
                                             GFX_COLOR0			EQU		$84
                                             
                                             GFX_ACTIVE_POINT0	EQU		0
                                             GFX_ACTIVE_POINT1	EQU		$10000
                                             GFX_LINE			EQU		$200
                                             
                                             reg_d0			EQU	$10500
                                             reg_d1			EQU	$10504
                                             reg_d2			EQU	$10508
                                             reg_d3			EQU	$1050C
                                             reg_d4			EQU $10510
                                             reg_d5			EQU $10514
                                             reg_d6			EQU	$10518
                                             reg_d7			EQU	$1051C
                                             reg_a0			EQU $10520
                                             reg_a1			EQU	$10524
                                             reg_a2			EQU	$10528
                                             reg_a3			EQU $1052C
                                             reg_a4			EQU $10530
                                             reg_a5			EQU $10534
                                             reg_a6			EQU $10538
                                             reg_ssp			EQU	$1053C
                                             reg_usp			EQU	$10540
                                             reg_pc			EQU $10544
                                             reg_sr			EQU	$10548
                                             
                                             RTCBuf			EQU	$10600
                                             RTFBufEnd		EQU	$10660
                                             CmdBuf			EQU	$10800
                                             CmdBufEnd		EQU	$10850
                                             
                                             
                                             	code
                                             	org		$FFFC0000
    172 FFFC0000 600E                        	bra.s	Start
    173 FFFC0002 FF FF                       	align	4
                                             
                                             ;------------------------------------------------------------------------------
                                             
                                             ;	dc.l	$FF401000	; initial SSP
    178 FFFC0004 FFFC0010                    	dc.l	Start		; initial PC
                                             	
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 4
bootrom.asm
                                             ;------------------------------------------------------------------------------
    181 FFFC0008                             fpga_version:
    182 FFFC0008 41 41 30 30 30 30 30 30     	dc.b	"AA000000"	; FPGA core version - 8 ASCII characters
                                             
                                             
                                             ;------------------------------------------------------------------------------
    186 FFFC0010                             	Start:
                                             ;------------------------------------------------------------------------------
    188 FFFC0010 33FC A1A1 FFDC 0600         		move.w	#$A1A1,leds		; diagnostics
    189 FFFC0018 2E7C FF40 1000              		move.l	#$FF401000,sp	; set stack pointer
    190 FFFC001E 003C 0080                   		ori.b	#$80,ccr		; select big endian mode for lword data access
                                             
                                             		; SIM croaked because the upper half of D1 was undefined. This caused
                                             		; problems with a dbra instruction. So the contents of all the registers
                                             		; are defined at startup. This is only needed for SIM.
    195 FFFC0022 7000                        		moveq	#0,D0
    196 FFFC0024 7200                        		moveq	#0,D1				; for SIM
    197 FFFC0026 7400                        		moveq	#0,D2
    198 FFFC0028 7600                        		moveq	#0,D3
    199 FFFC002A 7800                        		moveq	#0,D4
    200 FFFC002C 7A00                        		moveq	#0,D5
    201 FFFC002E 7C00                        		moveq	#0,D6
    202 FFFC0030 7E00                        		moveq	#0,D7
    203 FFFC0032 4288                        		clr.l	A0
    204 FFFC0034 4289                        		clr.l	A1
    205 FFFC0036 428A                        		clr.l	A2
    206 FFFC0038 428B                        		clr.l	A3
    207 FFFC003A 428C                        		clr.l	A4
    208 FFFC003C 428D                        		clr.l	A5
    209 FFFC003E 428E                        		clr.l	A6
                                             ;		move.l	A7,usp
                                             
                                             		; setup vector table
                                             		;
                                             ;		lea		BusError,a0
                                             ;		move.l	a0,0x008		; set bus error vector
    216 FFFC0040 41F9 FFFC 0134              		lea		IllegalInstruction,a0
    217 FFFC0046 21C8 0010                   		move.l	a0,0x010
    218 FFFC004A 41F9 FFFC 011A              		lea		Pulse1000,a0
    219 FFFC0050 21C8 0078                   		move.l	a0,0x078		; set autovector 6
                                             ;		lea		KeybdNMI,a0
                                             ;		move.l	a0,0x07C		; set autovector 7
    222 FFFC0054 41F9 FFFC 0156              		lea		TRAP15,a0
    223 FFFC005A 21C8 00BC                   		move.l	a0,188			; set trap 15 vector
                                             
                                             ;		bsr		mmu_init
    226 FFFC005E 6100 1B1A                   		bsr		i2c_setup
                                             ;		bsr		rtc_read
    228 FFFC0062 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds		; diagnostics
                                             
    230 FFFC006A 4239 0001 0419              		clr.b	CursorCol
    231 FFFC0070 4239 0001 0418              		clr.b	CursorRow
    232 FFFC0076 4279 0001 041C              		clr.w	TextCurpos
    233 FFFC007C 23FC 0002 0000 0001 0420    		move.l	#$00020000,TextScr		; set virtual screen location
                                             
                                             
    236 FFFC0086 4DF9 FFDC 0000              		lea	$FFDC0000,A6	; I/O base
                                             
                                             		; Initialize random number generator
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 5
bootrom.asm
    240 FFFC008C 426E 0C06                   		clr.w	$0C06(a6)				; select stream #0
    241 FFFC0090 2D7C 8888 8888 0C08         		move.l	#$88888888,$0C08(a6)	; set initial m_z
    242 FFFC0098 2D7C 0123 4567 0C0C         		move.l	#$01234567,$0C0C(a6)	; set initial m_w
                                             
    244 FFFC00A0 6100 0464                   		bsr		Set400x300
                                             ;		bsr		Set800x600
    246 FFFC00A4 6100 0590                   		bsr		ColorBandMemory
    247 FFFC00A8 6100 0524                   		bsr		BootSetZBuffer
    248 FFFC00AC 6100 0740                   		bsr		InitCursorColorPalette
                                             ;		bsr		SetCursorColor
                                             ;		bsr		SetCursorImage
    251 FFFC00B0 6100 0764                   		bsr		SetCursorImage64
    252 FFFC00B4 6100 069C                   		bsr		EnableCursor
                                             
    254 FFFC00B8 6100 053E                   		bsr		BootClearScreen		
    255 FFFC00BC 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds			; diagnostics
                                             		
                                             		; turn on audio test mode
    258 FFFC00C4 4DF9 FFDC 0000              		lea		$FFDC0000,A6		; set I/O base
    259 FFFC00CA 3D7C FFFF 0700              		move.w	#$FFFF,$0700(a6)	; turn on audio clocks
    260 FFFC00D0 2A7C FFE0 0000              		movea.l	#VDGREG,a5
    261 FFFC00D6 3B7C 4000 0650              		move.w	#%0100000000000000,$650(a5)
                                             
                                             ;		bsr		DrawLines
                                             ;		bsr		TestBlitter
                                             
    266 FFFC00DC 6100 0590                   		bsr		BootCopyFont
    267 FFFC00E0 33FC A3A3 FFDC 0600         		move.w	#$A3A3,leds			; diagnostics
                                             
    269 FFFC00E8 33FC 7FFF 0001 0002         		move.w	#WHITE,fgcolor		; set text colors
    270 FFFC00F0 33FC 000F 0001 0004         		move.w	#DARK_BLUE,bkcolor
                                             
                                             		; Write startup message to screen
                                             
    274 FFFC00F8 41F9 FFFC 20EE              		lea		msg_start,a0
    275 FFFC00FE 7200                        		moveq	#0,d1					; xpos
    276 FFFC0100 7400                        		moveq	#0,d2					; ypos
    277 FFFC0102 6100 0A40                   		bsr		DispStringAt
    278 FFFC0106 33FC A4A4 FFDC 0600         		move.w	#$A4A4,leds			; diagnostics
                                             
    280 FFFC010E 47F9 FFFC 0118              		lea		j1,a3
    281 FFFC0114 6000 1164                   		bra		DisplayHelp
    282 FFFC0118                             j1:
    283 FFFC0118 60FE                        		bra		j1
                                             
                                             ;------------------------------------------------------------------------------
                                             ; 1000 Hz interrupt
                                             ;------------------------------------------------------------------------------
                                             ;
    289 FFFC011A                             Pulse1000:
    290 FFFC011A 52B9 0001 0430              		add.l	#1,milliseconds
    291 FFFC0120 5279 0001 0434              		add.w	#1,systick
    292 FFFC0126 0279 001F 0001 0434         		and.w	#$1F,systick
    293 FFFC012E 6702                        		beq.s	Pulse31
    294 FFFC0130 4E73                        		rte
    295 FFFC0132                             Pulse31:
    296 FFFC0132 4E73                        		rte
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 6
bootrom.asm
                                             
    301 FFFC0134                             IllegalInstruction:
    302 FFFC0134 43F9 FFFC 0142              		lea		MSG_ILLEGAL_INSN,a1
    303 FFFC013A 4EB9 FFFC 0432              		jsr		DisplayString
    304 FFFC0140 4E73                        		rte
                                             
    306 FFFC0142                             MSG_ILLEGAL_INSN:
    307 FFFC0142 49 6C 6C 65 67 61 6C 20     		dc.b	"Illegal instruction",0
    308 FFFC014A 69 6E 73 74 72 75 63 74     
    309 FFFC0152 69 6F 6E 00                 
                                             
                                             		align	2
                                             
                                             ;------------------------------------------------------------------------------
                                             ; TRAP #15 handler
                                             ;------------------------------------------------------------------------------
                                             ;
    317 FFFC0156                             TRAP15:
    318 FFFC0156 48E7 8080                   		movem.l	d0/a0,-(a7)
    319 FFFC015A 41F9 FFFC 0170              		lea		T15DispatchTable,a0
    320 FFFC0160 E580                        		asl.l	#2,d0
    321 FFFC0162 2070 0000                   		move.l	(a0,d0.w),a0
    322 FFFC0166 4E90                        		jsr		(a0)
    323 FFFC0168 4CDF 0101                   		movem.l	(a7)+,d0/a0
    324 FFFC016C 4E73                        		rte
                                             
    326 FFFC016E FF FF                       		align	4
    327 FFFC0170                             T15DispatchTable:
    328 FFFC0170 FFFC0210                    dc.l	StubRout
    329 FFFC0174 FFFC0210                    dc.l	StubRout
    330 FFFC0178 FFFC0210                    dc.l	StubRout
    331 FFFC017C FFFC0210                    dc.l	StubRout
    332 FFFC0180 FFFC0210                    dc.l	StubRout
    333 FFFC0184 FFFC0C42                    dc.l	GetKey
    334 FFFC0188 FFFC0260                    dc.l	DisplayChar
    335 FFFC018C FFFC0C30                    dc.l	CheckForKey
    336 FFFC0190 FFFC0210                    dc.l	StubRout
    337 FFFC0194 FFFC0210                    dc.l	StubRout
    338 FFFC0198 FFFC0210                    dc.l	StubRout
    339 FFFC019C FFFC047C                    dc.l	Cursor1
    340 FFFC01A0 FFFC0212                    dc.l	SetKeyboardEcho
    341 FFFC01A4 FFFC044C                    dc.l	DisplayStringCRLF
    342 FFFC01A8 FFFC0432                    dc.l	DisplayString
    343 FFFC01AC FFFC0210                    dc.l	StubRout
    344 FFFC01B0 FFFC0210                    dc.l	StubRout
    345 FFFC01B4 FFFC0210                    dc.l	StubRout
    346 FFFC01B8 FFFC0210                    dc.l	StubRout
    347 FFFC01BC FFFC0210                    dc.l	StubRout
    348 FFFC01C0 FFFC0210                    dc.l	StubRout
    349 FFFC01C4 FFFC0210                    dc.l	StubRout
    350 FFFC01C8 FFFC0210                    dc.l	StubRout
    351 FFFC01CC FFFC0210                    dc.l	StubRout
    352 FFFC01D0 FFFC0210                    dc.l	StubRout
    353 FFFC01D4 FFFC0210                    dc.l	StubRout
    354 FFFC01D8 FFFC0210                    dc.l	StubRout
    355 FFFC01DC FFFC0210                    dc.l	StubRout
    356 FFFC01E0 FFFC0210                    dc.l	StubRout
    357 FFFC01E4 FFFC0210                    dc.l	StubRout
    358 FFFC01E8 FFFC0210                    dc.l	StubRout
    359 FFFC01EC FFFC0210                    dc.l	StubRout
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 7
bootrom.asm
    360 FFFC01F0 FFFC0210                    dc.l	StubRout
    361 FFFC01F4 FFFC0210                    dc.l	StubRout
    362 FFFC01F8 FFFC0210                    dc.l	StubRout
    363 FFFC01FC FFFC0210                    dc.l	StubRout
    364 FFFC0200 FFFC0210                    dc.l	StubRout
    365 FFFC0204 FFFC0210                    dc.l	StubRout
    366 FFFC0208 FFFC0210                    dc.l	StubRout
    367 FFFC020C FFFC0210                    dc.l	StubRout
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Stub routine for unimplemented functionality.
                                             ;------------------------------------------------------------------------------
                                             ;
    373 FFFC0210                             StubRout:
    374 FFFC0210 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; d1.b 0=echo off, non-zero = echo on
                                             ;------------------------------------------------------------------------------
    379 FFFC0212                             SetKeyboardEcho:
    380 FFFC0212 13C1 0001 0424              	move.b	d1,KeybdEcho
    381 FFFC0218 4E75                        	rts
                                             
                                             
    384 FFFC021A                             CRLF:
    385 FFFC021A 2F01                        		move.l	d1,-(a7)
    386 FFFC021C 123C 000D                   		move.b	#'\r',d1
    387 FFFC0220 6100 003E                   		bsr		DisplayChar
    388 FFFC0224 123C 000A                   		move.b	#'\n',d1
    389 FFFC0228 6100 0036                   		bsr		DisplayChar
    390 FFFC022C 221F                        		move.l	(a7)+,d1
    391 FFFC022E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Calculate screen memory location from CursorRow,CursorCol.
                                             ; Destroys d0,d2,a0
                                             ;------------------------------------------------------------------------------
                                             ;
    398 FFFC0230                             CalcScreenLoc:
    399 FFFC0230 1039 0001 0418              		move.b	CursorRow,d0		; compute screen location
    400 FFFC0236 0240 007F                   		andi.w	#0x7f,d0
    401 FFFC023A 1439 0001 041B              		move.b	TextCols,d2
    402 FFFC0240 4882                        		ext.w	d2
    403 FFFC0242 C0C2                        		mulu.w	d2,d0
    404 FFFC0244 1439 0001 0419              		move.b	CursorCol,d2
    405 FFFC024A 0242 00FF                   		andi.w	#0xff,d2
    406 FFFC024E D042                        		add.w	d2,d0
    407 FFFC0250 33C0 0001 041C              		move.w	d0,TextCurpos
    408 FFFC0256 D0B9 0001 0420              		add.l	TextScr,d0
    409 FFFC025C 2040                        		move.l	d0,a0				; a0 = screen location
    410 FFFC025E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a character on the screen
                                             ; d1.b = char to display
                                             ;------------------------------------------------------------------------------
                                             ;
    417 FFFC0260                             DisplayChar:
    418 FFFC0260 48E7 3000                   		movem.l	d2/d3,-(a7)
    419 FFFC0264 0C01 000D                   		cmpi.b	#'\r',d1			; carriage return ?
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 8
bootrom.asm
    420 FFFC0268 660C                        		bne.s	dccr
    421 FFFC026A 4239 0001 0419              		clr.b	CursorCol			; just set cursor column to zero on a CR
    422 FFFC0270 4CDF 000C                   		movem.l	(a7)+,d2/d3
    423 FFFC0274 4E75                        		rts
    424 FFFC0276                             dccr:
    425 FFFC0276 0C01 0091                   		cmpi.b	#0x91,d1			; cursor right ?
    426 FFFC027A 6620                        		bne.s   dcx6
    427 FFFC027C 1439 0001 041B              		move.b	TextCols,d2
    428 FFFC0282 5302                        		sub.b	#1,d2
    429 FFFC0284 9439 0001 0419              		sub.b	CursorCol,d2
    430 FFFC028A 670A                        		beq.s	dcx7
    431 FFFC028C 5239 0001 0419              		addi.b	#1,CursorCol
    432 FFFC0292                             dcx14:
    433 FFFC0292 6100 04F6                   		bsr		SyncCursor
    434 FFFC0296                             dcx7:
    435 FFFC0296 4CDF 000C                   		movem.l	(a7)+,d2/d3
    436 FFFC029A 4E75                        		rts
    437 FFFC029C                             dcx6:
    438 FFFC029C 0C01 0090                   		cmpi.b	#0x90,d1			; cursor up ?
    439 FFFC02A0 6612                        		bne.s	dcx8
    440 FFFC02A2 0C39 0000 0001 0418         		cmpi.b	#0,CursorRow
    441 FFFC02AA 67EA                        		beq.s	dcx7
    442 FFFC02AC 5339 0001 0418              		subi.b	#1,CursorRow
    443 FFFC02B2 60DE                        		bra.s	dcx14
    444 FFFC02B4                             dcx8:
    445 FFFC02B4 0C01 0093                   		cmpi.b	#0x93,d1			; cursor left?
    446 FFFC02B8 6612                        		bne.s	dcx9
    447 FFFC02BA 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    448 FFFC02C2 67D2                        		beq.s	dcx7
    449 FFFC02C4 5339 0001 0419              		subi.b	#1,CursorCol
    450 FFFC02CA 60C6                        		bra.s	dcx14
    451 FFFC02CC                             dcx9:
    452 FFFC02CC 0C01 0092                   		cmpi.b	#0x92,d1			; cursor down ?
    453 FFFC02D0 6618                        		bne.s	dcx10
    454 FFFC02D2 1439 0001 041A              		move.b	TextRows,d2
    455 FFFC02D8 5302                        		sub.b	#1,d2
    456 FFFC02DA B439 0001 0418              		cmp.b	CursorRow,d2
    457 FFFC02E0 67B4                        		beq.s	dcx7
    458 FFFC02E2 5239 0001 0418              		addi.b	#1,CursorRow
    459 FFFC02E8 60A8                        		bra.s	dcx14
    460 FFFC02EA                             dcx10:
    461 FFFC02EA 0C01 0094                   		cmpi.b	#0x94,d1			; cursor home ?
    462 FFFC02EE 661A                        		bne.s	dcx11
    463 FFFC02F0 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    464 FFFC02F8 6708                        		beq.s	dcx12
    465 FFFC02FA 4239 0001 0419              		clr.b	CursorCol
    466 FFFC0300 6090                        		bra.s	dcx14
    467 FFFC0302                             dcx12:
    468 FFFC0302 4239 0001 0418              		clr.b	CursorRow
    469 FFFC0308 6088                        		bra.s	dcx14
    470 FFFC030A                             dcx11:
    471 FFFC030A 48E7 E080                   		movem.l	d0/d1/d2/a0,-(a7)
    472 FFFC030E 0C01 0099                   		cmpi.b	#0x99,d1			; delete ?
    473 FFFC0312 6756                        		beq.s	doDelete
    474 FFFC0314 0C01 0008                   		cmpi.b	#CTRLH,d1			; backspace ?
    475 FFFC0318 6740                        		beq.s   doBackspace
    476 FFFC031A 0C01 0018                   		cmpi.b	#CTRLX,d1			; delete line ?
    477 FFFC031E 6700 0096                   		beq.s	doCtrlX
    478 FFFC0322 0C01 000A                   		cmpi.b	#'\n',d1		; linefeed ?
    479 FFFC0326 6720                        		beq.s	dclf
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 9
bootrom.asm
                                             
                                             		; regular char
    482 FFFC0328 6100 FF06                   		bsr		CalcScreenLoc	; a0 = screen location
    483 FFFC032C 1081                        		move.b	d1,(a0)
    484 FFFC032E 1001                        		move.b	d1,d0
    485 FFFC0330 4880                        		ext.w	d0
    486 FFFC0332 6100 03C4                   		bsr		DispChar
    487 FFFC0336 6100 00A4                   		bsr		IncCursorPos
    488 FFFC033A 6100 044E                   		bsr		SyncCursor
    489 FFFC033E 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0
    490 FFFC0342 4CDF 000C                   		movem.l	(a7)+,d2/d3
    491 FFFC0346 4E75                        		rts
    492 FFFC0348                             dclf:
    493 FFFC0348 6100 00B2                   		bsr		IncCursorRow
    494 FFFC034C                             dcx16:
    495 FFFC034C 6100 043C                   		bsr		SyncCursor
    496 FFFC0350                             dcx4:
    497 FFFC0350 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0		; get back a0
    498 FFFC0354 4CDF 000C                   		movem.l	(a7)+,d2/d3
    499 FFFC0358 4E75                        		rts
                                             
                                             		;---------------------------
                                             		; CTRL-H: backspace
                                             		;---------------------------
    504 FFFC035A                             doBackspace:
    505 FFFC035A 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol		; if already at start of line
    506 FFFC0362 67EC                        		beq.s   dcx4				; nothing to do
    507 FFFC0364 5339 0001 0419              		subi.b	#1,CursorCol		; decrement column
                                             
                                             		;---------------------------
                                             		; Delete key
                                             		;---------------------------
    512 FFFC036A                             doDelete:
    513 FFFC036A 6100 FEC4                   		bsr		CalcScreenLoc		; a0 = screen location
    514 FFFC036E 2F08                        		move.l	a0,-(a7)			; save off screen location
    515 FFFC0370 1039 0001 0419              		move.b	CursorCol,d0
    516 FFFC0376                             .0001:
    517 FFFC0376 10E8 0001                   		move.b	1(a0),(a0)+			; pull remaining characters on line over 1
    518 FFFC037A 5200                        		addi.b	#1,d0
    519 FFFC037C B039 0001 041B              		cmp.b	TextCols,d0
    520 FFFC0382 65F2                        		blo.s	.0001
    521 FFFC0384 103C 0020                   		move.b	#' ',d0				; terminate line with a space
    522 FFFC0388 1140 FFFF                   		move.b	d0,-1(a0)
                                             		; now re-render the chars to the display
    524 FFFC038C 205F                        		move.l	(a7)+,a0			; get back screen location
    525 FFFC038E 1439 0001 0419              		move.b	CursorCol,d2		; save off cursor column
    526 FFFC0394                             .0002:
    527 FFFC0394 1018                        		move.b	(a0)+,d0			; get a char
    528 FFFC0396 6100 0360                   		bsr		DispChar			; render to screen
    529 FFFC039A 5239 0001 0419              		add.b	#1,CursorCol		; increment column
    530 FFFC03A0 1039 0001 0419              		move.b	CursorCol,d0		; check if end of line hit
    531 FFFC03A6 9039 0001 041B              		sub.b	TextCols,d0
    532 FFFC03AC 66E6                        		bne.s	.0002				; no, go back
    533 FFFC03AE 13C2 0001 0419              		move.b	d2,CursorCol		; restore cursor pos
    534 FFFC03B4 6096                        		bra.s	dcx16				; finished
                                             		;---------------------------
                                             		; CTRL-X: erase line
                                             		;---------------------------
    538 FFFC03B6                             doCtrlX:
    539 FFFC03B6 4239 0001 0419              		clr.b	CursorCol			; Reset cursor to start of line
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 10
bootrom.asm
    540 FFFC03BC 1039 0001 041B              		move.b	TextCols,d0			; and display TextCols number of spaces
    541 FFFC03C2 4880                        		ext.w	d0
    542 FFFC03C4 48C0                        		ext.l	d0
    543 FFFC03C6 123C 0020                   		move.b	#' ',d1				; d1 = space char
    544 FFFC03CA                             .0001:
                                             		; DisplayChar is called recursively here
                                             		; It's safe to do because we know it won't recurse again due to the
                                             		; fact we know the character being displayed is a space char
    548 FFFC03CA 6100 FE94                   		bsr		DisplayChar			
    549 FFFC03CE 5380                        		subq	#1,d0
    550 FFFC03D0 66F8                        		bne.s	.0001
    551 FFFC03D2 4239 0001 0419              		clr.b	CursorCol			; now really go back to start of line
    552 FFFC03D8 6000 FF72                   		bra.s	dcx16				; we're done
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Increment the cursor position, scroll the screen if needed.
                                             ;------------------------------------------------------------------------------
                                             ;
    558 FFFC03DC                             IncCursorPos:
    559 FFFC03DC 5279 0001 041C              		addi.w	#1,TextCurpos
    560 FFFC03E2 5239 0001 0419              		addi.b	#1,CursorCol
    561 FFFC03E8 1039 0001 041B              		move.b	TextCols,d0
    562 FFFC03EE B039 0001 0419              		cmp.b	CursorCol,d0
    563 FFFC03F4 643A                        		bhs.s	icc1
    564 FFFC03F6 4239 0001 0419              		clr.b	CursorCol
    565 FFFC03FC                             IncCursorRow:
    566 FFFC03FC 5239 0001 0418              		addi.b	#1,CursorRow
    567 FFFC0402 1039 0001 041A              		move.b	TextRows,d0
    568 FFFC0408 B039 0001 0418              		cmp.b	CursorRow,d0
    569 FFFC040E 6220                        		bhi.s	icc1
    570 FFFC0410 1039 0001 041A              		move.b	TextRows,d0
    571 FFFC0416 13C0 0001 0418              		move.b	d0,CursorRow		; in case CursorRow is way over
    572 FFFC041C 5339 0001 0418              		subi.b	#1,CursorRow
    573 FFFC0422 4880                        		ext.w	d0
    574 FFFC0424 E340                        		asl.w	#1,d0
    575 FFFC0426 9179 0001 041C              		sub.w	d0,TextCurpos
    576 FFFC042C 6100 11B4                   		bsr		ScrollUp
    577 FFFC0430                             icc1:
    578 FFFC0430 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen.
                                             ;------------------------------------------------------------------------------
                                             ;
    584 FFFC0432                             DisplayString:
    585 FFFC0432 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    586 FFFC0436                             dspj1:
    587 FFFC0436 4281                        		clr.l	d1				; clear upper bits of d1
    588 FFFC0438 1219                        		move.b	(a1)+,d1		; move string char into d1
    589 FFFC043A 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    590 FFFC043E 6706                        		beq.s	dsret			
    591 FFFC0440 6100 FE1E                   		bsr		DisplayChar		; display character
    592 FFFC0444 60F0                        		bra.s	dspj1			; go back for next character
    593 FFFC0446                             dsret:
    594 FFFC0446 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    595 FFFC044A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen followed by carriage return / linefeed.
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 11
bootrom.asm
                                             ;
    601 FFFC044C                             DisplayStringCRLF:
    602 FFFC044C 6100 FFE4                   		bsr		DisplayString
    603 FFFC0450 6000 FDC8                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ;------------------------------------------------------------------------------
                                             ;
    609 FFFC0454                             DisplayString1:
    610 FFFC0454 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    611 FFFC0458 0241 00FF                   		andi.w	#255,d1			; max 255 chars
    612 FFFC045C 2001                        		move.l	d1,d0
    613 FFFC045E                             dspj11:
    614 FFFC045E 1219                        		move.b	(a1)+,d1		; move string char into d1
    615 FFFC0460 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    616 FFFC0464 6708                        		beq		dsret1			
    617 FFFC0466 6100 FDF8                   		bsr		DisplayChar		; display character
    618 FFFC046A 57C8 FFF2                   		dbeq	d0,dspj11		; go back for next character
    619 FFFC046E                             dsret1:
    620 FFFC046E 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    621 FFFC0472 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ; end string with CR,LF
                                             ;------------------------------------------------------------------------------
                                             ;
    628 FFFC0474                             DisplayString0:
    629 FFFC0474 6100 FFDE                   		bsr		DisplayString1
    630 FFFC0478 6000 FDA0                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Dispatch cursor functions
                                             ;------------------------------------------------------------------------------
                                             ;
    636 FFFC047C                             Cursor1:
    637 FFFC047C 0C41 00FF                   		cmpi.w	#0x00ff,d1
    638 FFFC0480 670E                        		beq		GetCursorPos
    639 FFFC0482 0C41 FF00                   		cmpi.w	#0xFF00,d1
    640 FFFC0486 6718                        		beq		SetCursorPos
    641 FFFC0488 4EB9 FFFC 1550              		jsr		ClearScreen
    642 FFFC048E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get the cursor position.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    650 FFFC0490                             GetCursorPos:
    651 FFFC0490 1239 0001 0419              		move.b	CursorCol,d1
    652 FFFC0496 E141                        		asl.w	#8,d1
    653 FFFC0498 1239 0001 0418              		move.b	CursorRow,d1
    654 FFFC049E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Set the position of the cursor, update the linear screen pointer.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 12
bootrom.asm
                                             ;------------------------------------------------------------------------------
                                             ;
    662 FFFC04A0                             SetCursorPos:
    663 FFFC04A0 48E7 6000                   		movem.l	d1/d2,-(a7)
    664 FFFC04A4 13C1 0001 0418              		move.b	d1,CursorRow
    665 FFFC04AA E049                        		lsr.w	#8,d1
    666 FFFC04AC 13C1 0001 0419              		move.b	d1,CursorCol
    667 FFFC04B2 1239 0001 0418              		move.b	CursorRow,d1
    668 FFFC04B8 4881                        		ext.w	d1
    669 FFFC04BA 1439 0001 041B              		move.b	TextCols,d2
    670 FFFC04C0 4882                        		ext.w	d2
    671 FFFC04C2 C2C2                        		mulu.w	d2,d1
    672 FFFC04C4 1439 0001 0419              		move.b	CursorCol,d2
    673 FFFC04CA D242                        		add.w	d2,d1
    674 FFFC04CC 33C1 0001 041C              		move.w	d1,TextCurpos
    675 FFFC04D2                             scp1:
    676 FFFC04D2 4CDF 0006                   		movem.l	(a7)+,d1/d2
    677 FFFC04D6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    682 FFFC04D8                             Set320x192:
    683 FFFC04D8 4DF9 FFE0 0000              		lea		VDGREG,a6			; a6 = pointer to register set
    684 FFFC04DE 41F9 FFFC 05AC              		lea		tbl1280x768,a0
    685 FFFC04E4 43EE 07C0                   		lea		$7C0(a6),a1			; a1 points to timing registers
    686 FFFC04E8 3D7C A123 07F2              		move.w	#$A123,$7F2(a6)		; unlock timing regs
    687 FFFC04EE 700E                        		moveq	#14,d0
    688 FFFC04F0                             .0001:
    689 FFFC04F0 32D8                        		move.w	(a0)+,(a1)+
    690 FFFC04F2 51C8 FFFC                   		dbra	d0,.0001
    691 FFFC04F6 3D7C 0000 07F2              		move.w	#$0000,$7F2(a6)		; lock timing regs
    692 FFFC04FC 4E75                        		rts
                                             
    694 FFFC04FE                             Set320x240:
    695 FFFC04FE 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    696 FFFC0504 4E75                        		rts
                                             
    698 FFFC0506                             Set400x300:
    699 FFFC0506 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    700 FFFC050C 3D7C 0001 07F0              		move.w	#1,$7F0(a6)			; 1 = divide by 2 mode
    701 FFFC0512 3D7C 0190 0406              		move.w	#400,$406(a6)		; bitmap width register
    702 FFFC0518 41F9 FFFC 058A              		lea		tbl800x600,a0
    703 FFFC051E 43EE 07C0                   		lea		$7C0(a6),a1			; a1 points to timing registers
    704 FFFC0522 3D7C A123 07F2              		move.w	#$A123,$7F2(a6)		; unlock timing regs
    705 FFFC0528 7010                        		moveq	#16,d0
    706 FFFC052A                             .0001:
    707 FFFC052A 32D8                        		move.w	(a0)+,(a1)+
    708 FFFC052C 51C8 FFFC                   		dbra	d0,.0001
    709 FFFC0530 3D7C 0000 07F2              		move.w	#$0000,$7F2(a6)		; lock timing regs
    710 FFFC0536 13FC 0032 0001 041B         		move.b	#50,TextCols
    711 FFFC053E 13FC 0025 0001 041A         		move.b	#37,TextRows
    712 FFFC0546 4E75                        		rts
                                             
    714 FFFC0548                             Set800x600:
    715 FFFC0548 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    716 FFFC054E 3D7C 0000 07F0              		move.w	#0,$7F0(a6)			; 0 = no divide
    717 FFFC0554 3D7C 0320 0406              		move.w	#800,$406(a6)		; bitmap width register
    718 FFFC055A 41F9 FFFC 058A              		lea		tbl800x600,a0
    719 FFFC0560 43EE 07C0                   		lea		$7C0(a6),a1			; a1 points to timing registers
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 13
bootrom.asm
    720 FFFC0564 3D7C A123 07F2              		move.w	#$A123,$7F2(a6)		; unlock timing regs
    721 FFFC056A 7010                        		moveq	#16,d0
    722 FFFC056C                             .0001:
    723 FFFC056C 32D8                        		move.w	(a0)+,(a1)+
    724 FFFC056E 51C8 FFFC                   		dbra	d0,.0001
    725 FFFC0572 3D7C 0000 07F2              		move.w	#$0000,$7F2(a6)		; lock timing regs
    726 FFFC0578 13FC 0064 0001 041B         		move.b	#100,TextCols
    727 FFFC0580 13FC 004B 0001 041A         		move.b	#75,TextRows
    728 FFFC0588 4E75                        		rts
                                             
                                             	align	2
                                             ;tbl640x480:
                                             ;	dc.w	800,525
    733 FFFC058A                             tbl800x600:
    734 FFFC058A 0420 0274 0028 00A8         	dc.w	1056,628,40,168,1,5,1056,256,628,28,1056,256,628,28,$EFD,$FD7,0
    735 FFFC0592 0001 0005 0420 0100         
    736 FFFC059A 0274 001C 0420 0100         
    737 FFFC05A2 0274 001C 0EFD 0FD7         
    738 FFFC05AA 0000                        
    739 FFFC05AC                             tbl1280x768:
    740 FFFC05AC 0690 031B 0043 00C9         	dc.w	1680,795,67,201,2,5,1680,400,795,27,1680,400,795,27,$EFD,$FD7,0
    741 FFFC05B4 0002 0005 0690 0190         
    742 FFFC05BC 031B 001B 0690 0190         
    743 FFFC05C4 031B 001B 0EFD 0FD7         
    744 FFFC05CC 0000                        
                                             
                                             ;------------------------------------------------------------------------------
                                             ; The z buffer is setup so that display has the lowest priority. This allows
                                             ; sprites to appear in front of graphics. At power on the buffer likely
                                             ; contains all zeros making graphics the highest priority.
                                             ;------------------------------------------------------------------------------
                                             
    752 FFFC05CE                             BootSetZBuffer:
    753 FFFC05CE 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    754 FFFC05D4 207C FF80 0000              		move.l	#VDGBUF,A0			; a0 = pointer to display buffer
    755 FFFC05DA 3D7C 0001 043E              		move.w	#$1,$43E(a6)		; switch to z buffer
    756 FFFC05E0 223C 0000 3A98              		move.l	#BMP_WIDTH*BMP_HEIGHT/8,D1		; number of words to update
    757 FFFC05E6                             .0001:
    758 FFFC05E6 20FC FFFF FFFF              		move.l	#$FFFFFFFF,(a0)+	; set z layer to 3
    759 FFFC05EC 5381                        		sub.l	#1,d1
    760 FFFC05EE 66F6                        		bne.s	.0001
    761 FFFC05F0 3D7C 0000 043E              		move.w	#$0,$43E(a6)		; switch to regular buffer
    762 FFFC05F6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; clear screen	
                                             ;
                                             ; Trashes:
                                             ;	a0,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    771 FFFC05F8                             BootClearScreen:
    772 FFFC05F8 207C FF80 0000              		move.l	#VDGBUF,A0
    773 FFFC05FE 700F                        		moveq	#DARK_BLUE,D0				; dark blue
    774 FFFC0600 223C 0001 D4C0              		move.l	#BMP_WIDTH*BMP_HEIGHT,D1	; number of pixels
    775 FFFC0606                             .loop1:
    776 FFFC0606 30C0                        		move.w	d0,(a0)+					; store it to the screen
    777 FFFC0608 5381                        		subq	#1,d1						; can't use dbra here
    778 FFFC060A 66FA                        		bne.s	.loop1
    779 FFFC060C 4DF9 FFE0 0000              		lea		VDGREG,a6
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 14
bootrom.asm
    780 FFFC0612 3D7C 0001 043E              		move.w	#1,$43E(a6)					; access z buffer
    781 FFFC0618 41F9 FF80 0000              		lea		VDGBUF,a0
    782 FFFC061E 70FF                        		move.l	#$FFFFFFFF,d0				; lowest priority
    783 FFFC0620 223C 0000 1D4C              		move.l	#BMP_WIDTH*BMP_HEIGHT/16,D1	; number of pixels
    784 FFFC0626                             .0002:
    785 FFFC0626 20C0                        		move.l	d0,(a0)+
    786 FFFC0628 5381                        		subq	#1,d1
    787 FFFC062A 66FA                        		bne.s	.0002
    788 FFFC062C 3D7C 0000 043E              		move.w	#0,$43E(a6)					; access normal buffer
    789 FFFC0632 6000 0F9A                   		bra		ClearVirtScreen				; clear the virtual screen too.
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Copy bands of color to the display controller's memory. These bands should
                                             ; show up if the bitmap address get toasted.
                                             ;------------------------------------------------------------------------------
                                             
    796 FFFC0636                             ColorBandMemory:
    797 FFFC0636 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
    798 FFFC063C 207C FF80 0000              		move.l	#$FF800000,a0
    799 FFFC0642 227C FF90 0000              		move.l	#$FF900000,a1
    800 FFFC0648 7200                        		move.l	#0,d1
    801 FFFC064A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    802 FFFC064E 262E 0C00                   		move.l	$0C00(a6),d3		; get random value
    803 FFFC0652                             .0002:
    804 FFFC0652 30C3                        		move.w	d3,(a0)+			; move to z buffer
    805 FFFC0654 2801                        		move.l	d1,d4
    806 FFFC0656 0284 0000 03FF              		and.l	#$03FF,d4
    807 FFFC065C 6608                        		bne.s	.0001
    808 FFFC065E 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    809 FFFC0662 262E 0C00                   		move.l	$0C00(a6),d3		; get random value
    810 FFFC0666                             .0001:
    811 FFFC0666 5281                        		addq	#1,d1
    812 FFFC0668 B1C9                        		cmpa	a1,a0
    813 FFFC066A 65E6                        		blo.s	.0002	
    814 FFFC066C 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; copy font to VDG ram
                                             ;
                                             ; The font address is 1/2 of the memory address that the cpu sees because
                                             ; the AV controller only deals with word accesses.
                                             ;
                                             ; Trashes:
                                             ;	a0,a1,a6,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    826 FFFC066E                             BootCopyFont:
    827 FFFC066E 2C7C FFE0 0000              		movea.l	#VDGREG,a6
                                             		; Setup font table
    829 FFFC0674 2D7C 0005 C000 0410         		move.l	#$5C000,$410(a6)	; set font table address 1/2 B8000
    830 FFFC067C 203C 0005 C004              		move.l	#$5C004,d0			; set bitmap address (directly follows)
    831 FFFC0682 4840                        		swap	d0
    832 FFFC0684 0040 9CE0                   		or.w	#%1001110011100000,d0	; set font fixed, width, height
    833 FFFC0688 4840                        		swap	d0
    834 FFFC068A 23C0 FF8B 8000              		move.l	d0,$FF8B8000
    835 FFFC0690 42B9 FF8B 8004              		clr.l	$FF8B8004			; clear glyph width table address (not used)
    836 FFFC0696 227C FF8B 8008              		movea.l	#$FF8B8008,a1		; font table address
                                             
    838 FFFC069C 41F9 FFFC 21A6              		lea		font8,a0
    839 FFFC06A2 223C 0000 1000              		move.l	#8*512,d1			; 512 chars * 8 bytes per char
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 15
bootrom.asm
                                             
    841 FFFC06A8 3D7C 0000 0414              		move.w	#0,$414(a6)			; select font id (0)
                                             
    843 FFFC06AE 7000                        		moveq	#0,d0				; zero out high order bits
    844 FFFC06B0                             cpyfnt:
    845 FFFC06B0 1018                        		move.b	(a0)+,d0			; get a byte
    846 FFFC06B2 32C0                        		move.w	d0,(a1)+			; store in font table
    847 FFFC06B4 51C9 FFFA                   		dbra	d1,cpyfnt
    848 FFFC06B8 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Trashes:
                                             ;	a6
                                             ;------------------------------------------------------------------------------
                                             
    859 FFFC06BA                             DispCharAt:
    860 FFFC06BA 2C7C FFE0 0000              		move.l	#VDGREG,a6
    861 FFFC06C0 4840                        		swap	d0						; save off d0 low
    862 FFFC06C2                             .0001:									; wait for character que to empty
    863 FFFC06C2 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    864 FFFC06C6 B07C 001C                   		cmp.w	#28,d0					; allow up 28 entries to be in progress
    865 FFFC06CA 64F6                        		bhs.s	.0001					; branch if too many chars queued
    866 FFFC06CC 4840                        		swap	d0						; get back d0 low
    867 FFFC06CE 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    868 FFFC06D2 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)		; set fg color
    869 FFFC06DA 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)		; set bk color
    870 FFFC06E2 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    871 FFFC06E6 3D42 0428                   		move.w	d2,$428(a6)			; set y pos
    872 FFFC06EA 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    873 FFFC06F0 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    874 FFFC06F6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;------------------------------------------------------------------------------
                                             
    881 FFFC06F8                             DispChar:
    882 FFFC06F8 48E7 4002                   		movem.l	d1/a6,-(a7)
    883 FFFC06FC 2C7C FFE0 0000              		move.l	#VDGREG,a6
    884 FFFC0702 4840                        		swap	d0					; save off d0 low
    885 FFFC0704                             .0001:								; wait for character que to empty
    886 FFFC0704 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    887 FFFC0708 B07C 001C                   		cmp.w	#28,d0				; allow up 28 entries to be in progress
    888 FFFC070C 64F6                        		bhs.s	.0001				; branch if too many chars queued
    889 FFFC070E 4840                        		swap	d0					; get back d0 low
    890 FFFC0710 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    891 FFFC0714 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)	; set fg color
    892 FFFC071C 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)	; set bk color
    893 FFFC0724 1239 0001 0419              		move.b	CursorCol,d1
    894 FFFC072A 4881                        		ext.w	d1
    895 FFFC072C E741                        		asl.w	#3,d1
    896 FFFC072E 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    897 FFFC0732 1239 0001 0418              		move.b	CursorRow,d1
    898 FFFC0738 4881                        		ext.w	d1
    899 FFFC073A E741                        		asl.w	#3,d1
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 16
bootrom.asm
    900 FFFC073C 3D41 0428                   		move.w	d1,$428(a6)			; set y pos
    901 FFFC0740 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent (defunct - in font table)
    902 FFFC0746 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    903 FFFC074C 4CDF 4002                   		movem.l	(a7)+,d1/a6
    904 FFFC0750 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Cursor Routines
                                             ;
                                             ; BIOS uses cursor #0. The BIOS cursor is 10 x 10
                                             ;==============================================================================
                                             
    912 FFFC0752                             EnableCursor:
    913 FFFC0752 48E7 8002                   		movem.l	d0/a6,-(a7)
    914 FFFC0756 4DF9 FFE0 0000              		lea		VDGREG,a6
    915 FFFC075C 202E 0108                   		move.l	$108(a6),d0
    916 FFFC0760 08C0 0000                   		bset	#0,d0
    917 FFFC0764 2D40 0108                   		move.l	d0,$108(a6)
    918 FFFC0768 4CDF 4001                   		movem.l	(a7)+,d0/a6
    919 FFFC076C 4E75                        		rts
                                             		
    921 FFFC076E                             DisableCursor:
    922 FFFC076E 48E7 8002                   		movem.l	d0/a6,-(a7)
    923 FFFC0772 4DF9 FFE0 0000              		lea		VDGREG,a6
    924 FFFC0778 202E 0108                   		move.l	$108(a6),d0
    925 FFFC077C 0880 0000                   		bclr	#0,d0
    926 FFFC0780 2D40 0108                   		move.l	d0,$108(a6)
    927 FFFC0784 4CDF 4001                   		movem.l	(a7)+,d0/a6
    928 FFFC0788 4E75                        		rts
                                             		
                                             ;------------------------------------------------------------------------------
                                             ; Sync the hardware cursor's position to the text cursor position.
                                             ;------------------------------------------------------------------------------
                                             
    934 FFFC078A                             SyncCursor:
    935 FFFC078A 48E7 4002                   		movem.l	d1/a6,-(a7)
    936 FFFC078E 2C7C FFE0 0000              		move.l	#VDGREG,a6
                                             ;		move.w	#$0A0A,VDG_CURSZ(a6)	; defunct size set in SetCursorImage64
    938 FFFC0794 1239 0001 0419              		move.b	CursorCol,d1
    939 FFFC079A 4881                        		ext.w	d1
    940 FFFC079C E741                        		asl.w	#3,d1
    941 FFFC079E 5341                        		sub.w	#1,d1
    942 FFFC07A0 3D41 0204                   		move.w	d1,VDG_CUR0X(a6)
    943 FFFC07A4 1239 0001 0418              		move.b	CursorRow,d1
    944 FFFC07AA 4881                        		ext.w	d1
    945 FFFC07AC E741                        		asl.w	#3,d1
    946 FFFC07AE 5341                        		sub.w	#1,d1
    947 FFFC07B0 3D41 0206                   		move.w	d1,VDG_CUR0Y(a6)
    948 FFFC07B4 4CDF 4002                   		movem.l	(a7)+,d1/a6
    949 FFFC07B8 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Color
                                             ; - cursor color is a 32 bit vector
                                             ;
                                             ;	aaaaaaaa--ifffff-rrrrrgggggbbbbb
                                             ;	    |     |  |     |    |    |
                                             ;       |     |  |     |    |    +-- blue
                                             ;     	|     |  |     |    +------- green
                                             ;       |     |  |     +------------ red
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 17
bootrom.asm
                                             ;       |     |  +------------------ flashrate 0xxxx = no flash
                                             ;       |     +--------------------- invert video (rgb ignored)
                                             ;       +--------------------------- alpha 0 = cursor color, 255 = background
                                             ;
                                             ;   flash rate
                                             ;		 0xxxx = no flash
                                             ;        00001 = 1/8 vsync (7.5 Hz)
                                             ;	     00010 = 1/16 vsync (3.75 Hz)
                                             ;        00100 = 1/32 vsync (1.875 Hz)
                                             ;------------------------------------------------------------------------------
                                             
    971 FFFC07BA                             SetCursorColor:
    972 FFFC07BA 2F02                        		move.l  d2/a5/a6,-(a7)
    973 FFFC07BC 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    974 FFFC07C2 2C7C FFE0 0000              		move.l	#VDGREG,a6
    975 FFFC07C8 3D7C 0004 0446              		move.w	#%00100,VDG_CURFLSH(a6)
    976 FFFC07CE 3D7C 7FFF 0448              		move.w	#%0111111111111111,VDG_CURCLR0(a6)
    977 FFFC07D4 743F                        		moveq	#63,d2
    978 FFFC07D6                             .0001:
    979 FFFC07D6 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    980 FFFC07DA 262D 0C00                   		move.l	$0C00(a5),d3
    981 FFFC07DE 0283 0000 FFFF              		and.l	#$FFFF,d3
    982 FFFC07E4 2CC3                        		move.l	d3,(a6)+
    983 FFFC07E6 51CA FFEE                   		dbra	d2,.0001
    984 FFFC07EA 241F                        		move.l	(a7)+,d2/a5/a6
    985 FFFC07EC 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Put some values in the cursors color palette so they will be visible.
                                             ; Otherwise they will all be black.
                                             ;------------------------------------------------------------------------------
                                             
    992 FFFC07EE                             InitCursorColorPalette:
    993 FFFC07EE 2F02                        		move.l  d2/d3/a5/a6,-(a7)
    994 FFFC07F0 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    995 FFFC07F6 2C7C FFE0 0000              		move.l	#VDGREG,a6
    996 FFFC07FC 743F                        		moveq	#63,d2
    997 FFFC07FE                             .0001:
    998 FFFC07FE 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    999 FFFC0802 262D 0C00                   		move.l	$0C00(a5),d3		; move random number
   1000 FFFC0806 0283 FF00 7FFF              		and.l	#$FF007FFF,d3		; mask off other attributes
                                             		;or.l	#$FF000000,d3		; alpha blend to background color
   1002 FFFC080C 2CC3                        		move.l	d3,(a6)+
   1003 FFFC080E 51CA FFEE                   		dbra	d2,.0001
   1004 FFFC0812 241F                        		move.l	(a7)+,d2/d3/a5/a6
   1005 FFFC0814 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Setup an image for the cursor.
                                             ; Cursor may be up to 32h x 512v pixels.
                                             ; The BIOS cursor is 10 x 10
                                             ;------------------------------------------------------------------------------
                                             
   1013 FFFC0816                             SetCursorImage64:
   1014 FFFC0816 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
   1015 FFFC081A 41F9 FFFC 0884              		lea		CursorImage64,a0
   1016 FFFC0820 7214                        		moveq	#20,d1					; set count number of long words to move
   1017 FFFC0822 227C FF8B 7E00              		move.l	#$FF8B7E00,a1
   1018 FFFC0828                             .0001:
   1019 FFFC0828 22D8                        		move.l	(a0)+,(a1)+
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 18
bootrom.asm
   1020 FFFC082A 51C9 FFFC                   		dbra	d1,.0001
   1021 FFFC082E 343C 0200                   		move.w	#$200,d2
   1022 FFFC0832 207C FFE0 0000              		move.l	#VDGREG,a0
   1023 FFFC0838 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
   1024 FFFC083E                             .0002:
   1025 FFFC083E 21BC 0005 BF00 2000         		move.l	#$5BF00,(a0,d2.w)
   1026 FFFC0846 31BC 0249 2008              		move.w	#$0249,8(a0,d2.w)	; set cursor size 10x10
   1027 FFFC084C 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1028 FFFC0850 262E 0C00                   		move.l	$0C00(a6),d3
   1029 FFFC0854 0243 00FF                   		and.w	#$FF,d3
   1030 FFFC0858 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
   1031 FFFC085C 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1032 FFFC0860 262E 0C00                   		move.l	$0C00(a6),d3
   1033 FFFC0864 0243 00FF                   		and.w	#$FF,d3
   1034 FFFC0868 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
   1035 FFFC086C 363C 0000                   		move.w	#$0,d3
   1036 FFFC0870 3183 200A                   		move.w	d3,10(a0,d2.w)		; set z pos
   1037 FFFC0874 0642 0010                   		add.w	#$10,d2
   1038 FFFC0878 B47C 0400                   		cmp.w	#$400,d2
   1039 FFFC087C 65C0                        		blo.s	.0002
   1040 FFFC087E 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6
   1041 FFFC0882 4E75                        		rts
                                             		
                                             	align	4
   1044 FFFC0884                             CursorImage64:
   1045 FFFC0884 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
   1046 FFFC088C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1047 FFFC0894 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1048 FFFC089C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1049 FFFC08A4 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1050 FFFC08AC 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1051 FFFC08B4 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1052 FFFC08BC 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1053 FFFC08C4 40501000 00000000           	dc.l	%01000000010100000001000000000000,$00
   1054 FFFC08CC 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
   1055 FFFC08D4 00000000 00000000           	dc.l	$00,$00
   1056 FFFC08DC 00000000 00000000           	dc.l	$00,$00
                                             
   1058 FFFC08E4                             BouncingBalls:
   1059 FFFC08E4 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
                                             
                                             		; Setup background depth
   1062 FFFC08E8 227C FFE0 0000              		move.l	#VDGREG,a1
   1063 FFFC08EE 2C7C FFDC 0000              		move.l	#$FFDC0000,a6		; set I/O address
   1064 FFFC08F4 207C FF80 0000              		movea.l	#$FF800000,a0		; address of z buffer ram
   1065 FFFC08FA 243C 0000 1D4C              		move.l	#BMP_WIDTH*BMP_HEIGHT/16,d2
                                             ;		move.w	#1,$43E(a1)			; select z buffer
   1067 FFFC0900                             .0003:
                                             ;		clr.w	$0C04(a6)			; gen next number
                                             ;		move.l	$0C00(a6),d3		; get random value
                                             ;		move.l	d3,(a0)+			; move to z buffer
                                             ;		sub.l	#1,d2
                                             ;		bne.s	.0003
                                             ;		move.w	#0,$43E(a1)			; deselect z buffer
                                             		
                                             		; Setup sprite image
   1076 FFFC0900 41F9 FFFC 0A54              		lea		BallImage,a0
   1077 FFFC0906 721A                        		moveq	#26,d1					; set count number of long words to move
   1078 FFFC0908 227C FF8B 7D00              		move.l	#$FF8B7D00,a1
   1079 FFFC090E 45F9 0001 0500              		lea		ball_dx,a2
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 19
bootrom.asm
   1080 FFFC0914 47F9 0001 0600              		lea		ball_dy,a3
   1081 FFFC091A                             .0001:
   1082 FFFC091A 22D8                        		move.l	(a0)+,(a1)+
   1083 FFFC091C 51C9 FFFC                   		dbra	d1,.0001
   1084 FFFC0920 41F9 FFFC 0ACC              		lea		XImage,a0
   1085 FFFC0926 721A                        		moveq	#26,d1					; set count number of long words to move
   1086 FFFC0928 227C FF8B 7C00              		move.l	#$FF8B7C00,a1
   1087 FFFC092E                             .0012:
   1088 FFFC092E 22D8                        		move.l	(a0)+,(a1)+
   1089 FFFC0930 51C9 FFFC                   		dbra	d1,.0012
   1090 FFFC0934 343C 0210                   		move.w	#$210,d2
   1091 FFFC0938 207C FFE0 0000              		move.l	#VDGREG,a0
   1092 FFFC093E 217C FFFF FFFF 0108         		move.l	#$FFFFFFFF,$108(a0)		; enable sprites
   1093 FFFC0946 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
   1094 FFFC094C                             .0002:
   1095 FFFC094C B47C 0300                   		cmp.w	#$300,d2
   1096 FFFC0950 6408                        		bhs.s	.0014
   1097 FFFC0952 21BC 0005 BE80 2000         		move.l	#$5BE80,(a0,d2.w)	; set image = 'O'
   1098 FFFC095A                             .0014:
   1099 FFFC095A 31BC 0350 2008              		move.w	#$0350,8(a0,d2.w)	; set cursor size 16hx13v
   1100 FFFC0960 31BC 00D0 200C              		move.w	#208,12(a0,d2.w)	; set total pixel count (16*13)
   1101 FFFC0966 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1102 FFFC096A 262E 0C00                   		move.l	$0C00(a6),d3
   1103 FFFC096E 0243 00FF                   		and.w	#$FF,d3
   1104 FFFC0972 0643 0100                   		add.w	#256,d3
   1105 FFFC0976 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
   1106 FFFC097A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1107 FFFC097E 262E 0C00                   		move.l	$0C00(a6),d3
   1108 FFFC0982 0243 00FF                   		and.w	#$FF,d3
   1109 FFFC0986 0643 001C                   		add.w	#28,d3
   1110 FFFC098A 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
   1111 FFFC098E 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1112 FFFC0992 262E 0C00                   		move.l	$0C00(a6),d3
   1113 FFFC0996 0243 0000                   		and.w	#$0,d3
   1114 FFFC099A 3183 200A                   		move.w	d3,10(a0,d2.w)		; set z pos
   1115 FFFC099E 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1116 FFFC09A2 262E 0C00                   		move.l	$0C00(a6),d3
   1117 FFFC09A6 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1118 FFFC09A8 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1119 FFFC09AA 3583 2000                   		move.w	d3,(a2,d2.w)		; set dx
   1120 FFFC09AE 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1121 FFFC09B2 262E 0C00                   		move.l	$0C00(a6),d3
   1122 FFFC09B6 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1123 FFFC09B8 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1124 FFFC09BA 3783 2000                   		move.w	d3,(a3,d2.w)		; set dy
   1125 FFFC09BE 0642 0010                   		add.w	#$10,d2
   1126 FFFC09C2 B47C 0300                   		cmp.w	#$300,d2
   1127 FFFC09C6 6508                        		blo.s	.0011
   1128 FFFC09C8 21BC 0005 BE00 2000         		move.l	#$5BE00,(a0,d2.w)
   1129 FFFC09D0                             .0011:
   1130 FFFC09D0 B47C 0400                   		cmp.w	#$400,d2
   1131 FFFC09D4 6500 FF76                   		blo.s	.0002
                                             ;
                                             ; Move balls around	
                                             ; Moves sprites 1-31 around on the screen (sprite 0 is the BIOS cursor)
                                             ;
                                             ; a0 = pointer to AV controller's register set
                                             ; a2 = pointer to sprite movement dx table
                                             ; a3 = pointer to sprite movement dy table
                                             ;
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 20
bootrom.asm
   1140 FFFC09D8                             .0010:	
   1141 FFFC09D8 3428 0582                   		move.w	$582(a0),d2			; get irq status
   1142 FFFC09DC 0802 0000                   		btst	#0,d2				; check vertical blank
   1143 FFFC09E0 67F6                        		beq.s	.0010				; not blank yet
   1144 FFFC09E2 317C 0001 0582              		move.w	#1,$582(a0)			; reset vert blank indicator
                                             
   1146 FFFC09E8 42A8 0400                   		clr.l	$400(a0)			; reset bitmap base and
   1147 FFFC09EC 317C 0190 0406              		move.w	#BMP_WIDTH,$406(a0)	; bitmap width register
                                             
   1149 FFFC09F2 343C 0210                   		move.w	#$210,d2			; offset of sprite #1 regsiter
   1150 FFFC09F6                             .0008:
   1151 FFFC09F6 3632 2000                   		move.w	(a2,d2.w),d3		; get dx
   1152 FFFC09FA D770 2004                   		add.w	d3,4(a0,d2.w)		; add to hpos
   1153 FFFC09FE 3633 2000                   		move.w	(a3,d2.w),d3		l get dy
   1154 FFFC0A02 D770 2006                   		add.w	d3,6(a0,d2.w)		; add to vpos
   1155 FFFC0A06 0C70 0210 2004              		cmp.w	#BMP_WIDTH+128,4(a0,d2.w)	; X hit limit ?
   1156 FFFC0A0C 6504                        		blo.s	.0004
   1157 FFFC0A0E 4472 2000                   		neg.w	(a2,d2.w)			; flip dx
   1158 FFFC0A12                             .0004:
   1159 FFFC0A12 0C70 0080 2004              		cmp.w	#128,4(a0,d2.w)		; X hit limit ?
   1160 FFFC0A18 6404                        		bhs.s	.0005
   1161 FFFC0A1A 4472 2000                   		neg.w	(a2,d2.w)			; flip dx
   1162 FFFC0A1E                             .0005:
   1163 FFFC0A1E 0C70 0148 2006              		cmp.w	#BMP_HEIGHT+28,6(a0,d2.w)	; Y hit limit ?
   1164 FFFC0A24 6504                        		blo.s	.0006
   1165 FFFC0A26 4473 2000                   		neg.w	(a3,d2.w)			; flip dy
   1166 FFFC0A2A                             .0006:
   1167 FFFC0A2A 0C70 001C 2006              		cmp.w	#28,6(a0,d2.w)		; Y hit limit ?
   1168 FFFC0A30 6404                        		bhs.s	.0007
   1169 FFFC0A32 4473 2000                   		neg.w	(a3,d2.w)			; flip dy
   1170 FFFC0A36                             .0007:
   1171 FFFC0A36 0642 0010                   		add.w	#$10,d2				; advance to next sprite register set
   1172 FFFC0A3A B47C 0400                   		cmp.w	#$400,d2			; is end of register set hit ?
   1173 FFFC0A3E 65B6                        		blo.s	.0008	
                                             		; delay a bit to allow display to persist
   1175 FFFC0A40 263C 0001 3880              		move.l	#80000,d3
   1176 FFFC0A46                             .0009:
   1177 FFFC0A46 5383                        		sub.l	#1,d3
   1178 FFFC0A48 66FC                        		bne.s	.0009
                                             ;		bsr		CheckForKey			; look for keypress to end. zf=0 if key
                                             ;		tst.b	d1
   1181 FFFC0A4A 678C                        		beq.s	.0010
   1182 FFFC0A4C 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6	; restore regs
   1183 FFFC0A50                             .0015:
   1184 FFFC0A50 4E75                        		rts
                                             
                                             
   1187 FFFC0A52 FF FF                       		align	4
   1188 FFFC0A54                             BallImage:
   1189 FFFC0A54 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1190 FFFC0A5C 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
   1191 FFFC0A64 15555554 00000000           	dc.l	%00010101010101010101010101010100,%00000000000000000000000000000000
   1192 FFFC0A6C 55000055 00000000           	dc.l	%01010101000000000000000001010101,%00000000000000000000000000000000
   1193 FFFC0A74 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1194 FFFC0A7C 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1195 FFFC0A84 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1196 FFFC0A8C 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1197 FFFC0A94 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1198 FFFC0A9C 15000054 00000000           	dc.l	%00010101000000000000000001010100,%00000000000000000000000000000000
   1199 FFFC0AA4 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 21
bootrom.asm
   1200 FFFC0AAC 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1201 FFFC0AB4 00555500 00000000           	dc.l	%00000000010101010101010100000000,%00000000000000000000000000000000
   1202 FFFC0ABC 00000000 00000000           	dc.l	$00,$00
   1203 FFFC0AC4 00000000 00000000           	dc.l	$00,$00
   1204 FFFC0ACC                             XImage:
   1205 FFFC0ACC 50000050 00000000           	dc.l	%01010000000000000000000001010000,%00000000000000000000000000000000
   1206 FFFC0AD4 14000140 00000000           	dc.l	%00010100000000000000000101000000,%00000000000000000000000000000000
   1207 FFFC0ADC 05000500 00000000           	dc.l	%00000101000000000000010100000000,%00000000000000000000000000000000
   1208 FFFC0AE4 01401400 00000000           	dc.l	%00000001010000000001010000000000,%00000000000000000000000000000000
   1209 FFFC0AEC 00505000 00000000           	dc.l	%00000000010100000101000000000000,%00000000000000000000000000000000
   1210 FFFC0AF4 00154000 00000000           	dc.l	%00000000000101010100000000000000,%00000000000000000000000000000000
   1211 FFFC0AFC 00050000 00000000           	dc.l	%00000000000001010000000000000000,%00000000000000000000000000000000
   1212 FFFC0B04 00154000 00000000           	dc.l	%00000000000101010100000000000000,%00000000000000000000000000000000
   1213 FFFC0B0C 00505000 00000000           	dc.l	%00000000010100000101000000000000,%00000000000000000000000000000000
   1214 FFFC0B14 01401400 00000000           	dc.l	%00000001010000000001010000000000,%00000000000000000000000000000000
   1215 FFFC0B1C 05000500 00000000           	dc.l	%00000101000000000000010100000000,%00000000000000000000000000000000
   1216 FFFC0B24 14000140 00000000           	dc.l	%00010100000000000000000101000000,%00000000000000000000000000000000
   1217 FFFC0B2C 50000050 00000000           	dc.l	%01010000000000000000000001010000,%00000000000000000000000000000000
   1218 FFFC0B34 00000000 00000000           	dc.l	$00,$00
   1219 FFFC0B3C 00000000 00000000           	dc.l	$00,$00
                                             	
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	a0			pointer to string
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Returns:
                                             ;	a0			points to byte after NULL character
                                             ;	d1.w		updated x position
                                             ; Trashes:
                                             ;	d0,a6
                                             ;------------------------------------------------------------------------------
                                             
   1233 FFFC0B44                             DispStringAt:
   1234 FFFC0B44                             .0003:
   1235 FFFC0B44 7000                        		moveq	#0,d0					; zero out high order bits
   1236 FFFC0B46 1018                        		move.b	(a0)+,d0				; get character from string into d0
   1237 FFFC0B48 6708                        		beq.s	.0002					; end of string ?
   1238 FFFC0B4A 6100 FB6E                   		bsr		DispCharAt
   1239 FFFC0B4E 5041                        		add.w	#8,d1					; increment xpos
   1240 FFFC0B50 60F2                        		bra.s	.0003
   1241 FFFC0B52                             .0002:
   1242 FFFC0B52 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display nybble in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1248 FFFC0B54                             DisplayNybble:
   1249 FFFC0B54 3F01                        		move.w	d1,-(a7)
   1250 FFFC0B56 0201 000F                   		andi.b	#0xF,d1
   1251 FFFC0B5A 0601 0030                   		addi.b	#'0',d1
   1252 FFFC0B5E 0C01 0039                   		cmpi.b	#'9',d1
   1253 FFFC0B62 6302                        		bls.s	dispnyb1
   1254 FFFC0B64 5E01                        		addi.b	#7,d1
   1255 FFFC0B66                             dispnyb1:
   1256 FFFC0B66 6100 F6F8                   		bsr		DisplayChar
   1257 FFFC0B6A 321F                        		move.w	(a7)+,d1
   1258 FFFC0B6C 4E75                        		rts
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 22
bootrom.asm
                                             ;------------------------------------------------------------------------------
                                             ; Display the byte in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1264 FFFC0B6E                             DisplayByte:
   1265 FFFC0B6E 3F01                        		move.w	d1,-(a7)
   1266 FFFC0B70 E819                        		ror.b	#4,d1
   1267 FFFC0B72 6100 FFE0                   		bsr		DisplayNybble
   1268 FFFC0B76 E919                        		rol.b	#4,d1
   1269 FFFC0B78 6100 FFDA                   		bsr		DisplayNybble
   1270 FFFC0B7C 321F                        		move.w	(a7)+,d1
   1271 FFFC0B7E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the 32 bit word in D1.L
                                             ;------------------------------------------------------------------------------
                                             ;
   1277 FFFC0B80                             DisplayWord:
   1278 FFFC0B80 E199                        		rol.l	#8,d1
   1279 FFFC0B82 6100 FFEA                   		bsr		DisplayByte
   1280 FFFC0B86 E199                        		rol.l	#8,d1
   1281 FFFC0B88 6100 FFE4                   		bsr		DisplayByte
   1282 FFFC0B8C E199                        		rol.l	#8,d1
   1283 FFFC0B8E 6100 FFDE                   		bsr		DisplayByte
   1284 FFFC0B92 E199                        		rol.l	#8,d1
   1285 FFFC0B94 6100 FFD8                   		bsr		DisplayByte
   1286 FFFC0B98 4E75                        		rts
                                             
   1288 FFFC0B9A                             DisplayMem:
   1289 FFFC0B9A 123C 003A                   		move.b	#':',d1
   1290 FFFC0B9E 4EB9 FFFC 0260              		jsr		DisplayChar
   1291 FFFC0BA4 2208                        		move.l	a0,d1
   1292 FFFC0BA6 4EB9 FFFC 0B80              		jsr		DisplayWord
   1293 FFFC0BAC 7407                        		moveq	#7,d2
   1294 FFFC0BAE                             dspmem1:
   1295 FFFC0BAE 123C 0020                   		move.b	#' ',d1
   1296 FFFC0BB2 4EB9 FFFC 0260              		jsr		DisplayChar
   1297 FFFC0BB8 1218                        		move.b	(a0)+,d1
   1298 FFFC0BBA 4EB9 FFFC 0B6E              		jsr		DisplayByte
   1299 FFFC0BC0 51CA FFEC                   		dbra	d2,dspmem1
   1300 FFFC0BC4 4EF9 FFFC 021A              		jmp		CRLF
                                             
                                             ;==============================================================================
                                             ; Keyboard stuff
                                             ;
                                             ; KeyState2_
                                             ; 876543210
                                             ; ||||||||+ = shift
                                             ; |||||||+- = alt
                                             ; ||||||+-- = control
                                             ; |||||+--- = numlock
                                             ; ||||+---- = capslock
                                             ; |||+----- = scrolllock
                                             ; ||+------ =
                                             ; |+------- = 
                                             ; +-------- = extended
                                             ;
                                             ;==============================================================================
                                             
   1319 FFFC0BCA                             _KeybdGetStatus:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 23
bootrom.asm
   1320 FFFC0BCA 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1321 FFFC0BD0 4E75                        		rts
                                             
                                             ; Get the scancode from the keyboard port
                                             ;
   1325 FFFC0BD2                             _KeybdGetScancode:
   1326 FFFC0BD2 7200                        		moveq	#0,d1
   1327 FFFC0BD4 1239 FFDC 0000              		move.b	KEYBD,d1				; get the scan code
   1328 FFFC0BDA 13FC 0000 FFDC 0001         		move.b	#0,KEYBD+1				; clear receive register
   1329 FFFC0BE2 4E75                        		rts
                                             
                                             ; Recieve a byte from the keyboard, used after a command is sent to the
                                             ; keyboard in order to wait for a response.
                                             ;
   1334 FFFC0BE4                             KeybdRecvByte:
   1335 FFFC0BE4 2F03                        		move.l	d3,-(a7)
   1336 FFFC0BE6 363C 0064                   		move.w	#100,d3		; wait up to 1s
   1337 FFFC0BEA                             .0003:
   1338 FFFC0BEA 6100 FFDE                   		bsr		_KeybdGetStatus	; wait for response from keyboard
   1339 FFFC0BEE 4A01                        		tst.b	d1
   1340 FFFC0BF0 6B0E                        		bmi		.0004		; is input buffer full ? yes, branch
   1341 FFFC0BF2 6100 02C4                   		bsr		Wait10ms		; wait a bit
   1342 FFFC0BF6 51CB FFF2                   		dbra	d3,.0003	; go back and try again
   1343 FFFC0BFA 261F                        		move.l	(a7)+,d3
   1344 FFFC0BFC 72FF                        		moveq	#-1,d1			; return -1
   1345 FFFC0BFE 4E75                        		rts
   1346 FFFC0C00                             .0004:
   1347 FFFC0C00 6100 FFD0                   		bsr		_KeybdGetScancode
   1348 FFFC0C04 261F                        		move.l	(a7)+,d3
   1349 FFFC0C06 4E75                        		rts
                                             
                                             
                                             ; Wait until the keyboard transmit is complete
                                             ; Returns .CF = 1 if successful, .CF=0 timeout
                                             ;
   1355 FFFC0C08                             KeybdWaitTx:
   1356 FFFC0C08 48E7 3000                   		movem.l	d2/d3,-(a7)
   1357 FFFC0C0C 7664                        		moveq	#100,d3		; wait a max of 1s
   1358 FFFC0C0E                             .0001:
   1359 FFFC0C0E 6100 FFBA                   		bsr		_KeybdGetStatus
   1360 FFFC0C12 0801 0006                   		btst	#6,d1		; check for transmit complete bit
   1361 FFFC0C16 6610                        		bne	    .0002		; branch if bit set
   1362 FFFC0C18 6100 029E                   		bsr		Wait10ms		; delay a little bit
   1363 FFFC0C1C 51CB FFF0                   		dbra	d3,.0001	; go back and try again
   1364 FFFC0C20 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1365 FFFC0C24 72FF                        		moveq	#-1,d1		; return -1
   1366 FFFC0C26 4E75                        		rts
   1367 FFFC0C28                             .0002:
   1368 FFFC0C28 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1369 FFFC0C2C 7200                        		moveq	#0,d1		; return 0
   1370 FFFC0C2E 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; get key pending status into d1.b
                                             ;------------------------------------------------------------------------------
                                             ;
   1377 FFFC0C30                             CheckForKey:
   1378 FFFC0C30 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1379 FFFC0C36 6A06                        		bpl.s	cfk1
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 24
bootrom.asm
   1380 FFFC0C38 123C 0001                   		move.b	#1,d1
   1381 FFFC0C3C 4E75                        		rts
   1382 FFFC0C3E                             cfk1:
   1383 FFFC0C3E 4201                        		clr.b	d1
   1384 FFFC0C40 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1389 FFFC0C42                             GetKey:
   1390 FFFC0C42 6100 0022                   		bsr		KeybdGetCharWait
   1391 FFFC0C46 0C39 0000 0001 0424         		cmpi.b	#0,KeybdEcho	; is keyboard echo on ?
   1392 FFFC0C4E 670C                        		beq.s	gk1
   1393 FFFC0C50 0C01 000D                   		cmpi.b	#'\r',d1		; convert CR keystroke into CRLF
   1394 FFFC0C54 6700 F5C4                   		beq		CRLF
   1395 FFFC0C58 6100 F606                   		bsr		DisplayChar
   1396 FFFC0C5C                             gk1:
   1397 FFFC0C5C 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1403 FFFC0C5E                             KeybdGetCharNoWait:
   1404 FFFC0C5E 4239 0001 0425              		clr.b	KeybdWaitFlag
   1405 FFFC0C64 6008                        		bra		KeybdGetChar
                                             
   1407 FFFC0C66                             KeybdGetCharWait:
   1408 FFFC0C66 13FC FFFF 0001 0425         		move.b	#-1,KeybdWaitFlag
                                             
   1410 FFFC0C6E                             KeybdGetChar:
   1411 FFFC0C6E 48E7 3080                   		movem.l	d2/d3/a0,-(a7)
   1412 FFFC0C72                             .0003:
   1413 FFFC0C72 6100 FF56                   		bsr		_KeybdGetStatus			; check keyboard status for key available
   1414 FFFC0C76 6B10                        		bmi		.0006					; yes, go process
   1415 FFFC0C78 4A39 0001 0425              		tst.b	KeybdWaitFlag			; are we willing to wait for a key ?
   1416 FFFC0C7E 6BF2                        		bmi		.0003					; yes, branch back
   1417 FFFC0C80 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1418 FFFC0C84 72FF                        		moveq	#-1,d1					; flag no char available
   1419 FFFC0C86 4E75                        		rts
   1420 FFFC0C88                             .0006:
   1421 FFFC0C88 6100 FF48                   		bsr		_KeybdGetScancode
   1422 FFFC0C8C                             .0001:
   1423 FFFC0C8C 33FC 0001 FFDC 0600         		move.w	#1,leds
   1424 FFFC0C94 B23C 00F0                   		cmp.b	#SC_KEYUP,d1
   1425 FFFC0C98 6700 00CA                   		beq		.doKeyup
   1426 FFFC0C9C B23C 00E0                   		cmp.b	#SC_EXTEND,d1
   1427 FFFC0CA0 6700 00CE                   		beq		.doExtend
   1428 FFFC0CA4 B23C 0014                   		cmp.b	#SC_CTRL,d1
   1429 FFFC0CA8 6700 00D2                   		beq		.doCtrl
   1430 FFFC0CAC B23C 0012                   		cmp.b	#SC_LSHIFT,d1
   1431 FFFC0CB0 6700 0134                   		beq		.doShift
   1432 FFFC0CB4 B23C 0059                   		cmp.b	#SC_RSHIFT,d1
   1433 FFFC0CB8 6700 012C                   		beq		.doShift
   1434 FFFC0CBC B23C 0077                   		cmp.b	#SC_NUMLOCK,d1
   1435 FFFC0CC0 6700 014C                   		beq		.doNumLock
   1436 FFFC0CC4 B23C 0058                   		cmp.b	#SC_CAPSLOCK,d1
   1437 FFFC0CC8 6700 0154                   		beq		.doCapsLock
   1438 FFFC0CCC B23C 007E                   		cmp.b	#SC_SCROLLLOCK,d1
   1439 FFFC0CD0 6700 015C                   		beq		.doScrollLock
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 25
bootrom.asm
   1440 FFFC0CD4 B23C 0011                   		cmp.b   #SC_ALT,d1
   1441 FFFC0CD8 6700 00CA                   		beq     .doAlt
   1442 FFFC0CDC 1439 0001 0426              		move.b	_KeyState1,d2			; check key up/down
   1443 FFFC0CE2 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup status
   1444 FFFC0CEA 4A02                        		tst.b	d2
   1445 FFFC0CEC 6684                        		bne	    .0003					; ignore key up
   1446 FFFC0CEE B23C 000D                   		cmp.b   #SC_TAB,d1
   1447 FFFC0CF2 6700 00D8                   		beq     .doTab
   1448 FFFC0CF6                             .0013:
   1449 FFFC0CF6 1439 0001 0427              		move.b	_KeyState2,d2
   1450 FFFC0CFC 6A1E                        		bpl		.0010					; is it extended code ?
   1451 FFFC0CFE 0202 007F                   		and.b	#$7F,d2					; clear extended bit
   1452 FFFC0D02 13C2 0001 0427              		move.b	d2,_KeyState2
   1453 FFFC0D08 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup
   1454 FFFC0D10 41F9 FFFC 1148              		lea		_keybdExtendedCodes,a0
   1455 FFFC0D16 1230 1000                   		move.b	(a0,d1.w),d1
   1456 FFFC0D1A 603A                        		bra		.0008
   1457 FFFC0D1C                             .0010:
   1458 FFFC0D1C 0802 0002                   		btst	#2,d2					; is it CTRL code ?
   1459 FFFC0D20 6710                        		beq		.0009
   1460 FFFC0D22 0241 007F                   		and.w	#$7F,d1
   1461 FFFC0D26 41F9 FFFC 10C8              		lea		_keybdControlCodes,a0
   1462 FFFC0D2C 1230 1000                   		move.b	(a0,d1.w),d1
   1463 FFFC0D30 6024                        		bra		.0008
   1464 FFFC0D32                             .0009:
   1465 FFFC0D32 0802 0000                   		btst	#0,d2					; is it shift down ?
   1466 FFFC0D36 670C                        		beq  	.0007
   1467 FFFC0D38 41F9 FFFC 0FC8              		lea		_shiftedScanCodes,a0
   1468 FFFC0D3E 1230 1000                   		move.b	(a0,d1.w),d1
   1469 FFFC0D42 6012                        		bra		.0008
   1470 FFFC0D44                             .0007:
   1471 FFFC0D44 41F9 FFFC 0EC8              		lea		_unshiftedScanCodes,a0
   1472 FFFC0D4A 1230 1000                   		move.b	(a0,d1.w),d1
   1473 FFFC0D4E 33FC 0202 FFDC 0600         		move.w	#$0202,leds
   1474 FFFC0D56                             .0008:
   1475 FFFC0D56 33FC 0303 FFDC 0600         		move.w	#$0303,leds
   1476 FFFC0D5E 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1477 FFFC0D62 4E75                        		rts
   1478 FFFC0D64                             .doKeyup:
   1479 FFFC0D64 13FC FFFF 0001 0426         		move.b	#-1,_KeyState1
   1480 FFFC0D6C 6000 FF04                   		bra		.0003
   1481 FFFC0D70                             .doExtend:
   1482 FFFC0D70 0039 0080 0001 0427         		or.b	#$80,_KeyState2
   1483 FFFC0D78 6000 FEF8                   		bra		.0003
   1484 FFFC0D7C                             .doCtrl:
   1485 FFFC0D7C 1239 0001 0426              		move.b	_KeyState1,d1
   1486 FFFC0D82 4239 0001 0426              		clr.b	_KeyState1
   1487 FFFC0D88 4A01                        		tst.b	d1
   1488 FFFC0D8A 6A0C                        		bpl.s	.0004
   1489 FFFC0D8C 08B9 0002 0001 0427         		bclr	#2,_KeyState2
   1490 FFFC0D94 6000 FEDC                   		bra		.0003
   1491 FFFC0D98                             .0004:
   1492 FFFC0D98 08F9 0002 0001 0427         		bset	#2,_KeyState2
   1493 FFFC0DA0 6000 FED0                   		bra		.0003
   1494 FFFC0DA4                             .doAlt:
   1495 FFFC0DA4 1239 0001 0426              		move.b	_KeyState1,d1
   1496 FFFC0DAA 4239 0001 0426              		clr.b	_KeyState1
   1497 FFFC0DB0 4A01                        		tst.b	d1
   1498 FFFC0DB2 6A0C                        		bpl		.0011
   1499 FFFC0DB4 08B9 0001 0001 0427         		bclr	#1,_KeyState2
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 26
bootrom.asm
   1500 FFFC0DBC 6000 FEB4                   		bra		.0003
   1501 FFFC0DC0                             .0011:
   1502 FFFC0DC0 08F9 0001 0001 0427         		bset	#1,_KeyState2
   1503 FFFC0DC8 6000 FEA8                   		bra		.0003
   1504 FFFC0DCC                             .doTab:
   1505 FFFC0DCC 2F01                        		move.l	d1,-(a7)
   1506 FFFC0DCE 1239 0001 0427              	    move.b  _KeyState2,d1
   1507 FFFC0DD4 0801 0000                   	    btst	#0,d1                 ; is ALT down ?
   1508 FFFC0DD8 6706                        	    beq     .0012
                                             ;    	inc     _iof_switch
   1510 FFFC0DDA 221F                        	    move.l	(a7)+,d1
   1511 FFFC0DDC 6000 FE94                   	    bra     .0003
   1512 FFFC0DE0                             .0012:
   1513 FFFC0DE0 221F                        	    move.l	(a7)+,d1
   1514 FFFC0DE2 6000 FF12                   	    bra     .0013
   1515 FFFC0DE6                             .doShift:
   1516 FFFC0DE6 1239 0001 0426              		move.b	_KeyState1,d1
   1517 FFFC0DEC 4239 0001 0426              		clr.b	_KeyState1
   1518 FFFC0DF2 4A01                        		tst.b	d1
   1519 FFFC0DF4 6A0C                        		bpl.s	.0005
   1520 FFFC0DF6 08B9 0000 0001 0427         		bclr	#0,_KeyState2
   1521 FFFC0DFE 6000 FE72                   		bra		.0003
   1522 FFFC0E02                             .0005:
   1523 FFFC0E02 08F9 0000 0001 0427         		bset	#0,_KeyState2
   1524 FFFC0E0A 6000 FE66                   		bra		.0003
   1525 FFFC0E0E                             .doNumLock:
   1526 FFFC0E0E 0879 0004 0001 0427         		bchg	#4,_KeyState2
   1527 FFFC0E16 6100 0026                   		bsr		KeybdSetLEDStatus
   1528 FFFC0E1A 6000 FE56                   		bra		.0003
   1529 FFFC0E1E                             .doCapsLock:
   1530 FFFC0E1E 0879 0005 0001 0427         		bchg	#5,_KeyState2
   1531 FFFC0E26 6100 0016                   		bsr		KeybdSetLEDStatus
   1532 FFFC0E2A 6000 FE46                   		bra		.0003
   1533 FFFC0E2E                             .doScrollLock:
   1534 FFFC0E2E 0879 0006 0001 0427         		bchg	#6,_KeyState2
   1535 FFFC0E36 6100 0006                   		bsr		KeybdSetLEDStatus
   1536 FFFC0E3A 6000 FE36                   		bra		.0003
                                             
   1538 FFFC0E3E                             KeybdSetLEDStatus:
   1539 FFFC0E3E 48E7 3000                   		movem.l	d2/d3,-(a7)
   1540 FFFC0E42 4239 0001 0428              		clr.b	KeybdLEDs
   1541 FFFC0E48 0839 0004 0001 0427         		btst	#4,_KeyState2
   1542 FFFC0E50 6708                        		beq.s	.0002
   1543 FFFC0E52 13FC 0002 0001 0428         		move.b	#2,KeybdLEDs
   1544 FFFC0E5A                             .0002:
   1545 FFFC0E5A 0839 0005 0001 0427         		btst	#5,_KeyState2
   1546 FFFC0E62 6708                        		beq.s	.0003
   1547 FFFC0E64 08F9 0002 0001 0428         		bset	#2,KeybdLEDs
   1548 FFFC0E6C                             .0003:
   1549 FFFC0E6C 0839 0006 0001 0427         		btst	#6,_KeyState2
   1550 FFFC0E74 6708                        		beq.s	.0004
   1551 FFFC0E76 08F9 0000 0001 0428         		bset	#0,KeybdLEDs
   1552 FFFC0E7E                             .0004:
   1553 FFFC0E7E 123C 00ED                   		move.b	#$ED,d1
   1554 FFFC0E82 6100 002C                   		bsr		KeybdSendByte
   1555 FFFC0E86 6100 FD80                   		bsr		KeybdWaitTx
   1556 FFFC0E8A 6100 FD58                   		bsr		KeybdRecvByte
   1557 FFFC0E8E 4A01                        		tst.b	d1
   1558 FFFC0E90 6B18                        		bmi		.0001
   1559 FFFC0E92 B2BC 0000 00FA              		cmp		#$FA,d1
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 27
bootrom.asm
   1560 FFFC0E98 1239 0001 0428              		move.b	KeybdLEDs,d1
   1561 FFFC0E9E 6100 0010                   		bsr		KeybdSendByte
   1562 FFFC0EA2 6100 FD64                   		bsr		KeybdWaitTx
   1563 FFFC0EA6 6100 FD3C                   		bsr		KeybdRecvByte
   1564 FFFC0EAA                             .0001:
   1565 FFFC0EAA 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1566 FFFC0EAE 4E75                        		rts
                                             
   1568 FFFC0EB0                             KeybdSendByte:
   1569 FFFC0EB0 13C1 FFDC 0000              		move.b	d1,KEYBD
   1570 FFFC0EB6 4E75                        		rts
                                             	
   1572 FFFC0EB8                             Wait10ms:
   1573 FFFC0EB8 2F03                        		move.l	d3,-(a7)
   1574 FFFC0EBA 263C 0000 03E8              		move.l	#1000,d3
   1575 FFFC0EC0                             .0001:
   1576 FFFC0EC0 51CB FFFE                   		dbra	d3,.0001
   1577 FFFC0EC4 261F                        		move.l	(a7)+,d3
   1578 FFFC0EC6 4E75                        		rts
                                             
                                             
                                             ;--------------------------------------------------------------------------
                                             ; PS2 scan codes to ascii conversion tables.
                                             ;--------------------------------------------------------------------------
                                             ;
   1585 FFFC0EC8                             _unshiftedScanCodes:
   1586 FFFC0EC8 2E A9 2E A5 A3 A1 A2 AC     	dc.b	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
                                             
   1588 FFFC0ED0 2E AA A8 A6 A4 09 60 2E     	dc.b	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
                                             
   1590 FFFC0ED8 2E 2E 2E 2E 2E 71 31 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
                                             
   1592 FFFC0EE0 2E 2E 7A 73 61 77 32 2E     	dc.b	$2e,$2e,$7a,$73,$61,$77,$32,$2e
                                             
   1594 FFFC0EE8 2E 63 78 64 65 34 33 2E     	dc.b	$2e,$63,$78,$64,$65,$34,$33,$2e
                                             
   1596 FFFC0EF0 2E 20 76 66 74 72 35 2E     	dc.b	$2e,$20,$76,$66,$74,$72,$35,$2e
                                             
   1598 FFFC0EF8 2E 6E 62 68 67 79 36 2E     	dc.b	$2e,$6e,$62,$68,$67,$79,$36,$2e
                                             
   1600 FFFC0F00 2E 2E 6D 6A 75 37 38 2E     	dc.b	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
                                             
   1602 FFFC0F08 2E 2C 6B 69 6F 30 39 2E     	dc.b	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
                                             
   1604 FFFC0F10 2E 2E 2F 6C 3B 70 2D 2E     	dc.b	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
                                             
   1606 FFFC0F18 2E 2E 27 2E 5B 3D 2E 2E     	dc.b	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
                                             
   1608 FFFC0F20 AD 2E 0D 5D 2E 5C 2E 2E     	dc.b	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
                                             
   1610 FFFC0F28 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1612 FFFC0F30 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1614 FFFC0F38 98 7F 92 2E 91 90 1B AF     	dc.b	$98,$7f,$92,$2e,$91,$90,$1b,$af
                                             
   1616 FFFC0F40 AB 2E 97 2E 2E 96 AE 2E     	dc.b	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
                                             
                                             
   1619 FFFC0F48 2E 2E 2E A7 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 28
bootrom.asm
                                             
   1621 FFFC0F50 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1623 FFFC0F58 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1625 FFFC0F60 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1627 FFFC0F68 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1629 FFFC0F70 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1631 FFFC0F78 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1633 FFFC0F80 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1635 FFFC0F88 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1637 FFFC0F90 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1639 FFFC0F98 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1641 FFFC0FA0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1643 FFFC0FA8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1645 FFFC0FB0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1647 FFFC0FB8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1649 FFFC0FC0 2E 2E FA 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1652 FFFC0FC8                             _shiftedScanCodes:
   1653 FFFC0FC8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1655 FFFC0FD0 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1657 FFFC0FD8 2E 2E 2E 2E 2E 51 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
                                             
   1659 FFFC0FE0 2E 2E 5A 53 41 57 40 2E     	dc.b	$2e,$2e,$5a,$53,$41,$57,$40,$2e
                                             
   1661 FFFC0FE8 2E 43 58 44 45 24 23 2E     	dc.b	$2e,$43,$58,$44,$45,$24,$23,$2e
                                             
   1663 FFFC0FF0 2E 20 56 46 54 52 25 2E     	dc.b	$2e,$20,$56,$46,$54,$52,$25,$2e
                                             
   1665 FFFC0FF8 2E 4E 42 48 47 59 5E 2E     	dc.b	$2e,$4e,$42,$48,$47,$59,$5e,$2e
                                             
   1667 FFFC1000 2E 2E 4D 4A 55 26 2A 2E     	dc.b	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
                                             
   1669 FFFC1008 2E 3C 4B 49 4F 29 28 2E     	dc.b	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
                                             
   1671 FFFC1010 2E 3E 3F 4C 3A 50 5F 2E     	dc.b	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
                                             
   1673 FFFC1018 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1675 FFFC1020 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1677 FFFC1028 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1679 FFFC1030 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 29
bootrom.asm
                                             
   1681 FFFC1038 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1683 FFFC1040 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1686 FFFC1048 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1688 FFFC1050 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1690 FFFC1058 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1692 FFFC1060 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1694 FFFC1068 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1696 FFFC1070 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1698 FFFC1078 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1700 FFFC1080 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1702 FFFC1088 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1704 FFFC1090 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1706 FFFC1098 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1708 FFFC10A0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1710 FFFC10A8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1712 FFFC10B0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1714 FFFC10B8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1716 FFFC10C0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
                                             ; control
   1720 FFFC10C8                             _keybdControlCodes:
   1721 FFFC10C8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1723 FFFC10D0 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1725 FFFC10D8 2E 2E 2E 2E 2E 11 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
                                             
   1727 FFFC10E0 2E 2E 1A 13 01 17 40 2E     	dc.b	$2e,$2e,$1a,$13,$01,$17,$40,$2e
                                             
   1729 FFFC10E8 2E 03 18 04 05 24 23 2E     	dc.b	$2e,$03,$18,$04,$05,$24,$23,$2e
                                             
   1731 FFFC10F0 2E 20 16 06 14 12 25 2E     	dc.b	$2e,$20,$16,$06,$14,$12,$25,$2e
                                             
   1733 FFFC10F8 2E 0E 02 08 07 19 5E 2E     	dc.b	$2e,$0e,$02,$08,$07,$19,$5e,$2e
                                             
   1735 FFFC1100 2E 2E 0D 0A 15 26 2A 2E     	dc.b	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
                                             
   1737 FFFC1108 2E 3C 0B 09 0F 29 28 2E     	dc.b	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
                                             
   1739 FFFC1110 2E 3E 3F 0C 3A 10 5F 2E     	dc.b	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 30
bootrom.asm
                                             
   1741 FFFC1118 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1743 FFFC1120 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1745 FFFC1128 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1747 FFFC1130 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1749 FFFC1138 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1751 FFFC1140 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1754 FFFC1148                             _keybdExtendedCodes:
   1755 FFFC1148 2E 2E 2E 2E A3 A1 A2 2E     	dc.b	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
                                             
   1757 FFFC1150 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1759 FFFC1158 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1761 FFFC1160 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1763 FFFC1168 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1765 FFFC1170 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1767 FFFC1178 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1769 FFFC1180 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1771 FFFC1188 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1773 FFFC1190 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1775 FFFC1198 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1777 FFFC11A0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1779 FFFC11A8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1781 FFFC11B0 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1783 FFFC11B8 98 99 92 2E 91 90 2E 2E     	dc.b	$98,$99,$92,$2e,$91,$90,$2e,$2e
                                             
   1785 FFFC11C0 2E 2E 97 2E 2E 96 2E 2E     	dc.b	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
                                             
                                             
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             ; Monitor
                                             ;==============================================================================
                                             ;==============================================================================
                                             ;
   1795 FFFC11C8                             StartMon:
   1796 FFFC11C8                             Monitor:
                                             ;	lea		STACK,a7		; reset the stack pointer
   1798 FFFC11C8 4239 0001 0424              		clr.b	KeybdEcho		; turn off keyboard echo
   1799 FFFC11CE                             PromptLn:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 31
bootrom.asm
   1800 FFFC11CE 6100 F04A                   		bsr		CRLF
   1801 FFFC11D2 123C 0024                   		move.b	#'$',d1
   1802 FFFC11D6 6100 F088                   		bsr		DisplayChar
                                             
                                             ; Get characters until a CR is keyed
                                             ;
   1806 FFFC11DA                             Prompt3:
   1807 FFFC11DA 6100 FA66                   		bsr		GetKey
   1808 FFFC11DE 0C01 000D                   		cmpi.b	#CR,d1
   1809 FFFC11E2 6706                        		beq.s	Prompt1
   1810 FFFC11E4 6100 F07A                   		bsr		DisplayChar
   1811 FFFC11E8 60F0                        		bra.s	Prompt3
                                             
                                             ; Process the screen line that the CR was keyed on
                                             ;
   1815 FFFC11EA                             Prompt1:
   1816 FFFC11EA 4239 0001 0419              		clr.b	CursorCol		; go back to the start of the line
   1817 FFFC11F0 6100 F03E                   		bsr		CalcScreenLoc	; a0 = screen memory location
   1818 FFFC11F4 1218                        		move.b	(a0)+,d1
   1819 FFFC11F6 0C01 0024                   		cmpi.b	#'$',d1			; skip over '$' prompt character
   1820 FFFC11FA 6602                        		bne.s	Prompt2
   1821 FFFC11FC 1218                        		move.b	(a0)+,d1
                                             	
                                             ; Dispatch based on command character
                                             ;
   1825 FFFC11FE                             Prompt2:
   1826 FFFC11FE 0C01 0061                   		cmpi.b	#'a',d1
   1827 FFFC1202 6700 09EE                   		beq		AudioInputTest
   1828 FFFC1206 0C01 0062                   		cmpi.b	#'b',d1
   1829 FFFC120A 6700 F6D8                   		beq		BouncingBalls
   1830 FFFC120E 0C01 0067                   		cmpi.b	#'g',d1
   1831 FFFC1212 6700 078E                   		beq		GraphicsDemo
   1832 FFFC1216 0C01 003A                   		cmpi.b	#':',d1			; $: - edit memory
   1833 FFFC121A 6700 0206                   		beq		EditMem
   1834 FFFC121E 0C01 0044                   		cmpi.b	#'D',d1			; $D - dump memory
   1835 FFFC1222 6700 026C                   		beq		DumpMem
   1836 FFFC1226 0C01 0046                   		cmpi.b	#'F',d1
   1837 FFFC122A 6700 019C                   		beq		FillMem
   1838 FFFC122E 0C01 0042                   		cmpi.b	#'B',d1			; $B - start tiny basic
   1839 FFFC1232 6606                        		bne.s	.0001
   1840 FFFC1234 4EF9 FFFC C000              		jmp		$FFFCC000
   1841 FFFC123A                             .0001:
   1842 FFFC123A 0C01 004A                   		cmpi.b	#'J',d1			; $J - execute code
   1843 FFFC123E 6700 0240                   		beq		ExecuteCode
   1844 FFFC1242 0C01 004C                   		cmpi.b	#'L',d1			; $L - load S19 file
   1845 FFFC1246 6700 0472                   		beq		LoadS19
   1846 FFFC124A 0C01 003F                   		cmpi.b	#'?',d1			; $? - display help
   1847 FFFC124E 672A                        		beq		DisplayHelp
   1848 FFFC1250 0C01 0043                   		cmpi.b	#'C',d1			; $C - clear screen
   1849 FFFC1254 6704                        		beq		TestCLS
   1850 FFFC1256 6000 FF70                   		bra		Monitor
                                             
   1852 FFFC125A                             TestCLS:
   1853 FFFC125A 1218                        		move.b	(a0)+,d1
   1854 FFFC125C 5282                        		addq	#1,d2
   1855 FFFC125E 0C01 004C                   		cmpi.b	#'L',d1
   1856 FFFC1262 6600 FF64                   		bne		Monitor
   1857 FFFC1266 1218                        		move.b	(a0)+,d1
   1858 FFFC1268 5282                        		addq	#1,d2
   1859 FFFC126A 0C01 0053                   		cmpi.b	#'S',d1
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 32
bootrom.asm
   1860 FFFC126E 6600 FF58                   		bne		Monitor
   1861 FFFC1272 6100 02DC                   		bsr		ClearScreen
   1862 FFFC1276 6000 FF50                   		bra		Monitor
                                             	
   1864 FFFC127A                             DisplayHelp:
   1865 FFFC127A 43F9 FFFC 128A              		lea		HelpMsg,a1
   1866 FFFC1280 4EB9 FFFC 0432              		jsr		DisplayString
   1867 FFFC1286 6000 FF40                   		bra		Monitor
                                             
   1869 FFFC128A                             HelpMsg:
   1870 FFFC128A 3F 20 3D 20 44 69 73 70     		dc.b	"? = Display help",CR,LF
   1871 FFFC1292 6C 61 79 20 68 65 6C 70     
   1872 FFFC129A 0D 0A                       
   1873 FFFC129C 43 4C 53 20 3D 20 63 6C     		dc.b	"CLS = clear screen",CR,LF
   1874 FFFC12A4 65 61 72 20 73 63 72 65     
   1875 FFFC12AC 65 6E 0D 0A                 
   1876 FFFC12B0 3A 20 3D 20 45 64 69 74     		dc.b	": = Edit memory bytes",CR,LF
   1877 FFFC12B8 20 6D 65 6D 6F 72 79 20     
   1878 FFFC12C0 62 79 74 65 73 0D 0A        
   1879 FFFC12C7 46 20 3D 20 46 69 6C 6C     		dc.b	"F = Fill memory",CR,LF
   1880 FFFC12CF 20 6D 65 6D 6F 72 79 0D     
   1881 FFFC12D7 0A                          
   1882 FFFC12D8 4C 20 3D 20 4C 6F 61 64     		dc.b	"L = Load S19 file",CR,LF
   1883 FFFC12E0 20 53 31 39 20 66 69 6C     
   1884 FFFC12E8 65 0D 0A                    
   1885 FFFC12EB 44 20 3D 20 44 75 6D 70     		dc.b	"D = Dump memory",CR,LF
   1886 FFFC12F3 20 6D 65 6D 6F 72 79 0D     
   1887 FFFC12FB 0A                          
   1888 FFFC12FC 42 20 3D 20 73 74 61 72     		dc.b	"B = start tiny basic",CR,LF
   1889 FFFC1304 74 20 74 69 6E 79 20 62     
   1890 FFFC130C 61 73 69 63 0D 0A           
   1891 FFFC1312 4A 20 3D 20 4A 75 6D 70     		dc.b	"J = Jump to code",CR,LF,0
   1892 FFFC131A 20 74 6F 20 63 6F 64 65     
   1893 FFFC1322 0D 0A 00                    
   1894 FFFC1325 FF                         		even
                                             
                                             ;------------------------------------------------------------------------------
                                             ; This routine borrowed from Gordo's Tiny Basic interpreter.
                                             ; Used to fetch a command line. (Not currently used).
                                             ;
                                             ; d0.b	- command prompt
                                             ;------------------------------------------------------------------------------
                                             
   1903 FFFC1326                             GetCmdLine:
   1904 FFFC1326 6100 EF38                   		bsr		DisplayChar		; display prompt
   1905 FFFC132A 103C 0020                   		move.b	#' ',d0
   1906 FFFC132E 6100 EF30                   		bsr		DisplayChar
   1907 FFFC1332 41F9 0001 0800              		lea		CmdBuf,a0
   1908 FFFC1338                             .0001:
   1909 FFFC1338 6100 F908                   		bsr		GetKey
   1910 FFFC133C B03C 0008                   		cmp.b	#CTRLH,d0
   1911 FFFC1340 6726                        		beq.s	.0003
   1912 FFFC1342 B03C 0018                   		cmp.b	#CTRLX,d0
   1913 FFFC1346 6744                        		beq.s	.0004
   1914 FFFC1348 B03C 000D                   		cmp.b	#CR,d0
   1915 FFFC134C 6706                        		beq.s	.0002
   1916 FFFC134E B03C 0020                   		cmp.b	#' ',d0
   1917 FFFC1352 65E4                        		bcs.s	.0001
   1918 FFFC1354                             .0002:
   1919 FFFC1354 10C0                        		move.b	d0,(a0)+
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 33
bootrom.asm
   1920 FFFC1356 6100 EF08                   		bsr		DisplayChar
   1921 FFFC135A B03C 000D                   		cmp.b	#CR,d0
   1922 FFFC135E 675E                        		beq		.0007
   1923 FFFC1360 B1FC 0001 084F              		cmp.l	#CmdBufEnd-1,a0
   1924 FFFC1366 65D0                        		bcs.s	.0001
   1925 FFFC1368                             .0003:
   1926 FFFC1368 103C 0008                   		move.b	#CTRLH,d0
   1927 FFFC136C 6100 EEF2                   		bsr		DisplayChar
   1928 FFFC1370 103C 0020                   		move.b	#' ',d0
   1929 FFFC1374 6100 EEEA                   		bsr		DisplayChar
   1930 FFFC1378 B1FC 0001 0800              		cmp.l	#CmdBuf,a0
   1931 FFFC137E 63B8                        		bls.s	.0001
   1932 FFFC1380 103C 0008                   		move.b	#CTRLH,d0
   1933 FFFC1384 6100 EEDA                   		bsr		DisplayChar
   1934 FFFC1388 5388                        		subq.l	#1,a0
   1935 FFFC138A 60AC                        		bra.s	.0001
   1936 FFFC138C                             .0004:
   1937 FFFC138C 2208                        		move.l	a0,d1
   1938 FFFC138E 0481 0001 0800              		sub.l	#CmdBuf,d1
   1939 FFFC1394 671E                        		beq.s	.0006
   1940 FFFC1396 5381                        		subq	#1,d1
   1941 FFFC1398                             .0005:
   1942 FFFC1398 103C 0008                   		move.b	#CTRLH,d0
   1943 FFFC139C 6100 EEC2                   		bsr		DisplayChar
   1944 FFFC13A0 103C 0020                   		move.b	#' ',d0
   1945 FFFC13A4 6100 EEBA                   		bsr		DisplayChar
   1946 FFFC13A8 103C 0008                   		move.b	#CTRLH,d0
   1947 FFFC13AC 6100 EEB2                   		bsr		DisplayChar
   1948 FFFC13B0 51C9 FFE6                   		dbra	d1,.0005
   1949 FFFC13B4                             .0006:
   1950 FFFC13B4 41F9 0001 0800              		lea		CmdBuf,a0
   1951 FFFC13BA 6000 FF7C                   		bra		.0001
   1952 FFFC13BE                             .0007:
   1953 FFFC13BE 103C 000A                   		move.b	#LF,d0
   1954 FFFC13C2 6100 EE9C                   		bsr		DisplayChar
   1955 FFFC13C6 4E75                        		rts
                                             
                                             		
                                             ;------------------------------------------------------------------------------
                                             ; Fill memory
                                             ; FB = fill bytes		FB 00000010 100 FF	; fill starting at 10 for 256 bytes
                                             ; FW = fill words
                                             ; FL = fill longs
                                             ; F = fill bytes
                                             ;------------------------------------------------------------------------------
                                             ;
   1966 FFFC13C8                             FillMem:
   1967 FFFC13C8 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1969 FFFC13CA 1801                        		move.b	d1,d4			; d4 = fill size
   1970 FFFC13CC 6100 0044                   		bsr		ignBlanks
   1971 FFFC13D0 6100 00F8                   		bsr		GetHexNumber
   1972 FFFC13D4 2241                        		move.l	d1,a1			; a1 = start
   1973 FFFC13D6 6100 003A                   		bsr		ignBlanks
   1974 FFFC13DA 6100 00EE                   		bsr		GetHexNumber
   1975 FFFC13DE 2601                        		move.l	d1,d3			; d3 = count
   1976 FFFC13E0 6100 0030                   		bsr		ignBlanks
   1977 FFFC13E4 6100 00E4                   		bsr		GetHexNumber	; fill value
   1978 FFFC13E8 0C04 004C                   		cmpi.b	#'L',d4
   1979 FFFC13EC 660A                        		bne		fmem1
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 34
bootrom.asm
   1980 FFFC13EE                             fmemL:
   1981 FFFC13EE 22C1                        		move.l	d1,(a1)+
   1982 FFFC13F0 5383                        		sub.l	#1,d3
   1983 FFFC13F2 66FA                        		bne.s	fmemL
   1984 FFFC13F4 6000 FDD2                   		bra		Monitor
   1985 FFFC13F8                             fmem1
   1986 FFFC13F8 0C04 0057                   		cmpi.b	#'W',d4
   1987 FFFC13FC 660A                        		bne		fmemB
   1988 FFFC13FE                             fmemW:
   1989 FFFC13FE 32C1                        		move.w	d1,(a1)+
   1990 FFFC1400 5383                        		sub.l	#1,d3
   1991 FFFC1402 66FA                        		bne.s	fmemW
   1992 FFFC1404 6000 FDC2                   		bra		Monitor
   1993 FFFC1408                             fmemB:
   1994 FFFC1408 12C1                        		move.b	d1,(a1)+
   1995 FFFC140A 5383                        		sub.l	#1,d3
   1996 FFFC140C 66FA                        		bne.s	fmemB
   1997 FFFC140E 6000 FDB8                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Modifies:
                                             ;	a0	- text pointer
                                             ;------------------------------------------------------------------------------
                                             ;
   2004 FFFC1412                             ignBlanks:
   2005 FFFC1412 3F01                        		move.w	d1,-(a7)
   2006 FFFC1414 1218                        		move.b	(a0)+,d1
   2007 FFFC1416 0C01 0020                   		cmpi.b	#' ',d1
   2008 FFFC141A 67F6                        		beq.s	ignBlanks
   2009 FFFC141C 5388                        		subq	#1,a0
   2010 FFFC141E 321F                        		move.w	(a7)+,d1
   2011 FFFC1420 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Edit memory byte.
                                             ;------------------------------------------------------------------------------
                                             ;
   2017 FFFC1422                             EditMem:
   2018 FFFC1422 6100 FFEE                   		bsr		ignBlanks
   2019 FFFC1426 6100 00A2                   		bsr		GetHexNumber
   2020 FFFC142A 2241                        		move.l	d1,a1
   2021 FFFC142C                             edtmem1:
   2022 FFFC142C 6100 FFE4                   		bsr		ignBlanks
   2023 FFFC1430 6100 0098                   		bsr		GetHexNumber
   2024 FFFC1434 12C1                        		move.b	d1,(a1)+
   2025 FFFC1436 6100 FFDA                   		bsr		ignBlanks
   2026 FFFC143A 6100 008E                   		bsr		GetHexNumber
   2027 FFFC143E 12C1                        		move.b	d1,(a1)+
   2028 FFFC1440 6100 FFD0                   		bsr		ignBlanks
   2029 FFFC1444 6100 0084                   		bsr		GetHexNumber
   2030 FFFC1448 12C1                        		move.b	d1,(a1)+
   2031 FFFC144A 6100 FFC6                   		bsr		ignBlanks
   2032 FFFC144E 6100 007A                   		bsr		GetHexNumber
   2033 FFFC1452 12C1                        		move.b	d1,(a1)+
   2034 FFFC1454 6100 FFBC                   		bsr		ignBlanks
   2035 FFFC1458 6100 0070                   		bsr		GetHexNumber
   2036 FFFC145C 12C1                        		move.b	d1,(a1)+
   2037 FFFC145E 6100 FFB2                   		bsr		ignBlanks
   2038 FFFC1462 6100 0066                   		bsr		GetHexNumber
   2039 FFFC1466 12C1                        		move.b	d1,(a1)+
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 35
bootrom.asm
   2040 FFFC1468 6100 FFA8                   		bsr		ignBlanks
   2041 FFFC146C 6100 005C                   		bsr		GetHexNumber
   2042 FFFC1470 12C1                        		move.b	d1,(a1)+
   2043 FFFC1472 6100 FF9E                   		bsr		ignBlanks
   2044 FFFC1476 6100 0052                   		bsr		GetHexNumber
   2045 FFFC147A 12C1                        		move.b	d1,(a1)+
   2046 FFFC147C 6000 FD4A                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Execute code at the specified address.
                                             ;------------------------------------------------------------------------------
                                             ;
   2052 FFFC1480                             ExecuteCode:
   2053 FFFC1480 6100 FF90                   		bsr		ignBlanks
   2054 FFFC1484 6100 0044                   		bsr		GetHexNumber
   2055 FFFC1488 2041                        		move.l	d1,a0
   2056 FFFC148A 4E90                        		jsr		(a0)
   2057 FFFC148C 6000 FD3A                   		bra     Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Do a memory dump of the requested location.
                                             ;------------------------------------------------------------------------------
                                             ;
   2063 FFFC1490                             DumpMem:
   2064 FFFC1490 6100 FF80                   		bsr		ignBlanks
   2065 FFFC1494 6100 0034                   		bsr		GetHexNumber
   2066 FFFC1498 4A00                        		tst.b	d0				; was there a number ?
   2067 FFFC149A 6700 FD2C                   		beq		Monitor			; no, other garbage, just ignore
   2068 FFFC149E 2601                        		move.l	d1,d3			; save off start of range
   2069 FFFC14A0 6100 FF70                   		bsr		ignBlanks
   2070 FFFC14A4 6100 0024                   		bsr		GetHexNumber
   2071 FFFC14A8 4A00                        		tst.b	d0
   2072 FFFC14AA 6608                        		bne.s	DumpMem1
   2073 FFFC14AC 2203                        		move	d3,d1
   2074 FFFC14AE 0681 0000 0040              		addi.l	#64,d1			; no end specified, just dump 64 bytes
   2075 FFFC14B4                             DumpMem1:
   2076 FFFC14B4 2043                        		move.l	d3,a0
   2077 FFFC14B6 2241                        		move.l	d1,a1
   2078 FFFC14B8 4EB9 FFFC 021A              		jsr		CRLF
   2079 FFFC14BE                             .0001:
   2080 FFFC14BE B3C8                        		cmpa.l	a0,a1
   2081 FFFC14C0 6200 FD06                   		bhi		Monitor
   2082 FFFC14C4 6100 F6D4                   		bsr		DisplayMem
   2083 FFFC14C8 60F4                        		bra.s	.0001
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a hexidecimal number. Maximum of eight digits.
                                             ;
                                             ; Returns:
                                             ;	d0 = number of digits
                                             ;	d1 = value of number
                                             ;------------------------------------------------------------------------------
                                             ;
   2094 FFFC14CA                             GetHexNumber:
   2095 FFFC14CA 2F02                        		move.l	d2,-(a7)
   2096 FFFC14CC 4282                        		clr.l	d2
   2097 FFFC14CE 7000                        		moveq	#0,d0
   2098 FFFC14D0                             .0002:
   2099 FFFC14D0 1218                        		move.b	(a0)+,d1
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 36
bootrom.asm
   2100 FFFC14D2 6100 0020                   		bsr		AsciiToHexNybble
   2101 FFFC14D6 B23C 00FF                   		cmp.b	#0xff,d1
   2102 FFFC14DA 6712                        		beq.s	.0001
   2103 FFFC14DC E98A                        		lsl.l	#4,d2
   2104 FFFC14DE 0281 0000 000F              		andi.l	#0x0f,d1
   2105 FFFC14E4 8481                        		or.l	d1,d2
   2106 FFFC14E6 5280                        		addq	#1,d0
   2107 FFFC14E8 0C00 0008                   		cmpi.b	#8,d0
   2108 FFFC14EC 65E2                        		blo.s	.0002
   2109 FFFC14EE                             .0001:
   2110 FFFC14EE 2202                        		move.l	d2,d1
   2111 FFFC14F0 241F                        		move.l	(a7)+,d2
   2112 FFFC14F2 4E75                        		rts	
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Convert ASCII character in the range '0' to '9', 'a' tr 'f' or 'A' to 'F'
                                             ; to a hex nybble.
                                             ;------------------------------------------------------------------------------
                                             ;
   2119 FFFC14F4                             AsciiToHexNybble:
   2120 FFFC14F4 0C01 0030                   		cmpi.b	#'0',d1
   2121 FFFC14F8 6538                        		blo.s	gthx3
   2122 FFFC14FA 0C01 0039                   		cmpi.b	#'9',d1
   2123 FFFC14FE 6206                        		bhi.s	gthx5
   2124 FFFC1500 0401 0030                   		subi.b	#'0',d1
   2125 FFFC1504 4E75                        		rts
   2126 FFFC1506                             gthx5:
   2127 FFFC1506 0C01 0041                   		cmpi.b	#'A',d1
   2128 FFFC150A 6526                        		blo.s	gthx3
   2129 FFFC150C 0C01 0046                   		cmpi.b	#'F',d1
   2130 FFFC1510 620A                        		bhi.s	gthx6
   2131 FFFC1512 0401 0041                   		subi.b	#'A',d1
   2132 FFFC1516 0601 000A                   		addi.b	#10,d1
   2133 FFFC151A 4E75                        		rts
   2134 FFFC151C                             gthx6:
   2135 FFFC151C 0C01 0061                   		cmpi.b	#'a',d1
   2136 FFFC1520 6510                        		blo.s	gthx3
   2137 FFFC1522 0C01 0066                   		cmpi.b	#'f',d1
   2138 FFFC1526 620A                        		bhi.s	gthx3
   2139 FFFC1528 0401 0061                   		subi.b	#'a',d1
   2140 FFFC152C 0601 000A                   		addi.b	#10,d1
   2141 FFFC1530 4E75                        		rts
   2142 FFFC1532                             gthx3:
   2143 FFFC1532 72FF                        		moveq	#-1,d1		; not a hex number
   2144 FFFC1534 4E75                        		rts
                                             
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             ; The fast way to clear the screen. Uses the blitter.
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             
   2150 FFFC1536                             WaitBlit:
   2151 FFFC1536 48E7 8004                   		movem.l	d0/a5,-(a7)
   2152 FFFC153A 4BF9 FFE0 0000              		lea		VDGREG,a5
   2153 FFFC1540                             .0003:
   2154 FFFC1540 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2155 FFFC1544 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2156 FFFC1548 67F6                        		beq.s	.0003				; branch if not done
   2157 FFFC154A 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2158 FFFC154E 4E75                        		rts
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 37
bootrom.asm
   2160 FFFC1550                             ClearScreen:
   2161 FFFC1550 4BF9 FFE0 0000              		lea		VDGREG,a5
   2162 FFFC1556 6100 FFDE                   		bsr		WaitBlit
   2163 FFFC155A 2B7C 0001 D4C0 04BC         		move.l	#BMP_WIDTH*BMP_HEIGHT,$4BC(a5)		; set transfer count  pixels
   2164 FFFC1562 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   2165 FFFC156A 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2166 FFFC1572 2B7C 0000 0190 04A4         		move.l	#BMP_WIDTH,$4A4(a5)		; set destination width
   2167 FFFC157A 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2168 FFFC1582 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   2169 FFFC1588 6100 FFAC                   		bsr		WaitBlit
   2170 FFFC158C 3B7C 0001 043E              		move.w	#1,$43E(a5)			; access z buffer
   2171 FFFC1592 2B7C 0000 1D4C 04BC         		move.l	#BMP_WIDTH*BMP_HEIGHT/16,$4BC(a5)		; set transfer count  pixels
   2172 FFFC159A 3B7C FFFF 04A8              		move.w	#$FFFF,$4A8(a5)		; set lowest priority
   2173 FFFC15A0 3B7C FFFF 043C              		move.w	#$FFFF,$43C(a5)		; z layer = 3
   2174 FFFC15A6 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2175 FFFC15AE 2B7C 0000 0190 04A4         		move.l	#BMP_WIDTH,$4A4(a5)		; set destination width
   2176 FFFC15B6 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2177 FFFC15BE 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   2178 FFFC15C4 6100 FF70                   		bsr		WaitBlit
   2179 FFFC15C8 3B7C 0000 043E              		move.w	#0,$43E(a5)			; access normal buffer again
                                             
                                             		; clear virtual screen too
   2182 FFFC15CE                             ClearVirtScreen:
   2183 FFFC15CE 7020                        		moveq	#$20,d0				; d0 = space character
   2184 FFFC15D0 323C 073A                   		move.w	#50*37,d1
   2185 FFFC15D4 4BF9 1FFF 0000              		lea		VirtScreen,a5
   2186 FFFC15DA                             .0001:
   2187 FFFC15DA 1AC0                        		move.b	d0,(a5)+
   2188 FFFC15DC 51C9 FFFC                   		dbra	d1,.0001
   2189 FFFC15E0 4E75                        		rts
                                             
   2191 FFFC15E2                             ScrollUp:
   2192 FFFC15E2 48E7 8084                   		movem.l	d0/a0/a5,-(a7)
   2193 FFFC15E6 4BF9 FFE0 0000              		lea		VDGREG,a5
   2194 FFFC15EC                             .0003:								
   2195 FFFC15EC 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2196 FFFC15F0 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2197 FFFC15F4 67F6                        		beq.s	.0003				; branch if not done
                                             		; Channel A
   2199 FFFC15F6 2B7C 0001 C840 04B0         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$4B0(a5)	; set source transfer count pixels
   2200 FFFC15FE 2B7C 0000 0C80 0480         		move.l	#BMP_WIDTH*8,$480(a5)		; set source bitmap address (address in graphics mem)
   2201 FFFC1606 2B7C 0000 0000 0484         		move.l	#0,$484(a5)			; set src modulo
                                             		; Channel D
   2203 FFFC160E 2B7C 0001 C840 04BC         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$4BC(a5)	; set destination transfer count pixels
   2204 FFFC1616 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2205 FFFC161E 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
                                             
   2207 FFFC1626 2B7C FFFF FFFF 04A0         		move.l	#-1,$4A0(a5)		; set source width
   2208 FFFC162E 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   2209 FFFC1636 3B7C 0011 04AE              		move.w	#$11,$4AE(a5)		; set op A ($11 = copy A)
   2210 FFFC163C 3B7C 8082 04AC              		move.w	#%1000000010000010,$4AC(a5)		; enable channel A,D, start transfer
                                             
                                             		; Scroll virtual screen
   2213 FFFC1642 4BF9 1FFF 0000              		lea		VirtScreen,a5
   2214 FFFC1648 204D                        		movea.l	a5,a0
   2215 FFFC164A 1039 0001 041B              		move.b	TextCols,d0
   2216 FFFC1650 4880                        		ext.w	d0
   2217 FFFC1652 D1C0                        		add.l	d0,a0
   2218 FFFC1654 C0FC 0025                   		mulu	#37,d0
   2219 FFFC1658                             .0001:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 38
bootrom.asm
   2220 FFFC1658 1AD8                        		move.b	(a0)+,(a5)+
   2221 FFFC165A 51C8 FFFC                   		dbra	d0,.0001
   2222 FFFC165E 4CDF 2101                   		movem.l	(a7)+,d0/a0/a5
                                             
   2224 FFFC1662                             BlankLastLine:
   2225 FFFC1662 48E7 8004                   		movem.l	d0/a5,-(a7)
                                             		; Channel D
   2227 FFFC1666 4BF9 FFE0 0000              		lea		VDGREG,a5
   2228 FFFC166C                             .0003:								
   2229 FFFC166C 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2230 FFFC1670 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2231 FFFC1674 67F6                        		beq.s	.0003				; branch if not done
   2232 FFFC1676 2B7C 0000 0C80 04BC         		move.l	#BMP_WIDTH*8,$4BC(a5)		; set destination transfer count pixels
   2233 FFFC167E 2B7C 0001 C840 0498         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$498(a5)	; set destination address
   2234 FFFC1686 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2235 FFFC168E 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   2236 FFFC1696 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   2237 FFFC169E 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   2238 FFFC16A4 4BF9 1FFF 073A              		lea		VirtScreen+50*37,a5
   2239 FFFC16AA 7028                        		moveq	#40,d0
   2240 FFFC16AC                             .0001:
   2241 FFFC16AC 1AFC 0020                   		move.b	#$20,(a5)+
   2242 FFFC16B0 51C8 FFFA                   		dbra	d0,.0001
   2243 FFFC16B4 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2244 FFFC16B8 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Load an S19 format file
                                             ;==============================================================================
                                             ;
   2250 FFFC16BA                             LoadS19:
   2251 FFFC16BA 600A                        	bra		ProcessRec
   2252 FFFC16BC                             NextRec:
   2253 FFFC16BC 6100 017A                   	bsr		sGetChar
   2254 FFFC16C0 0C00 000A                   	cmpi.b	#LF,d0
   2255 FFFC16C4 66F6                        	bne		NextRec
   2256 FFFC16C6                             ProcessRec
   2257 FFFC16C6 6100 0170                   	bsr		sGetChar
   2258 FFFC16CA 1800                        	move.b	d0,d4
   2259 FFFC16CC 0C04 001A                   	cmpi.b	#26,d4		; CTRL-Z ?
   2260 FFFC16D0 6700 FAF6                   	beq		Monitor
   2261 FFFC16D4 0C04 0053                   	cmpi.b	#'S',d4
   2262 FFFC16D8 66E2                        	bne		NextRec
   2263 FFFC16DA 6100 015C                   	bsr		sGetChar
   2264 FFFC16DE 1800                        	move.b	d0,d4
   2265 FFFC16E0 0C04 0030                   	cmpi.b	#'0',d4
   2266 FFFC16E4 65D6                        	blo		NextRec
   2267 FFFC16E6 0C04 0039                   	cmpi.b	#'9',d4		; d4 = record type
   2268 FFFC16EA 62D0                        	bhi		NextRec
   2269 FFFC16EC 6100 014A                   	bsr		sGetChar
   2270 FFFC16F0 6100 FE02                   	bsr		AsciiToHexNybble
   2271 FFFC16F4 1401                        	move.b	d1,d2
   2272 FFFC16F6 6100 0140                   	bsr		sGetChar
   2273 FFFC16FA 6100 FDF8                   	bsr		AsciiToHexNybble
   2274 FFFC16FE E90A                        	lsl.b	#4,d2
   2275 FFFC1700 8202                        	or.b	d2,d1		; d1 = byte count
   2276 FFFC1702 1601                        	move.b	d1,d3		; d3 = byte count
   2277 FFFC1704 0C04 0030                   	cmpi.b	#'0',d4		; manufacturer ID record, ignore
   2278 FFFC1708 67B2                        	beq		NextRec
   2279 FFFC170A 0C04 0031                   	cmpi.b	#'1',d4
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 39
bootrom.asm
   2280 FFFC170E 676A                        	beq		ProcessS1
   2281 FFFC1710 0C04 0032                   	cmpi.b	#'2',d4
   2282 FFFC1714 676A                        	beq		ProcessS2
   2283 FFFC1716 0C04 0033                   	cmpi.b	#'3',d4
   2284 FFFC171A 676A                        	beq		ProcessS3
   2285 FFFC171C 0C04 0035                   	cmpi.b	#'5',d4		; record count record, ignore
   2286 FFFC1720 679A                        	beq		NextRec
   2287 FFFC1722 0C04 0037                   	cmpi.b	#'7',d4
   2288 FFFC1726 6764                        	beq		ProcessS7
   2289 FFFC1728 0C04 0038                   	cmpi.b	#'8',d4
   2290 FFFC172C 676C                        	beq		ProcessS8
   2291 FFFC172E 0C04 0039                   	cmpi.b	#'9',d4
   2292 FFFC1732 6774                        	beq		ProcessS9
   2293 FFFC1734 6086                        	bra		NextRec
                                             
   2295 FFFC1736                             pcssxa
   2296 FFFC1736 0243 00FF                   	andi.w	#0xff,d3
   2297 FFFC173A 5343                        	subi.w	#1,d3			; one less for dbra
   2298 FFFC173C                             pcss1a
   2299 FFFC173C 4282                        	clr.l	d2
   2300 FFFC173E 6100 00F8                   	bsr		sGetChar
   2301 FFFC1742 6100 FDB0                   	bsr		AsciiToHexNybble
   2302 FFFC1746 E98A                        	lsl.l	#4,d2
   2303 FFFC1748 8401                        	or.b	d1,d2
   2304 FFFC174A 6100 00EC                   	bsr		sGetChar
   2305 FFFC174E 6100 FDA4                   	bsr		AsciiToHexNybble
   2306 FFFC1752 E98A                        	lsl.l	#4,d2
   2307 FFFC1754 8401                        	or.b	d1,d2
   2308 FFFC1756 12C2                        	move.b	d2,(a1)+
   2309 FFFC1758 51CB FFE2                   	dbra	d3,pcss1a
                                             ; Get the checksum byte
   2311 FFFC175C 4282                        	clr.l	d2
   2312 FFFC175E 6100 00D8                   	bsr		sGetChar
   2313 FFFC1762 6100 FD90                   	bsr		AsciiToHexNybble
   2314 FFFC1766 E98A                        	lsl.l	#4,d2
   2315 FFFC1768 8401                        	or.b	d1,d2
   2316 FFFC176A 6100 00CC                   	bsr		sGetChar
   2317 FFFC176E 6100 FD84                   	bsr		AsciiToHexNybble
   2318 FFFC1772 E98A                        	lsl.l	#4,d2
   2319 FFFC1774 8401                        	or.b	d1,d2
   2320 FFFC1776 6000 FF44                   	bra		NextRec
                                             
   2322 FFFC177A                             ProcessS1:
   2323 FFFC177A 6100 003A                   	bsr		S19Get16BitAddress
   2324 FFFC177E 60B6                        	bra		pcssxa
   2325 FFFC1780                             ProcessS2:
   2326 FFFC1780 6100 0042                   	bsr		S19Get24BitAddress
   2327 FFFC1784 60B0                        	bra		pcssxa
   2328 FFFC1786                             ProcessS3:
   2329 FFFC1786 6100 004A                   	bsr		S19Get32BitAddress
   2330 FFFC178A 60AA                        	bra		pcssxa
   2331 FFFC178C                             ProcessS7:
   2332 FFFC178C 6100 0044                   	bsr		S19Get32BitAddress
   2333 FFFC1790 23C9 0001 0438              	move.l	a1,S19StartAddress
   2334 FFFC1796 6000 FA30                   	bra		Monitor
   2335 FFFC179A                             ProcessS8:
   2336 FFFC179A 6100 0028                   	bsr		S19Get24BitAddress
   2337 FFFC179E 23C9 0001 0438              	move.l	a1,S19StartAddress
   2338 FFFC17A4 6000 FA22                   	bra		Monitor
   2339 FFFC17A8                             ProcessS9:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 40
bootrom.asm
   2340 FFFC17A8 6100 000C                   	bsr		S19Get16BitAddress
   2341 FFFC17AC 23C9 0001 0438              	move.l	a1,S19StartAddress
   2342 FFFC17B2 6000 FA14                   	bra		Monitor
                                             
   2344 FFFC17B6                             S19Get16BitAddress:
   2345 FFFC17B6 4282                        	clr.l	d2
   2346 FFFC17B8 6100 007E                   	bsr		sGetChar
   2347 FFFC17BC 6100 FD36                   	bsr		AsciiToHexNybble
   2348 FFFC17C0 1401                        	move.b	d1,d2
   2349 FFFC17C2 604A                        	bra		S1932b
                                             
   2351 FFFC17C4                             S19Get24BitAddress:
   2352 FFFC17C4 4282                        	clr.l	d2
   2353 FFFC17C6 6100 0070                   	bsr		sGetChar
   2354 FFFC17CA 6100 FD28                   	bsr		AsciiToHexNybble
   2355 FFFC17CE 1401                        	move.b	d1,d2
   2356 FFFC17D0 6024                        	bra		S1932a
                                             
   2358 FFFC17D2                             S19Get32BitAddress:
   2359 FFFC17D2 4282                        	clr.l	d2
   2360 FFFC17D4 6100 0062                   	bsr		sGetChar
   2361 FFFC17D8 6100 FD1A                   	bsr		AsciiToHexNybble
   2362 FFFC17DC 1401                        	move.b	d1,d2
   2363 FFFC17DE 6100 0058                   	bsr		sGetChar
   2364 FFFC17E2 6100 FD10                   	bsr		AsciiToHexNybble
   2365 FFFC17E6 E98A                        	lsl.l	#4,d2
   2366 FFFC17E8 8401                        	or.b	d1,d2
   2367 FFFC17EA 6100 004C                   	bsr		sGetChar
   2368 FFFC17EE 6100 FD04                   	bsr		AsciiToHexNybble
   2369 FFFC17F2 E98A                        	lsl.l	#4,d2
   2370 FFFC17F4 8401                        	or.b	d1,d2
   2371 FFFC17F6                             S1932a:
   2372 FFFC17F6 6100 0040                   	bsr		sGetChar
   2373 FFFC17FA 6100 FCF8                   	bsr		AsciiToHexNybble
   2374 FFFC17FE E98A                        	lsl.l	#4,d2
   2375 FFFC1800 8401                        	or.b	d1,d2
   2376 FFFC1802 6100 0034                   	bsr		sGetChar
   2377 FFFC1806 6100 FCEC                   	bsr		AsciiToHexNybble
   2378 FFFC180A E98A                        	lsl.l	#4,d2
   2379 FFFC180C 8401                        	or.b	d1,d2
   2380 FFFC180E                             S1932b:
   2381 FFFC180E 6100 0028                   	bsr		sGetChar
   2382 FFFC1812 6100 FCE0                   	bsr		AsciiToHexNybble
   2383 FFFC1816 E98A                        	lsl.l	#4,d2
   2384 FFFC1818 8401                        	or.b	d1,d2
   2385 FFFC181A 6100 001C                   	bsr		sGetChar
   2386 FFFC181E 6100 FCD4                   	bsr		AsciiToHexNybble
   2387 FFFC1822 E98A                        	lsl.l	#4,d2
   2388 FFFC1824 8401                        	or.b	d1,d2
   2389 FFFC1826 6100 0010                   	bsr		sGetChar
   2390 FFFC182A 6100 FCC8                   	bsr		AsciiToHexNybble
   2391 FFFC182E E98A                        	lsl.l	#4,d2
   2392 FFFC1830 8401                        	or.b	d1,d2
   2393 FFFC1832 4284                        	clr.l	d4
   2394 FFFC1834 2242                        	move.l	d2,a1
   2395 FFFC1836 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a character from auxillary input, checking the keyboard status for a
                                             ; CTRL-C
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 41
bootrom.asm
                                             ;------------------------------------------------------------------------------
                                             ;
   2402 FFFC1838                             sGetChar:
   2403 FFFC1838 6100 F3F6                   	bsr		CheckForKey
   2404 FFFC183C 670C                        	beq		sgc1
   2405 FFFC183E 6100 F402                   	bsr		GetKey
   2406 FFFC1842 0C01 0003                   	cmpi.b	#CTRLC,d1
   2407 FFFC1846 6700 F980                   	beq		Monitor
   2408 FFFC184A                             sgc1:
   2409 FFFC184A 6100 FFFF                   	bsr		AUXIN
   2410 FFFC184E 67E8                        	beq		sGetChar
   2411 FFFC1850 1200                        	move.b	d0,d1
   2412 FFFC1852 4E75                        	rts
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   2420 FFFC1854                             DisplayHexNumber:
   2421 FFFC1854 33FC A6A6 FFDC 0600         		move.w	#$A6A6,leds		; diagnostics
   2422 FFFC185C 2C7C FFE0 0000              		move.l	#VDGREG,a6
   2423 FFFC1862 343C 0007                   		move.w	#7,d2		; number-1 of digits to display
   2424 FFFC1866                             disphnum1:
   2425 FFFC1866 1001                        		move.b	d1,d0		; get digit into d0.b
   2426 FFFC1868 0240 000F                   		andi.w	#$0f,d0
   2427 FFFC186C 0C40 0009                   		cmpi.w	#$09,d0
   2428 FFFC1870 6302                        		bls.s	disphnum2
   2429 FFFC1872 5E40                        		addi.w	#7,d0
   2430 FFFC1874                             disphnum2:
   2431 FFFC1874 0640 0030                   		addi.w	#$30,d0	; convert to display char
   2432 FFFC1878 3602                        		move.w	d2,d3		; char count into d3
   2433 FFFC187A E743                        		asl.w	#3,d3		; scale * 8
   2434 FFFC187C                             disphnum3:
   2435 FFFC187C 382E 042C                   		move.w	$42C(a6),d4			; read character queue index into d4
   2436 FFFC1880 B87C 001C                   		cmp.w	#28,d4					; allow up 28 entries to be in progress
   2437 FFFC1884 64F6                        		bhs.s	disphnum3				; branch if too many chars queued
   2438 FFFC1886 4880                        		ext.w	d0						; zero out high order bits
   2439 FFFC1888 3D40 0420                   		move.w	d0,$420(a6)			; set char code
   2440 FFFC188C 3D7C 7FFF 0422              		move.w	#WHITE,$422(a6)		; set fg color
   2441 FFFC1892 3D7C 000F 0424              		move.w	#DARK_BLUE,$424(a6)	; set bk color
   2442 FFFC1898 3D43 0426                   		move.w	d3,$426(a6)			; set x pos
   2443 FFFC189C 3D7C 0008 0428              		move.w	#8,$428(a6)			; set y pos
   2444 FFFC18A2 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
   2445 FFFC18A8 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
   2446 FFFC18AE E899                        		ror.l	#4,d1					; rot to next digit
   2447 FFFC18B0 57CA FFB4                   		dbeq	d2,disphnum1
   2448 FFFC18B4 4ED5                        		jmp		(a5)
                                             
                                             ;===============================================================================
                                             ;    Perform ram test. (Uses checkerboard testing).
                                             ; 
                                             ;    Return address must be stored in a3 since the stack cannot be used (it
                                             ; would get overwritten in test). Note this routine uses no ram at all.
                                             ;===============================================================================
   2456 FFFC18B6                             ramtest:
   2457 FFFC18B6 33FC A5A5 FFDC 0600         		move.w	#$A5A5,leds		; diagnostics
   2458 FFFC18BE 207C 0003 0000                      movea.l #$30000,a0
   2459 FFFC18C4 203C AAAA 5555                      move.l #$aaaa5555,d0
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 42
bootrom.asm
                                             ;-----------------------------------------------------------
                                             ;   Write checkerboard pattern to ram then read it back to
                                             ; find the highest usable ram address (maybe). This address
                                             ; must be lower than the start of the rom (0xe00000).
                                             ;-----------------------------------------------------------
   2465 FFFC18CA                             ramtest1:
   2466 FFFC18CA 20C0                                move.l 	d0,(a0)+
   2467 FFFC18CC 2208                                move.l	a0,d1
   2468 FFFC18CE 4A41                                tst.w	d1
   2469 FFFC18D0 660A                                bne.s	rmtst1
   2470 FFFC18D2 4BF9 FFFC 18DC                      lea		rmtst1,a5
   2471 FFFC18D8 6000 FF7A                           bra		DisplayHexNumber
   2472 FFFC18DC                             rmtst1:
   2473 FFFC18DC 33FC A9A9 FFDC 0600         		move.w	#$A9A9,leds		; diagnostics
   2474 FFFC18E4 B1FC 0005 FFFC                      cmpa.l 	#$5FFFC,a0
   2475 FFFC18EA 66DE                                bne.s 	ramtest1
   2476 FFFC18EC 7200                                move.l	#0,d1
   2477 FFFC18EE 6100 E940                           bsr		CalcScreenLoc
   2478 FFFC18F2 6000 FBC0                           bra		DumpMem1
                                             
                                             ;------------------------------------------------------
                                             ;   Save maximum useable address for later comparison.
                                             ;------------------------------------------------------
   2483 FFFC18F6                             ramtest6:
   2484 FFFC18F6 33FC A7A7 FFDC 0600         		move.w	#$A7A7,leds		; diagnostics
   2485 FFFC18FE 2448                                movea.l a0,a2
   2486 FFFC1900 207C 0003 0000                      movea.l #$30000,a0
                                             ;--------------------------------------------
                                             ;   Read back checkerboard pattern from ram.
                                             ;--------------------------------------------
   2490 FFFC1906                             ramtest2:
   2491 FFFC1906 2A18                                move.l  (a0)+,d5
   2492 FFFC1908 B5C8                                cmpa.l	a0,a2
   2493 FFFC190A 671A                                beq.s	ramtest3
   2494 FFFC190C 2208                                move.l	a0,d1
   2495 FFFC190E 4A41                                tst.w	d1
   2496 FFFC1910 660A                                bne.s	rmtst2
   2497 FFFC1912 4BF9 FFFC 191C                      lea		rmtst2,a5
   2498 FFFC1918 6000 FF3A                           bra		DisplayHexNumber
   2499 FFFC191C                             rmtst2:
   2500 FFFC191C 0C85 AAAA 5555                      cmpi.l 	#$aaaa5555,d5
   2501 FFFC1922 67E2                                beq.s 	ramtest2
   2502 FFFC1924 6678                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   The following section does the same test except
                                             ; with the checkerboard order switched around.
                                             ;---------------------------------------------------
   2507 FFFC1926                             ramtest3:                
   2508 FFFC1926 33FC A8A8 FFDC 0600         		move.w	#$A8A8,leds		; diagnostics
   2509 FFFC192E 207C 0003 0000                      movea.l #$30000,a0
   2510 FFFC1934 203C 5555 AAAA                      move.l 	#$5555aaaa,d0
   2511 FFFC193A                             ramtest4:
   2512 FFFC193A 20C0                                move.l 	d0,(a0)+
   2513 FFFC193C 2208                                move.l 	a0,d1
   2514 FFFC193E 4A41                                tst.w	d1
   2515 FFFC1940 660A                                bne.s   rmtst3
   2516 FFFC1942 4BF9 FFFC 194C                      lea		rmtst3,a5
   2517 FFFC1948 6000 FF0A                           bra		DisplayHexNumber
   2518 FFFC194C                             rmtst3:
   2519 FFFC194C B1FC 1FFF FFFC                      cmpa.l 	#$1FFFFFFC,a0
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 43
bootrom.asm
   2520 FFFC1952 66E6                                bne.s 	ramtest4
   2521 FFFC1954                             ramtest8:
   2522 FFFC1954 2448                                movea.l a0,a2
   2523 FFFC1956 207C 0003 0000                      movea.l #$30000,a0
   2524 FFFC195C                             ramtest5:
   2525 FFFC195C 2018                                move.l 	(a0)+,d0
   2526 FFFC195E B5C8                                cmpa.l	a0,a2
   2527 FFFC1960 671A                                beq.s	rmtst5
   2528 FFFC1962 2208                                move.l 	a0,d1
   2529 FFFC1964 4A41                                tst.w	d1
   2530 FFFC1966 660A                                bne.s	rmtst4
   2531 FFFC1968 4BF9 FFFC 1972                      lea		rmtst4,a5
   2532 FFFC196E 6000 FEE4                           bra		DisplayHexNumber
   2533 FFFC1972                             rmtst4:
   2534 FFFC1972 0C80 5555 AAAA                      cmpi.l 	#$5555aaaa,d0
   2535 FFFC1978 67E2                                beq.s 	ramtest5
   2536 FFFC197A 6622                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   Save last ram address in end of memory pointer.
                                             ;---------------------------------------------------
   2540 FFFC197C                             rmtst5:
   2541 FFFC197C 23C8 0001 0008                      move.l a0,memend
                                             ;-----------------------------------
                                             ;   Create very first memory block.
                                             ;-----------------------------------
   2545 FFFC1982 91FC 0000 000C                      suba.l 	#12,a0
   2546 FFFC1988 21C8 0404                           move.l 	a0,$0404
   2547 FFFC198C 21FC 4652 4545 0400                 move.l 	#$46524545,$0400
   2548 FFFC1994 21FC 0000 0408 0408                 move.l 	#$408,$408			; point back-link to self
   2549 FFFC199C 4ED3                                jmp 	(a3)
                                             ;----------------------------------
                                             ; Error in ram - go no farther.
                                             ;----------------------------------
   2553 FFFC199E                             ramtest7:
   2554 FFFC199E 4ED3                        		jmp 	(a3)
   2555 FFFC19A0 60FC                                bra.s 	ramtest7
                                             
                                             
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2563 FFFC19A2                             GraphicsDemo:
   2564 FFFC19A2 6100 0080                   		bsr		DrawLines
   2565 FFFC19A6 6100 0006                   		bsr		DrawRects
   2566 FFFC19AA 6000 F81C                   		bra		Monitor
                                             
   2568 FFFC19AE                             DrawRects:
   2569 FFFC19AE 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2570 FFFC19B4 4BF9 FFE0 0000              		lea		VDGREG,a5
   2571 FFFC19BA 2C3C 0000 4E20              		move.l	#20000,d6		; repeat a few times
   2572 FFFC19C0                             .0001:
   2573 FFFC19C0 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2574 FFFC19C4 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2575 FFFC19C6 4840                        		swap	d0				; and bits 16 to 24 for x0
   2576 FFFC19C8 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2577 FFFC19CC 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2578 FFFC19D0 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2579 FFFC19D4 242E 0C00                   		move.l	$0C00(a6),d2
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 44
bootrom.asm
   2580 FFFC19D8 3602                        		move.w	d2,d3
   2581 FFFC19DA 4842                        		swap	d2
   2582 FFFC19DC 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2583 FFFC19E0 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2584 FFFC19E4 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2585 FFFC19E8 282E 0C00                   		move.l	$0C00(a6),d4
   2586 FFFC19EC 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2587 FFFC19F0 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2588 FFFC19F4                             .0002:
   2589 FFFC19F4 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2590 FFFC19F8 BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2591 FFFC19FC 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2592 FFFC19FE 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2593 FFFC1A04 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2594 FFFC1A08 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2595 FFFC1A0C 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2596 FFFC1A10 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2597 FFFC1A14 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2598 FFFC1A18 3B7C 0003 042E              		move.w	#3,$42E(a5)		; pulse command queue (3 = draw rect)
   2599 FFFC1A1E 5386                        		sub.l	#1,d6
   2600 FFFC1A20 669E                        		bne		.0001			; go back and do more lines
   2601 FFFC1A22 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Draw lines randomly on the screen.
                                             ;===============================================================================
                                             
   2607 FFFC1A24                             DrawLines:
   2608 FFFC1A24 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2609 FFFC1A2A 4BF9 FFE0 0000              		lea		VDGREG,a5
   2610 FFFC1A30 2C3C 0003 0D40              		move.l	#200000,d6		; repeat a few times
   2611 FFFC1A36                             .0001:
                                             		; Wait for blitter to be done
   2613 FFFC1A36                             .0003:								
   2614 FFFC1A36 33FC 000A FFDC 0600         		move.w	#10,leds
   2615 FFFC1A3E 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2616 FFFC1A42 0800 000E                   		btst	#14,d0
   2617 FFFC1A46 6706                        		beq.s	.0004
   2618 FFFC1A48 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2619 FFFC1A4C 67E8                        		beq.s	.0003				; branch if not done
   2620 FFFC1A4E                             .0004:
   2621 FFFC1A4E 33FC 000B FFDC 0600         		move.w	#11,leds
   2622 FFFC1A56 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2623 FFFC1A5A 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2624 FFFC1A5C 4840                        		swap	d0				; and bits 16 to 24 for x0
   2625 FFFC1A5E 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2626 FFFC1A62 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2627 FFFC1A66 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2628 FFFC1A6A 242E 0C00                   		move.l	$0C00(a6),d2
   2629 FFFC1A6E 3602                        		move.w	d2,d3
   2630 FFFC1A70 4842                        		swap	d2
   2631 FFFC1A72 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2632 FFFC1A76 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2633 FFFC1A7A 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2634 FFFC1A7E 282E 0C00                   		move.l	$0C00(a6),d4
   2635 FFFC1A82 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2636 FFFC1A86 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2637 FFFC1A8A                             .0002:
   2638 FFFC1A8A 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2639 FFFC1A8E BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 45
bootrom.asm
   2640 FFFC1A92 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2641 FFFC1A94 33FC 000C FFDC 0600         		move.w	#12,leds
   2642 FFFC1A9C 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2643 FFFC1AA2 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2644 FFFC1AA6 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2645 FFFC1AAA 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2646 FFFC1AAE 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2647 FFFC1AB2 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2648 FFFC1AB6 3B7C 0002 042E              		move.w	#2,$42E(a5)		; pulse command queue (2 = draw line)
   2649 FFFC1ABC 5386                        		sub.l	#1,d6
   2650 FFFC1ABE 6600 FF76                   		bne		.0001			; go back and do more lines
   2651 FFFC1AC2 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Test Blitter
                                             ;===============================================================================
                                             
   2657 FFFC1AC4                             TestBlitter:
                                             		; puts a red rectangle on screen
   2659 FFFC1AC4 4BF9 FFE0 0000              		lea		VDGREG,a5
   2660 FFFC1ACA                             .0003:								
   2661 FFFC1ACA 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2662 FFFC1ACE 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2663 FFFC1AD2 67F6                        		beq.s	.0003				; branch if not done
   2664 FFFC1AD4 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set transfer count 8000 pixels
   2665 FFFC1ADC 3B7C 7C00 04A8              		move.w	#RED,$4A8(a5)		; set color red
   2666 FFFC1AE2 2B7C 0000 0168 0498         		move.l	#360,$498(a5)		; set destination address
   2667 FFFC1AEA 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2668 FFFC1AF2 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
   2669 FFFC1AFA 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; makes a copy of the upper left corner of the screen
   2672 FFFC1B00                             .0001:								
   2673 FFFC1B00 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2674 FFFC1B04 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2675 FFFC1B08 67F6                        		beq.s	.0001				; branch if not done
                                             		; Channel A
   2677 FFFC1B0A 2B7C 0000 03E8 04B0         		move.l	#1000,$4B0(a5)		; set source transfer count 8000 pixels
   2678 FFFC1B12 2B7C 0000 0000 0480         		move.l	#0,$480(a5)			; set source bitmap address (address in graphics mem)
   2679 FFFC1B1A 2B7C 0000 0168 0484         		move.l	#360,$484(a5)		; set src modulo
                                             		; Channel C
   2681 FFFC1B22 2B7C 0000 03E8 04B8         		move.l	#1000,$4B8(a5)		; set source transfer count 8000 pixels
   2682 FFFC1B2A 2B7C 0000 0000 0490         		move.l	#0,$490(a5)			; set source bitmap address (address in graphics mem)
   2683 FFFC1B32 2B7C 0000 0168 0494         		move.l	#360,$494(a5)		; set src modulo
                                             		; Channel D
   2685 FFFC1B3A 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set destination transfer count 8000 pixels
   2686 FFFC1B42 2B7C 0000 0140 0498         		move.l	#320,$498(a5)		; set destination address
   2687 FFFC1B4A 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
                                             		
   2689 FFFC1B52 2B7C 0000 0028 04A0         		move.l	#40,$4A0(a5)		; set source width
   2690 FFFC1B5A 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2691 FFFC1B62 3B7C 0091 04AE              		move.w	#$91,$4AE(a5)		; set op A|C	($11 = copy A)
   2692 FFFC1B68 3B7C 80A2 04AC              		move.w	#%1000000010100010,$4AC(a5)		; enable channel A,C,D, start transfer
   2693 FFFC1B6E                             .0002:								
   2694 FFFC1B6E 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2695 FFFC1B72 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2696 FFFC1B76 67F6                        		beq.s	.0002				; branch if not done
   2697 FFFC1B78 4E75                        		rts
                                             
                                             ;===============================================================================
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 46
bootrom.asm
                                             ; Generic I2C routines
                                             ;===============================================================================
                                             
                                             I2C_PREL	EQU		$0
                                             I2C_PREH	EQU		$2
                                             I2C_CTRL	EQU		$4
                                             I2C_RXR		EQU		$6
                                             I2C_TXR		EQU		$6
                                             I2C_CMD		EQU		$8
                                             I2C_STAT	EQU		$A
                                             
                                             ; i2c
   2712 FFFC1B7A                             i2c_setup:
   2713 FFFC1B7A 4DF9 FFDC 0E00              		lea		I2C,a6				
   2714 FFFC1B80 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2715 FFFC1B84 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2716 FFFC1B8A 4DF9 FFDC 0E10              		lea		I2C2,a6				
   2717 FFFC1B90 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2718 FFFC1B94 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2719 FFFC1B9A 4E75                        		rts
                                             
                                             ; Wait for I2C transfer to complete
                                             ;
                                             ; Parameters
                                             ; 	a6 - I2C controller base address
                                             
   2726 FFFC1B9C                             i2c_wait_tip:
   2727 FFFC1B9C 3F00                        		move.w	d0,-(a7)
   2728 FFFC1B9E                             .0001:					
   2729 FFFC1B9E 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for tip to clear
   2730 FFFC1BA2 0800 0001                   		btst	#1,d0
   2731 FFFC1BA6 66F6                        		bne.s	.0001
   2732 FFFC1BA8 301F                        		move.w	(a7)+,d0
   2733 FFFC1BAA 4E75                        		rts
                                             
                                             ; Parameters
                                             ;	d0.w - data to transmit
                                             ;	d1.w - command value
                                             ;	a6	 - I2C controller base address
                                             ;
   2740 FFFC1BAC                             i2c_wr_cmd:
   2741 FFFC1BAC 3D40 0006                   		move.w	d0,I2C_TXR(a6)
   2742 FFFC1BB0 3D41 0008                   		move.w	d1,I2C_CMD(a6)
   2743 FFFC1BB4 6100 FFE6                   		bsr		i2c_wait_tip
   2744 FFFC1BB8 302E 000A                   		move.w	I2C_STAT(a6),d0
   2745 FFFC1BBC 4E75                        		rts
                                             
   2747 FFFC1BBE                             i2c_xmit1:
   2748 FFFC1BBE 3F00                        		move.w	d0,-(a7)
   2749 FFFC1BC0 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2750 FFFC1BC6 7076                        		moveq	#$76,d0				; set slave address = %0111011
   2751 FFFC1BC8 323C 0090                   		move.w	#$90,d1				; set STA, WR
   2752 FFFC1BCC 6100 FFDE                   		bsr		i2c_wr_cmd
   2753 FFFC1BD0 6100 0010                   		bsr		i2c_wait_rx_nack
   2754 FFFC1BD4 301F                        		move.w	(a7)+,d0
   2755 FFFC1BD6 323C 0050                   		move.w	#$50,d1				; set STO, WR
   2756 FFFC1BDA 6100 FFD0                   		bsr		i2c_wr_cmd
   2757 FFFC1BDE 6100 0002                   		bsr		i2c_wait_rx_nack
                                             
   2759 FFFC1BE2                             i2c_wait_rx_nack:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 47
bootrom.asm
   2760 FFFC1BE2 3F00                        		move.w	d0,-(a7)
   2761 FFFC1BE4                             .0001:							
   2762 FFFC1BE4 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for RXack = 0
   2763 FFFC1BE8 0800 0007                   		btst	#7,d0
   2764 FFFC1BEC 66F6                        		bne.s	.0001
   2765 FFFC1BEE 301F                        		move.w	(a7)+,d0
   2766 FFFC1BF0 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Audio
                                             ;===============================================================================
                                             
   2772 FFFC1BF2                             AudioInputTest:
   2773 FFFC1BF2 4BF9 FFE0 0000              		lea		VDGREG,a5
   2774 FFFC1BF8 2B7C 0005 8000 0640         		move.l	#$58000,$640(a5)	; set buffer address ($FF8B0000)
   2775 FFFC1C00 3B7C 4000 0644              		move.w	#$4000,$644(a5)		; set buffer length
   2776 FFFC1C06 3B7C 0716 0646              		move.w	#1814,$646(a5)		; set period = 22.05kHz
   2777 FFFC1C0C 3B7C 1090 0650              		move.w	#$1090,$650(a5)		; enable input channel, plot mode
   2778 FFFC1C12 3B7C 0090 0650              		move.w	#$0090,$650(a5)		; turn off reset
                                             		; should have input now
                                             
                                             		; puts a dark blue rectangle on screen
   2782 FFFC1C18                             .0003:								
   2783 FFFC1C18 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2784 FFFC1C1C 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2785 FFFC1C20 67F6                        		beq.s	.0003				; branch if not done
   2786 FFFC1C22 2B7C 0001 0000 04BC         		move.l	#256*256,$4BC(a5)		; set transfer count pixels
   2787 FFFC1C2A 3B7C 000F 04A8              		move.w	#DARK_BLUE,$4A8(a5)		; set color 
   2788 FFFC1C30 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2789 FFFC1C38 2B7C 0000 0100 04A4         		move.l	#256,$4A4(a5)		; set destination width
   2790 FFFC1C40 2B7C 0000 0090 049C         		move.l	#BMP_WIDTH-256,$49C(a5)		; set dst modulo
   2791 FFFC1C48 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; delay a bit
   2794 FFFC1C4E 203C 0003 D090              		move.l	#250000,d0
   2795 FFFC1C54                             .0004:
   2796 FFFC1C54 5380                        		sub.l	#1,d0
   2797 FFFC1C56 66FC                        		bne.s	.0004
   2798 FFFC1C58 60BE                        		bra.s	.0003
                                             		
                                             
   2801 FFFC1C5A                             audio_pll_config:
   2802 FFFC1C5A 7000                        		moveq	#0,d0
   2803 FFFC1C5C 720E                        		moveq	#$0E,d1
   2804 FFFC1C5E 6100 001C                   		bsr		audio_write_reg
   2805 FFFC1C62 7002                        		moveq	#2,d0
   2806 FFFC1C64 41F9 FFFC 1CD6              		lea		audio_tbl1,a0
   2807 FFFC1C6A 6100 0076                   		bsr		audio_write_reg6
   2808 FFFC1C6E 4E75                        		rts
                                             
   2810 FFFC1C70                             audio_startup_config:
   2811 FFFC1C70 4E75                        		rts
                                             
   2813 FFFC1C72                             audio_init:
   2814 FFFC1C72 6100 FFE6                   		bsr		audio_pll_config
   2815 FFFC1C76 6100 FFF8                   		bsr		audio_startup_config
   2816 FFFC1C7A 4E75                        		rts
                                             
                                             ; d0.w = register number
                                             ; d1.w = data to write
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 48
bootrom.asm
                                             		
   2821 FFFC1C7C                             audio_write_reg:
   2822 FFFC1C7C 4DF9 FFDC 0E00              		lea		I2C,a6				
   2823 FFFC1C82 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2824 FFFC1C88 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2825 FFFC1C8E 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2826 FFFC1C94 6100 FF06                   		bsr		i2c_wait_tip	; wait for tip to clear
   2827 FFFC1C98 6100 FF48                   		bsr		i2c_wait_rx_nack
   2828 FFFC1C9C 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2829 FFFC1CA2 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2830 FFFC1CA8 6100 FEF2                   		bsr		i2c_wait_tip	; wait for tip to clear
   2831 FFFC1CAC 6100 FF34                   		bsr		i2c_wait_rx_nack
   2832 FFFC1CB0 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2833 FFFC1CB4 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2834 FFFC1CBA 6100 FEE0                   		bsr		i2c_wait_tip	; wait for tip to clear
   2835 FFFC1CBE 6100 FF22                   		bsr		i2c_wait_rx_nack
   2836 FFFC1CC2 3D41 0006                   		move.w	d1,I2C_TXR(a6)		; send data
   2837 FFFC1CC6 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set STO, WR
   2838 FFFC1CCC 6100 FECE                   		bsr		i2c_wait_tip	; wait for tip to clear
   2839 FFFC1CD0 6100 FF10                   		bsr		i2c_wait_rx_nack
   2840 FFFC1CD4 4E75                        		rts
                                             
   2842 FFFC1CD6                             audio_tbl1:
   2843 FFFC1CD6 0000 007D 0000 000C         		dc.w	$00,$7D,$00,$0C,$20,$01
   2844 FFFC1CDE 0020 0001                   
                                             ; a0
                                             ;
   2847 FFFC1CE2                             audio_write_reg6:
   2848 FFFC1CE2 41F9 FFFC 1CD6              		lea		audio_tbl1,a0
   2849 FFFC1CE8 4DF9 FFDC 0E00              		lea		I2C,a6				
   2850 FFFC1CEE 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2851 FFFC1CF4 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2852 FFFC1CFA 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2853 FFFC1D00 6100 FE9A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2854 FFFC1D04 6100 FEDC                   		bsr		i2c_wait_rx_nack
   2855 FFFC1D08 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2856 FFFC1D0E 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2857 FFFC1D14 6100 FE86                   		bsr		i2c_wait_tip	; wait for tip to clear
   2858 FFFC1D18 6100 FEC8                   		bsr		i2c_wait_rx_nack
                                             
   2860 FFFC1D1C 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2861 FFFC1D20 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2862 FFFC1D26 6100 FE74                   		bsr		i2c_wait_tip	; wait for tip to clear
   2863 FFFC1D2A 6100 FEB6                   		bsr		i2c_wait_rx_nack
                                             		
   2865 FFFC1D2E 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #0
   2866 FFFC1D32 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2867 FFFC1D38 6100 FE62                   		bsr		i2c_wait_tip	; wait for tip to clear
   2868 FFFC1D3C 6100 FEA4                   		bsr		i2c_wait_rx_nack
                                             
   2870 FFFC1D40 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #1
   2871 FFFC1D44 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2872 FFFC1D4A 6100 FE50                   		bsr		i2c_wait_tip	; wait for tip to clear
   2873 FFFC1D4E 6100 FE92                   		bsr		i2c_wait_rx_nack
                                             
   2875 FFFC1D52 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #2
   2876 FFFC1D56 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2877 FFFC1D5C 6100 FE3E                   		bsr		i2c_wait_tip	; wait for tip to clear
   2878 FFFC1D60 6100 FE80                   		bsr		i2c_wait_rx_nack
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 49
bootrom.asm
   2880 FFFC1D64 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #3
   2881 FFFC1D68 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2882 FFFC1D6E 6100 FE2C                   		bsr		i2c_wait_tip	; wait for tip to clear
   2883 FFFC1D72 6100 FE6E                   		bsr		i2c_wait_rx_nack
                                             
   2885 FFFC1D76 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #4
   2886 FFFC1D7A 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2887 FFFC1D80 6100 FE1A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2888 FFFC1D84 6100 FE5C                   		bsr		i2c_wait_rx_nack
                                             
   2890 FFFC1D88 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #5
   2891 FFFC1D8C 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set WR, STO
   2892 FFFC1D92 6100 FE08                   		bsr		i2c_wait_tip		; wait for tip to clear
   2893 FFFC1D96 6100 FE4A                   		bsr		i2c_wait_rx_nack
   2894 FFFC1D9A 4E75                        		rts
                                             
   2896 FFFC1D9C                             set_hp_output:
   2897 FFFC1D9C 7021                        		moveq	#$21,d0				;
   2898 FFFC1D9E 7200                        		moveq	#0,d1
   2899 FFFC1DA0 6100 FEDA                   		bsr		audio_write_reg
   2900 FFFC1DA4 7020                        		moveq	#$20,d0				;
   2901 FFFC1DA6 6100 FED4                   		bsr		audio_write_reg
   2902 FFFC1DAA 7023                        		moveq	#$23,d0
   2903 FFFC1DAC 323C 00E7                   		move.w	#$E7,d1		
   2904 FFFC1DB0 6100 FECA                   		bsr		audio_write_reg
   2905 FFFC1DB4 7024                        		moveq	#$24,d0
   2906 FFFC1DB6 323C 00E7                   		move.w	#$E7,d1		
   2907 FFFC1DBA 6100 FEC0                   		bsr		audio_write_reg
   2908 FFFC1DBE 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Realtime clock routines
                                             ;===============================================================================
                                             
   2914 FFFC1DC0                             rtc_read:
   2915 FFFC1DC0 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2916 FFFC1DC6 4BF9 0001 0600              		lea		RTCBuf,a5
   2917 FFFC1DCC 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2918 FFFC1DD2 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2919 FFFC1DD6 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2920 FFFC1DDA 6100 FDD0                   		bsr		i2c_wr_cmd
   2921 FFFC1DDE 4A00                        		tst.b	d0
   2922 FFFC1DE0 6B72                        		bmi		.rxerr
   2923 FFFC1DE2 303C 0000                   		move.w	#$00,d0				; address zero
   2924 FFFC1DE6 323C 0010                   		move.w	#$10,d1				; wr bit
   2925 FFFC1DEA 6100 FDC0                   		bsr		i2c_wr_cmd
   2926 FFFC1DEE 4A00                        		tst.b	d0
   2927 FFFC1DF0 6B62                        		bmi		.rxerr
   2928 FFFC1DF2 303C 00DF                   		move.w	#$DF,d0				; read address, read op
   2929 FFFC1DF6 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2930 FFFC1DFA 6100 FDB0                   		bsr		i2c_wr_cmd
   2931 FFFC1DFE 4A00                        		tst.b	d0
   2932 FFFC1E00 6B52                        		bmi		.rxerr
                                             		
   2934 FFFC1E02 343C 0020                   		move.w	#$20,d2
   2935 FFFC1E06                             .0001:
   2936 FFFC1E06 3D7C 0020 0008              		move.w	#$20,I2C_CMD(a6)	; rd bit
   2937 FFFC1E0C 6100 FD8E                   		bsr		i2c_wait_tip
   2938 FFFC1E10 6100 FDD0                   		bsr		i2c_wait_rx_nack
   2939 FFFC1E14 302E 000A                   		move.w	I2C_STAT(a6),d0
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 50
bootrom.asm
   2940 FFFC1E18 4A00                        		tst.b	d0
   2941 FFFC1E1A 6B38                        		bmi		.rxerr
   2942 FFFC1E1C 302E 0006                   		move.w	I2C_RXR(a6),d0
   2943 FFFC1E20 1B80 2000                   		move.b	d0,(a5,d2.w)
   2944 FFFC1E24 5242                        		add.w	#1,d2
   2945 FFFC1E26 B47C 005F                   		cmp.w	#$5F,d2
   2946 FFFC1E2A 66DA                        		bne		.0001
   2947 FFFC1E2C 3D7C 0068 0008              		move.w	#$68,I2C_CMD(a6)	; STO, rd bit + nack
   2948 FFFC1E32 6100 FD68                   		bsr		i2c_wait_tip
   2949 FFFC1E36 6100 FDAA                   		bsr		i2c_wait_rx_nack
   2950 FFFC1E3A 302E 000A                   		move.w	I2C_STAT(a6),d0
   2951 FFFC1E3E 4A00                        		tst.b	d0
   2952 FFFC1E40 6B12                        		bmi		.rxerr
   2953 FFFC1E42 302E 0006                   		move.w	I2C_RXR(a6),d0
   2954 FFFC1E46 1B80 2000                   		move.b	d0,(a5,d2.w)
   2955 FFFC1E4A 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2956 FFFC1E50 7000                        		moveq	#0,d0
   2957 FFFC1E52 4E75                        		rts
   2958 FFFC1E54                             .rxerr:
   2959 FFFC1E54 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2960 FFFC1E5A 4E75                        		rts
                                             
   2962 FFFC1E5C                             rtc_write:
   2963 FFFC1E5C 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2964 FFFC1E62 4BF9 0001 0600              		lea		RTCBuf,a5
   2965 FFFC1E68 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2966 FFFC1E6E 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2967 FFFC1E72 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2968 FFFC1E76 6100 FD34                   		bsr		i2c_wr_cmd
   2969 FFFC1E7A 4A00                        		tst.b	d0
   2970 FFFC1E7C 6B46                        		bmi		.rxerr
   2971 FFFC1E7E 303C 0000                   		move.w	#$00,d0				; address zero
   2972 FFFC1E82 323C 0010                   		move.w	#$10,d1				; wr bit
   2973 FFFC1E86 6100 FD24                   		bsr		i2c_wr_cmd
   2974 FFFC1E8A 4A00                        		tst.b	d0
   2975 FFFC1E8C 6B36                        		bmi		.rxerr
   2976 FFFC1E8E 343C 0020                   		move.w	#$20,d2
   2977 FFFC1E92                             .0001:
   2978 FFFC1E92 1035 2000                   		move.b	(a5,d2.w),d0
   2979 FFFC1E96 323C 0010                   		move.w	#$10,d1
   2980 FFFC1E9A 6100 FD10                   		bsr		i2c_wr_cmd
   2981 FFFC1E9E 4A00                        		tst.b	d0
   2982 FFFC1EA0 6B22                        		bmi		.rxerr
   2983 FFFC1EA2 5242                        		add.w	#1,d2
   2984 FFFC1EA4 B47C 005F                   		cmp.w	#$5F,d2
   2985 FFFC1EA8 66E8                        		bne.s	.0001
   2986 FFFC1EAA 1035 2000                   		move.b	(a5,d2.w),d0
   2987 FFFC1EAE 323C 0050                   		move.w	#$50,d1				; STO, wr bit
   2988 FFFC1EB2 6100 FCF8                   		bsr		i2c_wr_cmd
   2989 FFFC1EB6 4A00                        		tst.b	d0
   2990 FFFC1EB8 6B0A                        		bmi		.rxerr
   2991 FFFC1EBA 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2992 FFFC1EC0 7000                        		moveq	#0,d0
   2993 FFFC1EC2 4E75                        		rts
   2994 FFFC1EC4                             .rxerr:
   2995 FFFC1EC4 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2996 FFFC1ECA 4E75                        		rts
                                             
   2998 FFFC1ECC                             msgRtcReadFail:
   2999 FFFC1ECC 52 54 43 20 72 65 61 64     		dc.b	"RTC read/write failed.",$0D,$0A,$00
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 51
bootrom.asm
   3000 FFFC1ED4 2F 77 72 69 74 65 20 66     
   3001 FFFC1EDC 61 69 6C 65 64 2E 0D 0A     
   3002 FFFC1EE4 00                          
                                             
                                             
                                             ;===============================================================================
                                             ; ORGFX routines
                                             ;===============================================================================
                                             
   3009 FFFC1EE5 FF                          		align	2
   3010 FFFC1EE6                             gfx_wait:
   3011 FFFC1EE6 48E7 8004                   		movem.l	d0/a5,-(a7)
   3012 FFFC1EEA 4BF9 FFE0 0000              		lea		VDGREG,a5
   3013 FFFC1EF0 2B7C 0000 0004 0700         		move.l	#GFX_STATUS,$700(a5)	; address status register
   3014 FFFC1EF8                             .0001:
   3015 FFFC1EF8 3B7C 00F3 0708              		move.w	#$F3,$708(a5)		; set control (generate bus access to gfx)
   3016 FFFC1EFE 202D 0704                   		move.l	$704(a5),d0			; get status value
   3017 FFFC1F02 0800 0000                   		btst	#0,d0				; test bit 0
   3018 FFFC1F06 66F0                        		bne.s	.0001
   3019 FFFC1F08 4CDF 2001                   		movem.l	(a7)+,d0/a5
   3020 FFFC1F0C 4E75                        		rts
                                             
   3022 FFFC1F0E                             gfx_set_400x300:
   3023 FFFC1F0E 6100 FFD6                   		bsr		gfx_wait
   3024 FFFC1F12 4BF9 FFE0 0000              		lea		VDGREG,a5
   3025 FFFC1F18 2B7C 0000 0014 0700         		move.l	#GFX_TARGET_SIZE_X,$700(a5)	; address register
   3026 FFFC1F20 2B7C 0000 0190 0704         		move.l	#400,$704(a5)				; set data
   3027 FFFC1F28 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3028 FFFC1F2E 2B7C 0000 0018 0700         		move.l	#GFX_TARGET_SIZE_Y,$700(a5)	; address register
   3029 FFFC1F36 2B7C 0000 012C 0704         		move.l	#300,$704(a5)				; set data
   3030 FFFC1F3E 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3031 FFFC1F44 4E75                        		rts
                                             
   3033 FFFC1F46                             gfx_init:
   3034 FFFC1F46 6100 FF9E                   		bsr		gfx_wait
   3035 FFFC1F4A 4BF9 FFE0 0000              		lea		VDGREG,a5
   3036 FFFC1F50 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   3037 FFFC1F58 23FC 0000 0000 0001 042C    		move.l	#0,gfx_control_reg_mem
                                             
   3039 FFFC1F62 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   3040 FFFC1F6A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3041 FFFC1F70 2B7C 0000 0010 0700         		move.l	#GFX_TARGET_BASE,$700(a5)	; address register
   3042 FFFC1F78 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3043 FFFC1F7E 4E75                        		rts
                                             
   3045 FFFC1F80                             gfx_set_color_depth:
   3046 FFFC1F80 4BF9 FFE0 0000              		lea		VDGREG,a5
   3047 FFFC1F86 02B9 FFFF FFFD 0001 042C    		and.l	#-3,gfx_control_reg_mem		; mask off 2 LSB (color depth field)
                                             
   3049 FFFC1F90 00B9 0000 0001 0001 042C    		or.l	#1,gfx_control_reg_mem		; select 16 bpp
                                             
   3051 FFFC1F9A 6100 FF4A                   		bsr		gfx_wait
   3052 FFFC1F9E 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   3053 FFFC1FA6 2B79 0001 042C 0704         		move.l	gfx_control_reg_mem,$704(a5)
   3054 FFFC1FAE 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3055 FFFC1FB4 4E75                        		rts
                                             
   3057 FFFC1FB6                             gfx_set_color:
   3058 FFFC1FB6 6100 FF2E                   		bsr		gfx_wait
   3059 FFFC1FBA 4BF9 FFE0 0000              		lea		VDGREG,a5
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 52
bootrom.asm
   3060 FFFC1FC0 2B7C 0000 0084 0700         		move.l	#GFX_COLOR0,$700(a5)
   3061 FFFC1FC8 2B40 0704                   		move.l	d0,$704(a5)
   3062 FFFC1FCC 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3063 FFFC1FD2 4E75                        		rts
                                             
   3065 FFFC1FD4                             gfx_line:
   3066 FFFC1FD4 6100 FF10                   		bsr		gfx_wait
   3067 FFFC1FD8 4BF9 FFE0 0000              		lea		VDGREG,a5
   3068 FFFC1FDE 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   3069 FFFC1FE6 2B40 0704                   		move.l	d0,$704(a5)
   3070 FFFC1FEA 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3071 FFFC1FF0 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   3072 FFFC1FF8 2B41 0704                   		move.l	d1,$704(a5)
   3073 FFFC1FFC 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3074 FFFC2002 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   3075 FFFC200A 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   3076 FFFC2012 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3077 FFFC2018 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   3078 FFFC201E 0086 0000 0000              		or.l	#GFX_ACTIVE_POINT0,d6
   3079 FFFC2024 2A86                        		move.l	d6,GFX_CONTROL(a5)
   3080 FFFC2026 2B46 0704                   		move.l	d6,$704(a5)
   3081 FFFC202A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3082 FFFC2030 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   3083 FFFC2038 2B42 0704                   		move.l	d2,$704(a5)
   3084 FFFC203C 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3085 FFFC2042 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   3086 FFFC204A 2B43 0704                   		move.l	d3,$704(a5)
   3087 FFFC204E 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3088 FFFC2054 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   3089 FFFC205C 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   3090 FFFC2064 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3091 FFFC206A 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   3092 FFFC2070 0086 0001 0000              		or.l	#GFX_ACTIVE_POINT1,d6
   3093 FFFC2076 2A86                        		move.l	d6,GFX_CONTROL(a5)
   3094 FFFC2078 2B46 0704                   		move.l	d6,$704(a5)
   3095 FFFC207C 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3096 FFFC2082 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   3097 FFFC2088 0086 0000 0200              		or.l	#GFX_LINE,d6
   3098 FFFC208E 2A86                        		move.l	d6,GFX_CONTROL(a5)
   3099 FFFC2090 2B46 0704                   		move.l	d6,$704(a5)
   3100 FFFC2094 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3101 FFFC209A 4E75                        		rts
                                             
   3103 FFFC209C                             gfx_demo:
   3104 FFFC209C 6100 FEA8                   		bsr		gfx_init
   3105 FFFC20A0 6100 FE6C                   		bsr		gfx_set_400x300
   3106 FFFC20A4                             .0001:
   3107 FFFC20A4 4DF9 FFDC 0000              		lea		$FFDC0000,a6	; set I/O base
   3108 FFFC20AA 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   3109 FFFC20AE 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   3110 FFFC20B0 4840                        		swap	d0				; and bits 16 to 24 for x0
   3111 FFFC20B2 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   3112 FFFC20B6 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   3113 FFFC20BA 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   3114 FFFC20BE 242E 0C00                   		move.l	$0C00(a6),d2
   3115 FFFC20C2 3602                        		move.w	d2,d3
   3116 FFFC20C4 4842                        		swap	d2
   3117 FFFC20C6 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   3118 FFFC20CA 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   3119 FFFC20CE 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 53
bootrom.asm
   3120 FFFC20D2 282E 0C00                   		move.l	$0C00(a6),d4
   3121 FFFC20D6 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   3122 FFFC20DA 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   3123 FFFC20DE 2C00                        		move.l	d0,d6
   3124 FFFC20E0 2004                        		move.l	d4,d0
   3125 FFFC20E2 6100 FED2                   		bsr		gfx_set_color
   3126 FFFC20E6 2006                        		move.l	d6,d0
   3127 FFFC20E8 6100 FEEA                   		bsr		gfx_line
   3128 FFFC20EC 60B6                        		bra		.0001
                                             
                                             		
                                             ; Randomize the screen	
                                             ;		move.l	#VDGBUF,A0
                                             ;		move.l	#%011011111,D0		; light blue
                                             ;		move.l	#640*512,D1
                                             ;clrscr_loop1:
                                             ;		move.l	$0C00(a6),d0			; get a random number
                                             ;		clr.w	$0C04(a6)				; generate next number
                                             ;		move.w	d0,(a0)+				; store it to the screen
                                             ;		sub.l	#1,d1
                                             ;		bne		clrscr_loop1
                                             
   3142 FFFC20EE                             msg_start:
   3143 FFFC20EE 4E 34 56 20 36 38 6B 20     	dc.b	"N4V 68k System Starting",0
   3144 FFFC20F6 53 79 73 74 65 6D 20 53     
   3145 FFFC20FE 74 61 72 74 69 6E 67 00     
                                             
                                             
                                             ;===============================================================================
                                             ; MMU
                                             ;===============================================================================
                                             		align	2
   3152 FFFC2106                             mmu_init:
   3153 FFFC2106 33FC 1010 FFDC 0600         		move.w	#$1010,leds
   3154 FFFC210E 223C 0002 0000              		move.l	#131072,d1					; count of addresses to set map
   3155 FFFC2114 207C 1FF4 0000              		movea.l	#$1FF40000,a0				; base of page tables
   3156 FFFC211A 7007                        		moveq	#7,d0						; start at page zero, read,write,execute
   3157 FFFC211C                             .0001:
   3158 FFFC211C 20C0                        		move.l	d0,(a0)+					; update page table entry
   3159 FFFC211E 0680 0000 1000              		add.l	#$1000,d0
   3160 FFFC2124 5381                        		sub.l	#1,d1
   3161 FFFC2126 66F4                        		bne.s	.0001
                                             	
                                             		; Setup the page directory
                                             		; There are only 128 entries to be set, but all entries must be
                                             		; setup because there's no page faulting on not present. All the
                                             		; entries must point to present pages. So the part of the address
                                             		; space that isn't present is setup to point to a dummy page
                                             		; table.
                                             
   3170 FFFC2128 33FC 1111 FFDC 0600         		move.w	#$1111,leds
   3171 FFFC2130 323C 0400                   		move.w	#1024,d1			; 1024 entries to setup
   3172 FFFC2134 207C 1FFF E000              		move.l	#$1FFFE000,a0		; page table for not present entries
   3173 FFFC213A 203C 1FFF D006              		move.l	#$1FFFD006,d0		; point all entries for not present pages to $1FFFD000
   3174 FFFC2140                             .0003:
   3175 FFFC2140 20C0                        		move.l	d0,(a0)+
   3176 FFFC2142 51C9 FFFC                   		dbra	d1,.0003
                                             
   3178 FFFC2146 33FC 1212 FFDC 0600         		move.w	#$1212,leds
   3179 FFFC214E 747F                        		move.l	#127,d2
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 54
bootrom.asm
   3180 FFFC2150 207C 1FFF F000              		movea.l	#$1FFFF000,a0		; a0 = page directory address
   3181 FFFC2156 223C 1FFF E000              		move.l	#$1FFFE000,d1		; point to not present page table
   3182 FFFC215C 203C 1FF4 0007              		move.l	#$1FF40007,d0
   3183 FFFC2162                             .0002:
   3184 FFFC2162 2141 0200                   		move.l	d1,$0200(a0)		; 7/8 of memory isn't available
   3185 FFFC2166 2141 0400                   		move.l	d1,$0400(a0)
   3186 FFFC216A 2141 0600                   		move.l	d1,$0600(a0)
   3187 FFFC216E 2141 0800                   		move.l	d1,$0800(a0)
   3188 FFFC2172 2141 0A00                   		move.l	d1,$0A00(a0)
   3189 FFFC2176 2141 0C00                   		move.l	d1,$0C00(a0)
   3190 FFFC217A 2141 0E00                   		move.l	d1,$0E00(a0)
   3191 FFFC217E 20C0                        		move.l	d0,(a0)+
   3192 FFFC2180 0680 0000 1000              		add.l	#$1000,d0
   3193 FFFC2186 51CA FFDA                   		dbra	d2,.0002
   3194 FFFC218A 33FC 1919 FFDC 0600         		move.w	#$1919,leds
   3195 FFFC2192 33FC 0000 FFFF FFF6         		move.w	#$00,$FFFFFFF6				; set asid
   3196 FFFC219A 23F9 1FFF F000 FFFF FFF0    		move.l	$1FFFF000,$FFFFFFF0			; set page directory address, enable
                                             
   3198 FFFC21A4 4E75                        		rts
                                             		
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   3205 FFFC21A6                             font8:
   3206 FFFC21A6 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $00
                                             
   3208 FFFC21AE 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3210 FFFC21B6 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3212 FFFC21BE 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3214 FFFC21C6 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $04
                                             
   3216 FFFC21CE 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3218 FFFC21D6 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3220 FFFC21DE 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3222 FFFC21E6 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $08
                                             
   3224 FFFC21EE 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3226 FFFC21F6 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3228 FFFC21FE 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3230 FFFC2206 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $0C
                                             
   3232 FFFC220E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3234 FFFC2216 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3236 FFFC221E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3238 FFFC2226 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $10
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 55
bootrom.asm
   3240 FFFC222E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3242 FFFC2236 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3244 FFFC223E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3246 FFFC2246 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $14
                                             
   3248 FFFC224E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3250 FFFC2256 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3252 FFFC225E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3254 FFFC2266 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $18
                                             
   3256 FFFC226E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3258 FFFC2276 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3260 FFFC227E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3262 FFFC2286 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $1C
                                             
   3264 FFFC228E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3266 FFFC2296 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3268 FFFC229E 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3270 FFFC22A6 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; SPACE
                                             
   3272 FFFC22AE 18 18 18 18 18 00 18 00     	dc.b	$18,$18,$18,$18,$18,$00,$18,$00	; !
                                             
   3274 FFFC22B6 6C 6C 00 00 00 00 00 00     	dc.b	$6C,$6C,$00,$00,$00,$00,$00,$00	; "
                                             
   3276 FFFC22BE 6C 6C FE 6C FE 6C 6C 00     	dc.b	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00	; #
                                             
   3278 FFFC22C6 18 3E 60 3C 06 7C 18 00     	dc.b	$18,$3E,$60,$3C,$06,$7C,$18,$00	; $
                                             
   3280 FFFC22CE 00 66 AC D8 36 6A CC 00     	dc.b	$00,$66,$AC,$D8,$36,$6A,$CC,$00	; %
                                             
   3282 FFFC22D6 38 6C 68 76 DC CE 7B 00     	dc.b	$38,$6C,$68,$76,$DC,$CE,$7B,$00	; &
                                             
   3284 FFFC22DE 18 18 30 00 00 00 00 00     	dc.b	$18,$18,$30,$00,$00,$00,$00,$00	; '
                                             
   3286 FFFC22E6 0C 18 30 30 30 18 0C 00     	dc.b	$0C,$18,$30,$30,$30,$18,$0C,$00	; (
                                             
   3288 FFFC22EE 30 18 0C 0C 0C 18 30 00     	dc.b	$30,$18,$0C,$0C,$0C,$18,$30,$00	; )
                                             
   3290 FFFC22F6 00 66 3C FF 3C 66 00 00     	dc.b	$00,$66,$3C,$FF,$3C,$66,$00,$00	; *
                                             
   3292 FFFC22FE 00 18 18 7E 18 18 00 00     	dc.b	$00,$18,$18,$7E,$18,$18,$00,$00	; +
                                             
   3294 FFFC2306 00 00 00 00 00 18 18 30     	dc.b	$00,$00,$00,$00,$00,$18,$18,$30	; ,
                                             
   3296 FFFC230E 00 00 00 7E 00 00 00 00     	dc.b	$00,$00,$00,$7E,$00,$00,$00,$00	; -
                                             
   3298 FFFC2316 00 00 00 00 00 18 18 00     	dc.b	$00,$00,$00,$00,$00,$18,$18,$00	; .
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 56
bootrom.asm
   3300 FFFC231E 03 06 0C 18 30 60 C0 00     	dc.b	$03,$06,$0C,$18,$30,$60,$C0,$00	; /
                                             
   3302 FFFC2326 3C 66 6E 7E 76 66 3C 00     	dc.b	$3C,$66,$6E,$7E,$76,$66,$3C,$00	; 0
                                             
   3304 FFFC232E 18 38 78 18 18 18 18 00     	dc.b	$18,$38,$78,$18,$18,$18,$18,$00	; 1
                                             
   3306 FFFC2336 3C 66 06 0C 18 30 7E 00     	dc.b	$3C,$66,$06,$0C,$18,$30,$7E,$00	; 2
                                             
   3308 FFFC233E 3C 66 06 1C 06 66 3C 00     	dc.b	$3C,$66,$06,$1C,$06,$66,$3C,$00	; 3
                                             
   3310 FFFC2346 1C 3C 6C CC FE 0C 0C 00     	dc.b	$1C,$3C,$6C,$CC,$FE,$0C,$0C,$00	; 4
                                             
   3312 FFFC234E 7E 60 7C 06 06 66 3C 00     	dc.b	$7E,$60,$7C,$06,$06,$66,$3C,$00	; 5
                                             
   3314 FFFC2356 1C 30 60 7C 66 66 3C 00     	dc.b	$1C,$30,$60,$7C,$66,$66,$3C,$00	; 6
                                             
   3316 FFFC235E 7E 06 06 0C 18 18 18 00     	dc.b	$7E,$06,$06,$0C,$18,$18,$18,$00	; 7
                                             
   3318 FFFC2366 3C 66 66 3C 66 66 3C 00     	dc.b	$3C,$66,$66,$3C,$66,$66,$3C,$00	; 8
                                             
   3320 FFFC236E 3C 66 66 3E 06 0C 38 00     	dc.b	$3C,$66,$66,$3E,$06,$0C,$38,$00	; 9
                                             
   3322 FFFC2376 00 18 18 00 00 18 18 00     	dc.b	$00,$18,$18,$00,$00,$18,$18,$00	; :
                                             
   3324 FFFC237E 00 18 18 00 00 18 18 30     	dc.b	$00,$18,$18,$00,$00,$18,$18,$30	; ;
                                             
   3326 FFFC2386 00 06 18 60 18 06 00 00     	dc.b	$00,$06,$18,$60,$18,$06,$00,$00	; <
                                             
   3328 FFFC238E 00 00 7E 00 7E 00 00 00     	dc.b	$00,$00,$7E,$00,$7E,$00,$00,$00	; =
                                             
   3330 FFFC2396 00 60 18 06 18 60 00 00     	dc.b	$00,$60,$18,$06,$18,$60,$00,$00	; >
                                             
   3332 FFFC239E 3C 66 06 0C 18 00 18 00     	dc.b	$3C,$66,$06,$0C,$18,$00,$18,$00	; ?
                                             
   3334 FFFC23A6 7C C6 DE D6 DE C0 78 00     	dc.b	$7C,$C6,$DE,$D6,$DE,$C0,$78,$00	; @
                                             
   3336 FFFC23AE 3C 66 66 7E 66 66 66 00     	dc.b	$3C,$66,$66,$7E,$66,$66,$66,$00	; A
                                             
   3338 FFFC23B6 7C 66 66 7C 66 66 7C 00     	dc.b	$7C,$66,$66,$7C,$66,$66,$7C,$00	; B
                                             
   3340 FFFC23BE 1E 30 60 60 60 30 1E 00     	dc.b	$1E,$30,$60,$60,$60,$30,$1E,$00	; C
                                             
   3342 FFFC23C6 78 6C 66 66 66 6C 78 00     	dc.b	$78,$6C,$66,$66,$66,$6C,$78,$00	; D
                                             
   3344 FFFC23CE 7E 60 60 78 60 60 7E 00     	dc.b	$7E,$60,$60,$78,$60,$60,$7E,$00	; E
                                             
   3346 FFFC23D6 7E 60 60 78 60 60 60 00     	dc.b	$7E,$60,$60,$78,$60,$60,$60,$00	; F
                                             
   3348 FFFC23DE 3C 66 60 6E 66 66 3E 00     	dc.b	$3C,$66,$60,$6E,$66,$66,$3E,$00	; G
                                             
   3350 FFFC23E6 66 66 66 7E 66 66 66 00     	dc.b	$66,$66,$66,$7E,$66,$66,$66,$00	; H
                                             
   3352 FFFC23EE 3C 18 18 18 18 18 3C 00     	dc.b	$3C,$18,$18,$18,$18,$18,$3C,$00	; I
                                             
   3354 FFFC23F6 06 06 06 06 06 66 3C 00     	dc.b	$06,$06,$06,$06,$06,$66,$3C,$00	; J
                                             
   3356 FFFC23FE C6 CC D8 F0 D8 CC C6 00     	dc.b	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00	; K
                                             
   3358 FFFC2406 60 60 60 60 60 60 7E 00     	dc.b	$60,$60,$60,$60,$60,$60,$7E,$00	; L
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 57
bootrom.asm
   3360 FFFC240E C6 EE FE D6 C6 C6 C6 00     	dc.b	$C6,$EE,$FE,$D6,$C6,$C6,$C6,$00	; M
                                             
   3362 FFFC2416 C6 E6 F6 DE CE C6 C6 00     	dc.b	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00	; N
                                             
   3364 FFFC241E 3C 66 66 66 66 66 3C 00     	dc.b	$3C,$66,$66,$66,$66,$66,$3C,$00	; O
                                             
   3366 FFFC2426 7C 66 66 7C 60 60 60 00     	dc.b	$7C,$66,$66,$7C,$60,$60,$60,$00	; P
                                             
   3368 FFFC242E 78 CC CC CC CC DC 7E 00     	dc.b	$78,$CC,$CC,$CC,$CC,$DC,$7E,$00	; Q
                                             
   3370 FFFC2436 7C 66 66 7C 6C 66 66 00     	dc.b	$7C,$66,$66,$7C,$6C,$66,$66,$00	; R
                                             
   3372 FFFC243E 3C 66 70 3C 0E 66 3C 00     	dc.b	$3C,$66,$70,$3C,$0E,$66,$3C,$00	; S
                                             
   3374 FFFC2446 7E 18 18 18 18 18 18 00     	dc.b	$7E,$18,$18,$18,$18,$18,$18,$00	; T
                                             
   3376 FFFC244E 66 66 66 66 66 66 3C 00     	dc.b	$66,$66,$66,$66,$66,$66,$3C,$00	; U
                                             
   3378 FFFC2456 66 66 66 66 3C 3C 18 00     	dc.b	$66,$66,$66,$66,$3C,$3C,$18,$00	; V
                                             
   3380 FFFC245E C6 C6 C6 D6 FE EE C6 00     	dc.b	$C6,$C6,$C6,$D6,$FE,$EE,$C6,$00	; W
                                             
   3382 FFFC2466 C3 66 3C 18 3C 66 C3 00     	dc.b	$C3,$66,$3C,$18,$3C,$66,$C3,$00	; X
                                             
   3384 FFFC246E C3 66 3C 18 18 18 18 00     	dc.b	$C3,$66,$3C,$18,$18,$18,$18,$00	; Y
                                             
   3386 FFFC2476 FE 0C 18 30 60 C0 FE 00     	dc.b	$FE,$0C,$18,$30,$60,$C0,$FE,$00	; Z
                                             
   3388 FFFC247E 3C 30 30 30 30 30 3C 00     	dc.b	$3C,$30,$30,$30,$30,$30,$3C,$00	; [
                                             
   3390 FFFC2486 C0 60 30 18 0C 06 03 00     	dc.b	$C0,$60,$30,$18,$0C,$06,$03,$00	; \
                                             
   3392 FFFC248E 3C 0C 0C 0C 0C 0C 3C 00     	dc.b	$3C,$0C,$0C,$0C,$0C,$0C,$3C,$00	; ]
                                             
   3394 FFFC2496 10 38 6C C6 00 00 00 00     	dc.b	$10,$38,$6C,$C6,$00,$00,$00,$00	; ^
                                             
   3396 FFFC249E 00 00 00 00 00 00 00 FE     	dc.b	$00,$00,$00,$00,$00,$00,$00,$FE	; _
                                             
   3398 FFFC24A6 18 18 0C 00 00 00 00 00     	dc.b	$18,$18,$0C,$00,$00,$00,$00,$00	; `
                                             
   3400 FFFC24AE 00 00 3C 06 3E 66 3E 00     	dc.b	$00,$00,$3C,$06,$3E,$66,$3E,$00	; a
                                             
   3402 FFFC24B6 60 60 7C 66 66 66 7C 00     	dc.b	$60,$60,$7C,$66,$66,$66,$7C,$00	; b
                                             
   3404 FFFC24BE 00 00 3C 60 60 60 3C 00     	dc.b	$00,$00,$3C,$60,$60,$60,$3C,$00	; c
                                             
   3406 FFFC24C6 06 06 3E 66 66 66 3E 00     	dc.b	$06,$06,$3E,$66,$66,$66,$3E,$00	; d
                                             
   3408 FFFC24CE 00 00 3C 66 7E 60 3C 00     	dc.b	$00,$00,$3C,$66,$7E,$60,$3C,$00	; e
                                             
   3410 FFFC24D6 1C 30 7C 30 30 30 30 00     	dc.b	$1C,$30,$7C,$30,$30,$30,$30,$00	; f
                                             
   3412 FFFC24DE 00 00 3E 66 66 3E 06 3C     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$3C	; g
                                             
   3414 FFFC24E6 60 60 7C 66 66 66 66 00     	dc.b	$60,$60,$7C,$66,$66,$66,$66,$00	; h
                                             
   3416 FFFC24EE 18 00 18 18 18 18 0C 00     	dc.b	$18,$00,$18,$18,$18,$18,$0C,$00	; i
                                             
   3418 FFFC24F6 0C 00 0C 0C 0C 0C 0C 78     	dc.b	$0C,$00,$0C,$0C,$0C,$0C,$0C,$78	; j
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 58
bootrom.asm
   3420 FFFC24FE 60 60 66 6C 78 6C 66 00     	dc.b	$60,$60,$66,$6C,$78,$6C,$66,$00	; k
                                             
   3422 FFFC2506 18 18 18 18 18 18 0C 00     	dc.b	$18,$18,$18,$18,$18,$18,$0C,$00	; l
                                             
   3424 FFFC250E 00 00 EC FE D6 C6 C6 00     	dc.b	$00,$00,$EC,$FE,$D6,$C6,$C6,$00	; m
                                             
   3426 FFFC2516 00 00 7C 66 66 66 66 00     	dc.b	$00,$00,$7C,$66,$66,$66,$66,$00	; n
                                             
   3428 FFFC251E 00 00 3C 66 66 66 3C 00     	dc.b	$00,$00,$3C,$66,$66,$66,$3C,$00	; o
                                             
   3430 FFFC2526 00 00 7C 66 66 7C 60 60     	dc.b	$00,$00,$7C,$66,$66,$7C,$60,$60	; p
                                             
   3432 FFFC252E 00 00 3E 66 66 3E 06 06     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$06	; q
                                             
   3434 FFFC2536 00 00 7C 66 60 60 60 00     	dc.b	$00,$00,$7C,$66,$60,$60,$60,$00	; r
                                             
   3436 FFFC253E 00 00 3C 60 3C 06 7C 00     	dc.b	$00,$00,$3C,$60,$3C,$06,$7C,$00	; s
                                             
   3438 FFFC2546 30 30 7C 30 30 30 1C 00     	dc.b	$30,$30,$7C,$30,$30,$30,$1C,$00	; t
                                             
   3440 FFFC254E 00 00 66 66 66 66 3E 00     	dc.b	$00,$00,$66,$66,$66,$66,$3E,$00	; u
                                             
   3442 FFFC2556 00 00 66 66 66 3C 18 00     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$00	; v
                                             
   3444 FFFC255E 00 00 C6 C6 D6 FE 6C 00     	dc.b	$00,$00,$C6,$C6,$D6,$FE,$6C,$00	; w
                                             
   3446 FFFC2566 00 00 C6 6C 38 6C C6 00     	dc.b	$00,$00,$C6,$6C,$38,$6C,$C6,$00	; x
                                             
   3448 FFFC256E 00 00 66 66 66 3C 18 30     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$30	; y
                                             
   3450 FFFC2576 00 00 7E 0C 18 30 7E 00     	dc.b	$00,$00,$7E,$0C,$18,$30,$7E,$00	; z
                                             
   3452 FFFC257E 0E 18 18 70 18 18 0E 00     	dc.b	$0E,$18,$18,$70,$18,$18,$0E,$00	; {
                                             
   3454 FFFC2586 18 18 18 18 18 18 18 00     	dc.b	$18,$18,$18,$18,$18,$18,$18,$00	; |
                                             
   3456 FFFC258E 70 18 18 0E 18 18 70 00     	dc.b	$70,$18,$18,$0E,$18,$18,$70,$00	; }
                                             
   3458 FFFC2596 72 9C 00 00 00 00 00 00     	dc.b	$72,$9C,$00,$00,$00,$00,$00,$00	; ~
                                             
   3460 FFFC259E FE FE FE FE FE FE FE 00     	dc.b	$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00	; 
                                             
                                             
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 1
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm

                                             ;*****************************************************************
                                             ;								 *
                                             ;		Tiny BASIC for the Motorola MC68000		 *
                                             ;								 *
                                             ; Derived from Palo Alto Tiny BASIC as published in the May 1976 *
                                             ; issue of Dr. Dobb's Journal.  Adapted to the 68000 by:         *
                                             ;	Gordon Brandly						 *
                                             ;	12147 - 51 Street					 *
                                             ;	Edmonton AB  T5W 3G8					 *
                                             ;	Canada							 *
                                             ;	(updated mailing address for 1996)			 *
                                             ;								 *
                                             ; This version is for MEX68KECB Educational Computer Board I/O.  *
                                             ;								 *
                                             ;*****************************************************************
                                             ;    Copyright (C) 1984 by Gordon Brandly. This program may be	 *
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 2
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;    freely distributed for personal use only. All commercial	 *
                                             ;		       rights are reserved.			 *
                                             ;*****************************************************************
                                             
                                             ; Vers. 1.0  1984/7/17	- Original version by Gordon Brandly
                                             ;	1.1  1984/12/9	- Addition of '$' print term by Marvin Lipford
                                             ;	1.2  1985/4/9	- Bug fix in multiply routine by Rick Murray
                                             
                                             ;	OPT	FRS,BRS 	forward ref.'s & branches default to short
                                             
                                             CR	EQU	0x0D		;ASCII equates
                                             LF	EQU	0x0A
                                             TAB	EQU	0x09
                                             CTRLC	EQU	0x03
                                             CTRLH	EQU	0x08
                                             CTRLS	EQU	0x13
                                             CTRLX	EQU	0x18
                                             
                                             BUFLEN	EQU	80	;	length of keyboard input buffer
                                             
                                             ;*
                                             ;* Internal variables follow:
                                             ;*
                                             	BSS
                                             	ORG		0x600
   3505 00000600                             RANPNT:
   3506 00000600                             	DC.L	START	;	random number pointer
   3507 00000604                             CURRNT:
   3508 00000604                             	DC.L	1		;Current line pointer
   3509 00000608                             STKGOS:
   3510 00000608                             	DC.L	1		;Saves stack pointer in 'GOSUB'
   3511 0000060C                             STKINP:
   3512 0000060C                             	DC.L	1		;Saves stack pointer during 'INPUT'
   3513 00000610                             LOPVAR:
   3514 00000610                             	DC.L	1		;'FOR' loop save area
   3515 00000614                             LOPINC:
   3516 00000614                             	DC.L	1		;increment
   3517 00000618                             LOPLMT:
   3518 00000618                             	DC.L	1		;limit
   3519 0000061C                             LOPLN:
   3520 0000061C                             	DC.L	1		;line number
   3521 00000620                             LOPPT:
   3522 00000620                             	DC.L	1		;text pointer
   3523 00000624                             TXTUNF:
   3524 00000624                             	DC.L	1		;points to unfilled text area
   3525 00000628                             VARBGN:
   3526 00000628                             	DC.L	1		;points to variable area
   3527 0000062C                             STKLMT:
   3528 0000062C                             	DC.L	1		;holds lower limit for stack growth
   3529 00000630                             BUFFER:
   3530 00000630                             	FILL.B	BUFLEN,0x00	;	Keyboard input buffer
                                             
                                             TXT	EQU	$		;Beginning of program area
                                             
                                             	CODE
   3535 FFFC25A6 FF FF FF FF FF FF FF FF     	ORG	0xFFFCC000	;
   3536 FFFC25AE FF FF FF FF FF FF FF FF     
   3537 FFFC25B6 FF FF FF FF FF FF FF FF     
   3538 FFFC25BE FF FF FF FF FF FF FF FF     
   3539 FFFC25C6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 3
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3540 FFFC25CE FF FF FF FF FF FF FF FF     
   3541 FFFC25D6 FF FF FF FF FF FF FF FF     
   3542 FFFC25DE FF FF FF FF FF FF FF FF     
   3543 FFFC25E6 FF FF FF FF FF FF FF FF     
   3544 FFFC25EE FF FF FF FF FF FF FF FF     
   3545 FFFC25F6 FF FF FF FF FF FF FF FF     
   3546 FFFC25FE FF FF FF FF FF FF FF FF     
   3547 FFFC2606 FF FF FF FF FF FF FF FF     
   3548 FFFC260E FF FF FF FF FF FF FF FF     
   3549 FFFC2616 FF FF FF FF FF FF FF FF     
   3550 FFFC261E FF FF FF FF FF FF FF FF     
   3551 FFFC2626 FF FF FF FF FF FF FF FF     
   3552 FFFC262E FF FF FF FF FF FF FF FF     
   3553 FFFC2636 FF FF FF FF FF FF FF FF     
   3554 FFFC263E FF FF FF FF FF FF FF FF     
   3555 FFFC2646 FF FF FF FF FF FF FF FF     
   3556 FFFC264E FF FF FF FF FF FF FF FF     
   3557 FFFC2656 FF FF FF FF FF FF FF FF     
   3558 FFFC265E FF FF FF FF FF FF FF FF     
   3559 FFFC2666 FF FF FF FF FF FF FF FF     
   3560 FFFC266E FF FF FF FF FF FF FF FF     
   3561 FFFC2676 FF FF FF FF FF FF FF FF     
   3562 FFFC267E FF FF FF FF FF FF FF FF     
   3563 FFFC2686 FF FF FF FF FF FF FF FF     
   3564 FFFC268E FF FF FF FF FF FF FF FF     
   3565 FFFC2696 FF FF FF FF FF FF FF FF     
   3566 FFFC269E FF FF FF FF FF FF FF FF     
   3567 FFFC26A6 FF FF FF FF FF FF FF FF     
   3568 FFFC26AE FF FF FF FF FF FF FF FF     
   3569 FFFC26B6 FF FF FF FF FF FF FF FF     
   3570 FFFC26BE FF FF FF FF FF FF FF FF     
   3571 FFFC26C6 FF FF FF FF FF FF FF FF     
   3572 FFFC26CE FF FF FF FF FF FF FF FF     
   3573 FFFC26D6 FF FF FF FF FF FF FF FF     
   3574 FFFC26DE FF FF FF FF FF FF FF FF     
   3575 FFFC26E6 FF FF FF FF FF FF FF FF     
   3576 FFFC26EE FF FF FF FF FF FF FF FF     
   3577 FFFC26F6 FF FF FF FF FF FF FF FF     
   3578 FFFC26FE FF FF FF FF FF FF FF FF     
   3579 FFFC2706 FF FF FF FF FF FF FF FF     
   3580 FFFC270E FF FF FF FF FF FF FF FF     
   3581 FFFC2716 FF FF FF FF FF FF FF FF     
   3582 FFFC271E FF FF FF FF FF FF FF FF     
   3583 FFFC2726 FF FF FF FF FF FF FF FF     
   3584 FFFC272E FF FF FF FF FF FF FF FF     
   3585 FFFC2736 FF FF FF FF FF FF FF FF     
   3586 FFFC273E FF FF FF FF FF FF FF FF     
   3587 FFFC2746 FF FF FF FF FF FF FF FF     
   3588 FFFC274E FF FF FF FF FF FF FF FF     
   3589 FFFC2756 FF FF FF FF FF FF FF FF     
   3590 FFFC275E FF FF FF FF FF FF FF FF     
   3591 FFFC2766 FF FF FF FF FF FF FF FF     
   3592 FFFC276E FF FF FF FF FF FF FF FF     
   3593 FFFC2776 FF FF FF FF FF FF FF FF     
   3594 FFFC277E FF FF FF FF FF FF FF FF     
   3595 FFFC2786 FF FF FF FF FF FF FF FF     
   3596 FFFC278E FF FF FF FF FF FF FF FF     
   3597 FFFC2796 FF FF FF FF FF FF FF FF     
   3598 FFFC279E FF FF FF FF FF FF FF FF     
   3599 FFFC27A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 4
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3600 FFFC27AE FF FF FF FF FF FF FF FF     
   3601 FFFC27B6 FF FF FF FF FF FF FF FF     
   3602 FFFC27BE FF FF FF FF FF FF FF FF     
   3603 FFFC27C6 FF FF FF FF FF FF FF FF     
   3604 FFFC27CE FF FF FF FF FF FF FF FF     
   3605 FFFC27D6 FF FF FF FF FF FF FF FF     
   3606 FFFC27DE FF FF FF FF FF FF FF FF     
   3607 FFFC27E6 FF FF FF FF FF FF FF FF     
   3608 FFFC27EE FF FF FF FF FF FF FF FF     
   3609 FFFC27F6 FF FF FF FF FF FF FF FF     
   3610 FFFC27FE FF FF FF FF FF FF FF FF     
   3611 FFFC2806 FF FF FF FF FF FF FF FF     
   3612 FFFC280E FF FF FF FF FF FF FF FF     
   3613 FFFC2816 FF FF FF FF FF FF FF FF     
   3614 FFFC281E FF FF FF FF FF FF FF FF     
   3615 FFFC2826 FF FF FF FF FF FF FF FF     
   3616 FFFC282E FF FF FF FF FF FF FF FF     
   3617 FFFC2836 FF FF FF FF FF FF FF FF     
   3618 FFFC283E FF FF FF FF FF FF FF FF     
   3619 FFFC2846 FF FF FF FF FF FF FF FF     
   3620 FFFC284E FF FF FF FF FF FF FF FF     
   3621 FFFC2856 FF FF FF FF FF FF FF FF     
   3622 FFFC285E FF FF FF FF FF FF FF FF     
   3623 FFFC2866 FF FF FF FF FF FF FF FF     
   3624 FFFC286E FF FF FF FF FF FF FF FF     
   3625 FFFC2876 FF FF FF FF FF FF FF FF     
   3626 FFFC287E FF FF FF FF FF FF FF FF     
   3627 FFFC2886 FF FF FF FF FF FF FF FF     
   3628 FFFC288E FF FF FF FF FF FF FF FF     
   3629 FFFC2896 FF FF FF FF FF FF FF FF     
   3630 FFFC289E FF FF FF FF FF FF FF FF     
   3631 FFFC28A6 FF FF FF FF FF FF FF FF     
   3632 FFFC28AE FF FF FF FF FF FF FF FF     
   3633 FFFC28B6 FF FF FF FF FF FF FF FF     
   3634 FFFC28BE FF FF FF FF FF FF FF FF     
   3635 FFFC28C6 FF FF FF FF FF FF FF FF     
   3636 FFFC28CE FF FF FF FF FF FF FF FF     
   3637 FFFC28D6 FF FF FF FF FF FF FF FF     
   3638 FFFC28DE FF FF FF FF FF FF FF FF     
   3639 FFFC28E6 FF FF FF FF FF FF FF FF     
   3640 FFFC28EE FF FF FF FF FF FF FF FF     
   3641 FFFC28F6 FF FF FF FF FF FF FF FF     
   3642 FFFC28FE FF FF FF FF FF FF FF FF     
   3643 FFFC2906 FF FF FF FF FF FF FF FF     
   3644 FFFC290E FF FF FF FF FF FF FF FF     
   3645 FFFC2916 FF FF FF FF FF FF FF FF     
   3646 FFFC291E FF FF FF FF FF FF FF FF     
   3647 FFFC2926 FF FF FF FF FF FF FF FF     
   3648 FFFC292E FF FF FF FF FF FF FF FF     
   3649 FFFC2936 FF FF FF FF FF FF FF FF     
   3650 FFFC293E FF FF FF FF FF FF FF FF     
   3651 FFFC2946 FF FF FF FF FF FF FF FF     
   3652 FFFC294E FF FF FF FF FF FF FF FF     
   3653 FFFC2956 FF FF FF FF FF FF FF FF     
   3654 FFFC295E FF FF FF FF FF FF FF FF     
   3655 FFFC2966 FF FF FF FF FF FF FF FF     
   3656 FFFC296E FF FF FF FF FF FF FF FF     
   3657 FFFC2976 FF FF FF FF FF FF FF FF     
   3658 FFFC297E FF FF FF FF FF FF FF FF     
   3659 FFFC2986 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 5
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3660 FFFC298E FF FF FF FF FF FF FF FF     
   3661 FFFC2996 FF FF FF FF FF FF FF FF     
   3662 FFFC299E FF FF FF FF FF FF FF FF     
   3663 FFFC29A6 FF FF FF FF FF FF FF FF     
   3664 FFFC29AE FF FF FF FF FF FF FF FF     
   3665 FFFC29B6 FF FF FF FF FF FF FF FF     
   3666 FFFC29BE FF FF FF FF FF FF FF FF     
   3667 FFFC29C6 FF FF FF FF FF FF FF FF     
   3668 FFFC29CE FF FF FF FF FF FF FF FF     
   3669 FFFC29D6 FF FF FF FF FF FF FF FF     
   3670 FFFC29DE FF FF FF FF FF FF FF FF     
   3671 FFFC29E6 FF FF FF FF FF FF FF FF     
   3672 FFFC29EE FF FF FF FF FF FF FF FF     
   3673 FFFC29F6 FF FF FF FF FF FF FF FF     
   3674 FFFC29FE FF FF FF FF FF FF FF FF     
   3675 FFFC2A06 FF FF FF FF FF FF FF FF     
   3676 FFFC2A0E FF FF FF FF FF FF FF FF     
   3677 FFFC2A16 FF FF FF FF FF FF FF FF     
   3678 FFFC2A1E FF FF FF FF FF FF FF FF     
   3679 FFFC2A26 FF FF FF FF FF FF FF FF     
   3680 FFFC2A2E FF FF FF FF FF FF FF FF     
   3681 FFFC2A36 FF FF FF FF FF FF FF FF     
   3682 FFFC2A3E FF FF FF FF FF FF FF FF     
   3683 FFFC2A46 FF FF FF FF FF FF FF FF     
   3684 FFFC2A4E FF FF FF FF FF FF FF FF     
   3685 FFFC2A56 FF FF FF FF FF FF FF FF     
   3686 FFFC2A5E FF FF FF FF FF FF FF FF     
   3687 FFFC2A66 FF FF FF FF FF FF FF FF     
   3688 FFFC2A6E FF FF FF FF FF FF FF FF     
   3689 FFFC2A76 FF FF FF FF FF FF FF FF     
   3690 FFFC2A7E FF FF FF FF FF FF FF FF     
   3691 FFFC2A86 FF FF FF FF FF FF FF FF     
   3692 FFFC2A8E FF FF FF FF FF FF FF FF     
   3693 FFFC2A96 FF FF FF FF FF FF FF FF     
   3694 FFFC2A9E FF FF FF FF FF FF FF FF     
   3695 FFFC2AA6 FF FF FF FF FF FF FF FF     
   3696 FFFC2AAE FF FF FF FF FF FF FF FF     
   3697 FFFC2AB6 FF FF FF FF FF FF FF FF     
   3698 FFFC2ABE FF FF FF FF FF FF FF FF     
   3699 FFFC2AC6 FF FF FF FF FF FF FF FF     
   3700 FFFC2ACE FF FF FF FF FF FF FF FF     
   3701 FFFC2AD6 FF FF FF FF FF FF FF FF     
   3702 FFFC2ADE FF FF FF FF FF FF FF FF     
   3703 FFFC2AE6 FF FF FF FF FF FF FF FF     
   3704 FFFC2AEE FF FF FF FF FF FF FF FF     
   3705 FFFC2AF6 FF FF FF FF FF FF FF FF     
   3706 FFFC2AFE FF FF FF FF FF FF FF FF     
   3707 FFFC2B06 FF FF FF FF FF FF FF FF     
   3708 FFFC2B0E FF FF FF FF FF FF FF FF     
   3709 FFFC2B16 FF FF FF FF FF FF FF FF     
   3710 FFFC2B1E FF FF FF FF FF FF FF FF     
   3711 FFFC2B26 FF FF FF FF FF FF FF FF     
   3712 FFFC2B2E FF FF FF FF FF FF FF FF     
   3713 FFFC2B36 FF FF FF FF FF FF FF FF     
   3714 FFFC2B3E FF FF FF FF FF FF FF FF     
   3715 FFFC2B46 FF FF FF FF FF FF FF FF     
   3716 FFFC2B4E FF FF FF FF FF FF FF FF     
   3717 FFFC2B56 FF FF FF FF FF FF FF FF     
   3718 FFFC2B5E FF FF FF FF FF FF FF FF     
   3719 FFFC2B66 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 6
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3720 FFFC2B6E FF FF FF FF FF FF FF FF     
   3721 FFFC2B76 FF FF FF FF FF FF FF FF     
   3722 FFFC2B7E FF FF FF FF FF FF FF FF     
   3723 FFFC2B86 FF FF FF FF FF FF FF FF     
   3724 FFFC2B8E FF FF FF FF FF FF FF FF     
   3725 FFFC2B96 FF FF FF FF FF FF FF FF     
   3726 FFFC2B9E FF FF FF FF FF FF FF FF     
   3727 FFFC2BA6 FF FF FF FF FF FF FF FF     
   3728 FFFC2BAE FF FF FF FF FF FF FF FF     
   3729 FFFC2BB6 FF FF FF FF FF FF FF FF     
   3730 FFFC2BBE FF FF FF FF FF FF FF FF     
   3731 FFFC2BC6 FF FF FF FF FF FF FF FF     
   3732 FFFC2BCE FF FF FF FF FF FF FF FF     
   3733 FFFC2BD6 FF FF FF FF FF FF FF FF     
   3734 FFFC2BDE FF FF FF FF FF FF FF FF     
   3735 FFFC2BE6 FF FF FF FF FF FF FF FF     
   3736 FFFC2BEE FF FF FF FF FF FF FF FF     
   3737 FFFC2BF6 FF FF FF FF FF FF FF FF     
   3738 FFFC2BFE FF FF FF FF FF FF FF FF     
   3739 FFFC2C06 FF FF FF FF FF FF FF FF     
   3740 FFFC2C0E FF FF FF FF FF FF FF FF     
   3741 FFFC2C16 FF FF FF FF FF FF FF FF     
   3742 FFFC2C1E FF FF FF FF FF FF FF FF     
   3743 FFFC2C26 FF FF FF FF FF FF FF FF     
   3744 FFFC2C2E FF FF FF FF FF FF FF FF     
   3745 FFFC2C36 FF FF FF FF FF FF FF FF     
   3746 FFFC2C3E FF FF FF FF FF FF FF FF     
   3747 FFFC2C46 FF FF FF FF FF FF FF FF     
   3748 FFFC2C4E FF FF FF FF FF FF FF FF     
   3749 FFFC2C56 FF FF FF FF FF FF FF FF     
   3750 FFFC2C5E FF FF FF FF FF FF FF FF     
   3751 FFFC2C66 FF FF FF FF FF FF FF FF     
   3752 FFFC2C6E FF FF FF FF FF FF FF FF     
   3753 FFFC2C76 FF FF FF FF FF FF FF FF     
   3754 FFFC2C7E FF FF FF FF FF FF FF FF     
   3755 FFFC2C86 FF FF FF FF FF FF FF FF     
   3756 FFFC2C8E FF FF FF FF FF FF FF FF     
   3757 FFFC2C96 FF FF FF FF FF FF FF FF     
   3758 FFFC2C9E FF FF FF FF FF FF FF FF     
   3759 FFFC2CA6 FF FF FF FF FF FF FF FF     
   3760 FFFC2CAE FF FF FF FF FF FF FF FF     
   3761 FFFC2CB6 FF FF FF FF FF FF FF FF     
   3762 FFFC2CBE FF FF FF FF FF FF FF FF     
   3763 FFFC2CC6 FF FF FF FF FF FF FF FF     
   3764 FFFC2CCE FF FF FF FF FF FF FF FF     
   3765 FFFC2CD6 FF FF FF FF FF FF FF FF     
   3766 FFFC2CDE FF FF FF FF FF FF FF FF     
   3767 FFFC2CE6 FF FF FF FF FF FF FF FF     
   3768 FFFC2CEE FF FF FF FF FF FF FF FF     
   3769 FFFC2CF6 FF FF FF FF FF FF FF FF     
   3770 FFFC2CFE FF FF FF FF FF FF FF FF     
   3771 FFFC2D06 FF FF FF FF FF FF FF FF     
   3772 FFFC2D0E FF FF FF FF FF FF FF FF     
   3773 FFFC2D16 FF FF FF FF FF FF FF FF     
   3774 FFFC2D1E FF FF FF FF FF FF FF FF     
   3775 FFFC2D26 FF FF FF FF FF FF FF FF     
   3776 FFFC2D2E FF FF FF FF FF FF FF FF     
   3777 FFFC2D36 FF FF FF FF FF FF FF FF     
   3778 FFFC2D3E FF FF FF FF FF FF FF FF     
   3779 FFFC2D46 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 7
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3780 FFFC2D4E FF FF FF FF FF FF FF FF     
   3781 FFFC2D56 FF FF FF FF FF FF FF FF     
   3782 FFFC2D5E FF FF FF FF FF FF FF FF     
   3783 FFFC2D66 FF FF FF FF FF FF FF FF     
   3784 FFFC2D6E FF FF FF FF FF FF FF FF     
   3785 FFFC2D76 FF FF FF FF FF FF FF FF     
   3786 FFFC2D7E FF FF FF FF FF FF FF FF     
   3787 FFFC2D86 FF FF FF FF FF FF FF FF     
   3788 FFFC2D8E FF FF FF FF FF FF FF FF     
   3789 FFFC2D96 FF FF FF FF FF FF FF FF     
   3790 FFFC2D9E FF FF FF FF FF FF FF FF     
   3791 FFFC2DA6 FF FF FF FF FF FF FF FF     
   3792 FFFC2DAE FF FF FF FF FF FF FF FF     
   3793 FFFC2DB6 FF FF FF FF FF FF FF FF     
   3794 FFFC2DBE FF FF FF FF FF FF FF FF     
   3795 FFFC2DC6 FF FF FF FF FF FF FF FF     
   3796 FFFC2DCE FF FF FF FF FF FF FF FF     
   3797 FFFC2DD6 FF FF FF FF FF FF FF FF     
   3798 FFFC2DDE FF FF FF FF FF FF FF FF     
   3799 FFFC2DE6 FF FF FF FF FF FF FF FF     
   3800 FFFC2DEE FF FF FF FF FF FF FF FF     
   3801 FFFC2DF6 FF FF FF FF FF FF FF FF     
   3802 FFFC2DFE FF FF FF FF FF FF FF FF     
   3803 FFFC2E06 FF FF FF FF FF FF FF FF     
   3804 FFFC2E0E FF FF FF FF FF FF FF FF     
   3805 FFFC2E16 FF FF FF FF FF FF FF FF     
   3806 FFFC2E1E FF FF FF FF FF FF FF FF     
   3807 FFFC2E26 FF FF FF FF FF FF FF FF     
   3808 FFFC2E2E FF FF FF FF FF FF FF FF     
   3809 FFFC2E36 FF FF FF FF FF FF FF FF     
   3810 FFFC2E3E FF FF FF FF FF FF FF FF     
   3811 FFFC2E46 FF FF FF FF FF FF FF FF     
   3812 FFFC2E4E FF FF FF FF FF FF FF FF     
   3813 FFFC2E56 FF FF FF FF FF FF FF FF     
   3814 FFFC2E5E FF FF FF FF FF FF FF FF     
   3815 FFFC2E66 FF FF FF FF FF FF FF FF     
   3816 FFFC2E6E FF FF FF FF FF FF FF FF     
   3817 FFFC2E76 FF FF FF FF FF FF FF FF     
   3818 FFFC2E7E FF FF FF FF FF FF FF FF     
   3819 FFFC2E86 FF FF FF FF FF FF FF FF     
   3820 FFFC2E8E FF FF FF FF FF FF FF FF     
   3821 FFFC2E96 FF FF FF FF FF FF FF FF     
   3822 FFFC2E9E FF FF FF FF FF FF FF FF     
   3823 FFFC2EA6 FF FF FF FF FF FF FF FF     
   3824 FFFC2EAE FF FF FF FF FF FF FF FF     
   3825 FFFC2EB6 FF FF FF FF FF FF FF FF     
   3826 FFFC2EBE FF FF FF FF FF FF FF FF     
   3827 FFFC2EC6 FF FF FF FF FF FF FF FF     
   3828 FFFC2ECE FF FF FF FF FF FF FF FF     
   3829 FFFC2ED6 FF FF FF FF FF FF FF FF     
   3830 FFFC2EDE FF FF FF FF FF FF FF FF     
   3831 FFFC2EE6 FF FF FF FF FF FF FF FF     
   3832 FFFC2EEE FF FF FF FF FF FF FF FF     
   3833 FFFC2EF6 FF FF FF FF FF FF FF FF     
   3834 FFFC2EFE FF FF FF FF FF FF FF FF     
   3835 FFFC2F06 FF FF FF FF FF FF FF FF     
   3836 FFFC2F0E FF FF FF FF FF FF FF FF     
   3837 FFFC2F16 FF FF FF FF FF FF FF FF     
   3838 FFFC2F1E FF FF FF FF FF FF FF FF     
   3839 FFFC2F26 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 8
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3840 FFFC2F2E FF FF FF FF FF FF FF FF     
   3841 FFFC2F36 FF FF FF FF FF FF FF FF     
   3842 FFFC2F3E FF FF FF FF FF FF FF FF     
   3843 FFFC2F46 FF FF FF FF FF FF FF FF     
   3844 FFFC2F4E FF FF FF FF FF FF FF FF     
   3845 FFFC2F56 FF FF FF FF FF FF FF FF     
   3846 FFFC2F5E FF FF FF FF FF FF FF FF     
   3847 FFFC2F66 FF FF FF FF FF FF FF FF     
   3848 FFFC2F6E FF FF FF FF FF FF FF FF     
   3849 FFFC2F76 FF FF FF FF FF FF FF FF     
   3850 FFFC2F7E FF FF FF FF FF FF FF FF     
   3851 FFFC2F86 FF FF FF FF FF FF FF FF     
   3852 FFFC2F8E FF FF FF FF FF FF FF FF     
   3853 FFFC2F96 FF FF FF FF FF FF FF FF     
   3854 FFFC2F9E FF FF FF FF FF FF FF FF     
   3855 FFFC2FA6 FF FF FF FF FF FF FF FF     
   3856 FFFC2FAE FF FF FF FF FF FF FF FF     
   3857 FFFC2FB6 FF FF FF FF FF FF FF FF     
   3858 FFFC2FBE FF FF FF FF FF FF FF FF     
   3859 FFFC2FC6 FF FF FF FF FF FF FF FF     
   3860 FFFC2FCE FF FF FF FF FF FF FF FF     
   3861 FFFC2FD6 FF FF FF FF FF FF FF FF     
   3862 FFFC2FDE FF FF FF FF FF FF FF FF     
   3863 FFFC2FE6 FF FF FF FF FF FF FF FF     
   3864 FFFC2FEE FF FF FF FF FF FF FF FF     
   3865 FFFC2FF6 FF FF FF FF FF FF FF FF     
   3866 FFFC2FFE FF FF FF FF FF FF FF FF     
   3867 FFFC3006 FF FF FF FF FF FF FF FF     
   3868 FFFC300E FF FF FF FF FF FF FF FF     
   3869 FFFC3016 FF FF FF FF FF FF FF FF     
   3870 FFFC301E FF FF FF FF FF FF FF FF     
   3871 FFFC3026 FF FF FF FF FF FF FF FF     
   3872 FFFC302E FF FF FF FF FF FF FF FF     
   3873 FFFC3036 FF FF FF FF FF FF FF FF     
   3874 FFFC303E FF FF FF FF FF FF FF FF     
   3875 FFFC3046 FF FF FF FF FF FF FF FF     
   3876 FFFC304E FF FF FF FF FF FF FF FF     
   3877 FFFC3056 FF FF FF FF FF FF FF FF     
   3878 FFFC305E FF FF FF FF FF FF FF FF     
   3879 FFFC3066 FF FF FF FF FF FF FF FF     
   3880 FFFC306E FF FF FF FF FF FF FF FF     
   3881 FFFC3076 FF FF FF FF FF FF FF FF     
   3882 FFFC307E FF FF FF FF FF FF FF FF     
   3883 FFFC3086 FF FF FF FF FF FF FF FF     
   3884 FFFC308E FF FF FF FF FF FF FF FF     
   3885 FFFC3096 FF FF FF FF FF FF FF FF     
   3886 FFFC309E FF FF FF FF FF FF FF FF     
   3887 FFFC30A6 FF FF FF FF FF FF FF FF     
   3888 FFFC30AE FF FF FF FF FF FF FF FF     
   3889 FFFC30B6 FF FF FF FF FF FF FF FF     
   3890 FFFC30BE FF FF FF FF FF FF FF FF     
   3891 FFFC30C6 FF FF FF FF FF FF FF FF     
   3892 FFFC30CE FF FF FF FF FF FF FF FF     
   3893 FFFC30D6 FF FF FF FF FF FF FF FF     
   3894 FFFC30DE FF FF FF FF FF FF FF FF     
   3895 FFFC30E6 FF FF FF FF FF FF FF FF     
   3896 FFFC30EE FF FF FF FF FF FF FF FF     
   3897 FFFC30F6 FF FF FF FF FF FF FF FF     
   3898 FFFC30FE FF FF FF FF FF FF FF FF     
   3899 FFFC3106 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 9
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3900 FFFC310E FF FF FF FF FF FF FF FF     
   3901 FFFC3116 FF FF FF FF FF FF FF FF     
   3902 FFFC311E FF FF FF FF FF FF FF FF     
   3903 FFFC3126 FF FF FF FF FF FF FF FF     
   3904 FFFC312E FF FF FF FF FF FF FF FF     
   3905 FFFC3136 FF FF FF FF FF FF FF FF     
   3906 FFFC313E FF FF FF FF FF FF FF FF     
   3907 FFFC3146 FF FF FF FF FF FF FF FF     
   3908 FFFC314E FF FF FF FF FF FF FF FF     
   3909 FFFC3156 FF FF FF FF FF FF FF FF     
   3910 FFFC315E FF FF FF FF FF FF FF FF     
   3911 FFFC3166 FF FF FF FF FF FF FF FF     
   3912 FFFC316E FF FF FF FF FF FF FF FF     
   3913 FFFC3176 FF FF FF FF FF FF FF FF     
   3914 FFFC317E FF FF FF FF FF FF FF FF     
   3915 FFFC3186 FF FF FF FF FF FF FF FF     
   3916 FFFC318E FF FF FF FF FF FF FF FF     
   3917 FFFC3196 FF FF FF FF FF FF FF FF     
   3918 FFFC319E FF FF FF FF FF FF FF FF     
   3919 FFFC31A6 FF FF FF FF FF FF FF FF     
   3920 FFFC31AE FF FF FF FF FF FF FF FF     
   3921 FFFC31B6 FF FF FF FF FF FF FF FF     
   3922 FFFC31BE FF FF FF FF FF FF FF FF     
   3923 FFFC31C6 FF FF FF FF FF FF FF FF     
   3924 FFFC31CE FF FF FF FF FF FF FF FF     
   3925 FFFC31D6 FF FF FF FF FF FF FF FF     
   3926 FFFC31DE FF FF FF FF FF FF FF FF     
   3927 FFFC31E6 FF FF FF FF FF FF FF FF     
   3928 FFFC31EE FF FF FF FF FF FF FF FF     
   3929 FFFC31F6 FF FF FF FF FF FF FF FF     
   3930 FFFC31FE FF FF FF FF FF FF FF FF     
   3931 FFFC3206 FF FF FF FF FF FF FF FF     
   3932 FFFC320E FF FF FF FF FF FF FF FF     
   3933 FFFC3216 FF FF FF FF FF FF FF FF     
   3934 FFFC321E FF FF FF FF FF FF FF FF     
   3935 FFFC3226 FF FF FF FF FF FF FF FF     
   3936 FFFC322E FF FF FF FF FF FF FF FF     
   3937 FFFC3236 FF FF FF FF FF FF FF FF     
   3938 FFFC323E FF FF FF FF FF FF FF FF     
   3939 FFFC3246 FF FF FF FF FF FF FF FF     
   3940 FFFC324E FF FF FF FF FF FF FF FF     
   3941 FFFC3256 FF FF FF FF FF FF FF FF     
   3942 FFFC325E FF FF FF FF FF FF FF FF     
   3943 FFFC3266 FF FF FF FF FF FF FF FF     
   3944 FFFC326E FF FF FF FF FF FF FF FF     
   3945 FFFC3276 FF FF FF FF FF FF FF FF     
   3946 FFFC327E FF FF FF FF FF FF FF FF     
   3947 FFFC3286 FF FF FF FF FF FF FF FF     
   3948 FFFC328E FF FF FF FF FF FF FF FF     
   3949 FFFC3296 FF FF FF FF FF FF FF FF     
   3950 FFFC329E FF FF FF FF FF FF FF FF     
   3951 FFFC32A6 FF FF FF FF FF FF FF FF     
   3952 FFFC32AE FF FF FF FF FF FF FF FF     
   3953 FFFC32B6 FF FF FF FF FF FF FF FF     
   3954 FFFC32BE FF FF FF FF FF FF FF FF     
   3955 FFFC32C6 FF FF FF FF FF FF FF FF     
   3956 FFFC32CE FF FF FF FF FF FF FF FF     
   3957 FFFC32D6 FF FF FF FF FF FF FF FF     
   3958 FFFC32DE FF FF FF FF FF FF FF FF     
   3959 FFFC32E6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 10
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3960 FFFC32EE FF FF FF FF FF FF FF FF     
   3961 FFFC32F6 FF FF FF FF FF FF FF FF     
   3962 FFFC32FE FF FF FF FF FF FF FF FF     
   3963 FFFC3306 FF FF FF FF FF FF FF FF     
   3964 FFFC330E FF FF FF FF FF FF FF FF     
   3965 FFFC3316 FF FF FF FF FF FF FF FF     
   3966 FFFC331E FF FF FF FF FF FF FF FF     
   3967 FFFC3326 FF FF FF FF FF FF FF FF     
   3968 FFFC332E FF FF FF FF FF FF FF FF     
   3969 FFFC3336 FF FF FF FF FF FF FF FF     
   3970 FFFC333E FF FF FF FF FF FF FF FF     
   3971 FFFC3346 FF FF FF FF FF FF FF FF     
   3972 FFFC334E FF FF FF FF FF FF FF FF     
   3973 FFFC3356 FF FF FF FF FF FF FF FF     
   3974 FFFC335E FF FF FF FF FF FF FF FF     
   3975 FFFC3366 FF FF FF FF FF FF FF FF     
   3976 FFFC336E FF FF FF FF FF FF FF FF     
   3977 FFFC3376 FF FF FF FF FF FF FF FF     
   3978 FFFC337E FF FF FF FF FF FF FF FF     
   3979 FFFC3386 FF FF FF FF FF FF FF FF     
   3980 FFFC338E FF FF FF FF FF FF FF FF     
   3981 FFFC3396 FF FF FF FF FF FF FF FF     
   3982 FFFC339E FF FF FF FF FF FF FF FF     
   3983 FFFC33A6 FF FF FF FF FF FF FF FF     
   3984 FFFC33AE FF FF FF FF FF FF FF FF     
   3985 FFFC33B6 FF FF FF FF FF FF FF FF     
   3986 FFFC33BE FF FF FF FF FF FF FF FF     
   3987 FFFC33C6 FF FF FF FF FF FF FF FF     
   3988 FFFC33CE FF FF FF FF FF FF FF FF     
   3989 FFFC33D6 FF FF FF FF FF FF FF FF     
   3990 FFFC33DE FF FF FF FF FF FF FF FF     
   3991 FFFC33E6 FF FF FF FF FF FF FF FF     
   3992 FFFC33EE FF FF FF FF FF FF FF FF     
   3993 FFFC33F6 FF FF FF FF FF FF FF FF     
   3994 FFFC33FE FF FF FF FF FF FF FF FF     
   3995 FFFC3406 FF FF FF FF FF FF FF FF     
   3996 FFFC340E FF FF FF FF FF FF FF FF     
   3997 FFFC3416 FF FF FF FF FF FF FF FF     
   3998 FFFC341E FF FF FF FF FF FF FF FF     
   3999 FFFC3426 FF FF FF FF FF FF FF FF     
   4000 FFFC342E FF FF FF FF FF FF FF FF     
   4001 FFFC3436 FF FF FF FF FF FF FF FF     
   4002 FFFC343E FF FF FF FF FF FF FF FF     
   4003 FFFC3446 FF FF FF FF FF FF FF FF     
   4004 FFFC344E FF FF FF FF FF FF FF FF     
   4005 FFFC3456 FF FF FF FF FF FF FF FF     
   4006 FFFC345E FF FF FF FF FF FF FF FF     
   4007 FFFC3466 FF FF FF FF FF FF FF FF     
   4008 FFFC346E FF FF FF FF FF FF FF FF     
   4009 FFFC3476 FF FF FF FF FF FF FF FF     
   4010 FFFC347E FF FF FF FF FF FF FF FF     
   4011 FFFC3486 FF FF FF FF FF FF FF FF     
   4012 FFFC348E FF FF FF FF FF FF FF FF     
   4013 FFFC3496 FF FF FF FF FF FF FF FF     
   4014 FFFC349E FF FF FF FF FF FF FF FF     
   4015 FFFC34A6 FF FF FF FF FF FF FF FF     
   4016 FFFC34AE FF FF FF FF FF FF FF FF     
   4017 FFFC34B6 FF FF FF FF FF FF FF FF     
   4018 FFFC34BE FF FF FF FF FF FF FF FF     
   4019 FFFC34C6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 11
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4020 FFFC34CE FF FF FF FF FF FF FF FF     
   4021 FFFC34D6 FF FF FF FF FF FF FF FF     
   4022 FFFC34DE FF FF FF FF FF FF FF FF     
   4023 FFFC34E6 FF FF FF FF FF FF FF FF     
   4024 FFFC34EE FF FF FF FF FF FF FF FF     
   4025 FFFC34F6 FF FF FF FF FF FF FF FF     
   4026 FFFC34FE FF FF FF FF FF FF FF FF     
   4027 FFFC3506 FF FF FF FF FF FF FF FF     
   4028 FFFC350E FF FF FF FF FF FF FF FF     
   4029 FFFC3516 FF FF FF FF FF FF FF FF     
   4030 FFFC351E FF FF FF FF FF FF FF FF     
   4031 FFFC3526 FF FF FF FF FF FF FF FF     
   4032 FFFC352E FF FF FF FF FF FF FF FF     
   4033 FFFC3536 FF FF FF FF FF FF FF FF     
   4034 FFFC353E FF FF FF FF FF FF FF FF     
   4035 FFFC3546 FF FF FF FF FF FF FF FF     
   4036 FFFC354E FF FF FF FF FF FF FF FF     
   4037 FFFC3556 FF FF FF FF FF FF FF FF     
   4038 FFFC355E FF FF FF FF FF FF FF FF     
   4039 FFFC3566 FF FF FF FF FF FF FF FF     
   4040 FFFC356E FF FF FF FF FF FF FF FF     
   4041 FFFC3576 FF FF FF FF FF FF FF FF     
   4042 FFFC357E FF FF FF FF FF FF FF FF     
   4043 FFFC3586 FF FF FF FF FF FF FF FF     
   4044 FFFC358E FF FF FF FF FF FF FF FF     
   4045 FFFC3596 FF FF FF FF FF FF FF FF     
   4046 FFFC359E FF FF FF FF FF FF FF FF     
   4047 FFFC35A6 FF FF FF FF FF FF FF FF     
   4048 FFFC35AE FF FF FF FF FF FF FF FF     
   4049 FFFC35B6 FF FF FF FF FF FF FF FF     
   4050 FFFC35BE FF FF FF FF FF FF FF FF     
   4051 FFFC35C6 FF FF FF FF FF FF FF FF     
   4052 FFFC35CE FF FF FF FF FF FF FF FF     
   4053 FFFC35D6 FF FF FF FF FF FF FF FF     
   4054 FFFC35DE FF FF FF FF FF FF FF FF     
   4055 FFFC35E6 FF FF FF FF FF FF FF FF     
   4056 FFFC35EE FF FF FF FF FF FF FF FF     
   4057 FFFC35F6 FF FF FF FF FF FF FF FF     
   4058 FFFC35FE FF FF FF FF FF FF FF FF     
   4059 FFFC3606 FF FF FF FF FF FF FF FF     
   4060 FFFC360E FF FF FF FF FF FF FF FF     
   4061 FFFC3616 FF FF FF FF FF FF FF FF     
   4062 FFFC361E FF FF FF FF FF FF FF FF     
   4063 FFFC3626 FF FF FF FF FF FF FF FF     
   4064 FFFC362E FF FF FF FF FF FF FF FF     
   4065 FFFC3636 FF FF FF FF FF FF FF FF     
   4066 FFFC363E FF FF FF FF FF FF FF FF     
   4067 FFFC3646 FF FF FF FF FF FF FF FF     
   4068 FFFC364E FF FF FF FF FF FF FF FF     
   4069 FFFC3656 FF FF FF FF FF FF FF FF     
   4070 FFFC365E FF FF FF FF FF FF FF FF     
   4071 FFFC3666 FF FF FF FF FF FF FF FF     
   4072 FFFC366E FF FF FF FF FF FF FF FF     
   4073 FFFC3676 FF FF FF FF FF FF FF FF     
   4074 FFFC367E FF FF FF FF FF FF FF FF     
   4075 FFFC3686 FF FF FF FF FF FF FF FF     
   4076 FFFC368E FF FF FF FF FF FF FF FF     
   4077 FFFC3696 FF FF FF FF FF FF FF FF     
   4078 FFFC369E FF FF FF FF FF FF FF FF     
   4079 FFFC36A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 12
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4080 FFFC36AE FF FF FF FF FF FF FF FF     
   4081 FFFC36B6 FF FF FF FF FF FF FF FF     
   4082 FFFC36BE FF FF FF FF FF FF FF FF     
   4083 FFFC36C6 FF FF FF FF FF FF FF FF     
   4084 FFFC36CE FF FF FF FF FF FF FF FF     
   4085 FFFC36D6 FF FF FF FF FF FF FF FF     
   4086 FFFC36DE FF FF FF FF FF FF FF FF     
   4087 FFFC36E6 FF FF FF FF FF FF FF FF     
   4088 FFFC36EE FF FF FF FF FF FF FF FF     
   4089 FFFC36F6 FF FF FF FF FF FF FF FF     
   4090 FFFC36FE FF FF FF FF FF FF FF FF     
   4091 FFFC3706 FF FF FF FF FF FF FF FF     
   4092 FFFC370E FF FF FF FF FF FF FF FF     
   4093 FFFC3716 FF FF FF FF FF FF FF FF     
   4094 FFFC371E FF FF FF FF FF FF FF FF     
   4095 FFFC3726 FF FF FF FF FF FF FF FF     
   4096 FFFC372E FF FF FF FF FF FF FF FF     
   4097 FFFC3736 FF FF FF FF FF FF FF FF     
   4098 FFFC373E FF FF FF FF FF FF FF FF     
   4099 FFFC3746 FF FF FF FF FF FF FF FF     
   4100 FFFC374E FF FF FF FF FF FF FF FF     
   4101 FFFC3756 FF FF FF FF FF FF FF FF     
   4102 FFFC375E FF FF FF FF FF FF FF FF     
   4103 FFFC3766 FF FF FF FF FF FF FF FF     
   4104 FFFC376E FF FF FF FF FF FF FF FF     
   4105 FFFC3776 FF FF FF FF FF FF FF FF     
   4106 FFFC377E FF FF FF FF FF FF FF FF     
   4107 FFFC3786 FF FF FF FF FF FF FF FF     
   4108 FFFC378E FF FF FF FF FF FF FF FF     
   4109 FFFC3796 FF FF FF FF FF FF FF FF     
   4110 FFFC379E FF FF FF FF FF FF FF FF     
   4111 FFFC37A6 FF FF FF FF FF FF FF FF     
   4112 FFFC37AE FF FF FF FF FF FF FF FF     
   4113 FFFC37B6 FF FF FF FF FF FF FF FF     
   4114 FFFC37BE FF FF FF FF FF FF FF FF     
   4115 FFFC37C6 FF FF FF FF FF FF FF FF     
   4116 FFFC37CE FF FF FF FF FF FF FF FF     
   4117 FFFC37D6 FF FF FF FF FF FF FF FF     
   4118 FFFC37DE FF FF FF FF FF FF FF FF     
   4119 FFFC37E6 FF FF FF FF FF FF FF FF     
   4120 FFFC37EE FF FF FF FF FF FF FF FF     
   4121 FFFC37F6 FF FF FF FF FF FF FF FF     
   4122 FFFC37FE FF FF FF FF FF FF FF FF     
   4123 FFFC3806 FF FF FF FF FF FF FF FF     
   4124 FFFC380E FF FF FF FF FF FF FF FF     
   4125 FFFC3816 FF FF FF FF FF FF FF FF     
   4126 FFFC381E FF FF FF FF FF FF FF FF     
   4127 FFFC3826 FF FF FF FF FF FF FF FF     
   4128 FFFC382E FF FF FF FF FF FF FF FF     
   4129 FFFC3836 FF FF FF FF FF FF FF FF     
   4130 FFFC383E FF FF FF FF FF FF FF FF     
   4131 FFFC3846 FF FF FF FF FF FF FF FF     
   4132 FFFC384E FF FF FF FF FF FF FF FF     
   4133 FFFC3856 FF FF FF FF FF FF FF FF     
   4134 FFFC385E FF FF FF FF FF FF FF FF     
   4135 FFFC3866 FF FF FF FF FF FF FF FF     
   4136 FFFC386E FF FF FF FF FF FF FF FF     
   4137 FFFC3876 FF FF FF FF FF FF FF FF     
   4138 FFFC387E FF FF FF FF FF FF FF FF     
   4139 FFFC3886 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 13
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4140 FFFC388E FF FF FF FF FF FF FF FF     
   4141 FFFC3896 FF FF FF FF FF FF FF FF     
   4142 FFFC389E FF FF FF FF FF FF FF FF     
   4143 FFFC38A6 FF FF FF FF FF FF FF FF     
   4144 FFFC38AE FF FF FF FF FF FF FF FF     
   4145 FFFC38B6 FF FF FF FF FF FF FF FF     
   4146 FFFC38BE FF FF FF FF FF FF FF FF     
   4147 FFFC38C6 FF FF FF FF FF FF FF FF     
   4148 FFFC38CE FF FF FF FF FF FF FF FF     
   4149 FFFC38D6 FF FF FF FF FF FF FF FF     
   4150 FFFC38DE FF FF FF FF FF FF FF FF     
   4151 FFFC38E6 FF FF FF FF FF FF FF FF     
   4152 FFFC38EE FF FF FF FF FF FF FF FF     
   4153 FFFC38F6 FF FF FF FF FF FF FF FF     
   4154 FFFC38FE FF FF FF FF FF FF FF FF     
   4155 FFFC3906 FF FF FF FF FF FF FF FF     
   4156 FFFC390E FF FF FF FF FF FF FF FF     
   4157 FFFC3916 FF FF FF FF FF FF FF FF     
   4158 FFFC391E FF FF FF FF FF FF FF FF     
   4159 FFFC3926 FF FF FF FF FF FF FF FF     
   4160 FFFC392E FF FF FF FF FF FF FF FF     
   4161 FFFC3936 FF FF FF FF FF FF FF FF     
   4162 FFFC393E FF FF FF FF FF FF FF FF     
   4163 FFFC3946 FF FF FF FF FF FF FF FF     
   4164 FFFC394E FF FF FF FF FF FF FF FF     
   4165 FFFC3956 FF FF FF FF FF FF FF FF     
   4166 FFFC395E FF FF FF FF FF FF FF FF     
   4167 FFFC3966 FF FF FF FF FF FF FF FF     
   4168 FFFC396E FF FF FF FF FF FF FF FF     
   4169 FFFC3976 FF FF FF FF FF FF FF FF     
   4170 FFFC397E FF FF FF FF FF FF FF FF     
   4171 FFFC3986 FF FF FF FF FF FF FF FF     
   4172 FFFC398E FF FF FF FF FF FF FF FF     
   4173 FFFC3996 FF FF FF FF FF FF FF FF     
   4174 FFFC399E FF FF FF FF FF FF FF FF     
   4175 FFFC39A6 FF FF FF FF FF FF FF FF     
   4176 FFFC39AE FF FF FF FF FF FF FF FF     
   4177 FFFC39B6 FF FF FF FF FF FF FF FF     
   4178 FFFC39BE FF FF FF FF FF FF FF FF     
   4179 FFFC39C6 FF FF FF FF FF FF FF FF     
   4180 FFFC39CE FF FF FF FF FF FF FF FF     
   4181 FFFC39D6 FF FF FF FF FF FF FF FF     
   4182 FFFC39DE FF FF FF FF FF FF FF FF     
   4183 FFFC39E6 FF FF FF FF FF FF FF FF     
   4184 FFFC39EE FF FF FF FF FF FF FF FF     
   4185 FFFC39F6 FF FF FF FF FF FF FF FF     
   4186 FFFC39FE FF FF FF FF FF FF FF FF     
   4187 FFFC3A06 FF FF FF FF FF FF FF FF     
   4188 FFFC3A0E FF FF FF FF FF FF FF FF     
   4189 FFFC3A16 FF FF FF FF FF FF FF FF     
   4190 FFFC3A1E FF FF FF FF FF FF FF FF     
   4191 FFFC3A26 FF FF FF FF FF FF FF FF     
   4192 FFFC3A2E FF FF FF FF FF FF FF FF     
   4193 FFFC3A36 FF FF FF FF FF FF FF FF     
   4194 FFFC3A3E FF FF FF FF FF FF FF FF     
   4195 FFFC3A46 FF FF FF FF FF FF FF FF     
   4196 FFFC3A4E FF FF FF FF FF FF FF FF     
   4197 FFFC3A56 FF FF FF FF FF FF FF FF     
   4198 FFFC3A5E FF FF FF FF FF FF FF FF     
   4199 FFFC3A66 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 14
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4200 FFFC3A6E FF FF FF FF FF FF FF FF     
   4201 FFFC3A76 FF FF FF FF FF FF FF FF     
   4202 FFFC3A7E FF FF FF FF FF FF FF FF     
   4203 FFFC3A86 FF FF FF FF FF FF FF FF     
   4204 FFFC3A8E FF FF FF FF FF FF FF FF     
   4205 FFFC3A96 FF FF FF FF FF FF FF FF     
   4206 FFFC3A9E FF FF FF FF FF FF FF FF     
   4207 FFFC3AA6 FF FF FF FF FF FF FF FF     
   4208 FFFC3AAE FF FF FF FF FF FF FF FF     
   4209 FFFC3AB6 FF FF FF FF FF FF FF FF     
   4210 FFFC3ABE FF FF FF FF FF FF FF FF     
   4211 FFFC3AC6 FF FF FF FF FF FF FF FF     
   4212 FFFC3ACE FF FF FF FF FF FF FF FF     
   4213 FFFC3AD6 FF FF FF FF FF FF FF FF     
   4214 FFFC3ADE FF FF FF FF FF FF FF FF     
   4215 FFFC3AE6 FF FF FF FF FF FF FF FF     
   4216 FFFC3AEE FF FF FF FF FF FF FF FF     
   4217 FFFC3AF6 FF FF FF FF FF FF FF FF     
   4218 FFFC3AFE FF FF FF FF FF FF FF FF     
   4219 FFFC3B06 FF FF FF FF FF FF FF FF     
   4220 FFFC3B0E FF FF FF FF FF FF FF FF     
   4221 FFFC3B16 FF FF FF FF FF FF FF FF     
   4222 FFFC3B1E FF FF FF FF FF FF FF FF     
   4223 FFFC3B26 FF FF FF FF FF FF FF FF     
   4224 FFFC3B2E FF FF FF FF FF FF FF FF     
   4225 FFFC3B36 FF FF FF FF FF FF FF FF     
   4226 FFFC3B3E FF FF FF FF FF FF FF FF     
   4227 FFFC3B46 FF FF FF FF FF FF FF FF     
   4228 FFFC3B4E FF FF FF FF FF FF FF FF     
   4229 FFFC3B56 FF FF FF FF FF FF FF FF     
   4230 FFFC3B5E FF FF FF FF FF FF FF FF     
   4231 FFFC3B66 FF FF FF FF FF FF FF FF     
   4232 FFFC3B6E FF FF FF FF FF FF FF FF     
   4233 FFFC3B76 FF FF FF FF FF FF FF FF     
   4234 FFFC3B7E FF FF FF FF FF FF FF FF     
   4235 FFFC3B86 FF FF FF FF FF FF FF FF     
   4236 FFFC3B8E FF FF FF FF FF FF FF FF     
   4237 FFFC3B96 FF FF FF FF FF FF FF FF     
   4238 FFFC3B9E FF FF FF FF FF FF FF FF     
   4239 FFFC3BA6 FF FF FF FF FF FF FF FF     
   4240 FFFC3BAE FF FF FF FF FF FF FF FF     
   4241 FFFC3BB6 FF FF FF FF FF FF FF FF     
   4242 FFFC3BBE FF FF FF FF FF FF FF FF     
   4243 FFFC3BC6 FF FF FF FF FF FF FF FF     
   4244 FFFC3BCE FF FF FF FF FF FF FF FF     
   4245 FFFC3BD6 FF FF FF FF FF FF FF FF     
   4246 FFFC3BDE FF FF FF FF FF FF FF FF     
   4247 FFFC3BE6 FF FF FF FF FF FF FF FF     
   4248 FFFC3BEE FF FF FF FF FF FF FF FF     
   4249 FFFC3BF6 FF FF FF FF FF FF FF FF     
   4250 FFFC3BFE FF FF FF FF FF FF FF FF     
   4251 FFFC3C06 FF FF FF FF FF FF FF FF     
   4252 FFFC3C0E FF FF FF FF FF FF FF FF     
   4253 FFFC3C16 FF FF FF FF FF FF FF FF     
   4254 FFFC3C1E FF FF FF FF FF FF FF FF     
   4255 FFFC3C26 FF FF FF FF FF FF FF FF     
   4256 FFFC3C2E FF FF FF FF FF FF FF FF     
   4257 FFFC3C36 FF FF FF FF FF FF FF FF     
   4258 FFFC3C3E FF FF FF FF FF FF FF FF     
   4259 FFFC3C46 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 15
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4260 FFFC3C4E FF FF FF FF FF FF FF FF     
   4261 FFFC3C56 FF FF FF FF FF FF FF FF     
   4262 FFFC3C5E FF FF FF FF FF FF FF FF     
   4263 FFFC3C66 FF FF FF FF FF FF FF FF     
   4264 FFFC3C6E FF FF FF FF FF FF FF FF     
   4265 FFFC3C76 FF FF FF FF FF FF FF FF     
   4266 FFFC3C7E FF FF FF FF FF FF FF FF     
   4267 FFFC3C86 FF FF FF FF FF FF FF FF     
   4268 FFFC3C8E FF FF FF FF FF FF FF FF     
   4269 FFFC3C96 FF FF FF FF FF FF FF FF     
   4270 FFFC3C9E FF FF FF FF FF FF FF FF     
   4271 FFFC3CA6 FF FF FF FF FF FF FF FF     
   4272 FFFC3CAE FF FF FF FF FF FF FF FF     
   4273 FFFC3CB6 FF FF FF FF FF FF FF FF     
   4274 FFFC3CBE FF FF FF FF FF FF FF FF     
   4275 FFFC3CC6 FF FF FF FF FF FF FF FF     
   4276 FFFC3CCE FF FF FF FF FF FF FF FF     
   4277 FFFC3CD6 FF FF FF FF FF FF FF FF     
   4278 FFFC3CDE FF FF FF FF FF FF FF FF     
   4279 FFFC3CE6 FF FF FF FF FF FF FF FF     
   4280 FFFC3CEE FF FF FF FF FF FF FF FF     
   4281 FFFC3CF6 FF FF FF FF FF FF FF FF     
   4282 FFFC3CFE FF FF FF FF FF FF FF FF     
   4283 FFFC3D06 FF FF FF FF FF FF FF FF     
   4284 FFFC3D0E FF FF FF FF FF FF FF FF     
   4285 FFFC3D16 FF FF FF FF FF FF FF FF     
   4286 FFFC3D1E FF FF FF FF FF FF FF FF     
   4287 FFFC3D26 FF FF FF FF FF FF FF FF     
   4288 FFFC3D2E FF FF FF FF FF FF FF FF     
   4289 FFFC3D36 FF FF FF FF FF FF FF FF     
   4290 FFFC3D3E FF FF FF FF FF FF FF FF     
   4291 FFFC3D46 FF FF FF FF FF FF FF FF     
   4292 FFFC3D4E FF FF FF FF FF FF FF FF     
   4293 FFFC3D56 FF FF FF FF FF FF FF FF     
   4294 FFFC3D5E FF FF FF FF FF FF FF FF     
   4295 FFFC3D66 FF FF FF FF FF FF FF FF     
   4296 FFFC3D6E FF FF FF FF FF FF FF FF     
   4297 FFFC3D76 FF FF FF FF FF FF FF FF     
   4298 FFFC3D7E FF FF FF FF FF FF FF FF     
   4299 FFFC3D86 FF FF FF FF FF FF FF FF     
   4300 FFFC3D8E FF FF FF FF FF FF FF FF     
   4301 FFFC3D96 FF FF FF FF FF FF FF FF     
   4302 FFFC3D9E FF FF FF FF FF FF FF FF     
   4303 FFFC3DA6 FF FF FF FF FF FF FF FF     
   4304 FFFC3DAE FF FF FF FF FF FF FF FF     
   4305 FFFC3DB6 FF FF FF FF FF FF FF FF     
   4306 FFFC3DBE FF FF FF FF FF FF FF FF     
   4307 FFFC3DC6 FF FF FF FF FF FF FF FF     
   4308 FFFC3DCE FF FF FF FF FF FF FF FF     
   4309 FFFC3DD6 FF FF FF FF FF FF FF FF     
   4310 FFFC3DDE FF FF FF FF FF FF FF FF     
   4311 FFFC3DE6 FF FF FF FF FF FF FF FF     
   4312 FFFC3DEE FF FF FF FF FF FF FF FF     
   4313 FFFC3DF6 FF FF FF FF FF FF FF FF     
   4314 FFFC3DFE FF FF FF FF FF FF FF FF     
   4315 FFFC3E06 FF FF FF FF FF FF FF FF     
   4316 FFFC3E0E FF FF FF FF FF FF FF FF     
   4317 FFFC3E16 FF FF FF FF FF FF FF FF     
   4318 FFFC3E1E FF FF FF FF FF FF FF FF     
   4319 FFFC3E26 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 16
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4320 FFFC3E2E FF FF FF FF FF FF FF FF     
   4321 FFFC3E36 FF FF FF FF FF FF FF FF     
   4322 FFFC3E3E FF FF FF FF FF FF FF FF     
   4323 FFFC3E46 FF FF FF FF FF FF FF FF     
   4324 FFFC3E4E FF FF FF FF FF FF FF FF     
   4325 FFFC3E56 FF FF FF FF FF FF FF FF     
   4326 FFFC3E5E FF FF FF FF FF FF FF FF     
   4327 FFFC3E66 FF FF FF FF FF FF FF FF     
   4328 FFFC3E6E FF FF FF FF FF FF FF FF     
   4329 FFFC3E76 FF FF FF FF FF FF FF FF     
   4330 FFFC3E7E FF FF FF FF FF FF FF FF     
   4331 FFFC3E86 FF FF FF FF FF FF FF FF     
   4332 FFFC3E8E FF FF FF FF FF FF FF FF     
   4333 FFFC3E96 FF FF FF FF FF FF FF FF     
   4334 FFFC3E9E FF FF FF FF FF FF FF FF     
   4335 FFFC3EA6 FF FF FF FF FF FF FF FF     
   4336 FFFC3EAE FF FF FF FF FF FF FF FF     
   4337 FFFC3EB6 FF FF FF FF FF FF FF FF     
   4338 FFFC3EBE FF FF FF FF FF FF FF FF     
   4339 FFFC3EC6 FF FF FF FF FF FF FF FF     
   4340 FFFC3ECE FF FF FF FF FF FF FF FF     
   4341 FFFC3ED6 FF FF FF FF FF FF FF FF     
   4342 FFFC3EDE FF FF FF FF FF FF FF FF     
   4343 FFFC3EE6 FF FF FF FF FF FF FF FF     
   4344 FFFC3EEE FF FF FF FF FF FF FF FF     
   4345 FFFC3EF6 FF FF FF FF FF FF FF FF     
   4346 FFFC3EFE FF FF FF FF FF FF FF FF     
   4347 FFFC3F06 FF FF FF FF FF FF FF FF     
   4348 FFFC3F0E FF FF FF FF FF FF FF FF     
   4349 FFFC3F16 FF FF FF FF FF FF FF FF     
   4350 FFFC3F1E FF FF FF FF FF FF FF FF     
   4351 FFFC3F26 FF FF FF FF FF FF FF FF     
   4352 FFFC3F2E FF FF FF FF FF FF FF FF     
   4353 FFFC3F36 FF FF FF FF FF FF FF FF     
   4354 FFFC3F3E FF FF FF FF FF FF FF FF     
   4355 FFFC3F46 FF FF FF FF FF FF FF FF     
   4356 FFFC3F4E FF FF FF FF FF FF FF FF     
   4357 FFFC3F56 FF FF FF FF FF FF FF FF     
   4358 FFFC3F5E FF FF FF FF FF FF FF FF     
   4359 FFFC3F66 FF FF FF FF FF FF FF FF     
   4360 FFFC3F6E FF FF FF FF FF FF FF FF     
   4361 FFFC3F76 FF FF FF FF FF FF FF FF     
   4362 FFFC3F7E FF FF FF FF FF FF FF FF     
   4363 FFFC3F86 FF FF FF FF FF FF FF FF     
   4364 FFFC3F8E FF FF FF FF FF FF FF FF     
   4365 FFFC3F96 FF FF FF FF FF FF FF FF     
   4366 FFFC3F9E FF FF FF FF FF FF FF FF     
   4367 FFFC3FA6 FF FF FF FF FF FF FF FF     
   4368 FFFC3FAE FF FF FF FF FF FF FF FF     
   4369 FFFC3FB6 FF FF FF FF FF FF FF FF     
   4370 FFFC3FBE FF FF FF FF FF FF FF FF     
   4371 FFFC3FC6 FF FF FF FF FF FF FF FF     
   4372 FFFC3FCE FF FF FF FF FF FF FF FF     
   4373 FFFC3FD6 FF FF FF FF FF FF FF FF     
   4374 FFFC3FDE FF FF FF FF FF FF FF FF     
   4375 FFFC3FE6 FF FF FF FF FF FF FF FF     
   4376 FFFC3FEE FF FF FF FF FF FF FF FF     
   4377 FFFC3FF6 FF FF FF FF FF FF FF FF     
   4378 FFFC3FFE FF FF FF FF FF FF FF FF     
   4379 FFFC4006 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 17
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4380 FFFC400E FF FF FF FF FF FF FF FF     
   4381 FFFC4016 FF FF FF FF FF FF FF FF     
   4382 FFFC401E FF FF FF FF FF FF FF FF     
   4383 FFFC4026 FF FF FF FF FF FF FF FF     
   4384 FFFC402E FF FF FF FF FF FF FF FF     
   4385 FFFC4036 FF FF FF FF FF FF FF FF     
   4386 FFFC403E FF FF FF FF FF FF FF FF     
   4387 FFFC4046 FF FF FF FF FF FF FF FF     
   4388 FFFC404E FF FF FF FF FF FF FF FF     
   4389 FFFC4056 FF FF FF FF FF FF FF FF     
   4390 FFFC405E FF FF FF FF FF FF FF FF     
   4391 FFFC4066 FF FF FF FF FF FF FF FF     
   4392 FFFC406E FF FF FF FF FF FF FF FF     
   4393 FFFC4076 FF FF FF FF FF FF FF FF     
   4394 FFFC407E FF FF FF FF FF FF FF FF     
   4395 FFFC4086 FF FF FF FF FF FF FF FF     
   4396 FFFC408E FF FF FF FF FF FF FF FF     
   4397 FFFC4096 FF FF FF FF FF FF FF FF     
   4398 FFFC409E FF FF FF FF FF FF FF FF     
   4399 FFFC40A6 FF FF FF FF FF FF FF FF     
   4400 FFFC40AE FF FF FF FF FF FF FF FF     
   4401 FFFC40B6 FF FF FF FF FF FF FF FF     
   4402 FFFC40BE FF FF FF FF FF FF FF FF     
   4403 FFFC40C6 FF FF FF FF FF FF FF FF     
   4404 FFFC40CE FF FF FF FF FF FF FF FF     
   4405 FFFC40D6 FF FF FF FF FF FF FF FF     
   4406 FFFC40DE FF FF FF FF FF FF FF FF     
   4407 FFFC40E6 FF FF FF FF FF FF FF FF     
   4408 FFFC40EE FF FF FF FF FF FF FF FF     
   4409 FFFC40F6 FF FF FF FF FF FF FF FF     
   4410 FFFC40FE FF FF FF FF FF FF FF FF     
   4411 FFFC4106 FF FF FF FF FF FF FF FF     
   4412 FFFC410E FF FF FF FF FF FF FF FF     
   4413 FFFC4116 FF FF FF FF FF FF FF FF     
   4414 FFFC411E FF FF FF FF FF FF FF FF     
   4415 FFFC4126 FF FF FF FF FF FF FF FF     
   4416 FFFC412E FF FF FF FF FF FF FF FF     
   4417 FFFC4136 FF FF FF FF FF FF FF FF     
   4418 FFFC413E FF FF FF FF FF FF FF FF     
   4419 FFFC4146 FF FF FF FF FF FF FF FF     
   4420 FFFC414E FF FF FF FF FF FF FF FF     
   4421 FFFC4156 FF FF FF FF FF FF FF FF     
   4422 FFFC415E FF FF FF FF FF FF FF FF     
   4423 FFFC4166 FF FF FF FF FF FF FF FF     
   4424 FFFC416E FF FF FF FF FF FF FF FF     
   4425 FFFC4176 FF FF FF FF FF FF FF FF     
   4426 FFFC417E FF FF FF FF FF FF FF FF     
   4427 FFFC4186 FF FF FF FF FF FF FF FF     
   4428 FFFC418E FF FF FF FF FF FF FF FF     
   4429 FFFC4196 FF FF FF FF FF FF FF FF     
   4430 FFFC419E FF FF FF FF FF FF FF FF     
   4431 FFFC41A6 FF FF FF FF FF FF FF FF     
   4432 FFFC41AE FF FF FF FF FF FF FF FF     
   4433 FFFC41B6 FF FF FF FF FF FF FF FF     
   4434 FFFC41BE FF FF FF FF FF FF FF FF     
   4435 FFFC41C6 FF FF FF FF FF FF FF FF     
   4436 FFFC41CE FF FF FF FF FF FF FF FF     
   4437 FFFC41D6 FF FF FF FF FF FF FF FF     
   4438 FFFC41DE FF FF FF FF FF FF FF FF     
   4439 FFFC41E6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 18
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4440 FFFC41EE FF FF FF FF FF FF FF FF     
   4441 FFFC41F6 FF FF FF FF FF FF FF FF     
   4442 FFFC41FE FF FF FF FF FF FF FF FF     
   4443 FFFC4206 FF FF FF FF FF FF FF FF     
   4444 FFFC420E FF FF FF FF FF FF FF FF     
   4445 FFFC4216 FF FF FF FF FF FF FF FF     
   4446 FFFC421E FF FF FF FF FF FF FF FF     
   4447 FFFC4226 FF FF FF FF FF FF FF FF     
   4448 FFFC422E FF FF FF FF FF FF FF FF     
   4449 FFFC4236 FF FF FF FF FF FF FF FF     
   4450 FFFC423E FF FF FF FF FF FF FF FF     
   4451 FFFC4246 FF FF FF FF FF FF FF FF     
   4452 FFFC424E FF FF FF FF FF FF FF FF     
   4453 FFFC4256 FF FF FF FF FF FF FF FF     
   4454 FFFC425E FF FF FF FF FF FF FF FF     
   4455 FFFC4266 FF FF FF FF FF FF FF FF     
   4456 FFFC426E FF FF FF FF FF FF FF FF     
   4457 FFFC4276 FF FF FF FF FF FF FF FF     
   4458 FFFC427E FF FF FF FF FF FF FF FF     
   4459 FFFC4286 FF FF FF FF FF FF FF FF     
   4460 FFFC428E FF FF FF FF FF FF FF FF     
   4461 FFFC4296 FF FF FF FF FF FF FF FF     
   4462 FFFC429E FF FF FF FF FF FF FF FF     
   4463 FFFC42A6 FF FF FF FF FF FF FF FF     
   4464 FFFC42AE FF FF FF FF FF FF FF FF     
   4465 FFFC42B6 FF FF FF FF FF FF FF FF     
   4466 FFFC42BE FF FF FF FF FF FF FF FF     
   4467 FFFC42C6 FF FF FF FF FF FF FF FF     
   4468 FFFC42CE FF FF FF FF FF FF FF FF     
   4469 FFFC42D6 FF FF FF FF FF FF FF FF     
   4470 FFFC42DE FF FF FF FF FF FF FF FF     
   4471 FFFC42E6 FF FF FF FF FF FF FF FF     
   4472 FFFC42EE FF FF FF FF FF FF FF FF     
   4473 FFFC42F6 FF FF FF FF FF FF FF FF     
   4474 FFFC42FE FF FF FF FF FF FF FF FF     
   4475 FFFC4306 FF FF FF FF FF FF FF FF     
   4476 FFFC430E FF FF FF FF FF FF FF FF     
   4477 FFFC4316 FF FF FF FF FF FF FF FF     
   4478 FFFC431E FF FF FF FF FF FF FF FF     
   4479 FFFC4326 FF FF FF FF FF FF FF FF     
   4480 FFFC432E FF FF FF FF FF FF FF FF     
   4481 FFFC4336 FF FF FF FF FF FF FF FF     
   4482 FFFC433E FF FF FF FF FF FF FF FF     
   4483 FFFC4346 FF FF FF FF FF FF FF FF     
   4484 FFFC434E FF FF FF FF FF FF FF FF     
   4485 FFFC4356 FF FF FF FF FF FF FF FF     
   4486 FFFC435E FF FF FF FF FF FF FF FF     
   4487 FFFC4366 FF FF FF FF FF FF FF FF     
   4488 FFFC436E FF FF FF FF FF FF FF FF     
   4489 FFFC4376 FF FF FF FF FF FF FF FF     
   4490 FFFC437E FF FF FF FF FF FF FF FF     
   4491 FFFC4386 FF FF FF FF FF FF FF FF     
   4492 FFFC438E FF FF FF FF FF FF FF FF     
   4493 FFFC4396 FF FF FF FF FF FF FF FF     
   4494 FFFC439E FF FF FF FF FF FF FF FF     
   4495 FFFC43A6 FF FF FF FF FF FF FF FF     
   4496 FFFC43AE FF FF FF FF FF FF FF FF     
   4497 FFFC43B6 FF FF FF FF FF FF FF FF     
   4498 FFFC43BE FF FF FF FF FF FF FF FF     
   4499 FFFC43C6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 19
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4500 FFFC43CE FF FF FF FF FF FF FF FF     
   4501 FFFC43D6 FF FF FF FF FF FF FF FF     
   4502 FFFC43DE FF FF FF FF FF FF FF FF     
   4503 FFFC43E6 FF FF FF FF FF FF FF FF     
   4504 FFFC43EE FF FF FF FF FF FF FF FF     
   4505 FFFC43F6 FF FF FF FF FF FF FF FF     
   4506 FFFC43FE FF FF FF FF FF FF FF FF     
   4507 FFFC4406 FF FF FF FF FF FF FF FF     
   4508 FFFC440E FF FF FF FF FF FF FF FF     
   4509 FFFC4416 FF FF FF FF FF FF FF FF     
   4510 FFFC441E FF FF FF FF FF FF FF FF     
   4511 FFFC4426 FF FF FF FF FF FF FF FF     
   4512 FFFC442E FF FF FF FF FF FF FF FF     
   4513 FFFC4436 FF FF FF FF FF FF FF FF     
   4514 FFFC443E FF FF FF FF FF FF FF FF     
   4515 FFFC4446 FF FF FF FF FF FF FF FF     
   4516 FFFC444E FF FF FF FF FF FF FF FF     
   4517 FFFC4456 FF FF FF FF FF FF FF FF     
   4518 FFFC445E FF FF FF FF FF FF FF FF     
   4519 FFFC4466 FF FF FF FF FF FF FF FF     
   4520 FFFC446E FF FF FF FF FF FF FF FF     
   4521 FFFC4476 FF FF FF FF FF FF FF FF     
   4522 FFFC447E FF FF FF FF FF FF FF FF     
   4523 FFFC4486 FF FF FF FF FF FF FF FF     
   4524 FFFC448E FF FF FF FF FF FF FF FF     
   4525 FFFC4496 FF FF FF FF FF FF FF FF     
   4526 FFFC449E FF FF FF FF FF FF FF FF     
   4527 FFFC44A6 FF FF FF FF FF FF FF FF     
   4528 FFFC44AE FF FF FF FF FF FF FF FF     
   4529 FFFC44B6 FF FF FF FF FF FF FF FF     
   4530 FFFC44BE FF FF FF FF FF FF FF FF     
   4531 FFFC44C6 FF FF FF FF FF FF FF FF     
   4532 FFFC44CE FF FF FF FF FF FF FF FF     
   4533 FFFC44D6 FF FF FF FF FF FF FF FF     
   4534 FFFC44DE FF FF FF FF FF FF FF FF     
   4535 FFFC44E6 FF FF FF FF FF FF FF FF     
   4536 FFFC44EE FF FF FF FF FF FF FF FF     
   4537 FFFC44F6 FF FF FF FF FF FF FF FF     
   4538 FFFC44FE FF FF FF FF FF FF FF FF     
   4539 FFFC4506 FF FF FF FF FF FF FF FF     
   4540 FFFC450E FF FF FF FF FF FF FF FF     
   4541 FFFC4516 FF FF FF FF FF FF FF FF     
   4542 FFFC451E FF FF FF FF FF FF FF FF     
   4543 FFFC4526 FF FF FF FF FF FF FF FF     
   4544 FFFC452E FF FF FF FF FF FF FF FF     
   4545 FFFC4536 FF FF FF FF FF FF FF FF     
   4546 FFFC453E FF FF FF FF FF FF FF FF     
   4547 FFFC4546 FF FF FF FF FF FF FF FF     
   4548 FFFC454E FF FF FF FF FF FF FF FF     
   4549 FFFC4556 FF FF FF FF FF FF FF FF     
   4550 FFFC455E FF FF FF FF FF FF FF FF     
   4551 FFFC4566 FF FF FF FF FF FF FF FF     
   4552 FFFC456E FF FF FF FF FF FF FF FF     
   4553 FFFC4576 FF FF FF FF FF FF FF FF     
   4554 FFFC457E FF FF FF FF FF FF FF FF     
   4555 FFFC4586 FF FF FF FF FF FF FF FF     
   4556 FFFC458E FF FF FF FF FF FF FF FF     
   4557 FFFC4596 FF FF FF FF FF FF FF FF     
   4558 FFFC459E FF FF FF FF FF FF FF FF     
   4559 FFFC45A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 20
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4560 FFFC45AE FF FF FF FF FF FF FF FF     
   4561 FFFC45B6 FF FF FF FF FF FF FF FF     
   4562 FFFC45BE FF FF FF FF FF FF FF FF     
   4563 FFFC45C6 FF FF FF FF FF FF FF FF     
   4564 FFFC45CE FF FF FF FF FF FF FF FF     
   4565 FFFC45D6 FF FF FF FF FF FF FF FF     
   4566 FFFC45DE FF FF FF FF FF FF FF FF     
   4567 FFFC45E6 FF FF FF FF FF FF FF FF     
   4568 FFFC45EE FF FF FF FF FF FF FF FF     
   4569 FFFC45F6 FF FF FF FF FF FF FF FF     
   4570 FFFC45FE FF FF FF FF FF FF FF FF     
   4571 FFFC4606 FF FF FF FF FF FF FF FF     
   4572 FFFC460E FF FF FF FF FF FF FF FF     
   4573 FFFC4616 FF FF FF FF FF FF FF FF     
   4574 FFFC461E FF FF FF FF FF FF FF FF     
   4575 FFFC4626 FF FF FF FF FF FF FF FF     
   4576 FFFC462E FF FF FF FF FF FF FF FF     
   4577 FFFC4636 FF FF FF FF FF FF FF FF     
   4578 FFFC463E FF FF FF FF FF FF FF FF     
   4579 FFFC4646 FF FF FF FF FF FF FF FF     
   4580 FFFC464E FF FF FF FF FF FF FF FF     
   4581 FFFC4656 FF FF FF FF FF FF FF FF     
   4582 FFFC465E FF FF FF FF FF FF FF FF     
   4583 FFFC4666 FF FF FF FF FF FF FF FF     
   4584 FFFC466E FF FF FF FF FF FF FF FF     
   4585 FFFC4676 FF FF FF FF FF FF FF FF     
   4586 FFFC467E FF FF FF FF FF FF FF FF     
   4587 FFFC4686 FF FF FF FF FF FF FF FF     
   4588 FFFC468E FF FF FF FF FF FF FF FF     
   4589 FFFC4696 FF FF FF FF FF FF FF FF     
   4590 FFFC469E FF FF FF FF FF FF FF FF     
   4591 FFFC46A6 FF FF FF FF FF FF FF FF     
   4592 FFFC46AE FF FF FF FF FF FF FF FF     
   4593 FFFC46B6 FF FF FF FF FF FF FF FF     
   4594 FFFC46BE FF FF FF FF FF FF FF FF     
   4595 FFFC46C6 FF FF FF FF FF FF FF FF     
   4596 FFFC46CE FF FF FF FF FF FF FF FF     
   4597 FFFC46D6 FF FF FF FF FF FF FF FF     
   4598 FFFC46DE FF FF FF FF FF FF FF FF     
   4599 FFFC46E6 FF FF FF FF FF FF FF FF     
   4600 FFFC46EE FF FF FF FF FF FF FF FF     
   4601 FFFC46F6 FF FF FF FF FF FF FF FF     
   4602 FFFC46FE FF FF FF FF FF FF FF FF     
   4603 FFFC4706 FF FF FF FF FF FF FF FF     
   4604 FFFC470E FF FF FF FF FF FF FF FF     
   4605 FFFC4716 FF FF FF FF FF FF FF FF     
   4606 FFFC471E FF FF FF FF FF FF FF FF     
   4607 FFFC4726 FF FF FF FF FF FF FF FF     
   4608 FFFC472E FF FF FF FF FF FF FF FF     
   4609 FFFC4736 FF FF FF FF FF FF FF FF     
   4610 FFFC473E FF FF FF FF FF FF FF FF     
   4611 FFFC4746 FF FF FF FF FF FF FF FF     
   4612 FFFC474E FF FF FF FF FF FF FF FF     
   4613 FFFC4756 FF FF FF FF FF FF FF FF     
   4614 FFFC475E FF FF FF FF FF FF FF FF     
   4615 FFFC4766 FF FF FF FF FF FF FF FF     
   4616 FFFC476E FF FF FF FF FF FF FF FF     
   4617 FFFC4776 FF FF FF FF FF FF FF FF     
   4618 FFFC477E FF FF FF FF FF FF FF FF     
   4619 FFFC4786 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 21
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4620 FFFC478E FF FF FF FF FF FF FF FF     
   4621 FFFC4796 FF FF FF FF FF FF FF FF     
   4622 FFFC479E FF FF FF FF FF FF FF FF     
   4623 FFFC47A6 FF FF FF FF FF FF FF FF     
   4624 FFFC47AE FF FF FF FF FF FF FF FF     
   4625 FFFC47B6 FF FF FF FF FF FF FF FF     
   4626 FFFC47BE FF FF FF FF FF FF FF FF     
   4627 FFFC47C6 FF FF FF FF FF FF FF FF     
   4628 FFFC47CE FF FF FF FF FF FF FF FF     
   4629 FFFC47D6 FF FF FF FF FF FF FF FF     
   4630 FFFC47DE FF FF FF FF FF FF FF FF     
   4631 FFFC47E6 FF FF FF FF FF FF FF FF     
   4632 FFFC47EE FF FF FF FF FF FF FF FF     
   4633 FFFC47F6 FF FF FF FF FF FF FF FF     
   4634 FFFC47FE FF FF FF FF FF FF FF FF     
   4635 FFFC4806 FF FF FF FF FF FF FF FF     
   4636 FFFC480E FF FF FF FF FF FF FF FF     
   4637 FFFC4816 FF FF FF FF FF FF FF FF     
   4638 FFFC481E FF FF FF FF FF FF FF FF     
   4639 FFFC4826 FF FF FF FF FF FF FF FF     
   4640 FFFC482E FF FF FF FF FF FF FF FF     
   4641 FFFC4836 FF FF FF FF FF FF FF FF     
   4642 FFFC483E FF FF FF FF FF FF FF FF     
   4643 FFFC4846 FF FF FF FF FF FF FF FF     
   4644 FFFC484E FF FF FF FF FF FF FF FF     
   4645 FFFC4856 FF FF FF FF FF FF FF FF     
   4646 FFFC485E FF FF FF FF FF FF FF FF     
   4647 FFFC4866 FF FF FF FF FF FF FF FF     
   4648 FFFC486E FF FF FF FF FF FF FF FF     
   4649 FFFC4876 FF FF FF FF FF FF FF FF     
   4650 FFFC487E FF FF FF FF FF FF FF FF     
   4651 FFFC4886 FF FF FF FF FF FF FF FF     
   4652 FFFC488E FF FF FF FF FF FF FF FF     
   4653 FFFC4896 FF FF FF FF FF FF FF FF     
   4654 FFFC489E FF FF FF FF FF FF FF FF     
   4655 FFFC48A6 FF FF FF FF FF FF FF FF     
   4656 FFFC48AE FF FF FF FF FF FF FF FF     
   4657 FFFC48B6 FF FF FF FF FF FF FF FF     
   4658 FFFC48BE FF FF FF FF FF FF FF FF     
   4659 FFFC48C6 FF FF FF FF FF FF FF FF     
   4660 FFFC48CE FF FF FF FF FF FF FF FF     
   4661 FFFC48D6 FF FF FF FF FF FF FF FF     
   4662 FFFC48DE FF FF FF FF FF FF FF FF     
   4663 FFFC48E6 FF FF FF FF FF FF FF FF     
   4664 FFFC48EE FF FF FF FF FF FF FF FF     
   4665 FFFC48F6 FF FF FF FF FF FF FF FF     
   4666 FFFC48FE FF FF FF FF FF FF FF FF     
   4667 FFFC4906 FF FF FF FF FF FF FF FF     
   4668 FFFC490E FF FF FF FF FF FF FF FF     
   4669 FFFC4916 FF FF FF FF FF FF FF FF     
   4670 FFFC491E FF FF FF FF FF FF FF FF     
   4671 FFFC4926 FF FF FF FF FF FF FF FF     
   4672 FFFC492E FF FF FF FF FF FF FF FF     
   4673 FFFC4936 FF FF FF FF FF FF FF FF     
   4674 FFFC493E FF FF FF FF FF FF FF FF     
   4675 FFFC4946 FF FF FF FF FF FF FF FF     
   4676 FFFC494E FF FF FF FF FF FF FF FF     
   4677 FFFC4956 FF FF FF FF FF FF FF FF     
   4678 FFFC495E FF FF FF FF FF FF FF FF     
   4679 FFFC4966 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 22
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4680 FFFC496E FF FF FF FF FF FF FF FF     
   4681 FFFC4976 FF FF FF FF FF FF FF FF     
   4682 FFFC497E FF FF FF FF FF FF FF FF     
   4683 FFFC4986 FF FF FF FF FF FF FF FF     
   4684 FFFC498E FF FF FF FF FF FF FF FF     
   4685 FFFC4996 FF FF FF FF FF FF FF FF     
   4686 FFFC499E FF FF FF FF FF FF FF FF     
   4687 FFFC49A6 FF FF FF FF FF FF FF FF     
   4688 FFFC49AE FF FF FF FF FF FF FF FF     
   4689 FFFC49B6 FF FF FF FF FF FF FF FF     
   4690 FFFC49BE FF FF FF FF FF FF FF FF     
   4691 FFFC49C6 FF FF FF FF FF FF FF FF     
   4692 FFFC49CE FF FF FF FF FF FF FF FF     
   4693 FFFC49D6 FF FF FF FF FF FF FF FF     
   4694 FFFC49DE FF FF FF FF FF FF FF FF     
   4695 FFFC49E6 FF FF FF FF FF FF FF FF     
   4696 FFFC49EE FF FF FF FF FF FF FF FF     
   4697 FFFC49F6 FF FF FF FF FF FF FF FF     
   4698 FFFC49FE FF FF FF FF FF FF FF FF     
   4699 FFFC4A06 FF FF FF FF FF FF FF FF     
   4700 FFFC4A0E FF FF FF FF FF FF FF FF     
   4701 FFFC4A16 FF FF FF FF FF FF FF FF     
   4702 FFFC4A1E FF FF FF FF FF FF FF FF     
   4703 FFFC4A26 FF FF FF FF FF FF FF FF     
   4704 FFFC4A2E FF FF FF FF FF FF FF FF     
   4705 FFFC4A36 FF FF FF FF FF FF FF FF     
   4706 FFFC4A3E FF FF FF FF FF FF FF FF     
   4707 FFFC4A46 FF FF FF FF FF FF FF FF     
   4708 FFFC4A4E FF FF FF FF FF FF FF FF     
   4709 FFFC4A56 FF FF FF FF FF FF FF FF     
   4710 FFFC4A5E FF FF FF FF FF FF FF FF     
   4711 FFFC4A66 FF FF FF FF FF FF FF FF     
   4712 FFFC4A6E FF FF FF FF FF FF FF FF     
   4713 FFFC4A76 FF FF FF FF FF FF FF FF     
   4714 FFFC4A7E FF FF FF FF FF FF FF FF     
   4715 FFFC4A86 FF FF FF FF FF FF FF FF     
   4716 FFFC4A8E FF FF FF FF FF FF FF FF     
   4717 FFFC4A96 FF FF FF FF FF FF FF FF     
   4718 FFFC4A9E FF FF FF FF FF FF FF FF     
   4719 FFFC4AA6 FF FF FF FF FF FF FF FF     
   4720 FFFC4AAE FF FF FF FF FF FF FF FF     
   4721 FFFC4AB6 FF FF FF FF FF FF FF FF     
   4722 FFFC4ABE FF FF FF FF FF FF FF FF     
   4723 FFFC4AC6 FF FF FF FF FF FF FF FF     
   4724 FFFC4ACE FF FF FF FF FF FF FF FF     
   4725 FFFC4AD6 FF FF FF FF FF FF FF FF     
   4726 FFFC4ADE FF FF FF FF FF FF FF FF     
   4727 FFFC4AE6 FF FF FF FF FF FF FF FF     
   4728 FFFC4AEE FF FF FF FF FF FF FF FF     
   4729 FFFC4AF6 FF FF FF FF FF FF FF FF     
   4730 FFFC4AFE FF FF FF FF FF FF FF FF     
   4731 FFFC4B06 FF FF FF FF FF FF FF FF     
   4732 FFFC4B0E FF FF FF FF FF FF FF FF     
   4733 FFFC4B16 FF FF FF FF FF FF FF FF     
   4734 FFFC4B1E FF FF FF FF FF FF FF FF     
   4735 FFFC4B26 FF FF FF FF FF FF FF FF     
   4736 FFFC4B2E FF FF FF FF FF FF FF FF     
   4737 FFFC4B36 FF FF FF FF FF FF FF FF     
   4738 FFFC4B3E FF FF FF FF FF FF FF FF     
   4739 FFFC4B46 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 23
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4740 FFFC4B4E FF FF FF FF FF FF FF FF     
   4741 FFFC4B56 FF FF FF FF FF FF FF FF     
   4742 FFFC4B5E FF FF FF FF FF FF FF FF     
   4743 FFFC4B66 FF FF FF FF FF FF FF FF     
   4744 FFFC4B6E FF FF FF FF FF FF FF FF     
   4745 FFFC4B76 FF FF FF FF FF FF FF FF     
   4746 FFFC4B7E FF FF FF FF FF FF FF FF     
   4747 FFFC4B86 FF FF FF FF FF FF FF FF     
   4748 FFFC4B8E FF FF FF FF FF FF FF FF     
   4749 FFFC4B96 FF FF FF FF FF FF FF FF     
   4750 FFFC4B9E FF FF FF FF FF FF FF FF     
   4751 FFFC4BA6 FF FF FF FF FF FF FF FF     
   4752 FFFC4BAE FF FF FF FF FF FF FF FF     
   4753 FFFC4BB6 FF FF FF FF FF FF FF FF     
   4754 FFFC4BBE FF FF FF FF FF FF FF FF     
   4755 FFFC4BC6 FF FF FF FF FF FF FF FF     
   4756 FFFC4BCE FF FF FF FF FF FF FF FF     
   4757 FFFC4BD6 FF FF FF FF FF FF FF FF     
   4758 FFFC4BDE FF FF FF FF FF FF FF FF     
   4759 FFFC4BE6 FF FF FF FF FF FF FF FF     
   4760 FFFC4BEE FF FF FF FF FF FF FF FF     
   4761 FFFC4BF6 FF FF FF FF FF FF FF FF     
   4762 FFFC4BFE FF FF FF FF FF FF FF FF     
   4763 FFFC4C06 FF FF FF FF FF FF FF FF     
   4764 FFFC4C0E FF FF FF FF FF FF FF FF     
   4765 FFFC4C16 FF FF FF FF FF FF FF FF     
   4766 FFFC4C1E FF FF FF FF FF FF FF FF     
   4767 FFFC4C26 FF FF FF FF FF FF FF FF     
   4768 FFFC4C2E FF FF FF FF FF FF FF FF     
   4769 FFFC4C36 FF FF FF FF FF FF FF FF     
   4770 FFFC4C3E FF FF FF FF FF FF FF FF     
   4771 FFFC4C46 FF FF FF FF FF FF FF FF     
   4772 FFFC4C4E FF FF FF FF FF FF FF FF     
   4773 FFFC4C56 FF FF FF FF FF FF FF FF     
   4774 FFFC4C5E FF FF FF FF FF FF FF FF     
   4775 FFFC4C66 FF FF FF FF FF FF FF FF     
   4776 FFFC4C6E FF FF FF FF FF FF FF FF     
   4777 FFFC4C76 FF FF FF FF FF FF FF FF     
   4778 FFFC4C7E FF FF FF FF FF FF FF FF     
   4779 FFFC4C86 FF FF FF FF FF FF FF FF     
   4780 FFFC4C8E FF FF FF FF FF FF FF FF     
   4781 FFFC4C96 FF FF FF FF FF FF FF FF     
   4782 FFFC4C9E FF FF FF FF FF FF FF FF     
   4783 FFFC4CA6 FF FF FF FF FF FF FF FF     
   4784 FFFC4CAE FF FF FF FF FF FF FF FF     
   4785 FFFC4CB6 FF FF FF FF FF FF FF FF     
   4786 FFFC4CBE FF FF FF FF FF FF FF FF     
   4787 FFFC4CC6 FF FF FF FF FF FF FF FF     
   4788 FFFC4CCE FF FF FF FF FF FF FF FF     
   4789 FFFC4CD6 FF FF FF FF FF FF FF FF     
   4790 FFFC4CDE FF FF FF FF FF FF FF FF     
   4791 FFFC4CE6 FF FF FF FF FF FF FF FF     
   4792 FFFC4CEE FF FF FF FF FF FF FF FF     
   4793 FFFC4CF6 FF FF FF FF FF FF FF FF     
   4794 FFFC4CFE FF FF FF FF FF FF FF FF     
   4795 FFFC4D06 FF FF FF FF FF FF FF FF     
   4796 FFFC4D0E FF FF FF FF FF FF FF FF     
   4797 FFFC4D16 FF FF FF FF FF FF FF FF     
   4798 FFFC4D1E FF FF FF FF FF FF FF FF     
   4799 FFFC4D26 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 24
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4800 FFFC4D2E FF FF FF FF FF FF FF FF     
   4801 FFFC4D36 FF FF FF FF FF FF FF FF     
   4802 FFFC4D3E FF FF FF FF FF FF FF FF     
   4803 FFFC4D46 FF FF FF FF FF FF FF FF     
   4804 FFFC4D4E FF FF FF FF FF FF FF FF     
   4805 FFFC4D56 FF FF FF FF FF FF FF FF     
   4806 FFFC4D5E FF FF FF FF FF FF FF FF     
   4807 FFFC4D66 FF FF FF FF FF FF FF FF     
   4808 FFFC4D6E FF FF FF FF FF FF FF FF     
   4809 FFFC4D76 FF FF FF FF FF FF FF FF     
   4810 FFFC4D7E FF FF FF FF FF FF FF FF     
   4811 FFFC4D86 FF FF FF FF FF FF FF FF     
   4812 FFFC4D8E FF FF FF FF FF FF FF FF     
   4813 FFFC4D96 FF FF FF FF FF FF FF FF     
   4814 FFFC4D9E FF FF FF FF FF FF FF FF     
   4815 FFFC4DA6 FF FF FF FF FF FF FF FF     
   4816 FFFC4DAE FF FF FF FF FF FF FF FF     
   4817 FFFC4DB6 FF FF FF FF FF FF FF FF     
   4818 FFFC4DBE FF FF FF FF FF FF FF FF     
   4819 FFFC4DC6 FF FF FF FF FF FF FF FF     
   4820 FFFC4DCE FF FF FF FF FF FF FF FF     
   4821 FFFC4DD6 FF FF FF FF FF FF FF FF     
   4822 FFFC4DDE FF FF FF FF FF FF FF FF     
   4823 FFFC4DE6 FF FF FF FF FF FF FF FF     
   4824 FFFC4DEE FF FF FF FF FF FF FF FF     
   4825 FFFC4DF6 FF FF FF FF FF FF FF FF     
   4826 FFFC4DFE FF FF FF FF FF FF FF FF     
   4827 FFFC4E06 FF FF FF FF FF FF FF FF     
   4828 FFFC4E0E FF FF FF FF FF FF FF FF     
   4829 FFFC4E16 FF FF FF FF FF FF FF FF     
   4830 FFFC4E1E FF FF FF FF FF FF FF FF     
   4831 FFFC4E26 FF FF FF FF FF FF FF FF     
   4832 FFFC4E2E FF FF FF FF FF FF FF FF     
   4833 FFFC4E36 FF FF FF FF FF FF FF FF     
   4834 FFFC4E3E FF FF FF FF FF FF FF FF     
   4835 FFFC4E46 FF FF FF FF FF FF FF FF     
   4836 FFFC4E4E FF FF FF FF FF FF FF FF     
   4837 FFFC4E56 FF FF FF FF FF FF FF FF     
   4838 FFFC4E5E FF FF FF FF FF FF FF FF     
   4839 FFFC4E66 FF FF FF FF FF FF FF FF     
   4840 FFFC4E6E FF FF FF FF FF FF FF FF     
   4841 FFFC4E76 FF FF FF FF FF FF FF FF     
   4842 FFFC4E7E FF FF FF FF FF FF FF FF     
   4843 FFFC4E86 FF FF FF FF FF FF FF FF     
   4844 FFFC4E8E FF FF FF FF FF FF FF FF     
   4845 FFFC4E96 FF FF FF FF FF FF FF FF     
   4846 FFFC4E9E FF FF FF FF FF FF FF FF     
   4847 FFFC4EA6 FF FF FF FF FF FF FF FF     
   4848 FFFC4EAE FF FF FF FF FF FF FF FF     
   4849 FFFC4EB6 FF FF FF FF FF FF FF FF     
   4850 FFFC4EBE FF FF FF FF FF FF FF FF     
   4851 FFFC4EC6 FF FF FF FF FF FF FF FF     
   4852 FFFC4ECE FF FF FF FF FF FF FF FF     
   4853 FFFC4ED6 FF FF FF FF FF FF FF FF     
   4854 FFFC4EDE FF FF FF FF FF FF FF FF     
   4855 FFFC4EE6 FF FF FF FF FF FF FF FF     
   4856 FFFC4EEE FF FF FF FF FF FF FF FF     
   4857 FFFC4EF6 FF FF FF FF FF FF FF FF     
   4858 FFFC4EFE FF FF FF FF FF FF FF FF     
   4859 FFFC4F06 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 25
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4860 FFFC4F0E FF FF FF FF FF FF FF FF     
   4861 FFFC4F16 FF FF FF FF FF FF FF FF     
   4862 FFFC4F1E FF FF FF FF FF FF FF FF     
   4863 FFFC4F26 FF FF FF FF FF FF FF FF     
   4864 FFFC4F2E FF FF FF FF FF FF FF FF     
   4865 FFFC4F36 FF FF FF FF FF FF FF FF     
   4866 FFFC4F3E FF FF FF FF FF FF FF FF     
   4867 FFFC4F46 FF FF FF FF FF FF FF FF     
   4868 FFFC4F4E FF FF FF FF FF FF FF FF     
   4869 FFFC4F56 FF FF FF FF FF FF FF FF     
   4870 FFFC4F5E FF FF FF FF FF FF FF FF     
   4871 FFFC4F66 FF FF FF FF FF FF FF FF     
   4872 FFFC4F6E FF FF FF FF FF FF FF FF     
   4873 FFFC4F76 FF FF FF FF FF FF FF FF     
   4874 FFFC4F7E FF FF FF FF FF FF FF FF     
   4875 FFFC4F86 FF FF FF FF FF FF FF FF     
   4876 FFFC4F8E FF FF FF FF FF FF FF FF     
   4877 FFFC4F96 FF FF FF FF FF FF FF FF     
   4878 FFFC4F9E FF FF FF FF FF FF FF FF     
   4879 FFFC4FA6 FF FF FF FF FF FF FF FF     
   4880 FFFC4FAE FF FF FF FF FF FF FF FF     
   4881 FFFC4FB6 FF FF FF FF FF FF FF FF     
   4882 FFFC4FBE FF FF FF FF FF FF FF FF     
   4883 FFFC4FC6 FF FF FF FF FF FF FF FF     
   4884 FFFC4FCE FF FF FF FF FF FF FF FF     
   4885 FFFC4FD6 FF FF FF FF FF FF FF FF     
   4886 FFFC4FDE FF FF FF FF FF FF FF FF     
   4887 FFFC4FE6 FF FF FF FF FF FF FF FF     
   4888 FFFC4FEE FF FF FF FF FF FF FF FF     
   4889 FFFC4FF6 FF FF FF FF FF FF FF FF     
   4890 FFFC4FFE FF FF FF FF FF FF FF FF     
   4891 FFFC5006 FF FF FF FF FF FF FF FF     
   4892 FFFC500E FF FF FF FF FF FF FF FF     
   4893 FFFC5016 FF FF FF FF FF FF FF FF     
   4894 FFFC501E FF FF FF FF FF FF FF FF     
   4895 FFFC5026 FF FF FF FF FF FF FF FF     
   4896 FFFC502E FF FF FF FF FF FF FF FF     
   4897 FFFC5036 FF FF FF FF FF FF FF FF     
   4898 FFFC503E FF FF FF FF FF FF FF FF     
   4899 FFFC5046 FF FF FF FF FF FF FF FF     
   4900 FFFC504E FF FF FF FF FF FF FF FF     
   4901 FFFC5056 FF FF FF FF FF FF FF FF     
   4902 FFFC505E FF FF FF FF FF FF FF FF     
   4903 FFFC5066 FF FF FF FF FF FF FF FF     
   4904 FFFC506E FF FF FF FF FF FF FF FF     
   4905 FFFC5076 FF FF FF FF FF FF FF FF     
   4906 FFFC507E FF FF FF FF FF FF FF FF     
   4907 FFFC5086 FF FF FF FF FF FF FF FF     
   4908 FFFC508E FF FF FF FF FF FF FF FF     
   4909 FFFC5096 FF FF FF FF FF FF FF FF     
   4910 FFFC509E FF FF FF FF FF FF FF FF     
   4911 FFFC50A6 FF FF FF FF FF FF FF FF     
   4912 FFFC50AE FF FF FF FF FF FF FF FF     
   4913 FFFC50B6 FF FF FF FF FF FF FF FF     
   4914 FFFC50BE FF FF FF FF FF FF FF FF     
   4915 FFFC50C6 FF FF FF FF FF FF FF FF     
   4916 FFFC50CE FF FF FF FF FF FF FF FF     
   4917 FFFC50D6 FF FF FF FF FF FF FF FF     
   4918 FFFC50DE FF FF FF FF FF FF FF FF     
   4919 FFFC50E6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 26
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4920 FFFC50EE FF FF FF FF FF FF FF FF     
   4921 FFFC50F6 FF FF FF FF FF FF FF FF     
   4922 FFFC50FE FF FF FF FF FF FF FF FF     
   4923 FFFC5106 FF FF FF FF FF FF FF FF     
   4924 FFFC510E FF FF FF FF FF FF FF FF     
   4925 FFFC5116 FF FF FF FF FF FF FF FF     
   4926 FFFC511E FF FF FF FF FF FF FF FF     
   4927 FFFC5126 FF FF FF FF FF FF FF FF     
   4928 FFFC512E FF FF FF FF FF FF FF FF     
   4929 FFFC5136 FF FF FF FF FF FF FF FF     
   4930 FFFC513E FF FF FF FF FF FF FF FF     
   4931 FFFC5146 FF FF FF FF FF FF FF FF     
   4932 FFFC514E FF FF FF FF FF FF FF FF     
   4933 FFFC5156 FF FF FF FF FF FF FF FF     
   4934 FFFC515E FF FF FF FF FF FF FF FF     
   4935 FFFC5166 FF FF FF FF FF FF FF FF     
   4936 FFFC516E FF FF FF FF FF FF FF FF     
   4937 FFFC5176 FF FF FF FF FF FF FF FF     
   4938 FFFC517E FF FF FF FF FF FF FF FF     
   4939 FFFC5186 FF FF FF FF FF FF FF FF     
   4940 FFFC518E FF FF FF FF FF FF FF FF     
   4941 FFFC5196 FF FF FF FF FF FF FF FF     
   4942 FFFC519E FF FF FF FF FF FF FF FF     
   4943 FFFC51A6 FF FF FF FF FF FF FF FF     
   4944 FFFC51AE FF FF FF FF FF FF FF FF     
   4945 FFFC51B6 FF FF FF FF FF FF FF FF     
   4946 FFFC51BE FF FF FF FF FF FF FF FF     
   4947 FFFC51C6 FF FF FF FF FF FF FF FF     
   4948 FFFC51CE FF FF FF FF FF FF FF FF     
   4949 FFFC51D6 FF FF FF FF FF FF FF FF     
   4950 FFFC51DE FF FF FF FF FF FF FF FF     
   4951 FFFC51E6 FF FF FF FF FF FF FF FF     
   4952 FFFC51EE FF FF FF FF FF FF FF FF     
   4953 FFFC51F6 FF FF FF FF FF FF FF FF     
   4954 FFFC51FE FF FF FF FF FF FF FF FF     
   4955 FFFC5206 FF FF FF FF FF FF FF FF     
   4956 FFFC520E FF FF FF FF FF FF FF FF     
   4957 FFFC5216 FF FF FF FF FF FF FF FF     
   4958 FFFC521E FF FF FF FF FF FF FF FF     
   4959 FFFC5226 FF FF FF FF FF FF FF FF     
   4960 FFFC522E FF FF FF FF FF FF FF FF     
   4961 FFFC5236 FF FF FF FF FF FF FF FF     
   4962 FFFC523E FF FF FF FF FF FF FF FF     
   4963 FFFC5246 FF FF FF FF FF FF FF FF     
   4964 FFFC524E FF FF FF FF FF FF FF FF     
   4965 FFFC5256 FF FF FF FF FF FF FF FF     
   4966 FFFC525E FF FF FF FF FF FF FF FF     
   4967 FFFC5266 FF FF FF FF FF FF FF FF     
   4968 FFFC526E FF FF FF FF FF FF FF FF     
   4969 FFFC5276 FF FF FF FF FF FF FF FF     
   4970 FFFC527E FF FF FF FF FF FF FF FF     
   4971 FFFC5286 FF FF FF FF FF FF FF FF     
   4972 FFFC528E FF FF FF FF FF FF FF FF     
   4973 FFFC5296 FF FF FF FF FF FF FF FF     
   4974 FFFC529E FF FF FF FF FF FF FF FF     
   4975 FFFC52A6 FF FF FF FF FF FF FF FF     
   4976 FFFC52AE FF FF FF FF FF FF FF FF     
   4977 FFFC52B6 FF FF FF FF FF FF FF FF     
   4978 FFFC52BE FF FF FF FF FF FF FF FF     
   4979 FFFC52C6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 27
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4980 FFFC52CE FF FF FF FF FF FF FF FF     
   4981 FFFC52D6 FF FF FF FF FF FF FF FF     
   4982 FFFC52DE FF FF FF FF FF FF FF FF     
   4983 FFFC52E6 FF FF FF FF FF FF FF FF     
   4984 FFFC52EE FF FF FF FF FF FF FF FF     
   4985 FFFC52F6 FF FF FF FF FF FF FF FF     
   4986 FFFC52FE FF FF FF FF FF FF FF FF     
   4987 FFFC5306 FF FF FF FF FF FF FF FF     
   4988 FFFC530E FF FF FF FF FF FF FF FF     
   4989 FFFC5316 FF FF FF FF FF FF FF FF     
   4990 FFFC531E FF FF FF FF FF FF FF FF     
   4991 FFFC5326 FF FF FF FF FF FF FF FF     
   4992 FFFC532E FF FF FF FF FF FF FF FF     
   4993 FFFC5336 FF FF FF FF FF FF FF FF     
   4994 FFFC533E FF FF FF FF FF FF FF FF     
   4995 FFFC5346 FF FF FF FF FF FF FF FF     
   4996 FFFC534E FF FF FF FF FF FF FF FF     
   4997 FFFC5356 FF FF FF FF FF FF FF FF     
   4998 FFFC535E FF FF FF FF FF FF FF FF     
   4999 FFFC5366 FF FF FF FF FF FF FF FF     
   5000 FFFC536E FF FF FF FF FF FF FF FF     
   5001 FFFC5376 FF FF FF FF FF FF FF FF     
   5002 FFFC537E FF FF FF FF FF FF FF FF     
   5003 FFFC5386 FF FF FF FF FF FF FF FF     
   5004 FFFC538E FF FF FF FF FF FF FF FF     
   5005 FFFC5396 FF FF FF FF FF FF FF FF     
   5006 FFFC539E FF FF FF FF FF FF FF FF     
   5007 FFFC53A6 FF FF FF FF FF FF FF FF     
   5008 FFFC53AE FF FF FF FF FF FF FF FF     
   5009 FFFC53B6 FF FF FF FF FF FF FF FF     
   5010 FFFC53BE FF FF FF FF FF FF FF FF     
   5011 FFFC53C6 FF FF FF FF FF FF FF FF     
   5012 FFFC53CE FF FF FF FF FF FF FF FF     
   5013 FFFC53D6 FF FF FF FF FF FF FF FF     
   5014 FFFC53DE FF FF FF FF FF FF FF FF     
   5015 FFFC53E6 FF FF FF FF FF FF FF FF     
   5016 FFFC53EE FF FF FF FF FF FF FF FF     
   5017 FFFC53F6 FF FF FF FF FF FF FF FF     
   5018 FFFC53FE FF FF FF FF FF FF FF FF     
   5019 FFFC5406 FF FF FF FF FF FF FF FF     
   5020 FFFC540E FF FF FF FF FF FF FF FF     
   5021 FFFC5416 FF FF FF FF FF FF FF FF     
   5022 FFFC541E FF FF FF FF FF FF FF FF     
   5023 FFFC5426 FF FF FF FF FF FF FF FF     
   5024 FFFC542E FF FF FF FF FF FF FF FF     
   5025 FFFC5436 FF FF FF FF FF FF FF FF     
   5026 FFFC543E FF FF FF FF FF FF FF FF     
   5027 FFFC5446 FF FF FF FF FF FF FF FF     
   5028 FFFC544E FF FF FF FF FF FF FF FF     
   5029 FFFC5456 FF FF FF FF FF FF FF FF     
   5030 FFFC545E FF FF FF FF FF FF FF FF     
   5031 FFFC5466 FF FF FF FF FF FF FF FF     
   5032 FFFC546E FF FF FF FF FF FF FF FF     
   5033 FFFC5476 FF FF FF FF FF FF FF FF     
   5034 FFFC547E FF FF FF FF FF FF FF FF     
   5035 FFFC5486 FF FF FF FF FF FF FF FF     
   5036 FFFC548E FF FF FF FF FF FF FF FF     
   5037 FFFC5496 FF FF FF FF FF FF FF FF     
   5038 FFFC549E FF FF FF FF FF FF FF FF     
   5039 FFFC54A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 28
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5040 FFFC54AE FF FF FF FF FF FF FF FF     
   5041 FFFC54B6 FF FF FF FF FF FF FF FF     
   5042 FFFC54BE FF FF FF FF FF FF FF FF     
   5043 FFFC54C6 FF FF FF FF FF FF FF FF     
   5044 FFFC54CE FF FF FF FF FF FF FF FF     
   5045 FFFC54D6 FF FF FF FF FF FF FF FF     
   5046 FFFC54DE FF FF FF FF FF FF FF FF     
   5047 FFFC54E6 FF FF FF FF FF FF FF FF     
   5048 FFFC54EE FF FF FF FF FF FF FF FF     
   5049 FFFC54F6 FF FF FF FF FF FF FF FF     
   5050 FFFC54FE FF FF FF FF FF FF FF FF     
   5051 FFFC5506 FF FF FF FF FF FF FF FF     
   5052 FFFC550E FF FF FF FF FF FF FF FF     
   5053 FFFC5516 FF FF FF FF FF FF FF FF     
   5054 FFFC551E FF FF FF FF FF FF FF FF     
   5055 FFFC5526 FF FF FF FF FF FF FF FF     
   5056 FFFC552E FF FF FF FF FF FF FF FF     
   5057 FFFC5536 FF FF FF FF FF FF FF FF     
   5058 FFFC553E FF FF FF FF FF FF FF FF     
   5059 FFFC5546 FF FF FF FF FF FF FF FF     
   5060 FFFC554E FF FF FF FF FF FF FF FF     
   5061 FFFC5556 FF FF FF FF FF FF FF FF     
   5062 FFFC555E FF FF FF FF FF FF FF FF     
   5063 FFFC5566 FF FF FF FF FF FF FF FF     
   5064 FFFC556E FF FF FF FF FF FF FF FF     
   5065 FFFC5576 FF FF FF FF FF FF FF FF     
   5066 FFFC557E FF FF FF FF FF FF FF FF     
   5067 FFFC5586 FF FF FF FF FF FF FF FF     
   5068 FFFC558E FF FF FF FF FF FF FF FF     
   5069 FFFC5596 FF FF FF FF FF FF FF FF     
   5070 FFFC559E FF FF FF FF FF FF FF FF     
   5071 FFFC55A6 FF FF FF FF FF FF FF FF     
   5072 FFFC55AE FF FF FF FF FF FF FF FF     
   5073 FFFC55B6 FF FF FF FF FF FF FF FF     
   5074 FFFC55BE FF FF FF FF FF FF FF FF     
   5075 FFFC55C6 FF FF FF FF FF FF FF FF     
   5076 FFFC55CE FF FF FF FF FF FF FF FF     
   5077 FFFC55D6 FF FF FF FF FF FF FF FF     
   5078 FFFC55DE FF FF FF FF FF FF FF FF     
   5079 FFFC55E6 FF FF FF FF FF FF FF FF     
   5080 FFFC55EE FF FF FF FF FF FF FF FF     
   5081 FFFC55F6 FF FF FF FF FF FF FF FF     
   5082 FFFC55FE FF FF FF FF FF FF FF FF     
   5083 FFFC5606 FF FF FF FF FF FF FF FF     
   5084 FFFC560E FF FF FF FF FF FF FF FF     
   5085 FFFC5616 FF FF FF FF FF FF FF FF     
   5086 FFFC561E FF FF FF FF FF FF FF FF     
   5087 FFFC5626 FF FF FF FF FF FF FF FF     
   5088 FFFC562E FF FF FF FF FF FF FF FF     
   5089 FFFC5636 FF FF FF FF FF FF FF FF     
   5090 FFFC563E FF FF FF FF FF FF FF FF     
   5091 FFFC5646 FF FF FF FF FF FF FF FF     
   5092 FFFC564E FF FF FF FF FF FF FF FF     
   5093 FFFC5656 FF FF FF FF FF FF FF FF     
   5094 FFFC565E FF FF FF FF FF FF FF FF     
   5095 FFFC5666 FF FF FF FF FF FF FF FF     
   5096 FFFC566E FF FF FF FF FF FF FF FF     
   5097 FFFC5676 FF FF FF FF FF FF FF FF     
   5098 FFFC567E FF FF FF FF FF FF FF FF     
   5099 FFFC5686 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 29
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5100 FFFC568E FF FF FF FF FF FF FF FF     
   5101 FFFC5696 FF FF FF FF FF FF FF FF     
   5102 FFFC569E FF FF FF FF FF FF FF FF     
   5103 FFFC56A6 FF FF FF FF FF FF FF FF     
   5104 FFFC56AE FF FF FF FF FF FF FF FF     
   5105 FFFC56B6 FF FF FF FF FF FF FF FF     
   5106 FFFC56BE FF FF FF FF FF FF FF FF     
   5107 FFFC56C6 FF FF FF FF FF FF FF FF     
   5108 FFFC56CE FF FF FF FF FF FF FF FF     
   5109 FFFC56D6 FF FF FF FF FF FF FF FF     
   5110 FFFC56DE FF FF FF FF FF FF FF FF     
   5111 FFFC56E6 FF FF FF FF FF FF FF FF     
   5112 FFFC56EE FF FF FF FF FF FF FF FF     
   5113 FFFC56F6 FF FF FF FF FF FF FF FF     
   5114 FFFC56FE FF FF FF FF FF FF FF FF     
   5115 FFFC5706 FF FF FF FF FF FF FF FF     
   5116 FFFC570E FF FF FF FF FF FF FF FF     
   5117 FFFC5716 FF FF FF FF FF FF FF FF     
   5118 FFFC571E FF FF FF FF FF FF FF FF     
   5119 FFFC5726 FF FF FF FF FF FF FF FF     
   5120 FFFC572E FF FF FF FF FF FF FF FF     
   5121 FFFC5736 FF FF FF FF FF FF FF FF     
   5122 FFFC573E FF FF FF FF FF FF FF FF     
   5123 FFFC5746 FF FF FF FF FF FF FF FF     
   5124 FFFC574E FF FF FF FF FF FF FF FF     
   5125 FFFC5756 FF FF FF FF FF FF FF FF     
   5126 FFFC575E FF FF FF FF FF FF FF FF     
   5127 FFFC5766 FF FF FF FF FF FF FF FF     
   5128 FFFC576E FF FF FF FF FF FF FF FF     
   5129 FFFC5776 FF FF FF FF FF FF FF FF     
   5130 FFFC577E FF FF FF FF FF FF FF FF     
   5131 FFFC5786 FF FF FF FF FF FF FF FF     
   5132 FFFC578E FF FF FF FF FF FF FF FF     
   5133 FFFC5796 FF FF FF FF FF FF FF FF     
   5134 FFFC579E FF FF FF FF FF FF FF FF     
   5135 FFFC57A6 FF FF FF FF FF FF FF FF     
   5136 FFFC57AE FF FF FF FF FF FF FF FF     
   5137 FFFC57B6 FF FF FF FF FF FF FF FF     
   5138 FFFC57BE FF FF FF FF FF FF FF FF     
   5139 FFFC57C6 FF FF FF FF FF FF FF FF     
   5140 FFFC57CE FF FF FF FF FF FF FF FF     
   5141 FFFC57D6 FF FF FF FF FF FF FF FF     
   5142 FFFC57DE FF FF FF FF FF FF FF FF     
   5143 FFFC57E6 FF FF FF FF FF FF FF FF     
   5144 FFFC57EE FF FF FF FF FF FF FF FF     
   5145 FFFC57F6 FF FF FF FF FF FF FF FF     
   5146 FFFC57FE FF FF FF FF FF FF FF FF     
   5147 FFFC5806 FF FF FF FF FF FF FF FF     
   5148 FFFC580E FF FF FF FF FF FF FF FF     
   5149 FFFC5816 FF FF FF FF FF FF FF FF     
   5150 FFFC581E FF FF FF FF FF FF FF FF     
   5151 FFFC5826 FF FF FF FF FF FF FF FF     
   5152 FFFC582E FF FF FF FF FF FF FF FF     
   5153 FFFC5836 FF FF FF FF FF FF FF FF     
   5154 FFFC583E FF FF FF FF FF FF FF FF     
   5155 FFFC5846 FF FF FF FF FF FF FF FF     
   5156 FFFC584E FF FF FF FF FF FF FF FF     
   5157 FFFC5856 FF FF FF FF FF FF FF FF     
   5158 FFFC585E FF FF FF FF FF FF FF FF     
   5159 FFFC5866 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 30
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5160 FFFC586E FF FF FF FF FF FF FF FF     
   5161 FFFC5876 FF FF FF FF FF FF FF FF     
   5162 FFFC587E FF FF FF FF FF FF FF FF     
   5163 FFFC5886 FF FF FF FF FF FF FF FF     
   5164 FFFC588E FF FF FF FF FF FF FF FF     
   5165 FFFC5896 FF FF FF FF FF FF FF FF     
   5166 FFFC589E FF FF FF FF FF FF FF FF     
   5167 FFFC58A6 FF FF FF FF FF FF FF FF     
   5168 FFFC58AE FF FF FF FF FF FF FF FF     
   5169 FFFC58B6 FF FF FF FF FF FF FF FF     
   5170 FFFC58BE FF FF FF FF FF FF FF FF     
   5171 FFFC58C6 FF FF FF FF FF FF FF FF     
   5172 FFFC58CE FF FF FF FF FF FF FF FF     
   5173 FFFC58D6 FF FF FF FF FF FF FF FF     
   5174 FFFC58DE FF FF FF FF FF FF FF FF     
   5175 FFFC58E6 FF FF FF FF FF FF FF FF     
   5176 FFFC58EE FF FF FF FF FF FF FF FF     
   5177 FFFC58F6 FF FF FF FF FF FF FF FF     
   5178 FFFC58FE FF FF FF FF FF FF FF FF     
   5179 FFFC5906 FF FF FF FF FF FF FF FF     
   5180 FFFC590E FF FF FF FF FF FF FF FF     
   5181 FFFC5916 FF FF FF FF FF FF FF FF     
   5182 FFFC591E FF FF FF FF FF FF FF FF     
   5183 FFFC5926 FF FF FF FF FF FF FF FF     
   5184 FFFC592E FF FF FF FF FF FF FF FF     
   5185 FFFC5936 FF FF FF FF FF FF FF FF     
   5186 FFFC593E FF FF FF FF FF FF FF FF     
   5187 FFFC5946 FF FF FF FF FF FF FF FF     
   5188 FFFC594E FF FF FF FF FF FF FF FF     
   5189 FFFC5956 FF FF FF FF FF FF FF FF     
   5190 FFFC595E FF FF FF FF FF FF FF FF     
   5191 FFFC5966 FF FF FF FF FF FF FF FF     
   5192 FFFC596E FF FF FF FF FF FF FF FF     
   5193 FFFC5976 FF FF FF FF FF FF FF FF     
   5194 FFFC597E FF FF FF FF FF FF FF FF     
   5195 FFFC5986 FF FF FF FF FF FF FF FF     
   5196 FFFC598E FF FF FF FF FF FF FF FF     
   5197 FFFC5996 FF FF FF FF FF FF FF FF     
   5198 FFFC599E FF FF FF FF FF FF FF FF     
   5199 FFFC59A6 FF FF FF FF FF FF FF FF     
   5200 FFFC59AE FF FF FF FF FF FF FF FF     
   5201 FFFC59B6 FF FF FF FF FF FF FF FF     
   5202 FFFC59BE FF FF FF FF FF FF FF FF     
   5203 FFFC59C6 FF FF FF FF FF FF FF FF     
   5204 FFFC59CE FF FF FF FF FF FF FF FF     
   5205 FFFC59D6 FF FF FF FF FF FF FF FF     
   5206 FFFC59DE FF FF FF FF FF FF FF FF     
   5207 FFFC59E6 FF FF FF FF FF FF FF FF     
   5208 FFFC59EE FF FF FF FF FF FF FF FF     
   5209 FFFC59F6 FF FF FF FF FF FF FF FF     
   5210 FFFC59FE FF FF FF FF FF FF FF FF     
   5211 FFFC5A06 FF FF FF FF FF FF FF FF     
   5212 FFFC5A0E FF FF FF FF FF FF FF FF     
   5213 FFFC5A16 FF FF FF FF FF FF FF FF     
   5214 FFFC5A1E FF FF FF FF FF FF FF FF     
   5215 FFFC5A26 FF FF FF FF FF FF FF FF     
   5216 FFFC5A2E FF FF FF FF FF FF FF FF     
   5217 FFFC5A36 FF FF FF FF FF FF FF FF     
   5218 FFFC5A3E FF FF FF FF FF FF FF FF     
   5219 FFFC5A46 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 31
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5220 FFFC5A4E FF FF FF FF FF FF FF FF     
   5221 FFFC5A56 FF FF FF FF FF FF FF FF     
   5222 FFFC5A5E FF FF FF FF FF FF FF FF     
   5223 FFFC5A66 FF FF FF FF FF FF FF FF     
   5224 FFFC5A6E FF FF FF FF FF FF FF FF     
   5225 FFFC5A76 FF FF FF FF FF FF FF FF     
   5226 FFFC5A7E FF FF FF FF FF FF FF FF     
   5227 FFFC5A86 FF FF FF FF FF FF FF FF     
   5228 FFFC5A8E FF FF FF FF FF FF FF FF     
   5229 FFFC5A96 FF FF FF FF FF FF FF FF     
   5230 FFFC5A9E FF FF FF FF FF FF FF FF     
   5231 FFFC5AA6 FF FF FF FF FF FF FF FF     
   5232 FFFC5AAE FF FF FF FF FF FF FF FF     
   5233 FFFC5AB6 FF FF FF FF FF FF FF FF     
   5234 FFFC5ABE FF FF FF FF FF FF FF FF     
   5235 FFFC5AC6 FF FF FF FF FF FF FF FF     
   5236 FFFC5ACE FF FF FF FF FF FF FF FF     
   5237 FFFC5AD6 FF FF FF FF FF FF FF FF     
   5238 FFFC5ADE FF FF FF FF FF FF FF FF     
   5239 FFFC5AE6 FF FF FF FF FF FF FF FF     
   5240 FFFC5AEE FF FF FF FF FF FF FF FF     
   5241 FFFC5AF6 FF FF FF FF FF FF FF FF     
   5242 FFFC5AFE FF FF FF FF FF FF FF FF     
   5243 FFFC5B06 FF FF FF FF FF FF FF FF     
   5244 FFFC5B0E FF FF FF FF FF FF FF FF     
   5245 FFFC5B16 FF FF FF FF FF FF FF FF     
   5246 FFFC5B1E FF FF FF FF FF FF FF FF     
   5247 FFFC5B26 FF FF FF FF FF FF FF FF     
   5248 FFFC5B2E FF FF FF FF FF FF FF FF     
   5249 FFFC5B36 FF FF FF FF FF FF FF FF     
   5250 FFFC5B3E FF FF FF FF FF FF FF FF     
   5251 FFFC5B46 FF FF FF FF FF FF FF FF     
   5252 FFFC5B4E FF FF FF FF FF FF FF FF     
   5253 FFFC5B56 FF FF FF FF FF FF FF FF     
   5254 FFFC5B5E FF FF FF FF FF FF FF FF     
   5255 FFFC5B66 FF FF FF FF FF FF FF FF     
   5256 FFFC5B6E FF FF FF FF FF FF FF FF     
   5257 FFFC5B76 FF FF FF FF FF FF FF FF     
   5258 FFFC5B7E FF FF FF FF FF FF FF FF     
   5259 FFFC5B86 FF FF FF FF FF FF FF FF     
   5260 FFFC5B8E FF FF FF FF FF FF FF FF     
   5261 FFFC5B96 FF FF FF FF FF FF FF FF     
   5262 FFFC5B9E FF FF FF FF FF FF FF FF     
   5263 FFFC5BA6 FF FF FF FF FF FF FF FF     
   5264 FFFC5BAE FF FF FF FF FF FF FF FF     
   5265 FFFC5BB6 FF FF FF FF FF FF FF FF     
   5266 FFFC5BBE FF FF FF FF FF FF FF FF     
   5267 FFFC5BC6 FF FF FF FF FF FF FF FF     
   5268 FFFC5BCE FF FF FF FF FF FF FF FF     
   5269 FFFC5BD6 FF FF FF FF FF FF FF FF     
   5270 FFFC5BDE FF FF FF FF FF FF FF FF     
   5271 FFFC5BE6 FF FF FF FF FF FF FF FF     
   5272 FFFC5BEE FF FF FF FF FF FF FF FF     
   5273 FFFC5BF6 FF FF FF FF FF FF FF FF     
   5274 FFFC5BFE FF FF FF FF FF FF FF FF     
   5275 FFFC5C06 FF FF FF FF FF FF FF FF     
   5276 FFFC5C0E FF FF FF FF FF FF FF FF     
   5277 FFFC5C16 FF FF FF FF FF FF FF FF     
   5278 FFFC5C1E FF FF FF FF FF FF FF FF     
   5279 FFFC5C26 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 32
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5280 FFFC5C2E FF FF FF FF FF FF FF FF     
   5281 FFFC5C36 FF FF FF FF FF FF FF FF     
   5282 FFFC5C3E FF FF FF FF FF FF FF FF     
   5283 FFFC5C46 FF FF FF FF FF FF FF FF     
   5284 FFFC5C4E FF FF FF FF FF FF FF FF     
   5285 FFFC5C56 FF FF FF FF FF FF FF FF     
   5286 FFFC5C5E FF FF FF FF FF FF FF FF     
   5287 FFFC5C66 FF FF FF FF FF FF FF FF     
   5288 FFFC5C6E FF FF FF FF FF FF FF FF     
   5289 FFFC5C76 FF FF FF FF FF FF FF FF     
   5290 FFFC5C7E FF FF FF FF FF FF FF FF     
   5291 FFFC5C86 FF FF FF FF FF FF FF FF     
   5292 FFFC5C8E FF FF FF FF FF FF FF FF     
   5293 FFFC5C96 FF FF FF FF FF FF FF FF     
   5294 FFFC5C9E FF FF FF FF FF FF FF FF     
   5295 FFFC5CA6 FF FF FF FF FF FF FF FF     
   5296 FFFC5CAE FF FF FF FF FF FF FF FF     
   5297 FFFC5CB6 FF FF FF FF FF FF FF FF     
   5298 FFFC5CBE FF FF FF FF FF FF FF FF     
   5299 FFFC5CC6 FF FF FF FF FF FF FF FF     
   5300 FFFC5CCE FF FF FF FF FF FF FF FF     
   5301 FFFC5CD6 FF FF FF FF FF FF FF FF     
   5302 FFFC5CDE FF FF FF FF FF FF FF FF     
   5303 FFFC5CE6 FF FF FF FF FF FF FF FF     
   5304 FFFC5CEE FF FF FF FF FF FF FF FF     
   5305 FFFC5CF6 FF FF FF FF FF FF FF FF     
   5306 FFFC5CFE FF FF FF FF FF FF FF FF     
   5307 FFFC5D06 FF FF FF FF FF FF FF FF     
   5308 FFFC5D0E FF FF FF FF FF FF FF FF     
   5309 FFFC5D16 FF FF FF FF FF FF FF FF     
   5310 FFFC5D1E FF FF FF FF FF FF FF FF     
   5311 FFFC5D26 FF FF FF FF FF FF FF FF     
   5312 FFFC5D2E FF FF FF FF FF FF FF FF     
   5313 FFFC5D36 FF FF FF FF FF FF FF FF     
   5314 FFFC5D3E FF FF FF FF FF FF FF FF     
   5315 FFFC5D46 FF FF FF FF FF FF FF FF     
   5316 FFFC5D4E FF FF FF FF FF FF FF FF     
   5317 FFFC5D56 FF FF FF FF FF FF FF FF     
   5318 FFFC5D5E FF FF FF FF FF FF FF FF     
   5319 FFFC5D66 FF FF FF FF FF FF FF FF     
   5320 FFFC5D6E FF FF FF FF FF FF FF FF     
   5321 FFFC5D76 FF FF FF FF FF FF FF FF     
   5322 FFFC5D7E FF FF FF FF FF FF FF FF     
   5323 FFFC5D86 FF FF FF FF FF FF FF FF     
   5324 FFFC5D8E FF FF FF FF FF FF FF FF     
   5325 FFFC5D96 FF FF FF FF FF FF FF FF     
   5326 FFFC5D9E FF FF FF FF FF FF FF FF     
   5327 FFFC5DA6 FF FF FF FF FF FF FF FF     
   5328 FFFC5DAE FF FF FF FF FF FF FF FF     
   5329 FFFC5DB6 FF FF FF FF FF FF FF FF     
   5330 FFFC5DBE FF FF FF FF FF FF FF FF     
   5331 FFFC5DC6 FF FF FF FF FF FF FF FF     
   5332 FFFC5DCE FF FF FF FF FF FF FF FF     
   5333 FFFC5DD6 FF FF FF FF FF FF FF FF     
   5334 FFFC5DDE FF FF FF FF FF FF FF FF     
   5335 FFFC5DE6 FF FF FF FF FF FF FF FF     
   5336 FFFC5DEE FF FF FF FF FF FF FF FF     
   5337 FFFC5DF6 FF FF FF FF FF FF FF FF     
   5338 FFFC5DFE FF FF FF FF FF FF FF FF     
   5339 FFFC5E06 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 33
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5340 FFFC5E0E FF FF FF FF FF FF FF FF     
   5341 FFFC5E16 FF FF FF FF FF FF FF FF     
   5342 FFFC5E1E FF FF FF FF FF FF FF FF     
   5343 FFFC5E26 FF FF FF FF FF FF FF FF     
   5344 FFFC5E2E FF FF FF FF FF FF FF FF     
   5345 FFFC5E36 FF FF FF FF FF FF FF FF     
   5346 FFFC5E3E FF FF FF FF FF FF FF FF     
   5347 FFFC5E46 FF FF FF FF FF FF FF FF     
   5348 FFFC5E4E FF FF FF FF FF FF FF FF     
   5349 FFFC5E56 FF FF FF FF FF FF FF FF     
   5350 FFFC5E5E FF FF FF FF FF FF FF FF     
   5351 FFFC5E66 FF FF FF FF FF FF FF FF     
   5352 FFFC5E6E FF FF FF FF FF FF FF FF     
   5353 FFFC5E76 FF FF FF FF FF FF FF FF     
   5354 FFFC5E7E FF FF FF FF FF FF FF FF     
   5355 FFFC5E86 FF FF FF FF FF FF FF FF     
   5356 FFFC5E8E FF FF FF FF FF FF FF FF     
   5357 FFFC5E96 FF FF FF FF FF FF FF FF     
   5358 FFFC5E9E FF FF FF FF FF FF FF FF     
   5359 FFFC5EA6 FF FF FF FF FF FF FF FF     
   5360 FFFC5EAE FF FF FF FF FF FF FF FF     
   5361 FFFC5EB6 FF FF FF FF FF FF FF FF     
   5362 FFFC5EBE FF FF FF FF FF FF FF FF     
   5363 FFFC5EC6 FF FF FF FF FF FF FF FF     
   5364 FFFC5ECE FF FF FF FF FF FF FF FF     
   5365 FFFC5ED6 FF FF FF FF FF FF FF FF     
   5366 FFFC5EDE FF FF FF FF FF FF FF FF     
   5367 FFFC5EE6 FF FF FF FF FF FF FF FF     
   5368 FFFC5EEE FF FF FF FF FF FF FF FF     
   5369 FFFC5EF6 FF FF FF FF FF FF FF FF     
   5370 FFFC5EFE FF FF FF FF FF FF FF FF     
   5371 FFFC5F06 FF FF FF FF FF FF FF FF     
   5372 FFFC5F0E FF FF FF FF FF FF FF FF     
   5373 FFFC5F16 FF FF FF FF FF FF FF FF     
   5374 FFFC5F1E FF FF FF FF FF FF FF FF     
   5375 FFFC5F26 FF FF FF FF FF FF FF FF     
   5376 FFFC5F2E FF FF FF FF FF FF FF FF     
   5377 FFFC5F36 FF FF FF FF FF FF FF FF     
   5378 FFFC5F3E FF FF FF FF FF FF FF FF     
   5379 FFFC5F46 FF FF FF FF FF FF FF FF     
   5380 FFFC5F4E FF FF FF FF FF FF FF FF     
   5381 FFFC5F56 FF FF FF FF FF FF FF FF     
   5382 FFFC5F5E FF FF FF FF FF FF FF FF     
   5383 FFFC5F66 FF FF FF FF FF FF FF FF     
   5384 FFFC5F6E FF FF FF FF FF FF FF FF     
   5385 FFFC5F76 FF FF FF FF FF FF FF FF     
   5386 FFFC5F7E FF FF FF FF FF FF FF FF     
   5387 FFFC5F86 FF FF FF FF FF FF FF FF     
   5388 FFFC5F8E FF FF FF FF FF FF FF FF     
   5389 FFFC5F96 FF FF FF FF FF FF FF FF     
   5390 FFFC5F9E FF FF FF FF FF FF FF FF     
   5391 FFFC5FA6 FF FF FF FF FF FF FF FF     
   5392 FFFC5FAE FF FF FF FF FF FF FF FF     
   5393 FFFC5FB6 FF FF FF FF FF FF FF FF     
   5394 FFFC5FBE FF FF FF FF FF FF FF FF     
   5395 FFFC5FC6 FF FF FF FF FF FF FF FF     
   5396 FFFC5FCE FF FF FF FF FF FF FF FF     
   5397 FFFC5FD6 FF FF FF FF FF FF FF FF     
   5398 FFFC5FDE FF FF FF FF FF FF FF FF     
   5399 FFFC5FE6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 34
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5400 FFFC5FEE FF FF FF FF FF FF FF FF     
   5401 FFFC5FF6 FF FF FF FF FF FF FF FF     
   5402 FFFC5FFE FF FF FF FF FF FF FF FF     
   5403 FFFC6006 FF FF FF FF FF FF FF FF     
   5404 FFFC600E FF FF FF FF FF FF FF FF     
   5405 FFFC6016 FF FF FF FF FF FF FF FF     
   5406 FFFC601E FF FF FF FF FF FF FF FF     
   5407 FFFC6026 FF FF FF FF FF FF FF FF     
   5408 FFFC602E FF FF FF FF FF FF FF FF     
   5409 FFFC6036 FF FF FF FF FF FF FF FF     
   5410 FFFC603E FF FF FF FF FF FF FF FF     
   5411 FFFC6046 FF FF FF FF FF FF FF FF     
   5412 FFFC604E FF FF FF FF FF FF FF FF     
   5413 FFFC6056 FF FF FF FF FF FF FF FF     
   5414 FFFC605E FF FF FF FF FF FF FF FF     
   5415 FFFC6066 FF FF FF FF FF FF FF FF     
   5416 FFFC606E FF FF FF FF FF FF FF FF     
   5417 FFFC6076 FF FF FF FF FF FF FF FF     
   5418 FFFC607E FF FF FF FF FF FF FF FF     
   5419 FFFC6086 FF FF FF FF FF FF FF FF     
   5420 FFFC608E FF FF FF FF FF FF FF FF     
   5421 FFFC6096 FF FF FF FF FF FF FF FF     
   5422 FFFC609E FF FF FF FF FF FF FF FF     
   5423 FFFC60A6 FF FF FF FF FF FF FF FF     
   5424 FFFC60AE FF FF FF FF FF FF FF FF     
   5425 FFFC60B6 FF FF FF FF FF FF FF FF     
   5426 FFFC60BE FF FF FF FF FF FF FF FF     
   5427 FFFC60C6 FF FF FF FF FF FF FF FF     
   5428 FFFC60CE FF FF FF FF FF FF FF FF     
   5429 FFFC60D6 FF FF FF FF FF FF FF FF     
   5430 FFFC60DE FF FF FF FF FF FF FF FF     
   5431 FFFC60E6 FF FF FF FF FF FF FF FF     
   5432 FFFC60EE FF FF FF FF FF FF FF FF     
   5433 FFFC60F6 FF FF FF FF FF FF FF FF     
   5434 FFFC60FE FF FF FF FF FF FF FF FF     
   5435 FFFC6106 FF FF FF FF FF FF FF FF     
   5436 FFFC610E FF FF FF FF FF FF FF FF     
   5437 FFFC6116 FF FF FF FF FF FF FF FF     
   5438 FFFC611E FF FF FF FF FF FF FF FF     
   5439 FFFC6126 FF FF FF FF FF FF FF FF     
   5440 FFFC612E FF FF FF FF FF FF FF FF     
   5441 FFFC6136 FF FF FF FF FF FF FF FF     
   5442 FFFC613E FF FF FF FF FF FF FF FF     
   5443 FFFC6146 FF FF FF FF FF FF FF FF     
   5444 FFFC614E FF FF FF FF FF FF FF FF     
   5445 FFFC6156 FF FF FF FF FF FF FF FF     
   5446 FFFC615E FF FF FF FF FF FF FF FF     
   5447 FFFC6166 FF FF FF FF FF FF FF FF     
   5448 FFFC616E FF FF FF FF FF FF FF FF     
   5449 FFFC6176 FF FF FF FF FF FF FF FF     
   5450 FFFC617E FF FF FF FF FF FF FF FF     
   5451 FFFC6186 FF FF FF FF FF FF FF FF     
   5452 FFFC618E FF FF FF FF FF FF FF FF     
   5453 FFFC6196 FF FF FF FF FF FF FF FF     
   5454 FFFC619E FF FF FF FF FF FF FF FF     
   5455 FFFC61A6 FF FF FF FF FF FF FF FF     
   5456 FFFC61AE FF FF FF FF FF FF FF FF     
   5457 FFFC61B6 FF FF FF FF FF FF FF FF     
   5458 FFFC61BE FF FF FF FF FF FF FF FF     
   5459 FFFC61C6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 35
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5460 FFFC61CE FF FF FF FF FF FF FF FF     
   5461 FFFC61D6 FF FF FF FF FF FF FF FF     
   5462 FFFC61DE FF FF FF FF FF FF FF FF     
   5463 FFFC61E6 FF FF FF FF FF FF FF FF     
   5464 FFFC61EE FF FF FF FF FF FF FF FF     
   5465 FFFC61F6 FF FF FF FF FF FF FF FF     
   5466 FFFC61FE FF FF FF FF FF FF FF FF     
   5467 FFFC6206 FF FF FF FF FF FF FF FF     
   5468 FFFC620E FF FF FF FF FF FF FF FF     
   5469 FFFC6216 FF FF FF FF FF FF FF FF     
   5470 FFFC621E FF FF FF FF FF FF FF FF     
   5471 FFFC6226 FF FF FF FF FF FF FF FF     
   5472 FFFC622E FF FF FF FF FF FF FF FF     
   5473 FFFC6236 FF FF FF FF FF FF FF FF     
   5474 FFFC623E FF FF FF FF FF FF FF FF     
   5475 FFFC6246 FF FF FF FF FF FF FF FF     
   5476 FFFC624E FF FF FF FF FF FF FF FF     
   5477 FFFC6256 FF FF FF FF FF FF FF FF     
   5478 FFFC625E FF FF FF FF FF FF FF FF     
   5479 FFFC6266 FF FF FF FF FF FF FF FF     
   5480 FFFC626E FF FF FF FF FF FF FF FF     
   5481 FFFC6276 FF FF FF FF FF FF FF FF     
   5482 FFFC627E FF FF FF FF FF FF FF FF     
   5483 FFFC6286 FF FF FF FF FF FF FF FF     
   5484 FFFC628E FF FF FF FF FF FF FF FF     
   5485 FFFC6296 FF FF FF FF FF FF FF FF     
   5486 FFFC629E FF FF FF FF FF FF FF FF     
   5487 FFFC62A6 FF FF FF FF FF FF FF FF     
   5488 FFFC62AE FF FF FF FF FF FF FF FF     
   5489 FFFC62B6 FF FF FF FF FF FF FF FF     
   5490 FFFC62BE FF FF FF FF FF FF FF FF     
   5491 FFFC62C6 FF FF FF FF FF FF FF FF     
   5492 FFFC62CE FF FF FF FF FF FF FF FF     
   5493 FFFC62D6 FF FF FF FF FF FF FF FF     
   5494 FFFC62DE FF FF FF FF FF FF FF FF     
   5495 FFFC62E6 FF FF FF FF FF FF FF FF     
   5496 FFFC62EE FF FF FF FF FF FF FF FF     
   5497 FFFC62F6 FF FF FF FF FF FF FF FF     
   5498 FFFC62FE FF FF FF FF FF FF FF FF     
   5499 FFFC6306 FF FF FF FF FF FF FF FF     
   5500 FFFC630E FF FF FF FF FF FF FF FF     
   5501 FFFC6316 FF FF FF FF FF FF FF FF     
   5502 FFFC631E FF FF FF FF FF FF FF FF     
   5503 FFFC6326 FF FF FF FF FF FF FF FF     
   5504 FFFC632E FF FF FF FF FF FF FF FF     
   5505 FFFC6336 FF FF FF FF FF FF FF FF     
   5506 FFFC633E FF FF FF FF FF FF FF FF     
   5507 FFFC6346 FF FF FF FF FF FF FF FF     
   5508 FFFC634E FF FF FF FF FF FF FF FF     
   5509 FFFC6356 FF FF FF FF FF FF FF FF     
   5510 FFFC635E FF FF FF FF FF FF FF FF     
   5511 FFFC6366 FF FF FF FF FF FF FF FF     
   5512 FFFC636E FF FF FF FF FF FF FF FF     
   5513 FFFC6376 FF FF FF FF FF FF FF FF     
   5514 FFFC637E FF FF FF FF FF FF FF FF     
   5515 FFFC6386 FF FF FF FF FF FF FF FF     
   5516 FFFC638E FF FF FF FF FF FF FF FF     
   5517 FFFC6396 FF FF FF FF FF FF FF FF     
   5518 FFFC639E FF FF FF FF FF FF FF FF     
   5519 FFFC63A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 36
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5520 FFFC63AE FF FF FF FF FF FF FF FF     
   5521 FFFC63B6 FF FF FF FF FF FF FF FF     
   5522 FFFC63BE FF FF FF FF FF FF FF FF     
   5523 FFFC63C6 FF FF FF FF FF FF FF FF     
   5524 FFFC63CE FF FF FF FF FF FF FF FF     
   5525 FFFC63D6 FF FF FF FF FF FF FF FF     
   5526 FFFC63DE FF FF FF FF FF FF FF FF     
   5527 FFFC63E6 FF FF FF FF FF FF FF FF     
   5528 FFFC63EE FF FF FF FF FF FF FF FF     
   5529 FFFC63F6 FF FF FF FF FF FF FF FF     
   5530 FFFC63FE FF FF FF FF FF FF FF FF     
   5531 FFFC6406 FF FF FF FF FF FF FF FF     
   5532 FFFC640E FF FF FF FF FF FF FF FF     
   5533 FFFC6416 FF FF FF FF FF FF FF FF     
   5534 FFFC641E FF FF FF FF FF FF FF FF     
   5535 FFFC6426 FF FF FF FF FF FF FF FF     
   5536 FFFC642E FF FF FF FF FF FF FF FF     
   5537 FFFC6436 FF FF FF FF FF FF FF FF     
   5538 FFFC643E FF FF FF FF FF FF FF FF     
   5539 FFFC6446 FF FF FF FF FF FF FF FF     
   5540 FFFC644E FF FF FF FF FF FF FF FF     
   5541 FFFC6456 FF FF FF FF FF FF FF FF     
   5542 FFFC645E FF FF FF FF FF FF FF FF     
   5543 FFFC6466 FF FF FF FF FF FF FF FF     
   5544 FFFC646E FF FF FF FF FF FF FF FF     
   5545 FFFC6476 FF FF FF FF FF FF FF FF     
   5546 FFFC647E FF FF FF FF FF FF FF FF     
   5547 FFFC6486 FF FF FF FF FF FF FF FF     
   5548 FFFC648E FF FF FF FF FF FF FF FF     
   5549 FFFC6496 FF FF FF FF FF FF FF FF     
   5550 FFFC649E FF FF FF FF FF FF FF FF     
   5551 FFFC64A6 FF FF FF FF FF FF FF FF     
   5552 FFFC64AE FF FF FF FF FF FF FF FF     
   5553 FFFC64B6 FF FF FF FF FF FF FF FF     
   5554 FFFC64BE FF FF FF FF FF FF FF FF     
   5555 FFFC64C6 FF FF FF FF FF FF FF FF     
   5556 FFFC64CE FF FF FF FF FF FF FF FF     
   5557 FFFC64D6 FF FF FF FF FF FF FF FF     
   5558 FFFC64DE FF FF FF FF FF FF FF FF     
   5559 FFFC64E6 FF FF FF FF FF FF FF FF     
   5560 FFFC64EE FF FF FF FF FF FF FF FF     
   5561 FFFC64F6 FF FF FF FF FF FF FF FF     
   5562 FFFC64FE FF FF FF FF FF FF FF FF     
   5563 FFFC6506 FF FF FF FF FF FF FF FF     
   5564 FFFC650E FF FF FF FF FF FF FF FF     
   5565 FFFC6516 FF FF FF FF FF FF FF FF     
   5566 FFFC651E FF FF FF FF FF FF FF FF     
   5567 FFFC6526 FF FF FF FF FF FF FF FF     
   5568 FFFC652E FF FF FF FF FF FF FF FF     
   5569 FFFC6536 FF FF FF FF FF FF FF FF     
   5570 FFFC653E FF FF FF FF FF FF FF FF     
   5571 FFFC6546 FF FF FF FF FF FF FF FF     
   5572 FFFC654E FF FF FF FF FF FF FF FF     
   5573 FFFC6556 FF FF FF FF FF FF FF FF     
   5574 FFFC655E FF FF FF FF FF FF FF FF     
   5575 FFFC6566 FF FF FF FF FF FF FF FF     
   5576 FFFC656E FF FF FF FF FF FF FF FF     
   5577 FFFC6576 FF FF FF FF FF FF FF FF     
   5578 FFFC657E FF FF FF FF FF FF FF FF     
   5579 FFFC6586 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 37
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5580 FFFC658E FF FF FF FF FF FF FF FF     
   5581 FFFC6596 FF FF FF FF FF FF FF FF     
   5582 FFFC659E FF FF FF FF FF FF FF FF     
   5583 FFFC65A6 FF FF FF FF FF FF FF FF     
   5584 FFFC65AE FF FF FF FF FF FF FF FF     
   5585 FFFC65B6 FF FF FF FF FF FF FF FF     
   5586 FFFC65BE FF FF FF FF FF FF FF FF     
   5587 FFFC65C6 FF FF FF FF FF FF FF FF     
   5588 FFFC65CE FF FF FF FF FF FF FF FF     
   5589 FFFC65D6 FF FF FF FF FF FF FF FF     
   5590 FFFC65DE FF FF FF FF FF FF FF FF     
   5591 FFFC65E6 FF FF FF FF FF FF FF FF     
   5592 FFFC65EE FF FF FF FF FF FF FF FF     
   5593 FFFC65F6 FF FF FF FF FF FF FF FF     
   5594 FFFC65FE FF FF FF FF FF FF FF FF     
   5595 FFFC6606 FF FF FF FF FF FF FF FF     
   5596 FFFC660E FF FF FF FF FF FF FF FF     
   5597 FFFC6616 FF FF FF FF FF FF FF FF     
   5598 FFFC661E FF FF FF FF FF FF FF FF     
   5599 FFFC6626 FF FF FF FF FF FF FF FF     
   5600 FFFC662E FF FF FF FF FF FF FF FF     
   5601 FFFC6636 FF FF FF FF FF FF FF FF     
   5602 FFFC663E FF FF FF FF FF FF FF FF     
   5603 FFFC6646 FF FF FF FF FF FF FF FF     
   5604 FFFC664E FF FF FF FF FF FF FF FF     
   5605 FFFC6656 FF FF FF FF FF FF FF FF     
   5606 FFFC665E FF FF FF FF FF FF FF FF     
   5607 FFFC6666 FF FF FF FF FF FF FF FF     
   5608 FFFC666E FF FF FF FF FF FF FF FF     
   5609 FFFC6676 FF FF FF FF FF FF FF FF     
   5610 FFFC667E FF FF FF FF FF FF FF FF     
   5611 FFFC6686 FF FF FF FF FF FF FF FF     
   5612 FFFC668E FF FF FF FF FF FF FF FF     
   5613 FFFC6696 FF FF FF FF FF FF FF FF     
   5614 FFFC669E FF FF FF FF FF FF FF FF     
   5615 FFFC66A6 FF FF FF FF FF FF FF FF     
   5616 FFFC66AE FF FF FF FF FF FF FF FF     
   5617 FFFC66B6 FF FF FF FF FF FF FF FF     
   5618 FFFC66BE FF FF FF FF FF FF FF FF     
   5619 FFFC66C6 FF FF FF FF FF FF FF FF     
   5620 FFFC66CE FF FF FF FF FF FF FF FF     
   5621 FFFC66D6 FF FF FF FF FF FF FF FF     
   5622 FFFC66DE FF FF FF FF FF FF FF FF     
   5623 FFFC66E6 FF FF FF FF FF FF FF FF     
   5624 FFFC66EE FF FF FF FF FF FF FF FF     
   5625 FFFC66F6 FF FF FF FF FF FF FF FF     
   5626 FFFC66FE FF FF FF FF FF FF FF FF     
   5627 FFFC6706 FF FF FF FF FF FF FF FF     
   5628 FFFC670E FF FF FF FF FF FF FF FF     
   5629 FFFC6716 FF FF FF FF FF FF FF FF     
   5630 FFFC671E FF FF FF FF FF FF FF FF     
   5631 FFFC6726 FF FF FF FF FF FF FF FF     
   5632 FFFC672E FF FF FF FF FF FF FF FF     
   5633 FFFC6736 FF FF FF FF FF FF FF FF     
   5634 FFFC673E FF FF FF FF FF FF FF FF     
   5635 FFFC6746 FF FF FF FF FF FF FF FF     
   5636 FFFC674E FF FF FF FF FF FF FF FF     
   5637 FFFC6756 FF FF FF FF FF FF FF FF     
   5638 FFFC675E FF FF FF FF FF FF FF FF     
   5639 FFFC6766 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 38
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5640 FFFC676E FF FF FF FF FF FF FF FF     
   5641 FFFC6776 FF FF FF FF FF FF FF FF     
   5642 FFFC677E FF FF FF FF FF FF FF FF     
   5643 FFFC6786 FF FF FF FF FF FF FF FF     
   5644 FFFC678E FF FF FF FF FF FF FF FF     
   5645 FFFC6796 FF FF FF FF FF FF FF FF     
   5646 FFFC679E FF FF FF FF FF FF FF FF     
   5647 FFFC67A6 FF FF FF FF FF FF FF FF     
   5648 FFFC67AE FF FF FF FF FF FF FF FF     
   5649 FFFC67B6 FF FF FF FF FF FF FF FF     
   5650 FFFC67BE FF FF FF FF FF FF FF FF     
   5651 FFFC67C6 FF FF FF FF FF FF FF FF     
   5652 FFFC67CE FF FF FF FF FF FF FF FF     
   5653 FFFC67D6 FF FF FF FF FF FF FF FF     
   5654 FFFC67DE FF FF FF FF FF FF FF FF     
   5655 FFFC67E6 FF FF FF FF FF FF FF FF     
   5656 FFFC67EE FF FF FF FF FF FF FF FF     
   5657 FFFC67F6 FF FF FF FF FF FF FF FF     
   5658 FFFC67FE FF FF FF FF FF FF FF FF     
   5659 FFFC6806 FF FF FF FF FF FF FF FF     
   5660 FFFC680E FF FF FF FF FF FF FF FF     
   5661 FFFC6816 FF FF FF FF FF FF FF FF     
   5662 FFFC681E FF FF FF FF FF FF FF FF     
   5663 FFFC6826 FF FF FF FF FF FF FF FF     
   5664 FFFC682E FF FF FF FF FF FF FF FF     
   5665 FFFC6836 FF FF FF FF FF FF FF FF     
   5666 FFFC683E FF FF FF FF FF FF FF FF     
   5667 FFFC6846 FF FF FF FF FF FF FF FF     
   5668 FFFC684E FF FF FF FF FF FF FF FF     
   5669 FFFC6856 FF FF FF FF FF FF FF FF     
   5670 FFFC685E FF FF FF FF FF FF FF FF     
   5671 FFFC6866 FF FF FF FF FF FF FF FF     
   5672 FFFC686E FF FF FF FF FF FF FF FF     
   5673 FFFC6876 FF FF FF FF FF FF FF FF     
   5674 FFFC687E FF FF FF FF FF FF FF FF     
   5675 FFFC6886 FF FF FF FF FF FF FF FF     
   5676 FFFC688E FF FF FF FF FF FF FF FF     
   5677 FFFC6896 FF FF FF FF FF FF FF FF     
   5678 FFFC689E FF FF FF FF FF FF FF FF     
   5679 FFFC68A6 FF FF FF FF FF FF FF FF     
   5680 FFFC68AE FF FF FF FF FF FF FF FF     
   5681 FFFC68B6 FF FF FF FF FF FF FF FF     
   5682 FFFC68BE FF FF FF FF FF FF FF FF     
   5683 FFFC68C6 FF FF FF FF FF FF FF FF     
   5684 FFFC68CE FF FF FF FF FF FF FF FF     
   5685 FFFC68D6 FF FF FF FF FF FF FF FF     
   5686 FFFC68DE FF FF FF FF FF FF FF FF     
   5687 FFFC68E6 FF FF FF FF FF FF FF FF     
   5688 FFFC68EE FF FF FF FF FF FF FF FF     
   5689 FFFC68F6 FF FF FF FF FF FF FF FF     
   5690 FFFC68FE FF FF FF FF FF FF FF FF     
   5691 FFFC6906 FF FF FF FF FF FF FF FF     
   5692 FFFC690E FF FF FF FF FF FF FF FF     
   5693 FFFC6916 FF FF FF FF FF FF FF FF     
   5694 FFFC691E FF FF FF FF FF FF FF FF     
   5695 FFFC6926 FF FF FF FF FF FF FF FF     
   5696 FFFC692E FF FF FF FF FF FF FF FF     
   5697 FFFC6936 FF FF FF FF FF FF FF FF     
   5698 FFFC693E FF FF FF FF FF FF FF FF     
   5699 FFFC6946 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 39
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5700 FFFC694E FF FF FF FF FF FF FF FF     
   5701 FFFC6956 FF FF FF FF FF FF FF FF     
   5702 FFFC695E FF FF FF FF FF FF FF FF     
   5703 FFFC6966 FF FF FF FF FF FF FF FF     
   5704 FFFC696E FF FF FF FF FF FF FF FF     
   5705 FFFC6976 FF FF FF FF FF FF FF FF     
   5706 FFFC697E FF FF FF FF FF FF FF FF     
   5707 FFFC6986 FF FF FF FF FF FF FF FF     
   5708 FFFC698E FF FF FF FF FF FF FF FF     
   5709 FFFC6996 FF FF FF FF FF FF FF FF     
   5710 FFFC699E FF FF FF FF FF FF FF FF     
   5711 FFFC69A6 FF FF FF FF FF FF FF FF     
   5712 FFFC69AE FF FF FF FF FF FF FF FF     
   5713 FFFC69B6 FF FF FF FF FF FF FF FF     
   5714 FFFC69BE FF FF FF FF FF FF FF FF     
   5715 FFFC69C6 FF FF FF FF FF FF FF FF     
   5716 FFFC69CE FF FF FF FF FF FF FF FF     
   5717 FFFC69D6 FF FF FF FF FF FF FF FF     
   5718 FFFC69DE FF FF FF FF FF FF FF FF     
   5719 FFFC69E6 FF FF FF FF FF FF FF FF     
   5720 FFFC69EE FF FF FF FF FF FF FF FF     
   5721 FFFC69F6 FF FF FF FF FF FF FF FF     
   5722 FFFC69FE FF FF FF FF FF FF FF FF     
   5723 FFFC6A06 FF FF FF FF FF FF FF FF     
   5724 FFFC6A0E FF FF FF FF FF FF FF FF     
   5725 FFFC6A16 FF FF FF FF FF FF FF FF     
   5726 FFFC6A1E FF FF FF FF FF FF FF FF     
   5727 FFFC6A26 FF FF FF FF FF FF FF FF     
   5728 FFFC6A2E FF FF FF FF FF FF FF FF     
   5729 FFFC6A36 FF FF FF FF FF FF FF FF     
   5730 FFFC6A3E FF FF FF FF FF FF FF FF     
   5731 FFFC6A46 FF FF FF FF FF FF FF FF     
   5732 FFFC6A4E FF FF FF FF FF FF FF FF     
   5733 FFFC6A56 FF FF FF FF FF FF FF FF     
   5734 FFFC6A5E FF FF FF FF FF FF FF FF     
   5735 FFFC6A66 FF FF FF FF FF FF FF FF     
   5736 FFFC6A6E FF FF FF FF FF FF FF FF     
   5737 FFFC6A76 FF FF FF FF FF FF FF FF     
   5738 FFFC6A7E FF FF FF FF FF FF FF FF     
   5739 FFFC6A86 FF FF FF FF FF FF FF FF     
   5740 FFFC6A8E FF FF FF FF FF FF FF FF     
   5741 FFFC6A96 FF FF FF FF FF FF FF FF     
   5742 FFFC6A9E FF FF FF FF FF FF FF FF     
   5743 FFFC6AA6 FF FF FF FF FF FF FF FF     
   5744 FFFC6AAE FF FF FF FF FF FF FF FF     
   5745 FFFC6AB6 FF FF FF FF FF FF FF FF     
   5746 FFFC6ABE FF FF FF FF FF FF FF FF     
   5747 FFFC6AC6 FF FF FF FF FF FF FF FF     
   5748 FFFC6ACE FF FF FF FF FF FF FF FF     
   5749 FFFC6AD6 FF FF FF FF FF FF FF FF     
   5750 FFFC6ADE FF FF FF FF FF FF FF FF     
   5751 FFFC6AE6 FF FF FF FF FF FF FF FF     
   5752 FFFC6AEE FF FF FF FF FF FF FF FF     
   5753 FFFC6AF6 FF FF FF FF FF FF FF FF     
   5754 FFFC6AFE FF FF FF FF FF FF FF FF     
   5755 FFFC6B06 FF FF FF FF FF FF FF FF     
   5756 FFFC6B0E FF FF FF FF FF FF FF FF     
   5757 FFFC6B16 FF FF FF FF FF FF FF FF     
   5758 FFFC6B1E FF FF FF FF FF FF FF FF     
   5759 FFFC6B26 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 40
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5760 FFFC6B2E FF FF FF FF FF FF FF FF     
   5761 FFFC6B36 FF FF FF FF FF FF FF FF     
   5762 FFFC6B3E FF FF FF FF FF FF FF FF     
   5763 FFFC6B46 FF FF FF FF FF FF FF FF     
   5764 FFFC6B4E FF FF FF FF FF FF FF FF     
   5765 FFFC6B56 FF FF FF FF FF FF FF FF     
   5766 FFFC6B5E FF FF FF FF FF FF FF FF     
   5767 FFFC6B66 FF FF FF FF FF FF FF FF     
   5768 FFFC6B6E FF FF FF FF FF FF FF FF     
   5769 FFFC6B76 FF FF FF FF FF FF FF FF     
   5770 FFFC6B7E FF FF FF FF FF FF FF FF     
   5771 FFFC6B86 FF FF FF FF FF FF FF FF     
   5772 FFFC6B8E FF FF FF FF FF FF FF FF     
   5773 FFFC6B96 FF FF FF FF FF FF FF FF     
   5774 FFFC6B9E FF FF FF FF FF FF FF FF     
   5775 FFFC6BA6 FF FF FF FF FF FF FF FF     
   5776 FFFC6BAE FF FF FF FF FF FF FF FF     
   5777 FFFC6BB6 FF FF FF FF FF FF FF FF     
   5778 FFFC6BBE FF FF FF FF FF FF FF FF     
   5779 FFFC6BC6 FF FF FF FF FF FF FF FF     
   5780 FFFC6BCE FF FF FF FF FF FF FF FF     
   5781 FFFC6BD6 FF FF FF FF FF FF FF FF     
   5782 FFFC6BDE FF FF FF FF FF FF FF FF     
   5783 FFFC6BE6 FF FF FF FF FF FF FF FF     
   5784 FFFC6BEE FF FF FF FF FF FF FF FF     
   5785 FFFC6BF6 FF FF FF FF FF FF FF FF     
   5786 FFFC6BFE FF FF FF FF FF FF FF FF     
   5787 FFFC6C06 FF FF FF FF FF FF FF FF     
   5788 FFFC6C0E FF FF FF FF FF FF FF FF     
   5789 FFFC6C16 FF FF FF FF FF FF FF FF     
   5790 FFFC6C1E FF FF FF FF FF FF FF FF     
   5791 FFFC6C26 FF FF FF FF FF FF FF FF     
   5792 FFFC6C2E FF FF FF FF FF FF FF FF     
   5793 FFFC6C36 FF FF FF FF FF FF FF FF     
   5794 FFFC6C3E FF FF FF FF FF FF FF FF     
   5795 FFFC6C46 FF FF FF FF FF FF FF FF     
   5796 FFFC6C4E FF FF FF FF FF FF FF FF     
   5797 FFFC6C56 FF FF FF FF FF FF FF FF     
   5798 FFFC6C5E FF FF FF FF FF FF FF FF     
   5799 FFFC6C66 FF FF FF FF FF FF FF FF     
   5800 FFFC6C6E FF FF FF FF FF FF FF FF     
   5801 FFFC6C76 FF FF FF FF FF FF FF FF     
   5802 FFFC6C7E FF FF FF FF FF FF FF FF     
   5803 FFFC6C86 FF FF FF FF FF FF FF FF     
   5804 FFFC6C8E FF FF FF FF FF FF FF FF     
   5805 FFFC6C96 FF FF FF FF FF FF FF FF     
   5806 FFFC6C9E FF FF FF FF FF FF FF FF     
   5807 FFFC6CA6 FF FF FF FF FF FF FF FF     
   5808 FFFC6CAE FF FF FF FF FF FF FF FF     
   5809 FFFC6CB6 FF FF FF FF FF FF FF FF     
   5810 FFFC6CBE FF FF FF FF FF FF FF FF     
   5811 FFFC6CC6 FF FF FF FF FF FF FF FF     
   5812 FFFC6CCE FF FF FF FF FF FF FF FF     
   5813 FFFC6CD6 FF FF FF FF FF FF FF FF     
   5814 FFFC6CDE FF FF FF FF FF FF FF FF     
   5815 FFFC6CE6 FF FF FF FF FF FF FF FF     
   5816 FFFC6CEE FF FF FF FF FF FF FF FF     
   5817 FFFC6CF6 FF FF FF FF FF FF FF FF     
   5818 FFFC6CFE FF FF FF FF FF FF FF FF     
   5819 FFFC6D06 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 41
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5820 FFFC6D0E FF FF FF FF FF FF FF FF     
   5821 FFFC6D16 FF FF FF FF FF FF FF FF     
   5822 FFFC6D1E FF FF FF FF FF FF FF FF     
   5823 FFFC6D26 FF FF FF FF FF FF FF FF     
   5824 FFFC6D2E FF FF FF FF FF FF FF FF     
   5825 FFFC6D36 FF FF FF FF FF FF FF FF     
   5826 FFFC6D3E FF FF FF FF FF FF FF FF     
   5827 FFFC6D46 FF FF FF FF FF FF FF FF     
   5828 FFFC6D4E FF FF FF FF FF FF FF FF     
   5829 FFFC6D56 FF FF FF FF FF FF FF FF     
   5830 FFFC6D5E FF FF FF FF FF FF FF FF     
   5831 FFFC6D66 FF FF FF FF FF FF FF FF     
   5832 FFFC6D6E FF FF FF FF FF FF FF FF     
   5833 FFFC6D76 FF FF FF FF FF FF FF FF     
   5834 FFFC6D7E FF FF FF FF FF FF FF FF     
   5835 FFFC6D86 FF FF FF FF FF FF FF FF     
   5836 FFFC6D8E FF FF FF FF FF FF FF FF     
   5837 FFFC6D96 FF FF FF FF FF FF FF FF     
   5838 FFFC6D9E FF FF FF FF FF FF FF FF     
   5839 FFFC6DA6 FF FF FF FF FF FF FF FF     
   5840 FFFC6DAE FF FF FF FF FF FF FF FF     
   5841 FFFC6DB6 FF FF FF FF FF FF FF FF     
   5842 FFFC6DBE FF FF FF FF FF FF FF FF     
   5843 FFFC6DC6 FF FF FF FF FF FF FF FF     
   5844 FFFC6DCE FF FF FF FF FF FF FF FF     
   5845 FFFC6DD6 FF FF FF FF FF FF FF FF     
   5846 FFFC6DDE FF FF FF FF FF FF FF FF     
   5847 FFFC6DE6 FF FF FF FF FF FF FF FF     
   5848 FFFC6DEE FF FF FF FF FF FF FF FF     
   5849 FFFC6DF6 FF FF FF FF FF FF FF FF     
   5850 FFFC6DFE FF FF FF FF FF FF FF FF     
   5851 FFFC6E06 FF FF FF FF FF FF FF FF     
   5852 FFFC6E0E FF FF FF FF FF FF FF FF     
   5853 FFFC6E16 FF FF FF FF FF FF FF FF     
   5854 FFFC6E1E FF FF FF FF FF FF FF FF     
   5855 FFFC6E26 FF FF FF FF FF FF FF FF     
   5856 FFFC6E2E FF FF FF FF FF FF FF FF     
   5857 FFFC6E36 FF FF FF FF FF FF FF FF     
   5858 FFFC6E3E FF FF FF FF FF FF FF FF     
   5859 FFFC6E46 FF FF FF FF FF FF FF FF     
   5860 FFFC6E4E FF FF FF FF FF FF FF FF     
   5861 FFFC6E56 FF FF FF FF FF FF FF FF     
   5862 FFFC6E5E FF FF FF FF FF FF FF FF     
   5863 FFFC6E66 FF FF FF FF FF FF FF FF     
   5864 FFFC6E6E FF FF FF FF FF FF FF FF     
   5865 FFFC6E76 FF FF FF FF FF FF FF FF     
   5866 FFFC6E7E FF FF FF FF FF FF FF FF     
   5867 FFFC6E86 FF FF FF FF FF FF FF FF     
   5868 FFFC6E8E FF FF FF FF FF FF FF FF     
   5869 FFFC6E96 FF FF FF FF FF FF FF FF     
   5870 FFFC6E9E FF FF FF FF FF FF FF FF     
   5871 FFFC6EA6 FF FF FF FF FF FF FF FF     
   5872 FFFC6EAE FF FF FF FF FF FF FF FF     
   5873 FFFC6EB6 FF FF FF FF FF FF FF FF     
   5874 FFFC6EBE FF FF FF FF FF FF FF FF     
   5875 FFFC6EC6 FF FF FF FF FF FF FF FF     
   5876 FFFC6ECE FF FF FF FF FF FF FF FF     
   5877 FFFC6ED6 FF FF FF FF FF FF FF FF     
   5878 FFFC6EDE FF FF FF FF FF FF FF FF     
   5879 FFFC6EE6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 42
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5880 FFFC6EEE FF FF FF FF FF FF FF FF     
   5881 FFFC6EF6 FF FF FF FF FF FF FF FF     
   5882 FFFC6EFE FF FF FF FF FF FF FF FF     
   5883 FFFC6F06 FF FF FF FF FF FF FF FF     
   5884 FFFC6F0E FF FF FF FF FF FF FF FF     
   5885 FFFC6F16 FF FF FF FF FF FF FF FF     
   5886 FFFC6F1E FF FF FF FF FF FF FF FF     
   5887 FFFC6F26 FF FF FF FF FF FF FF FF     
   5888 FFFC6F2E FF FF FF FF FF FF FF FF     
   5889 FFFC6F36 FF FF FF FF FF FF FF FF     
   5890 FFFC6F3E FF FF FF FF FF FF FF FF     
   5891 FFFC6F46 FF FF FF FF FF FF FF FF     
   5892 FFFC6F4E FF FF FF FF FF FF FF FF     
   5893 FFFC6F56 FF FF FF FF FF FF FF FF     
   5894 FFFC6F5E FF FF FF FF FF FF FF FF     
   5895 FFFC6F66 FF FF FF FF FF FF FF FF     
   5896 FFFC6F6E FF FF FF FF FF FF FF FF     
   5897 FFFC6F76 FF FF FF FF FF FF FF FF     
   5898 FFFC6F7E FF FF FF FF FF FF FF FF     
   5899 FFFC6F86 FF FF FF FF FF FF FF FF     
   5900 FFFC6F8E FF FF FF FF FF FF FF FF     
   5901 FFFC6F96 FF FF FF FF FF FF FF FF     
   5902 FFFC6F9E FF FF FF FF FF FF FF FF     
   5903 FFFC6FA6 FF FF FF FF FF FF FF FF     
   5904 FFFC6FAE FF FF FF FF FF FF FF FF     
   5905 FFFC6FB6 FF FF FF FF FF FF FF FF     
   5906 FFFC6FBE FF FF FF FF FF FF FF FF     
   5907 FFFC6FC6 FF FF FF FF FF FF FF FF     
   5908 FFFC6FCE FF FF FF FF FF FF FF FF     
   5909 FFFC6FD6 FF FF FF FF FF FF FF FF     
   5910 FFFC6FDE FF FF FF FF FF FF FF FF     
   5911 FFFC6FE6 FF FF FF FF FF FF FF FF     
   5912 FFFC6FEE FF FF FF FF FF FF FF FF     
   5913 FFFC6FF6 FF FF FF FF FF FF FF FF     
   5914 FFFC6FFE FF FF FF FF FF FF FF FF     
   5915 FFFC7006 FF FF FF FF FF FF FF FF     
   5916 FFFC700E FF FF FF FF FF FF FF FF     
   5917 FFFC7016 FF FF FF FF FF FF FF FF     
   5918 FFFC701E FF FF FF FF FF FF FF FF     
   5919 FFFC7026 FF FF FF FF FF FF FF FF     
   5920 FFFC702E FF FF FF FF FF FF FF FF     
   5921 FFFC7036 FF FF FF FF FF FF FF FF     
   5922 FFFC703E FF FF FF FF FF FF FF FF     
   5923 FFFC7046 FF FF FF FF FF FF FF FF     
   5924 FFFC704E FF FF FF FF FF FF FF FF     
   5925 FFFC7056 FF FF FF FF FF FF FF FF     
   5926 FFFC705E FF FF FF FF FF FF FF FF     
   5927 FFFC7066 FF FF FF FF FF FF FF FF     
   5928 FFFC706E FF FF FF FF FF FF FF FF     
   5929 FFFC7076 FF FF FF FF FF FF FF FF     
   5930 FFFC707E FF FF FF FF FF FF FF FF     
   5931 FFFC7086 FF FF FF FF FF FF FF FF     
   5932 FFFC708E FF FF FF FF FF FF FF FF     
   5933 FFFC7096 FF FF FF FF FF FF FF FF     
   5934 FFFC709E FF FF FF FF FF FF FF FF     
   5935 FFFC70A6 FF FF FF FF FF FF FF FF     
   5936 FFFC70AE FF FF FF FF FF FF FF FF     
   5937 FFFC70B6 FF FF FF FF FF FF FF FF     
   5938 FFFC70BE FF FF FF FF FF FF FF FF     
   5939 FFFC70C6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 43
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5940 FFFC70CE FF FF FF FF FF FF FF FF     
   5941 FFFC70D6 FF FF FF FF FF FF FF FF     
   5942 FFFC70DE FF FF FF FF FF FF FF FF     
   5943 FFFC70E6 FF FF FF FF FF FF FF FF     
   5944 FFFC70EE FF FF FF FF FF FF FF FF     
   5945 FFFC70F6 FF FF FF FF FF FF FF FF     
   5946 FFFC70FE FF FF FF FF FF FF FF FF     
   5947 FFFC7106 FF FF FF FF FF FF FF FF     
   5948 FFFC710E FF FF FF FF FF FF FF FF     
   5949 FFFC7116 FF FF FF FF FF FF FF FF     
   5950 FFFC711E FF FF FF FF FF FF FF FF     
   5951 FFFC7126 FF FF FF FF FF FF FF FF     
   5952 FFFC712E FF FF FF FF FF FF FF FF     
   5953 FFFC7136 FF FF FF FF FF FF FF FF     
   5954 FFFC713E FF FF FF FF FF FF FF FF     
   5955 FFFC7146 FF FF FF FF FF FF FF FF     
   5956 FFFC714E FF FF FF FF FF FF FF FF     
   5957 FFFC7156 FF FF FF FF FF FF FF FF     
   5958 FFFC715E FF FF FF FF FF FF FF FF     
   5959 FFFC7166 FF FF FF FF FF FF FF FF     
   5960 FFFC716E FF FF FF FF FF FF FF FF     
   5961 FFFC7176 FF FF FF FF FF FF FF FF     
   5962 FFFC717E FF FF FF FF FF FF FF FF     
   5963 FFFC7186 FF FF FF FF FF FF FF FF     
   5964 FFFC718E FF FF FF FF FF FF FF FF     
   5965 FFFC7196 FF FF FF FF FF FF FF FF     
   5966 FFFC719E FF FF FF FF FF FF FF FF     
   5967 FFFC71A6 FF FF FF FF FF FF FF FF     
   5968 FFFC71AE FF FF FF FF FF FF FF FF     
   5969 FFFC71B6 FF FF FF FF FF FF FF FF     
   5970 FFFC71BE FF FF FF FF FF FF FF FF     
   5971 FFFC71C6 FF FF FF FF FF FF FF FF     
   5972 FFFC71CE FF FF FF FF FF FF FF FF     
   5973 FFFC71D6 FF FF FF FF FF FF FF FF     
   5974 FFFC71DE FF FF FF FF FF FF FF FF     
   5975 FFFC71E6 FF FF FF FF FF FF FF FF     
   5976 FFFC71EE FF FF FF FF FF FF FF FF     
   5977 FFFC71F6 FF FF FF FF FF FF FF FF     
   5978 FFFC71FE FF FF FF FF FF FF FF FF     
   5979 FFFC7206 FF FF FF FF FF FF FF FF     
   5980 FFFC720E FF FF FF FF FF FF FF FF     
   5981 FFFC7216 FF FF FF FF FF FF FF FF     
   5982 FFFC721E FF FF FF FF FF FF FF FF     
   5983 FFFC7226 FF FF FF FF FF FF FF FF     
   5984 FFFC722E FF FF FF FF FF FF FF FF     
   5985 FFFC7236 FF FF FF FF FF FF FF FF     
   5986 FFFC723E FF FF FF FF FF FF FF FF     
   5987 FFFC7246 FF FF FF FF FF FF FF FF     
   5988 FFFC724E FF FF FF FF FF FF FF FF     
   5989 FFFC7256 FF FF FF FF FF FF FF FF     
   5990 FFFC725E FF FF FF FF FF FF FF FF     
   5991 FFFC7266 FF FF FF FF FF FF FF FF     
   5992 FFFC726E FF FF FF FF FF FF FF FF     
   5993 FFFC7276 FF FF FF FF FF FF FF FF     
   5994 FFFC727E FF FF FF FF FF FF FF FF     
   5995 FFFC7286 FF FF FF FF FF FF FF FF     
   5996 FFFC728E FF FF FF FF FF FF FF FF     
   5997 FFFC7296 FF FF FF FF FF FF FF FF     
   5998 FFFC729E FF FF FF FF FF FF FF FF     
   5999 FFFC72A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 44
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6000 FFFC72AE FF FF FF FF FF FF FF FF     
   6001 FFFC72B6 FF FF FF FF FF FF FF FF     
   6002 FFFC72BE FF FF FF FF FF FF FF FF     
   6003 FFFC72C6 FF FF FF FF FF FF FF FF     
   6004 FFFC72CE FF FF FF FF FF FF FF FF     
   6005 FFFC72D6 FF FF FF FF FF FF FF FF     
   6006 FFFC72DE FF FF FF FF FF FF FF FF     
   6007 FFFC72E6 FF FF FF FF FF FF FF FF     
   6008 FFFC72EE FF FF FF FF FF FF FF FF     
   6009 FFFC72F6 FF FF FF FF FF FF FF FF     
   6010 FFFC72FE FF FF FF FF FF FF FF FF     
   6011 FFFC7306 FF FF FF FF FF FF FF FF     
   6012 FFFC730E FF FF FF FF FF FF FF FF     
   6013 FFFC7316 FF FF FF FF FF FF FF FF     
   6014 FFFC731E FF FF FF FF FF FF FF FF     
   6015 FFFC7326 FF FF FF FF FF FF FF FF     
   6016 FFFC732E FF FF FF FF FF FF FF FF     
   6017 FFFC7336 FF FF FF FF FF FF FF FF     
   6018 FFFC733E FF FF FF FF FF FF FF FF     
   6019 FFFC7346 FF FF FF FF FF FF FF FF     
   6020 FFFC734E FF FF FF FF FF FF FF FF     
   6021 FFFC7356 FF FF FF FF FF FF FF FF     
   6022 FFFC735E FF FF FF FF FF FF FF FF     
   6023 FFFC7366 FF FF FF FF FF FF FF FF     
   6024 FFFC736E FF FF FF FF FF FF FF FF     
   6025 FFFC7376 FF FF FF FF FF FF FF FF     
   6026 FFFC737E FF FF FF FF FF FF FF FF     
   6027 FFFC7386 FF FF FF FF FF FF FF FF     
   6028 FFFC738E FF FF FF FF FF FF FF FF     
   6029 FFFC7396 FF FF FF FF FF FF FF FF     
   6030 FFFC739E FF FF FF FF FF FF FF FF     
   6031 FFFC73A6 FF FF FF FF FF FF FF FF     
   6032 FFFC73AE FF FF FF FF FF FF FF FF     
   6033 FFFC73B6 FF FF FF FF FF FF FF FF     
   6034 FFFC73BE FF FF FF FF FF FF FF FF     
   6035 FFFC73C6 FF FF FF FF FF FF FF FF     
   6036 FFFC73CE FF FF FF FF FF FF FF FF     
   6037 FFFC73D6 FF FF FF FF FF FF FF FF     
   6038 FFFC73DE FF FF FF FF FF FF FF FF     
   6039 FFFC73E6 FF FF FF FF FF FF FF FF     
   6040 FFFC73EE FF FF FF FF FF FF FF FF     
   6041 FFFC73F6 FF FF FF FF FF FF FF FF     
   6042 FFFC73FE FF FF FF FF FF FF FF FF     
   6043 FFFC7406 FF FF FF FF FF FF FF FF     
   6044 FFFC740E FF FF FF FF FF FF FF FF     
   6045 FFFC7416 FF FF FF FF FF FF FF FF     
   6046 FFFC741E FF FF FF FF FF FF FF FF     
   6047 FFFC7426 FF FF FF FF FF FF FF FF     
   6048 FFFC742E FF FF FF FF FF FF FF FF     
   6049 FFFC7436 FF FF FF FF FF FF FF FF     
   6050 FFFC743E FF FF FF FF FF FF FF FF     
   6051 FFFC7446 FF FF FF FF FF FF FF FF     
   6052 FFFC744E FF FF FF FF FF FF FF FF     
   6053 FFFC7456 FF FF FF FF FF FF FF FF     
   6054 FFFC745E FF FF FF FF FF FF FF FF     
   6055 FFFC7466 FF FF FF FF FF FF FF FF     
   6056 FFFC746E FF FF FF FF FF FF FF FF     
   6057 FFFC7476 FF FF FF FF FF FF FF FF     
   6058 FFFC747E FF FF FF FF FF FF FF FF     
   6059 FFFC7486 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 45
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6060 FFFC748E FF FF FF FF FF FF FF FF     
   6061 FFFC7496 FF FF FF FF FF FF FF FF     
   6062 FFFC749E FF FF FF FF FF FF FF FF     
   6063 FFFC74A6 FF FF FF FF FF FF FF FF     
   6064 FFFC74AE FF FF FF FF FF FF FF FF     
   6065 FFFC74B6 FF FF FF FF FF FF FF FF     
   6066 FFFC74BE FF FF FF FF FF FF FF FF     
   6067 FFFC74C6 FF FF FF FF FF FF FF FF     
   6068 FFFC74CE FF FF FF FF FF FF FF FF     
   6069 FFFC74D6 FF FF FF FF FF FF FF FF     
   6070 FFFC74DE FF FF FF FF FF FF FF FF     
   6071 FFFC74E6 FF FF FF FF FF FF FF FF     
   6072 FFFC74EE FF FF FF FF FF FF FF FF     
   6073 FFFC74F6 FF FF FF FF FF FF FF FF     
   6074 FFFC74FE FF FF FF FF FF FF FF FF     
   6075 FFFC7506 FF FF FF FF FF FF FF FF     
   6076 FFFC750E FF FF FF FF FF FF FF FF     
   6077 FFFC7516 FF FF FF FF FF FF FF FF     
   6078 FFFC751E FF FF FF FF FF FF FF FF     
   6079 FFFC7526 FF FF FF FF FF FF FF FF     
   6080 FFFC752E FF FF FF FF FF FF FF FF     
   6081 FFFC7536 FF FF FF FF FF FF FF FF     
   6082 FFFC753E FF FF FF FF FF FF FF FF     
   6083 FFFC7546 FF FF FF FF FF FF FF FF     
   6084 FFFC754E FF FF FF FF FF FF FF FF     
   6085 FFFC7556 FF FF FF FF FF FF FF FF     
   6086 FFFC755E FF FF FF FF FF FF FF FF     
   6087 FFFC7566 FF FF FF FF FF FF FF FF     
   6088 FFFC756E FF FF FF FF FF FF FF FF     
   6089 FFFC7576 FF FF FF FF FF FF FF FF     
   6090 FFFC757E FF FF FF FF FF FF FF FF     
   6091 FFFC7586 FF FF FF FF FF FF FF FF     
   6092 FFFC758E FF FF FF FF FF FF FF FF     
   6093 FFFC7596 FF FF FF FF FF FF FF FF     
   6094 FFFC759E FF FF FF FF FF FF FF FF     
   6095 FFFC75A6 FF FF FF FF FF FF FF FF     
   6096 FFFC75AE FF FF FF FF FF FF FF FF     
   6097 FFFC75B6 FF FF FF FF FF FF FF FF     
   6098 FFFC75BE FF FF FF FF FF FF FF FF     
   6099 FFFC75C6 FF FF FF FF FF FF FF FF     
   6100 FFFC75CE FF FF FF FF FF FF FF FF     
   6101 FFFC75D6 FF FF FF FF FF FF FF FF     
   6102 FFFC75DE FF FF FF FF FF FF FF FF     
   6103 FFFC75E6 FF FF FF FF FF FF FF FF     
   6104 FFFC75EE FF FF FF FF FF FF FF FF     
   6105 FFFC75F6 FF FF FF FF FF FF FF FF     
   6106 FFFC75FE FF FF FF FF FF FF FF FF     
   6107 FFFC7606 FF FF FF FF FF FF FF FF     
   6108 FFFC760E FF FF FF FF FF FF FF FF     
   6109 FFFC7616 FF FF FF FF FF FF FF FF     
   6110 FFFC761E FF FF FF FF FF FF FF FF     
   6111 FFFC7626 FF FF FF FF FF FF FF FF     
   6112 FFFC762E FF FF FF FF FF FF FF FF     
   6113 FFFC7636 FF FF FF FF FF FF FF FF     
   6114 FFFC763E FF FF FF FF FF FF FF FF     
   6115 FFFC7646 FF FF FF FF FF FF FF FF     
   6116 FFFC764E FF FF FF FF FF FF FF FF     
   6117 FFFC7656 FF FF FF FF FF FF FF FF     
   6118 FFFC765E FF FF FF FF FF FF FF FF     
   6119 FFFC7666 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 46
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6120 FFFC766E FF FF FF FF FF FF FF FF     
   6121 FFFC7676 FF FF FF FF FF FF FF FF     
   6122 FFFC767E FF FF FF FF FF FF FF FF     
   6123 FFFC7686 FF FF FF FF FF FF FF FF     
   6124 FFFC768E FF FF FF FF FF FF FF FF     
   6125 FFFC7696 FF FF FF FF FF FF FF FF     
   6126 FFFC769E FF FF FF FF FF FF FF FF     
   6127 FFFC76A6 FF FF FF FF FF FF FF FF     
   6128 FFFC76AE FF FF FF FF FF FF FF FF     
   6129 FFFC76B6 FF FF FF FF FF FF FF FF     
   6130 FFFC76BE FF FF FF FF FF FF FF FF     
   6131 FFFC76C6 FF FF FF FF FF FF FF FF     
   6132 FFFC76CE FF FF FF FF FF FF FF FF     
   6133 FFFC76D6 FF FF FF FF FF FF FF FF     
   6134 FFFC76DE FF FF FF FF FF FF FF FF     
   6135 FFFC76E6 FF FF FF FF FF FF FF FF     
   6136 FFFC76EE FF FF FF FF FF FF FF FF     
   6137 FFFC76F6 FF FF FF FF FF FF FF FF     
   6138 FFFC76FE FF FF FF FF FF FF FF FF     
   6139 FFFC7706 FF FF FF FF FF FF FF FF     
   6140 FFFC770E FF FF FF FF FF FF FF FF     
   6141 FFFC7716 FF FF FF FF FF FF FF FF     
   6142 FFFC771E FF FF FF FF FF FF FF FF     
   6143 FFFC7726 FF FF FF FF FF FF FF FF     
   6144 FFFC772E FF FF FF FF FF FF FF FF     
   6145 FFFC7736 FF FF FF FF FF FF FF FF     
   6146 FFFC773E FF FF FF FF FF FF FF FF     
   6147 FFFC7746 FF FF FF FF FF FF FF FF     
   6148 FFFC774E FF FF FF FF FF FF FF FF     
   6149 FFFC7756 FF FF FF FF FF FF FF FF     
   6150 FFFC775E FF FF FF FF FF FF FF FF     
   6151 FFFC7766 FF FF FF FF FF FF FF FF     
   6152 FFFC776E FF FF FF FF FF FF FF FF     
   6153 FFFC7776 FF FF FF FF FF FF FF FF     
   6154 FFFC777E FF FF FF FF FF FF FF FF     
   6155 FFFC7786 FF FF FF FF FF FF FF FF     
   6156 FFFC778E FF FF FF FF FF FF FF FF     
   6157 FFFC7796 FF FF FF FF FF FF FF FF     
   6158 FFFC779E FF FF FF FF FF FF FF FF     
   6159 FFFC77A6 FF FF FF FF FF FF FF FF     
   6160 FFFC77AE FF FF FF FF FF FF FF FF     
   6161 FFFC77B6 FF FF FF FF FF FF FF FF     
   6162 FFFC77BE FF FF FF FF FF FF FF FF     
   6163 FFFC77C6 FF FF FF FF FF FF FF FF     
   6164 FFFC77CE FF FF FF FF FF FF FF FF     
   6165 FFFC77D6 FF FF FF FF FF FF FF FF     
   6166 FFFC77DE FF FF FF FF FF FF FF FF     
   6167 FFFC77E6 FF FF FF FF FF FF FF FF     
   6168 FFFC77EE FF FF FF FF FF FF FF FF     
   6169 FFFC77F6 FF FF FF FF FF FF FF FF     
   6170 FFFC77FE FF FF FF FF FF FF FF FF     
   6171 FFFC7806 FF FF FF FF FF FF FF FF     
   6172 FFFC780E FF FF FF FF FF FF FF FF     
   6173 FFFC7816 FF FF FF FF FF FF FF FF     
   6174 FFFC781E FF FF FF FF FF FF FF FF     
   6175 FFFC7826 FF FF FF FF FF FF FF FF     
   6176 FFFC782E FF FF FF FF FF FF FF FF     
   6177 FFFC7836 FF FF FF FF FF FF FF FF     
   6178 FFFC783E FF FF FF FF FF FF FF FF     
   6179 FFFC7846 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 47
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6180 FFFC784E FF FF FF FF FF FF FF FF     
   6181 FFFC7856 FF FF FF FF FF FF FF FF     
   6182 FFFC785E FF FF FF FF FF FF FF FF     
   6183 FFFC7866 FF FF FF FF FF FF FF FF     
   6184 FFFC786E FF FF FF FF FF FF FF FF     
   6185 FFFC7876 FF FF FF FF FF FF FF FF     
   6186 FFFC787E FF FF FF FF FF FF FF FF     
   6187 FFFC7886 FF FF FF FF FF FF FF FF     
   6188 FFFC788E FF FF FF FF FF FF FF FF     
   6189 FFFC7896 FF FF FF FF FF FF FF FF     
   6190 FFFC789E FF FF FF FF FF FF FF FF     
   6191 FFFC78A6 FF FF FF FF FF FF FF FF     
   6192 FFFC78AE FF FF FF FF FF FF FF FF     
   6193 FFFC78B6 FF FF FF FF FF FF FF FF     
   6194 FFFC78BE FF FF FF FF FF FF FF FF     
   6195 FFFC78C6 FF FF FF FF FF FF FF FF     
   6196 FFFC78CE FF FF FF FF FF FF FF FF     
   6197 FFFC78D6 FF FF FF FF FF FF FF FF     
   6198 FFFC78DE FF FF FF FF FF FF FF FF     
   6199 FFFC78E6 FF FF FF FF FF FF FF FF     
   6200 FFFC78EE FF FF FF FF FF FF FF FF     
   6201 FFFC78F6 FF FF FF FF FF FF FF FF     
   6202 FFFC78FE FF FF FF FF FF FF FF FF     
   6203 FFFC7906 FF FF FF FF FF FF FF FF     
   6204 FFFC790E FF FF FF FF FF FF FF FF     
   6205 FFFC7916 FF FF FF FF FF FF FF FF     
   6206 FFFC791E FF FF FF FF FF FF FF FF     
   6207 FFFC7926 FF FF FF FF FF FF FF FF     
   6208 FFFC792E FF FF FF FF FF FF FF FF     
   6209 FFFC7936 FF FF FF FF FF FF FF FF     
   6210 FFFC793E FF FF FF FF FF FF FF FF     
   6211 FFFC7946 FF FF FF FF FF FF FF FF     
   6212 FFFC794E FF FF FF FF FF FF FF FF     
   6213 FFFC7956 FF FF FF FF FF FF FF FF     
   6214 FFFC795E FF FF FF FF FF FF FF FF     
   6215 FFFC7966 FF FF FF FF FF FF FF FF     
   6216 FFFC796E FF FF FF FF FF FF FF FF     
   6217 FFFC7976 FF FF FF FF FF FF FF FF     
   6218 FFFC797E FF FF FF FF FF FF FF FF     
   6219 FFFC7986 FF FF FF FF FF FF FF FF     
   6220 FFFC798E FF FF FF FF FF FF FF FF     
   6221 FFFC7996 FF FF FF FF FF FF FF FF     
   6222 FFFC799E FF FF FF FF FF FF FF FF     
   6223 FFFC79A6 FF FF FF FF FF FF FF FF     
   6224 FFFC79AE FF FF FF FF FF FF FF FF     
   6225 FFFC79B6 FF FF FF FF FF FF FF FF     
   6226 FFFC79BE FF FF FF FF FF FF FF FF     
   6227 FFFC79C6 FF FF FF FF FF FF FF FF     
   6228 FFFC79CE FF FF FF FF FF FF FF FF     
   6229 FFFC79D6 FF FF FF FF FF FF FF FF     
   6230 FFFC79DE FF FF FF FF FF FF FF FF     
   6231 FFFC79E6 FF FF FF FF FF FF FF FF     
   6232 FFFC79EE FF FF FF FF FF FF FF FF     
   6233 FFFC79F6 FF FF FF FF FF FF FF FF     
   6234 FFFC79FE FF FF FF FF FF FF FF FF     
   6235 FFFC7A06 FF FF FF FF FF FF FF FF     
   6236 FFFC7A0E FF FF FF FF FF FF FF FF     
   6237 FFFC7A16 FF FF FF FF FF FF FF FF     
   6238 FFFC7A1E FF FF FF FF FF FF FF FF     
   6239 FFFC7A26 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 48
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6240 FFFC7A2E FF FF FF FF FF FF FF FF     
   6241 FFFC7A36 FF FF FF FF FF FF FF FF     
   6242 FFFC7A3E FF FF FF FF FF FF FF FF     
   6243 FFFC7A46 FF FF FF FF FF FF FF FF     
   6244 FFFC7A4E FF FF FF FF FF FF FF FF     
   6245 FFFC7A56 FF FF FF FF FF FF FF FF     
   6246 FFFC7A5E FF FF FF FF FF FF FF FF     
   6247 FFFC7A66 FF FF FF FF FF FF FF FF     
   6248 FFFC7A6E FF FF FF FF FF FF FF FF     
   6249 FFFC7A76 FF FF FF FF FF FF FF FF     
   6250 FFFC7A7E FF FF FF FF FF FF FF FF     
   6251 FFFC7A86 FF FF FF FF FF FF FF FF     
   6252 FFFC7A8E FF FF FF FF FF FF FF FF     
   6253 FFFC7A96 FF FF FF FF FF FF FF FF     
   6254 FFFC7A9E FF FF FF FF FF FF FF FF     
   6255 FFFC7AA6 FF FF FF FF FF FF FF FF     
   6256 FFFC7AAE FF FF FF FF FF FF FF FF     
   6257 FFFC7AB6 FF FF FF FF FF FF FF FF     
   6258 FFFC7ABE FF FF FF FF FF FF FF FF     
   6259 FFFC7AC6 FF FF FF FF FF FF FF FF     
   6260 FFFC7ACE FF FF FF FF FF FF FF FF     
   6261 FFFC7AD6 FF FF FF FF FF FF FF FF     
   6262 FFFC7ADE FF FF FF FF FF FF FF FF     
   6263 FFFC7AE6 FF FF FF FF FF FF FF FF     
   6264 FFFC7AEE FF FF FF FF FF FF FF FF     
   6265 FFFC7AF6 FF FF FF FF FF FF FF FF     
   6266 FFFC7AFE FF FF FF FF FF FF FF FF     
   6267 FFFC7B06 FF FF FF FF FF FF FF FF     
   6268 FFFC7B0E FF FF FF FF FF FF FF FF     
   6269 FFFC7B16 FF FF FF FF FF FF FF FF     
   6270 FFFC7B1E FF FF FF FF FF FF FF FF     
   6271 FFFC7B26 FF FF FF FF FF FF FF FF     
   6272 FFFC7B2E FF FF FF FF FF FF FF FF     
   6273 FFFC7B36 FF FF FF FF FF FF FF FF     
   6274 FFFC7B3E FF FF FF FF FF FF FF FF     
   6275 FFFC7B46 FF FF FF FF FF FF FF FF     
   6276 FFFC7B4E FF FF FF FF FF FF FF FF     
   6277 FFFC7B56 FF FF FF FF FF FF FF FF     
   6278 FFFC7B5E FF FF FF FF FF FF FF FF     
   6279 FFFC7B66 FF FF FF FF FF FF FF FF     
   6280 FFFC7B6E FF FF FF FF FF FF FF FF     
   6281 FFFC7B76 FF FF FF FF FF FF FF FF     
   6282 FFFC7B7E FF FF FF FF FF FF FF FF     
   6283 FFFC7B86 FF FF FF FF FF FF FF FF     
   6284 FFFC7B8E FF FF FF FF FF FF FF FF     
   6285 FFFC7B96 FF FF FF FF FF FF FF FF     
   6286 FFFC7B9E FF FF FF FF FF FF FF FF     
   6287 FFFC7BA6 FF FF FF FF FF FF FF FF     
   6288 FFFC7BAE FF FF FF FF FF FF FF FF     
   6289 FFFC7BB6 FF FF FF FF FF FF FF FF     
   6290 FFFC7BBE FF FF FF FF FF FF FF FF     
   6291 FFFC7BC6 FF FF FF FF FF FF FF FF     
   6292 FFFC7BCE FF FF FF FF FF FF FF FF     
   6293 FFFC7BD6 FF FF FF FF FF FF FF FF     
   6294 FFFC7BDE FF FF FF FF FF FF FF FF     
   6295 FFFC7BE6 FF FF FF FF FF FF FF FF     
   6296 FFFC7BEE FF FF FF FF FF FF FF FF     
   6297 FFFC7BF6 FF FF FF FF FF FF FF FF     
   6298 FFFC7BFE FF FF FF FF FF FF FF FF     
   6299 FFFC7C06 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 49
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6300 FFFC7C0E FF FF FF FF FF FF FF FF     
   6301 FFFC7C16 FF FF FF FF FF FF FF FF     
   6302 FFFC7C1E FF FF FF FF FF FF FF FF     
   6303 FFFC7C26 FF FF FF FF FF FF FF FF     
   6304 FFFC7C2E FF FF FF FF FF FF FF FF     
   6305 FFFC7C36 FF FF FF FF FF FF FF FF     
   6306 FFFC7C3E FF FF FF FF FF FF FF FF     
   6307 FFFC7C46 FF FF FF FF FF FF FF FF     
   6308 FFFC7C4E FF FF FF FF FF FF FF FF     
   6309 FFFC7C56 FF FF FF FF FF FF FF FF     
   6310 FFFC7C5E FF FF FF FF FF FF FF FF     
   6311 FFFC7C66 FF FF FF FF FF FF FF FF     
   6312 FFFC7C6E FF FF FF FF FF FF FF FF     
   6313 FFFC7C76 FF FF FF FF FF FF FF FF     
   6314 FFFC7C7E FF FF FF FF FF FF FF FF     
   6315 FFFC7C86 FF FF FF FF FF FF FF FF     
   6316 FFFC7C8E FF FF FF FF FF FF FF FF     
   6317 FFFC7C96 FF FF FF FF FF FF FF FF     
   6318 FFFC7C9E FF FF FF FF FF FF FF FF     
   6319 FFFC7CA6 FF FF FF FF FF FF FF FF     
   6320 FFFC7CAE FF FF FF FF FF FF FF FF     
   6321 FFFC7CB6 FF FF FF FF FF FF FF FF     
   6322 FFFC7CBE FF FF FF FF FF FF FF FF     
   6323 FFFC7CC6 FF FF FF FF FF FF FF FF     
   6324 FFFC7CCE FF FF FF FF FF FF FF FF     
   6325 FFFC7CD6 FF FF FF FF FF FF FF FF     
   6326 FFFC7CDE FF FF FF FF FF FF FF FF     
   6327 FFFC7CE6 FF FF FF FF FF FF FF FF     
   6328 FFFC7CEE FF FF FF FF FF FF FF FF     
   6329 FFFC7CF6 FF FF FF FF FF FF FF FF     
   6330 FFFC7CFE FF FF FF FF FF FF FF FF     
   6331 FFFC7D06 FF FF FF FF FF FF FF FF     
   6332 FFFC7D0E FF FF FF FF FF FF FF FF     
   6333 FFFC7D16 FF FF FF FF FF FF FF FF     
   6334 FFFC7D1E FF FF FF FF FF FF FF FF     
   6335 FFFC7D26 FF FF FF FF FF FF FF FF     
   6336 FFFC7D2E FF FF FF FF FF FF FF FF     
   6337 FFFC7D36 FF FF FF FF FF FF FF FF     
   6338 FFFC7D3E FF FF FF FF FF FF FF FF     
   6339 FFFC7D46 FF FF FF FF FF FF FF FF     
   6340 FFFC7D4E FF FF FF FF FF FF FF FF     
   6341 FFFC7D56 FF FF FF FF FF FF FF FF     
   6342 FFFC7D5E FF FF FF FF FF FF FF FF     
   6343 FFFC7D66 FF FF FF FF FF FF FF FF     
   6344 FFFC7D6E FF FF FF FF FF FF FF FF     
   6345 FFFC7D76 FF FF FF FF FF FF FF FF     
   6346 FFFC7D7E FF FF FF FF FF FF FF FF     
   6347 FFFC7D86 FF FF FF FF FF FF FF FF     
   6348 FFFC7D8E FF FF FF FF FF FF FF FF     
   6349 FFFC7D96 FF FF FF FF FF FF FF FF     
   6350 FFFC7D9E FF FF FF FF FF FF FF FF     
   6351 FFFC7DA6 FF FF FF FF FF FF FF FF     
   6352 FFFC7DAE FF FF FF FF FF FF FF FF     
   6353 FFFC7DB6 FF FF FF FF FF FF FF FF     
   6354 FFFC7DBE FF FF FF FF FF FF FF FF     
   6355 FFFC7DC6 FF FF FF FF FF FF FF FF     
   6356 FFFC7DCE FF FF FF FF FF FF FF FF     
   6357 FFFC7DD6 FF FF FF FF FF FF FF FF     
   6358 FFFC7DDE FF FF FF FF FF FF FF FF     
   6359 FFFC7DE6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 50
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6360 FFFC7DEE FF FF FF FF FF FF FF FF     
   6361 FFFC7DF6 FF FF FF FF FF FF FF FF     
   6362 FFFC7DFE FF FF FF FF FF FF FF FF     
   6363 FFFC7E06 FF FF FF FF FF FF FF FF     
   6364 FFFC7E0E FF FF FF FF FF FF FF FF     
   6365 FFFC7E16 FF FF FF FF FF FF FF FF     
   6366 FFFC7E1E FF FF FF FF FF FF FF FF     
   6367 FFFC7E26 FF FF FF FF FF FF FF FF     
   6368 FFFC7E2E FF FF FF FF FF FF FF FF     
   6369 FFFC7E36 FF FF FF FF FF FF FF FF     
   6370 FFFC7E3E FF FF FF FF FF FF FF FF     
   6371 FFFC7E46 FF FF FF FF FF FF FF FF     
   6372 FFFC7E4E FF FF FF FF FF FF FF FF     
   6373 FFFC7E56 FF FF FF FF FF FF FF FF     
   6374 FFFC7E5E FF FF FF FF FF FF FF FF     
   6375 FFFC7E66 FF FF FF FF FF FF FF FF     
   6376 FFFC7E6E FF FF FF FF FF FF FF FF     
   6377 FFFC7E76 FF FF FF FF FF FF FF FF     
   6378 FFFC7E7E FF FF FF FF FF FF FF FF     
   6379 FFFC7E86 FF FF FF FF FF FF FF FF     
   6380 FFFC7E8E FF FF FF FF FF FF FF FF     
   6381 FFFC7E96 FF FF FF FF FF FF FF FF     
   6382 FFFC7E9E FF FF FF FF FF FF FF FF     
   6383 FFFC7EA6 FF FF FF FF FF FF FF FF     
   6384 FFFC7EAE FF FF FF FF FF FF FF FF     
   6385 FFFC7EB6 FF FF FF FF FF FF FF FF     
   6386 FFFC7EBE FF FF FF FF FF FF FF FF     
   6387 FFFC7EC6 FF FF FF FF FF FF FF FF     
   6388 FFFC7ECE FF FF FF FF FF FF FF FF     
   6389 FFFC7ED6 FF FF FF FF FF FF FF FF     
   6390 FFFC7EDE FF FF FF FF FF FF FF FF     
   6391 FFFC7EE6 FF FF FF FF FF FF FF FF     
   6392 FFFC7EEE FF FF FF FF FF FF FF FF     
   6393 FFFC7EF6 FF FF FF FF FF FF FF FF     
   6394 FFFC7EFE FF FF FF FF FF FF FF FF     
   6395 FFFC7F06 FF FF FF FF FF FF FF FF     
   6396 FFFC7F0E FF FF FF FF FF FF FF FF     
   6397 FFFC7F16 FF FF FF FF FF FF FF FF     
   6398 FFFC7F1E FF FF FF FF FF FF FF FF     
   6399 FFFC7F26 FF FF FF FF FF FF FF FF     
   6400 FFFC7F2E FF FF FF FF FF FF FF FF     
   6401 FFFC7F36 FF FF FF FF FF FF FF FF     
   6402 FFFC7F3E FF FF FF FF FF FF FF FF     
   6403 FFFC7F46 FF FF FF FF FF FF FF FF     
   6404 FFFC7F4E FF FF FF FF FF FF FF FF     
   6405 FFFC7F56 FF FF FF FF FF FF FF FF     
   6406 FFFC7F5E FF FF FF FF FF FF FF FF     
   6407 FFFC7F66 FF FF FF FF FF FF FF FF     
   6408 FFFC7F6E FF FF FF FF FF FF FF FF     
   6409 FFFC7F76 FF FF FF FF FF FF FF FF     
   6410 FFFC7F7E FF FF FF FF FF FF FF FF     
   6411 FFFC7F86 FF FF FF FF FF FF FF FF     
   6412 FFFC7F8E FF FF FF FF FF FF FF FF     
   6413 FFFC7F96 FF FF FF FF FF FF FF FF     
   6414 FFFC7F9E FF FF FF FF FF FF FF FF     
   6415 FFFC7FA6 FF FF FF FF FF FF FF FF     
   6416 FFFC7FAE FF FF FF FF FF FF FF FF     
   6417 FFFC7FB6 FF FF FF FF FF FF FF FF     
   6418 FFFC7FBE FF FF FF FF FF FF FF FF     
   6419 FFFC7FC6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 51
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6420 FFFC7FCE FF FF FF FF FF FF FF FF     
   6421 FFFC7FD6 FF FF FF FF FF FF FF FF     
   6422 FFFC7FDE FF FF FF FF FF FF FF FF     
   6423 FFFC7FE6 FF FF FF FF FF FF FF FF     
   6424 FFFC7FEE FF FF FF FF FF FF FF FF     
   6425 FFFC7FF6 FF FF FF FF FF FF FF FF     
   6426 FFFC7FFE FF FF FF FF FF FF FF FF     
   6427 FFFC8006 FF FF FF FF FF FF FF FF     
   6428 FFFC800E FF FF FF FF FF FF FF FF     
   6429 FFFC8016 FF FF FF FF FF FF FF FF     
   6430 FFFC801E FF FF FF FF FF FF FF FF     
   6431 FFFC8026 FF FF FF FF FF FF FF FF     
   6432 FFFC802E FF FF FF FF FF FF FF FF     
   6433 FFFC8036 FF FF FF FF FF FF FF FF     
   6434 FFFC803E FF FF FF FF FF FF FF FF     
   6435 FFFC8046 FF FF FF FF FF FF FF FF     
   6436 FFFC804E FF FF FF FF FF FF FF FF     
   6437 FFFC8056 FF FF FF FF FF FF FF FF     
   6438 FFFC805E FF FF FF FF FF FF FF FF     
   6439 FFFC8066 FF FF FF FF FF FF FF FF     
   6440 FFFC806E FF FF FF FF FF FF FF FF     
   6441 FFFC8076 FF FF FF FF FF FF FF FF     
   6442 FFFC807E FF FF FF FF FF FF FF FF     
   6443 FFFC8086 FF FF FF FF FF FF FF FF     
   6444 FFFC808E FF FF FF FF FF FF FF FF     
   6445 FFFC8096 FF FF FF FF FF FF FF FF     
   6446 FFFC809E FF FF FF FF FF FF FF FF     
   6447 FFFC80A6 FF FF FF FF FF FF FF FF     
   6448 FFFC80AE FF FF FF FF FF FF FF FF     
   6449 FFFC80B6 FF FF FF FF FF FF FF FF     
   6450 FFFC80BE FF FF FF FF FF FF FF FF     
   6451 FFFC80C6 FF FF FF FF FF FF FF FF     
   6452 FFFC80CE FF FF FF FF FF FF FF FF     
   6453 FFFC80D6 FF FF FF FF FF FF FF FF     
   6454 FFFC80DE FF FF FF FF FF FF FF FF     
   6455 FFFC80E6 FF FF FF FF FF FF FF FF     
   6456 FFFC80EE FF FF FF FF FF FF FF FF     
   6457 FFFC80F6 FF FF FF FF FF FF FF FF     
   6458 FFFC80FE FF FF FF FF FF FF FF FF     
   6459 FFFC8106 FF FF FF FF FF FF FF FF     
   6460 FFFC810E FF FF FF FF FF FF FF FF     
   6461 FFFC8116 FF FF FF FF FF FF FF FF     
   6462 FFFC811E FF FF FF FF FF FF FF FF     
   6463 FFFC8126 FF FF FF FF FF FF FF FF     
   6464 FFFC812E FF FF FF FF FF FF FF FF     
   6465 FFFC8136 FF FF FF FF FF FF FF FF     
   6466 FFFC813E FF FF FF FF FF FF FF FF     
   6467 FFFC8146 FF FF FF FF FF FF FF FF     
   6468 FFFC814E FF FF FF FF FF FF FF FF     
   6469 FFFC8156 FF FF FF FF FF FF FF FF     
   6470 FFFC815E FF FF FF FF FF FF FF FF     
   6471 FFFC8166 FF FF FF FF FF FF FF FF     
   6472 FFFC816E FF FF FF FF FF FF FF FF     
   6473 FFFC8176 FF FF FF FF FF FF FF FF     
   6474 FFFC817E FF FF FF FF FF FF FF FF     
   6475 FFFC8186 FF FF FF FF FF FF FF FF     
   6476 FFFC818E FF FF FF FF FF FF FF FF     
   6477 FFFC8196 FF FF FF FF FF FF FF FF     
   6478 FFFC819E FF FF FF FF FF FF FF FF     
   6479 FFFC81A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 52
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6480 FFFC81AE FF FF FF FF FF FF FF FF     
   6481 FFFC81B6 FF FF FF FF FF FF FF FF     
   6482 FFFC81BE FF FF FF FF FF FF FF FF     
   6483 FFFC81C6 FF FF FF FF FF FF FF FF     
   6484 FFFC81CE FF FF FF FF FF FF FF FF     
   6485 FFFC81D6 FF FF FF FF FF FF FF FF     
   6486 FFFC81DE FF FF FF FF FF FF FF FF     
   6487 FFFC81E6 FF FF FF FF FF FF FF FF     
   6488 FFFC81EE FF FF FF FF FF FF FF FF     
   6489 FFFC81F6 FF FF FF FF FF FF FF FF     
   6490 FFFC81FE FF FF FF FF FF FF FF FF     
   6491 FFFC8206 FF FF FF FF FF FF FF FF     
   6492 FFFC820E FF FF FF FF FF FF FF FF     
   6493 FFFC8216 FF FF FF FF FF FF FF FF     
   6494 FFFC821E FF FF FF FF FF FF FF FF     
   6495 FFFC8226 FF FF FF FF FF FF FF FF     
   6496 FFFC822E FF FF FF FF FF FF FF FF     
   6497 FFFC8236 FF FF FF FF FF FF FF FF     
   6498 FFFC823E FF FF FF FF FF FF FF FF     
   6499 FFFC8246 FF FF FF FF FF FF FF FF     
   6500 FFFC824E FF FF FF FF FF FF FF FF     
   6501 FFFC8256 FF FF FF FF FF FF FF FF     
   6502 FFFC825E FF FF FF FF FF FF FF FF     
   6503 FFFC8266 FF FF FF FF FF FF FF FF     
   6504 FFFC826E FF FF FF FF FF FF FF FF     
   6505 FFFC8276 FF FF FF FF FF FF FF FF     
   6506 FFFC827E FF FF FF FF FF FF FF FF     
   6507 FFFC8286 FF FF FF FF FF FF FF FF     
   6508 FFFC828E FF FF FF FF FF FF FF FF     
   6509 FFFC8296 FF FF FF FF FF FF FF FF     
   6510 FFFC829E FF FF FF FF FF FF FF FF     
   6511 FFFC82A6 FF FF FF FF FF FF FF FF     
   6512 FFFC82AE FF FF FF FF FF FF FF FF     
   6513 FFFC82B6 FF FF FF FF FF FF FF FF     
   6514 FFFC82BE FF FF FF FF FF FF FF FF     
   6515 FFFC82C6 FF FF FF FF FF FF FF FF     
   6516 FFFC82CE FF FF FF FF FF FF FF FF     
   6517 FFFC82D6 FF FF FF FF FF FF FF FF     
   6518 FFFC82DE FF FF FF FF FF FF FF FF     
   6519 FFFC82E6 FF FF FF FF FF FF FF FF     
   6520 FFFC82EE FF FF FF FF FF FF FF FF     
   6521 FFFC82F6 FF FF FF FF FF FF FF FF     
   6522 FFFC82FE FF FF FF FF FF FF FF FF     
   6523 FFFC8306 FF FF FF FF FF FF FF FF     
   6524 FFFC830E FF FF FF FF FF FF FF FF     
   6525 FFFC8316 FF FF FF FF FF FF FF FF     
   6526 FFFC831E FF FF FF FF FF FF FF FF     
   6527 FFFC8326 FF FF FF FF FF FF FF FF     
   6528 FFFC832E FF FF FF FF FF FF FF FF     
   6529 FFFC8336 FF FF FF FF FF FF FF FF     
   6530 FFFC833E FF FF FF FF FF FF FF FF     
   6531 FFFC8346 FF FF FF FF FF FF FF FF     
   6532 FFFC834E FF FF FF FF FF FF FF FF     
   6533 FFFC8356 FF FF FF FF FF FF FF FF     
   6534 FFFC835E FF FF FF FF FF FF FF FF     
   6535 FFFC8366 FF FF FF FF FF FF FF FF     
   6536 FFFC836E FF FF FF FF FF FF FF FF     
   6537 FFFC8376 FF FF FF FF FF FF FF FF     
   6538 FFFC837E FF FF FF FF FF FF FF FF     
   6539 FFFC8386 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 53
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6540 FFFC838E FF FF FF FF FF FF FF FF     
   6541 FFFC8396 FF FF FF FF FF FF FF FF     
   6542 FFFC839E FF FF FF FF FF FF FF FF     
   6543 FFFC83A6 FF FF FF FF FF FF FF FF     
   6544 FFFC83AE FF FF FF FF FF FF FF FF     
   6545 FFFC83B6 FF FF FF FF FF FF FF FF     
   6546 FFFC83BE FF FF FF FF FF FF FF FF     
   6547 FFFC83C6 FF FF FF FF FF FF FF FF     
   6548 FFFC83CE FF FF FF FF FF FF FF FF     
   6549 FFFC83D6 FF FF FF FF FF FF FF FF     
   6550 FFFC83DE FF FF FF FF FF FF FF FF     
   6551 FFFC83E6 FF FF FF FF FF FF FF FF     
   6552 FFFC83EE FF FF FF FF FF FF FF FF     
   6553 FFFC83F6 FF FF FF FF FF FF FF FF     
   6554 FFFC83FE FF FF FF FF FF FF FF FF     
   6555 FFFC8406 FF FF FF FF FF FF FF FF     
   6556 FFFC840E FF FF FF FF FF FF FF FF     
   6557 FFFC8416 FF FF FF FF FF FF FF FF     
   6558 FFFC841E FF FF FF FF FF FF FF FF     
   6559 FFFC8426 FF FF FF FF FF FF FF FF     
   6560 FFFC842E FF FF FF FF FF FF FF FF     
   6561 FFFC8436 FF FF FF FF FF FF FF FF     
   6562 FFFC843E FF FF FF FF FF FF FF FF     
   6563 FFFC8446 FF FF FF FF FF FF FF FF     
   6564 FFFC844E FF FF FF FF FF FF FF FF     
   6565 FFFC8456 FF FF FF FF FF FF FF FF     
   6566 FFFC845E FF FF FF FF FF FF FF FF     
   6567 FFFC8466 FF FF FF FF FF FF FF FF     
   6568 FFFC846E FF FF FF FF FF FF FF FF     
   6569 FFFC8476 FF FF FF FF FF FF FF FF     
   6570 FFFC847E FF FF FF FF FF FF FF FF     
   6571 FFFC8486 FF FF FF FF FF FF FF FF     
   6572 FFFC848E FF FF FF FF FF FF FF FF     
   6573 FFFC8496 FF FF FF FF FF FF FF FF     
   6574 FFFC849E FF FF FF FF FF FF FF FF     
   6575 FFFC84A6 FF FF FF FF FF FF FF FF     
   6576 FFFC84AE FF FF FF FF FF FF FF FF     
   6577 FFFC84B6 FF FF FF FF FF FF FF FF     
   6578 FFFC84BE FF FF FF FF FF FF FF FF     
   6579 FFFC84C6 FF FF FF FF FF FF FF FF     
   6580 FFFC84CE FF FF FF FF FF FF FF FF     
   6581 FFFC84D6 FF FF FF FF FF FF FF FF     
   6582 FFFC84DE FF FF FF FF FF FF FF FF     
   6583 FFFC84E6 FF FF FF FF FF FF FF FF     
   6584 FFFC84EE FF FF FF FF FF FF FF FF     
   6585 FFFC84F6 FF FF FF FF FF FF FF FF     
   6586 FFFC84FE FF FF FF FF FF FF FF FF     
   6587 FFFC8506 FF FF FF FF FF FF FF FF     
   6588 FFFC850E FF FF FF FF FF FF FF FF     
   6589 FFFC8516 FF FF FF FF FF FF FF FF     
   6590 FFFC851E FF FF FF FF FF FF FF FF     
   6591 FFFC8526 FF FF FF FF FF FF FF FF     
   6592 FFFC852E FF FF FF FF FF FF FF FF     
   6593 FFFC8536 FF FF FF FF FF FF FF FF     
   6594 FFFC853E FF FF FF FF FF FF FF FF     
   6595 FFFC8546 FF FF FF FF FF FF FF FF     
   6596 FFFC854E FF FF FF FF FF FF FF FF     
   6597 FFFC8556 FF FF FF FF FF FF FF FF     
   6598 FFFC855E FF FF FF FF FF FF FF FF     
   6599 FFFC8566 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 54
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6600 FFFC856E FF FF FF FF FF FF FF FF     
   6601 FFFC8576 FF FF FF FF FF FF FF FF     
   6602 FFFC857E FF FF FF FF FF FF FF FF     
   6603 FFFC8586 FF FF FF FF FF FF FF FF     
   6604 FFFC858E FF FF FF FF FF FF FF FF     
   6605 FFFC8596 FF FF FF FF FF FF FF FF     
   6606 FFFC859E FF FF FF FF FF FF FF FF     
   6607 FFFC85A6 FF FF FF FF FF FF FF FF     
   6608 FFFC85AE FF FF FF FF FF FF FF FF     
   6609 FFFC85B6 FF FF FF FF FF FF FF FF     
   6610 FFFC85BE FF FF FF FF FF FF FF FF     
   6611 FFFC85C6 FF FF FF FF FF FF FF FF     
   6612 FFFC85CE FF FF FF FF FF FF FF FF     
   6613 FFFC85D6 FF FF FF FF FF FF FF FF     
   6614 FFFC85DE FF FF FF FF FF FF FF FF     
   6615 FFFC85E6 FF FF FF FF FF FF FF FF     
   6616 FFFC85EE FF FF FF FF FF FF FF FF     
   6617 FFFC85F6 FF FF FF FF FF FF FF FF     
   6618 FFFC85FE FF FF FF FF FF FF FF FF     
   6619 FFFC8606 FF FF FF FF FF FF FF FF     
   6620 FFFC860E FF FF FF FF FF FF FF FF     
   6621 FFFC8616 FF FF FF FF FF FF FF FF     
   6622 FFFC861E FF FF FF FF FF FF FF FF     
   6623 FFFC8626 FF FF FF FF FF FF FF FF     
   6624 FFFC862E FF FF FF FF FF FF FF FF     
   6625 FFFC8636 FF FF FF FF FF FF FF FF     
   6626 FFFC863E FF FF FF FF FF FF FF FF     
   6627 FFFC8646 FF FF FF FF FF FF FF FF     
   6628 FFFC864E FF FF FF FF FF FF FF FF     
   6629 FFFC8656 FF FF FF FF FF FF FF FF     
   6630 FFFC865E FF FF FF FF FF FF FF FF     
   6631 FFFC8666 FF FF FF FF FF FF FF FF     
   6632 FFFC866E FF FF FF FF FF FF FF FF     
   6633 FFFC8676 FF FF FF FF FF FF FF FF     
   6634 FFFC867E FF FF FF FF FF FF FF FF     
   6635 FFFC8686 FF FF FF FF FF FF FF FF     
   6636 FFFC868E FF FF FF FF FF FF FF FF     
   6637 FFFC8696 FF FF FF FF FF FF FF FF     
   6638 FFFC869E FF FF FF FF FF FF FF FF     
   6639 FFFC86A6 FF FF FF FF FF FF FF FF     
   6640 FFFC86AE FF FF FF FF FF FF FF FF     
   6641 FFFC86B6 FF FF FF FF FF FF FF FF     
   6642 FFFC86BE FF FF FF FF FF FF FF FF     
   6643 FFFC86C6 FF FF FF FF FF FF FF FF     
   6644 FFFC86CE FF FF FF FF FF FF FF FF     
   6645 FFFC86D6 FF FF FF FF FF FF FF FF     
   6646 FFFC86DE FF FF FF FF FF FF FF FF     
   6647 FFFC86E6 FF FF FF FF FF FF FF FF     
   6648 FFFC86EE FF FF FF FF FF FF FF FF     
   6649 FFFC86F6 FF FF FF FF FF FF FF FF     
   6650 FFFC86FE FF FF FF FF FF FF FF FF     
   6651 FFFC8706 FF FF FF FF FF FF FF FF     
   6652 FFFC870E FF FF FF FF FF FF FF FF     
   6653 FFFC8716 FF FF FF FF FF FF FF FF     
   6654 FFFC871E FF FF FF FF FF FF FF FF     
   6655 FFFC8726 FF FF FF FF FF FF FF FF     
   6656 FFFC872E FF FF FF FF FF FF FF FF     
   6657 FFFC8736 FF FF FF FF FF FF FF FF     
   6658 FFFC873E FF FF FF FF FF FF FF FF     
   6659 FFFC8746 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 55
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6660 FFFC874E FF FF FF FF FF FF FF FF     
   6661 FFFC8756 FF FF FF FF FF FF FF FF     
   6662 FFFC875E FF FF FF FF FF FF FF FF     
   6663 FFFC8766 FF FF FF FF FF FF FF FF     
   6664 FFFC876E FF FF FF FF FF FF FF FF     
   6665 FFFC8776 FF FF FF FF FF FF FF FF     
   6666 FFFC877E FF FF FF FF FF FF FF FF     
   6667 FFFC8786 FF FF FF FF FF FF FF FF     
   6668 FFFC878E FF FF FF FF FF FF FF FF     
   6669 FFFC8796 FF FF FF FF FF FF FF FF     
   6670 FFFC879E FF FF FF FF FF FF FF FF     
   6671 FFFC87A6 FF FF FF FF FF FF FF FF     
   6672 FFFC87AE FF FF FF FF FF FF FF FF     
   6673 FFFC87B6 FF FF FF FF FF FF FF FF     
   6674 FFFC87BE FF FF FF FF FF FF FF FF     
   6675 FFFC87C6 FF FF FF FF FF FF FF FF     
   6676 FFFC87CE FF FF FF FF FF FF FF FF     
   6677 FFFC87D6 FF FF FF FF FF FF FF FF     
   6678 FFFC87DE FF FF FF FF FF FF FF FF     
   6679 FFFC87E6 FF FF FF FF FF FF FF FF     
   6680 FFFC87EE FF FF FF FF FF FF FF FF     
   6681 FFFC87F6 FF FF FF FF FF FF FF FF     
   6682 FFFC87FE FF FF FF FF FF FF FF FF     
   6683 FFFC8806 FF FF FF FF FF FF FF FF     
   6684 FFFC880E FF FF FF FF FF FF FF FF     
   6685 FFFC8816 FF FF FF FF FF FF FF FF     
   6686 FFFC881E FF FF FF FF FF FF FF FF     
   6687 FFFC8826 FF FF FF FF FF FF FF FF     
   6688 FFFC882E FF FF FF FF FF FF FF FF     
   6689 FFFC8836 FF FF FF FF FF FF FF FF     
   6690 FFFC883E FF FF FF FF FF FF FF FF     
   6691 FFFC8846 FF FF FF FF FF FF FF FF     
   6692 FFFC884E FF FF FF FF FF FF FF FF     
   6693 FFFC8856 FF FF FF FF FF FF FF FF     
   6694 FFFC885E FF FF FF FF FF FF FF FF     
   6695 FFFC8866 FF FF FF FF FF FF FF FF     
   6696 FFFC886E FF FF FF FF FF FF FF FF     
   6697 FFFC8876 FF FF FF FF FF FF FF FF     
   6698 FFFC887E FF FF FF FF FF FF FF FF     
   6699 FFFC8886 FF FF FF FF FF FF FF FF     
   6700 FFFC888E FF FF FF FF FF FF FF FF     
   6701 FFFC8896 FF FF FF FF FF FF FF FF     
   6702 FFFC889E FF FF FF FF FF FF FF FF     
   6703 FFFC88A6 FF FF FF FF FF FF FF FF     
   6704 FFFC88AE FF FF FF FF FF FF FF FF     
   6705 FFFC88B6 FF FF FF FF FF FF FF FF     
   6706 FFFC88BE FF FF FF FF FF FF FF FF     
   6707 FFFC88C6 FF FF FF FF FF FF FF FF     
   6708 FFFC88CE FF FF FF FF FF FF FF FF     
   6709 FFFC88D6 FF FF FF FF FF FF FF FF     
   6710 FFFC88DE FF FF FF FF FF FF FF FF     
   6711 FFFC88E6 FF FF FF FF FF FF FF FF     
   6712 FFFC88EE FF FF FF FF FF FF FF FF     
   6713 FFFC88F6 FF FF FF FF FF FF FF FF     
   6714 FFFC88FE FF FF FF FF FF FF FF FF     
   6715 FFFC8906 FF FF FF FF FF FF FF FF     
   6716 FFFC890E FF FF FF FF FF FF FF FF     
   6717 FFFC8916 FF FF FF FF FF FF FF FF     
   6718 FFFC891E FF FF FF FF FF FF FF FF     
   6719 FFFC8926 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 56
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6720 FFFC892E FF FF FF FF FF FF FF FF     
   6721 FFFC8936 FF FF FF FF FF FF FF FF     
   6722 FFFC893E FF FF FF FF FF FF FF FF     
   6723 FFFC8946 FF FF FF FF FF FF FF FF     
   6724 FFFC894E FF FF FF FF FF FF FF FF     
   6725 FFFC8956 FF FF FF FF FF FF FF FF     
   6726 FFFC895E FF FF FF FF FF FF FF FF     
   6727 FFFC8966 FF FF FF FF FF FF FF FF     
   6728 FFFC896E FF FF FF FF FF FF FF FF     
   6729 FFFC8976 FF FF FF FF FF FF FF FF     
   6730 FFFC897E FF FF FF FF FF FF FF FF     
   6731 FFFC8986 FF FF FF FF FF FF FF FF     
   6732 FFFC898E FF FF FF FF FF FF FF FF     
   6733 FFFC8996 FF FF FF FF FF FF FF FF     
   6734 FFFC899E FF FF FF FF FF FF FF FF     
   6735 FFFC89A6 FF FF FF FF FF FF FF FF     
   6736 FFFC89AE FF FF FF FF FF FF FF FF     
   6737 FFFC89B6 FF FF FF FF FF FF FF FF     
   6738 FFFC89BE FF FF FF FF FF FF FF FF     
   6739 FFFC89C6 FF FF FF FF FF FF FF FF     
   6740 FFFC89CE FF FF FF FF FF FF FF FF     
   6741 FFFC89D6 FF FF FF FF FF FF FF FF     
   6742 FFFC89DE FF FF FF FF FF FF FF FF     
   6743 FFFC89E6 FF FF FF FF FF FF FF FF     
   6744 FFFC89EE FF FF FF FF FF FF FF FF     
   6745 FFFC89F6 FF FF FF FF FF FF FF FF     
   6746 FFFC89FE FF FF FF FF FF FF FF FF     
   6747 FFFC8A06 FF FF FF FF FF FF FF FF     
   6748 FFFC8A0E FF FF FF FF FF FF FF FF     
   6749 FFFC8A16 FF FF FF FF FF FF FF FF     
   6750 FFFC8A1E FF FF FF FF FF FF FF FF     
   6751 FFFC8A26 FF FF FF FF FF FF FF FF     
   6752 FFFC8A2E FF FF FF FF FF FF FF FF     
   6753 FFFC8A36 FF FF FF FF FF FF FF FF     
   6754 FFFC8A3E FF FF FF FF FF FF FF FF     
   6755 FFFC8A46 FF FF FF FF FF FF FF FF     
   6756 FFFC8A4E FF FF FF FF FF FF FF FF     
   6757 FFFC8A56 FF FF FF FF FF FF FF FF     
   6758 FFFC8A5E FF FF FF FF FF FF FF FF     
   6759 FFFC8A66 FF FF FF FF FF FF FF FF     
   6760 FFFC8A6E FF FF FF FF FF FF FF FF     
   6761 FFFC8A76 FF FF FF FF FF FF FF FF     
   6762 FFFC8A7E FF FF FF FF FF FF FF FF     
   6763 FFFC8A86 FF FF FF FF FF FF FF FF     
   6764 FFFC8A8E FF FF FF FF FF FF FF FF     
   6765 FFFC8A96 FF FF FF FF FF FF FF FF     
   6766 FFFC8A9E FF FF FF FF FF FF FF FF     
   6767 FFFC8AA6 FF FF FF FF FF FF FF FF     
   6768 FFFC8AAE FF FF FF FF FF FF FF FF     
   6769 FFFC8AB6 FF FF FF FF FF FF FF FF     
   6770 FFFC8ABE FF FF FF FF FF FF FF FF     
   6771 FFFC8AC6 FF FF FF FF FF FF FF FF     
   6772 FFFC8ACE FF FF FF FF FF FF FF FF     
   6773 FFFC8AD6 FF FF FF FF FF FF FF FF     
   6774 FFFC8ADE FF FF FF FF FF FF FF FF     
   6775 FFFC8AE6 FF FF FF FF FF FF FF FF     
   6776 FFFC8AEE FF FF FF FF FF FF FF FF     
   6777 FFFC8AF6 FF FF FF FF FF FF FF FF     
   6778 FFFC8AFE FF FF FF FF FF FF FF FF     
   6779 FFFC8B06 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 57
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6780 FFFC8B0E FF FF FF FF FF FF FF FF     
   6781 FFFC8B16 FF FF FF FF FF FF FF FF     
   6782 FFFC8B1E FF FF FF FF FF FF FF FF     
   6783 FFFC8B26 FF FF FF FF FF FF FF FF     
   6784 FFFC8B2E FF FF FF FF FF FF FF FF     
   6785 FFFC8B36 FF FF FF FF FF FF FF FF     
   6786 FFFC8B3E FF FF FF FF FF FF FF FF     
   6787 FFFC8B46 FF FF FF FF FF FF FF FF     
   6788 FFFC8B4E FF FF FF FF FF FF FF FF     
   6789 FFFC8B56 FF FF FF FF FF FF FF FF     
   6790 FFFC8B5E FF FF FF FF FF FF FF FF     
   6791 FFFC8B66 FF FF FF FF FF FF FF FF     
   6792 FFFC8B6E FF FF FF FF FF FF FF FF     
   6793 FFFC8B76 FF FF FF FF FF FF FF FF     
   6794 FFFC8B7E FF FF FF FF FF FF FF FF     
   6795 FFFC8B86 FF FF FF FF FF FF FF FF     
   6796 FFFC8B8E FF FF FF FF FF FF FF FF     
   6797 FFFC8B96 FF FF FF FF FF FF FF FF     
   6798 FFFC8B9E FF FF FF FF FF FF FF FF     
   6799 FFFC8BA6 FF FF FF FF FF FF FF FF     
   6800 FFFC8BAE FF FF FF FF FF FF FF FF     
   6801 FFFC8BB6 FF FF FF FF FF FF FF FF     
   6802 FFFC8BBE FF FF FF FF FF FF FF FF     
   6803 FFFC8BC6 FF FF FF FF FF FF FF FF     
   6804 FFFC8BCE FF FF FF FF FF FF FF FF     
   6805 FFFC8BD6 FF FF FF FF FF FF FF FF     
   6806 FFFC8BDE FF FF FF FF FF FF FF FF     
   6807 FFFC8BE6 FF FF FF FF FF FF FF FF     
   6808 FFFC8BEE FF FF FF FF FF FF FF FF     
   6809 FFFC8BF6 FF FF FF FF FF FF FF FF     
   6810 FFFC8BFE FF FF FF FF FF FF FF FF     
   6811 FFFC8C06 FF FF FF FF FF FF FF FF     
   6812 FFFC8C0E FF FF FF FF FF FF FF FF     
   6813 FFFC8C16 FF FF FF FF FF FF FF FF     
   6814 FFFC8C1E FF FF FF FF FF FF FF FF     
   6815 FFFC8C26 FF FF FF FF FF FF FF FF     
   6816 FFFC8C2E FF FF FF FF FF FF FF FF     
   6817 FFFC8C36 FF FF FF FF FF FF FF FF     
   6818 FFFC8C3E FF FF FF FF FF FF FF FF     
   6819 FFFC8C46 FF FF FF FF FF FF FF FF     
   6820 FFFC8C4E FF FF FF FF FF FF FF FF     
   6821 FFFC8C56 FF FF FF FF FF FF FF FF     
   6822 FFFC8C5E FF FF FF FF FF FF FF FF     
   6823 FFFC8C66 FF FF FF FF FF FF FF FF     
   6824 FFFC8C6E FF FF FF FF FF FF FF FF     
   6825 FFFC8C76 FF FF FF FF FF FF FF FF     
   6826 FFFC8C7E FF FF FF FF FF FF FF FF     
   6827 FFFC8C86 FF FF FF FF FF FF FF FF     
   6828 FFFC8C8E FF FF FF FF FF FF FF FF     
   6829 FFFC8C96 FF FF FF FF FF FF FF FF     
   6830 FFFC8C9E FF FF FF FF FF FF FF FF     
   6831 FFFC8CA6 FF FF FF FF FF FF FF FF     
   6832 FFFC8CAE FF FF FF FF FF FF FF FF     
   6833 FFFC8CB6 FF FF FF FF FF FF FF FF     
   6834 FFFC8CBE FF FF FF FF FF FF FF FF     
   6835 FFFC8CC6 FF FF FF FF FF FF FF FF     
   6836 FFFC8CCE FF FF FF FF FF FF FF FF     
   6837 FFFC8CD6 FF FF FF FF FF FF FF FF     
   6838 FFFC8CDE FF FF FF FF FF FF FF FF     
   6839 FFFC8CE6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 58
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6840 FFFC8CEE FF FF FF FF FF FF FF FF     
   6841 FFFC8CF6 FF FF FF FF FF FF FF FF     
   6842 FFFC8CFE FF FF FF FF FF FF FF FF     
   6843 FFFC8D06 FF FF FF FF FF FF FF FF     
   6844 FFFC8D0E FF FF FF FF FF FF FF FF     
   6845 FFFC8D16 FF FF FF FF FF FF FF FF     
   6846 FFFC8D1E FF FF FF FF FF FF FF FF     
   6847 FFFC8D26 FF FF FF FF FF FF FF FF     
   6848 FFFC8D2E FF FF FF FF FF FF FF FF     
   6849 FFFC8D36 FF FF FF FF FF FF FF FF     
   6850 FFFC8D3E FF FF FF FF FF FF FF FF     
   6851 FFFC8D46 FF FF FF FF FF FF FF FF     
   6852 FFFC8D4E FF FF FF FF FF FF FF FF     
   6853 FFFC8D56 FF FF FF FF FF FF FF FF     
   6854 FFFC8D5E FF FF FF FF FF FF FF FF     
   6855 FFFC8D66 FF FF FF FF FF FF FF FF     
   6856 FFFC8D6E FF FF FF FF FF FF FF FF     
   6857 FFFC8D76 FF FF FF FF FF FF FF FF     
   6858 FFFC8D7E FF FF FF FF FF FF FF FF     
   6859 FFFC8D86 FF FF FF FF FF FF FF FF     
   6860 FFFC8D8E FF FF FF FF FF FF FF FF     
   6861 FFFC8D96 FF FF FF FF FF FF FF FF     
   6862 FFFC8D9E FF FF FF FF FF FF FF FF     
   6863 FFFC8DA6 FF FF FF FF FF FF FF FF     
   6864 FFFC8DAE FF FF FF FF FF FF FF FF     
   6865 FFFC8DB6 FF FF FF FF FF FF FF FF     
   6866 FFFC8DBE FF FF FF FF FF FF FF FF     
   6867 FFFC8DC6 FF FF FF FF FF FF FF FF     
   6868 FFFC8DCE FF FF FF FF FF FF FF FF     
   6869 FFFC8DD6 FF FF FF FF FF FF FF FF     
   6870 FFFC8DDE FF FF FF FF FF FF FF FF     
   6871 FFFC8DE6 FF FF FF FF FF FF FF FF     
   6872 FFFC8DEE FF FF FF FF FF FF FF FF     
   6873 FFFC8DF6 FF FF FF FF FF FF FF FF     
   6874 FFFC8DFE FF FF FF FF FF FF FF FF     
   6875 FFFC8E06 FF FF FF FF FF FF FF FF     
   6876 FFFC8E0E FF FF FF FF FF FF FF FF     
   6877 FFFC8E16 FF FF FF FF FF FF FF FF     
   6878 FFFC8E1E FF FF FF FF FF FF FF FF     
   6879 FFFC8E26 FF FF FF FF FF FF FF FF     
   6880 FFFC8E2E FF FF FF FF FF FF FF FF     
   6881 FFFC8E36 FF FF FF FF FF FF FF FF     
   6882 FFFC8E3E FF FF FF FF FF FF FF FF     
   6883 FFFC8E46 FF FF FF FF FF FF FF FF     
   6884 FFFC8E4E FF FF FF FF FF FF FF FF     
   6885 FFFC8E56 FF FF FF FF FF FF FF FF     
   6886 FFFC8E5E FF FF FF FF FF FF FF FF     
   6887 FFFC8E66 FF FF FF FF FF FF FF FF     
   6888 FFFC8E6E FF FF FF FF FF FF FF FF     
   6889 FFFC8E76 FF FF FF FF FF FF FF FF     
   6890 FFFC8E7E FF FF FF FF FF FF FF FF     
   6891 FFFC8E86 FF FF FF FF FF FF FF FF     
   6892 FFFC8E8E FF FF FF FF FF FF FF FF     
   6893 FFFC8E96 FF FF FF FF FF FF FF FF     
   6894 FFFC8E9E FF FF FF FF FF FF FF FF     
   6895 FFFC8EA6 FF FF FF FF FF FF FF FF     
   6896 FFFC8EAE FF FF FF FF FF FF FF FF     
   6897 FFFC8EB6 FF FF FF FF FF FF FF FF     
   6898 FFFC8EBE FF FF FF FF FF FF FF FF     
   6899 FFFC8EC6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 59
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6900 FFFC8ECE FF FF FF FF FF FF FF FF     
   6901 FFFC8ED6 FF FF FF FF FF FF FF FF     
   6902 FFFC8EDE FF FF FF FF FF FF FF FF     
   6903 FFFC8EE6 FF FF FF FF FF FF FF FF     
   6904 FFFC8EEE FF FF FF FF FF FF FF FF     
   6905 FFFC8EF6 FF FF FF FF FF FF FF FF     
   6906 FFFC8EFE FF FF FF FF FF FF FF FF     
   6907 FFFC8F06 FF FF FF FF FF FF FF FF     
   6908 FFFC8F0E FF FF FF FF FF FF FF FF     
   6909 FFFC8F16 FF FF FF FF FF FF FF FF     
   6910 FFFC8F1E FF FF FF FF FF FF FF FF     
   6911 FFFC8F26 FF FF FF FF FF FF FF FF     
   6912 FFFC8F2E FF FF FF FF FF FF FF FF     
   6913 FFFC8F36 FF FF FF FF FF FF FF FF     
   6914 FFFC8F3E FF FF FF FF FF FF FF FF     
   6915 FFFC8F46 FF FF FF FF FF FF FF FF     
   6916 FFFC8F4E FF FF FF FF FF FF FF FF     
   6917 FFFC8F56 FF FF FF FF FF FF FF FF     
   6918 FFFC8F5E FF FF FF FF FF FF FF FF     
   6919 FFFC8F66 FF FF FF FF FF FF FF FF     
   6920 FFFC8F6E FF FF FF FF FF FF FF FF     
   6921 FFFC8F76 FF FF FF FF FF FF FF FF     
   6922 FFFC8F7E FF FF FF FF FF FF FF FF     
   6923 FFFC8F86 FF FF FF FF FF FF FF FF     
   6924 FFFC8F8E FF FF FF FF FF FF FF FF     
   6925 FFFC8F96 FF FF FF FF FF FF FF FF     
   6926 FFFC8F9E FF FF FF FF FF FF FF FF     
   6927 FFFC8FA6 FF FF FF FF FF FF FF FF     
   6928 FFFC8FAE FF FF FF FF FF FF FF FF     
   6929 FFFC8FB6 FF FF FF FF FF FF FF FF     
   6930 FFFC8FBE FF FF FF FF FF FF FF FF     
   6931 FFFC8FC6 FF FF FF FF FF FF FF FF     
   6932 FFFC8FCE FF FF FF FF FF FF FF FF     
   6933 FFFC8FD6 FF FF FF FF FF FF FF FF     
   6934 FFFC8FDE FF FF FF FF FF FF FF FF     
   6935 FFFC8FE6 FF FF FF FF FF FF FF FF     
   6936 FFFC8FEE FF FF FF FF FF FF FF FF     
   6937 FFFC8FF6 FF FF FF FF FF FF FF FF     
   6938 FFFC8FFE FF FF FF FF FF FF FF FF     
   6939 FFFC9006 FF FF FF FF FF FF FF FF     
   6940 FFFC900E FF FF FF FF FF FF FF FF     
   6941 FFFC9016 FF FF FF FF FF FF FF FF     
   6942 FFFC901E FF FF FF FF FF FF FF FF     
   6943 FFFC9026 FF FF FF FF FF FF FF FF     
   6944 FFFC902E FF FF FF FF FF FF FF FF     
   6945 FFFC9036 FF FF FF FF FF FF FF FF     
   6946 FFFC903E FF FF FF FF FF FF FF FF     
   6947 FFFC9046 FF FF FF FF FF FF FF FF     
   6948 FFFC904E FF FF FF FF FF FF FF FF     
   6949 FFFC9056 FF FF FF FF FF FF FF FF     
   6950 FFFC905E FF FF FF FF FF FF FF FF     
   6951 FFFC9066 FF FF FF FF FF FF FF FF     
   6952 FFFC906E FF FF FF FF FF FF FF FF     
   6953 FFFC9076 FF FF FF FF FF FF FF FF     
   6954 FFFC907E FF FF FF FF FF FF FF FF     
   6955 FFFC9086 FF FF FF FF FF FF FF FF     
   6956 FFFC908E FF FF FF FF FF FF FF FF     
   6957 FFFC9096 FF FF FF FF FF FF FF FF     
   6958 FFFC909E FF FF FF FF FF FF FF FF     
   6959 FFFC90A6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 60
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6960 FFFC90AE FF FF FF FF FF FF FF FF     
   6961 FFFC90B6 FF FF FF FF FF FF FF FF     
   6962 FFFC90BE FF FF FF FF FF FF FF FF     
   6963 FFFC90C6 FF FF FF FF FF FF FF FF     
   6964 FFFC90CE FF FF FF FF FF FF FF FF     
   6965 FFFC90D6 FF FF FF FF FF FF FF FF     
   6966 FFFC90DE FF FF FF FF FF FF FF FF     
   6967 FFFC90E6 FF FF FF FF FF FF FF FF     
   6968 FFFC90EE FF FF FF FF FF FF FF FF     
   6969 FFFC90F6 FF FF FF FF FF FF FF FF     
   6970 FFFC90FE FF FF FF FF FF FF FF FF     
   6971 FFFC9106 FF FF FF FF FF FF FF FF     
   6972 FFFC910E FF FF FF FF FF FF FF FF     
   6973 FFFC9116 FF FF FF FF FF FF FF FF     
   6974 FFFC911E FF FF FF FF FF FF FF FF     
   6975 FFFC9126 FF FF FF FF FF FF FF FF     
   6976 FFFC912E FF FF FF FF FF FF FF FF     
   6977 FFFC9136 FF FF FF FF FF FF FF FF     
   6978 FFFC913E FF FF FF FF FF FF FF FF     
   6979 FFFC9146 FF FF FF FF FF FF FF FF     
   6980 FFFC914E FF FF FF FF FF FF FF FF     
   6981 FFFC9156 FF FF FF FF FF FF FF FF     
   6982 FFFC915E FF FF FF FF FF FF FF FF     
   6983 FFFC9166 FF FF FF FF FF FF FF FF     
   6984 FFFC916E FF FF FF FF FF FF FF FF     
   6985 FFFC9176 FF FF FF FF FF FF FF FF     
   6986 FFFC917E FF FF FF FF FF FF FF FF     
   6987 FFFC9186 FF FF FF FF FF FF FF FF     
   6988 FFFC918E FF FF FF FF FF FF FF FF     
   6989 FFFC9196 FF FF FF FF FF FF FF FF     
   6990 FFFC919E FF FF FF FF FF FF FF FF     
   6991 FFFC91A6 FF FF FF FF FF FF FF FF     
   6992 FFFC91AE FF FF FF FF FF FF FF FF     
   6993 FFFC91B6 FF FF FF FF FF FF FF FF     
   6994 FFFC91BE FF FF FF FF FF FF FF FF     
   6995 FFFC91C6 FF FF FF FF FF FF FF FF     
   6996 FFFC91CE FF FF FF FF FF FF FF FF     
   6997 FFFC91D6 FF FF FF FF FF FF FF FF     
   6998 FFFC91DE FF FF FF FF FF FF FF FF     
   6999 FFFC91E6 FF FF FF FF FF FF FF FF     
   7000 FFFC91EE FF FF FF FF FF FF FF FF     
   7001 FFFC91F6 FF FF FF FF FF FF FF FF     
   7002 FFFC91FE FF FF FF FF FF FF FF FF     
   7003 FFFC9206 FF FF FF FF FF FF FF FF     
   7004 FFFC920E FF FF FF FF FF FF FF FF     
   7005 FFFC9216 FF FF FF FF FF FF FF FF     
   7006 FFFC921E FF FF FF FF FF FF FF FF     
   7007 FFFC9226 FF FF FF FF FF FF FF FF     
   7008 FFFC922E FF FF FF FF FF FF FF FF     
   7009 FFFC9236 FF FF FF FF FF FF FF FF     
   7010 FFFC923E FF FF FF FF FF FF FF FF     
   7011 FFFC9246 FF FF FF FF FF FF FF FF     
   7012 FFFC924E FF FF FF FF FF FF FF FF     
   7013 FFFC9256 FF FF FF FF FF FF FF FF     
   7014 FFFC925E FF FF FF FF FF FF FF FF     
   7015 FFFC9266 FF FF FF FF FF FF FF FF     
   7016 FFFC926E FF FF FF FF FF FF FF FF     
   7017 FFFC9276 FF FF FF FF FF FF FF FF     
   7018 FFFC927E FF FF FF FF FF FF FF FF     
   7019 FFFC9286 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 61
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7020 FFFC928E FF FF FF FF FF FF FF FF     
   7021 FFFC9296 FF FF FF FF FF FF FF FF     
   7022 FFFC929E FF FF FF FF FF FF FF FF     
   7023 FFFC92A6 FF FF FF FF FF FF FF FF     
   7024 FFFC92AE FF FF FF FF FF FF FF FF     
   7025 FFFC92B6 FF FF FF FF FF FF FF FF     
   7026 FFFC92BE FF FF FF FF FF FF FF FF     
   7027 FFFC92C6 FF FF FF FF FF FF FF FF     
   7028 FFFC92CE FF FF FF FF FF FF FF FF     
   7029 FFFC92D6 FF FF FF FF FF FF FF FF     
   7030 FFFC92DE FF FF FF FF FF FF FF FF     
   7031 FFFC92E6 FF FF FF FF FF FF FF FF     
   7032 FFFC92EE FF FF FF FF FF FF FF FF     
   7033 FFFC92F6 FF FF FF FF FF FF FF FF     
   7034 FFFC92FE FF FF FF FF FF FF FF FF     
   7035 FFFC9306 FF FF FF FF FF FF FF FF     
   7036 FFFC930E FF FF FF FF FF FF FF FF     
   7037 FFFC9316 FF FF FF FF FF FF FF FF     
   7038 FFFC931E FF FF FF FF FF FF FF FF     
   7039 FFFC9326 FF FF FF FF FF FF FF FF     
   7040 FFFC932E FF FF FF FF FF FF FF FF     
   7041 FFFC9336 FF FF FF FF FF FF FF FF     
   7042 FFFC933E FF FF FF FF FF FF FF FF     
   7043 FFFC9346 FF FF FF FF FF FF FF FF     
   7044 FFFC934E FF FF FF FF FF FF FF FF     
   7045 FFFC9356 FF FF FF FF FF FF FF FF     
   7046 FFFC935E FF FF FF FF FF FF FF FF     
   7047 FFFC9366 FF FF FF FF FF FF FF FF     
   7048 FFFC936E FF FF FF FF FF FF FF FF     
   7049 FFFC9376 FF FF FF FF FF FF FF FF     
   7050 FFFC937E FF FF FF FF FF FF FF FF     
   7051 FFFC9386 FF FF FF FF FF FF FF FF     
   7052 FFFC938E FF FF FF FF FF FF FF FF     
   7053 FFFC9396 FF FF FF FF FF FF FF FF     
   7054 FFFC939E FF FF FF FF FF FF FF FF     
   7055 FFFC93A6 FF FF FF FF FF FF FF FF     
   7056 FFFC93AE FF FF FF FF FF FF FF FF     
   7057 FFFC93B6 FF FF FF FF FF FF FF FF     
   7058 FFFC93BE FF FF FF FF FF FF FF FF     
   7059 FFFC93C6 FF FF FF FF FF FF FF FF     
   7060 FFFC93CE FF FF FF FF FF FF FF FF     
   7061 FFFC93D6 FF FF FF FF FF FF FF FF     
   7062 FFFC93DE FF FF FF FF FF FF FF FF     
   7063 FFFC93E6 FF FF FF FF FF FF FF FF     
   7064 FFFC93EE FF FF FF FF FF FF FF FF     
   7065 FFFC93F6 FF FF FF FF FF FF FF FF     
   7066 FFFC93FE FF FF FF FF FF FF FF FF     
   7067 FFFC9406 FF FF FF FF FF FF FF FF     
   7068 FFFC940E FF FF FF FF FF FF FF FF     
   7069 FFFC9416 FF FF FF FF FF FF FF FF     
   7070 FFFC941E FF FF FF FF FF FF FF FF     
   7071 FFFC9426 FF FF FF FF FF FF FF FF     
   7072 FFFC942E FF FF FF FF FF FF FF FF     
   7073 FFFC9436 FF FF FF FF FF FF FF FF     
   7074 FFFC943E FF FF FF FF FF FF FF FF     
   7075 FFFC9446 FF FF FF FF FF FF FF FF     
   7076 FFFC944E FF FF FF FF FF FF FF FF     
   7077 FFFC9456 FF FF FF FF FF FF FF FF     
   7078 FFFC945E FF FF FF FF FF FF FF FF     
   7079 FFFC9466 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 62
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7080 FFFC946E FF FF FF FF FF FF FF FF     
   7081 FFFC9476 FF FF FF FF FF FF FF FF     
   7082 FFFC947E FF FF FF FF FF FF FF FF     
   7083 FFFC9486 FF FF FF FF FF FF FF FF     
   7084 FFFC948E FF FF FF FF FF FF FF FF     
   7085 FFFC9496 FF FF FF FF FF FF FF FF     
   7086 FFFC949E FF FF FF FF FF FF FF FF     
   7087 FFFC94A6 FF FF FF FF FF FF FF FF     
   7088 FFFC94AE FF FF FF FF FF FF FF FF     
   7089 FFFC94B6 FF FF FF FF FF FF FF FF     
   7090 FFFC94BE FF FF FF FF FF FF FF FF     
   7091 FFFC94C6 FF FF FF FF FF FF FF FF     
   7092 FFFC94CE FF FF FF FF FF FF FF FF     
   7093 FFFC94D6 FF FF FF FF FF FF FF FF     
   7094 FFFC94DE FF FF FF FF FF FF FF FF     
   7095 FFFC94E6 FF FF FF FF FF FF FF FF     
   7096 FFFC94EE FF FF FF FF FF FF FF FF     
   7097 FFFC94F6 FF FF FF FF FF FF FF FF     
   7098 FFFC94FE FF FF FF FF FF FF FF FF     
   7099 FFFC9506 FF FF FF FF FF FF FF FF     
   7100 FFFC950E FF FF FF FF FF FF FF FF     
   7101 FFFC9516 FF FF FF FF FF FF FF FF     
   7102 FFFC951E FF FF FF FF FF FF FF FF     
   7103 FFFC9526 FF FF FF FF FF FF FF FF     
   7104 FFFC952E FF FF FF FF FF FF FF FF     
   7105 FFFC9536 FF FF FF FF FF FF FF FF     
   7106 FFFC953E FF FF FF FF FF FF FF FF     
   7107 FFFC9546 FF FF FF FF FF FF FF FF     
   7108 FFFC954E FF FF FF FF FF FF FF FF     
   7109 FFFC9556 FF FF FF FF FF FF FF FF     
   7110 FFFC955E FF FF FF FF FF FF FF FF     
   7111 FFFC9566 FF FF FF FF FF FF FF FF     
   7112 FFFC956E FF FF FF FF FF FF FF FF     
   7113 FFFC9576 FF FF FF FF FF FF FF FF     
   7114 FFFC957E FF FF FF FF FF FF FF FF     
   7115 FFFC9586 FF FF FF FF FF FF FF FF     
   7116 FFFC958E FF FF FF FF FF FF FF FF     
   7117 FFFC9596 FF FF FF FF FF FF FF FF     
   7118 FFFC959E FF FF FF FF FF FF FF FF     
   7119 FFFC95A6 FF FF FF FF FF FF FF FF     
   7120 FFFC95AE FF FF FF FF FF FF FF FF     
   7121 FFFC95B6 FF FF FF FF FF FF FF FF     
   7122 FFFC95BE FF FF FF FF FF FF FF FF     
   7123 FFFC95C6 FF FF FF FF FF FF FF FF     
   7124 FFFC95CE FF FF FF FF FF FF FF FF     
   7125 FFFC95D6 FF FF FF FF FF FF FF FF     
   7126 FFFC95DE FF FF FF FF FF FF FF FF     
   7127 FFFC95E6 FF FF FF FF FF FF FF FF     
   7128 FFFC95EE FF FF FF FF FF FF FF FF     
   7129 FFFC95F6 FF FF FF FF FF FF FF FF     
   7130 FFFC95FE FF FF FF FF FF FF FF FF     
   7131 FFFC9606 FF FF FF FF FF FF FF FF     
   7132 FFFC960E FF FF FF FF FF FF FF FF     
   7133 FFFC9616 FF FF FF FF FF FF FF FF     
   7134 FFFC961E FF FF FF FF FF FF FF FF     
   7135 FFFC9626 FF FF FF FF FF FF FF FF     
   7136 FFFC962E FF FF FF FF FF FF FF FF     
   7137 FFFC9636 FF FF FF FF FF FF FF FF     
   7138 FFFC963E FF FF FF FF FF FF FF FF     
   7139 FFFC9646 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 63
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7140 FFFC964E FF FF FF FF FF FF FF FF     
   7141 FFFC9656 FF FF FF FF FF FF FF FF     
   7142 FFFC965E FF FF FF FF FF FF FF FF     
   7143 FFFC9666 FF FF FF FF FF FF FF FF     
   7144 FFFC966E FF FF FF FF FF FF FF FF     
   7145 FFFC9676 FF FF FF FF FF FF FF FF     
   7146 FFFC967E FF FF FF FF FF FF FF FF     
   7147 FFFC9686 FF FF FF FF FF FF FF FF     
   7148 FFFC968E FF FF FF FF FF FF FF FF     
   7149 FFFC9696 FF FF FF FF FF FF FF FF     
   7150 FFFC969E FF FF FF FF FF FF FF FF     
   7151 FFFC96A6 FF FF FF FF FF FF FF FF     
   7152 FFFC96AE FF FF FF FF FF FF FF FF     
   7153 FFFC96B6 FF FF FF FF FF FF FF FF     
   7154 FFFC96BE FF FF FF FF FF FF FF FF     
   7155 FFFC96C6 FF FF FF FF FF FF FF FF     
   7156 FFFC96CE FF FF FF FF FF FF FF FF     
   7157 FFFC96D6 FF FF FF FF FF FF FF FF     
   7158 FFFC96DE FF FF FF FF FF FF FF FF     
   7159 FFFC96E6 FF FF FF FF FF FF FF FF     
   7160 FFFC96EE FF FF FF FF FF FF FF FF     
   7161 FFFC96F6 FF FF FF FF FF FF FF FF     
   7162 FFFC96FE FF FF FF FF FF FF FF FF     
   7163 FFFC9706 FF FF FF FF FF FF FF FF     
   7164 FFFC970E FF FF FF FF FF FF FF FF     
   7165 FFFC9716 FF FF FF FF FF FF FF FF     
   7166 FFFC971E FF FF FF FF FF FF FF FF     
   7167 FFFC9726 FF FF FF FF FF FF FF FF     
   7168 FFFC972E FF FF FF FF FF FF FF FF     
   7169 FFFC9736 FF FF FF FF FF FF FF FF     
   7170 FFFC973E FF FF FF FF FF FF FF FF     
   7171 FFFC9746 FF FF FF FF FF FF FF FF     
   7172 FFFC974E FF FF FF FF FF FF FF FF     
   7173 FFFC9756 FF FF FF FF FF FF FF FF     
   7174 FFFC975E FF FF FF FF FF FF FF FF     
   7175 FFFC9766 FF FF FF FF FF FF FF FF     
   7176 FFFC976E FF FF FF FF FF FF FF FF     
   7177 FFFC9776 FF FF FF FF FF FF FF FF     
   7178 FFFC977E FF FF FF FF FF FF FF FF     
   7179 FFFC9786 FF FF FF FF FF FF FF FF     
   7180 FFFC978E FF FF FF FF FF FF FF FF     
   7181 FFFC9796 FF FF FF FF FF FF FF FF     
   7182 FFFC979E FF FF FF FF FF FF FF FF     
   7183 FFFC97A6 FF FF FF FF FF FF FF FF     
   7184 FFFC97AE FF FF FF FF FF FF FF FF     
   7185 FFFC97B6 FF FF FF FF FF FF FF FF     
   7186 FFFC97BE FF FF FF FF FF FF FF FF     
   7187 FFFC97C6 FF FF FF FF FF FF FF FF     
   7188 FFFC97CE FF FF FF FF FF FF FF FF     
   7189 FFFC97D6 FF FF FF FF FF FF FF FF     
   7190 FFFC97DE FF FF FF FF FF FF FF FF     
   7191 FFFC97E6 FF FF FF FF FF FF FF FF     
   7192 FFFC97EE FF FF FF FF FF FF FF FF     
   7193 FFFC97F6 FF FF FF FF FF FF FF FF     
   7194 FFFC97FE FF FF FF FF FF FF FF FF     
   7195 FFFC9806 FF FF FF FF FF FF FF FF     
   7196 FFFC980E FF FF FF FF FF FF FF FF     
   7197 FFFC9816 FF FF FF FF FF FF FF FF     
   7198 FFFC981E FF FF FF FF FF FF FF FF     
   7199 FFFC9826 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 64
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7200 FFFC982E FF FF FF FF FF FF FF FF     
   7201 FFFC9836 FF FF FF FF FF FF FF FF     
   7202 FFFC983E FF FF FF FF FF FF FF FF     
   7203 FFFC9846 FF FF FF FF FF FF FF FF     
   7204 FFFC984E FF FF FF FF FF FF FF FF     
   7205 FFFC9856 FF FF FF FF FF FF FF FF     
   7206 FFFC985E FF FF FF FF FF FF FF FF     
   7207 FFFC9866 FF FF FF FF FF FF FF FF     
   7208 FFFC986E FF FF FF FF FF FF FF FF     
   7209 FFFC9876 FF FF FF FF FF FF FF FF     
   7210 FFFC987E FF FF FF FF FF FF FF FF     
   7211 FFFC9886 FF FF FF FF FF FF FF FF     
   7212 FFFC988E FF FF FF FF FF FF FF FF     
   7213 FFFC9896 FF FF FF FF FF FF FF FF     
   7214 FFFC989E FF FF FF FF FF FF FF FF     
   7215 FFFC98A6 FF FF FF FF FF FF FF FF     
   7216 FFFC98AE FF FF FF FF FF FF FF FF     
   7217 FFFC98B6 FF FF FF FF FF FF FF FF     
   7218 FFFC98BE FF FF FF FF FF FF FF FF     
   7219 FFFC98C6 FF FF FF FF FF FF FF FF     
   7220 FFFC98CE FF FF FF FF FF FF FF FF     
   7221 FFFC98D6 FF FF FF FF FF FF FF FF     
   7222 FFFC98DE FF FF FF FF FF FF FF FF     
   7223 FFFC98E6 FF FF FF FF FF FF FF FF     
   7224 FFFC98EE FF FF FF FF FF FF FF FF     
   7225 FFFC98F6 FF FF FF FF FF FF FF FF     
   7226 FFFC98FE FF FF FF FF FF FF FF FF     
   7227 FFFC9906 FF FF FF FF FF FF FF FF     
   7228 FFFC990E FF FF FF FF FF FF FF FF     
   7229 FFFC9916 FF FF FF FF FF FF FF FF     
   7230 FFFC991E FF FF FF FF FF FF FF FF     
   7231 FFFC9926 FF FF FF FF FF FF FF FF     
   7232 FFFC992E FF FF FF FF FF FF FF FF     
   7233 FFFC9936 FF FF FF FF FF FF FF FF     
   7234 FFFC993E FF FF FF FF FF FF FF FF     
   7235 FFFC9946 FF FF FF FF FF FF FF FF     
   7236 FFFC994E FF FF FF FF FF FF FF FF     
   7237 FFFC9956 FF FF FF FF FF FF FF FF     
   7238 FFFC995E FF FF FF FF FF FF FF FF     
   7239 FFFC9966 FF FF FF FF FF FF FF FF     
   7240 FFFC996E FF FF FF FF FF FF FF FF     
   7241 FFFC9976 FF FF FF FF FF FF FF FF     
   7242 FFFC997E FF FF FF FF FF FF FF FF     
   7243 FFFC9986 FF FF FF FF FF FF FF FF     
   7244 FFFC998E FF FF FF FF FF FF FF FF     
   7245 FFFC9996 FF FF FF FF FF FF FF FF     
   7246 FFFC999E FF FF FF FF FF FF FF FF     
   7247 FFFC99A6 FF FF FF FF FF FF FF FF     
   7248 FFFC99AE FF FF FF FF FF FF FF FF     
   7249 FFFC99B6 FF FF FF FF FF FF FF FF     
   7250 FFFC99BE FF FF FF FF FF FF FF FF     
   7251 FFFC99C6 FF FF FF FF FF FF FF FF     
   7252 FFFC99CE FF FF FF FF FF FF FF FF     
   7253 FFFC99D6 FF FF FF FF FF FF FF FF     
   7254 FFFC99DE FF FF FF FF FF FF FF FF     
   7255 FFFC99E6 FF FF FF FF FF FF FF FF     
   7256 FFFC99EE FF FF FF FF FF FF FF FF     
   7257 FFFC99F6 FF FF FF FF FF FF FF FF     
   7258 FFFC99FE FF FF FF FF FF FF FF FF     
   7259 FFFC9A06 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 65
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7260 FFFC9A0E FF FF FF FF FF FF FF FF     
   7261 FFFC9A16 FF FF FF FF FF FF FF FF     
   7262 FFFC9A1E FF FF FF FF FF FF FF FF     
   7263 FFFC9A26 FF FF FF FF FF FF FF FF     
   7264 FFFC9A2E FF FF FF FF FF FF FF FF     
   7265 FFFC9A36 FF FF FF FF FF FF FF FF     
   7266 FFFC9A3E FF FF FF FF FF FF FF FF     
   7267 FFFC9A46 FF FF FF FF FF FF FF FF     
   7268 FFFC9A4E FF FF FF FF FF FF FF FF     
   7269 FFFC9A56 FF FF FF FF FF FF FF FF     
   7270 FFFC9A5E FF FF FF FF FF FF FF FF     
   7271 FFFC9A66 FF FF FF FF FF FF FF FF     
   7272 FFFC9A6E FF FF FF FF FF FF FF FF     
   7273 FFFC9A76 FF FF FF FF FF FF FF FF     
   7274 FFFC9A7E FF FF FF FF FF FF FF FF     
   7275 FFFC9A86 FF FF FF FF FF FF FF FF     
   7276 FFFC9A8E FF FF FF FF FF FF FF FF     
   7277 FFFC9A96 FF FF FF FF FF FF FF FF     
   7278 FFFC9A9E FF FF FF FF FF FF FF FF     
   7279 FFFC9AA6 FF FF FF FF FF FF FF FF     
   7280 FFFC9AAE FF FF FF FF FF FF FF FF     
   7281 FFFC9AB6 FF FF FF FF FF FF FF FF     
   7282 FFFC9ABE FF FF FF FF FF FF FF FF     
   7283 FFFC9AC6 FF FF FF FF FF FF FF FF     
   7284 FFFC9ACE FF FF FF FF FF FF FF FF     
   7285 FFFC9AD6 FF FF FF FF FF FF FF FF     
   7286 FFFC9ADE FF FF FF FF FF FF FF FF     
   7287 FFFC9AE6 FF FF FF FF FF FF FF FF     
   7288 FFFC9AEE FF FF FF FF FF FF FF FF     
   7289 FFFC9AF6 FF FF FF FF FF FF FF FF     
   7290 FFFC9AFE FF FF FF FF FF FF FF FF     
   7291 FFFC9B06 FF FF FF FF FF FF FF FF     
   7292 FFFC9B0E FF FF FF FF FF FF FF FF     
   7293 FFFC9B16 FF FF FF FF FF FF FF FF     
   7294 FFFC9B1E FF FF FF FF FF FF FF FF     
   7295 FFFC9B26 FF FF FF FF FF FF FF FF     
   7296 FFFC9B2E FF FF FF FF FF FF FF FF     
   7297 FFFC9B36 FF FF FF FF FF FF FF FF     
   7298 FFFC9B3E FF FF FF FF FF FF FF FF     
   7299 FFFC9B46 FF FF FF FF FF FF FF FF     
   7300 FFFC9B4E FF FF FF FF FF FF FF FF     
   7301 FFFC9B56 FF FF FF FF FF FF FF FF     
   7302 FFFC9B5E FF FF FF FF FF FF FF FF     
   7303 FFFC9B66 FF FF FF FF FF FF FF FF     
   7304 FFFC9B6E FF FF FF FF FF FF FF FF     
   7305 FFFC9B76 FF FF FF FF FF FF FF FF     
   7306 FFFC9B7E FF FF FF FF FF FF FF FF     
   7307 FFFC9B86 FF FF FF FF FF FF FF FF     
   7308 FFFC9B8E FF FF FF FF FF FF FF FF     
   7309 FFFC9B96 FF FF FF FF FF FF FF FF     
   7310 FFFC9B9E FF FF FF FF FF FF FF FF     
   7311 FFFC9BA6 FF FF FF FF FF FF FF FF     
   7312 FFFC9BAE FF FF FF FF FF FF FF FF     
   7313 FFFC9BB6 FF FF FF FF FF FF FF FF     
   7314 FFFC9BBE FF FF FF FF FF FF FF FF     
   7315 FFFC9BC6 FF FF FF FF FF FF FF FF     
   7316 FFFC9BCE FF FF FF FF FF FF FF FF     
   7317 FFFC9BD6 FF FF FF FF FF FF FF FF     
   7318 FFFC9BDE FF FF FF FF FF FF FF FF     
   7319 FFFC9BE6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 66
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7320 FFFC9BEE FF FF FF FF FF FF FF FF     
   7321 FFFC9BF6 FF FF FF FF FF FF FF FF     
   7322 FFFC9BFE FF FF FF FF FF FF FF FF     
   7323 FFFC9C06 FF FF FF FF FF FF FF FF     
   7324 FFFC9C0E FF FF FF FF FF FF FF FF     
   7325 FFFC9C16 FF FF FF FF FF FF FF FF     
   7326 FFFC9C1E FF FF FF FF FF FF FF FF     
   7327 FFFC9C26 FF FF FF FF FF FF FF FF     
   7328 FFFC9C2E FF FF FF FF FF FF FF FF     
   7329 FFFC9C36 FF FF FF FF FF FF FF FF     
   7330 FFFC9C3E FF FF FF FF FF FF FF FF     
   7331 FFFC9C46 FF FF FF FF FF FF FF FF     
   7332 FFFC9C4E FF FF FF FF FF FF FF FF     
   7333 FFFC9C56 FF FF FF FF FF FF FF FF     
   7334 FFFC9C5E FF FF FF FF FF FF FF FF     
   7335 FFFC9C66 FF FF FF FF FF FF FF FF     
   7336 FFFC9C6E FF FF FF FF FF FF FF FF     
   7337 FFFC9C76 FF FF FF FF FF FF FF FF     
   7338 FFFC9C7E FF FF FF FF FF FF FF FF     
   7339 FFFC9C86 FF FF FF FF FF FF FF FF     
   7340 FFFC9C8E FF FF FF FF FF FF FF FF     
   7341 FFFC9C96 FF FF FF FF FF FF FF FF     
   7342 FFFC9C9E FF FF FF FF FF FF FF FF     
   7343 FFFC9CA6 FF FF FF FF FF FF FF FF     
   7344 FFFC9CAE FF FF FF FF FF FF FF FF     
   7345 FFFC9CB6 FF FF FF FF FF FF FF FF     
   7346 FFFC9CBE FF FF FF FF FF FF FF FF     
   7347 FFFC9CC6 FF FF FF FF FF FF FF FF     
   7348 FFFC9CCE FF FF FF FF FF FF FF FF     
   7349 FFFC9CD6 FF FF FF FF FF FF FF FF     
   7350 FFFC9CDE FF FF FF FF FF FF FF FF     
   7351 FFFC9CE6 FF FF FF FF FF FF FF FF     
   7352 FFFC9CEE FF FF FF FF FF FF FF FF     
   7353 FFFC9CF6 FF FF FF FF FF FF FF FF     
   7354 FFFC9CFE FF FF FF FF FF FF FF FF     
   7355 FFFC9D06 FF FF FF FF FF FF FF FF     
   7356 FFFC9D0E FF FF FF FF FF FF FF FF     
   7357 FFFC9D16 FF FF FF FF FF FF FF FF     
   7358 FFFC9D1E FF FF FF FF FF FF FF FF     
   7359 FFFC9D26 FF FF FF FF FF FF FF FF     
   7360 FFFC9D2E FF FF FF FF FF FF FF FF     
   7361 FFFC9D36 FF FF FF FF FF FF FF FF     
   7362 FFFC9D3E FF FF FF FF FF FF FF FF     
   7363 FFFC9D46 FF FF FF FF FF FF FF FF     
   7364 FFFC9D4E FF FF FF FF FF FF FF FF     
   7365 FFFC9D56 FF FF FF FF FF FF FF FF     
   7366 FFFC9D5E FF FF FF FF FF FF FF FF     
   7367 FFFC9D66 FF FF FF FF FF FF FF FF     
   7368 FFFC9D6E FF FF FF FF FF FF FF FF     
   7369 FFFC9D76 FF FF FF FF FF FF FF FF     
   7370 FFFC9D7E FF FF FF FF FF FF FF FF     
   7371 FFFC9D86 FF FF FF FF FF FF FF FF     
   7372 FFFC9D8E FF FF FF FF FF FF FF FF     
   7373 FFFC9D96 FF FF FF FF FF FF FF FF     
   7374 FFFC9D9E FF FF FF FF FF FF FF FF     
   7375 FFFC9DA6 FF FF FF FF FF FF FF FF     
   7376 FFFC9DAE FF FF FF FF FF FF FF FF     
   7377 FFFC9DB6 FF FF FF FF FF FF FF FF     
   7378 FFFC9DBE FF FF FF FF FF FF FF FF     
   7379 FFFC9DC6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 67
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7380 FFFC9DCE FF FF FF FF FF FF FF FF     
   7381 FFFC9DD6 FF FF FF FF FF FF FF FF     
   7382 FFFC9DDE FF FF FF FF FF FF FF FF     
   7383 FFFC9DE6 FF FF FF FF FF FF FF FF     
   7384 FFFC9DEE FF FF FF FF FF FF FF FF     
   7385 FFFC9DF6 FF FF FF FF FF FF FF FF     
   7386 FFFC9DFE FF FF FF FF FF FF FF FF     
   7387 FFFC9E06 FF FF FF FF FF FF FF FF     
   7388 FFFC9E0E FF FF FF FF FF FF FF FF     
   7389 FFFC9E16 FF FF FF FF FF FF FF FF     
   7390 FFFC9E1E FF FF FF FF FF FF FF FF     
   7391 FFFC9E26 FF FF FF FF FF FF FF FF     
   7392 FFFC9E2E FF FF FF FF FF FF FF FF     
   7393 FFFC9E36 FF FF FF FF FF FF FF FF     
   7394 FFFC9E3E FF FF FF FF FF FF FF FF     
   7395 FFFC9E46 FF FF FF FF FF FF FF FF     
   7396 FFFC9E4E FF FF FF FF FF FF FF FF     
   7397 FFFC9E56 FF FF FF FF FF FF FF FF     
   7398 FFFC9E5E FF FF FF FF FF FF FF FF     
   7399 FFFC9E66 FF FF FF FF FF FF FF FF     
   7400 FFFC9E6E FF FF FF FF FF FF FF FF     
   7401 FFFC9E76 FF FF FF FF FF FF FF FF     
   7402 FFFC9E7E FF FF FF FF FF FF FF FF     
   7403 FFFC9E86 FF FF FF FF FF FF FF FF     
   7404 FFFC9E8E FF FF FF FF FF FF FF FF     
   7405 FFFC9E96 FF FF FF FF FF FF FF FF     
   7406 FFFC9E9E FF FF FF FF FF FF FF FF     
   7407 FFFC9EA6 FF FF FF FF FF FF FF FF     
   7408 FFFC9EAE FF FF FF FF FF FF FF FF     
   7409 FFFC9EB6 FF FF FF FF FF FF FF FF     
   7410 FFFC9EBE FF FF FF FF FF FF FF FF     
   7411 FFFC9EC6 FF FF FF FF FF FF FF FF     
   7412 FFFC9ECE FF FF FF FF FF FF FF FF     
   7413 FFFC9ED6 FF FF FF FF FF FF FF FF     
   7414 FFFC9EDE FF FF FF FF FF FF FF FF     
   7415 FFFC9EE6 FF FF FF FF FF FF FF FF     
   7416 FFFC9EEE FF FF FF FF FF FF FF FF     
   7417 FFFC9EF6 FF FF FF FF FF FF FF FF     
   7418 FFFC9EFE FF FF FF FF FF FF FF FF     
   7419 FFFC9F06 FF FF FF FF FF FF FF FF     
   7420 FFFC9F0E FF FF FF FF FF FF FF FF     
   7421 FFFC9F16 FF FF FF FF FF FF FF FF     
   7422 FFFC9F1E FF FF FF FF FF FF FF FF     
   7423 FFFC9F26 FF FF FF FF FF FF FF FF     
   7424 FFFC9F2E FF FF FF FF FF FF FF FF     
   7425 FFFC9F36 FF FF FF FF FF FF FF FF     
   7426 FFFC9F3E FF FF FF FF FF FF FF FF     
   7427 FFFC9F46 FF FF FF FF FF FF FF FF     
   7428 FFFC9F4E FF FF FF FF FF FF FF FF     
   7429 FFFC9F56 FF FF FF FF FF FF FF FF     
   7430 FFFC9F5E FF FF FF FF FF FF FF FF     
   7431 FFFC9F66 FF FF FF FF FF FF FF FF     
   7432 FFFC9F6E FF FF FF FF FF FF FF FF     
   7433 FFFC9F76 FF FF FF FF FF FF FF FF     
   7434 FFFC9F7E FF FF FF FF FF FF FF FF     
   7435 FFFC9F86 FF FF FF FF FF FF FF FF     
   7436 FFFC9F8E FF FF FF FF FF FF FF FF     
   7437 FFFC9F96 FF FF FF FF FF FF FF FF     
   7438 FFFC9F9E FF FF FF FF FF FF FF FF     
   7439 FFFC9FA6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 68
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7440 FFFC9FAE FF FF FF FF FF FF FF FF     
   7441 FFFC9FB6 FF FF FF FF FF FF FF FF     
   7442 FFFC9FBE FF FF FF FF FF FF FF FF     
   7443 FFFC9FC6 FF FF FF FF FF FF FF FF     
   7444 FFFC9FCE FF FF FF FF FF FF FF FF     
   7445 FFFC9FD6 FF FF FF FF FF FF FF FF     
   7446 FFFC9FDE FF FF FF FF FF FF FF FF     
   7447 FFFC9FE6 FF FF FF FF FF FF FF FF     
   7448 FFFC9FEE FF FF FF FF FF FF FF FF     
   7449 FFFC9FF6 FF FF FF FF FF FF FF FF     
   7450 FFFC9FFE FF FF FF FF FF FF FF FF     
   7451 FFFCA006 FF FF FF FF FF FF FF FF     
   7452 FFFCA00E FF FF FF FF FF FF FF FF     
   7453 FFFCA016 FF FF FF FF FF FF FF FF     
   7454 FFFCA01E FF FF FF FF FF FF FF FF     
   7455 FFFCA026 FF FF FF FF FF FF FF FF     
   7456 FFFCA02E FF FF FF FF FF FF FF FF     
   7457 FFFCA036 FF FF FF FF FF FF FF FF     
   7458 FFFCA03E FF FF FF FF FF FF FF FF     
   7459 FFFCA046 FF FF FF FF FF FF FF FF     
   7460 FFFCA04E FF FF FF FF FF FF FF FF     
   7461 FFFCA056 FF FF FF FF FF FF FF FF     
   7462 FFFCA05E FF FF FF FF FF FF FF FF     
   7463 FFFCA066 FF FF FF FF FF FF FF FF     
   7464 FFFCA06E FF FF FF FF FF FF FF FF     
   7465 FFFCA076 FF FF FF FF FF FF FF FF     
   7466 FFFCA07E FF FF FF FF FF FF FF FF     
   7467 FFFCA086 FF FF FF FF FF FF FF FF     
   7468 FFFCA08E FF FF FF FF FF FF FF FF     
   7469 FFFCA096 FF FF FF FF FF FF FF FF     
   7470 FFFCA09E FF FF FF FF FF FF FF FF     
   7471 FFFCA0A6 FF FF FF FF FF FF FF FF     
   7472 FFFCA0AE FF FF FF FF FF FF FF FF     
   7473 FFFCA0B6 FF FF FF FF FF FF FF FF     
   7474 FFFCA0BE FF FF FF FF FF FF FF FF     
   7475 FFFCA0C6 FF FF FF FF FF FF FF FF     
   7476 FFFCA0CE FF FF FF FF FF FF FF FF     
   7477 FFFCA0D6 FF FF FF FF FF FF FF FF     
   7478 FFFCA0DE FF FF FF FF FF FF FF FF     
   7479 FFFCA0E6 FF FF FF FF FF FF FF FF     
   7480 FFFCA0EE FF FF FF FF FF FF FF FF     
   7481 FFFCA0F6 FF FF FF FF FF FF FF FF     
   7482 FFFCA0FE FF FF FF FF FF FF FF FF     
   7483 FFFCA106 FF FF FF FF FF FF FF FF     
   7484 FFFCA10E FF FF FF FF FF FF FF FF     
   7485 FFFCA116 FF FF FF FF FF FF FF FF     
   7486 FFFCA11E FF FF FF FF FF FF FF FF     
   7487 FFFCA126 FF FF FF FF FF FF FF FF     
   7488 FFFCA12E FF FF FF FF FF FF FF FF     
   7489 FFFCA136 FF FF FF FF FF FF FF FF     
   7490 FFFCA13E FF FF FF FF FF FF FF FF     
   7491 FFFCA146 FF FF FF FF FF FF FF FF     
   7492 FFFCA14E FF FF FF FF FF FF FF FF     
   7493 FFFCA156 FF FF FF FF FF FF FF FF     
   7494 FFFCA15E FF FF FF FF FF FF FF FF     
   7495 FFFCA166 FF FF FF FF FF FF FF FF     
   7496 FFFCA16E FF FF FF FF FF FF FF FF     
   7497 FFFCA176 FF FF FF FF FF FF FF FF     
   7498 FFFCA17E FF FF FF FF FF FF FF FF     
   7499 FFFCA186 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 69
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7500 FFFCA18E FF FF FF FF FF FF FF FF     
   7501 FFFCA196 FF FF FF FF FF FF FF FF     
   7502 FFFCA19E FF FF FF FF FF FF FF FF     
   7503 FFFCA1A6 FF FF FF FF FF FF FF FF     
   7504 FFFCA1AE FF FF FF FF FF FF FF FF     
   7505 FFFCA1B6 FF FF FF FF FF FF FF FF     
   7506 FFFCA1BE FF FF FF FF FF FF FF FF     
   7507 FFFCA1C6 FF FF FF FF FF FF FF FF     
   7508 FFFCA1CE FF FF FF FF FF FF FF FF     
   7509 FFFCA1D6 FF FF FF FF FF FF FF FF     
   7510 FFFCA1DE FF FF FF FF FF FF FF FF     
   7511 FFFCA1E6 FF FF FF FF FF FF FF FF     
   7512 FFFCA1EE FF FF FF FF FF FF FF FF     
   7513 FFFCA1F6 FF FF FF FF FF FF FF FF     
   7514 FFFCA1FE FF FF FF FF FF FF FF FF     
   7515 FFFCA206 FF FF FF FF FF FF FF FF     
   7516 FFFCA20E FF FF FF FF FF FF FF FF     
   7517 FFFCA216 FF FF FF FF FF FF FF FF     
   7518 FFFCA21E FF FF FF FF FF FF FF FF     
   7519 FFFCA226 FF FF FF FF FF FF FF FF     
   7520 FFFCA22E FF FF FF FF FF FF FF FF     
   7521 FFFCA236 FF FF FF FF FF FF FF FF     
   7522 FFFCA23E FF FF FF FF FF FF FF FF     
   7523 FFFCA246 FF FF FF FF FF FF FF FF     
   7524 FFFCA24E FF FF FF FF FF FF FF FF     
   7525 FFFCA256 FF FF FF FF FF FF FF FF     
   7526 FFFCA25E FF FF FF FF FF FF FF FF     
   7527 FFFCA266 FF FF FF FF FF FF FF FF     
   7528 FFFCA26E FF FF FF FF FF FF FF FF     
   7529 FFFCA276 FF FF FF FF FF FF FF FF     
   7530 FFFCA27E FF FF FF FF FF FF FF FF     
   7531 FFFCA286 FF FF FF FF FF FF FF FF     
   7532 FFFCA28E FF FF FF FF FF FF FF FF     
   7533 FFFCA296 FF FF FF FF FF FF FF FF     
   7534 FFFCA29E FF FF FF FF FF FF FF FF     
   7535 FFFCA2A6 FF FF FF FF FF FF FF FF     
   7536 FFFCA2AE FF FF FF FF FF FF FF FF     
   7537 FFFCA2B6 FF FF FF FF FF FF FF FF     
   7538 FFFCA2BE FF FF FF FF FF FF FF FF     
   7539 FFFCA2C6 FF FF FF FF FF FF FF FF     
   7540 FFFCA2CE FF FF FF FF FF FF FF FF     
   7541 FFFCA2D6 FF FF FF FF FF FF FF FF     
   7542 FFFCA2DE FF FF FF FF FF FF FF FF     
   7543 FFFCA2E6 FF FF FF FF FF FF FF FF     
   7544 FFFCA2EE FF FF FF FF FF FF FF FF     
   7545 FFFCA2F6 FF FF FF FF FF FF FF FF     
   7546 FFFCA2FE FF FF FF FF FF FF FF FF     
   7547 FFFCA306 FF FF FF FF FF FF FF FF     
   7548 FFFCA30E FF FF FF FF FF FF FF FF     
   7549 FFFCA316 FF FF FF FF FF FF FF FF     
   7550 FFFCA31E FF FF FF FF FF FF FF FF     
   7551 FFFCA326 FF FF FF FF FF FF FF FF     
   7552 FFFCA32E FF FF FF FF FF FF FF FF     
   7553 FFFCA336 FF FF FF FF FF FF FF FF     
   7554 FFFCA33E FF FF FF FF FF FF FF FF     
   7555 FFFCA346 FF FF FF FF FF FF FF FF     
   7556 FFFCA34E FF FF FF FF FF FF FF FF     
   7557 FFFCA356 FF FF FF FF FF FF FF FF     
   7558 FFFCA35E FF FF FF FF FF FF FF FF     
   7559 FFFCA366 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 70
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7560 FFFCA36E FF FF FF FF FF FF FF FF     
   7561 FFFCA376 FF FF FF FF FF FF FF FF     
   7562 FFFCA37E FF FF FF FF FF FF FF FF     
   7563 FFFCA386 FF FF FF FF FF FF FF FF     
   7564 FFFCA38E FF FF FF FF FF FF FF FF     
   7565 FFFCA396 FF FF FF FF FF FF FF FF     
   7566 FFFCA39E FF FF FF FF FF FF FF FF     
   7567 FFFCA3A6 FF FF FF FF FF FF FF FF     
   7568 FFFCA3AE FF FF FF FF FF FF FF FF     
   7569 FFFCA3B6 FF FF FF FF FF FF FF FF     
   7570 FFFCA3BE FF FF FF FF FF FF FF FF     
   7571 FFFCA3C6 FF FF FF FF FF FF FF FF     
   7572 FFFCA3CE FF FF FF FF FF FF FF FF     
   7573 FFFCA3D6 FF FF FF FF FF FF FF FF     
   7574 FFFCA3DE FF FF FF FF FF FF FF FF     
   7575 FFFCA3E6 FF FF FF FF FF FF FF FF     
   7576 FFFCA3EE FF FF FF FF FF FF FF FF     
   7577 FFFCA3F6 FF FF FF FF FF FF FF FF     
   7578 FFFCA3FE FF FF FF FF FF FF FF FF     
   7579 FFFCA406 FF FF FF FF FF FF FF FF     
   7580 FFFCA40E FF FF FF FF FF FF FF FF     
   7581 FFFCA416 FF FF FF FF FF FF FF FF     
   7582 FFFCA41E FF FF FF FF FF FF FF FF     
   7583 FFFCA426 FF FF FF FF FF FF FF FF     
   7584 FFFCA42E FF FF FF FF FF FF FF FF     
   7585 FFFCA436 FF FF FF FF FF FF FF FF     
   7586 FFFCA43E FF FF FF FF FF FF FF FF     
   7587 FFFCA446 FF FF FF FF FF FF FF FF     
   7588 FFFCA44E FF FF FF FF FF FF FF FF     
   7589 FFFCA456 FF FF FF FF FF FF FF FF     
   7590 FFFCA45E FF FF FF FF FF FF FF FF     
   7591 FFFCA466 FF FF FF FF FF FF FF FF     
   7592 FFFCA46E FF FF FF FF FF FF FF FF     
   7593 FFFCA476 FF FF FF FF FF FF FF FF     
   7594 FFFCA47E FF FF FF FF FF FF FF FF     
   7595 FFFCA486 FF FF FF FF FF FF FF FF     
   7596 FFFCA48E FF FF FF FF FF FF FF FF     
   7597 FFFCA496 FF FF FF FF FF FF FF FF     
   7598 FFFCA49E FF FF FF FF FF FF FF FF     
   7599 FFFCA4A6 FF FF FF FF FF FF FF FF     
   7600 FFFCA4AE FF FF FF FF FF FF FF FF     
   7601 FFFCA4B6 FF FF FF FF FF FF FF FF     
   7602 FFFCA4BE FF FF FF FF FF FF FF FF     
   7603 FFFCA4C6 FF FF FF FF FF FF FF FF     
   7604 FFFCA4CE FF FF FF FF FF FF FF FF     
   7605 FFFCA4D6 FF FF FF FF FF FF FF FF     
   7606 FFFCA4DE FF FF FF FF FF FF FF FF     
   7607 FFFCA4E6 FF FF FF FF FF FF FF FF     
   7608 FFFCA4EE FF FF FF FF FF FF FF FF     
   7609 FFFCA4F6 FF FF FF FF FF FF FF FF     
   7610 FFFCA4FE FF FF FF FF FF FF FF FF     
   7611 FFFCA506 FF FF FF FF FF FF FF FF     
   7612 FFFCA50E FF FF FF FF FF FF FF FF     
   7613 FFFCA516 FF FF FF FF FF FF FF FF     
   7614 FFFCA51E FF FF FF FF FF FF FF FF     
   7615 FFFCA526 FF FF FF FF FF FF FF FF     
   7616 FFFCA52E FF FF FF FF FF FF FF FF     
   7617 FFFCA536 FF FF FF FF FF FF FF FF     
   7618 FFFCA53E FF FF FF FF FF FF FF FF     
   7619 FFFCA546 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 71
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7620 FFFCA54E FF FF FF FF FF FF FF FF     
   7621 FFFCA556 FF FF FF FF FF FF FF FF     
   7622 FFFCA55E FF FF FF FF FF FF FF FF     
   7623 FFFCA566 FF FF FF FF FF FF FF FF     
   7624 FFFCA56E FF FF FF FF FF FF FF FF     
   7625 FFFCA576 FF FF FF FF FF FF FF FF     
   7626 FFFCA57E FF FF FF FF FF FF FF FF     
   7627 FFFCA586 FF FF FF FF FF FF FF FF     
   7628 FFFCA58E FF FF FF FF FF FF FF FF     
   7629 FFFCA596 FF FF FF FF FF FF FF FF     
   7630 FFFCA59E FF FF FF FF FF FF FF FF     
   7631 FFFCA5A6 FF FF FF FF FF FF FF FF     
   7632 FFFCA5AE FF FF FF FF FF FF FF FF     
   7633 FFFCA5B6 FF FF FF FF FF FF FF FF     
   7634 FFFCA5BE FF FF FF FF FF FF FF FF     
   7635 FFFCA5C6 FF FF FF FF FF FF FF FF     
   7636 FFFCA5CE FF FF FF FF FF FF FF FF     
   7637 FFFCA5D6 FF FF FF FF FF FF FF FF     
   7638 FFFCA5DE FF FF FF FF FF FF FF FF     
   7639 FFFCA5E6 FF FF FF FF FF FF FF FF     
   7640 FFFCA5EE FF FF FF FF FF FF FF FF     
   7641 FFFCA5F6 FF FF FF FF FF FF FF FF     
   7642 FFFCA5FE FF FF FF FF FF FF FF FF     
   7643 FFFCA606 FF FF FF FF FF FF FF FF     
   7644 FFFCA60E FF FF FF FF FF FF FF FF     
   7645 FFFCA616 FF FF FF FF FF FF FF FF     
   7646 FFFCA61E FF FF FF FF FF FF FF FF     
   7647 FFFCA626 FF FF FF FF FF FF FF FF     
   7648 FFFCA62E FF FF FF FF FF FF FF FF     
   7649 FFFCA636 FF FF FF FF FF FF FF FF     
   7650 FFFCA63E FF FF FF FF FF FF FF FF     
   7651 FFFCA646 FF FF FF FF FF FF FF FF     
   7652 FFFCA64E FF FF FF FF FF FF FF FF     
   7653 FFFCA656 FF FF FF FF FF FF FF FF     
   7654 FFFCA65E FF FF FF FF FF FF FF FF     
   7655 FFFCA666 FF FF FF FF FF FF FF FF     
   7656 FFFCA66E FF FF FF FF FF FF FF FF     
   7657 FFFCA676 FF FF FF FF FF FF FF FF     
   7658 FFFCA67E FF FF FF FF FF FF FF FF     
   7659 FFFCA686 FF FF FF FF FF FF FF FF     
   7660 FFFCA68E FF FF FF FF FF FF FF FF     
   7661 FFFCA696 FF FF FF FF FF FF FF FF     
   7662 FFFCA69E FF FF FF FF FF FF FF FF     
   7663 FFFCA6A6 FF FF FF FF FF FF FF FF     
   7664 FFFCA6AE FF FF FF FF FF FF FF FF     
   7665 FFFCA6B6 FF FF FF FF FF FF FF FF     
   7666 FFFCA6BE FF FF FF FF FF FF FF FF     
   7667 FFFCA6C6 FF FF FF FF FF FF FF FF     
   7668 FFFCA6CE FF FF FF FF FF FF FF FF     
   7669 FFFCA6D6 FF FF FF FF FF FF FF FF     
   7670 FFFCA6DE FF FF FF FF FF FF FF FF     
   7671 FFFCA6E6 FF FF FF FF FF FF FF FF     
   7672 FFFCA6EE FF FF FF FF FF FF FF FF     
   7673 FFFCA6F6 FF FF FF FF FF FF FF FF     
   7674 FFFCA6FE FF FF FF FF FF FF FF FF     
   7675 FFFCA706 FF FF FF FF FF FF FF FF     
   7676 FFFCA70E FF FF FF FF FF FF FF FF     
   7677 FFFCA716 FF FF FF FF FF FF FF FF     
   7678 FFFCA71E FF FF FF FF FF FF FF FF     
   7679 FFFCA726 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 72
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7680 FFFCA72E FF FF FF FF FF FF FF FF     
   7681 FFFCA736 FF FF FF FF FF FF FF FF     
   7682 FFFCA73E FF FF FF FF FF FF FF FF     
   7683 FFFCA746 FF FF FF FF FF FF FF FF     
   7684 FFFCA74E FF FF FF FF FF FF FF FF     
   7685 FFFCA756 FF FF FF FF FF FF FF FF     
   7686 FFFCA75E FF FF FF FF FF FF FF FF     
   7687 FFFCA766 FF FF FF FF FF FF FF FF     
   7688 FFFCA76E FF FF FF FF FF FF FF FF     
   7689 FFFCA776 FF FF FF FF FF FF FF FF     
   7690 FFFCA77E FF FF FF FF FF FF FF FF     
   7691 FFFCA786 FF FF FF FF FF FF FF FF     
   7692 FFFCA78E FF FF FF FF FF FF FF FF     
   7693 FFFCA796 FF FF FF FF FF FF FF FF     
   7694 FFFCA79E FF FF FF FF FF FF FF FF     
   7695 FFFCA7A6 FF FF FF FF FF FF FF FF     
   7696 FFFCA7AE FF FF FF FF FF FF FF FF     
   7697 FFFCA7B6 FF FF FF FF FF FF FF FF     
   7698 FFFCA7BE FF FF FF FF FF FF FF FF     
   7699 FFFCA7C6 FF FF FF FF FF FF FF FF     
   7700 FFFCA7CE FF FF FF FF FF FF FF FF     
   7701 FFFCA7D6 FF FF FF FF FF FF FF FF     
   7702 FFFCA7DE FF FF FF FF FF FF FF FF     
   7703 FFFCA7E6 FF FF FF FF FF FF FF FF     
   7704 FFFCA7EE FF FF FF FF FF FF FF FF     
   7705 FFFCA7F6 FF FF FF FF FF FF FF FF     
   7706 FFFCA7FE FF FF FF FF FF FF FF FF     
   7707 FFFCA806 FF FF FF FF FF FF FF FF     
   7708 FFFCA80E FF FF FF FF FF FF FF FF     
   7709 FFFCA816 FF FF FF FF FF FF FF FF     
   7710 FFFCA81E FF FF FF FF FF FF FF FF     
   7711 FFFCA826 FF FF FF FF FF FF FF FF     
   7712 FFFCA82E FF FF FF FF FF FF FF FF     
   7713 FFFCA836 FF FF FF FF FF FF FF FF     
   7714 FFFCA83E FF FF FF FF FF FF FF FF     
   7715 FFFCA846 FF FF FF FF FF FF FF FF     
   7716 FFFCA84E FF FF FF FF FF FF FF FF     
   7717 FFFCA856 FF FF FF FF FF FF FF FF     
   7718 FFFCA85E FF FF FF FF FF FF FF FF     
   7719 FFFCA866 FF FF FF FF FF FF FF FF     
   7720 FFFCA86E FF FF FF FF FF FF FF FF     
   7721 FFFCA876 FF FF FF FF FF FF FF FF     
   7722 FFFCA87E FF FF FF FF FF FF FF FF     
   7723 FFFCA886 FF FF FF FF FF FF FF FF     
   7724 FFFCA88E FF FF FF FF FF FF FF FF     
   7725 FFFCA896 FF FF FF FF FF FF FF FF     
   7726 FFFCA89E FF FF FF FF FF FF FF FF     
   7727 FFFCA8A6 FF FF FF FF FF FF FF FF     
   7728 FFFCA8AE FF FF FF FF FF FF FF FF     
   7729 FFFCA8B6 FF FF FF FF FF FF FF FF     
   7730 FFFCA8BE FF FF FF FF FF FF FF FF     
   7731 FFFCA8C6 FF FF FF FF FF FF FF FF     
   7732 FFFCA8CE FF FF FF FF FF FF FF FF     
   7733 FFFCA8D6 FF FF FF FF FF FF FF FF     
   7734 FFFCA8DE FF FF FF FF FF FF FF FF     
   7735 FFFCA8E6 FF FF FF FF FF FF FF FF     
   7736 FFFCA8EE FF FF FF FF FF FF FF FF     
   7737 FFFCA8F6 FF FF FF FF FF FF FF FF     
   7738 FFFCA8FE FF FF FF FF FF FF FF FF     
   7739 FFFCA906 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 73
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7740 FFFCA90E FF FF FF FF FF FF FF FF     
   7741 FFFCA916 FF FF FF FF FF FF FF FF     
   7742 FFFCA91E FF FF FF FF FF FF FF FF     
   7743 FFFCA926 FF FF FF FF FF FF FF FF     
   7744 FFFCA92E FF FF FF FF FF FF FF FF     
   7745 FFFCA936 FF FF FF FF FF FF FF FF     
   7746 FFFCA93E FF FF FF FF FF FF FF FF     
   7747 FFFCA946 FF FF FF FF FF FF FF FF     
   7748 FFFCA94E FF FF FF FF FF FF FF FF     
   7749 FFFCA956 FF FF FF FF FF FF FF FF     
   7750 FFFCA95E FF FF FF FF FF FF FF FF     
   7751 FFFCA966 FF FF FF FF FF FF FF FF     
   7752 FFFCA96E FF FF FF FF FF FF FF FF     
   7753 FFFCA976 FF FF FF FF FF FF FF FF     
   7754 FFFCA97E FF FF FF FF FF FF FF FF     
   7755 FFFCA986 FF FF FF FF FF FF FF FF     
   7756 FFFCA98E FF FF FF FF FF FF FF FF     
   7757 FFFCA996 FF FF FF FF FF FF FF FF     
   7758 FFFCA99E FF FF FF FF FF FF FF FF     
   7759 FFFCA9A6 FF FF FF FF FF FF FF FF     
   7760 FFFCA9AE FF FF FF FF FF FF FF FF     
   7761 FFFCA9B6 FF FF FF FF FF FF FF FF     
   7762 FFFCA9BE FF FF FF FF FF FF FF FF     
   7763 FFFCA9C6 FF FF FF FF FF FF FF FF     
   7764 FFFCA9CE FF FF FF FF FF FF FF FF     
   7765 FFFCA9D6 FF FF FF FF FF FF FF FF     
   7766 FFFCA9DE FF FF FF FF FF FF FF FF     
   7767 FFFCA9E6 FF FF FF FF FF FF FF FF     
   7768 FFFCA9EE FF FF FF FF FF FF FF FF     
   7769 FFFCA9F6 FF FF FF FF FF FF FF FF     
   7770 FFFCA9FE FF FF FF FF FF FF FF FF     
   7771 FFFCAA06 FF FF FF FF FF FF FF FF     
   7772 FFFCAA0E FF FF FF FF FF FF FF FF     
   7773 FFFCAA16 FF FF FF FF FF FF FF FF     
   7774 FFFCAA1E FF FF FF FF FF FF FF FF     
   7775 FFFCAA26 FF FF FF FF FF FF FF FF     
   7776 FFFCAA2E FF FF FF FF FF FF FF FF     
   7777 FFFCAA36 FF FF FF FF FF FF FF FF     
   7778 FFFCAA3E FF FF FF FF FF FF FF FF     
   7779 FFFCAA46 FF FF FF FF FF FF FF FF     
   7780 FFFCAA4E FF FF FF FF FF FF FF FF     
   7781 FFFCAA56 FF FF FF FF FF FF FF FF     
   7782 FFFCAA5E FF FF FF FF FF FF FF FF     
   7783 FFFCAA66 FF FF FF FF FF FF FF FF     
   7784 FFFCAA6E FF FF FF FF FF FF FF FF     
   7785 FFFCAA76 FF FF FF FF FF FF FF FF     
   7786 FFFCAA7E FF FF FF FF FF FF FF FF     
   7787 FFFCAA86 FF FF FF FF FF FF FF FF     
   7788 FFFCAA8E FF FF FF FF FF FF FF FF     
   7789 FFFCAA96 FF FF FF FF FF FF FF FF     
   7790 FFFCAA9E FF FF FF FF FF FF FF FF     
   7791 FFFCAAA6 FF FF FF FF FF FF FF FF     
   7792 FFFCAAAE FF FF FF FF FF FF FF FF     
   7793 FFFCAAB6 FF FF FF FF FF FF FF FF     
   7794 FFFCAABE FF FF FF FF FF FF FF FF     
   7795 FFFCAAC6 FF FF FF FF FF FF FF FF     
   7796 FFFCAACE FF FF FF FF FF FF FF FF     
   7797 FFFCAAD6 FF FF FF FF FF FF FF FF     
   7798 FFFCAADE FF FF FF FF FF FF FF FF     
   7799 FFFCAAE6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 74
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7800 FFFCAAEE FF FF FF FF FF FF FF FF     
   7801 FFFCAAF6 FF FF FF FF FF FF FF FF     
   7802 FFFCAAFE FF FF FF FF FF FF FF FF     
   7803 FFFCAB06 FF FF FF FF FF FF FF FF     
   7804 FFFCAB0E FF FF FF FF FF FF FF FF     
   7805 FFFCAB16 FF FF FF FF FF FF FF FF     
   7806 FFFCAB1E FF FF FF FF FF FF FF FF     
   7807 FFFCAB26 FF FF FF FF FF FF FF FF     
   7808 FFFCAB2E FF FF FF FF FF FF FF FF     
   7809 FFFCAB36 FF FF FF FF FF FF FF FF     
   7810 FFFCAB3E FF FF FF FF FF FF FF FF     
   7811 FFFCAB46 FF FF FF FF FF FF FF FF     
   7812 FFFCAB4E FF FF FF FF FF FF FF FF     
   7813 FFFCAB56 FF FF FF FF FF FF FF FF     
   7814 FFFCAB5E FF FF FF FF FF FF FF FF     
   7815 FFFCAB66 FF FF FF FF FF FF FF FF     
   7816 FFFCAB6E FF FF FF FF FF FF FF FF     
   7817 FFFCAB76 FF FF FF FF FF FF FF FF     
   7818 FFFCAB7E FF FF FF FF FF FF FF FF     
   7819 FFFCAB86 FF FF FF FF FF FF FF FF     
   7820 FFFCAB8E FF FF FF FF FF FF FF FF     
   7821 FFFCAB96 FF FF FF FF FF FF FF FF     
   7822 FFFCAB9E FF FF FF FF FF FF FF FF     
   7823 FFFCABA6 FF FF FF FF FF FF FF FF     
   7824 FFFCABAE FF FF FF FF FF FF FF FF     
   7825 FFFCABB6 FF FF FF FF FF FF FF FF     
   7826 FFFCABBE FF FF FF FF FF FF FF FF     
   7827 FFFCABC6 FF FF FF FF FF FF FF FF     
   7828 FFFCABCE FF FF FF FF FF FF FF FF     
   7829 FFFCABD6 FF FF FF FF FF FF FF FF     
   7830 FFFCABDE FF FF FF FF FF FF FF FF     
   7831 FFFCABE6 FF FF FF FF FF FF FF FF     
   7832 FFFCABEE FF FF FF FF FF FF FF FF     
   7833 FFFCABF6 FF FF FF FF FF FF FF FF     
   7834 FFFCABFE FF FF FF FF FF FF FF FF     
   7835 FFFCAC06 FF FF FF FF FF FF FF FF     
   7836 FFFCAC0E FF FF FF FF FF FF FF FF     
   7837 FFFCAC16 FF FF FF FF FF FF FF FF     
   7838 FFFCAC1E FF FF FF FF FF FF FF FF     
   7839 FFFCAC26 FF FF FF FF FF FF FF FF     
   7840 FFFCAC2E FF FF FF FF FF FF FF FF     
   7841 FFFCAC36 FF FF FF FF FF FF FF FF     
   7842 FFFCAC3E FF FF FF FF FF FF FF FF     
   7843 FFFCAC46 FF FF FF FF FF FF FF FF     
   7844 FFFCAC4E FF FF FF FF FF FF FF FF     
   7845 FFFCAC56 FF FF FF FF FF FF FF FF     
   7846 FFFCAC5E FF FF FF FF FF FF FF FF     
   7847 FFFCAC66 FF FF FF FF FF FF FF FF     
   7848 FFFCAC6E FF FF FF FF FF FF FF FF     
   7849 FFFCAC76 FF FF FF FF FF FF FF FF     
   7850 FFFCAC7E FF FF FF FF FF FF FF FF     
   7851 FFFCAC86 FF FF FF FF FF FF FF FF     
   7852 FFFCAC8E FF FF FF FF FF FF FF FF     
   7853 FFFCAC96 FF FF FF FF FF FF FF FF     
   7854 FFFCAC9E FF FF FF FF FF FF FF FF     
   7855 FFFCACA6 FF FF FF FF FF FF FF FF     
   7856 FFFCACAE FF FF FF FF FF FF FF FF     
   7857 FFFCACB6 FF FF FF FF FF FF FF FF     
   7858 FFFCACBE FF FF FF FF FF FF FF FF     
   7859 FFFCACC6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 75
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7860 FFFCACCE FF FF FF FF FF FF FF FF     
   7861 FFFCACD6 FF FF FF FF FF FF FF FF     
   7862 FFFCACDE FF FF FF FF FF FF FF FF     
   7863 FFFCACE6 FF FF FF FF FF FF FF FF     
   7864 FFFCACEE FF FF FF FF FF FF FF FF     
   7865 FFFCACF6 FF FF FF FF FF FF FF FF     
   7866 FFFCACFE FF FF FF FF FF FF FF FF     
   7867 FFFCAD06 FF FF FF FF FF FF FF FF     
   7868 FFFCAD0E FF FF FF FF FF FF FF FF     
   7869 FFFCAD16 FF FF FF FF FF FF FF FF     
   7870 FFFCAD1E FF FF FF FF FF FF FF FF     
   7871 FFFCAD26 FF FF FF FF FF FF FF FF     
   7872 FFFCAD2E FF FF FF FF FF FF FF FF     
   7873 FFFCAD36 FF FF FF FF FF FF FF FF     
   7874 FFFCAD3E FF FF FF FF FF FF FF FF     
   7875 FFFCAD46 FF FF FF FF FF FF FF FF     
   7876 FFFCAD4E FF FF FF FF FF FF FF FF     
   7877 FFFCAD56 FF FF FF FF FF FF FF FF     
   7878 FFFCAD5E FF FF FF FF FF FF FF FF     
   7879 FFFCAD66 FF FF FF FF FF FF FF FF     
   7880 FFFCAD6E FF FF FF FF FF FF FF FF     
   7881 FFFCAD76 FF FF FF FF FF FF FF FF     
   7882 FFFCAD7E FF FF FF FF FF FF FF FF     
   7883 FFFCAD86 FF FF FF FF FF FF FF FF     
   7884 FFFCAD8E FF FF FF FF FF FF FF FF     
   7885 FFFCAD96 FF FF FF FF FF FF FF FF     
   7886 FFFCAD9E FF FF FF FF FF FF FF FF     
   7887 FFFCADA6 FF FF FF FF FF FF FF FF     
   7888 FFFCADAE FF FF FF FF FF FF FF FF     
   7889 FFFCADB6 FF FF FF FF FF FF FF FF     
   7890 FFFCADBE FF FF FF FF FF FF FF FF     
   7891 FFFCADC6 FF FF FF FF FF FF FF FF     
   7892 FFFCADCE FF FF FF FF FF FF FF FF     
   7893 FFFCADD6 FF FF FF FF FF FF FF FF     
   7894 FFFCADDE FF FF FF FF FF FF FF FF     
   7895 FFFCADE6 FF FF FF FF FF FF FF FF     
   7896 FFFCADEE FF FF FF FF FF FF FF FF     
   7897 FFFCADF6 FF FF FF FF FF FF FF FF     
   7898 FFFCADFE FF FF FF FF FF FF FF FF     
   7899 FFFCAE06 FF FF FF FF FF FF FF FF     
   7900 FFFCAE0E FF FF FF FF FF FF FF FF     
   7901 FFFCAE16 FF FF FF FF FF FF FF FF     
   7902 FFFCAE1E FF FF FF FF FF FF FF FF     
   7903 FFFCAE26 FF FF FF FF FF FF FF FF     
   7904 FFFCAE2E FF FF FF FF FF FF FF FF     
   7905 FFFCAE36 FF FF FF FF FF FF FF FF     
   7906 FFFCAE3E FF FF FF FF FF FF FF FF     
   7907 FFFCAE46 FF FF FF FF FF FF FF FF     
   7908 FFFCAE4E FF FF FF FF FF FF FF FF     
   7909 FFFCAE56 FF FF FF FF FF FF FF FF     
   7910 FFFCAE5E FF FF FF FF FF FF FF FF     
   7911 FFFCAE66 FF FF FF FF FF FF FF FF     
   7912 FFFCAE6E FF FF FF FF FF FF FF FF     
   7913 FFFCAE76 FF FF FF FF FF FF FF FF     
   7914 FFFCAE7E FF FF FF FF FF FF FF FF     
   7915 FFFCAE86 FF FF FF FF FF FF FF FF     
   7916 FFFCAE8E FF FF FF FF FF FF FF FF     
   7917 FFFCAE96 FF FF FF FF FF FF FF FF     
   7918 FFFCAE9E FF FF FF FF FF FF FF FF     
   7919 FFFCAEA6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 76
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7920 FFFCAEAE FF FF FF FF FF FF FF FF     
   7921 FFFCAEB6 FF FF FF FF FF FF FF FF     
   7922 FFFCAEBE FF FF FF FF FF FF FF FF     
   7923 FFFCAEC6 FF FF FF FF FF FF FF FF     
   7924 FFFCAECE FF FF FF FF FF FF FF FF     
   7925 FFFCAED6 FF FF FF FF FF FF FF FF     
   7926 FFFCAEDE FF FF FF FF FF FF FF FF     
   7927 FFFCAEE6 FF FF FF FF FF FF FF FF     
   7928 FFFCAEEE FF FF FF FF FF FF FF FF     
   7929 FFFCAEF6 FF FF FF FF FF FF FF FF     
   7930 FFFCAEFE FF FF FF FF FF FF FF FF     
   7931 FFFCAF06 FF FF FF FF FF FF FF FF     
   7932 FFFCAF0E FF FF FF FF FF FF FF FF     
   7933 FFFCAF16 FF FF FF FF FF FF FF FF     
   7934 FFFCAF1E FF FF FF FF FF FF FF FF     
   7935 FFFCAF26 FF FF FF FF FF FF FF FF     
   7936 FFFCAF2E FF FF FF FF FF FF FF FF     
   7937 FFFCAF36 FF FF FF FF FF FF FF FF     
   7938 FFFCAF3E FF FF FF FF FF FF FF FF     
   7939 FFFCAF46 FF FF FF FF FF FF FF FF     
   7940 FFFCAF4E FF FF FF FF FF FF FF FF     
   7941 FFFCAF56 FF FF FF FF FF FF FF FF     
   7942 FFFCAF5E FF FF FF FF FF FF FF FF     
   7943 FFFCAF66 FF FF FF FF FF FF FF FF     
   7944 FFFCAF6E FF FF FF FF FF FF FF FF     
   7945 FFFCAF76 FF FF FF FF FF FF FF FF     
   7946 FFFCAF7E FF FF FF FF FF FF FF FF     
   7947 FFFCAF86 FF FF FF FF FF FF FF FF     
   7948 FFFCAF8E FF FF FF FF FF FF FF FF     
   7949 FFFCAF96 FF FF FF FF FF FF FF FF     
   7950 FFFCAF9E FF FF FF FF FF FF FF FF     
   7951 FFFCAFA6 FF FF FF FF FF FF FF FF     
   7952 FFFCAFAE FF FF FF FF FF FF FF FF     
   7953 FFFCAFB6 FF FF FF FF FF FF FF FF     
   7954 FFFCAFBE FF FF FF FF FF FF FF FF     
   7955 FFFCAFC6 FF FF FF FF FF FF FF FF     
   7956 FFFCAFCE FF FF FF FF FF FF FF FF     
   7957 FFFCAFD6 FF FF FF FF FF FF FF FF     
   7958 FFFCAFDE FF FF FF FF FF FF FF FF     
   7959 FFFCAFE6 FF FF FF FF FF FF FF FF     
   7960 FFFCAFEE FF FF FF FF FF FF FF FF     
   7961 FFFCAFF6 FF FF FF FF FF FF FF FF     
   7962 FFFCAFFE FF FF FF FF FF FF FF FF     
   7963 FFFCB006 FF FF FF FF FF FF FF FF     
   7964 FFFCB00E FF FF FF FF FF FF FF FF     
   7965 FFFCB016 FF FF FF FF FF FF FF FF     
   7966 FFFCB01E FF FF FF FF FF FF FF FF     
   7967 FFFCB026 FF FF FF FF FF FF FF FF     
   7968 FFFCB02E FF FF FF FF FF FF FF FF     
   7969 FFFCB036 FF FF FF FF FF FF FF FF     
   7970 FFFCB03E FF FF FF FF FF FF FF FF     
   7971 FFFCB046 FF FF FF FF FF FF FF FF     
   7972 FFFCB04E FF FF FF FF FF FF FF FF     
   7973 FFFCB056 FF FF FF FF FF FF FF FF     
   7974 FFFCB05E FF FF FF FF FF FF FF FF     
   7975 FFFCB066 FF FF FF FF FF FF FF FF     
   7976 FFFCB06E FF FF FF FF FF FF FF FF     
   7977 FFFCB076 FF FF FF FF FF FF FF FF     
   7978 FFFCB07E FF FF FF FF FF FF FF FF     
   7979 FFFCB086 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 77
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7980 FFFCB08E FF FF FF FF FF FF FF FF     
   7981 FFFCB096 FF FF FF FF FF FF FF FF     
   7982 FFFCB09E FF FF FF FF FF FF FF FF     
   7983 FFFCB0A6 FF FF FF FF FF FF FF FF     
   7984 FFFCB0AE FF FF FF FF FF FF FF FF     
   7985 FFFCB0B6 FF FF FF FF FF FF FF FF     
   7986 FFFCB0BE FF FF FF FF FF FF FF FF     
   7987 FFFCB0C6 FF FF FF FF FF FF FF FF     
   7988 FFFCB0CE FF FF FF FF FF FF FF FF     
   7989 FFFCB0D6 FF FF FF FF FF FF FF FF     
   7990 FFFCB0DE FF FF FF FF FF FF FF FF     
   7991 FFFCB0E6 FF FF FF FF FF FF FF FF     
   7992 FFFCB0EE FF FF FF FF FF FF FF FF     
   7993 FFFCB0F6 FF FF FF FF FF FF FF FF     
   7994 FFFCB0FE FF FF FF FF FF FF FF FF     
   7995 FFFCB106 FF FF FF FF FF FF FF FF     
   7996 FFFCB10E FF FF FF FF FF FF FF FF     
   7997 FFFCB116 FF FF FF FF FF FF FF FF     
   7998 FFFCB11E FF FF FF FF FF FF FF FF     
   7999 FFFCB126 FF FF FF FF FF FF FF FF     
   8000 FFFCB12E FF FF FF FF FF FF FF FF     
   8001 FFFCB136 FF FF FF FF FF FF FF FF     
   8002 FFFCB13E FF FF FF FF FF FF FF FF     
   8003 FFFCB146 FF FF FF FF FF FF FF FF     
   8004 FFFCB14E FF FF FF FF FF FF FF FF     
   8005 FFFCB156 FF FF FF FF FF FF FF FF     
   8006 FFFCB15E FF FF FF FF FF FF FF FF     
   8007 FFFCB166 FF FF FF FF FF FF FF FF     
   8008 FFFCB16E FF FF FF FF FF FF FF FF     
   8009 FFFCB176 FF FF FF FF FF FF FF FF     
   8010 FFFCB17E FF FF FF FF FF FF FF FF     
   8011 FFFCB186 FF FF FF FF FF FF FF FF     
   8012 FFFCB18E FF FF FF FF FF FF FF FF     
   8013 FFFCB196 FF FF FF FF FF FF FF FF     
   8014 FFFCB19E FF FF FF FF FF FF FF FF     
   8015 FFFCB1A6 FF FF FF FF FF FF FF FF     
   8016 FFFCB1AE FF FF FF FF FF FF FF FF     
   8017 FFFCB1B6 FF FF FF FF FF FF FF FF     
   8018 FFFCB1BE FF FF FF FF FF FF FF FF     
   8019 FFFCB1C6 FF FF FF FF FF FF FF FF     
   8020 FFFCB1CE FF FF FF FF FF FF FF FF     
   8021 FFFCB1D6 FF FF FF FF FF FF FF FF     
   8022 FFFCB1DE FF FF FF FF FF FF FF FF     
   8023 FFFCB1E6 FF FF FF FF FF FF FF FF     
   8024 FFFCB1EE FF FF FF FF FF FF FF FF     
   8025 FFFCB1F6 FF FF FF FF FF FF FF FF     
   8026 FFFCB1FE FF FF FF FF FF FF FF FF     
   8027 FFFCB206 FF FF FF FF FF FF FF FF     
   8028 FFFCB20E FF FF FF FF FF FF FF FF     
   8029 FFFCB216 FF FF FF FF FF FF FF FF     
   8030 FFFCB21E FF FF FF FF FF FF FF FF     
   8031 FFFCB226 FF FF FF FF FF FF FF FF     
   8032 FFFCB22E FF FF FF FF FF FF FF FF     
   8033 FFFCB236 FF FF FF FF FF FF FF FF     
   8034 FFFCB23E FF FF FF FF FF FF FF FF     
   8035 FFFCB246 FF FF FF FF FF FF FF FF     
   8036 FFFCB24E FF FF FF FF FF FF FF FF     
   8037 FFFCB256 FF FF FF FF FF FF FF FF     
   8038 FFFCB25E FF FF FF FF FF FF FF FF     
   8039 FFFCB266 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 78
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8040 FFFCB26E FF FF FF FF FF FF FF FF     
   8041 FFFCB276 FF FF FF FF FF FF FF FF     
   8042 FFFCB27E FF FF FF FF FF FF FF FF     
   8043 FFFCB286 FF FF FF FF FF FF FF FF     
   8044 FFFCB28E FF FF FF FF FF FF FF FF     
   8045 FFFCB296 FF FF FF FF FF FF FF FF     
   8046 FFFCB29E FF FF FF FF FF FF FF FF     
   8047 FFFCB2A6 FF FF FF FF FF FF FF FF     
   8048 FFFCB2AE FF FF FF FF FF FF FF FF     
   8049 FFFCB2B6 FF FF FF FF FF FF FF FF     
   8050 FFFCB2BE FF FF FF FF FF FF FF FF     
   8051 FFFCB2C6 FF FF FF FF FF FF FF FF     
   8052 FFFCB2CE FF FF FF FF FF FF FF FF     
   8053 FFFCB2D6 FF FF FF FF FF FF FF FF     
   8054 FFFCB2DE FF FF FF FF FF FF FF FF     
   8055 FFFCB2E6 FF FF FF FF FF FF FF FF     
   8056 FFFCB2EE FF FF FF FF FF FF FF FF     
   8057 FFFCB2F6 FF FF FF FF FF FF FF FF     
   8058 FFFCB2FE FF FF FF FF FF FF FF FF     
   8059 FFFCB306 FF FF FF FF FF FF FF FF     
   8060 FFFCB30E FF FF FF FF FF FF FF FF     
   8061 FFFCB316 FF FF FF FF FF FF FF FF     
   8062 FFFCB31E FF FF FF FF FF FF FF FF     
   8063 FFFCB326 FF FF FF FF FF FF FF FF     
   8064 FFFCB32E FF FF FF FF FF FF FF FF     
   8065 FFFCB336 FF FF FF FF FF FF FF FF     
   8066 FFFCB33E FF FF FF FF FF FF FF FF     
   8067 FFFCB346 FF FF FF FF FF FF FF FF     
   8068 FFFCB34E FF FF FF FF FF FF FF FF     
   8069 FFFCB356 FF FF FF FF FF FF FF FF     
   8070 FFFCB35E FF FF FF FF FF FF FF FF     
   8071 FFFCB366 FF FF FF FF FF FF FF FF     
   8072 FFFCB36E FF FF FF FF FF FF FF FF     
   8073 FFFCB376 FF FF FF FF FF FF FF FF     
   8074 FFFCB37E FF FF FF FF FF FF FF FF     
   8075 FFFCB386 FF FF FF FF FF FF FF FF     
   8076 FFFCB38E FF FF FF FF FF FF FF FF     
   8077 FFFCB396 FF FF FF FF FF FF FF FF     
   8078 FFFCB39E FF FF FF FF FF FF FF FF     
   8079 FFFCB3A6 FF FF FF FF FF FF FF FF     
   8080 FFFCB3AE FF FF FF FF FF FF FF FF     
   8081 FFFCB3B6 FF FF FF FF FF FF FF FF     
   8082 FFFCB3BE FF FF FF FF FF FF FF FF     
   8083 FFFCB3C6 FF FF FF FF FF FF FF FF     
   8084 FFFCB3CE FF FF FF FF FF FF FF FF     
   8085 FFFCB3D6 FF FF FF FF FF FF FF FF     
   8086 FFFCB3DE FF FF FF FF FF FF FF FF     
   8087 FFFCB3E6 FF FF FF FF FF FF FF FF     
   8088 FFFCB3EE FF FF FF FF FF FF FF FF     
   8089 FFFCB3F6 FF FF FF FF FF FF FF FF     
   8090 FFFCB3FE FF FF FF FF FF FF FF FF     
   8091 FFFCB406 FF FF FF FF FF FF FF FF     
   8092 FFFCB40E FF FF FF FF FF FF FF FF     
   8093 FFFCB416 FF FF FF FF FF FF FF FF     
   8094 FFFCB41E FF FF FF FF FF FF FF FF     
   8095 FFFCB426 FF FF FF FF FF FF FF FF     
   8096 FFFCB42E FF FF FF FF FF FF FF FF     
   8097 FFFCB436 FF FF FF FF FF FF FF FF     
   8098 FFFCB43E FF FF FF FF FF FF FF FF     
   8099 FFFCB446 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 79
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8100 FFFCB44E FF FF FF FF FF FF FF FF     
   8101 FFFCB456 FF FF FF FF FF FF FF FF     
   8102 FFFCB45E FF FF FF FF FF FF FF FF     
   8103 FFFCB466 FF FF FF FF FF FF FF FF     
   8104 FFFCB46E FF FF FF FF FF FF FF FF     
   8105 FFFCB476 FF FF FF FF FF FF FF FF     
   8106 FFFCB47E FF FF FF FF FF FF FF FF     
   8107 FFFCB486 FF FF FF FF FF FF FF FF     
   8108 FFFCB48E FF FF FF FF FF FF FF FF     
   8109 FFFCB496 FF FF FF FF FF FF FF FF     
   8110 FFFCB49E FF FF FF FF FF FF FF FF     
   8111 FFFCB4A6 FF FF FF FF FF FF FF FF     
   8112 FFFCB4AE FF FF FF FF FF FF FF FF     
   8113 FFFCB4B6 FF FF FF FF FF FF FF FF     
   8114 FFFCB4BE FF FF FF FF FF FF FF FF     
   8115 FFFCB4C6 FF FF FF FF FF FF FF FF     
   8116 FFFCB4CE FF FF FF FF FF FF FF FF     
   8117 FFFCB4D6 FF FF FF FF FF FF FF FF     
   8118 FFFCB4DE FF FF FF FF FF FF FF FF     
   8119 FFFCB4E6 FF FF FF FF FF FF FF FF     
   8120 FFFCB4EE FF FF FF FF FF FF FF FF     
   8121 FFFCB4F6 FF FF FF FF FF FF FF FF     
   8122 FFFCB4FE FF FF FF FF FF FF FF FF     
   8123 FFFCB506 FF FF FF FF FF FF FF FF     
   8124 FFFCB50E FF FF FF FF FF FF FF FF     
   8125 FFFCB516 FF FF FF FF FF FF FF FF     
   8126 FFFCB51E FF FF FF FF FF FF FF FF     
   8127 FFFCB526 FF FF FF FF FF FF FF FF     
   8128 FFFCB52E FF FF FF FF FF FF FF FF     
   8129 FFFCB536 FF FF FF FF FF FF FF FF     
   8130 FFFCB53E FF FF FF FF FF FF FF FF     
   8131 FFFCB546 FF FF FF FF FF FF FF FF     
   8132 FFFCB54E FF FF FF FF FF FF FF FF     
   8133 FFFCB556 FF FF FF FF FF FF FF FF     
   8134 FFFCB55E FF FF FF FF FF FF FF FF     
   8135 FFFCB566 FF FF FF FF FF FF FF FF     
   8136 FFFCB56E FF FF FF FF FF FF FF FF     
   8137 FFFCB576 FF FF FF FF FF FF FF FF     
   8138 FFFCB57E FF FF FF FF FF FF FF FF     
   8139 FFFCB586 FF FF FF FF FF FF FF FF     
   8140 FFFCB58E FF FF FF FF FF FF FF FF     
   8141 FFFCB596 FF FF FF FF FF FF FF FF     
   8142 FFFCB59E FF FF FF FF FF FF FF FF     
   8143 FFFCB5A6 FF FF FF FF FF FF FF FF     
   8144 FFFCB5AE FF FF FF FF FF FF FF FF     
   8145 FFFCB5B6 FF FF FF FF FF FF FF FF     
   8146 FFFCB5BE FF FF FF FF FF FF FF FF     
   8147 FFFCB5C6 FF FF FF FF FF FF FF FF     
   8148 FFFCB5CE FF FF FF FF FF FF FF FF     
   8149 FFFCB5D6 FF FF FF FF FF FF FF FF     
   8150 FFFCB5DE FF FF FF FF FF FF FF FF     
   8151 FFFCB5E6 FF FF FF FF FF FF FF FF     
   8152 FFFCB5EE FF FF FF FF FF FF FF FF     
   8153 FFFCB5F6 FF FF FF FF FF FF FF FF     
   8154 FFFCB5FE FF FF FF FF FF FF FF FF     
   8155 FFFCB606 FF FF FF FF FF FF FF FF     
   8156 FFFCB60E FF FF FF FF FF FF FF FF     
   8157 FFFCB616 FF FF FF FF FF FF FF FF     
   8158 FFFCB61E FF FF FF FF FF FF FF FF     
   8159 FFFCB626 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 80
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8160 FFFCB62E FF FF FF FF FF FF FF FF     
   8161 FFFCB636 FF FF FF FF FF FF FF FF     
   8162 FFFCB63E FF FF FF FF FF FF FF FF     
   8163 FFFCB646 FF FF FF FF FF FF FF FF     
   8164 FFFCB64E FF FF FF FF FF FF FF FF     
   8165 FFFCB656 FF FF FF FF FF FF FF FF     
   8166 FFFCB65E FF FF FF FF FF FF FF FF     
   8167 FFFCB666 FF FF FF FF FF FF FF FF     
   8168 FFFCB66E FF FF FF FF FF FF FF FF     
   8169 FFFCB676 FF FF FF FF FF FF FF FF     
   8170 FFFCB67E FF FF FF FF FF FF FF FF     
   8171 FFFCB686 FF FF FF FF FF FF FF FF     
   8172 FFFCB68E FF FF FF FF FF FF FF FF     
   8173 FFFCB696 FF FF FF FF FF FF FF FF     
   8174 FFFCB69E FF FF FF FF FF FF FF FF     
   8175 FFFCB6A6 FF FF FF FF FF FF FF FF     
   8176 FFFCB6AE FF FF FF FF FF FF FF FF     
   8177 FFFCB6B6 FF FF FF FF FF FF FF FF     
   8178 FFFCB6BE FF FF FF FF FF FF FF FF     
   8179 FFFCB6C6 FF FF FF FF FF FF FF FF     
   8180 FFFCB6CE FF FF FF FF FF FF FF FF     
   8181 FFFCB6D6 FF FF FF FF FF FF FF FF     
   8182 FFFCB6DE FF FF FF FF FF FF FF FF     
   8183 FFFCB6E6 FF FF FF FF FF FF FF FF     
   8184 FFFCB6EE FF FF FF FF FF FF FF FF     
   8185 FFFCB6F6 FF FF FF FF FF FF FF FF     
   8186 FFFCB6FE FF FF FF FF FF FF FF FF     
   8187 FFFCB706 FF FF FF FF FF FF FF FF     
   8188 FFFCB70E FF FF FF FF FF FF FF FF     
   8189 FFFCB716 FF FF FF FF FF FF FF FF     
   8190 FFFCB71E FF FF FF FF FF FF FF FF     
   8191 FFFCB726 FF FF FF FF FF FF FF FF     
   8192 FFFCB72E FF FF FF FF FF FF FF FF     
   8193 FFFCB736 FF FF FF FF FF FF FF FF     
   8194 FFFCB73E FF FF FF FF FF FF FF FF     
   8195 FFFCB746 FF FF FF FF FF FF FF FF     
   8196 FFFCB74E FF FF FF FF FF FF FF FF     
   8197 FFFCB756 FF FF FF FF FF FF FF FF     
   8198 FFFCB75E FF FF FF FF FF FF FF FF     
   8199 FFFCB766 FF FF FF FF FF FF FF FF     
   8200 FFFCB76E FF FF FF FF FF FF FF FF     
   8201 FFFCB776 FF FF FF FF FF FF FF FF     
   8202 FFFCB77E FF FF FF FF FF FF FF FF     
   8203 FFFCB786 FF FF FF FF FF FF FF FF     
   8204 FFFCB78E FF FF FF FF FF FF FF FF     
   8205 FFFCB796 FF FF FF FF FF FF FF FF     
   8206 FFFCB79E FF FF FF FF FF FF FF FF     
   8207 FFFCB7A6 FF FF FF FF FF FF FF FF     
   8208 FFFCB7AE FF FF FF FF FF FF FF FF     
   8209 FFFCB7B6 FF FF FF FF FF FF FF FF     
   8210 FFFCB7BE FF FF FF FF FF FF FF FF     
   8211 FFFCB7C6 FF FF FF FF FF FF FF FF     
   8212 FFFCB7CE FF FF FF FF FF FF FF FF     
   8213 FFFCB7D6 FF FF FF FF FF FF FF FF     
   8214 FFFCB7DE FF FF FF FF FF FF FF FF     
   8215 FFFCB7E6 FF FF FF FF FF FF FF FF     
   8216 FFFCB7EE FF FF FF FF FF FF FF FF     
   8217 FFFCB7F6 FF FF FF FF FF FF FF FF     
   8218 FFFCB7FE FF FF FF FF FF FF FF FF     
   8219 FFFCB806 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 81
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8220 FFFCB80E FF FF FF FF FF FF FF FF     
   8221 FFFCB816 FF FF FF FF FF FF FF FF     
   8222 FFFCB81E FF FF FF FF FF FF FF FF     
   8223 FFFCB826 FF FF FF FF FF FF FF FF     
   8224 FFFCB82E FF FF FF FF FF FF FF FF     
   8225 FFFCB836 FF FF FF FF FF FF FF FF     
   8226 FFFCB83E FF FF FF FF FF FF FF FF     
   8227 FFFCB846 FF FF FF FF FF FF FF FF     
   8228 FFFCB84E FF FF FF FF FF FF FF FF     
   8229 FFFCB856 FF FF FF FF FF FF FF FF     
   8230 FFFCB85E FF FF FF FF FF FF FF FF     
   8231 FFFCB866 FF FF FF FF FF FF FF FF     
   8232 FFFCB86E FF FF FF FF FF FF FF FF     
   8233 FFFCB876 FF FF FF FF FF FF FF FF     
   8234 FFFCB87E FF FF FF FF FF FF FF FF     
   8235 FFFCB886 FF FF FF FF FF FF FF FF     
   8236 FFFCB88E FF FF FF FF FF FF FF FF     
   8237 FFFCB896 FF FF FF FF FF FF FF FF     
   8238 FFFCB89E FF FF FF FF FF FF FF FF     
   8239 FFFCB8A6 FF FF FF FF FF FF FF FF     
   8240 FFFCB8AE FF FF FF FF FF FF FF FF     
   8241 FFFCB8B6 FF FF FF FF FF FF FF FF     
   8242 FFFCB8BE FF FF FF FF FF FF FF FF     
   8243 FFFCB8C6 FF FF FF FF FF FF FF FF     
   8244 FFFCB8CE FF FF FF FF FF FF FF FF     
   8245 FFFCB8D6 FF FF FF FF FF FF FF FF     
   8246 FFFCB8DE FF FF FF FF FF FF FF FF     
   8247 FFFCB8E6 FF FF FF FF FF FF FF FF     
   8248 FFFCB8EE FF FF FF FF FF FF FF FF     
   8249 FFFCB8F6 FF FF FF FF FF FF FF FF     
   8250 FFFCB8FE FF FF FF FF FF FF FF FF     
   8251 FFFCB906 FF FF FF FF FF FF FF FF     
   8252 FFFCB90E FF FF FF FF FF FF FF FF     
   8253 FFFCB916 FF FF FF FF FF FF FF FF     
   8254 FFFCB91E FF FF FF FF FF FF FF FF     
   8255 FFFCB926 FF FF FF FF FF FF FF FF     
   8256 FFFCB92E FF FF FF FF FF FF FF FF     
   8257 FFFCB936 FF FF FF FF FF FF FF FF     
   8258 FFFCB93E FF FF FF FF FF FF FF FF     
   8259 FFFCB946 FF FF FF FF FF FF FF FF     
   8260 FFFCB94E FF FF FF FF FF FF FF FF     
   8261 FFFCB956 FF FF FF FF FF FF FF FF     
   8262 FFFCB95E FF FF FF FF FF FF FF FF     
   8263 FFFCB966 FF FF FF FF FF FF FF FF     
   8264 FFFCB96E FF FF FF FF FF FF FF FF     
   8265 FFFCB976 FF FF FF FF FF FF FF FF     
   8266 FFFCB97E FF FF FF FF FF FF FF FF     
   8267 FFFCB986 FF FF FF FF FF FF FF FF     
   8268 FFFCB98E FF FF FF FF FF FF FF FF     
   8269 FFFCB996 FF FF FF FF FF FF FF FF     
   8270 FFFCB99E FF FF FF FF FF FF FF FF     
   8271 FFFCB9A6 FF FF FF FF FF FF FF FF     
   8272 FFFCB9AE FF FF FF FF FF FF FF FF     
   8273 FFFCB9B6 FF FF FF FF FF FF FF FF     
   8274 FFFCB9BE FF FF FF FF FF FF FF FF     
   8275 FFFCB9C6 FF FF FF FF FF FF FF FF     
   8276 FFFCB9CE FF FF FF FF FF FF FF FF     
   8277 FFFCB9D6 FF FF FF FF FF FF FF FF     
   8278 FFFCB9DE FF FF FF FF FF FF FF FF     
   8279 FFFCB9E6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 82
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8280 FFFCB9EE FF FF FF FF FF FF FF FF     
   8281 FFFCB9F6 FF FF FF FF FF FF FF FF     
   8282 FFFCB9FE FF FF FF FF FF FF FF FF     
   8283 FFFCBA06 FF FF FF FF FF FF FF FF     
   8284 FFFCBA0E FF FF FF FF FF FF FF FF     
   8285 FFFCBA16 FF FF FF FF FF FF FF FF     
   8286 FFFCBA1E FF FF FF FF FF FF FF FF     
   8287 FFFCBA26 FF FF FF FF FF FF FF FF     
   8288 FFFCBA2E FF FF FF FF FF FF FF FF     
   8289 FFFCBA36 FF FF FF FF FF FF FF FF     
   8290 FFFCBA3E FF FF FF FF FF FF FF FF     
   8291 FFFCBA46 FF FF FF FF FF FF FF FF     
   8292 FFFCBA4E FF FF FF FF FF FF FF FF     
   8293 FFFCBA56 FF FF FF FF FF FF FF FF     
   8294 FFFCBA5E FF FF FF FF FF FF FF FF     
   8295 FFFCBA66 FF FF FF FF FF FF FF FF     
   8296 FFFCBA6E FF FF FF FF FF FF FF FF     
   8297 FFFCBA76 FF FF FF FF FF FF FF FF     
   8298 FFFCBA7E FF FF FF FF FF FF FF FF     
   8299 FFFCBA86 FF FF FF FF FF FF FF FF     
   8300 FFFCBA8E FF FF FF FF FF FF FF FF     
   8301 FFFCBA96 FF FF FF FF FF FF FF FF     
   8302 FFFCBA9E FF FF FF FF FF FF FF FF     
   8303 FFFCBAA6 FF FF FF FF FF FF FF FF     
   8304 FFFCBAAE FF FF FF FF FF FF FF FF     
   8305 FFFCBAB6 FF FF FF FF FF FF FF FF     
   8306 FFFCBABE FF FF FF FF FF FF FF FF     
   8307 FFFCBAC6 FF FF FF FF FF FF FF FF     
   8308 FFFCBACE FF FF FF FF FF FF FF FF     
   8309 FFFCBAD6 FF FF FF FF FF FF FF FF     
   8310 FFFCBADE FF FF FF FF FF FF FF FF     
   8311 FFFCBAE6 FF FF FF FF FF FF FF FF     
   8312 FFFCBAEE FF FF FF FF FF FF FF FF     
   8313 FFFCBAF6 FF FF FF FF FF FF FF FF     
   8314 FFFCBAFE FF FF FF FF FF FF FF FF     
   8315 FFFCBB06 FF FF FF FF FF FF FF FF     
   8316 FFFCBB0E FF FF FF FF FF FF FF FF     
   8317 FFFCBB16 FF FF FF FF FF FF FF FF     
   8318 FFFCBB1E FF FF FF FF FF FF FF FF     
   8319 FFFCBB26 FF FF FF FF FF FF FF FF     
   8320 FFFCBB2E FF FF FF FF FF FF FF FF     
   8321 FFFCBB36 FF FF FF FF FF FF FF FF     
   8322 FFFCBB3E FF FF FF FF FF FF FF FF     
   8323 FFFCBB46 FF FF FF FF FF FF FF FF     
   8324 FFFCBB4E FF FF FF FF FF FF FF FF     
   8325 FFFCBB56 FF FF FF FF FF FF FF FF     
   8326 FFFCBB5E FF FF FF FF FF FF FF FF     
   8327 FFFCBB66 FF FF FF FF FF FF FF FF     
   8328 FFFCBB6E FF FF FF FF FF FF FF FF     
   8329 FFFCBB76 FF FF FF FF FF FF FF FF     
   8330 FFFCBB7E FF FF FF FF FF FF FF FF     
   8331 FFFCBB86 FF FF FF FF FF FF FF FF     
   8332 FFFCBB8E FF FF FF FF FF FF FF FF     
   8333 FFFCBB96 FF FF FF FF FF FF FF FF     
   8334 FFFCBB9E FF FF FF FF FF FF FF FF     
   8335 FFFCBBA6 FF FF FF FF FF FF FF FF     
   8336 FFFCBBAE FF FF FF FF FF FF FF FF     
   8337 FFFCBBB6 FF FF FF FF FF FF FF FF     
   8338 FFFCBBBE FF FF FF FF FF FF FF FF     
   8339 FFFCBBC6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 83
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8340 FFFCBBCE FF FF FF FF FF FF FF FF     
   8341 FFFCBBD6 FF FF FF FF FF FF FF FF     
   8342 FFFCBBDE FF FF FF FF FF FF FF FF     
   8343 FFFCBBE6 FF FF FF FF FF FF FF FF     
   8344 FFFCBBEE FF FF FF FF FF FF FF FF     
   8345 FFFCBBF6 FF FF FF FF FF FF FF FF     
   8346 FFFCBBFE FF FF FF FF FF FF FF FF     
   8347 FFFCBC06 FF FF FF FF FF FF FF FF     
   8348 FFFCBC0E FF FF FF FF FF FF FF FF     
   8349 FFFCBC16 FF FF FF FF FF FF FF FF     
   8350 FFFCBC1E FF FF FF FF FF FF FF FF     
   8351 FFFCBC26 FF FF FF FF FF FF FF FF     
   8352 FFFCBC2E FF FF FF FF FF FF FF FF     
   8353 FFFCBC36 FF FF FF FF FF FF FF FF     
   8354 FFFCBC3E FF FF FF FF FF FF FF FF     
   8355 FFFCBC46 FF FF FF FF FF FF FF FF     
   8356 FFFCBC4E FF FF FF FF FF FF FF FF     
   8357 FFFCBC56 FF FF FF FF FF FF FF FF     
   8358 FFFCBC5E FF FF FF FF FF FF FF FF     
   8359 FFFCBC66 FF FF FF FF FF FF FF FF     
   8360 FFFCBC6E FF FF FF FF FF FF FF FF     
   8361 FFFCBC76 FF FF FF FF FF FF FF FF     
   8362 FFFCBC7E FF FF FF FF FF FF FF FF     
   8363 FFFCBC86 FF FF FF FF FF FF FF FF     
   8364 FFFCBC8E FF FF FF FF FF FF FF FF     
   8365 FFFCBC96 FF FF FF FF FF FF FF FF     
   8366 FFFCBC9E FF FF FF FF FF FF FF FF     
   8367 FFFCBCA6 FF FF FF FF FF FF FF FF     
   8368 FFFCBCAE FF FF FF FF FF FF FF FF     
   8369 FFFCBCB6 FF FF FF FF FF FF FF FF     
   8370 FFFCBCBE FF FF FF FF FF FF FF FF     
   8371 FFFCBCC6 FF FF FF FF FF FF FF FF     
   8372 FFFCBCCE FF FF FF FF FF FF FF FF     
   8373 FFFCBCD6 FF FF FF FF FF FF FF FF     
   8374 FFFCBCDE FF FF FF FF FF FF FF FF     
   8375 FFFCBCE6 FF FF FF FF FF FF FF FF     
   8376 FFFCBCEE FF FF FF FF FF FF FF FF     
   8377 FFFCBCF6 FF FF FF FF FF FF FF FF     
   8378 FFFCBCFE FF FF FF FF FF FF FF FF     
   8379 FFFCBD06 FF FF FF FF FF FF FF FF     
   8380 FFFCBD0E FF FF FF FF FF FF FF FF     
   8381 FFFCBD16 FF FF FF FF FF FF FF FF     
   8382 FFFCBD1E FF FF FF FF FF FF FF FF     
   8383 FFFCBD26 FF FF FF FF FF FF FF FF     
   8384 FFFCBD2E FF FF FF FF FF FF FF FF     
   8385 FFFCBD36 FF FF FF FF FF FF FF FF     
   8386 FFFCBD3E FF FF FF FF FF FF FF FF     
   8387 FFFCBD46 FF FF FF FF FF FF FF FF     
   8388 FFFCBD4E FF FF FF FF FF FF FF FF     
   8389 FFFCBD56 FF FF FF FF FF FF FF FF     
   8390 FFFCBD5E FF FF FF FF FF FF FF FF     
   8391 FFFCBD66 FF FF FF FF FF FF FF FF     
   8392 FFFCBD6E FF FF FF FF FF FF FF FF     
   8393 FFFCBD76 FF FF FF FF FF FF FF FF     
   8394 FFFCBD7E FF FF FF FF FF FF FF FF     
   8395 FFFCBD86 FF FF FF FF FF FF FF FF     
   8396 FFFCBD8E FF FF FF FF FF FF FF FF     
   8397 FFFCBD96 FF FF FF FF FF FF FF FF     
   8398 FFFCBD9E FF FF FF FF FF FF FF FF     
   8399 FFFCBDA6 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 84
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8400 FFFCBDAE FF FF FF FF FF FF FF FF     
   8401 FFFCBDB6 FF FF FF FF FF FF FF FF     
   8402 FFFCBDBE FF FF FF FF FF FF FF FF     
   8403 FFFCBDC6 FF FF FF FF FF FF FF FF     
   8404 FFFCBDCE FF FF FF FF FF FF FF FF     
   8405 FFFCBDD6 FF FF FF FF FF FF FF FF     
   8406 FFFCBDDE FF FF FF FF FF FF FF FF     
   8407 FFFCBDE6 FF FF FF FF FF FF FF FF     
   8408 FFFCBDEE FF FF FF FF FF FF FF FF     
   8409 FFFCBDF6 FF FF FF FF FF FF FF FF     
   8410 FFFCBDFE FF FF FF FF FF FF FF FF     
   8411 FFFCBE06 FF FF FF FF FF FF FF FF     
   8412 FFFCBE0E FF FF FF FF FF FF FF FF     
   8413 FFFCBE16 FF FF FF FF FF FF FF FF     
   8414 FFFCBE1E FF FF FF FF FF FF FF FF     
   8415 FFFCBE26 FF FF FF FF FF FF FF FF     
   8416 FFFCBE2E FF FF FF FF FF FF FF FF     
   8417 FFFCBE36 FF FF FF FF FF FF FF FF     
   8418 FFFCBE3E FF FF FF FF FF FF FF FF     
   8419 FFFCBE46 FF FF FF FF FF FF FF FF     
   8420 FFFCBE4E FF FF FF FF FF FF FF FF     
   8421 FFFCBE56 FF FF FF FF FF FF FF FF     
   8422 FFFCBE5E FF FF FF FF FF FF FF FF     
   8423 FFFCBE66 FF FF FF FF FF FF FF FF     
   8424 FFFCBE6E FF FF FF FF FF FF FF FF     
   8425 FFFCBE76 FF FF FF FF FF FF FF FF     
   8426 FFFCBE7E FF FF FF FF FF FF FF FF     
   8427 FFFCBE86 FF FF FF FF FF FF FF FF     
   8428 FFFCBE8E FF FF FF FF FF FF FF FF     
   8429 FFFCBE96 FF FF FF FF FF FF FF FF     
   8430 FFFCBE9E FF FF FF FF FF FF FF FF     
   8431 FFFCBEA6 FF FF FF FF FF FF FF FF     
   8432 FFFCBEAE FF FF FF FF FF FF FF FF     
   8433 FFFCBEB6 FF FF FF FF FF FF FF FF     
   8434 FFFCBEBE FF FF FF FF FF FF FF FF     
   8435 FFFCBEC6 FF FF FF FF FF FF FF FF     
   8436 FFFCBECE FF FF FF FF FF FF FF FF     
   8437 FFFCBED6 FF FF FF FF FF FF FF FF     
   8438 FFFCBEDE FF FF FF FF FF FF FF FF     
   8439 FFFCBEE6 FF FF FF FF FF FF FF FF     
   8440 FFFCBEEE FF FF FF FF FF FF FF FF     
   8441 FFFCBEF6 FF FF FF FF FF FF FF FF     
   8442 FFFCBEFE FF FF FF FF FF FF FF FF     
   8443 FFFCBF06 FF FF FF FF FF FF FF FF     
   8444 FFFCBF0E FF FF FF FF FF FF FF FF     
   8445 FFFCBF16 FF FF FF FF FF FF FF FF     
   8446 FFFCBF1E FF FF FF FF FF FF FF FF     
   8447 FFFCBF26 FF FF FF FF FF FF FF FF     
   8448 FFFCBF2E FF FF FF FF FF FF FF FF     
   8449 FFFCBF36 FF FF FF FF FF FF FF FF     
   8450 FFFCBF3E FF FF FF FF FF FF FF FF     
   8451 FFFCBF46 FF FF FF FF FF FF FF FF     
   8452 FFFCBF4E FF FF FF FF FF FF FF FF     
   8453 FFFCBF56 FF FF FF FF FF FF FF FF     
   8454 FFFCBF5E FF FF FF FF FF FF FF FF     
   8455 FFFCBF66 FF FF FF FF FF FF FF FF     
   8456 FFFCBF6E FF FF FF FF FF FF FF FF     
   8457 FFFCBF76 FF FF FF FF FF FF FF FF     
   8458 FFFCBF7E FF FF FF FF FF FF FF FF     
   8459 FFFCBF86 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 85
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8460 FFFCBF8E FF FF FF FF FF FF FF FF     
   8461 FFFCBF96 FF FF FF FF FF FF FF FF     
   8462 FFFCBF9E FF FF FF FF FF FF FF FF     
   8463 FFFCBFA6 FF FF FF FF FF FF FF FF     
   8464 FFFCBFAE FF FF FF FF FF FF FF FF     
   8465 FFFCBFB6 FF FF FF FF FF FF FF FF     
   8466 FFFCBFBE FF FF FF FF FF FF FF FF     
   8467 FFFCBFC6 FF FF FF FF FF FF FF FF     
   8468 FFFCBFCE FF FF FF FF FF FF FF FF     
   8469 FFFCBFD6 FF FF FF FF FF FF FF FF     
   8470 FFFCBFDE FF FF FF FF FF FF FF FF     
   8471 FFFCBFE6 FF FF FF FF FF FF FF FF     
   8472 FFFCBFEE FF FF FF FF FF FF FF FF     
   8473 FFFCBFF6 FF FF FF FF FF FF FF FF     
   8474 FFFCBFFE FF FF                       
                                             ;*
                                             ;* Standard jump table. You can change these addresses if you are
                                             ;* customizing this interpreter for a different environment.
                                             ;*
   8479 FFFCC000 6000 0022                   START	BRA.L	CSTART		;Cold Start entry point
   8480 FFFCC004 6000 005A                   GOWARM	BRA.L	WSTART		;Warm Start entry point
   8481 FFFCC008 6000 0B68                   GOOUT	BRA.L	OUTC		;Jump to character-out routine
   8482 FFFCC00C 6000 0B74                   GOIN	BRA.L	INC		;Jump to character-in routine
   8483 FFFCC010 6000 0B86                   GOAUXO	BRA.L	AUXOUT		;Jump to auxiliary-out routine
   8484 FFFCC014 6000 0B94                   GOAUXI	BRA.L	AUXIN		;Jump to auxiliary-in routine
   8485 FFFCC018 6000 0BA6                   GOBYE	BRA.L	BYEBYE		;Jump to monitor, DOS, etc.
                                             ;*
                                             ;* Modifiable system constants:
                                             ;*
   8489 FFFCC01C 00200000                    TXTBGN	DC.L	0x200000	;beginning of program memory
   8490 FFFCC020 1E000000                    ENDMEM	DC.L	0x1E000000	;	end of available memory
                                             ;*
                                             ;* The main interpreter starts here:
                                             ;*
   8494 FFFCC024                             CSTART:
   8495 FFFCC024 41F9 FFFC C000              	LEA		START,A0
   8496 FFFCC02A 21C8 0600                   	MOVE.L	A0,RANPNT
   8497 FFFCC02E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;initialize stack pointer
   8498 FFFCC034 4DF9 FFFC CBC6              	LEA		INITMSG,A6	;tell who we are
   8499 FFFCC03A 6100 0B2A                   	BSR.L	PRMESG
   8500 FFFCC03E 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;init. end-of-program pointer
   8501 FFFCC046 2039 FFFC C020              	MOVE.L	ENDMEM,D0	;get address of end of memory
   8502 FFFCC04C 0480 0000 0800              	SUB.L	#2048,D0	;reserve 2K for the stack
   8503 FFFCC052 21C0 062C                   	MOVE.L	D0,STKLMT
   8504 FFFCC056 0480 0000 006C              	SUB.L	#108,D0 	;reserve variable area (27 long words)
   8505 FFFCC05C 21C0 0628                   	MOVE.L	D0,VARBGN
   8506 FFFCC060                             WSTART:
   8507 FFFCC060 4280                        	CLR.L	D0		;initialize internal variables
   8508 FFFCC062 21C0 0610                   	MOVE.L	D0,LOPVAR
   8509 FFFCC066 21C0 0608                   	MOVE.L	D0,STKGOS
   8510 FFFCC06A 21C0 0604                   	MOVE.L	D0,CURRNT	;current line number pointer = 0
   8511 FFFCC06E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;init S.P. again, just in case
   8512 FFFCC074 4DF9 FFFC CBEC              	LEA	OKMSG,A6	;display "OK"
   8513 FFFCC07A 6100 0AEA                   	BSR.L	PRMESG
   8514 FFFCC07E                             ST3:
   8515 FFFCC07E 103C 003E                   	MOVE.B	#'>',D0  ;       Prompt with a '>' and
   8516 FFFCC082 6100 0810                   	BSR.L	GETLN	;	read a line.
   8517 FFFCC086 6100 0A7A                   	BSR.L	TOUPBUF ;	convert to upper case
   8518 FFFCC08A 2848                        	MOVE.L	A0,A4	;	save pointer to end of line
   8519 FFFCC08C 41F8 0630                   	LEA	BUFFER,A0	;point to the beginning of line
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 86
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8520 FFFCC090 6100 0A2C                   	BSR.L	TSTNUM	;	is there a number there?
   8521 FFFCC094 6100 0A60                   	BSR.L	IGNBLK	;	skip trailing blanks
   8522 FFFCC098 4A81                        	TST	D1		;does line no. exist? (or nonzero?)
   8523 FFFCC09A 6700 011A                   	BEQ.L	DIRECT	;	if not, it's a direct statement
   8524 FFFCC09E B2BC 0000 FFFF              	CMP.L	#$FFFF,D1	;see if line no. is <= 16 bits
   8525 FFFCC0A4 6400 07E4                   	BCC.L	QHOW		;if not, we've overflowed
   8526 FFFCC0A8 1101                        	MOVE.B	D1,-(A0)	;store the binary line no.
   8527 FFFCC0AA E099                        	ROR	#8,D1		;(Kludge to store a word on a
   8528 FFFCC0AC 1101                        	MOVE.B	D1,-(A0)	;possible byte boundary)
   8529 FFFCC0AE E199                        	ROL	#8,D1
   8530 FFFCC0B0 6100 0882                   	BSR.L	FNDLN	;	find this line in save area
   8531 FFFCC0B4 2A49                        	MOVE.L	A1,A5	;	save possible line pointer
   8532 FFFCC0B6 6612                        	BNE	ST4				;	if not found, insert
   8533 FFFCC0B8 6100 08A2                   	BSR.L	FNDNXT		;find the next line (into A1)
   8534 FFFCC0BC 244D                        	MOVE.L	A5,A2		;pointer to line to be deleted
   8535 FFFCC0BE 2678 0624                   	MOVE.L	TXTUNF,A3	;points to top of save area
   8536 FFFCC0C2 6100 08A2                   	BSR.L	MVUP		;move up to delete
   8537 FFFCC0C6 21CA 0624                   	MOVE.L	A2,TXTUNF	;update the end pointer
   8538 FFFCC0CA                             ST4:
   8539 FFFCC0CA 200C                        	MOVE.L	A4,D0		;calculate the length of new line
   8540 FFFCC0CC 9088                        	SUB.L	A0,D0
   8541 FFFCC0CE B0BC 0000 0003              	CMP.L	#3,D0		;is it just a line no. & CR?
   8542 FFFCC0D4 67A8                        	BEQ	ST3				;if so, it was just a delete
   8543 FFFCC0D6 2678 0624                   	MOVE.L	TXTUNF,A3	;compute new end
   8544 FFFCC0DA 2C4B                        	MOVE.L	A3,A6
   8545 FFFCC0DC D7C0                        	ADD.L	D0,A3
   8546 FFFCC0DE 2038 0628                   	MOVE.L	VARBGN,D0	;see if there's enough room
   8547 FFFCC0E2 B08B                        	CMP.L	A3,D0
   8548 FFFCC0E4 6300 079A                   	BLS.L	QSORRY		;if not, say so
   8549 FFFCC0E8 21CB 0624                   	MOVE.L	A3,TXTUNF	;if so, store new end position
   8550 FFFCC0EC 224E                        	MOVE.L	A6,A1		;points to old unfilled area
   8551 FFFCC0EE 244D                        	MOVE.L	A5,A2		;points to beginning of move area
   8552 FFFCC0F0 6100 087E                   	BSR.L	MVDOWN		;move things out of the way
   8553 FFFCC0F4 2248                        	MOVE.L	A0,A1		;set up to do the insertion
   8554 FFFCC0F6 244D                        	MOVE.L	A5,A2
   8555 FFFCC0F8 264C                        	MOVE.L	A4,A3
   8556 FFFCC0FA 6100 086A                   	BSR.L	MVUP		;do it
   8557 FFFCC0FE 6000 FF7E                   	BRA	ST3		;go back and get another line
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** Tables *** DIRECT *** EXEC ***
                                             ;*
                                             ;* This section of the code tests a string against a table. When
                                             ;* a match is found, control is transferred to the section of
                                             ;* code according to the table.
                                             ;*
                                             ;* At 'EXEC', A0 should point to the string, A1 should point to
                                             ;* the character table, and A2 should point to the execution
                                             ;* table. At 'DIRECT', A0 should point to the string, A1 and
                                             ;* A2 will be set up to point to TAB1 and TAB1.1, which are
                                             ;* the tables of all direct and statement commands.
                                             ;*
                                             ;* A '.' in the string will terminate the test and the partial
                                             ;* match will be considered as a match, e.g. 'P.', 'PR.','PRI.',
                                             ;* 'PRIN.', or 'PRINT' will all match 'PRINT'.
                                             ;*
                                             ;* There are two tables: the character table and the execution
                                             ;* table. The character table consists of any number of text items.
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 87
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* Each item is a string of characters with the last character's
                                             ;* high bit set to one. The execution table holds a 16-bit
                                             ;* execution addresses that correspond to each entry in the
                                             ;* character table.
                                             ;*
                                             ;* The end of the character table is a 0 byte which corresponds
                                             ;* to the default routine in the execution table, which is
                                             ;* executed if none of the other table items are matched.
                                             ;*
                                             ;* Character-matching tables:
   8590 FFFCC102                             TAB1:
   8591 FFFCC102 4C 49 53 D4                 	DC.B	'LIS',('T'+0x80) ;        Direct commands
   8592 FFFCC106 4C 4F 41 C4                 	DC.B	'LOA',('D'+0x80)
   8593 FFFCC10A 4E 45 D7                    	DC.B	'NE',('W'+0x80)
   8594 FFFCC10D 52 55 CE                    	DC.B	'RU',('N'+0x80)
   8595 FFFCC110 53 41 56 C5                 	DC.B	'SAV',('E'+0x80)
   8596 FFFCC114                             TAB2:
   8597 FFFCC114 4E 45 58 D4                 	DC.B	'NEX',('T'+0x80)  ;       Direct / statement
   8598 FFFCC118 4C 45 D4                    	DC.B	'LE',('T'+0x80)
   8599 FFFCC11B 49 C6                       	DC.B	'I',('F'+0x80)
   8600 FFFCC11D 47 4F 54 CF                 	DC.B	'GOT',('O'+0x80)
   8601 FFFCC121 47 4F 53 55 C2              	DC.B	'GOSU',('B'+0x80)
   8602 FFFCC126 52 45 54 55 52 CE           	DC.B	'RETUR',('N'+0x80)
   8603 FFFCC12C 52 45 CD                    	DC.B	'RE',('M'+0x80)
   8604 FFFCC12F 46 4F D2                    	DC.B	'FO',('R'+0x80)
   8605 FFFCC132 49 4E 50 55 D4              	DC.B	'INPU',('T'+0x80)
   8606 FFFCC137 50 52 49 4E D4              	DC.B	'PRIN',('T'+0x80)
   8607 FFFCC13C 50 4F 4B C5                 	DC.B	'POK',('E'+0x80)
   8608 FFFCC140 53 54 4F D0                 	DC.B	'STO',('P'+0x80)
   8609 FFFCC144 42 59 C5                    	DC.B	'BY',('E'+0x80)
   8610 FFFCC147 43 41 4C CC                 	DC.B	'CAL',('L'+0x80)
   8611 FFFCC14B 00                          	DC.B	0
   8612 FFFCC14C                             TAB4:
   8613 FFFCC14C 50 45 45 CB                 	DC.B	'PEE',('K'+0x80)   ;      Functions
   8614 FFFCC150 52 4E C4                    	DC.B	'RN',('D'+0x80)
   8615 FFFCC153 41 42 D3                    	DC.B	'AB',('S'+0x80)
   8616 FFFCC156 53 49 5A C5                 	DC.B	'SIZ',('E'+0x80)
   8617 FFFCC15A 00                          	DC.B	0
   8618 FFFCC15B                             TAB5:
   8619 FFFCC15B 54 CF                       	DC.B	'T',('O'+0x80)      ;     "TO" in "FOR"
   8620 FFFCC15D 00                          	DC.B	0
   8621 FFFCC15E                             TAB6:
   8622 FFFCC15E 53 54 45 D0                 	DC.B	'STE',('P'+0x80)     ;    "STEP" in "FOR"
   8623 FFFCC162 00                          	DC.B	0
   8624 FFFCC163                             TAB8:
   8625 FFFCC163 3E BD                       	DC.B	'>',('='+0x80)        ;   Relational operators
   8626 FFFCC165 3C BE                       	DC.B	'<',('>'+0x80)
   8627 FFFCC167 BE                          	DC.B	('>'+0x80)
   8628 FFFCC168 BD                          	DC.B	('='+0x80)
   8629 FFFCC169 3C BD                       	DC.B	'<',('='+0x80)
   8630 FFFCC16B BC                          	DC.B	('<'+0x80)
   8631 FFFCC16C 00                          	DC.B	0
   8632 FFFCC16D 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             	align	2
                                             ;* Execution address tables:
   8636 FFFCC16E                             TAB1_1:
   8637 FFFCC16E C266                        	DC.W	LIST_			;Direct commands
   8638 FFFCC170 C4A8                        	DC.W	LOAD
   8639 FFFCC172 C200                        	DC.W	NEW
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 88
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8640 FFFCC174 C214                        	DC.W	RUN
   8641 FFFCC176 C50C                        	DC.W	SAVE
   8642 FFFCC178                             TAB2_1:
   8643 FFFCC178 C3B4                        	DC.W	NEXT			;Direct / statement
   8644 FFFCC17A C498                        	DC.W	LET
   8645 FFFCC17C C404                        	DC.W	IF
   8646 FFFCC17E C252                        	DC.W	GOTO
   8647 FFFCC180 C2FC                        	DC.W	GOSUB
   8648 FFFCC182 C324                        	DC.W	RETURN
   8649 FFFCC184 C402                        	DC.W	REM
   8650 FFFCC186 C342                        	DC.W	FOR
   8651 FFFCC188 C42A                        	DC.W	INPUT
   8652 FFFCC18A C292                        	DC.W	PRINT
   8653 FFFCC18C C590                        	DC.W	POKE
   8654 FFFCC18E C20C                        	DC.W	STOP_
   8655 FFFCC190 C018                        	DC.W	GOBYE
   8656 FFFCC192 C5AC                        	DC.W	CALL
   8657 FFFCC194 C492                        	DC.W	DEFLT
   8658 FFFCC196                             TAB4_1:
   8659 FFFCC196 C7A2                        	DC.W	PEEK			;Functions
   8660 FFFCC198 C7AE                        	DC.W	RND
   8661 FFFCC19A C7E4                        	DC.W	ABS
   8662 FFFCC19C C7F4                        	DC.W	SIZE_
   8663 FFFCC19E C6A6                        	DC.W	XP40
   8664 FFFCC1A0                             TAB5_1:
   8665 FFFCC1A0 C35E                        	DC.W	FR1		;	"TO" in "FOR"
   8666 FFFCC1A2 C83E                        	DC.W	QWHAT
   8667 FFFCC1A4                             TAB6_1:
   8668 FFFCC1A4 C376                        	DC.W	FR2		;	"STEP" in "FOR"
   8669 FFFCC1A6 C37C                        	DC.W	FR3
   8670 FFFCC1A8                             TAB8_1:
   8671 FFFCC1A8 C5D8                        	DC.W	XP11;	>=		Relational operators
   8672 FFFCC1AA C5E0                        	DC.W	XP12	;<>
   8673 FFFCC1AC C5E8                        	DC.W	XP13	;>
   8674 FFFCC1AE C5F8                        	DC.W	XP15	;=
   8675 FFFCC1B0 C5F0                        	DC.W	XP14	;<=
   8676 FFFCC1B2 C602                        	DC.W	XP16	;<
   8677 FFFCC1B4 C614                        	DC.W	XP17
                                             ;*
   8679 FFFCC1B6                             DIRECT:
   8680 FFFCC1B6 43F9 FFFC C102              	LEA	TAB1,A1
   8681 FFFCC1BC 45F9 FFFC C16E              	LEA	TAB1_1,A2
   8682 FFFCC1C2                             EXEC:
   8683 FFFCC1C2 6100 0932                   	BSR.L	IGNBLK;		ignore leading blanks
   8684 FFFCC1C6 2648                        	MOVE.L	A0,A3		;save the pointer
   8685 FFFCC1C8 4202                        	CLR.B	D2		;clear match flag
   8686 FFFCC1CA                             EXLP:
   8687 FFFCC1CA 1018                        	MOVE.B	(A0)+,D0;	get the program character
   8688 FFFCC1CC 1211                        	MOVE.B	(A1),D1 	;get the table character
   8689 FFFCC1CE 6604                        	BNE	EXNGO		;If end of table,
   8690 FFFCC1D0 204B                        	MOVE.L	A3,A0	;;	restore the text pointer and...
   8691 FFFCC1D2 6024                        	BRA	EXGO		;execute the default.
   8692 FFFCC1D4                             EXNGO:
   8693 FFFCC1D4 1600                        	MOVE.B	D0,D3	;	Else check for period...
   8694 FFFCC1D6 C602                        	AND.B	D2,D3		;and a match.
   8695 FFFCC1D8 B63C 002E                   	CMP.B	#'.',D3
   8696 FFFCC1DC 671A                        	BEQ	EXGO		;if so, execute
   8697 FFFCC1DE 0201 007F                   	AND.B	#0x7F,D1 ;	ignore the table's high bit
   8698 FFFCC1E2 B200                        	CMP.B	D0,D1	;	is there a match?
   8699 FFFCC1E4 670C                        	BEQ	EXMAT
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 89
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8700 FFFCC1E6 548A                        	ADDQ.L	#2,A2	;	if not, try the next entry
   8701 FFFCC1E8 204B                        	MOVE.L	A3,A0	;	reset the program pointer
   8702 FFFCC1EA 4202                        	CLR.B	D2		;sorry, no match
   8703 FFFCC1EC                             EX1:
   8704 FFFCC1EC 4A19                        	TST.B	(A1)+	;	get to the end of the entry
   8705 FFFCC1EE 6AFC                        	BPL	EX1
   8706 FFFCC1F0 60D8                        	BRA	EXLP		;back for more matching
   8707 FFFCC1F2                             EXMAT:
   8708 FFFCC1F2 74FF                        	MOVEQ	#-1,D2;		we've got a match so far
   8709 FFFCC1F4 4A19                        	TST.B	(A1)+	;	end of table entry?
   8710 FFFCC1F6 6AD2                        	BPL	EXLP		;if not, go back for more
   8711 FFFCC1F8                             EXGO:
   8712 FFFCC1F8 47F8 0000                   	LEA	0,A3	;	execute the appropriate routine
   8713 FFFCC1FC 2652                        	MOVE	(A2),A3
   8714 FFFCC1FE 4ED3                        	JMP	(A3)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* What follows is the code to execute direct and statement
                                             ;* commands. Control is transferred to these points via the command
                                             ;* table lookup code of 'DIRECT' and 'EXEC' in the last section.
                                             ;* After the command is executed, control is transferred to other
                                             ;* sections as follows:
                                             ;*
                                             ;* For 'LIST', 'NEW', and 'STOP': go back to the warm start point.
                                             ;* For 'RUN': go execute the first stored line if any; else go
                                             ;* back to the warm start point.
                                             ;* For 'GOTO' and 'GOSUB': go execute the target line.
                                             ;* For 'RETURN' and 'NEXT'; go back to saved return line.
                                             ;* For all others: if 'CURRNT' is 0, go to warm start; else go;
                                             ;* execute next command. (This is done in 'FINISH'.)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** NEW *** STOP *** RUN (& friends) *** GOTO ***
                                             ;*
                                             ;* 'NEW<CR>' sets TXTUNF to point to TXTBGN
                                             ;*
                                             ;* 'STOP<CR>' goes back to WSTART
                                             ;*
                                             ;* 'RUN<CR>' finds the first stored line, stores its address
                                             ;* in CURRNT, and starts executing it. Note that only those
                                             ;* commands in TAB2 are legal for a stored program.
                                             ;*
                                             ;* There are 3 more entries in 'RUN':
                                             ;* 'RUNNXL' finds next line, stores it's address and executes it.
                                             ;* 'RUNTSL' stores the address of this line and executes it.
                                             ;* 'RUNSML' continues the execution on same line.
                                             ;*
                                             ;* 'GOTO expr<CR>' evaluates the expression, finds the target
                                             ;* line, and jumps to 'RUNTSL' to do it.
                                             ;*
   8752 FFFCC200                             NEW:
   8753 FFFCC200 6100 0630                   	BSR.L	ENDCHK
   8754 FFFCC204 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;set the end pointer
                                             
   8756 FFFCC20C                             STOP_:
   8757 FFFCC20C 6100 0624                   	BSR.L	ENDCHK
   8758 FFFCC210 6000 FE4E                   	BRA	WSTART
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 90
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8760 FFFCC214                             RUN:
   8761 FFFCC214 6100 061C                   	BSR.L	ENDCHK
   8762 FFFCC218 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to beginning
   8763 FFFCC21E 21C8 0604                   	MOVE.L	A0,CURRNT
                                             
   8765 FFFCC222                             RUNNXL:
   8766 FFFCC222 4AB8 0604                   	TST.L	CURRNT	;	executing a program?
   8767 FFFCC226 6700 FE38                   	BEQ.L	WSTART		;if not, we've finished a direct stat.
   8768 FFFCC22A 4281                        	CLR.L	D1		;else find the next line number
   8769 FFFCC22C 2248                        	MOVE.L	A0,A1
   8770 FFFCC22E 6100 0714                   	BSR.L	FNDLNP
   8771 FFFCC232 6500 FE2C                   	BCS	WSTART		;if we've fallen off the end, stop
                                             
   8773 FFFCC236                             RUNTSL:
   8774 FFFCC236 21C9 0604                   	MOVE.L	A1,CURRNT	;set CURRNT to point to the line no.
   8775 FFFCC23A 2049                        	MOVE.L	A1,A0		;set the text pointer to
   8776 FFFCC23C 5488                        	ADDQ.L	#2,A0		;the start of the line text
                                             
   8778 FFFCC23E                             RUNSML:
   8779 FFFCC23E 6100 090E                   	BSR.L	CHKIO	;	see if a control-C was pressed
   8780 FFFCC242 43F9 FFFC C114              	LEA	TAB2,A1 	;find command in TAB2
   8781 FFFCC248 45F9 FFFC C178              	LEA	TAB2_1,A2
   8782 FFFCC24E 6000 FF72                   	BRA	EXEC		;and execute it
                                             
   8784 FFFCC252                             GOTO:
   8785 FFFCC252 6100 036E                   	BSR.L	EXPR	;	evaluate the following expression
   8786 FFFCC256 6100 05DA                   	BSR.L	ENDCHK		;must find end of line
   8787 FFFCC25A 2200                        	MOVE.L	D0,D1
   8788 FFFCC25C 6100 06D6                   	BSR.L	FNDLN		;find the target line
   8789 FFFCC260 6600 0628                   	BNE.L	QHOW		;no such line no.
   8790 FFFCC264 60D0                        	BRA	RUNTSL		;go do it
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LIST *** PRINT ***
                                             ;*
                                             ;* LIST has two forms:
                                             ;* 'LIST<CR>' lists all saved lines
                                             ;* 'LIST #<CR>' starts listing at the line #
                                             ;* Control-S pauses the listing, control-C stops it.
                                             ;*
                                             ;* PRINT command is 'PRINT ....:' or 'PRINT ....<CR>'
                                             ;* where '....' is a list of expressions, formats, back-arrows,
                                             ;* and strings.	These items a separated by commas.
                                             ;*
                                             ;* A format is a pound sign followed by a number.  It controls
                                             ;* the number of spaces the value of an expression is going to
                                             ;* be printed in.  It stays effective for the rest of the print
                                             ;* command unless changed by another format.  If no format is
                                             ;* specified, 11 positions will be used.
                                             ;*
                                             ;* A string is quoted in a pair of single- or double-quotes.
                                             ;*
                                             ;* An underline (back-arrow) means generate a <CR> without a <LF>
                                             ;*
                                             ;* A <CR LF> is generated after the entire list has been printed
                                             ;* or if the list is empty.  If the list ends with a semicolon,
                                             ;* however, no <CR LF> is generated.
                                             ;*
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 91
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
   8821 FFFCC266                             LIST_:
   8822 FFFCC266 6100 0856                   	BSR.L	TSTNUM	;	see if there's a line no.
   8823 FFFCC26A 6100 05C6                   	BSR.L	ENDCHK		;if not, we get a zero
   8824 FFFCC26E 6100 06C4                   	BSR.L	FNDLN		;find this or next line
   8825 FFFCC272                             LS1:
   8826 FFFCC272 6500 FDEC                   	BCS	WSTART		;warm start if we passed the end
   8827 FFFCC276 6100 0810                   	BSR.L	PRTLN	;	print the line
   8828 FFFCC27A 6100 08D2                   	BSR.L	CHKIO	;	check for listing halt request
   8829 FFFCC27E 670C                        	BEQ	LS3
   8830 FFFCC280 B03C 0013                   	CMP.B	#CTRLS,D0	;pause the listing?
   8831 FFFCC284 6606                        	BNE	LS3
   8832 FFFCC286                             LS2:
   8833 FFFCC286 6100 08C6                   	BSR.L	CHKIO		;if so, wait for another keypress
   8834 FFFCC28A 67FA                        	BEQ	LS2
   8835 FFFCC28C                             LS3:
   8836 FFFCC28C 6100 06B6                   	BSR.L	FNDLNP		;find the next line
   8837 FFFCC290 60E0                        	BRA	LS1
                                             
   8839 FFFCC292                             PRINT:
   8840 FFFCC292 780B                        	MOVE	#11,D4	;	D4 = number of print spaces
   8841 FFFCC294 6100 080E                   	BSR.L	TSTC		;if null list and ":"
   8842 FFFCC298 3A 07                       	DC.B	':',PR2-$
   8843 FFFCC29A 6100 08C4                   	BSR.L	CRLF		;give CR-LF and continue
   8844 FFFCC29E 609E                        	BRA	RUNSML		;execution on the same line
   8845 FFFCC2A0                             PR2:
   8846 FFFCC2A0 6100 0802                   	BSR.L	TSTC		;if null list and <CR>
   8847 FFFCC2A4 0D 09                       	DC.B	CR,PR0-$
   8848 FFFCC2A6 6100 08B8                   	BSR.L	CRLF		;also give CR-LF and
   8849 FFFCC2AA 6000 FF76                   	BRA	RUNNXL		;execute the next line
   8850 FFFCC2AE                             PR0:
   8851 FFFCC2AE 6100 07F4                   	BSR.L	TSTC		;else is it a format?
   8852 FFFCC2B2 23 09                       	DC.B	'#',PR1-$
   8853 FFFCC2B4 6100 030C                   	BSR.L	EXPR		;yes, evaluate expression
   8854 FFFCC2B8 2800                        	MOVE	D0,D4		;and save it as print width
   8855 FFFCC2BA 6016                        	BRA	PR3		;look for more to print
   8856 FFFCC2BC                             PR1:
   8857 FFFCC2BC 6100 07E6                   	BSR.L	TSTC		;is character expression? (MRL)
   8858 FFFCC2C0 24 0B                       	DC.B	'$',PR4-$
   8859 FFFCC2C2 6100 02FE                   	BSR.L	EXPR		;yep. Evaluate expression (MRL)
   8860 FFFCC2C6 6100 FD40                   	BSR	GOOUT		;print low byte (MRL)
   8861 FFFCC2CA 6006                        	BRA	PR3		;look for more. (MRL)
   8862 FFFCC2CC                             PR4:
   8863 FFFCC2CC 6100 0706                   	BSR.L	QTSTG	;	is it a string?
   8864 FFFCC2D0 6012                        	BRA.S	PR8		;if not, must be an expression
   8865 FFFCC2D2                             PR3:
   8866 FFFCC2D2 6100 07D0                   	BSR.L	TSTC	;	if ",", go find next
   8867 FFFCC2D6 2C 07                       	DC.B	',',PR6-$
   8868 FFFCC2D8 6100 053E                   	BSR.L	FIN		;in the list.
   8869 FFFCC2DC 60D0                        	BRA	PR0
   8870 FFFCC2DE                             PR6:
   8871 FFFCC2DE 6100 0880                   	BSR.L	CRLF	;	list ends here
   8872 FFFCC2E2 6010                        	BRA	FINISH
   8873 FFFCC2E4                             PR8:
   8874 FFFCC2E4 2F04                        	MOVE	D4,-(SP)	;save the width value
   8875 FFFCC2E6 6100 02DA                   	BSR.L	EXPR		;evaluate the expression
   8876 FFFCC2EA 281F                        	MOVE	(SP)+,D4	;restore the width
   8877 FFFCC2EC 2200                        	MOVE.L	D0,D1
   8878 FFFCC2EE 6100 0724                   	BSR.L	PRTNUM		;print its value
   8879 FFFCC2F2 60DE                        	BRA	PR3		;more to print?
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 92
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
   8881 FFFCC2F4                             FINISH:
   8882 FFFCC2F4 6100 0522                   	BSR.L	FIN	;	Check end of command
   8883 FFFCC2F8 6000 0544                   	BRA.L	QWHAT	;	print "What?" if wrong
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GOSUB *** & RETURN ***
                                             ;*
                                             ;* 'GOSUB expr:' or 'GOSUB expr<CR>' is like the 'GOTO' command,
                                             ;* except that the current text pointer, stack pointer, etc. are
                                             ;* saved so that execution can be continued after the subroutine
                                             ;* 'RETURN's.  In order that 'GOSUB' can be nested (and even
                                             ;* recursive), the save area must be stacked.  The stack pointer
                                             ;* is saved in 'STKGOS'.  The old 'STKGOS' is saved on the stack.
                                             ;* If we are in the main routine, 'STKGOS' is zero (this was done
                                             ;* in the initialization section of the interpreter), but we still
                                             ;* save it as a flag for no further 'RETURN's.
                                             ;*
                                             ;* 'RETURN<CR>' undoes everything that 'GOSUB' did, and thus
                                             ;* returns the execution to the command after the most recent
                                             ;* 'GOSUB'.  If 'STKGOS' is zero, it indicates that we never had
                                             ;* a 'GOSUB' and is thus an error.
                                             ;*
   8905 FFFCC2FC                             GOSUB:
   8906 FFFCC2FC 6100 0694                   	BSR.L	PUSHA	;	save the current 'FOR' parameters
   8907 FFFCC300 6100 02C0                   	BSR.L	EXPR		;get line number
   8908 FFFCC304 2F08                        	MOVE.L	A0,-(SP)	;save text pointer
   8909 FFFCC306 2200                        	MOVE.L	D0,D1
   8910 FFFCC308 6100 062A                   	BSR.L	FNDLN		;find the target line
   8911 FFFCC30C 6600 057E                   	BNE.L	AHOW		;if not there, say "How?"
   8912 FFFCC310 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;found it, save old 'CURRNT'...
   8913 FFFCC314 2F38 0608                   	MOVE.L	STKGOS,-(SP)	;and 'STKGOS'
   8914 FFFCC318 42B8 0610                   	CLR.L	LOPVAR		;load new values
   8915 FFFCC31C 21CF 0608                   	MOVE.L	SP,STKGOS
   8916 FFFCC320 6000 FF14                   	BRA	RUNTSL
                                             
   8918 FFFCC324                             RETURN:
   8919 FFFCC324 6100 050C                   	BSR.L	ENDCHK	;	there should be just a <CR>
   8920 FFFCC328 2238 0608                   	MOVE.L	STKGOS,D1	;get old stack pointer
   8921 FFFCC32C 6700 0510                   	BEQ.L	QWHAT		;if zero, it doesn't exist
   8922 FFFCC330 2E41                        	MOVE.L	D1,SP		;else restore it
   8923 FFFCC332 21DF 0608                   	MOVE.L	(SP)+,STKGOS	;and the old 'STKGOS'
   8924 FFFCC336 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;and the old 'CURRNT'
   8925 FFFCC33A 205F                        	MOVE.L	(SP)+,A0	;and the old text pointer
   8926 FFFCC33C 6100 063A                   	BSR.L	POPA		;and the old 'FOR' parameters
   8927 FFFCC340 60B2                        	BRA	FINISH		;and we are back home
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** FOR *** & NEXT ***
                                             ;*
                                             ;* 'FOR' has two forms:
                                             ;* 'FOR var=exp1 TO exp2 STEP exp1' and 'FOR var=exp1 TO exp2'
                                             ;* The second form means the same thing as the first form with a
                                             ;* STEP of positive 1.  The interpreter will find the variable 'var'
                                             ;* and set its value to the current value of 'exp1'.  It also
                                             ;* evaluates 'exp2' and 'exp1' and saves all these together with
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 93
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* the text pointer, etc. in the 'FOR' save area, which consisits of
                                             ;* 'LOPVAR', 'LOPINC', 'LOPLMT', 'LOPLN', and 'LOPPT'.  If there is
                                             ;* already something in the save area (indicated by a non-zero
                                             ;* 'LOPVAR'), then the old save area is saved on the stack before
                                             ;* the new values are stored.  The interpreter will then dig in the
                                             ;* stack and find out if this same variable was used in another
                                             ;* currently active 'FOR' loop.  If that is the case, then the old
                                             ;* 'FOR' loop is deactivated. (i.e. purged from the stack)
                                             ;*
                                             ;* 'NEXT var' serves as the logical (not necessarily physical) end
                                             ;* of the 'FOR' loop.  The control variable 'var' is checked with
                                             ;* the 'LOPVAR'.  If they are not the same, the interpreter digs in
                                             ;* the stack to find the right one and purges all those that didn't
                                             ;* match.  Either way, it then adds the 'STEP' to that variable and
                                             ;* checks the result with against the limit value.  If it is within
                                             ;* the limit, control loops back to the command following the
                                             ;* 'FOR'.  If it's outside the limit, the save area is purged and
                                             ;* execution continues.
                                             ;*
   8959 FFFCC342                             FOR:
   8960 FFFCC342 6100 064E                   	BSR.L	PUSHA		;save the old 'FOR' save area
   8961 FFFCC346 6100 04B6                   	BSR.L	SETVAL		;set the control variable
   8962 FFFCC34A 21CE 0610                   	MOVE.L	A6,LOPVAR	;save its address
   8963 FFFCC34E 43F9 FFFC C15B              	LEA	TAB5,A1 	;use 'EXEC' to test for 'TO'
   8964 FFFCC354 45F9 FFFC C1A0              	LEA	TAB5_1,A2
   8965 FFFCC35A 6000 FE66                   	BRA	EXEC
   8966 FFFCC35E                             FR1:
   8967 FFFCC35E 6100 0262                   	BSR.L	EXPR		;evaluate the limit
   8968 FFFCC362 21C0 0618                   	MOVE.L	D0,LOPLMT	;save that
   8969 FFFCC366 43F9 FFFC C15E              	LEA	TAB6,A1 	;use 'EXEC' to look for the
   8970 FFFCC36C 45F9 FFFC C1A4              	LEA	TAB6_1,A2	;word 'STEP'
   8971 FFFCC372 6000 FE4E                   	BRA	EXEC
   8972 FFFCC376                             FR2:
   8973 FFFCC376 6100 024A                   	BSR.L	EXPR	;	found it, get the step value
   8974 FFFCC37A 6002                        	BRA	FR4
   8975 FFFCC37C                             FR3:
   8976 FFFCC37C 7001                        	MOVEQ	#1,D0	;	not found, step defaults to 1
   8977 FFFCC37E                             FR4:
   8978 FFFCC37E 21C0 0614                   	MOVE.L	D0,LOPINC	;save that too
   8979 FFFCC382                             FR5:
   8980 FFFCC382 21F8 0604 061C              	MOVE.L	CURRNT,LOPLN	;save address of current line number
   8981 FFFCC388 21C8 0620                   	MOVE.L	A0,LOPPT	;and text pointer
   8982 FFFCC38C 2C4F                        	MOVE.L	SP,A6		;dig into the stack to find 'LOPVAR'
   8983 FFFCC38E 6006                        	BRA	FR7
   8984 FFFCC390                             FR6:
   8985 FFFCC390 DDFC 0000 0014              	ADD.L	#20,A6		;look at next stack frame
   8986 FFFCC396                             FR7:
   8987 FFFCC396 2016                        	MOVE.L	(A6),D0 	;is it zero?
   8988 FFFCC398 6716                        	BEQ	FR8		;if so, we're done
   8989 FFFCC39A B0B8 0610                   	CMP.L	LOPVAR,D0	;same as current LOPVAR?
   8990 FFFCC39E 66F0                        	BNE	FR6		;nope, look some more
   8991 FFFCC3A0 244F                        	MOVE.L	SP,A2	;	Else remove 5 long words from...
   8992 FFFCC3A2 224E                        	MOVE.L	A6,A1	;	inside the stack.
   8993 FFFCC3A4 47F8 0014                   	LEA	20,A3
   8994 FFFCC3A8 D7C9                        	ADD.L	A1,A3
   8995 FFFCC3AA 6100 05C4                   	BSR.L	MVDOWN
   8996 FFFCC3AE 2E4B                        	MOVE.L	A3,SP	;	set the SP 5 long words up
   8997 FFFCC3B0                             FR8:
   8998 FFFCC3B0 6000 FF42                   	BRA	FINISH		;and continue execution
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 94
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9000 FFFCC3B4                             NEXT:
   9001 FFFCC3B4 6100 031E                   	BSR.L	TSTV;		get address of variable
   9002 FFFCC3B8 6500 0484                   	BCS.L	QWHAT	;	if no variable, say "What?"
   9003 FFFCC3BC 2240                        	MOVE.L	D0,A1	;	save variable's address
   9004 FFFCC3BE                             NX0:
   9005 FFFCC3BE 2038 0610                   	MOVE.L	LOPVAR,D0;	If 'LOPVAR' is zero, we never...
   9006 FFFCC3C2 6700 047A                   	BEQ.L	QWHAT	;	had a FOR loop, so say "What?"
   9007 FFFCC3C6 B3C0                        	CMP.L	D0,A1	;;	else we check them
   9008 FFFCC3C8 6706                        	BEQ	NX3	;	OK, they agree
   9009 FFFCC3CA 6100 05AC                   	BSR.L	POPA	;	nope, let's see the next frame
   9010 FFFCC3CE 60EE                        	BRA	NX0
   9011 FFFCC3D0                             NX3:
   9012 FFFCC3D0 2011                        	MOVE.L	(A1),D0 ;	get control variable's value
   9013 FFFCC3D2 D0B8 0614                   	ADD.L	LOPINC,D0;	add in loop increment
   9014 FFFCC3D6 6900 04B2                   	BVS.L	QHOW	;	say "How?" for 32-bit overflow
   9015 FFFCC3DA 2280                        	MOVE.L	D0,(A1) ;	save control variable's new value
   9016 FFFCC3DC 2238 0618                   	MOVE.L	LOPLMT,D1;	get loop's limit value
   9017 FFFCC3E0 4AB8 0614                   	TST.L	LOPINC
   9018 FFFCC3E4 6A02                        	BPL	NX1	;	branch if loop increment is positive
   9019 FFFCC3E6 C141                        	EXG	D0,D1
   9020 FFFCC3E8                             NX1:
   9021 FFFCC3E8 B280                        	CMP.L	D0,D1;		test against limit
   9022 FFFCC3EA 6D0E                        	BLT	NX2;		branch if outside limit
   9023 FFFCC3EC 21F8 061C 0604              	MOVE.L	LOPLN,CURRNT	;Within limit, go back to the...
   9024 FFFCC3F2 2078 0620                   	MOVE.L	LOPPT,A0	;saved 'CURRNT' and text pointer.
   9025 FFFCC3F6 6000 FEFC                   	BRA	FINISH
   9026 FFFCC3FA                             NX2:
   9027 FFFCC3FA 6100 057C                   	BSR.L	POPA		;purge this loop
   9028 FFFCC3FE 6000 FEF4                   	BRA	FINISH
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** REM *** IF *** INPUT *** LET (& DEFLT) ***
                                             ;*
                                             ;* 'REM' can be followed by anything and is ignored by the
                                             ;* interpreter.
                                             ;*
                                             ;* 'IF' is followed by an expression, as a condition and one or
                                             ;* more commands (including other 'IF's) separated by colons.
                                             ;* Note that the word 'THEN' is not used.  The interpreter evaluates
                                             ;* the expression.  If it is non-zero, execution continues.  If it
                                             ;* is zero, the commands that follow are ignored and execution
                                             ;* continues on the next line.
                                             ;*
                                             ;* 'INPUT' is like the 'PRINT' command, and is followed by a list
                                             ;* of items.  If the item is a string in single or double quotes,
                                             ;* or is an underline (back arrow), it has the same effect as in
                                             ;* 'PRINT'.  If an item is a variable, this variable name is
                                             ;* printed out followed by a colon, then the interpreter waits for
                                             ;* an expression to be typed in.  The variable is then set to the
                                             ;* value of this expression.  If the variable is preceeded by a
                                             ;* string (again in single or double quotes), the string will be
                                             ;* displayed followed by a colon.  The interpreter the waits for an
                                             ;* expression to be entered and sets the variable equal to the
                                             ;* expression's value.  If the input expression is invalid, the
                                             ;* interpreter will print "What?", "How?", or "Sorry" and reprint
                                             ;* the prompt and redo the input.  The execution will not terminate
                                             ;* unless you press control-C.  This is handled in 'INPERR'.
                                             ;*
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 95
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* 'LET' is followed by a list of items separated by commas.
                                             ;* Each item consists of a variable, an equals sign, and an
                                             ;* expression.  The interpreter evaluates the expression and sets
                                             ;* the variable to that value.  The interpreter will also handle
                                             ;* 'LET' commands without the word 'LET'.  This is done by 'DEFLT'.
                                             ;*
   9066 FFFCC402                             REM:
   9067 FFFCC402 600A                        	BRA	IF2		;skip the rest of the line
                                             
   9069 FFFCC404                             IF:	
   9070 FFFCC404 6100 01BC                   	BSR.L	EXPR	;	evaluate the expression
   9071 FFFCC408                             IF1:
   9072 FFFCC408 4A80                        	TST.L	D0		;is it zero?
   9073 FFFCC40A 6600 FE32                   	BNE	RUNSML		;if not, continue
   9074 FFFCC40E                             IF2:
   9075 FFFCC40E 2248                        	MOVE.L	A0,A1
   9076 FFFCC410 4281                        	CLR.L	D1
   9077 FFFCC412 6100 054A                   	BSR.L	FNDSKP	;	if so, skip the rest of the line
   9078 FFFCC416 6400 FE1E                   	BCC	RUNTSL		;and run the next line
   9079 FFFCC41A 6000 FC44                   	BRA.L	WSTART	;	if no next line, do a warm start
                                             
   9081 FFFCC41E                             INPERR:
   9082 FFFCC41E 2E78 060C                   	MOVE.L	STKINP,SP;	restore the old stack pointer
   9083 FFFCC422 21DF 0604                   	MOVE.L	(SP)+,CURRNT;	and old 'CURRNT'
   9084 FFFCC426 588F                        	ADDQ.L	#4,SP
   9085 FFFCC428 205F                        	MOVE.L	(SP)+,A0	;and old text pointer
                                             
   9087 FFFCC42A                             INPUT:
   9088 FFFCC42A 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   9089 FFFCC42C 6100 05A6                   	BSR.L	QTSTG		;is next item a string?
   9090 FFFCC430 600A                        	BRA.S	IP2		;nope
   9091 FFFCC432 6100 02A0                   	BSR.L	TSTV	;	yes, but is it followed by a variable?
   9092 FFFCC436 654C                        	BCS	IP4		;if not, branch
   9093 FFFCC438 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   9094 FFFCC43A 601A                        	BRA	IP3		;if so, input to variable
   9095 FFFCC43C                             IP2:
   9096 FFFCC43C 2F08                        	MOVE.L	A0,-(SP);	save for 'PRTSTG'
   9097 FFFCC43E 6100 0294                   	BSR.L	TSTV	;	must be a variable now
   9098 FFFCC442 6500 03FA                   	BCS.L	QWHAT	;	"What?" it isn't?
   9099 FFFCC446 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   9100 FFFCC448 1410                        	MOVE.B	(A0),D2 ;	get ready for 'PRTSTG'
   9101 FFFCC44A 4200                        	CLR.B	D0
   9102 FFFCC44C 1080                        	MOVE.B	D0,(A0)
   9103 FFFCC44E 225F                        	MOVE.L	(SP)+,A1
   9104 FFFCC450 6100 0566                   	BSR.L	PRTSTG	;	print string as prompt
   9105 FFFCC454 1082                        	MOVE.B	D2,(A0) ;	restore text
   9106 FFFCC456                             IP3:
   9107 FFFCC456 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   9108 FFFCC458 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;also save 'CURRNT'
   9109 FFFCC45C 21FC FFFF FFFF 0604         	MOVE.L	#-1,CURRNT	;flag that we are in INPUT
   9110 FFFCC464 21CF 060C                   	MOVE.L	SP,STKINP	;save the stack pointer too
   9111 FFFCC468 2F0A                        	MOVE.L	A2,-(SP)	;save the variable address
   9112 FFFCC46A 103C 003A                   	MOVE.B	#':',D0     ;    print a colon first
   9113 FFFCC46E 6100 0424                   	BSR.L	GETLN		;then get an input line
   9114 FFFCC472 41F8 0630                   	LEA	BUFFER,A0	;point to the buffer
   9115 FFFCC476 6100 014A                   	BSR.L	EXPR	;	evaluate the input
   9116 FFFCC47A 245F                        	MOVE.L	(SP)+,A2	;restore the variable address
   9117 FFFCC47C 2480                        	MOVE.L	D0,(A2) 	;save value in variable
   9118 FFFCC47E 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;restore old 'CURRNT'
   9119 FFFCC482 205F                        	MOVE.L	(SP)+,A0;	and the old text pointer
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 96
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9120 FFFCC484                             IP4:
   9121 FFFCC484 588F                        	ADDQ.L	#4,SP	;	clean up the stack
   9122 FFFCC486 6100 061C                   	BSR.L	TSTC	;	is the next thing a comma?
   9123 FFFCC48A 2C 03                       	DC.B	',',IP5-$
   9124 FFFCC48C 609C                        	BRA	INPUT	;	yes, more items
   9125 FFFCC48E                             IP5:
   9126 FFFCC48E 6000 FE64                   	BRA	FINISH
                                             
   9128 FFFCC492                             DEFLT:
   9129 FFFCC492 0C10 000D                   	CMP.B	#CR,(A0);	empty line is OK
   9130 FFFCC496 670C                        	BEQ	LT1		;else it is 'LET'
                                             
   9132 FFFCC498                             LET:
   9133 FFFCC498 6100 0364                   	BSR.L	SETVAL		;do the assignment
   9134 FFFCC49C 6100 0606                   	BSR.L	TSTC		;check for more 'LET' items
   9135 FFFCC4A0 2C 03                       	DC.B	',',LT1-$
   9136 FFFCC4A2 60F4                        	BRA	LET
   9137 FFFCC4A4                             LT1:
   9138 FFFCC4A4 6000 FE4E                   	BRA	FINISH		;until we are finished.
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LOAD *** & SAVE ***
                                             ;*
                                             ;* These two commands transfer a program to/from an auxiliary
                                             ;* device such as a cassette, another computer, etc.  The program
                                             ;* is converted to an easily-stored format: each line starts with
                                             ;* a colon, the line no. as 4 hex digits, and the rest of the line.
                                             ;* At the end, a line starting with an '@' sign is sent.  This
                                             ;* format can be read back with a minimum of processing time by
                                             ;* the 68000.
                                             ;*
   9153 FFFCC4A8                             LOAD:
   9154 FFFCC4A8 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to start of prog. area
   9155 FFFCC4AE 103C 000D                   	MOVE.B	#CR,D0		;For a CP/M host, tell it we're ready...
   9156 FFFCC4B2 6100 FB5C                   	BSR	GOAUXO		;by sending a CR to finish PIP command.
   9157 FFFCC4B6                             LOD1:
   9158 FFFCC4B6 6100 FB5C                   	BSR	GOAUXI	;	look for start of line
   9159 FFFCC4BA 67FA                        	BEQ	LOD1
   9160 FFFCC4BC B03C 0040                   	CMP.B	#'@',D0  ;       end of program?
   9161 FFFCC4C0 6722                        	BEQ	LODEND
   9162 FFFCC4C2 B03C 003A                   	CMP.B	#':',D0   ;      if not, is it start of line?
   9163 FFFCC4C6 66EE                        	BNE	LOD1		;if not, wait for it
   9164 FFFCC4C8 6100 0022                   	BSR	GBYTE		;get first byte of line no.
   9165 FFFCC4CC 10C1                        	MOVE.B	D1,(A0)+	;store it
   9166 FFFCC4CE 6100 001C                   	BSR	GBYTE		;get 2nd bye of line no.
   9167 FFFCC4D2 10C1                        	MOVE.B	D1,(A0)+;	store that, too
   9168 FFFCC4D4                             LOD2:
   9169 FFFCC4D4 6100 FB3E                   	BSR	GOAUXI	;	get another text char.
   9170 FFFCC4D8 67FA                        	BEQ	LOD2
   9171 FFFCC4DA 10C0                        	MOVE.B	D0,(A0)+	;store it
   9172 FFFCC4DC B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9173 FFFCC4E0 66F2                        	BNE	LOD2		;if not, go back for more
   9174 FFFCC4E2 60D2                        	BRA	LOD1		;if so, start a new line
   9175 FFFCC4E4                             LODEND:
   9176 FFFCC4E4 21C8 0624                   	MOVE.L	A0,TXTUNF	;set end-of program pointer
   9177 FFFCC4E8 6000 FB76                   	BRA	WSTART		;back to direct mode
                                             
   9179 FFFCC4EC                             GBYTE:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 97
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9180 FFFCC4EC 7401                        	MOVEQ	#1,D2;		get two hex characters from auxiliary
   9181 FFFCC4EE 4281                        	CLR	D1		;and store them as a byte in D1
   9182 FFFCC4F0                             GBYTE1:
   9183 FFFCC4F0 6100 FB22                   	BSR	GOAUXI	;	get a char.
   9184 FFFCC4F4 67FA                        	BEQ	GBYTE1
   9185 FFFCC4F6 B03C 0041                   	CMP.B	#'A',D0
   9186 FFFCC4FA 6502                        	BCS	GBYTE2
   9187 FFFCC4FC 5F00                        	SUBQ.B	#7,D0	;	if greater than 9, adjust
   9188 FFFCC4FE                             GBYTE2:
   9189 FFFCC4FE 0200 000F                   	AND.B	#0xF,D0		;strip ASCII
   9190 FFFCC502 E909                        	LSL.B	#4,D1		;put nybble into the result
   9191 FFFCC504 8200                        	OR.B	D0,D1
   9192 FFFCC506 51CA FFE8                   	DBRA	D2,GBYTE1	;get another char.
   9193 FFFCC50A 4E75                        	RTS
                                             
   9195 FFFCC50C                             SAVE:
   9196 FFFCC50C 2079 FFFC C01C              	MOVE.L	TXTBGN,A0;	set pointer to start of prog. area
   9197 FFFCC512 2278 0624                   	MOVE.L	TXTUNF,A1	;set pointer to end of prog. area
   9198 FFFCC516                             SAVE1:
   9199 FFFCC516 103C 000D                   	MOVE.B	#CR,D0	;	send out a CR & LF (CP/M likes this)
   9200 FFFCC51A 6100 FAF4                   	BSR	GOAUXO
   9201 FFFCC51E 103C 000A                   	MOVE.B	#LF,D0
   9202 FFFCC522 6100 FAEC                   	BSR	GOAUXO
   9203 FFFCC526 B3C8                        	CMP.L	A0,A1		;are we finished?
   9204 FFFCC528 6322                        	BLS	SAVEND
   9205 FFFCC52A 103C 003A                   	MOVE.B	#':',D0      ;   if not, start a line
   9206 FFFCC52E 6100 FAE0                   	BSR	GOAUXO
   9207 FFFCC532 1218                        	MOVE.B	(A0)+,D1	;send first half of line no.
   9208 FFFCC534 6100 003A                   	BSR	PBYTE
   9209 FFFCC538 1218                        	MOVE.B	(A0)+,D1	;and send 2nd half
   9210 FFFCC53A 6100 0034                   	BSR	PBYTE
   9211 FFFCC53E                             SAVE2:
   9212 FFFCC53E 1018                        	MOVE.B	(A0)+,D0;	get a text char.
   9213 FFFCC540 B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9214 FFFCC544 67D0                        	BEQ	SAVE1		;if so, send CR & LF and start new line
   9215 FFFCC546 6100 FAC8                   	BSR	GOAUXO		;send it out
   9216 FFFCC54A 60F2                        	BRA	SAVE2		;go back for more text
   9217 FFFCC54C                             SAVEND:
   9218 FFFCC54C 103C 0040                   	MOVE.B	#'@',D0 ;        send end-of-program indicator
   9219 FFFCC550 6100 FABE                   	BSR	GOAUXO
   9220 FFFCC554 103C 000D                   	MOVE.B	#CR,D0	;	followed by a CR & LF
   9221 FFFCC558 6100 FAB6                   	BSR	GOAUXO
   9222 FFFCC55C 103C 000A                   	MOVE.B	#LF,D0
   9223 FFFCC560 6100 FAAE                   	BSR	GOAUXO
   9224 FFFCC564 103C 001A                   	MOVE.B	#0x1A,D0 	;and a control-Z to end the CP/M file
   9225 FFFCC568 6100 FAA6                   	BSR	GOAUXO
   9226 FFFCC56C 6000 FAF2                   	BRA	WSTART		;then go do a warm start
                                             
   9228 FFFCC570                             PBYTE:
   9229 FFFCC570 7401                        	MOVEQ	#1,D2	;	send two hex characters from D1's low byte
   9230 FFFCC572                             PBYTE1:
   9231 FFFCC572 E919                        	ROL.B	#4,D1	;	get the next nybble
   9232 FFFCC574 1001                        	MOVE.B	D1,D0
   9233 FFFCC576 0200 000F                   	AND.B	#0xF,D0	;	strip off garbage
   9234 FFFCC57A 0600 0030                   	ADD.B	#'0',D0   ;      make it into ASCII
   9235 FFFCC57E B03C 0039                   	CMP.B	#'9',D0
   9236 FFFCC582 6302                        	BLS	PBYTE2
   9237 FFFCC584 5E00                        	ADDQ.B	#7,D0		;adjust if greater than 9
   9238 FFFCC586                             PBYTE2:
   9239 FFFCC586 6100 FA88                   	BSR	GOAUXO		;send it out
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 98
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9240 FFFCC58A 51CA FFE6                   	DBRA	D2,PBYTE1	;then send the next nybble
   9241 FFFCC58E 4E75                        	RTS
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** POKE *** & CALL ***
                                             ;*
                                             ;* 'POKE expr1,expr2' stores the byte from 'expr2' into the memory
                                             ;* address specified by 'expr1'.
                                             ;*
                                             ;* 'CALL expr' jumps to the machine language subroutine whose
                                             ;* starting address is specified by 'expr'.  The subroutine can use
                                             ;* all registers but must leave the stack the way it found it.
                                             ;* The subroutine returns to the interpreter by executing an RTS.
                                             ;*
   9256 FFFCC590                             POKE:
   9257 FFFCC590 6100 0030                   	BSR	EXPR		;get the memory address
   9258 FFFCC594 6100 050E                   	BSR.L	TSTC		;it must be followed by a comma
   9259 FFFCC598 2C 0F                       	DC.B	',',PKER-$
   9260 FFFCC59A 2F00                        	MOVE.L	D0,-(SP)	;save the address
   9261 FFFCC59C 6100 0024                   	BSR	EXPR		;get the byte to be POKE'd
   9262 FFFCC5A0 225F                        	MOVE.L	(SP)+,A1	;get the address back
   9263 FFFCC5A2 1280                        	MOVE.B	D0,(A1) 	;store the byte in memory
   9264 FFFCC5A4 6000 FD4E                   	BRA	FINISH
   9265 FFFCC5A8                             PKER:
   9266 FFFCC5A8 6000 0294                   	BRA.L	QWHAT	;	if no comma, say "What?"
                                             
   9268 FFFCC5AC                             CALL:
   9269 FFFCC5AC 6100 0014                   	BSR	EXPR		;get the subroutine's address
   9270 FFFCC5B0 4A80                        	TST.L	D0		;make sure we got a valid address
   9271 FFFCC5B2 6700 02D6                   	BEQ.L	QHOW	;	if not, say "How?"
   9272 FFFCC5B6 2F08                        	MOVE.L	A0,-(SP);	save the text pointer
   9273 FFFCC5B8 2240                        	MOVE.L	D0,A1
   9274 FFFCC5BA 4E91                        	JSR	(A1)		;jump to the subroutine
   9275 FFFCC5BC 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9276 FFFCC5BE 6000 FD34                   	BRA	FINISH
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** EXPR ***
                                             ;*
                                             ;* 'EXPR' evaluates arithmetical or logical expressions.
                                             ;* <EXPR>::=<EXPR2>
                                             ;*	   <EXPR2><rel.op.><EXPR2>
                                             ;* where <rel.op.> is one of the operators in TAB8 and the result
                                             ;* of these operations is 1 if true and 0 if false.
                                             ;* <EXPR2>::=(+ or -)<EXPR3>(+ or -)<EXPR3>(...
                                             ;* where () are optional and (... are optional repeats.
                                             ;* <EXPR3>::=<EXPR4>( <* or /><EXPR4> )(...
                                             ;* <EXPR4>::=<variable>
                                             ;*	    <function>
                                             ;*	    (<EXPR>)
                                             ;* <EXPR> is recursive so that the variable '@' can have an <EXPR>
                                             ;* as an index, functions can have an <EXPR> as arguments, and
                                             ;* <EXPR4> can be an <EXPR> in parenthesis.
                                             ;*
   9297 FFFCC5C2                             EXPR:
   9298 FFFCC5C2 6100 0066                   	BSR	EXPR2
   9299 FFFCC5C6 2F00                        	MOVE.L	D0,-(SP);	save <EXPR2> value
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 99
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9300 FFFCC5C8 43F9 FFFC C163              	LEA	TAB8,A1 	;look up a relational operator
   9301 FFFCC5CE 45F9 FFFC C1A8              	LEA	TAB8_1,A2
   9302 FFFCC5D4 6000 FBEC                   	BRA	EXEC		;go do it
                                             
   9304 FFFCC5D8                             XP11:
   9305 FFFCC5D8 6100 003E                   	BSR	XP18	;	is it ">="?
   9306 FFFCC5DC 6D2E                        	BLT	XPRT0		;no, return D0=0
   9307 FFFCC5DE 6030                        	BRA	XPRT1		;else return D0=1
                                             
   9309 FFFCC5E0                             XP12:
   9310 FFFCC5E0 6100 0036                   	BSR	XP18	;	is it "<>"?
   9311 FFFCC5E4 6726                        	BEQ	XPRT0		;no, return D0=0
   9312 FFFCC5E6 6028                        	BRA	XPRT1		;else return D0=1
                                             
   9314 FFFCC5E8                             XP13:
   9315 FFFCC5E8 6100 002E                   	BSR	XP18	;	is it ">"?
   9316 FFFCC5EC 6F1E                        	BLE	XPRT0		;no, return D0=0
   9317 FFFCC5EE 6020                        	BRA	XPRT1		;else return D0=1
                                             
   9319 FFFCC5F0                             XP14:
   9320 FFFCC5F0 6100 0026                   	BSR	XP18	;	is it "<="?
   9321 FFFCC5F4 6E16                        	BGT	XPRT0		;no, return D0=0
   9322 FFFCC5F6 6018                        	BRA	XPRT1		;else return D0=1
                                             
   9324 FFFCC5F8                             XP15:
   9325 FFFCC5F8 6100 001E                   	BSR	XP18	;	is it "="?
   9326 FFFCC5FC 660E                        	BNE	XPRT0		;if not, return D0=0
   9327 FFFCC5FE 6010                        	BRA	XPRT1		;else return D0=1
   9328 FFFCC600                             XP15RT:
   9329 FFFCC600 4E75                        	RTS
                                             
   9331 FFFCC602                             XP16:
   9332 FFFCC602 6100 0014                   	BSR	XP18	;	is it "<"?
   9333 FFFCC606 6C04                        	BGE	XPRT0		;if not, return D0=0
   9334 FFFCC608 6006                        	BRA	XPRT1		;else return D0=1
   9335 FFFCC60A                             XP16RT:
   9336 FFFCC60A 4E75                        	RTS
                                             
   9338 FFFCC60C                             XPRT0:
   9339 FFFCC60C 4280                        	CLR.L	D0	;	return D0=0 (false)
   9340 FFFCC60E 4E75                        	RTS
                                             
   9342 FFFCC610                             XPRT1:
   9343 FFFCC610 7001                        	MOVEQ	#1,D0;		return D0=1 (true)
   9344 FFFCC612 4E75                        	RTS
                                             
   9346 FFFCC614                             XP17:
   9347 FFFCC614 201F                        	MOVE.L	(SP)+,D0	;it's not a rel. operator
   9348 FFFCC616 4E75                        	RTS			;return D0=<EXPR2>
                                             
   9350 FFFCC618                             XP18:
   9351 FFFCC618 201F                        	MOVE.L	(SP)+,D0	;reverse the top two stack items
   9352 FFFCC61A 221F                        	MOVE.L	(SP)+,D1
   9353 FFFCC61C 2F00                        	MOVE.L	D0,-(SP)
   9354 FFFCC61E 2F01                        	MOVE.L	D1,-(SP)
   9355 FFFCC620 6100 0008                   	BSR	EXPR2		;do second <EXPR2>
   9356 FFFCC624 221F                        	MOVE.L	(SP)+,D1
   9357 FFFCC626 B280                        	CMP.L	D0,D1	;	compare with the first result
   9358 FFFCC628 4E75                        	RTS			;return the result
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 100
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9360 FFFCC62A                             EXPR2:
   9361 FFFCC62A 6100 0478                   	BSR.L	TSTC		;negative sign?
   9362 FFFCC62E 2D 05                       	DC.B	'-',XP21-$
   9363 FFFCC630 4280                        	CLR.L	D0	;	yes, fake '0-'
   9364 FFFCC632 6026                        	BRA	XP26
   9365 FFFCC634                             XP21:
   9366 FFFCC634 6100 046E                   	BSR.L	TSTC	;	positive sign? ignore it
   9367 FFFCC638 2B 01                       	DC.B	'+',XP22-$
   9368 FFFCC63A                             XP22:
   9369 FFFCC63A 6100 002C                   	BSR	EXPR3		;first <EXPR3>
   9370 FFFCC63E                             XP23:
   9371 FFFCC63E 6100 0464                   	BSR.L	TSTC	;	add?
   9372 FFFCC642 2B 11                       	DC.B	'+',XP25-$
   9373 FFFCC644 2F00                        	MOVE.L	D0,-(SP)	;yes, save the value
   9374 FFFCC646 6100 0020                   	BSR	EXPR3		;get the second <EXPR3>
   9375 FFFCC64A                             XP24:
   9376 FFFCC64A 221F                        	MOVE.L	(SP)+,D1
   9377 FFFCC64C D081                        	ADD.L	D1,D0	;	add it to the first <EXPR3>
   9378 FFFCC64E 6900 023A                   	BVS.L	QHOW	;	branch if there's an overflow
   9379 FFFCC652 60EA                        	BRA	XP23	;	else go back for more operations
   9380 FFFCC654                             XP25:
   9381 FFFCC654 6100 044E                   	BSR.L	TSTC		;subtract?
   9382 FFFCC658 2D 75                       	DC.B	'-',XP42-$
   9383 FFFCC65A                             XP26:
   9384 FFFCC65A 2F00                        	MOVE.L	D0,-(SP)	;yes, save the result of 1st <EXPR3>
   9385 FFFCC65C 6100 000A                   	BSR	EXPR3		;get second <EXPR3>
   9386 FFFCC660 4480                        	NEG.L	D0		;change its sign
   9387 FFFCC662 4EF9 FFFC C64A              	JMP	XP24		;and do an addition
                                             
   9389 FFFCC668                             EXPR3:
   9390 FFFCC668 6100 002C                   	BSR	EXPR4		;get first <EXPR4>
   9391 FFFCC66C                             XP31:
   9392 FFFCC66C 6100 0436                   	BSR.L	TSTC	;	multiply?
   9393 FFFCC670 2A 0F                       	DC.B	'*',XP34-$
   9394 FFFCC672 2F00                        	MOVE.L	D0,-(SP);	yes, save that first result
   9395 FFFCC674 6100 0020                   	BSR	EXPR4		;get second <EXPR4>
   9396 FFFCC678 221F                        	MOVE.L	(SP)+,D1
   9397 FFFCC67A 6100 00A8                   	BSR.L	MULT32	;	multiply the two
   9398 FFFCC67E 60EC                        	BRA	XP31		;then look for more terms
   9399 FFFCC680                             XP34:
   9400 FFFCC680 6100 0422                   	BSR.L	TSTC;		divide?
   9401 FFFCC684 2F 49                       	DC.B	'/',XP42-$
   9402 FFFCC686 2F00                        	MOVE.L	D0,-(SP);	save result of 1st <EXPR4>
   9403 FFFCC688 6100 000C                   	BSR	EXPR4		;get second <EXPR4>
   9404 FFFCC68C 221F                        	MOVE.L	(SP)+,D1
   9405 FFFCC68E C141                        	EXG	D0,D1
   9406 FFFCC690 6100 00D4                   	BSR.L	DIV32	;	do the division
   9407 FFFCC694 60D6                        	BRA	XP31		;go back for any more terms
                                             
   9409 FFFCC696                             EXPR4:
   9410 FFFCC696 43F9 FFFC C14C              	LEA	TAB4,A1 ;	find possible function
   9411 FFFCC69C 45F9 FFFC C196              	LEA	TAB4_1,A2
   9412 FFFCC6A2 6000 FB1E                   	BRA	EXEC
   9413 FFFCC6A6                             XP40:
   9414 FFFCC6A6 6100 002C                   	BSR	TSTV	;	nope, not a function
   9415 FFFCC6AA 6508                        	BCS	XP41		;nor a variable
   9416 FFFCC6AC 2240                        	MOVE.L	D0,A1
   9417 FFFCC6AE 4280                        	CLR.L	D0
   9418 FFFCC6B0 2011                        	MOVE.L	(A1),D0 ;	if a variable, return its value in D0
   9419 FFFCC6B2                             EXP4RT:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 101
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9420 FFFCC6B2 4E75                        	RTS
   9421 FFFCC6B4                             XP41:
   9422 FFFCC6B4 6100 0408                   	BSR.L	TSTNUM	;	or is it a number?
   9423 FFFCC6B8 2001                        	MOVE.L	D1,D0
   9424 FFFCC6BA 4A82                        	TST	D2		;(if not, # of digits will be zero)
   9425 FFFCC6BC 66F4                        	BNE	EXP4RT	;	if so, return it in D0
   9426 FFFCC6BE                             PARN:
   9427 FFFCC6BE 6100 03E4                   	BSR.L	TSTC	;	else look for ( EXPR )
   9428 FFFCC6C2 28 0D                       	DC.B	'(',XP43-$
   9429 FFFCC6C4 6100 FEFC                   	BSR	EXPR
   9430 FFFCC6C8 6100 03DA                   	BSR.L	TSTC
   9431 FFFCC6CC 29 03                       	DC.B	')',XP43-$
   9432 FFFCC6CE                             XP42:
   9433 FFFCC6CE 4E75                        	RTS
   9434 FFFCC6D0                             XP43:
   9435 FFFCC6D0 6000 016C                   	BRA.L	QWHAT	;	else say "What?"
                                             
                                             ;*
                                             ;* ===== Test for a valid variable name.  Returns Carry=1 if not
                                             ;*	found, else returns Carry=0 and the address of the
                                             ;*	variable in D0.
                                             
   9442 FFFCC6D4                             TSTV:
   9443 FFFCC6D4 6100 0420                   	BSR.L	IGNBLK
   9444 FFFCC6D8 4280                        	CLR.L	D0
   9445 FFFCC6DA 1010                        	MOVE.B	(A0),D0 ;	look at the program text
   9446 FFFCC6DC 0400 0040                   	SUB.B	#'@',D0
   9447 FFFCC6E0 6540                        	BCS	TSTVRT	;	C=1: not a variable
   9448 FFFCC6E2 6628                        	BNE	TV1		;branch if not "@" array
   9449 FFFCC6E4 5288                        	ADDQ	#1,A0	;	If it is, it should be
   9450 FFFCC6E6 6100 FFD6                   	BSR	PARN		;followed by (EXPR) as its index.
   9451 FFFCC6EA D080                        	ADD.L	D0,D0
   9452 FFFCC6EC 6500 019C                   	BCS.L	QHOW	;	say "How?" if index is too big
   9453 FFFCC6F0 D080                        	ADD.L	D0,D0
   9454 FFFCC6F2 6500 0196                   	BCS.L	QHOW
   9455 FFFCC6F6 2F00                        	MOVE.L	D0,-(SP)	;save the index
   9456 FFFCC6F8 6100 00FA                   	BSR.L	SIZE_		;get amount of free memory
   9457 FFFCC6FC 221F                        	MOVE.L	(SP)+,D1	;get back the index
   9458 FFFCC6FE B081                        	CMP.L	D1,D0		;see if there's enough memory
   9459 FFFCC700 6300 017E                   	BLS.L	QSORRY		;if not, say "Sorry"
   9460 FFFCC704 2038 0628                   	MOVE.L	VARBGN,D0	;put address of array element...
   9461 FFFCC708 9081                        	SUB.L	D1,D0		;into D0
   9462 FFFCC70A 4E75                        	RTS
   9463 FFFCC70C                             TV1:
   9464 FFFCC70C B03C 001B                   	CMP.B	#27,D0		;if not @, is it A through Z?
   9465 FFFCC710 0A3C 0001                   	EOR	#1,CCR
   9466 FFFCC714 650C                        	BCS	TSTVRT		;if not, set Carry and return
   9467 FFFCC716 5288                        	ADDQ	#1,A0	;	else bump the text pointer
   9468 FFFCC718 D080                        	ADD	D0,D0		;compute the variable's address
   9469 FFFCC71A D080                        	ADD	D0,D0
   9470 FFFCC71C 2238 0628                   	MOVE.L	VARBGN,D1
   9471 FFFCC720 D081                        	ADD	D1,D0		;and return it in D0 with Carry=0
   9472 FFFCC722                             TSTVRT:
   9473 FFFCC722 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Multiplies the 32 bit values in D0 and D1, returning
                                             ;*	the 32 bit result in D0.
                                             ;*
   9479 FFFCC724                             MULT32:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 102
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9480 FFFCC724 2801                        	MOVE.L	D1,D4
   9481 FFFCC726 B184                        	EOR.L	D0,D4	;	see if the signs are the same
   9482 FFFCC728 4A80                        	TST.L	D0		;take absolute value of D0
   9483 FFFCC72A 6A02                        	BPL	MLT1
   9484 FFFCC72C 4480                        	NEG.L	D0
   9485 FFFCC72E                             MLT1:
   9486 FFFCC72E 4A81                        	TST.L	D1	;	take absolute value of D1
   9487 FFFCC730 6A02                        	BPL	MLT2
   9488 FFFCC732 4481                        	NEG.L	D1
   9489 FFFCC734                             MLT2:
   9490 FFFCC734 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;is second argument <= 16 bits?
   9491 FFFCC73A 630C                        	BLS	MLT3	;	OK, let it through
   9492 FFFCC73C C141                        	EXG	D0,D1	;	else swap the two arguments
   9493 FFFCC73E B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;and check 2nd argument again
   9494 FFFCC744 6200 0144                   	BHI.L	QHOW		;one of them MUST be 16 bits
   9495 FFFCC748                             MLT3:
   9496 FFFCC748 2400                        	MOVE	D0,D2	;	prepare for 32 bit X 16 bit multiply
   9497 FFFCC74A C4C1                        	MULU	D1,D2		;multiply low word
   9498 FFFCC74C 4840                        	SWAP	D0
   9499 FFFCC74E C0C1                        	MULU	D1,D0		;multiply high word
   9500 FFFCC750 4840                        	SWAP	D0
                                             ;*** Rick Murray's bug correction follows:
   9502 FFFCC752 4A80                        	TST	D0		;if lower word not 0, then overflow
   9503 FFFCC754 6600 0134                   	BNE.L	QHOW	;	if overflow, say "How?"
   9504 FFFCC758 D082                        	ADD.L	D2,D0	;	D0 now holds the product
   9505 FFFCC75A 6B00 012E                   	BMI.L	QHOW	;	if sign bit set, it's an overflow
   9506 FFFCC75E 4A84                        	TST.L	D4		;were the signs the same?
   9507 FFFCC760 6A02                        	BPL	MLTRET
   9508 FFFCC762 4480                        	NEG.L	D0		;if not, make the result negative
   9509 FFFCC764                             MLTRET:
   9510 FFFCC764 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Divide the 32 bit value in D0 by the 32 bit value in D1.
                                             ;*	Returns the 32 bit quotient in D0, remainder in D1.
                                             ;*
   9516 FFFCC766                             DIV32:
   9517 FFFCC766 4A81                        	TST.L	D1		;check for divide-by-zero
   9518 FFFCC768 6700 0120                   	BEQ.L	QHOW		;if so, say "How?"
   9519 FFFCC76C 2401                        	MOVE.L	D1,D2
   9520 FFFCC76E 2801                        	MOVE.L	D1,D4
   9521 FFFCC770 B184                        	EOR.L	D0,D4		;see if the signs are the same
   9522 FFFCC772 4A80                        	TST.L	D0		;take absolute value of D0
   9523 FFFCC774 6A02                        	BPL	DIV1
   9524 FFFCC776 4480                        	NEG.L	D0
   9525 FFFCC778                             DIV1:
   9526 FFFCC778 4A81                        	TST.L	D1	;	take absolute value of D1
   9527 FFFCC77A 6A02                        	BPL	DIV2
   9528 FFFCC77C 4481                        	NEG.L	D1
   9529 FFFCC77E                             DIV2:
   9530 FFFCC77E 761F                        	MOVEQ	#31,D3	;	iteration count for 32 bits
   9531 FFFCC780 2200                        	MOVE.L	D0,D1
   9532 FFFCC782 4280                        	CLR.L	D0
   9533 FFFCC784                             DIV3:
   9534 FFFCC784 D281                        	ADD.L	D1,D1	;	(This algorithm was translated from
   9535 FFFCC786 D180                        	ADDX.L	D0,D0		;the divide routine in Ron Cain's
   9536 FFFCC788 6708                        	BEQ	DIV4		;Small-C run time library.)
   9537 FFFCC78A B082                        	CMP.L	D2,D0
   9538 FFFCC78C 6B04                        	BMI	DIV4
   9539 FFFCC78E 5281                        	ADDQ.L	#1,D1
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 103
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9540 FFFCC790 9082                        	SUB.L	D2,D0
   9541 FFFCC792                             DIV4:
   9542 FFFCC792 51CB FFF0                   	DBRA	D3,DIV3
   9543 FFFCC796 C141                        	EXG	D0,D1	;	put rem. & quot. in proper registers
   9544 FFFCC798 4A84                        	TST.L	D4	;	were the signs the same?
   9545 FFFCC79A 6A04                        	BPL	DIVRT
   9546 FFFCC79C 4480                        	NEG.L	D0	;	if not, results are negative
   9547 FFFCC79E 4481                        	NEG.L	D1
   9548 FFFCC7A0                             DIVRT:
   9549 FFFCC7A0 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The PEEK function returns the byte stored at the address
                                             ;*	contained in the following expression.
                                             ;*
   9555 FFFCC7A2                             PEEK:
   9556 FFFCC7A2 6100 FF1A                   	BSR	PARN	;	get the memory address
   9557 FFFCC7A6 2240                        	MOVE.L	D0,A1
   9558 FFFCC7A8 4280                        	CLR.L	D0		;upper 3 bytes will be zero
   9559 FFFCC7AA 1011                        	MOVE.B	(A1),D0 ;	get the addressed byte
   9560 FFFCC7AC 4E75                        	RTS			;and return it
                                             
                                             ;*
                                             ;* ===== The RND function returns a random number from 1 to
                                             ;*	the value of the following expression in D0.
                                             ;*
   9566 FFFCC7AE                             RND:
   9567 FFFCC7AE 6100 FF0E                   	BSR	PARN	;	get the upper limit
   9568 FFFCC7B2 4A80                        	TST.L	D0	;	it must be positive and non-zero
   9569 FFFCC7B4 6700 00D4                   	BEQ.L	QHOW
   9570 FFFCC7B8 6B00 00D0                   	BMI.L	QHOW
   9571 FFFCC7BC 2200                        	MOVE.L	D0,D1
   9572 FFFCC7BE 2278 0600                   	MOVE.L	RANPNT,A1	;get memory as a random number
   9573 FFFCC7C2 B3FC FFFC CC78              	CMP.L	#LSTROM,A1
   9574 FFFCC7C8 6506                        	BCS	RA1
   9575 FFFCC7CA 43F9 FFFC C000              	LEA	START,A1	;wrap around if end of program
   9576 FFFCC7D0                             RA1:
   9577 FFFCC7D0 2019                        	MOVE.L	(A1)+,D0;	get the slightly random number
   9578 FFFCC7D2 0880 001F                   	BCLR	#31,D0	;	make sure it's positive
   9579 FFFCC7D6 21C9 0600                   	MOVE.L	A1,RANPNT	;(even I can do better than this!)
   9580 FFFCC7DA 6100 FF8A                   	BSR	DIV32		;RND(n)=MOD(number,n)+1
   9581 FFFCC7DE 2001                        	MOVE.L	D1,D0	;	MOD is the remainder of the div.
   9582 FFFCC7E0 5280                        	ADDQ.L	#1,D0
   9583 FFFCC7E2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The ABS function returns an absolute value in D0.
                                             ;*
   9588 FFFCC7E4                             ABS:
   9589 FFFCC7E4 6100 FED8                   	BSR	PARN		;get the following expr.'s value
   9590 FFFCC7E8 4A80                        	TST.L	D0
   9591 FFFCC7EA 6A06                        	BPL	ABSRT
   9592 FFFCC7EC 4480                        	NEG.L	D0		;if negative, complement it
   9593 FFFCC7EE 6B00 009A                   	BMI.L	QHOW	;	if still negative, it was too big
   9594 FFFCC7F2                             ABSRT:
   9595 FFFCC7F2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The SIZE function returns the size of free memory in D0.
                                             ;*
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 104
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9600 FFFCC7F4                             SIZE_:
   9601 FFFCC7F4 2038 0628                   	MOVE.L	VARBGN,D0	;get the number of free bytes...
   9602 FFFCC7F8 90B8 0624                   	SUB.L	TXTUNF,D0	;between 'TXTUNF' and 'VARBGN'
   9603 FFFCC7FC 4E75                        	RTS			;return the number in D0
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** SETVAL *** FIN *** ENDCHK *** ERROR (& friends) ***
                                             ;*
                                             ;* 'SETVAL' expects a variable, followed by an equal sign and then
                                             ;* an expression.  It evaluates the expression and sets the variable
                                             ;* to that value.
                                             ;*
                                             ;* 'FIN' checks the end of a command.  If it ended with ":",
                                             ;* execution continues.	If it ended with a CR, it finds the
                                             ;* the next line and continues from there.
                                             ;*
                                             ;* 'ENDCHK' checks if a command is ended with a CR. This is
                                             ;* required in certain commands, such as GOTO, RETURN, STOP, etc.
                                             ;*
                                             ;* 'ERROR' prints the string pointed to by A0. It then prints the
                                             ;* line pointed to by CURRNT with a "?" inserted at where the
                                             ;* old text pointer (should be on top of the stack) points to.
                                             ;* Execution of Tiny BASIC is stopped and a warm start is done.
                                             ;* If CURRNT is zero (indicating a direct command), the direct
                                             ;* command is not printed. If CURRNT is -1 (indicating
                                             ;* 'INPUT' command in progress), the input line is not printed
                                             ;* and execution is not terminated but continues at 'INPERR'.
                                             ;*
                                             ;* Related to 'ERROR' are the following:
                                             ;* 'QWHAT' saves text pointer on stack and gets "What?" message.
                                             ;* 'AWHAT' just gets the "What?" message and jumps to 'ERROR'.
                                             ;* 'QSORRY' and 'ASORRY' do the same kind of thing.
                                             ;* 'QHOW' and 'AHOW' also do this for "How?".
                                             ;*
   9636 FFFCC7FE                             SETVAL:
   9637 FFFCC7FE 6100 FED4                   	BSR	TSTV	;	variable name?
   9638 FFFCC802 653A                        	BCS	QWHAT		;if not, say "What?"
   9639 FFFCC804 2F00                        	MOVE.L	D0,-(SP);	save the variable's address
   9640 FFFCC806 6100 029C                   	BSR.L	TSTC	;	get past the "=" sign
   9641 FFFCC80A 3D 0B                       	DC.B	'=',SV1-$
   9642 FFFCC80C 6100 FDB4                   	BSR	EXPR	;	evaluate the expression
   9643 FFFCC810 2C5F                        	MOVE.L	(SP)+,A6
   9644 FFFCC812 2C80                        	MOVE.L	D0,(A6) ;	and save its value in the variable
   9645 FFFCC814 4E75                        	RTS
   9646 FFFCC816                             SV1:
   9647 FFFCC816 6026                        	BRA	QWHAT	;	if no "=" sign
                                             
   9649 FFFCC818                             FIN:
   9650 FFFCC818 6100 028A                   	BSR.L	TSTC	;	*** FIN ***
   9651 FFFCC81C 3A 07                       	DC.B	':',FI1-$
   9652 FFFCC81E 588F                        	ADDQ.L	#4,SP	;	if ":", discard return address
   9653 FFFCC820 6000 FA1C                   	BRA	RUNSML	;	continue on the same line
   9654 FFFCC824                             FI1:
   9655 FFFCC824 6100 027E                   	BSR.L	TSTC	;	not ":", is it a CR?
   9656 FFFCC828 0D 07                       	DC.B	CR,FI2-$
   9657 FFFCC82A 588F                        	ADDQ.L	#4,SP	;	yes, purge return address
   9658 FFFCC82C 6000 F9F4                   	BRA	RUNNXL		;execute the next line
   9659 FFFCC830                             FI2:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 105
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9660 FFFCC830 4E75                        	RTS			;else return to the caller
                                             
   9662 FFFCC832                             ENDCHK:
   9663 FFFCC832 6100 02C2                   	BSR.L	IGNBLK
   9664 FFFCC836 0C10 000D                   	CMP.B	#CR,(A0);	does it end with a CR?
   9665 FFFCC83A 6602                        	BNE	QWHAT	;	if not, say "WHAT?"
   9666 FFFCC83C 4E75                        	RTS
                                             
   9668 FFFCC83E                             QWHAT:
   9669 FFFCC83E 2F08                        	MOVE.L	A0,-(SP)
   9670 FFFCC840                             AWHAT:
   9671 FFFCC840 4DF9 FFFC CBFA              	LEA	WHTMSG,A6
   9672 FFFCC846                             ERROR:
   9673 FFFCC846 6100 031E                   	BSR.L	PRMESG	;	display the error message
   9674 FFFCC84A 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9675 FFFCC84C 2038 0604                   	MOVE.L	CURRNT,D0	;get the current line number
   9676 FFFCC850 6700 F80E                   	BEQ	WSTART		;if zero, do a warm start
   9677 FFFCC854 B0BC FFFF FFFF              	CMP.L	#-1,D0		;is the line no. pointer = -1?
   9678 FFFCC85A 6700 FBC2                   	BEQ	INPERR		;if so, redo input
   9679 FFFCC85E 1F10                        	MOVE.B	(A0),-(SP)	;save the char. pointed to
   9680 FFFCC860 4210                        	CLR.B	(A0)		;put a zero where the error is
   9681 FFFCC862 2278 0604                   	MOVE.L	CURRNT,A1	;point to start of current line
   9682 FFFCC866 6100 0220                   	BSR.L	PRTLN		;display the line in error up to the 0
   9683 FFFCC86A 109F                        	MOVE.B	(SP)+,(A0)	;restore the character
   9684 FFFCC86C 103C 003F                   	MOVE.B	#'?',D0     ;    display a "?"
   9685 FFFCC870 6100 F796                   	BSR	GOOUT
   9686 FFFCC874 4280                        	CLR	D0
   9687 FFFCC876 5389                        	SUBQ.L	#1,A1		;point back to the error char.
   9688 FFFCC878 6100 013E                   	BSR.L	PRTSTG		;display the rest of the line
   9689 FFFCC87C 6000 F7E2                   	BRA	WSTART		;and do a warm start
   9690 FFFCC880                             QSORRY:
   9691 FFFCC880 2F08                        	MOVE.L	A0,-(SP)
   9692 FFFCC882                             ASORRY:
   9693 FFFCC882 4DF9 FFFC CC02              	LEA	SRYMSG,A6
   9694 FFFCC888 60BC                        	BRA	ERROR
   9695 FFFCC88A                             QHOW:
   9696 FFFCC88A 2F08                        	MOVE.L	A0,-(SP)	;Error: "How?"
   9697 FFFCC88C                             AHOW:
   9698 FFFCC88C 4DF9 FFFC CBF3              	LEA	HOWMSG,A6
   9699 FFFCC892 60B2                        	BRA	ERROR
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GETLN *** FNDLN (& friends) ***
                                             ;*
                                             ;* 'GETLN' reads in input line into 'BUFFER'. It first prompts with
                                             ;* the character in D0 (given by the caller), then it fills the
                                             ;* buffer and echos. It ignores LF's but still echos
                                             ;* them back. Control-H is used to delete the last character
                                             ;* entered (if there is one), and control-X is used to delete the
                                             ;* whole line and start over again. CR signals the end of a line,
                                             ;* and causes 'GETLN' to return.
                                             ;*
                                             ;* 'FNDLN' finds a line with a given line no. (in D1) in the
                                             ;* text save area.  A1 is used as the text pointer. If the line
                                             ;* is found, A1 will point to the beginning of that line
                                             ;* (i.e. the high byte of the line no.), and flags are NC & Z.
                                             ;* If that line is not there and a line with a higher line no.
                                             ;* is found, A1 points there and flags are NC & NZ. If we reached
                                             ;* the end of the text save area and cannot find the line, flags
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 106
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* are C & NZ.
                                             ;* 'FNDLN' will initialize A1 to the beginning of the text save
                                             ;* area to start the search. Some other entries of this routine
                                             ;* will not initialize A1 and do the search.
                                             ;* 'FNDLNP' will start with A1 and search for the line no.
                                             ;* 'FNDNXT' will bump A1 by 2, find a CR and then start search.
                                             ;* 'FNDSKP' uses A1 to find a CR, and then starts the search.
                                             ;*
                                             PUBLIC GETLN:
   9729 FFFCC894 6100 F772                   	BSR	GOOUT		;display the prompt
   9730 FFFCC898 103C 0020                   	MOVE.B	#' ',D0      ;   and a space
   9731 FFFCC89C 6100 F76A                   	BSR	GOOUT
   9732 FFFCC8A0 41F8 0630                   	LEA	BUFFER,A0;	A0 is the buffer pointer
   9733 FFFCC8A4                             GL1:
   9734 FFFCC8A4 6100 02A8                   	BSR.L	CHKIO;		check keyboard
   9735 FFFCC8A8 67FA                        	BEQ	GL1	;	wait for a char. to come in
   9736 FFFCC8AA B03C 0008                   	CMP.B	#CTRLH,D0	;delete last character?
   9737 FFFCC8AE 6726                        	BEQ	GL3	;	if so
   9738 FFFCC8B0 B03C 0018                   	CMP.B	#CTRLX,D0;	delete the whole line?
   9739 FFFCC8B4 6744                        	BEQ	GL4	;	if so
   9740 FFFCC8B6 B03C 000D                   	CMP.B	#CR,D0	;	accept a CR
   9741 FFFCC8BA 6706                        	BEQ	GL2
   9742 FFFCC8BC B03C 0020                   	CMP.B	#' ',D0  ;       if other control char., discard it
   9743 FFFCC8C0 65E2                        	BCS	GL1
   9744 FFFCC8C2                             GL2:
   9745 FFFCC8C2 10C0                        	MOVE.B	D0,(A0)+;	save the char.
   9746 FFFCC8C4 6100 F742                   	BSR	GOOUT		;echo the char back out
   9747 FFFCC8C8 B03C 000D                   	CMP.B	#CR,D0	;	if it's a CR, end the line
   9748 FFFCC8CC 675C                        	BEQ	GL7
   9749 FFFCC8CE B1FC 0000 067F              	CMP.L	#(BUFFER+BUFLEN-1),A0	;any more room?
   9750 FFFCC8D4 65CE                        	BCS	GL1	;	yes: get some more, else delete last char.
   9751 FFFCC8D6                             GL3:
   9752 FFFCC8D6 103C 0008                   	MOVE.B	#CTRLH,D0	;delete a char. if possible
   9753 FFFCC8DA 6100 F72C                   	BSR	GOOUT
   9754 FFFCC8DE 103C 0020                   	MOVE.B	#' ',D0
   9755 FFFCC8E2 6100 F724                   	BSR	GOOUT
   9756 FFFCC8E6 B1FC 0000 0630              	CMP.L	#BUFFER,A0	;any char.'s left?
   9757 FFFCC8EC 63B6                        	BLS	GL1		;if not
   9758 FFFCC8EE 103C 0008                   	MOVE.B	#CTRLH,D0;	if so, finish the BS-space-BS sequence
   9759 FFFCC8F2 6100 F714                   	BSR	GOOUT
   9760 FFFCC8F6 5388                        	SUBQ.L	#1,A0	;	decrement the text pointer
   9761 FFFCC8F8 60AA                        	BRA	GL1		;back for more
   9762 FFFCC8FA                             GL4:
   9763 FFFCC8FA 2208                        	MOVE.L	A0,D1	;	delete the whole line
   9764 FFFCC8FC 0481 0000 0630              	SUB.L	#BUFFER,D1;	figure out how many backspaces we need
   9765 FFFCC902 671E                        	BEQ	GL6		;if none needed, branch
   9766 FFFCC904 5381                        	SUBQ	#1,D1	;	adjust for DBRA
   9767 FFFCC906                             GL5:
   9768 FFFCC906 103C 0008                   	MOVE.B	#CTRLH,D0	;and display BS-space-BS sequences
   9769 FFFCC90A 6100 F6FC                   	BSR	GOOUT
   9770 FFFCC90E 103C 0020                   	MOVE.B	#' ',D0
   9771 FFFCC912 6100 F6F4                   	BSR	GOOUT
   9772 FFFCC916 103C 0008                   	MOVE.B	#CTRLH,D0
   9773 FFFCC91A 6100 F6EC                   	BSR	GOOUT
   9774 FFFCC91E 51C9 FFE6                   	DBRA	D1,GL5
   9775 FFFCC922                             GL6:
   9776 FFFCC922 41F8 0630                   	LEA	BUFFER,A0	;reinitialize the text pointer
   9777 FFFCC926 6000 FF7C                   	BRA	GL1		;and go back for more
   9778 FFFCC92A                             GL7:
   9779 FFFCC92A 103C 000A                   	MOVE.B	#LF,D0	;	echo a LF for the CR
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 107
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9780 FFFCC92E 6100 F6D8                   	BSR	GOOUT
   9781 FFFCC932 4E75                        	RTS
                                             
   9783 FFFCC934                             FNDLN:
   9784 FFFCC934 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;line no. must be < 65535
   9785 FFFCC93A 6400 FF4E                   	BCC	QHOW
   9786 FFFCC93E 2279 FFFC C01C              	MOVE.L	TXTBGN,A1	;init. the text save pointer
                                             
   9788 FFFCC944                             FNDLNP:
   9789 FFFCC944 2478 0624                   	MOVE.L	TXTUNF,A2	;check if we passed the end
   9790 FFFCC948 538A                        	SUBQ.L	#1,A2
   9791 FFFCC94A B5C9                        	CMP	A1,A2
   9792 FFFCC94C 650C                        	BCS	FNDRET	;	if so, return with Z=0 & C=1
   9793 FFFCC94E 1419                        	MOVE.B	(A1)+,D2	;if not, get a line no.
   9794 FFFCC950 E18A                        	LSL	#8,D2
   9795 FFFCC952 1411                        	MOVE.B	(A1),D2
   9796 FFFCC954 5389                        	SUBQ.L	#1,A1
   9797 FFFCC956 B481                        	CMP	D1,D2		;is this the line we want?
   9798 FFFCC958 6502                        	BCS	FNDNXT		;no, not there yet
   9799 FFFCC95A                             FNDRET:
   9800 FFFCC95A 4E75                        	RTS			;return the cond. codes
                                             
   9802 FFFCC95C                             FNDNXT:
   9803 FFFCC95C 5489                        	ADDQ.L	#2,A1;		find the next line
                                             
   9805 FFFCC95E                             FNDSKP:
   9806 FFFCC95E 0C19 000D                   	CMP.B	#CR,(A1)+	;try to find a CR
   9807 FFFCC962 66FA                        	BNE	FNDSKP		;keep looking
   9808 FFFCC964 60DE                        	BRA	FNDLNP		;check if end of text
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** MVUP *** MVDOWN *** POPA *** PUSHA ***
                                             ;*
                                             ;* 'MVUP' moves a block up from where A1 points to where A2 points
                                             ;* until A1=A3
                                             ;*
                                             ;* 'MVDOWN' moves a block down from where A1 points to where A3
                                             ;* points until A1=A2
                                             ;*
                                             ;* 'POPA' restores the 'FOR' loop variable save area from the stack
                                             ;*
                                             ;* 'PUSHA' stacks for 'FOR' loop variable save area onto the stack
                                             ;*
   9825 FFFCC966                             MVUP:
   9826 FFFCC966 B7C9                        	CMP.L	A1,A3	;	see the above description
   9827 FFFCC968 6704                        	BEQ	MVRET
   9828 FFFCC96A 14D9                        	MOVE.B	(A1)+,(A2)+
   9829 FFFCC96C 60F8                        	BRA	MVUP
   9830 FFFCC96E                             MVRET:
   9831 FFFCC96E 4E75                        	RTS
                                             
   9833 FFFCC970                             MVDOWN:
   9834 FFFCC970 B5C9                        	CMP.L	A1,A2	;	see the above description
   9835 FFFCC972 67FA                        	BEQ	MVRET
   9836 FFFCC974 1721                        	MOVE.B	-(A1),-(A3)
   9837 FFFCC976 60F8                        	BRA	MVDOWN
                                             
   9839 FFFCC978                             POPA:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 108
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9840 FFFCC978 2C5F                        	MOVE.L	(SP)+,A6	;A6 = return address
   9841 FFFCC97A 21DF 0610                   	MOVE.L	(SP)+,LOPVAR	;restore LOPVAR, but zero means no more
   9842 FFFCC97E 6710                        	BEQ	PP1
   9843 FFFCC980 21DF 0614                   	MOVE.L	(SP)+,LOPINC	;if not zero, restore the rest
   9844 FFFCC984 21DF 0618                   	MOVE.L	(SP)+,LOPLMT
   9845 FFFCC988 21DF 061C                   	MOVE.L	(SP)+,LOPLN
   9846 FFFCC98C 21DF 0620                   	MOVE.L	(SP)+,LOPPT
   9847 FFFCC990                             PP1:
   9848 FFFCC990 4ED6                        	JMP	(A6)	;	return
                                             
   9850 FFFCC992                             PUSHA:
   9851 FFFCC992 2238 062C                   	MOVE.L	STKLMT,D1	;Are we running out of stack room?
   9852 FFFCC996 928F                        	SUB.L	SP,D1
   9853 FFFCC998 6400 FEE6                   	BCC	QSORRY		;if so, say we're sorry
   9854 FFFCC99C 2C5F                        	MOVE.L	(SP)+,A6	;else get the return address
   9855 FFFCC99E 2238 0610                   	MOVE.L	LOPVAR,D1	;save loop variables
   9856 FFFCC9A2 6710                        	BEQ	PU1		;if LOPVAR is zero, that's all
   9857 FFFCC9A4 2F38 0620                   	MOVE.L	LOPPT,-(SP)	;else save all the others
   9858 FFFCC9A8 2F38 061C                   	MOVE.L	LOPLN,-(SP)
   9859 FFFCC9AC 2F38 0618                   	MOVE.L	LOPLMT,-(SP)
   9860 FFFCC9B0 2F38 0614                   	MOVE.L	LOPINC,-(SP)
   9861 FFFCC9B4                             PU1:
   9862 FFFCC9B4 2F01                        	MOVE.L	D1,-(SP)
   9863 FFFCC9B6 4ED6                        	JMP	(A6)		;return
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** PRTSTG *** QTSTG *** PRTNUM *** PRTLN ***
                                             ;*
                                             ;* 'PRTSTG' prints a string pointed to by A1. It stops printing
                                             ;* and returns to the caller when either a CR is printed or when
                                             ;* the next byte is the same as what was passed in D0 by the
                                             ;* caller.
                                             ;*
                                             ;* 'QTSTG' looks for an underline (back-arrow on some systems),
                                             ;* single-quote, or double-quote.  If none of these are found, returns
                                             ;* to the caller.  If underline, outputs a CR without a LF.  If single
                                             ;* or double quote, prints the quoted string and demands a matching
                                             ;* end quote.  After the printing, the next 2 bytes of the caller are
                                             ;* skipped over (usually a short branch instruction).
                                             ;*
                                             ;* 'PRTNUM' prints the 32 bit number in D1, leading blanks are added if
                                             ;* needed to pad the number of spaces to the number in D4.
                                             ;* However, if the number of digits is larger than the no. in
                                             ;* D4, all digits are printed anyway. Negative sign is also
                                             ;* printed and counted in, positive sign is not.
                                             ;*
                                             ;* 'PRTLN' prints the saved text line pointed to by A1
                                             ;* with line no. and all.
                                             ;*
   9891 FFFCC9B8                             PRTSTG:
   9892 FFFCC9B8 1200                        	MOVE.B	D0,D1	;	save the stop character
   9893 FFFCC9BA                             PS1:
   9894 FFFCC9BA 1019                        	MOVE.B	(A1)+,D0	;get a text character
   9895 FFFCC9BC B200                        	CMP.B	D0,D1		;same as stop character?
   9896 FFFCC9BE 6712                        	BEQ	PRTRET		;if so, return
   9897 FFFCC9C0 6100 F646                   	BSR	GOOUT		;display the char.
   9898 FFFCC9C4 B03C 000D                   	CMP.B	#CR,D0		;;is it a C.R.?
   9899 FFFCC9C8 66F0                        	BNE	PS1		;no, go back for more
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 109
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9900 FFFCC9CA 103C 000A                   	MOVE.B	#LF,D0	;	yes, add a L.F.
   9901 FFFCC9CE 6100 F638                   	BSR	GOOUT
   9902 FFFCC9D2                             PRTRET:
   9903 FFFCC9D2 4E75                        	RTS			;then return
                                             
   9905 FFFCC9D4                             QTSTG:
   9906 FFFCC9D4 6100 00CE                   	BSR.L	TSTC;		*** QTSTG ***
   9907 FFFCC9D8 22 1B                       	DC.B	'"',QT3-$
   9908 FFFCC9DA 103C 0022                   	MOVE.B	#'"',D0  ;       it is a "
   9909 FFFCC9DE                             QT1:
   9910 FFFCC9DE 2248                        	MOVE.L	A0,A1
   9911 FFFCC9E0 6100 FFD6                   	BSR	PRTSTG		;print until another
   9912 FFFCC9E4 2049                        	MOVE.L	A1,A0
   9913 FFFCC9E6 225F                        	MOVE.L	(SP)+,A1;	pop return address
   9914 FFFCC9E8 B03C 000A                   	CMP.B	#LF,D0	;	was last one a CR?
   9915 FFFCC9EC 6700 F834                   	BEQ	RUNNXL		;if so, run next line
   9916 FFFCC9F0                             QT2:
   9917 FFFCC9F0 5489                        	ADDQ.L	#2,A1	;	skip 2 bytes on return
   9918 FFFCC9F2 4ED1                        	JMP	(A1)		;return
   9919 FFFCC9F4                             QT3:
   9920 FFFCC9F4 6100 00AE                   	BSR.L	TSTC	;	is it a single quote?
   9921 FFFCC9F8 27 07                       	DC.B	'\'',QT4-$
   9922 FFFCC9FA 103C 0027                   	MOVE.B	#'''',D0  ;      if so, do same as above
   9923 FFFCC9FE 60DE                        	BRA	QT1
   9924 FFFCCA00                             QT4:
   9925 FFFCCA00 6100 00A2                   	BSR.L	TSTC		;is it an underline?
   9926 FFFCCA04 5F 0D                       	DC.B	'_',QT5-$
   9927 FFFCCA06 103C 000D                   	MOVE.B	#CR,D0		;if so, output a CR without LF
   9928 FFFCCA0A 6100 F5FC                   	BSR.L	GOOUT
   9929 FFFCCA0E 225F                        	MOVE.L	(SP)+,A1	;pop return address
   9930 FFFCCA10 60DE                        	BRA	QT2
   9931 FFFCCA12                             QT5:
   9932 FFFCCA12 4E75                        	RTS			;none of the above
                                             
   9934 FFFCCA14                             PRTNUM:
   9935 FFFCCA14 2601                        	MOVE.L	D1,D3	;	save the number for later
   9936 FFFCCA16 2F04                        	MOVE	D4,-(SP)	;save the width value
   9937 FFFCCA18 1F3C 00FF                   	MOVE.B	#0xFF,-(SP)	;flag for end of digit string
   9938 FFFCCA1C 4A81                        	TST.L	D1		;is it negative?
   9939 FFFCCA1E 6A04                        	BPL	PN1		;if not
   9940 FFFCCA20 4481                        	NEG.L	D1	;	else make it positive
   9941 FFFCCA22 5384                        	SUBQ	#1,D4	;	one less for width count
   9942 FFFCCA24                             PN1:
   9943 FFFCCA24 82FC 000A                   	DIVU	#10,D1	;	get the next digit
   9944 FFFCCA28 690A                        	BVS	PNOV	;	overflow flag set?
   9945 FFFCCA2A 2001                        	MOVE.L	D1,D0	;	if not, save remainder
   9946 FFFCCA2C 0281 0000 FFFF              	AND.L	#0xFFFF,D1	;strip the remainder
   9947 FFFCCA32 601A                        	BRA	TOASCII 	;skip the overflow stuff
   9948 FFFCCA34                             PNOV:
   9949 FFFCCA34 2001                        	MOVE	D1,D0	;	prepare for long word division
   9950 FFFCCA36 4241                        	CLR.W	D1		;zero out low word
   9951 FFFCCA38 4841                        	SWAP	D1		;high word into low
   9952 FFFCCA3A 82FC 000A                   	DIVU	#10,D1	;	divide high word
   9953 FFFCCA3E 2401                        	MOVE	D1,D2	;	save quotient
   9954 FFFCCA40 2200                        	MOVE	D0,D1	;	low word into low
   9955 FFFCCA42 82FC 000A                   	DIVU	#10,D1	;	divide low word
   9956 FFFCCA46 2001                        	MOVE.L	D1,D0	;	D0 = remainder
   9957 FFFCCA48 4841                        	SWAP	D1	;	R/Q becomes Q/R
   9958 FFFCCA4A 2202                        	MOVE	D2,D1	;	D1 is low/high
   9959 FFFCCA4C 4841                        	SWAP	D1	;	D1 is finally high/low
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 110
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9960 FFFCCA4E                             TOASCII:
   9961 FFFCCA4E 4840                        	SWAP	D0	;	get remainder
   9962 FFFCCA50 1F00                        	MOVE.B	D0,-(SP);	stack it as a digit
   9963 FFFCCA52 4840                        	SWAP	D0
   9964 FFFCCA54 5384                        	SUBQ	#1,D4	;	decrement width count
   9965 FFFCCA56 4A81                        	TST.L	D1		;if quotient is zero, we're done
   9966 FFFCCA58 66CA                        	BNE	PN1
   9967 FFFCCA5A 5384                        	SUBQ	#1,D4	;	adjust padding count for DBRA
   9968 FFFCCA5C 6B0C                        	BMI	PN4		;skip padding if not needed
   9969 FFFCCA5E                             PN3:
   9970 FFFCCA5E 103C 0020                   	MOVE.B	#' ',D0  ;       display the required leading spaces
   9971 FFFCCA62 6100 F5A4                   	BSR	GOOUT
   9972 FFFCCA66 51CC FFF6                   	DBRA	D4,PN3
   9973 FFFCCA6A                             PN4:
   9974 FFFCCA6A 4A83                        	TST.L	D3		;is number negative?
   9975 FFFCCA6C 6A08                        	BPL	PN5
   9976 FFFCCA6E 103C 002D                   	MOVE.B	#'-',D0  ;       if so, display the sign
   9977 FFFCCA72 6100 F594                   	BSR	GOOUT
   9978 FFFCCA76                             PN5:
   9979 FFFCCA76 101F                        	MOVE.B	(SP)+,D0	;now unstack the digits and display
   9980 FFFCCA78 6B0A                        	BMI	PNRET		;until the flag code is reached
   9981 FFFCCA7A 0600 0030                   	ADD.B	#'0',D0   ;      make into ASCII
   9982 FFFCCA7E 6100 F588                   	BSR	GOOUT
   9983 FFFCCA82 60F2                        	BRA	PN5
   9984 FFFCCA84                             PNRET:
   9985 FFFCCA84 281F                        	MOVE	(SP)+,D4	;restore width value
   9986 FFFCCA86 4E75                        	RTS
                                             
   9988 FFFCCA88                             PRTLN:
   9989 FFFCCA88 4281                        	CLR.L	D1
   9990 FFFCCA8A 1219                        	MOVE.B	(A1)+,D1	;get the binary line number
   9991 FFFCCA8C E189                        	LSL	#8,D1
   9992 FFFCCA8E 1219                        	MOVE.B	(A1)+,D1
   9993 FFFCCA90 7805                        	MOVEQ	#5,D4		;display a 5 digit line no.
   9994 FFFCCA92 6100 FF80                   	BSR	PRTNUM
   9995 FFFCCA96 103C 0020                   	MOVE.B	#' ',D0      ;   followed by a blank
   9996 FFFCCA9A 6100 F56C                   	BSR	GOOUT
   9997 FFFCCA9E 4280                        	CLR	D0		;stop char. is a zero
   9998 FFFCCAA0 6000 FF16                   	BRA	PRTSTG	;	display the rest of the line
                                             
                                             ;*
                                             ;* ===== Test text byte following the call to this subroutine. If it
                                             ;*	equals the byte pointed to by A0, return to the code following
                                             ;*	the call. If they are not equal, branch to the point
                                             ;*	indicated by the offset byte following the text byte.
                                             ;*
  10006 FFFCCAA4                             TSTC:
  10007 FFFCCAA4 6100 0050                   	BSR	IGNBLK		;ignore leading blanks
  10008 FFFCCAA8 225F                        	MOVE.L	(SP)+,A1	;get the return address
  10009 FFFCCAAA 1219                        	MOVE.B	(A1)+,D1	;get the byte to compare
  10010 FFFCCAAC B210                        	CMP.B	(A0),D1 	;is it = to what A0 points to?
  10011 FFFCCAAE 6708                        	BEQ	TC1		;if so
  10012 FFFCCAB0 4281                        	CLR.L	D1		;If not, add the second
  10013 FFFCCAB2 1211                        	MOVE.B	(A1),D1 ;	byte following the call to
  10014 FFFCCAB4 D3C1                        	ADD.L	D1,A1	;	the return address.
  10015 FFFCCAB6 4ED1                        	JMP	(A1)		;jump to the routine
  10016 FFFCCAB8                             TC1:
  10017 FFFCCAB8 5288                        	ADDQ.L	#1,A0	;	if equal, bump text pointer
  10018 FFFCCABA 5289                        	ADDQ.L	#1,A1	;	Skip the 2 bytes following
  10019 FFFCCABC 4ED1                        	JMP	(A1)		;the call and continue.
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 111
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             ;*
                                             ;* ===== See if the text pointed to by A0 is a number. If so,
                                             ;*	return the number in D1 and the number of digits in D2,
                                             ;*	else return zero in D1 and D2.
                                             ;*
  10026 FFFCCABE                             TSTNUM:
  10027 FFFCCABE 4281                        	CLR.L	D1		;initialize return parameters
  10028 FFFCCAC0 4282                        	CLR	D2
  10029 FFFCCAC2 6100 0032                   	BSR	IGNBLK		;skip over blanks
  10030 FFFCCAC6                             TN1:
  10031 FFFCCAC6 0C10 0030                   	CMP.B	#'0',(A0) ;      is it less than zero?
  10032 FFFCCACA 6528                        	BCS	TSNMRET 	;if so, that's all
  10033 FFFCCACC 0C10 0039                   	CMP.B	#'9',(A0) ;      is it greater than nine?
  10034 FFFCCAD0 6222                        	BHI	TSNMRET 	;if so, return
  10035 FFFCCAD2 B2BC 0CCC CCCC              	CMP.L	#214748364,D1	;see if there's room for new digit
  10036 FFFCCAD8 6400 FDB0                   	BCC	QHOW		;if not, we've overflowd
  10037 FFFCCADC 2001                        	MOVE.L	D1,D0	;	quickly multiply result by 10
  10038 FFFCCADE D281                        	ADD.L	D1,D1
  10039 FFFCCAE0 D281                        	ADD.L	D1,D1
  10040 FFFCCAE2 D280                        	ADD.L	D0,D1
  10041 FFFCCAE4 D281                        	ADD.L	D1,D1
  10042 FFFCCAE6 1018                        	MOVE.B	(A0)+,D0	;add in the new digit
  10043 FFFCCAE8 0280 0000 000F              	AND.L	#0xF,D0
  10044 FFFCCAEE D280                        	ADD.L	D0,D1
  10045 FFFCCAF0 5282                        	ADDQ	#1,D2		;increment the no. of digits
  10046 FFFCCAF2 60D2                        	BRA	TN1
  10047 FFFCCAF4                             TSNMRET:
  10048 FFFCCAF4 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Skip over blanks in the text pointed to by A0.
                                             ;*
  10053 FFFCCAF6                             IGNBLK:
  10054 FFFCCAF6 0C10 0020                   	CMP.B	#' ',(A0)   ;    see if it's a space
  10055 FFFCCAFA 6604                        	BNE	IGBRET		;if so, swallow it
  10056 FFFCCAFC                             IGB1:
  10057 FFFCCAFC 5288                        	ADDQ.L	#1,A0	;	increment the text pointer
  10058 FFFCCAFE 60F6                        	BRA	IGNBLK
  10059 FFFCCB00                             IGBRET:
  10060 FFFCCB00 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Convert the line of text in the input buffer to upper
                                             ;*	case (except for stuff between quotes).
                                             ;*
  10066 FFFCCB02                             TOUPBUF:
  10067 FFFCCB02 41F8 0630                   	LEA	BUFFER,A0	;set up text pointer
  10068 FFFCCB06 4201                        	CLR.B	D1		;clear quote flag
  10069 FFFCCB08                             TOUPB1:
  10070 FFFCCB08 1018                        	MOVE.B	(A0)+,D0	;get the next text char.
  10071 FFFCCB0A B03C 000D                   	CMP.B	#CR,D0		;is it end of line?
  10072 FFFCCB0E 671A                        	BEQ	TOUPBRT 	;if so, return
  10073 FFFCCB10 B03C 0022                   	CMP.B	#'"',D0  ;       a double quote?
  10074 FFFCCB14 6716                        	BEQ	DOQUO
  10075 FFFCCB16 B03C 0027                   	CMP.B	#'''',D0  ;      or a single quote?
  10076 FFFCCB1A 6710                        	BEQ	DOQUO
  10077 FFFCCB1C 4A01                        	TST.B	D1		;inside quotes?
  10078 FFFCCB1E 66E8                        	BNE	TOUPB1		;if so, do the next one
  10079 FFFCCB20 6100 001A                   	BSR	TOUPPER 	;convert to upper case
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 112
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10080 FFFCCB24 1100                        	MOVE.B	D0,-(A0);	store it
  10081 FFFCCB26 5288                        	ADDQ.L	#1,A0
  10082 FFFCCB28 60DE                        	BRA	TOUPB1		;and go back for more
  10083 FFFCCB2A                             TOUPBRT:
  10084 FFFCCB2A 4E75                        	RTS
                                             
  10086 FFFCCB2C                             DOQUO:
  10087 FFFCCB2C 4A01                        	TST.B	D1	;	are we inside quotes?
  10088 FFFCCB2E 6604                        	BNE	DOQUO1
  10089 FFFCCB30 1200                        	MOVE.B	D0,D1	;	if not, toggle inside-quotes flag
  10090 FFFCCB32 60D4                        	BRA	TOUPB1
  10091 FFFCCB34                             DOQUO1:
  10092 FFFCCB34 B200                        	CMP.B	D0,D1	;	make sure we're ending proper quote
  10093 FFFCCB36 66D0                        	BNE	TOUPB1		;if not, ignore it
  10094 FFFCCB38 4201                        	CLR.B	D1		;else clear quote flag
  10095 FFFCCB3A 60CC                        	BRA	TOUPB1
                                             
                                             ;*
                                             ;* ===== Convert the character in D0 to upper case
                                             ;*
  10100 FFFCCB3C                             TOUPPER:
  10101 FFFCCB3C B03C 0061                   	CMP.B	#'a',D0   ;      is it < 'a'?
  10102 FFFCCB40 650A                        	BCS	TOUPRET
  10103 FFFCCB42 B03C 007A                   	CMP.B	#'z',D0        ; or > 'z'?
  10104 FFFCCB46 6204                        	BHI	TOUPRET
  10105 FFFCCB48 0400 0020                   	SUB.B	#32,D0		;if not, make it upper case
  10106 FFFCCB4C                             TOUPRET:
  10107 FFFCCB4C 4E75                        	RTS
                                             
                                             ;*
                                             ;* 'CHKIO' checks the input. If there's no input, it will return
                                             ;* to the caller with the Z flag set. If there is input, the Z
                                             ;* flag is cleared and the input byte is in D0. However, if a
                                             ;* control-C is read, 'CHKIO' will warm-start BASIC and will not
                                             ;* return to the caller.
                                             ;*
  10116 FFFCCB4E                             CHKIO:
  10117 FFFCCB4E 6100 F4BC                   	BSR.L	GOIN	;	get input if possible
  10118 FFFCCB52 670A                        	BEQ	CHKRET		;if Zero, no input
  10119 FFFCCB54 B03C 0003                   	CMP.B	#CTRLC,D0	;is it control-C?
  10120 FFFCCB58 6604                        	BNE	CHKRET		;if not
  10121 FFFCCB5A 6000 F504                   	BRA.L	WSTART		;if so, do a warm start
  10122 FFFCCB5E                             CHKRET:
  10123 FFFCCB5E 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Display a CR-LF sequence
                                             ;*
  10128 FFFCCB60                             CRLF:
  10129 FFFCCB60 4DF9 FFFC CC08              	LEA	CLMSG,A6
                                             
                                             ;*
                                             ;* ===== Display a zero-ended string pointed to by register A6
                                             ;*
  10134 FFFCCB66                             PRMESG:
  10135 FFFCCB66 101E                        	MOVE.B	(A6)+,D0	;get the char.
  10136 FFFCCB68 6706                        	BEQ	PRMRET		;if it's zero, we're done
  10137 FFFCCB6A 6100 F49C                   	BSR	GOOUT		;else display it
  10138 FFFCCB6E 60F6                        	BRA	PRMESG
  10139 FFFCCB70                             PRMRET:
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 113
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10140 FFFCCB70 4E75                        	RTS
                                             
                                             ;******************************************************
                                             ;* The following routines are the only ones that need *
                                             ;* to be changed for a different I/O environment.     *
                                             ;******************************************************
                                             
                                             UART		EQU		0xFFDC0A00
                                             UART_LS		EQU		UART+1
                                             UART_CTRL	EQU		UART+7
                                             KEYBD		EQU		0xFFDC0000
                                             
                                             
                                             ;*
                                             ;* ===== Output character to the console (Port 1) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10157 FFFCCB72                             OUTC:
  10158 FFFCCB72 48E7 C000                   	MOVEM.L	D0/D1,-(SP)
  10159 FFFCCB76 2200                        	MOVE.L	D0,D1
  10160 FFFCCB78 7006                        	MOVEQ	#6,D0
  10161 FFFCCB7A 4E4F                        	TRAP	#15
  10162 FFFCCB7C 4CDF 0003                   	MOVEM.L	(SP)+,D0/D1
  10163 FFFCCB80 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the console into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10169 FFFCCB82                             INC:
  10170 FFFCCB82 2F01                        	move.l	d1,-(a7)
  10171 FFFCCB84 7007                        	moveq	#7,d0		; check for key
  10172 FFFCCB86 4E4F                        	trap	#15
  10173 FFFCCB88 4A00                        	tst.b	d0
  10174 FFFCCB8A 670A                        	beq.s	.0001
  10175 FFFCCB8C 7005                        	moveq	#5,d0
  10176 FFFCCB8E 4E4F                        	trap	#15
  10177 FFFCCB90 2001                        	move.l	d1,d0
  10178 FFFCCB92 221F                        	move.l	(a7)+,d1
  10179 FFFCCB94 4A00                        	tst.b	d0
  10180 FFFCCB96                             .0001:
  10181 FFFCCB96 4E75                        	rts
                                             
                                             ;*
                                             ;* ===== Output character to the host (Port 2) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10187 FFFCCB98                             AUXOUT:
  10188 FFFCCB98 0839 0005 FFDC 0A01         	BTST	#5,UART_LS	;is port ready for a character?
  10189 FFFCCBA0 67F6                        	BEQ		AUXOUT		;if not, wait for it
  10190 FFFCCBA2 13C0 FFDC 0A00              	MOVE.B	D0,UART		;out it goes.
  10191 FFFCCBA8 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the host into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10197 FFFCCBAA                             AUXIN:
  10198 FFFCCBAA 0839 0000 FFDC 0A01         	BTST	#0,UART_LS	;is character ready?
  10199 FFFCCBB2 670A                        	BEQ		AXIRET		;if not, return Zero status
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 114
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10200 FFFCCBB4 1039 FFDC 0A00              	MOVE.B	UART,D0		;else get the character
  10201 FFFCCBBA 0200 007F                   	AND.B	#0x7F,D0 	;zero out the high bit
  10202 FFFCCBBE                             AXIRET:
  10203 FFFCCBBE 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Return to the resident monitor, operating system, etc.
                                             ;*
  10208 FFFCCBC0                             BYEBYE:
  10209 FFFCCBC0 1E3C 00E4                   	MOVE.B	#228,D7 	;return to Tutor
  10210 FFFCCBC4 4E4E                        	TRAP	#14
                                             
  10212 FFFCCBC6                             INITMSG:
  10213 FFFCCBC6 0D 0A 47 6F 72 64 6F 27     	DC.B	CR,LF,"Gordo's MC68000 Tiny BASIC, v1.2",CR,LF,LF,0
  10214 FFFCCBCE 73 20 4D 43 36 38 30 30     
  10215 FFFCCBD6 30 20 54 69 6E 79 20 42     
  10216 FFFCCBDE 41 53 49 43 2C 20 76 31     
  10217 FFFCCBE6 2E 32 0D 0A 0A 00           
  10218 FFFCCBEC                             OKMSG:
  10219 FFFCCBEC 0D 0A 4F 4B 0D 0A 00        	DC.B	CR,LF,'OK',CR,LF,0
  10220 FFFCCBF3                             HOWMSG:
  10221 FFFCCBF3 48 6F 77 3F 0D 0A 00        	DC.B	'How?',CR,LF,0
  10222 FFFCCBFA                             WHTMSG:
  10223 FFFCCBFA 57 68 61 74 3F 0D 0A 00     	DC.B	'What?',CR,LF,0
                                             
  10225 FFFCCC02                             SRYMSG:
  10226 FFFCCC02 53 6F 72 72 79 2E           	DC.B	'Sorry.'
  10227 FFFCCC08                             CLMSG:
  10228 FFFCCC08 0D 0A 00                    	DC.B	CR,LF,0
  10229 FFFCCC0B 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             LSTROM	EQU		$
                                             	;	end of possible ROM area
                                             
Finitron asm68 assembler    version 5.8   Wed Dec 13 21:26:58 2017     Page 114
bootrom.asm


                                             .include C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             	;
                                             
                                             
