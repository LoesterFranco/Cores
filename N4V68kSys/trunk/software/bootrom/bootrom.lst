Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 1
bootrom.asm

                                             ; N4V68kSys bootrom - (C) 2017 Robert Finch, Waterloo
                                             ;
                                             ; This file is part of N4V68kSys
                                             ;
                                             ; how to build:
                                             ; 1. assemble using "asm68 bootrom.asm /G00 /olyebvm"
                                             ; 2. copy bootrom.vh to the correct directory if not already there
                                             ;
                                             ;------------------------------------------------------------------------------
                                             ;
                                             ; system memory map
                                             ;
                                             ;
                                             ; 00000000 +----------------+
                                             ;          | startup sp,pc  | 8 B
                                             ; 00000008 +----------------+
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ;          :  dram memory   : 512 MB
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ; 20000000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FF800000 +----------------+
                                             ;          |                |
                                             ;          : display buffer : 1.0 MB
                                             ;          |                |
                                             ; FF900000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFD00000 +----------------+
                                             ;          |                |
                                             ;          :    I/O area    : 1.0 M
                                             ;          |                |
                                             ; FFE00000 +----------------+
                                             ;          |   VDG regs     |
                                             ; FFE01000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFFC0000 +----------------+
                                             ;          |                |
                                             ;          :    boot rom    :
                                             ;          |                |
                                             ; FFFFFFFF +----------------+
                                             ;
                                             ;
                                             RGBMASK		EQU		%0111111111111111
                                             RED			EQU		%0111110000000000
                                             DARK_BLUE	EQU		%0000000000001111
                                             BLACK		EQU		%0000000000000000
                                             WHITE		EQU		%0111111111111111
                                             
                                             CTRLC	EQU		$03
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 2
bootrom.asm
                                             CTRLH	EQU		$08
                                             LF		EQU		$0A
                                             CR		EQU		$0D
                                             
                                             SC_F12  EQU    $07
                                             SC_C    EQU    $21
                                             SC_T    EQU    $2C
                                             SC_Z    EQU    $1A
                                             SC_KEYUP	EQU		$F0
                                             SC_EXTEND   EQU		$E0
                                             SC_CTRL		EQU		$14
                                             SC_RSHIFT	EQU		$59
                                             SC_NUMLOCK	EQU		$77
                                             SC_SCROLLLOCK	EQU	$7E
                                             SC_CAPSLOCK		EQU	$58
                                             SC_ALT		EQU		$11
                                             SC_LSHIFT	EQU		$12
                                             SC_DEL		EQU		$71		; extend
                                             SC_LCTRL	EQU		$58
                                             SC_TAB      EQU		$0D
                                             
                                             TEXTCOLS	EQU	50
                                             TEXTROWS	EQU	37
                                             BMP_WIDTH	EQU	400
                                             BMP_HEIGHT	EQU	300
                                             
                                             VDGBUF		EQU	$FF800000
                                             VDGREG		EQU	$FFE00000
                                             VDG_CURX	EQU	$0440
                                             VDG_CURY	EQU	$0442
                                             VDG_CURSZ	EQU	$0444
                                             VDG_CURFLSH	EQU	$0446
                                             VDG_CUR0X	EQU	$0204
                                             VDG_CUR0Y	EQU	$0206
                                             VDG_CURCLR0	EQU	$0448
                                             VDG_CURCLR1	EQU	$044A
                                             VDG_CURCLR2	EQU	$044C
                                             VDG_CURCLR3	EQU	$044E
                                             VDG_CURIMG	EQU	$0460
                                             I2C			EQU	$FFDC0E00
                                             I2C2		EQU	$FFDC0E10
                                             VirtScreen	EQU	$1FFF0000
                                             KEYBD		EQU	$FFDC0000
                                             leds		EQU	$FFDC0600
                                             rand		EQU	$FFDC0C00
                                             
                                             fgcolor		EQU	$10002
                                             bkcolor		EQU	$10004
                                             fntsz		EQU	$10006
                                             memend		EQU	$10008
                                             CursorRow	EQU	$10418
                                             CursorCol	EQU $10419
                                             TextRows	EQU	$1041A
                                             TextCols	EQU	$1041B
                                             TextCurpos	EQU	$1041C
                                             TextScr		EQU	$10420
                                             KeybdEcho		EQU	$10424
                                             KeybdWaitFlag	EQU	$10425
                                             _KeyState1		EQU	$10426
                                             _KeyState2		EQU	$10427
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 3
bootrom.asm
                                             KeybdLEDs		EQU	$10428
                                             gfx_control_reg_mem		EQU	$1042C
                                             milliseconds	EQU	$10430
                                             systick			EQU	$10434
                                             S19StartAddress	EQU	$10438
                                             
                                             ball_dx			EQU	$10500
                                             ball_dy			EQU	$10600
                                             
                                             GFX_CONTROL			EQU		$00
                                             GFX_STATUS			EQU		$04
                                             GFX_TARGET_BASE		EQU		$10
                                             GFX_TARGET_SIZE_X	EQU		$14
                                             GFX_TARGET_SIZE_Y	EQU		$18
                                             GFX_DEST_PIXEL_X	EQU		$38
                                             GFX_DEST_PIXEL_Y	EQU		$3C
                                             GFX_DEST_PIXEL_Z	EQU		$40
                                             GFX_COLOR0			EQU		$84
                                             
                                             GFX_ACTIVE_POINT0	EQU		0
                                             GFX_ACTIVE_POINT1	EQU		$10000
                                             GFX_LINE			EQU		$200
                                             
                                             reg_d0			EQU	$10500
                                             reg_d1			EQU	$10504
                                             reg_d2			EQU	$10508
                                             reg_d3			EQU	$1050C
                                             reg_d4			EQU $10510
                                             reg_d5			EQU $10514
                                             reg_d6			EQU	$10518
                                             reg_d7			EQU	$1051C
                                             reg_a0			EQU $10520
                                             reg_a1			EQU	$10524
                                             reg_a2			EQU	$10528
                                             reg_a3			EQU $1052C
                                             reg_a4			EQU $10530
                                             reg_a5			EQU $10534
                                             reg_a6			EQU $10538
                                             reg_ssp			EQU	$1053C
                                             reg_usp			EQU	$10540
                                             reg_pc			EQU $10544
                                             reg_sr			EQU	$10548
                                             
                                             RTCBuf			EQU	$10600
                                             RTFBufEnd		EQU	$10660
                                             
                                             	org		$FFFC0000
                                             
                                             ;------------------------------------------------------------------------------
                                             
    170 FFFC0000 FF401000                    	dc.l	$FF401000	; initial SSP
    171 FFFC0004 FFFC0010                    	dc.l	Start		; initial PC
                                             	
                                             ;------------------------------------------------------------------------------
    174 FFFC0008                             fpga_version:
    175 FFFC0008 41 41 30 30 30 30 30 30     	dc.b	"AA000000"	; FPGA core version - 8 ASCII characters
                                             
                                             
                                             ;------------------------------------------------------------------------------
    179 FFFC0010                             	Start:
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 4
bootrom.asm
                                             ;------------------------------------------------------------------------------
    181 FFFC0010 33FC A1A1 FFDC 0600         		move.w	#$A1A1,leds		; diagnostics
                                             
                                             		; SIM croaked because the upper half of D1 was undefined. This caused
                                             		; problems with a dbra instruction. So the contents of all the registers
                                             		; are defined at startup. This is only needed for SIM.
    186 FFFC0018 7000                        		moveq	#0,D0
    187 FFFC001A 7200                        		moveq	#0,D1				; for SIM
    188 FFFC001C 7400                        		moveq	#0,D2
    189 FFFC001E 7600                        		moveq	#0,D3
    190 FFFC0020 7800                        		moveq	#0,D4
    191 FFFC0022 7A00                        		moveq	#0,D5
    192 FFFC0024 7C00                        		moveq	#0,D6
    193 FFFC0026 7E00                        		moveq	#0,D7
    194 FFFC0028 4288                        		clr.l	A0
    195 FFFC002A 4289                        		clr.l	A1
    196 FFFC002C 428A                        		clr.l	A2
    197 FFFC002E 428B                        		clr.l	A3
    198 FFFC0030 428C                        		clr.l	A4
    199 FFFC0032 428D                        		clr.l	A5
    200 FFFC0034 428E                        		clr.l	A6
    201 FFFC0036 4E67                        		move.l	A7,usp
                                             
                                             		; setup vector table
                                             		;
                                             ;		lea		BusError,a0
                                             ;		move.l	a0,0x008		; set bus error vector
    207 FFFC0038 41F9 FFFC 0128              		lea		IllegalInstruction,a0
    208 FFFC003E 21C8 0010                   		move.l	a0,0x010
    209 FFFC0042 41F9 FFFC 010E              		lea		Pulse1000,a0
    210 FFFC0048 21C8 0078                   		move.l	a0,0x078		; set autovector 6
                                             ;		lea		KeybdNMI,a0
                                             ;		move.l	a0,0x07C		; set autovector 7
    213 FFFC004C 41F9 FFFC 014A              		lea		TRAP15,a0
    214 FFFC0052 21C8 00BC                   		move.l	a0,188			; set trap 15 vector
                                             
                                             ;		bsr		mmu_init
    217 FFFC0056 6100 197C                   		bsr		i2c_setup
                                             ;		bsr		rtc_read
    219 FFFC005A 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds		; diagnostics
                                             
    221 FFFC0062 4239 0001 0419              		clr.b	CursorCol
    222 FFFC0068 4239 0001 0418              		clr.b	CursorRow
    223 FFFC006E 4279 0001 041C              		clr.w	TextCurpos
    224 FFFC0074 23FC 0002 0000 0001 0420    		move.l	#$00020000,TextScr		; set virtual screen location
                                             
                                             
    227 FFFC007E 4DF9 FFDC 0000              		lea	$FFDC0000,A6	; I/O base
                                             
                                             		; Initialize random number generator
                                             
    231 FFFC0084 426E 0C06                   		clr.w	$0C06(a6)				; select stream #0
    232 FFFC0088 2D7C 8888 8888 0C08         		move.l	#$88888888,$0C08(a6)	; set initial m_z
    233 FFFC0090 2D7C 0123 4567 0C0C         		move.l	#$01234567,$0C0C(a6)	; set initial m_w
                                             
    235 FFFC0098 6100 0422                   		bsr		Set400x300
                                             ;		bsr		Set800x600
    237 FFFC009C 6100 04DE                   		bsr		BootSetZBuffer
    238 FFFC00A0 6100 0694                   		bsr		InitCursorColorPalette
                                             ;		bsr		SetCursorColor
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 5
bootrom.asm
                                             ;		bsr		SetCursorImage
    241 FFFC00A4 6100 06F6                   		bsr		SetCursorImage64
    242 FFFC00A8 6100 05F0                   		bsr		EnableCursor
                                             
    244 FFFC00AC 6100 04F8                   		bsr		BootClearScreen		
    245 FFFC00B0 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds			; diagnostics
                                             		
                                             		; turn on audio test mode
    248 FFFC00B8 4DF9 FFDC 0000              		lea		$FFDC0000,A6		; set I/O base
    249 FFFC00BE 3D7C FFFF 0700              		move.w	#$FFFF,$0700(a6)	; turn on audio clocks
    250 FFFC00C4 2A7C FFE0 0000              		movea.l	#VDGREG,a5
    251 FFFC00CA 3B7C 4000 0584              		move.w	#%0100000000000000,$584(a5)
                                             
                                             ;		bsr		DrawLines
                                             ;		bsr		TestBlitter
                                             
    256 FFFC00D0 6100 04EA                   		bsr		BootCopyFont
    257 FFFC00D4 33FC A3A3 FFDC 0600         		move.w	#$A3A3,leds			; diagnostics
                                             
    259 FFFC00DC 33FC 7FFF 0001 0002         		move.w	#WHITE,fgcolor		; set text colors
    260 FFFC00E4 33FC 000F 0001 0004         		move.w	#DARK_BLUE,bkcolor
                                             
                                             		; Write startup message to screen
                                             
    264 FFFC00EC 41F9 FFFC 1F48              		lea		msg_start,a0
    265 FFFC00F2 7200                        		moveq	#0,d1					; xpos
    266 FFFC00F4 7400                        		moveq	#0,d2					; ypos
    267 FFFC00F6 6100 09A8                   		bsr		DispStringAt
    268 FFFC00FA 33FC A4A4 FFDC 0600         		move.w	#$A4A4,leds			; diagnostics
                                             
    270 FFFC0102 47F9 FFFC 010C              		lea		j1,a3
    271 FFFC0108 6000 10D0                   		bra		DisplayHelp
    272 FFFC010C                             j1:
    273 FFFC010C 60FE                        		bra		j1
                                             
                                             ;------------------------------------------------------------------------------
                                             ; 1000 Hz interrupt
                                             ;------------------------------------------------------------------------------
                                             ;
    279 FFFC010E                             Pulse1000:
    280 FFFC010E 52B9 0001 0430              		add.l	#1,milliseconds
    281 FFFC0114 5279 0001 0434              		add.w	#1,systick
    282 FFFC011A 0279 001F 0001 0434         		and.w	#$1F,systick
    283 FFFC0122 6702                        		beq.s	Pulse31
    284 FFFC0124 4E73                        		rte
    285 FFFC0126                             Pulse31:
    286 FFFC0126 4E73                        		rte
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    291 FFFC0128                             IllegalInstruction:
    292 FFFC0128 43F9 FFFC 0136              		lea		MSG_ILLEGAL_INSN,a1
    293 FFFC012E 4EB9 FFFC 03E8              		jsr		DisplayString
    294 FFFC0134 4E73                        		rte
                                             
    296 FFFC0136                             MSG_ILLEGAL_INSN:
    297 FFFC0136 49 6C 6C 65 67 61 6C 20     		dc.b	"Illegal instruction",0
    298 FFFC013E 69 6E 73 74 72 75 63 74     
    299 FFFC0146 69 6F 6E 00                 
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 6
bootrom.asm
                                             
                                             		align	2
                                             
                                             ;------------------------------------------------------------------------------
                                             ; TRAP #15 handler
                                             ;------------------------------------------------------------------------------
                                             ;
    307 FFFC014A                             TRAP15:
    308 FFFC014A 48E7 8080                   		movem.l	d0/a0,-(a7)
    309 FFFC014E 41F9 FFFC 0164              		lea		T15DispatchTable,a0
    310 FFFC0154 E580                        		asl.l	#2,d0
    311 FFFC0156 2070 0000                   		move.l	(a0,d0.w),a0
    312 FFFC015A 4E90                        		jsr		(a0)
    313 FFFC015C 4CDF 0101                   		movem.l	(a7)+,d0/a0
    314 FFFC0160 4E73                        		rte
                                             
    316 FFFC0162 FF FF                       		align	4
    317 FFFC0164                             T15DispatchTable:
    318 FFFC0164 FFFC0204                    dc.l	StubRout
    319 FFFC0168 FFFC0204                    dc.l	StubRout
    320 FFFC016C FFFC0204                    dc.l	StubRout
    321 FFFC0170 FFFC0204                    dc.l	StubRout
    322 FFFC0174 FFFC0204                    dc.l	StubRout
    323 FFFC0178 FFFC0B9E                    dc.l	GetKey
    324 FFFC017C FFFC0258                    dc.l	DisplayChar
    325 FFFC0180 FFFC0B8C                    dc.l	CheckForKey
    326 FFFC0184 FFFC0204                    dc.l	StubRout
    327 FFFC0188 FFFC0204                    dc.l	StubRout
    328 FFFC018C FFFC0204                    dc.l	StubRout
    329 FFFC0190 FFFC0432                    dc.l	Cursor1
    330 FFFC0194 FFFC0206                    dc.l	SetKeyboardEcho
    331 FFFC0198 FFFC0402                    dc.l	DisplayStringCRLF
    332 FFFC019C FFFC03E8                    dc.l	DisplayString
    333 FFFC01A0 FFFC0204                    dc.l	StubRout
    334 FFFC01A4 FFFC0204                    dc.l	StubRout
    335 FFFC01A8 FFFC0204                    dc.l	StubRout
    336 FFFC01AC FFFC0204                    dc.l	StubRout
    337 FFFC01B0 FFFC0204                    dc.l	StubRout
    338 FFFC01B4 FFFC0204                    dc.l	StubRout
    339 FFFC01B8 FFFC0204                    dc.l	StubRout
    340 FFFC01BC FFFC0204                    dc.l	StubRout
    341 FFFC01C0 FFFC0204                    dc.l	StubRout
    342 FFFC01C4 FFFC0204                    dc.l	StubRout
    343 FFFC01C8 FFFC0204                    dc.l	StubRout
    344 FFFC01CC FFFC0204                    dc.l	StubRout
    345 FFFC01D0 FFFC0204                    dc.l	StubRout
    346 FFFC01D4 FFFC0204                    dc.l	StubRout
    347 FFFC01D8 FFFC0204                    dc.l	StubRout
    348 FFFC01DC FFFC0204                    dc.l	StubRout
    349 FFFC01E0 FFFC0204                    dc.l	StubRout
    350 FFFC01E4 FFFC0204                    dc.l	StubRout
    351 FFFC01E8 FFFC0204                    dc.l	StubRout
    352 FFFC01EC FFFC0204                    dc.l	StubRout
    353 FFFC01F0 FFFC0204                    dc.l	StubRout
    354 FFFC01F4 FFFC0204                    dc.l	StubRout
    355 FFFC01F8 FFFC0204                    dc.l	StubRout
    356 FFFC01FC FFFC0204                    dc.l	StubRout
    357 FFFC0200 FFFC0204                    dc.l	StubRout
                                             
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 7
bootrom.asm
                                             ; Stub routine for unimplemented functionality.
                                             ;------------------------------------------------------------------------------
                                             ;
    363 FFFC0204                             StubRout:
    364 FFFC0204 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; d1.b 0=echo off, non-zero = echo on
                                             ;------------------------------------------------------------------------------
    369 FFFC0206                             SetKeyboardEcho:
    370 FFFC0206 13C1 0001 0424              	move.b	d1,KeybdEcho
    371 FFFC020C 4E75                        	rts
                                             
                                             
    374 FFFC020E                             CRLF:
    375 FFFC020E 2F01                        		move.l	d1,-(a7)
    376 FFFC0210 123C 000D                   		move.b	#'\r',d1
    377 FFFC0214 4EB9 FFFC 0258              		jsr		DisplayChar
    378 FFFC021A 123C 000A                   		move.b	#'\n',d1
    379 FFFC021E 4EB9 FFFC 0258              		jsr		DisplayChar
    380 FFFC0224 221F                        		move.l	(a7)+,d1
    381 FFFC0226 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Calculate screen memory location from CursorRow,CursorCol.
                                             ; Destroys d0,d2,a0
                                             ;------------------------------------------------------------------------------
                                             ;
    388 FFFC0228                             CalcScreenLoc:
    389 FFFC0228 1039 0001 0418              		move.b	CursorRow,d0		; compute screen location
    390 FFFC022E 0240 007F                   		andi.w	#0x7f,d0
    391 FFFC0232 1439 0001 041B              		move.b	TextCols,d2
    392 FFFC0238 4882                        		ext.w	d2
    393 FFFC023A C0C2                        		mulu.w	d2,d0
    394 FFFC023C 1439 0001 0419              		move.b	CursorCol,d2
    395 FFFC0242 0242 00FF                   		andi.w	#0xff,d2
    396 FFFC0246 D042                        		add.w	d2,d0
    397 FFFC0248 33C0 0001 041C              		move.w	d0,TextCurpos
    398 FFFC024E D0B9 0001 0420              		add.l	TextScr,d0
    399 FFFC0254 2040                        		move.l	d0,a0				; a0 = screen location
    400 FFFC0256 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a character on the screen
                                             ; d1.b = char to display
                                             ;------------------------------------------------------------------------------
                                             ;
    407 FFFC0258                             DisplayChar:
    408 FFFC0258 48E7 3000                   		movem.l	d2/d3,-(a7)
    409 FFFC025C 0C01 000D                   		cmpi.b	#'\r',d1			; carriage return ?
    410 FFFC0260 660C                        		bne.s	dccr
    411 FFFC0262 4239 0001 0419              		clr.b	CursorCol			; just set cursor column to zero on a CR
    412 FFFC0268 4CDF 000C                   		movem.l	(a7)+,d2/d3
    413 FFFC026C 4E75                        		rts
    414 FFFC026E                             dccr:
    415 FFFC026E 0C01 0091                   		cmpi.b	#0x91,d1			; cursor right ?
    416 FFFC0272 6620                        		bne.s   dcx6
    417 FFFC0274 1439 0001 041B              		move.b	TextCols,d2
    418 FFFC027A 5302                        		sub.b	#1,d2
    419 FFFC027C 9439 0001 0419              		sub.b	CursorCol,d2
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 8
bootrom.asm
    420 FFFC0282 670A                        		beq.s	dcx7
    421 FFFC0284 5239 0001 0419              		addi.b	#1,CursorCol
    422 FFFC028A 6000 0446                   		bra		SyncCursor
    423 FFFC028E                             dcx7:
    424 FFFC028E 4CDF 000C                   		movem.l	(a7)+,d2/d3
    425 FFFC0292 4E75                        		rts
    426 FFFC0294                             dcx6:
    427 FFFC0294 0C01 0090                   		cmpi.b	#0x90,d1			; cursor up ?
    428 FFFC0298 6614                        		bne.s	dcx8
    429 FFFC029A 0C39 0000 0001 0418         		cmpi.b	#0,CursorRow
    430 FFFC02A2 67EA                        		beq.s	dcx7
    431 FFFC02A4 5339 0001 0418              		subi.b	#1,CursorRow
    432 FFFC02AA 6000 0426                   		bra		SyncCursor
    433 FFFC02AE                             dcx8:
    434 FFFC02AE 0C01 0093                   		cmpi.b	#0x93,d1			; cursor left?
    435 FFFC02B2 6614                        		bne.s	dcx9
    436 FFFC02B4 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    437 FFFC02BC 67D0                        		beq.s	dcx7
    438 FFFC02BE 5339 0001 0419              		subi.b	#1,CursorCol
    439 FFFC02C4 6000 040C                   		bra		SyncCursor
    440 FFFC02C8                             dcx9:
    441 FFFC02C8 0C01 0092                   		cmpi.b	#0x92,d1			; cursor down ?
    442 FFFC02CC 661A                        		bne		dcx10
    443 FFFC02CE 1439 0001 041A              		move.b	TextRows,d2
    444 FFFC02D4 5302                        		sub.b	#1,d2
    445 FFFC02D6 9439 0001 0418              		sub.b	CursorRow,d2
    446 FFFC02DC 67B0                        		beq		dcx7
    447 FFFC02DE 5279 0001 0418              		addi.w	#1,CursorRow
    448 FFFC02E4 6000 03EC                   		bra		SyncCursor
    449 FFFC02E8                             dcx10:
    450 FFFC02E8 0C01 0094                   		cmpi.b	#0x94,d1			; cursor home ?
    451 FFFC02EC 661E                        		bne.s	dcx11
    452 FFFC02EE 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    453 FFFC02F6 670A                        		beq.s	dcx12
    454 FFFC02F8 4239 0001 0419              		clr.b	CursorCol
    455 FFFC02FE 6000 03D2                   		bra		SyncCursor
    456 FFFC0302                             dcx12:
    457 FFFC0302 4239 0001 0418              		clr.b	CursorRow
    458 FFFC0308 6000 03C8                   		bra		SyncCursor
    459 FFFC030C                             dcx11:
    460 FFFC030C 48E7 E080                   		movem.l	d0/d1/d2/a0,-(a7)
    461 FFFC0310 0C01 0099                   		cmpi.b	#0x99,d1			; delete ?
    462 FFFC0314 660C                        		bne.s	dcx13
    463 FFFC0316 6100 FF10                   		bsr		CalcScreenLoc
    464 FFFC031A 1039 0001 0419              		move.b	CursorCol,d0
    465 FFFC0320 6020                        		bra.s	dcx5
    466 FFFC0322                             dcx13:
    467 FFFC0322 0C01 0008                   		cmpi.b	#CTRLH,d1			; backspace ?
    468 FFFC0326 6632                        		bne.s   dcx3
    469 FFFC0328 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    470 FFFC0330 6756                        		beq.s   dcx4
    471 FFFC0332 5339 0001 0419              		subi.b	#1,CursorCol
    472 FFFC0338 6100 FEEE                   		bsr		CalcScreenLoc		; a0 = screen location
    473 FFFC033C 1039 0001 0419              		move.b	CursorCol,d0
    474 FFFC0342                             dcx5:
    475 FFFC0342 10E8 0001                   		move.b	1(a0),(a0)+
    476 FFFC0346 5200                        		addi.b	#1,d0
    477 FFFC0348 B039 0001 041B              		cmp.b	TextCols,d0
    478 FFFC034E 65F2                        		blo.s	dcx5
    479 FFFC0350 103C 0020                   		move.b	#32,d0
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 9
bootrom.asm
    480 FFFC0354 1140 FFFF                   		move.b	d0,-1(a0)
    481 FFFC0358 602E                        		bra.s	dcx4
    482 FFFC035A                             dcx3:
    483 FFFC035A 0C01 000A                   		cmpi.b	#'\n',d1		; linefeed ?
    484 FFFC035E 6720                        		beq.s	dclf
                                             
    486 FFFC0360 6100 FEC6                   		bsr		CalcScreenLoc	; a0 = screen location
                                             		;bsr		AsciiToScreen	; convert ascii char to screen char
    488 FFFC0364 1081                        		move.b	d1,(a0)
    489 FFFC0366 1001                        		move.b	d1,d0
    490 FFFC0368 4880                        		ext.w	d0
    491 FFFC036A 6100 02DA                   		bsr		DispChar
    492 FFFC036E 6100 0022                   		bsr		IncCursorPos
    493 FFFC0372 6100 035E                   		bsr		SyncCursor
    494 FFFC0376 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0
    495 FFFC037A 4CDF 000C                   		movem.l	(a7)+,d2/d3
    496 FFFC037E 4E75                        		rts
    497 FFFC0380                             dclf:
    498 FFFC0380 6100 0030                   		bsr		IncCursorRow
    499 FFFC0384 6100 034C                   		bsr		SyncCursor
    500 FFFC0388                             dcx4:
    501 FFFC0388 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0		; get back a0
    502 FFFC038C 4CDF 000C                   		movem.l	(a7)+,d2/d3
    503 FFFC0390 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Increment the cursor position, scroll the screen if needed.
                                             ;------------------------------------------------------------------------------
                                             ;
    509 FFFC0392                             IncCursorPos:
    510 FFFC0392 5279 0001 041C              		addi.w	#1,TextCurpos
    511 FFFC0398 5239 0001 0419              		addi.b	#1,CursorCol
    512 FFFC039E 1039 0001 041B              		move.b	TextCols,d0
    513 FFFC03A4 B039 0001 0419              		cmp.b	CursorCol,d0
    514 FFFC03AA 643A                        		bhs.s	icc1
    515 FFFC03AC 4239 0001 0419              		clr.b	CursorCol
    516 FFFC03B2                             IncCursorRow:
    517 FFFC03B2 5239 0001 0418              		addi.b	#1,CursorRow
    518 FFFC03B8 1039 0001 041A              		move.b	TextRows,d0
    519 FFFC03BE B039 0001 0418              		cmp.b	CursorRow,d0
    520 FFFC03C4 6220                        		bhi.s	icc1
    521 FFFC03C6 1039 0001 041A              		move.b	TextRows,d0
    522 FFFC03CC 13C0 0001 0418              		move.b	d0,CursorRow		; in case CursorRow is way over
    523 FFFC03D2 5339 0001 0418              		subi.b	#1,CursorRow
    524 FFFC03D8 4880                        		ext.w	d0
    525 FFFC03DA E340                        		asl.w	#1,d0
    526 FFFC03DC 9179 0001 041C              		sub.w	d0,TextCurpos
    527 FFFC03E2 6100 1058                   		bsr		ScrollUp
    528 FFFC03E6                             icc1:
    529 FFFC03E6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen.
                                             ;------------------------------------------------------------------------------
                                             ;
    535 FFFC03E8                             DisplayString:
    536 FFFC03E8 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    537 FFFC03EC                             dspj1:
    538 FFFC03EC 4281                        		clr.l	d1				; clear upper bits of d1
    539 FFFC03EE 1219                        		move.b	(a1)+,d1		; move string char into d1
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 10
bootrom.asm
    540 FFFC03F0 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    541 FFFC03F4 6706                        		beq		dsret			
    542 FFFC03F6 6100 FE60                   		bsr		DisplayChar		; display character
    543 FFFC03FA 60F0                        		bra		dspj1			; go back for next character
    544 FFFC03FC                             dsret:
    545 FFFC03FC 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    546 FFFC0400 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen followed by carriage return / linefeed.
                                             ;------------------------------------------------------------------------------
                                             ;
    552 FFFC0402                             DisplayStringCRLF:
    553 FFFC0402 6100 FFE4                   		bsr		DisplayString
    554 FFFC0406 6000 FE06                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ;------------------------------------------------------------------------------
                                             ;
    560 FFFC040A                             DisplayString1:
    561 FFFC040A 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    562 FFFC040E 0241 00FF                   		andi.w	#255,d1			; max 255 chars
    563 FFFC0412 2001                        		move.l	d1,d0
    564 FFFC0414                             dspj11:
    565 FFFC0414 1219                        		move.b	(a1)+,d1		; move string char into d1
    566 FFFC0416 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    567 FFFC041A 6708                        		beq		dsret1			
    568 FFFC041C 6100 FE3A                   		bsr		DisplayChar		; display character
    569 FFFC0420 57C8 FFF2                   		dbeq	d0,dspj11		; go back for next character
    570 FFFC0424                             dsret1:
    571 FFFC0424 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    572 FFFC0428 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ; end string with CR,LF
                                             ;------------------------------------------------------------------------------
                                             ;
    579 FFFC042A                             DisplayString0:
    580 FFFC042A 6100 FFDE                   		bsr		DisplayString1
    581 FFFC042E 6000 FDDE                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Dispatch cursor functions
                                             ;------------------------------------------------------------------------------
                                             ;
    587 FFFC0432                             Cursor1:
    588 FFFC0432 0C41 00FF                   		cmpi.w	#0x00ff,d1
    589 FFFC0436 670E                        		beq		GetCursorPos
    590 FFFC0438 0C41 FF00                   		cmpi.w	#0xFF00,d1
    591 FFFC043C 6718                        		beq		SetCursorPos
    592 FFFC043E 4EB9 FFFC 13EA              		jsr		ClearScreen
    593 FFFC0444 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get the cursor position.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 11
bootrom.asm
                                             ;
    601 FFFC0446                             GetCursorPos:
    602 FFFC0446 1239 0001 0419              		move.b	CursorCol,d1
    603 FFFC044C E141                        		asl.w	#8,d1
    604 FFFC044E 1239 0001 0418              		move.b	CursorRow,d1
    605 FFFC0454 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Set the position of the cursor, update the linear screen pointer.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    613 FFFC0456                             SetCursorPos:
    614 FFFC0456 48E7 6000                   		movem.l	d1/d2,-(a7)
    615 FFFC045A 13C1 0001 0418              		move.b	d1,CursorRow
    616 FFFC0460 E049                        		lsr.w	#8,d1
    617 FFFC0462 13C1 0001 0419              		move.b	d1,CursorCol
    618 FFFC0468 1239 0001 0418              		move.b	CursorRow,d1
    619 FFFC046E 4881                        		ext.w	d1
    620 FFFC0470 1439 0001 041B              		move.b	TextCols,d2
    621 FFFC0476 4882                        		ext.w	d2
    622 FFFC0478 C2C2                        		mulu.w	d2,d1
    623 FFFC047A 1439 0001 0419              		move.b	CursorCol,d2
    624 FFFC0480 D242                        		add.w	d2,d1
    625 FFFC0482 33C1 0001 041C              		move.w	d1,TextCurpos
    626 FFFC0488                             scp1:
    627 FFFC0488 4CDF 0006                   		movem.l	(a7)+,d1/d2
    628 FFFC048C 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    633 FFFC048E                             Set320x192:
    634 FFFC048E 4DF9 FFE0 0000              		lea		VDGREG,a6			; a6 = pointer to register set
    635 FFFC0494 41F9 FFFC 055E              		lea		tbl1280x768,a0
    636 FFFC049A 43EE 0710                   		lea		$710(a6),a1			; a1 points to timing registers
    637 FFFC049E 3D7C A123 072E              		move.w	#$A123,$72E(a6)		; unlock timing regs
    638 FFFC04A4 700E                        		moveq	#14,d0
    639 FFFC04A6                             .0001:
    640 FFFC04A6 32D8                        		move.w	(a0)+,(a1)+
    641 FFFC04A8 51C8 FFFC                   		dbra	d0,.0001
    642 FFFC04AC 3D7C 0000 072E              		move.w	#$0000,$72E(a6)		; lock timing regs
    643 FFFC04B2 4E75                        		rts
                                             
    645 FFFC04B4                             Set320x240:
    646 FFFC04B4 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    647 FFFC04BA 4E75                        		rts
                                             
    649 FFFC04BC                             Set400x300:
    650 FFFC04BC 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    651 FFFC04C2 3D7C 0001 0650              		move.w	#1,$650(a6)			; 1 = divide by 2 mode
    652 FFFC04C8 3D7C 0190 0588              		move.w	#400,$588(a6)		; bitmap width register
    653 FFFC04CE 41F9 FFFC 0540              		lea		tbl800x600,a0
    654 FFFC04D4 43EE 0710                   		lea		$710(a6),a1			; a1 points to timing registers
    655 FFFC04D8 3D7C A123 072E              		move.w	#$A123,$72E(a6)		; unlock timing regs
    656 FFFC04DE 700E                        		moveq	#14,d0
    657 FFFC04E0                             .0001:
    658 FFFC04E0 32D8                        		move.w	(a0)+,(a1)+
    659 FFFC04E2 51C8 FFFC                   		dbra	d0,.0001
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 12
bootrom.asm
    660 FFFC04E6 3D7C 0000 072E              		move.w	#$0000,$72E(a6)		; lock timing regs
    661 FFFC04EC 13FC 0032 0001 041B         		move.b	#50,TextCols
    662 FFFC04F4 13FC 0025 0001 041A         		move.b	#37,TextRows
    663 FFFC04FC 4E75                        		rts
                                             
    665 FFFC04FE                             Set800x600:
    666 FFFC04FE 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    667 FFFC0504 3D7C 0000 0650              		move.w	#0,$650(a6)			; 0 = no divide
    668 FFFC050A 3D7C 0320 0588              		move.w	#800,$588(a6)		; bitmap width register
    669 FFFC0510 41F9 FFFC 0540              		lea		tbl800x600,a0
    670 FFFC0516 43EE 0710                   		lea		$710(a6),a1			; a1 points to timing registers
    671 FFFC051A 3D7C A123 072E              		move.w	#$A123,$72E(a6)		; unlock timing regs
    672 FFFC0520 700E                        		moveq	#14,d0
    673 FFFC0522                             .0001:
    674 FFFC0522 32D8                        		move.w	(a0)+,(a1)+
    675 FFFC0524 51C8 FFFC                   		dbra	d0,.0001
    676 FFFC0528 3D7C 0000 072E              		move.w	#$0000,$72E(a6)		; lock timing regs
    677 FFFC052E 13FC 0064 0001 041B         		move.b	#100,TextCols
    678 FFFC0536 13FC 004B 0001 041A         		move.b	#75,TextRows
    679 FFFC053E 4E75                        		rts
                                             
                                             	align	2
                                             ;tbl640x480:
                                             ;	dc.w	800,525
    684 FFFC0540                             tbl800x600:
    685 FFFC0540 0420 0274 0028 00A8         	dc.w	1056,628,40,168,1,5,1056,256,628,28,1056,256,628,28,0
    686 FFFC0548 0001 0005 0420 0100         
    687 FFFC0550 0274 001C 0420 0100         
    688 FFFC0558 0274 001C 0000              
    689 FFFC055E                             tbl1280x768:
    690 FFFC055E 0690 031B 0043 00C9         	dc.w	1680,795,67,201,2,5,1680,400,795,27,1680,400,795,27,0
    691 FFFC0566 0002 0005 0690 0190         
    692 FFFC056E 031B 001B 0690 0190         
    693 FFFC0576 031B 001B 0000              
                                             
                                             ;------------------------------------------------------------------------------
                                             ; The z buffer is setup so that display has the lowest priority. This allows
                                             ; sprites to appear in front of graphics. At power on the buffer likely
                                             ; contains all zeros making graphics the highest priority.
                                             ;------------------------------------------------------------------------------
                                             
    701 FFFC057C                             BootSetZBuffer:
    702 FFFC057C 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    703 FFFC0582 207C FF80 0000              		move.l	#VDGBUF,A0			; a0 = pointer to display buffer
    704 FFFC0588 3D7C 0001 043E              		move.w	#$1,$43E(a6)		; switch to z buffer
    705 FFFC058E 223C 0000 3A98              		move.l	#BMP_WIDTH*BMP_HEIGHT/8,D1		; number of words to update
    706 FFFC0594                             .0001:
    707 FFFC0594 20FC FFFF FFFF              		move.l	#$FFFFFFFF,(a0)+	; set z layer to 3
    708 FFFC059A 5381                        		sub.l	#1,d1
    709 FFFC059C 66F6                        		bne.s	.0001
    710 FFFC059E 3D7C 0000 043E              		move.w	#$0,$43E(a6)		; switch to regular buffer
    711 FFFC05A4 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; clear screen	
                                             ;
                                             ; Trashes:
                                             ;	a0,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 13
bootrom.asm
    720 FFFC05A6                             BootClearScreen:
    721 FFFC05A6 207C FF80 0000              		move.l	#VDGBUF,A0
    722 FFFC05AC 700F                        		moveq	#DARK_BLUE,D0				; dark blue
    723 FFFC05AE 223C 0001 D4C0              		move.l	#BMP_WIDTH*BMP_HEIGHT,D1	; number of pixels
    724 FFFC05B4                             .loop1:
    725 FFFC05B4 30C0                        		move.w	d0,(a0)+					; store it to the screen
    726 FFFC05B6 5381                        		sub.l	#1,d1						; can't use dbra here
    727 FFFC05B8 66FA                        		bne.s	.loop1
    728 FFFC05BA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; copy font to VDG ram
                                             ;
                                             ; The font address is 1/2 of the memory address that the cpu sees because
                                             ; the AV controller only deals with word accesses.
                                             ;
                                             ; Trashes:
                                             ;	a0,a1,a6,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    740 FFFC05BC                             BootCopyFont:
    741 FFFC05BC 2C7C FFE0 0000              		movea.l	#VDGREG,a6
                                             		; Setup font table
    743 FFFC05C2 2D7C 0005 C000 0590         		move.l	#$5C000,$590(a6)	; set font table address 1/2 B8000
    744 FFFC05CA 203C 0005 C004              		move.l	#$5C004,d0			; set bitmap address (directly follows)
    745 FFFC05D0 4840                        		swap	d0
    746 FFFC05D2 0040 9CE0                   		or.w	#%1001110011100000,d0	; set font fixed, width, height
    747 FFFC05D6 4840                        		swap	d0
    748 FFFC05D8 23C0 FF8B 8000              		move.l	d0,$FF8B8000
    749 FFFC05DE 42B9 FF8B 8004              		clr.l	$FF8B8004			; clear glyph width table address (not used)
    750 FFFC05E4 227C FF8B 8008              		movea.l	#$FF8B8008,a1		; font table address
                                             
    752 FFFC05EA 41F9 FFFC 2000              		lea		font8,a0
    753 FFFC05F0 223C 0000 1000              		move.l	#8*512,d1			; 512 chars * 8 bytes per char
                                             
    755 FFFC05F6 3D7C 0000 0594              		move.w	#0,$594(a6)			; select font id (0)
                                             
    757 FFFC05FC 7000                        		moveq	#0,d0				; zero out high order bits
    758 FFFC05FE                             cpyfnt:
    759 FFFC05FE 1018                        		move.b	(a0)+,d0			; get a byte
    760 FFFC0600 32C0                        		move.w	d0,(a1)+			; store in font table
    761 FFFC0602 51C9 FFFA                   		dbra	d1,cpyfnt
    762 FFFC0606 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Trashes:
                                             ;	a6
                                             ;------------------------------------------------------------------------------
                                             
    773 FFFC0608                             DispCharAt:
    774 FFFC0608 2C7C FFE0 0000              		move.l	#VDGREG,a6
    775 FFFC060E 4840                        		swap	d0						; save off d0 low
    776 FFFC0610                             .0001:									; wait for character que to empty
    777 FFFC0610 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    778 FFFC0614 B07C 001C                   		cmp.w	#28,d0					; allow up 28 entries to be in progress
    779 FFFC0618 64F6                        		bhs.s	.0001					; branch if too many chars queued
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 14
bootrom.asm
    780 FFFC061A 4840                        		swap	d0						; get back d0 low
    781 FFFC061C 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    782 FFFC0620 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)		; set fg color
    783 FFFC0628 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)		; set bk color
    784 FFFC0630 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    785 FFFC0634 3D42 0428                   		move.w	d2,$428(a6)			; set y pos
    786 FFFC0638 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    787 FFFC063E 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    788 FFFC0644 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;------------------------------------------------------------------------------
                                             
    795 FFFC0646                             DispChar:
    796 FFFC0646 48E7 4002                   		movem.l	d1/a6,-(a7)
    797 FFFC064A 2C7C FFE0 0000              		move.l	#VDGREG,a6
    798 FFFC0650 4840                        		swap	d0					; save off d0 low
    799 FFFC0652                             .0001:								; wait for character que to empty
    800 FFFC0652 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    801 FFFC0656 B07C 001C                   		cmp.w	#28,d0				; allow up 28 entries to be in progress
    802 FFFC065A 64F6                        		bhs.s	.0001				; branch if too many chars queued
    803 FFFC065C 4840                        		swap	d0					; get back d0 low
    804 FFFC065E 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    805 FFFC0662 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)	; set fg color
    806 FFFC066A 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)	; set bk color
    807 FFFC0672 1239 0001 0419              		move.b	CursorCol,d1
    808 FFFC0678 4881                        		ext.w	d1
    809 FFFC067A E741                        		asl.w	#3,d1
    810 FFFC067C 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    811 FFFC0680 1239 0001 0418              		move.b	CursorRow,d1
    812 FFFC0686 4881                        		ext.w	d1
    813 FFFC0688 E741                        		asl.w	#3,d1
    814 FFFC068A 3D41 0428                   		move.w	d1,$428(a6)			; set y pos
                                             ;		move.w	#$0707,$42A(a6)		; set font x,y extent (defunct - in font table)
    816 FFFC068E 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    817 FFFC0694 4CDF 4002                   		movem.l	(a7)+,d1/a6
    818 FFFC0698 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Cursor Routines
                                             ;
                                             ; BIOS uses cursor #0. The BIOS cursor is 10 x 10
                                             ;==============================================================================
                                             
    826 FFFC069A                             EnableCursor:
    827 FFFC069A 48E7 8002                   		movem.l	d0/a6,-(a7)
    828 FFFC069E 4DF9 FFE0 0000              		lea		VDGREG,a6
    829 FFFC06A4 202E 0108                   		move.l	$108(a6),d0
    830 FFFC06A8 08C0 0000                   		bset	#0,d0
    831 FFFC06AC 2D40 0108                   		move.l	d0,$108(a6)
    832 FFFC06B0 4CDF 4001                   		movem.l	(a7)+,d0/a6
    833 FFFC06B4 4E75                        		rts
                                             		
    835 FFFC06B6                             DisableCursor:
    836 FFFC06B6 48E7 8002                   		movem.l	d0/a6,-(a7)
    837 FFFC06BA 4DF9 FFE0 0000              		lea		VDGREG,a6
    838 FFFC06C0 202E 0108                   		move.l	$108(a6),d0
    839 FFFC06C4 0880 0000                   		bclr	#0,d0
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 15
bootrom.asm
    840 FFFC06C8 2D40 0108                   		move.l	d0,$108(a6)
    841 FFFC06CC 4CDF 4001                   		movem.l	(a7)+,d0/a6
    842 FFFC06D0 4E75                        		rts
                                             		
                                             ;------------------------------------------------------------------------------
                                             ; Sync the hardware cursor's position to the text cursor position.
                                             ;------------------------------------------------------------------------------
                                             
    848 FFFC06D2                             SyncCursor:
    849 FFFC06D2 48E7 4002                   		movem.l	d1/a6,-(a7)
    850 FFFC06D6 2C7C FFE0 0000              		move.l	#VDGREG,a6
                                             ;		move.w	#$0A0A,VDG_CURSZ(a6)	; defunct size set in SetCursorImage64
    852 FFFC06DC 1239 0001 0419              		move.b	CursorCol,d1
    853 FFFC06E2 4881                        		ext.w	d1
    854 FFFC06E4 E741                        		asl.w	#3,d1
    855 FFFC06E6 5341                        		sub.w	#1,d1
    856 FFFC06E8 3D41 0204                   		move.w	d1,VDG_CUR0X(a6)
    857 FFFC06EC 1239 0001 0418              		move.b	CursorRow,d1
    858 FFFC06F2 4881                        		ext.w	d1
    859 FFFC06F4 E741                        		asl.w	#3,d1
    860 FFFC06F6 5341                        		sub.w	#1,d1
    861 FFFC06F8 3D41 0206                   		move.w	d1,VDG_CUR0Y(a6)
    862 FFFC06FC 4CDF 4002                   		movem.l	(a7)+,d1/a6
    863 FFFC0700 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Color
                                             ; - cursor color is a 23 bit vector
                                             ;
                                             ;	aifffff-rrrrrgggggbbbbb
                                             ;	||  |     |    |    |
                                             ;   ||  |     |    |    +-- blue
                                             ;	||  |     |    +------- green
                                             ;   ||  |     +------------ red
                                             ;   ||  +------------------ flashrate 0xxxx = no flash
                                             ;   |+--------------------- invert video (rgb ignored)
                                             ;   +---------------------- alpha blend (least significant 8 bits used as alpha)
                                             ;
                                             ;   flash rate
                                             ;		 0xxxx = no flash
                                             ;        00001 = 1/8 vsync (7.5 Hz)
                                             ;	     00010 = 1/16 vsync (3.75 Hz)
                                             ;        00100 = 1/32 vsync (1.875 Hz)
                                             ;------------------------------------------------------------------------------
                                             
    885 FFFC0702                             SetCursorColor:
    886 FFFC0702 2F02                        		move.l  d2/a5/a6,-(a7)
    887 FFFC0704 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    888 FFFC070A 2C7C FFE0 0000              		move.l	#VDGREG,a6
    889 FFFC0710 3D7C 0004 0446              		move.w	#%00100,VDG_CURFLSH(a6)
    890 FFFC0716 3D7C 7FFF 0448              		move.w	#%0111111111111111,VDG_CURCLR0(a6)
    891 FFFC071C 743F                        		moveq	#63,d2
    892 FFFC071E                             .0001:
    893 FFFC071E 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    894 FFFC0722 262D 0C00                   		move.l	$0C00(a5),d3
    895 FFFC0726 0283 0000 FFFF              		and.l	#$FFFF,d3
    896 FFFC072C 2CC3                        		move.l	d3,(a6)+
    897 FFFC072E 51CA FFEE                   		dbra	d2,.0001
    898 FFFC0732 241F                        		move.l	(a7)+,d2/a5/a6
    899 FFFC0734 4E75                        		rts
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 16
bootrom.asm
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Put some values in the cursors color palette so they will be visible.
                                             ; Otherwise they will all be black.
                                             ;------------------------------------------------------------------------------
                                             
    906 FFFC0736                             InitCursorColorPalette:
    907 FFFC0736 2F02                        		move.l  d2/d3/a5/a6,-(a7)
    908 FFFC0738 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    909 FFFC073E 2C7C FFE0 0000              		move.l	#VDGREG,a6
    910 FFFC0744 743F                        		moveq	#63,d2
    911 FFFC0746                             .0001:
    912 FFFC0746 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    913 FFFC074A 262D 0C00                   		move.l	$0C00(a5),d3		; move random number
    914 FFFC074E 0283 0000 FFFF              		and.l	#$FFFF,d3			; mask off other attributes
    915 FFFC0754 2CC3                        		move.l	d3,(a6)+
    916 FFFC0756 51CA FFEE                   		dbra	d2,.0001
    917 FFFC075A 241F                        		move.l	(a7)+,d2/d3/a5/a6
    918 FFFC075C 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Image (defunct)
                                             ; The original 16x16 hardware cursor is no longer supported.
                                             ; Cursor may be up to 16x16 pixels.
                                             ;------------------------------------------------------------------------------
                                             
    926 FFFC075E                             SetCursorImage:
    927 FFFC075E 48E7 4082                   		movem.l	d1/a0/a6,-(a7)
    928 FFFC0762 41F9 FFFC 077C              		lea		CursorImage,a0
    929 FFFC0768 2C7C FFE0 0460              		move.l	#VDGREG+VDG_CURIMG,a6
    930 FFFC076E 720F                        		moveq	#15,d1
    931 FFFC0770                             .0001:
    932 FFFC0770 3CD8                        		move.w	(a0)+,(a6)+
    933 FFFC0772 51C9 FFFC                   		dbra	d1,.0001
    934 FFFC0776 4CDF 4102                   		movem.l	(a7)+,d1/a0/a6
    935 FFFC077A 4E75                        		rts
                                             
                                             	align	2
    938 FFFC077C                             CursorImage:
    939 FFFC077C 03FF                        	dc.w	%1111111111
    940 FFFC077E 0201                        	dc.w	%1000000001
    941 FFFC0780 0201                        	dc.w	%1000000001
    942 FFFC0782 0201                        	dc.w	%1000000001
    943 FFFC0784 0201                        	dc.w	%1000000001
    944 FFFC0786 0201                        	dc.w	%1000000001
    945 FFFC0788 0201                        	dc.w	%1000000001
    946 FFFC078A 0201                        	dc.w	%1000000001
    947 FFFC078C 0231                        	dc.w	%1000110001
    948 FFFC078E 03FF                        	dc.w	%1111111111
    949 FFFC0790 0000                        	dc.w	%0000000000
    950 FFFC0792 0000                        	dc.w	%0000000000
    951 FFFC0794 0000                        	dc.w	%0000000000
    952 FFFC0796 0000                        	dc.w	%0000000000
    953 FFFC0798 0000                        	dc.w	%0000000000
    954 FFFC079A 0000                        	dc.w	%0000000000
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Setup an image for the cursor.
                                             ; Cursor may be up to 32h x 512v pixels.
                                             ; The BIOS cursor is 10 x 10
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 17
bootrom.asm
                                             ;------------------------------------------------------------------------------
                                             
    962 FFFC079C                             SetCursorImage64:
    963 FFFC079C 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
    964 FFFC07A0 41F9 FFFC 080C              		lea		CursorImage64,a0
    965 FFFC07A6 7214                        		moveq	#20,d1					; set count number of long words to move
    966 FFFC07A8 227C FF8B 7E00              		move.l	#$FF8B7E00,a1
    967 FFFC07AE                             .0001:
    968 FFFC07AE 22D8                        		move.l	(a0)+,(a1)+
    969 FFFC07B0 51C9 FFFC                   		dbra	d1,.0001
    970 FFFC07B4 343C 0200                   		move.w	#$200,d2
    971 FFFC07B8 207C FFE0 0000              		move.l	#VDGREG,a0
    972 FFFC07BE 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
    973 FFFC07C4                             .0002:
    974 FFFC07C4 21BC 0005 BF00 2000         		move.l	#$5BF00,(a0,d2.w)
    975 FFFC07CC 31BC 0249 2008              		move.w	#$0249,8(a0,d2.w)	; set cursor size 10x10
    976 FFFC07D2 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    977 FFFC07D6 262E 0C00                   		move.l	$0C00(a6),d3
    978 FFFC07DA 0243 00FF                   		and.w	#$FF,d3
    979 FFFC07DE 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
    980 FFFC07E2 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    981 FFFC07E6 262E 0C00                   		move.l	$0C00(a6),d3
    982 FFFC07EA 0243 00FF                   		and.w	#$FF,d3
    983 FFFC07EE 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
    984 FFFC07F2 363C 0000                   		move.w	#$0,d3
    985 FFFC07F6 3183 200A                   		move.w	d3,10(a0,d2.w)		; set z pos
    986 FFFC07FA 0642 0010                   		add.w	#$10,d2
    987 FFFC07FE B47C 0300                   		cmp.w	#$300,d2
    988 FFFC0802 66C0                        		bne.s	.0002
    989 FFFC0804 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6
    990 FFFC0808 4E75                        		rts
                                             		
    992 FFFC080A FF FF                       	align	4
    993 FFFC080C                             CursorImage64:
    994 FFFC080C 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
    995 FFFC0814 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    996 FFFC081C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    997 FFFC0824 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    998 FFFC082C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
    999 FFFC0834 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1000 FFFC083C 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1001 FFFC0844 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1002 FFFC084C 40501000 00000000           	dc.l	%01000000010100000001000000000000,$00
   1003 FFFC0854 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
   1004 FFFC085C 00000000 00000000           	dc.l	$00,$00
   1005 FFFC0864 00000000 00000000           	dc.l	$00,$00
                                             
   1007 FFFC086C                             BouncingBalls:
   1008 FFFC086C 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
                                             
                                             		; Setup background depth
   1011 FFFC0870 227C FFE0 0000              		move.l	#VDGREG,a1
   1012 FFFC0876 2C7C FFDC 0000              		move.l	#$FFDC0000,a6		; set I/O address
   1013 FFFC087C 207C FF80 0000              		movea.l	#$FF800000,a0		; address of z buffer ram
   1014 FFFC0882 243C 0000 1D4C              		move.l	#BMP_WIDTH*BMP_HEIGHT/16,d2
                                             ;		move.w	#1,$43E(a1)			; select z buffer
   1016 FFFC0888                             .0003:
                                             ;		clr.w	$0C04(a6)			; gen next number
                                             ;		move.l	$0C00(a6),d3		; get random value
                                             ;		move.l	d3,(a0)+			; move to z buffer
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 18
bootrom.asm
                                             ;		sub.l	#1,d2
                                             ;		bne.s	.0003
                                             ;		move.w	#0,$43E(a1)			; deselect z buffer
                                             		
                                             		; Setup sprite image
   1025 FFFC0888 41F9 FFFC 09B0              		lea		BallImage,a0
   1026 FFFC088E 721A                        		moveq	#26,d1					; set count number of long words to move
   1027 FFFC0890 227C FF8B 7D00              		move.l	#$FF8B7D00,a1
   1028 FFFC0896 45F9 0001 0500              		lea		ball_dx,a2
   1029 FFFC089C 47F9 0001 0600              		lea		ball_dy,a3
   1030 FFFC08A2                             .0001:
   1031 FFFC08A2 22D8                        		move.l	(a0)+,(a1)+
   1032 FFFC08A4 51C9 FFFC                   		dbra	d1,.0001
   1033 FFFC08A8 41F9 FFFC 0A28              		lea		XImage,a0
   1034 FFFC08AE 721A                        		moveq	#26,d1					; set count number of long words to move
   1035 FFFC08B0 227C FF8B 7C00              		move.l	#$FF8B7C00,a1
   1036 FFFC08B6                             .0012:
   1037 FFFC08B6 22D8                        		move.l	(a0)+,(a1)+
   1038 FFFC08B8 51C9 FFFC                   		dbra	d1,.0012
   1039 FFFC08BC 343C 0210                   		move.w	#$210,d2
   1040 FFFC08C0 207C FFE0 0000              		move.l	#VDGREG,a0
   1041 FFFC08C6 217C FFFF FFFF 0108         		move.l	#$FFFFFFFF,$108(a0)		; enable sprites
   1042 FFFC08CE 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
   1043 FFFC08D4                             .0002:
   1044 FFFC08D4 B47C 0300                   		cmp.w	#$300,d2
   1045 FFFC08D8 6408                        		bhs.s	.0014
   1046 FFFC08DA 21BC 0005 BE80 2000         		move.l	#$5BE80,(a0,d2.w)
   1047 FFFC08E2                             .0014:
   1048 FFFC08E2 31BC 0350 2008              		move.w	#$0350,8(a0,d2.w)	; set cursor size 16hx13v
   1049 FFFC08E8 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1050 FFFC08EC 262E 0C00                   		move.l	$0C00(a6),d3
   1051 FFFC08F0 0243 00FF                   		and.w	#$FF,d3
   1052 FFFC08F4 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
   1053 FFFC08F8 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1054 FFFC08FC 262E 0C00                   		move.l	$0C00(a6),d3
   1055 FFFC0900 0243 00FF                   		and.w	#$FF,d3
   1056 FFFC0904 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
   1057 FFFC0908 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1058 FFFC090C 262E 0C00                   		move.l	$0C00(a6),d3
   1059 FFFC0910 0243 0000                   		and.w	#$0,d3
   1060 FFFC0914 3183 200A                   		move.w	d3,10(a0,d2.w)		; set z pos
   1061 FFFC0918 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1062 FFFC091C 262E 0C00                   		move.l	$0C00(a6),d3
   1063 FFFC0920 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1064 FFFC0922 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1065 FFFC0924 3583 2000                   		move.w	d3,(a2,d2.w)		; set dx
   1066 FFFC0928 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1067 FFFC092C 262E 0C00                   		move.l	$0C00(a6),d3
   1068 FFFC0930 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1069 FFFC0932 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1070 FFFC0934 3783 2000                   		move.w	d3,(a3,d2.w)		; set dy
   1071 FFFC0938 0642 0010                   		add.w	#$10,d2
   1072 FFFC093C B47C 0300                   		cmp.w	#$300,d2
   1073 FFFC0940 6508                        		blo.s	.0011
   1074 FFFC0942 21BC 0005 BE00 2000         		move.l	#$5BE00,(a0,d2.w)
   1075 FFFC094A                             .0011:
   1076 FFFC094A B47C 0400                   		cmp.w	#$400,d2
   1077 FFFC094E 6684                        		bne.s	.0002
                                             ; Move balls around	
   1079 FFFC0950                             .0010:	
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 19
bootrom.asm
   1080 FFFC0950 343C 0210                   		move.w	#$210,d2
   1081 FFFC0954                             .0008:
   1082 FFFC0954 3632 2000                   		move.w	(a2,d2.w),d3
   1083 FFFC0958 D770 2004                   		add.w	d3,4(a0,d2.w)		; new hpos
   1084 FFFC095C 3633 2000                   		move.w	(a3,d2.w),d3
   1085 FFFC0960 D770 2006                   		add.w	d3,6(a0,d2.w)		; new vpos
   1086 FFFC0964 0C70 0190 2004              		cmp.w	#BMP_WIDTH,4(a0,d2.w)
   1087 FFFC096A 6504                        		blo.s	.0004
   1088 FFFC096C 4472 2000                   		neg.w	(a2,d2.w)
   1089 FFFC0970                             .0004:
   1090 FFFC0970 0C70 0000 2004              		cmp.w	#0,4(a0,d2.w)
   1091 FFFC0976 6404                        		bhs.s	.0005
   1092 FFFC0978 4472 2000                   		neg.w	(a2,d2.w)
   1093 FFFC097C                             .0005:
   1094 FFFC097C 0C70 012C 2006              		cmp.w	#BMP_HEIGHT,6(a0,d2.w)
   1095 FFFC0982 6504                        		blo.s	.0006
   1096 FFFC0984 4473 2000                   		neg.w	(a3,d2.w)
   1097 FFFC0988                             .0006:
   1098 FFFC0988 0C70 0000 2006              		cmp.w	#0,6(a0,d2.w)
   1099 FFFC098E 6404                        		bhs.s	.0007
   1100 FFFC0990 4473 2000                   		neg.w	(a3,d2.w)
   1101 FFFC0994                             .0007:
   1102 FFFC0994 0642 0010                   		add.w	#$10,d2
   1103 FFFC0998 B47C 0400                   		cmp.w	#$400,d2
   1104 FFFC099C 66B6                        		bne.s	.0008	
                                             		; delay a bit
   1106 FFFC099E 263C 0000 EA60              		move.l	#60000,d3
   1107 FFFC09A4                             .0009:
   1108 FFFC09A4 5383                        		sub.l	#1,d3
   1109 FFFC09A6 66FC                        		bne.s	.0009
   1110 FFFC09A8 60A6                        		bra.s	.0010
                                             
   1112 FFFC09AA 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6
   1113 FFFC09AE 4E75                        		rts
                                             		
                                             
                                             		align	4
   1117 FFFC09B0                             BallImage:
   1118 FFFC09B0 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1119 FFFC09B8 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
   1120 FFFC09C0 15555554 00000000           	dc.l	%00010101010101010101010101010100,%00000000000000000000000000000000
   1121 FFFC09C8 55000055 00000000           	dc.l	%01010101000000000000000001010101,%00000000000000000000000000000000
   1122 FFFC09D0 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1123 FFFC09D8 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1124 FFFC09E0 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1125 FFFC09E8 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1126 FFFC09F0 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1127 FFFC09F8 15000054 00000000           	dc.l	%00010101000000000000000001010100,%00000000000000000000000000000000
   1128 FFFC0A00 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
   1129 FFFC0A08 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1130 FFFC0A10 00555500 00000000           	dc.l	%00000000010101010101010100000000,%00000000000000000000000000000000
   1131 FFFC0A18 00000000 00000000           	dc.l	$00,$00
   1132 FFFC0A20 00000000 00000000           	dc.l	$00,$00
   1133 FFFC0A28                             XImage:
   1134 FFFC0A28 50000050 00000000           	dc.l	%01010000000000000000000001010000,%00000000000000000000000000000000
   1135 FFFC0A30 14000140 00000000           	dc.l	%00010100000000000000000101000000,%00000000000000000000000000000000
   1136 FFFC0A38 05000500 00000000           	dc.l	%00000101000000000000010100000000,%00000000000000000000000000000000
   1137 FFFC0A40 01401400 00000000           	dc.l	%00000001010000000001010000000000,%00000000000000000000000000000000
   1138 FFFC0A48 00505000 00000000           	dc.l	%00000000010100000101000000000000,%00000000000000000000000000000000
   1139 FFFC0A50 00154000 00000000           	dc.l	%00000000000101010100000000000000,%00000000000000000000000000000000
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 20
bootrom.asm
   1140 FFFC0A58 00050000 00000000           	dc.l	%00000000000001010000000000000000,%00000000000000000000000000000000
   1141 FFFC0A60 00154000 00000000           	dc.l	%00000000000101010100000000000000,%00000000000000000000000000000000
   1142 FFFC0A68 00505000 00000000           	dc.l	%00000000010100000101000000000000,%00000000000000000000000000000000
   1143 FFFC0A70 01401400 00000000           	dc.l	%00000001010000000001010000000000,%00000000000000000000000000000000
   1144 FFFC0A78 05000500 00000000           	dc.l	%00000101000000000000010100000000,%00000000000000000000000000000000
   1145 FFFC0A80 14000140 00000000           	dc.l	%00010100000000000000000101000000,%00000000000000000000000000000000
   1146 FFFC0A88 50000050 00000000           	dc.l	%01010000000000000000000001010000,%00000000000000000000000000000000
   1147 FFFC0A90 00000000 00000000           	dc.l	$00,$00
   1148 FFFC0A98 00000000 00000000           	dc.l	$00,$00
                                             	
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	a0			pointer to string
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Returns:
                                             ;	a0			points to byte after NULL character
                                             ;	d1.w		updated x position
                                             ; Trashes:
                                             ;	d0,a6
                                             ;------------------------------------------------------------------------------
                                             
   1162 FFFC0AA0                             DispStringAt:
   1163 FFFC0AA0                             .0003:
   1164 FFFC0AA0 7000                        		moveq	#0,d0					; zero out high order bits
   1165 FFFC0AA2 1018                        		move.b	(a0)+,d0				; get character from string into d0
   1166 FFFC0AA4 6708                        		beq.s	.0002					; end of string ?
   1167 FFFC0AA6 6100 FB60                   		bsr		DispCharAt
   1168 FFFC0AAA 5041                        		add.w	#8,d1					; increment xpos
   1169 FFFC0AAC 60F2                        		bra.s	.0003
   1170 FFFC0AAE                             .0002:
   1171 FFFC0AAE 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display nybble in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1177 FFFC0AB0                             DisplayNybble:
   1178 FFFC0AB0 3F01                        		move.w	d1,-(a7)
   1179 FFFC0AB2 0201 000F                   		andi.b	#0xF,d1
   1180 FFFC0AB6 0601 0030                   		addi.b	#'0',d1
   1181 FFFC0ABA 0C01 0039                   		cmpi.b	#'9',d1
   1182 FFFC0ABE 6302                        		bls.s	dispnyb1
   1183 FFFC0AC0 5E01                        		addi.b	#7,d1
   1184 FFFC0AC2                             dispnyb1:
   1185 FFFC0AC2 6100 F794                   		bsr		DisplayChar
   1186 FFFC0AC6 321F                        		move.w	(a7)+,d1
   1187 FFFC0AC8 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the byte in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1193 FFFC0ACA                             DisplayByte:
   1194 FFFC0ACA 3F01                        		move.w	d1,-(a7)
   1195 FFFC0ACC E819                        		ror.b	#4,d1
   1196 FFFC0ACE 6100 FFE0                   		bsr		DisplayNybble
   1197 FFFC0AD2 E919                        		rol.b	#4,d1
   1198 FFFC0AD4 6100 FFDA                   		bsr		DisplayNybble
   1199 FFFC0AD8 321F                        		move.w	(a7)+,d1
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 21
bootrom.asm
   1200 FFFC0ADA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the 32 bit word in D1.L
                                             ;------------------------------------------------------------------------------
                                             ;
   1206 FFFC0ADC                             DisplayWord:
   1207 FFFC0ADC E199                        		rol.l	#8,d1
   1208 FFFC0ADE 6100 FFEA                   		bsr		DisplayByte
   1209 FFFC0AE2 E199                        		rol.l	#8,d1
   1210 FFFC0AE4 6100 FFE4                   		bsr		DisplayByte
   1211 FFFC0AE8 E199                        		rol.l	#8,d1
   1212 FFFC0AEA 6100 FFDE                   		bsr		DisplayByte
   1213 FFFC0AEE E199                        		rol.l	#8,d1
   1214 FFFC0AF0 6100 FFD8                   		bsr		DisplayByte
   1215 FFFC0AF4 4E75                        		rts
                                             
   1217 FFFC0AF6                             DisplayMem:
   1218 FFFC0AF6 123C 003A                   		move.b	#':',d1
   1219 FFFC0AFA 4EB9 FFFC 0258              		jsr		DisplayChar
   1220 FFFC0B00 2208                        		move.l	a0,d1
   1221 FFFC0B02 4EB9 FFFC 0ADC              		jsr		DisplayWord
   1222 FFFC0B08 7407                        		moveq	#7,d2
   1223 FFFC0B0A                             dspmem1:
   1224 FFFC0B0A 123C 0020                   		move.b	#' ',d1
   1225 FFFC0B0E 4EB9 FFFC 0258              		jsr		DisplayChar
   1226 FFFC0B14 1218                        		move.b	(a0)+,d1
   1227 FFFC0B16 4EB9 FFFC 0ACA              		jsr		DisplayByte
   1228 FFFC0B1C 51CA FFEC                   		dbra	d2,dspmem1
   1229 FFFC0B20 4EF9 FFFC 020E              		jmp		CRLF
                                             
                                             ;==============================================================================
                                             ; Keyboard stuff
                                             ;
                                             ; KeyState2_
                                             ; 876543210
                                             ; ||||||||+ = shift
                                             ; |||||||+- = alt
                                             ; ||||||+-- = control
                                             ; |||||+--- = numlock
                                             ; ||||+---- = capslock
                                             ; |||+----- = scrolllock
                                             ; ||+------ =
                                             ; |+------- = 
                                             ; +-------- = extended
                                             ;
                                             ;==============================================================================
                                             
   1248 FFFC0B26                             _KeybdGetStatus:
   1249 FFFC0B26 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1250 FFFC0B2C 4E75                        		rts
                                             
                                             ; Get the scancode from the keyboard port
                                             ;
   1254 FFFC0B2E                             _KeybdGetScancode:
   1255 FFFC0B2E 7200                        		moveq	#0,d1
   1256 FFFC0B30 1239 FFDC 0000              		move.b	KEYBD,d1				; get the scan code
   1257 FFFC0B36 13FC 0000 FFDC 0001         		move.b	#0,KEYBD+1				; clear receive register
   1258 FFFC0B3E 4E75                        		rts
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 22
bootrom.asm
                                             ; Recieve a byte from the keyboard, used after a command is sent to the
                                             ; keyboard in order to wait for a response.
                                             ;
   1263 FFFC0B40                             KeybdRecvByte:
   1264 FFFC0B40 2F03                        		move.l	d3,-(a7)
   1265 FFFC0B42 363C 0064                   		move.w	#100,d3		; wait up to 1s
   1266 FFFC0B46                             .0003:
   1267 FFFC0B46 6100 FFDE                   		bsr		_KeybdGetStatus	; wait for response from keyboard
   1268 FFFC0B4A 4A01                        		tst.b	d1
   1269 FFFC0B4C 6B0E                        		bmi		.0004		; is input buffer full ? yes, branch
   1270 FFFC0B4E 6100 02C4                   		bsr		Wait10ms		; wait a bit
   1271 FFFC0B52 51CB FFF2                   		dbra	d3,.0003	; go back and try again
   1272 FFFC0B56 261F                        		move.l	(a7)+,d3
   1273 FFFC0B58 72FF                        		moveq	#-1,d1			; return -1
   1274 FFFC0B5A 4E75                        		rts
   1275 FFFC0B5C                             .0004:
   1276 FFFC0B5C 6100 FFD0                   		bsr		_KeybdGetScancode
   1277 FFFC0B60 261F                        		move.l	(a7)+,d3
   1278 FFFC0B62 4E75                        		rts
                                             
                                             
                                             ; Wait until the keyboard transmit is complete
                                             ; Returns .CF = 1 if successful, .CF=0 timeout
                                             ;
   1284 FFFC0B64                             KeybdWaitTx:
   1285 FFFC0B64 48E7 3000                   		movem.l	d2/d3,-(a7)
   1286 FFFC0B68 7664                        		moveq	#100,d3		; wait a max of 1s
   1287 FFFC0B6A                             .0001:
   1288 FFFC0B6A 6100 FFBA                   		bsr		_KeybdGetStatus
   1289 FFFC0B6E 0801 0006                   		btst	#6,d1		; check for transmit complete bit
   1290 FFFC0B72 6610                        		bne	    .0002		; branch if bit set
   1291 FFFC0B74 6100 029E                   		bsr		Wait10ms		; delay a little bit
   1292 FFFC0B78 51CB FFF0                   		dbra	d3,.0001	; go back and try again
   1293 FFFC0B7C 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1294 FFFC0B80 72FF                        		moveq	#-1,d1		; return -1
   1295 FFFC0B82 4E75                        		rts
   1296 FFFC0B84                             .0002:
   1297 FFFC0B84 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1298 FFFC0B88 7200                        		moveq	#0,d1		; return 0
   1299 FFFC0B8A 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; get key pending status into d1.b
                                             ;------------------------------------------------------------------------------
                                             ;
   1306 FFFC0B8C                             CheckForKey:
   1307 FFFC0B8C 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1308 FFFC0B92 6A06                        		bpl.s	cfk1
   1309 FFFC0B94 123C 0001                   		move.b	#1,d1
   1310 FFFC0B98 4E75                        		rts
   1311 FFFC0B9A                             cfk1:
   1312 FFFC0B9A 4201                        		clr.b	d1
   1313 FFFC0B9C 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1318 FFFC0B9E                             GetKey:
   1319 FFFC0B9E 6100 0022                   		bsr		KeybdGetCharWait
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 23
bootrom.asm
   1320 FFFC0BA2 0C39 0000 0001 0424         		cmpi.b	#0,KeybdEcho	; is keyboard echo on ?
   1321 FFFC0BAA 670C                        		beq.s	gk1
   1322 FFFC0BAC 0C01 000D                   		cmpi.b	#'\r',d1		; convert CR keystroke into CRLF
   1323 FFFC0BB0 6700 F65C                   		beq		CRLF
   1324 FFFC0BB4 6100 F6A2                   		bsr		DisplayChar
   1325 FFFC0BB8                             gk1:
   1326 FFFC0BB8 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1332 FFFC0BBA                             KeybdGetCharNoWait:
   1333 FFFC0BBA 4239 0001 0425              		clr.b	KeybdWaitFlag
   1334 FFFC0BC0 6008                        		bra		KeybdGetChar
                                             
   1336 FFFC0BC2                             KeybdGetCharWait:
   1337 FFFC0BC2 13FC FFFF 0001 0425         		move.b	#-1,KeybdWaitFlag
                                             
   1339 FFFC0BCA                             KeybdGetChar:
   1340 FFFC0BCA 48E7 3080                   		movem.l	d2/d3/a0,-(a7)
   1341 FFFC0BCE                             .0003:
   1342 FFFC0BCE 6100 FF56                   		bsr		_KeybdGetStatus			; check keyboard status for key available
   1343 FFFC0BD2 6B10                        		bmi		.0006					; yes, go process
   1344 FFFC0BD4 4A39 0001 0425              		tst.b	KeybdWaitFlag			; are we willing to wait for a key ?
   1345 FFFC0BDA 6BF2                        		bmi		.0003					; yes, branch back
   1346 FFFC0BDC 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1347 FFFC0BE0 72FF                        		moveq	#-1,d1					; flag no char available
   1348 FFFC0BE2 4E75                        		rts
   1349 FFFC0BE4                             .0006:
   1350 FFFC0BE4 6100 FF48                   		bsr		_KeybdGetScancode
   1351 FFFC0BE8                             .0001:
   1352 FFFC0BE8 33FC 0001 FFDC 0600         		move.w	#1,leds
   1353 FFFC0BF0 B23C 00F0                   		cmp.b	#SC_KEYUP,d1
   1354 FFFC0BF4 6700 00CA                   		beq		.doKeyup
   1355 FFFC0BF8 B23C 00E0                   		cmp.b	#SC_EXTEND,d1
   1356 FFFC0BFC 6700 00CE                   		beq		.doExtend
   1357 FFFC0C00 B23C 0014                   		cmp.b	#SC_CTRL,d1
   1358 FFFC0C04 6700 00D2                   		beq		.doCtrl
   1359 FFFC0C08 B23C 0012                   		cmp.b	#SC_LSHIFT,d1
   1360 FFFC0C0C 6700 0134                   		beq		.doShift
   1361 FFFC0C10 B23C 0059                   		cmp.b	#SC_RSHIFT,d1
   1362 FFFC0C14 6700 012C                   		beq		.doShift
   1363 FFFC0C18 B23C 0077                   		cmp.b	#SC_NUMLOCK,d1
   1364 FFFC0C1C 6700 014C                   		beq		.doNumLock
   1365 FFFC0C20 B23C 0058                   		cmp.b	#SC_CAPSLOCK,d1
   1366 FFFC0C24 6700 0154                   		beq		.doCapsLock
   1367 FFFC0C28 B23C 007E                   		cmp.b	#SC_SCROLLLOCK,d1
   1368 FFFC0C2C 6700 015C                   		beq		.doScrollLock
   1369 FFFC0C30 B23C 0011                   		cmp.b   #SC_ALT,d1
   1370 FFFC0C34 6700 00CA                   		beq     .doAlt
   1371 FFFC0C38 1439 0001 0426              		move.b	_KeyState1,d2			; check key up/down
   1372 FFFC0C3E 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup status
   1373 FFFC0C46 4A02                        		tst.b	d2
   1374 FFFC0C48 6684                        		bne	    .0003					; ignore key up
   1375 FFFC0C4A B23C 000D                   		cmp.b   #SC_TAB,d1
   1376 FFFC0C4E 6700 00D8                   		beq     .doTab
   1377 FFFC0C52                             .0013:
   1378 FFFC0C52 1439 0001 0427              		move.b	_KeyState2,d2
   1379 FFFC0C58 6A1E                        		bpl		.0010					; is it extended code ?
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 24
bootrom.asm
   1380 FFFC0C5A 0202 007F                   		and.b	#$7F,d2					; clear extended bit
   1381 FFFC0C5E 13C2 0001 0427              		move.b	d2,_KeyState2
   1382 FFFC0C64 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup
   1383 FFFC0C6C 41F9 FFFC 10A4              		lea		_keybdExtendedCodes,a0
   1384 FFFC0C72 1230 1000                   		move.b	(a0,d1.w),d1
   1385 FFFC0C76 603A                        		bra		.0008
   1386 FFFC0C78                             .0010:
   1387 FFFC0C78 0802 0002                   		btst	#2,d2					; is it CTRL code ?
   1388 FFFC0C7C 6710                        		beq		.0009
   1389 FFFC0C7E 0241 007F                   		and.w	#$7F,d1
   1390 FFFC0C82 41F9 FFFC 1024              		lea		_keybdControlCodes,a0
   1391 FFFC0C88 1230 1000                   		move.b	(a0,d1.w),d1
   1392 FFFC0C8C 6024                        		bra		.0008
   1393 FFFC0C8E                             .0009:
   1394 FFFC0C8E 0802 0000                   		btst	#0,d2					; is it shift down ?
   1395 FFFC0C92 670C                        		beq  	.0007
   1396 FFFC0C94 41F9 FFFC 0F24              		lea		_shiftedScanCodes,a0
   1397 FFFC0C9A 1230 1000                   		move.b	(a0,d1.w),d1
   1398 FFFC0C9E 6012                        		bra		.0008
   1399 FFFC0CA0                             .0007:
   1400 FFFC0CA0 41F9 FFFC 0E24              		lea		_unshiftedScanCodes,a0
   1401 FFFC0CA6 1230 1000                   		move.b	(a0,d1.w),d1
   1402 FFFC0CAA 33FC 0202 FFDC 0600         		move.w	#$0202,leds
   1403 FFFC0CB2                             .0008:
   1404 FFFC0CB2 33FC 0303 FFDC 0600         		move.w	#$0303,leds
   1405 FFFC0CBA 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1406 FFFC0CBE 4E75                        		rts
   1407 FFFC0CC0                             .doKeyup:
   1408 FFFC0CC0 13FC FFFF 0001 0426         		move.b	#-1,_KeyState1
   1409 FFFC0CC8 6000 FF04                   		bra		.0003
   1410 FFFC0CCC                             .doExtend:
   1411 FFFC0CCC 0039 0080 0001 0427         		or.b	#$80,_KeyState2
   1412 FFFC0CD4 6000 FEF8                   		bra		.0003
   1413 FFFC0CD8                             .doCtrl:
   1414 FFFC0CD8 1239 0001 0426              		move.b	_KeyState1,d1
   1415 FFFC0CDE 4239 0001 0426              		clr.b	_KeyState1
   1416 FFFC0CE4 4A01                        		tst.b	d1
   1417 FFFC0CE6 6A0C                        		bpl.s	.0004
   1418 FFFC0CE8 08B9 0002 0001 0427         		bclr	#2,_KeyState2
   1419 FFFC0CF0 6000 FEDC                   		bra		.0003
   1420 FFFC0CF4                             .0004:
   1421 FFFC0CF4 08F9 0002 0001 0427         		bset	#2,_KeyState2
   1422 FFFC0CFC 6000 FED0                   		bra		.0003
   1423 FFFC0D00                             .doAlt:
   1424 FFFC0D00 1239 0001 0426              		move.b	_KeyState1,d1
   1425 FFFC0D06 4239 0001 0426              		clr.b	_KeyState1
   1426 FFFC0D0C 4A01                        		tst.b	d1
   1427 FFFC0D0E 6A0C                        		bpl		.0011
   1428 FFFC0D10 08B9 0001 0001 0427         		bclr	#1,_KeyState2
   1429 FFFC0D18 6000 FEB4                   		bra		.0003
   1430 FFFC0D1C                             .0011:
   1431 FFFC0D1C 08F9 0001 0001 0427         		bset	#1,_KeyState2
   1432 FFFC0D24 6000 FEA8                   		bra		.0003
   1433 FFFC0D28                             .doTab:
   1434 FFFC0D28 2F01                        		move.l	d1,-(a7)
   1435 FFFC0D2A 1239 0001 0427              	    move.b  _KeyState2,d1
   1436 FFFC0D30 0801 0000                   	    btst	#0,d1                 ; is ALT down ?
   1437 FFFC0D34 6706                        	    beq     .0012
                                             ;    	inc     _iof_switch
   1439 FFFC0D36 221F                        	    move.l	(a7)+,d1
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 25
bootrom.asm
   1440 FFFC0D38 6000 FE94                   	    bra     .0003
   1441 FFFC0D3C                             .0012:
   1442 FFFC0D3C 221F                        	    move.l	(a7)+,d1
   1443 FFFC0D3E 6000 FF12                   	    bra     .0013
   1444 FFFC0D42                             .doShift:
   1445 FFFC0D42 1239 0001 0426              		move.b	_KeyState1,d1
   1446 FFFC0D48 4239 0001 0426              		clr.b	_KeyState1
   1447 FFFC0D4E 4A01                        		tst.b	d1
   1448 FFFC0D50 6A0C                        		bpl.s	.0005
   1449 FFFC0D52 08B9 0000 0001 0427         		bclr	#0,_KeyState2
   1450 FFFC0D5A 6000 FE72                   		bra		.0003
   1451 FFFC0D5E                             .0005:
   1452 FFFC0D5E 08F9 0000 0001 0427         		bset	#0,_KeyState2
   1453 FFFC0D66 6000 FE66                   		bra		.0003
   1454 FFFC0D6A                             .doNumLock:
   1455 FFFC0D6A 0879 0004 0001 0427         		bchg	#4,_KeyState2
   1456 FFFC0D72 6100 0026                   		bsr		KeybdSetLEDStatus
   1457 FFFC0D76 6000 FE56                   		bra		.0003
   1458 FFFC0D7A                             .doCapsLock:
   1459 FFFC0D7A 0879 0005 0001 0427         		bchg	#5,_KeyState2
   1460 FFFC0D82 6100 0016                   		bsr		KeybdSetLEDStatus
   1461 FFFC0D86 6000 FE46                   		bra		.0003
   1462 FFFC0D8A                             .doScrollLock:
   1463 FFFC0D8A 0879 0006 0001 0427         		bchg	#6,_KeyState2
   1464 FFFC0D92 6100 0006                   		bsr		KeybdSetLEDStatus
   1465 FFFC0D96 6000 FE36                   		bra		.0003
                                             
   1467 FFFC0D9A                             KeybdSetLEDStatus:
   1468 FFFC0D9A 48E7 3000                   		movem.l	d2/d3,-(a7)
   1469 FFFC0D9E 4239 0001 0428              		clr.b	KeybdLEDs
   1470 FFFC0DA4 0839 0004 0001 0427         		btst	#4,_KeyState2
   1471 FFFC0DAC 6708                        		beq.s	.0002
   1472 FFFC0DAE 13FC 0002 0001 0428         		move.b	#2,KeybdLEDs
   1473 FFFC0DB6                             .0002:
   1474 FFFC0DB6 0839 0005 0001 0427         		btst	#5,_KeyState2
   1475 FFFC0DBE 6708                        		beq.s	.0003
   1476 FFFC0DC0 08F9 0002 0001 0428         		bset	#2,KeybdLEDs
   1477 FFFC0DC8                             .0003:
   1478 FFFC0DC8 0839 0006 0001 0427         		btst	#6,_KeyState2
   1479 FFFC0DD0 6708                        		beq.s	.0004
   1480 FFFC0DD2 08F9 0000 0001 0428         		bset	#0,KeybdLEDs
   1481 FFFC0DDA                             .0004:
   1482 FFFC0DDA 123C 00ED                   		move.b	#$ED,d1
   1483 FFFC0DDE 6100 002C                   		bsr		KeybdSendByte
   1484 FFFC0DE2 6100 FD80                   		bsr		KeybdWaitTx
   1485 FFFC0DE6 6100 FD58                   		bsr		KeybdRecvByte
   1486 FFFC0DEA 4A01                        		tst.b	d1
   1487 FFFC0DEC 6B18                        		bmi		.0001
   1488 FFFC0DEE B2BC 0000 00FA              		cmp		#$FA,d1
   1489 FFFC0DF4 1239 0001 0428              		move.b	KeybdLEDs,d1
   1490 FFFC0DFA 6100 0010                   		bsr		KeybdSendByte
   1491 FFFC0DFE 6100 FD64                   		bsr		KeybdWaitTx
   1492 FFFC0E02 6100 FD3C                   		bsr		KeybdRecvByte
   1493 FFFC0E06                             .0001:
   1494 FFFC0E06 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1495 FFFC0E0A 4E75                        		rts
                                             
   1497 FFFC0E0C                             KeybdSendByte:
   1498 FFFC0E0C 13C1 FFDC 0000              		move.b	d1,KEYBD
   1499 FFFC0E12 4E75                        		rts
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 26
bootrom.asm
                                             	
   1501 FFFC0E14                             Wait10ms:
   1502 FFFC0E14 2F03                        		move.l	d3,-(a7)
   1503 FFFC0E16 263C 0000 03E8              		move.l	#1000,d3
   1504 FFFC0E1C                             .0001:
   1505 FFFC0E1C 51CB FFFE                   		dbra	d3,.0001
   1506 FFFC0E20 261F                        		move.l	(a7)+,d3
   1507 FFFC0E22 4E75                        		rts
                                             
                                             
                                             ;--------------------------------------------------------------------------
                                             ; PS2 scan codes to ascii conversion tables.
                                             ;--------------------------------------------------------------------------
                                             ;
   1514 FFFC0E24                             _unshiftedScanCodes:
   1515 FFFC0E24 2E A9 2E A5 A3 A1 A2 AC     	dc.b	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
                                             
   1517 FFFC0E2C 2E AA A8 A6 A4 09 60 2E     	dc.b	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
                                             
   1519 FFFC0E34 2E 2E 2E 2E 2E 71 31 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
                                             
   1521 FFFC0E3C 2E 2E 7A 73 61 77 32 2E     	dc.b	$2e,$2e,$7a,$73,$61,$77,$32,$2e
                                             
   1523 FFFC0E44 2E 63 78 64 65 34 33 2E     	dc.b	$2e,$63,$78,$64,$65,$34,$33,$2e
                                             
   1525 FFFC0E4C 2E 20 76 66 74 72 35 2E     	dc.b	$2e,$20,$76,$66,$74,$72,$35,$2e
                                             
   1527 FFFC0E54 2E 6E 62 68 67 79 36 2E     	dc.b	$2e,$6e,$62,$68,$67,$79,$36,$2e
                                             
   1529 FFFC0E5C 2E 2E 6D 6A 75 37 38 2E     	dc.b	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
                                             
   1531 FFFC0E64 2E 2C 6B 69 6F 30 39 2E     	dc.b	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
                                             
   1533 FFFC0E6C 2E 2E 2F 6C 3B 70 2D 2E     	dc.b	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
                                             
   1535 FFFC0E74 2E 2E 27 2E 5B 3D 2E 2E     	dc.b	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
                                             
   1537 FFFC0E7C AD 2E 0D 5D 2E 5C 2E 2E     	dc.b	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
                                             
   1539 FFFC0E84 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1541 FFFC0E8C 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1543 FFFC0E94 98 7F 92 2E 91 90 1B AF     	dc.b	$98,$7f,$92,$2e,$91,$90,$1b,$af
                                             
   1545 FFFC0E9C AB 2E 97 2E 2E 96 AE 2E     	dc.b	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
                                             
                                             
   1548 FFFC0EA4 2E 2E 2E A7 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
                                             
   1550 FFFC0EAC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1552 FFFC0EB4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1554 FFFC0EBC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1556 FFFC0EC4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1558 FFFC0ECC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 27
bootrom.asm
   1560 FFFC0ED4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1562 FFFC0EDC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1564 FFFC0EE4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1566 FFFC0EEC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1568 FFFC0EF4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1570 FFFC0EFC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1572 FFFC0F04 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1574 FFFC0F0C 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1576 FFFC0F14 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1578 FFFC0F1C 2E 2E FA 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1581 FFFC0F24                             _shiftedScanCodes:
   1582 FFFC0F24 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1584 FFFC0F2C 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1586 FFFC0F34 2E 2E 2E 2E 2E 51 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
                                             
   1588 FFFC0F3C 2E 2E 5A 53 41 57 40 2E     	dc.b	$2e,$2e,$5a,$53,$41,$57,$40,$2e
                                             
   1590 FFFC0F44 2E 43 58 44 45 24 23 2E     	dc.b	$2e,$43,$58,$44,$45,$24,$23,$2e
                                             
   1592 FFFC0F4C 2E 20 56 46 54 52 25 2E     	dc.b	$2e,$20,$56,$46,$54,$52,$25,$2e
                                             
   1594 FFFC0F54 2E 4E 42 48 47 59 5E 2E     	dc.b	$2e,$4e,$42,$48,$47,$59,$5e,$2e
                                             
   1596 FFFC0F5C 2E 2E 4D 4A 55 26 2A 2E     	dc.b	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
                                             
   1598 FFFC0F64 2E 3C 4B 49 4F 29 28 2E     	dc.b	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
                                             
   1600 FFFC0F6C 2E 3E 3F 4C 3A 50 5F 2E     	dc.b	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
                                             
   1602 FFFC0F74 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1604 FFFC0F7C 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1606 FFFC0F84 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1608 FFFC0F8C 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1610 FFFC0F94 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1612 FFFC0F9C 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1615 FFFC0FA4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1617 FFFC0FAC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1619 FFFC0FB4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 28
bootrom.asm
                                             
   1621 FFFC0FBC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1623 FFFC0FC4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1625 FFFC0FCC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1627 FFFC0FD4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1629 FFFC0FDC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1631 FFFC0FE4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1633 FFFC0FEC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1635 FFFC0FF4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1637 FFFC0FFC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1639 FFFC1004 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1641 FFFC100C 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1643 FFFC1014 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1645 FFFC101C 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
                                             ; control
   1649 FFFC1024                             _keybdControlCodes:
   1650 FFFC1024 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1652 FFFC102C 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1654 FFFC1034 2E 2E 2E 2E 2E 11 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
                                             
   1656 FFFC103C 2E 2E 1A 13 01 17 40 2E     	dc.b	$2e,$2e,$1a,$13,$01,$17,$40,$2e
                                             
   1658 FFFC1044 2E 03 18 04 05 24 23 2E     	dc.b	$2e,$03,$18,$04,$05,$24,$23,$2e
                                             
   1660 FFFC104C 2E 20 16 06 14 12 25 2E     	dc.b	$2e,$20,$16,$06,$14,$12,$25,$2e
                                             
   1662 FFFC1054 2E 0E 02 08 07 19 5E 2E     	dc.b	$2e,$0e,$02,$08,$07,$19,$5e,$2e
                                             
   1664 FFFC105C 2E 2E 0D 0A 15 26 2A 2E     	dc.b	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
                                             
   1666 FFFC1064 2E 3C 0B 09 0F 29 28 2E     	dc.b	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
                                             
   1668 FFFC106C 2E 3E 3F 0C 3A 10 5F 2E     	dc.b	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
                                             
   1670 FFFC1074 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1672 FFFC107C 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1674 FFFC1084 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1676 FFFC108C 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1678 FFFC1094 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 29
bootrom.asm
   1680 FFFC109C 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1683 FFFC10A4                             _keybdExtendedCodes:
   1684 FFFC10A4 2E 2E 2E 2E A3 A1 A2 2E     	dc.b	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
                                             
   1686 FFFC10AC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1688 FFFC10B4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1690 FFFC10BC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1692 FFFC10C4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1694 FFFC10CC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1696 FFFC10D4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1698 FFFC10DC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1700 FFFC10E4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1702 FFFC10EC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1704 FFFC10F4 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1706 FFFC10FC 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1708 FFFC1104 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1710 FFFC110C 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1712 FFFC1114 98 99 92 2E 91 90 2E 2E     	dc.b	$98,$99,$92,$2e,$91,$90,$2e,$2e
                                             
   1714 FFFC111C 2E 2E 97 2E 2E 96 2E 2E     	dc.b	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
                                             
                                             
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             ; Monitor
                                             ;==============================================================================
                                             ;==============================================================================
                                             ;
   1724 FFFC1124                             StartMon:
   1725 FFFC1124                             Monitor:
                                             ;	lea		STACK,a7		; reset the stack pointer
   1727 FFFC1124 4239 0001 0424              		clr.b	KeybdEcho		; turn off keyboard echo
   1728 FFFC112A                             PromptLn:
   1729 FFFC112A 6100 F0E2                   		bsr		CRLF
   1730 FFFC112E 123C 0024                   		move.b	#'$',d1
   1731 FFFC1132 6100 F124                   		bsr		DisplayChar
                                             
                                             ; Get characters until a CR is keyed
                                             ;
   1735 FFFC1136                             Prompt3:
   1736 FFFC1136 6100 FA66                   		bsr		GetKey
   1737 FFFC113A 0C01 000D                   		cmpi.b	#CR,d1
   1738 FFFC113E 6706                        		beq.s	Prompt1
   1739 FFFC1140 6100 F116                   		bsr		DisplayChar
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 30
bootrom.asm
   1740 FFFC1144 60F0                        		bra.s	Prompt3
                                             
                                             ; Process the screen line that the CR was keyed on
                                             ;
   1744 FFFC1146                             Prompt1:
   1745 FFFC1146 4239 0001 0419              		clr.b	CursorCol		; go back to the start of the line
   1746 FFFC114C 6100 F0DA                   		bsr		CalcScreenLoc	; a0 = screen memory location
   1747 FFFC1150 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1749 FFFC1152 0C01 0024                   		cmpi.b	#'$',d1			; skip over '$' prompt character
   1750 FFFC1156 6602                        		bne.s	Prompt2
   1751 FFFC1158 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
                                             	
                                             ; Dispatch based on command character
                                             ;
   1756 FFFC115A                             Prompt2:
   1757 FFFC115A 0C01 006F                   		cmpi.b	#'o',d1
   1758 FFFC115E 6700 0D96                   		beq		gfx_demo
   1759 FFFC1162 0C01 0061                   		cmpi.b	#'a',d1
   1760 FFFC1166 6700 08E4                   		beq		AudioInputTest
   1761 FFFC116A 0C01 0062                   		cmpi.b	#'b',d1
   1762 FFFC116E 6700 F6FC                   		beq		BouncingBalls
   1763 FFFC1172 0C01 0067                   		cmpi.b	#'g',d1
   1764 FFFC1176 6700 0684                   		beq		GraphicsDemo
   1765 FFFC117A 0C01 003A                   		cmpi.b	#':',d1			; $: - edit memory
   1766 FFFC117E 6700 015C                   		beq		EditMem
   1767 FFFC1182 0C01 0044                   		cmpi.b	#'D',d1			; $D - dump memory
   1768 FFFC1186 6700 01C2                   		beq		DumpMem
   1769 FFFC118A 0C01 0046                   		cmpi.b	#'F',d1
   1770 FFFC118E 6700 00F6                   		beq		FillMem
   1771 FFFC1192 0C01 0042                   		cmpi.b	#'B',d1			; $B - start tiny basic
   1772 FFFC1196 6606                        		bne.s	.0001
   1773 FFFC1198 4EF9 FFFC C000              		jmp		$FFFCC000
   1774 FFFC119E                             .0001:
   1775 FFFC119E 0C01 004A                   		cmpi.b	#'J',d1			; $J - execute code
   1776 FFFC11A2 6700 0196                   		beq		ExecuteCode
   1777 FFFC11A6 0C01 004C                   		cmpi.b	#'L',d1			; $L - load S19 file
   1778 FFFC11AA 6700 0368                   		beq		LoadS19
   1779 FFFC11AE 0C01 003F                   		cmpi.b	#'?',d1			; $? - display help
   1780 FFFC11B2 6726                        		beq		DisplayHelp
   1781 FFFC11B4 0C01 0043                   		cmpi.b	#'C',d1			; $C - clear screen
   1782 FFFC11B8 6704                        		beq		TestCLS
   1783 FFFC11BA 6000 FF68                   		bra		Monitor
                                             
   1785 FFFC11BE                             TestCLS:
   1786 FFFC11BE 1218                        		move.b	(a0)+,d1
   1787 FFFC11C0 0C01 004C                   		cmpi.b	#'L',d1
   1788 FFFC11C4 6600 FF5E                   		bne		Monitor
   1789 FFFC11C8 1218                        		move.b	(a0)+,d1
   1790 FFFC11CA 0C01 0053                   		cmpi.b	#'S',d1
   1791 FFFC11CE 6600 FF54                   		bne		Monitor
   1792 FFFC11D2 6100 0216                   		bsr		ClearScreen
   1793 FFFC11D6 6000 FF4C                   		bra		Monitor
                                             	
   1795 FFFC11DA                             DisplayHelp:
   1796 FFFC11DA 43F9 FFFC 11EA              		lea		HelpMsg,a1
   1797 FFFC11E0 4EB9 FFFC 03E8              		jsr		DisplayString
   1798 FFFC11E6 6000 FF3C                   		bra		Monitor
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 31
bootrom.asm
   1800 FFFC11EA                             HelpMsg:
   1801 FFFC11EA 3F 20 3D 20 44 69 73 70     		dc.b	"? = Display help",CR,LF
   1802 FFFC11F2 6C 61 79 20 68 65 6C 70     
   1803 FFFC11FA 0D 0A                       
   1804 FFFC11FC 43 4C 53 20 3D 20 63 6C     		dc.b	"CLS = clear screen",CR,LF
   1805 FFFC1204 65 61 72 20 73 63 72 65     
   1806 FFFC120C 65 6E 0D 0A                 
   1807 FFFC1210 3A 20 3D 20 45 64 69 74     		dc.b	": = Edit memory bytes",CR,LF
   1808 FFFC1218 20 6D 65 6D 6F 72 79 20     
   1809 FFFC1220 62 79 74 65 73 0D 0A        
   1810 FFFC1227 46 20 3D 20 46 69 6C 6C     		dc.b	"F = Fill memory",CR,LF
   1811 FFFC122F 20 6D 65 6D 6F 72 79 0D     
   1812 FFFC1237 0A                          
   1813 FFFC1238 4C 20 3D 20 4C 6F 61 64     		dc.b	"L = Load S19 file",CR,LF
   1814 FFFC1240 20 53 31 39 20 66 69 6C     
   1815 FFFC1248 65 0D 0A                    
   1816 FFFC124B 44 20 3D 20 44 75 6D 70     		dc.b	"D = Dump memory",CR,LF
   1817 FFFC1253 20 6D 65 6D 6F 72 79 0D     
   1818 FFFC125B 0A                          
   1819 FFFC125C 42 20 3D 20 73 74 61 72     		dc.b	"B = start tiny basic",CR,LF
   1820 FFFC1264 74 20 74 69 6E 79 20 62     
   1821 FFFC126C 61 73 69 63 0D 0A           
   1822 FFFC1272 4A 20 3D 20 4A 75 6D 70     		dc.b	"J = Jump to code",CR,LF,0
   1823 FFFC127A 20 74 6F 20 63 6F 64 65     
   1824 FFFC1282 0D 0A 00                    
   1825 FFFC1285 FF                         		even
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Fill memory
                                             ; FB = fill bytes		FB 00000010 100 FF	; fill starting at 10 for 256 bytes
                                             ; FW = fill words
                                             ; FL = fill longs
                                             ; F = fill bytes
                                             ;------------------------------------------------------------------------------
                                             ;
   1835 FFFC1286                             FillMem:
   1836 FFFC1286 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1838 FFFC1288 1801                        		move.b	d1,d4			; d4 = fill size
   1839 FFFC128A 6100 0044                   		bsr		ignBlanks
   1840 FFFC128E 6100 00EE                   		bsr		GetHexNumber
   1841 FFFC1292 2241                        		move.l	d1,a1			; a1 = start
   1842 FFFC1294 6100 003A                   		bsr		ignBlanks
   1843 FFFC1298 6100 00E4                   		bsr		GetHexNumber
   1844 FFFC129C 2601                        		move.l	d1,d3			; d3 = count
   1845 FFFC129E 6100 0030                   		bsr		ignBlanks
   1846 FFFC12A2 6100 00DA                   		bsr		GetHexNumber	; fill value
   1847 FFFC12A6 0C04 004C                   		cmpi.b	#'L',d4
   1848 FFFC12AA 660A                        		bne		fmem1
   1849 FFFC12AC                             fmemL:
   1850 FFFC12AC 22C1                        		move.l	d1,(a1)+
   1851 FFFC12AE 5383                        		sub.l	#1,d3
   1852 FFFC12B0 66FA                        		bne.s	fmemL
   1853 FFFC12B2 6000 FE70                   		bra		Monitor
   1854 FFFC12B6                             fmem1
   1855 FFFC12B6 0C04 0057                   		cmpi.b	#'W',d4
   1856 FFFC12BA 660A                        		bne		fmemB
   1857 FFFC12BC                             fmemW:
   1858 FFFC12BC 32C1                        		move.w	d1,(a1)+
   1859 FFFC12BE 5383                        		sub.l	#1,d3
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 32
bootrom.asm
   1860 FFFC12C0 66FA                        		bne.s	fmemW
   1861 FFFC12C2 6000 FE60                   		bra		Monitor
   1862 FFFC12C6                             fmemB:
   1863 FFFC12C6 12C1                        		move.b	d1,(a1)+
   1864 FFFC12C8 5383                        		sub.l	#1,d3
   1865 FFFC12CA 66FA                        		bne.s	fmemB
   1866 FFFC12CC 6000 FE56                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   1871 FFFC12D0                             ignBlanks:
   1872 FFFC12D0 1218                        		move.b	(a0)+,d1
   1873 FFFC12D2 0C01 0020                   		cmpi.b	#' ',d1
   1874 FFFC12D6 67F8                        		beq		ignBlanks
   1875 FFFC12D8 5388                        		subq	#1,a0
   1876 FFFC12DA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Edit memory byte.
                                             ;------------------------------------------------------------------------------
                                             ;
   1882 FFFC12DC                             EditMem:
   1883 FFFC12DC 6100 FFF2                   		bsr		ignBlanks
   1884 FFFC12E0 6100 009C                   		bsr		GetHexNumber
   1885 FFFC12E4 2241                        		move.l	d1,a1
   1886 FFFC12E6                             edtmem1:
   1887 FFFC12E6 6100 FFE8                   		bsr		ignBlanks
   1888 FFFC12EA 6100 0092                   		bsr		GetHexNumber
   1889 FFFC12EE 12C1                        		move.b	d1,(a1)+
   1890 FFFC12F0 6100 FFDE                   		bsr		ignBlanks
   1891 FFFC12F4 6100 0088                   		bsr		GetHexNumber
   1892 FFFC12F8 12C1                        		move.b	d1,(a1)+
   1893 FFFC12FA 6100 FFD4                   		bsr		ignBlanks
   1894 FFFC12FE 6100 007E                   		bsr		GetHexNumber
   1895 FFFC1302 12C1                        		move.b	d1,(a1)+
   1896 FFFC1304 6100 FFCA                   		bsr		ignBlanks
   1897 FFFC1308 6100 0074                   		bsr		GetHexNumber
   1898 FFFC130C 12C1                        		move.b	d1,(a1)+
   1899 FFFC130E 6100 FFC0                   		bsr		ignBlanks
   1900 FFFC1312 6100 006A                   		bsr		GetHexNumber
   1901 FFFC1316 12C1                        		move.b	d1,(a1)+
   1902 FFFC1318 6100 FFB6                   		bsr		ignBlanks
   1903 FFFC131C 6100 0060                   		bsr		GetHexNumber
   1904 FFFC1320 12C1                        		move.b	d1,(a1)+
   1905 FFFC1322 6100 FFAC                   		bsr		ignBlanks
   1906 FFFC1326 6100 0056                   		bsr		GetHexNumber
   1907 FFFC132A 12C1                        		move.b	d1,(a1)+
   1908 FFFC132C 6100 FFA2                   		bsr		ignBlanks
   1909 FFFC1330 6100 004C                   		bsr		GetHexNumber
   1910 FFFC1334 12C1                        		move.b	d1,(a1)+
   1911 FFFC1336 6000 FDEC                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Execute code at the specified address.
                                             ;------------------------------------------------------------------------------
                                             ;
   1917 FFFC133A                             ExecuteCode:
   1918 FFFC133A 6100 FF94                   		bsr		ignBlanks
   1919 FFFC133E 6100 003E                   		bsr		GetHexNumber
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 33
bootrom.asm
   1920 FFFC1342 2041                        		move.l	d1,a0
   1921 FFFC1344 4E90                        		jsr		(a0)
   1922 FFFC1346 6000 FDDC                   		bra     Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Do a memory dump of the requested location.
                                             ;------------------------------------------------------------------------------
                                             ;
   1928 FFFC134A                             DumpMem:
   1929 FFFC134A 6100 FF84                   		bsr		ignBlanks
   1930 FFFC134E 6100 002E                   		bsr		GetHexNumber
   1931 FFFC1352                             DumpMem1:
   1932 FFFC1352 2041                        		move.l	d1,a0
   1933 FFFC1354 4EB9 FFFC 020E              		jsr		CRLF
   1934 FFFC135A 6100 F79A                   		bsr		DisplayMem
   1935 FFFC135E 6100 F796                   		bsr		DisplayMem
   1936 FFFC1362 6100 F792                   		bsr		DisplayMem
   1937 FFFC1366 6100 F78E                   		bsr		DisplayMem
   1938 FFFC136A 6100 F78A                   		bsr		DisplayMem
   1939 FFFC136E 6100 F786                   		bsr		DisplayMem
   1940 FFFC1372 6100 F782                   		bsr		DisplayMem
   1941 FFFC1376 6100 F77E                   		bsr		DisplayMem
   1942 FFFC137A 6000 FDA8                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a hexidecimal number. Maximum of eight digits.
                                             ;------------------------------------------------------------------------------
                                             ;
   1948 FFFC137E                             GetHexNumber:
   1949 FFFC137E 48E7 A000                   		movem.l	d0/d2,-(a7)
   1950 FFFC1382 4282                        		clr.l	d2
   1951 FFFC1384 7007                        		moveq	#7,d0
   1952 FFFC1386                             gthxn2:
   1953 FFFC1386 1218                        		move.b	(a0)+,d1
   1954 FFFC1388 6100 001E                   		bsr		AsciiToHexNybble
   1955 FFFC138C B23C 00FF                   		cmp.b	#0xff,d1
   1956 FFFC1390 670E                        		beq		gthxn1
   1957 FFFC1392 E98A                        		lsl.l	#4,d2
   1958 FFFC1394 0281 0000 000F              		andi.l	#0x0f,d1
   1959 FFFC139A 8481                        		or.l	d1,d2
   1960 FFFC139C 51C8 FFE8                   		dbra	d0,gthxn2
   1961 FFFC13A0                             gthxn1:
   1962 FFFC13A0 2202                        		move.l	d2,d1
   1963 FFFC13A2 4CDF 0005                   		movem.l	(a7)+,d0/d2
   1964 FFFC13A6 4E75                        		rts	
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Convert ASCII character in the range '0' to '9', 'a' tr 'f' or 'A' to 'F'
                                             ; to a hex nybble.
                                             ;------------------------------------------------------------------------------
                                             ;
   1971 FFFC13A8                             AsciiToHexNybble:
   1972 FFFC13A8 0C01 0030                   		cmpi.b	#'0',d1
   1973 FFFC13AC 6538                        		blo.s	gthx3
   1974 FFFC13AE 0C01 0039                   		cmpi.b	#'9',d1
   1975 FFFC13B2 6206                        		bhi.s	gthx5
   1976 FFFC13B4 0401 0030                   		subi.b	#'0',d1
   1977 FFFC13B8 4E75                        		rts
   1978 FFFC13BA                             gthx5:
   1979 FFFC13BA 0C01 0041                   		cmpi.b	#'A',d1
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 34
bootrom.asm
   1980 FFFC13BE 6526                        		blo.s	gthx3
   1981 FFFC13C0 0C01 0046                   		cmpi.b	#'F',d1
   1982 FFFC13C4 620A                        		bhi.s	gthx6
   1983 FFFC13C6 0401 0041                   		subi.b	#'A',d1
   1984 FFFC13CA 0601 000A                   		addi.b	#10,d1
   1985 FFFC13CE 4E75                        		rts
   1986 FFFC13D0                             gthx6:
   1987 FFFC13D0 0C01 0061                   		cmpi.b	#'a',d1
   1988 FFFC13D4 6510                        		blo.s	gthx3
   1989 FFFC13D6 0C01 0066                   		cmpi.b	#'f',d1
   1990 FFFC13DA 620A                        		bhi.s	gthx3
   1991 FFFC13DC 0401 0061                   		subi.b	#'a',d1
   1992 FFFC13E0 0601 000A                   		addi.b	#10,d1
   1993 FFFC13E4 4E75                        		rts
   1994 FFFC13E6                             gthx3:
   1995 FFFC13E6 72FF                        		moveq	#-1,d1		; not a hex number
   1996 FFFC13E8 4E75                        		rts
                                             
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             ; The fast way to clear the screen. Uses the blitter.
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             
   2002 FFFC13EA                             ClearScreen:
   2003 FFFC13EA 4BF9 FFE0 0000              		lea		VDGREG,a5
   2004 FFFC13F0                             .0003:								
   2005 FFFC13F0 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2006 FFFC13F4 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2007 FFFC13F8 67F6                        		beq.s	.0003				; branch if not done
   2008 FFFC13FA 2B7C 0001 D4C0 04BC         		move.l	#BMP_WIDTH*BMP_HEIGHT,$4BC(a5)		; set transfer count  pixels
   2009 FFFC1402 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   2010 FFFC140A 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2011 FFFC1412 2B7C 0000 0190 04A4         		move.l	#BMP_WIDTH,$4A4(a5)		; set destination width
   2012 FFFC141A 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2013 FFFC1422 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; clear virtual screen too
   2016 FFFC1428 7020                        		moveq	#$20,d0				; d0 = space character
   2017 FFFC142A 323C 073A                   		move.w	#50*37,d1
   2018 FFFC142E 4BF9 1FFF 0000              		lea		VirtScreen,a5
   2019 FFFC1434                             .0001:
   2020 FFFC1434 1AC0                        		move.b	d0,(a5)+
   2021 FFFC1436 51C9 FFFC                   		dbra	d1,.0001
   2022 FFFC143A 4E75                        		rts
                                             
   2024 FFFC143C                             ScrollUp:
   2025 FFFC143C 48E7 8084                   		movem.l	d0/a0/a5,-(a7)
   2026 FFFC1440 4BF9 FFE0 0000              		lea		VDGREG,a5
   2027 FFFC1446                             .0003:								
   2028 FFFC1446 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2029 FFFC144A 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2030 FFFC144E 67F6                        		beq.s	.0003				; branch if not done
                                             		; Channel A
   2032 FFFC1450 2B7C 0001 C840 04B0         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$4B0(a5)	; set source transfer count pixels
   2033 FFFC1458 2B7C 0000 0C80 0480         		move.l	#BMP_WIDTH*8,$480(a5)		; set source bitmap address (address in graphics mem)
   2034 FFFC1460 2B7C 0000 0000 0484         		move.l	#0,$484(a5)			; set src modulo
                                             		; Channel D
   2036 FFFC1468 2B7C 0001 C840 04BC         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$4BC(a5)	; set destination transfer count pixels
   2037 FFFC1470 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2038 FFFC1478 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 35
bootrom.asm
   2040 FFFC1480 2B7C FFFF FFFF 04A0         		move.l	#-1,$4A0(a5)		; set source width
   2041 FFFC1488 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   2042 FFFC1490 3B7C 0011 04AE              		move.w	#$11,$4AE(a5)		; set op A ($11 = copy A)
   2043 FFFC1496 3B7C 8082 04AC              		move.w	#%1000000010000010,$4AC(a5)		; enable channel A,D, start transfer
                                             
                                             		; Scroll virtual screen
   2046 FFFC149C 4BF9 1FFF 0000              		lea		VirtScreen,a5
   2047 FFFC14A2 204D                        		movea.l	a5,a0
   2048 FFFC14A4 1039 0001 041B              		move.b	TextCols,d0
   2049 FFFC14AA 4880                        		ext.w	d0
   2050 FFFC14AC D1C0                        		add.l	d0,a0
   2051 FFFC14AE C0FC 0025                   		mulu	#37,d0
   2052 FFFC14B2                             .0001:
   2053 FFFC14B2 1AD8                        		move.b	(a0)+,(a5)+
   2054 FFFC14B4 51C8 FFFC                   		dbra	d0,.0001
   2055 FFFC14B8 4CDF 2101                   		movem.l	(a7)+,d0/a0/a5
                                             
   2057 FFFC14BC                             BlankLastLine:
   2058 FFFC14BC 48E7 8004                   		movem.l	d0/a5,-(a7)
                                             		; Channel D
   2060 FFFC14C0 4BF9 FFE0 0000              		lea		VDGREG,a5
   2061 FFFC14C6                             .0003:								
   2062 FFFC14C6 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2063 FFFC14CA 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2064 FFFC14CE 67F6                        		beq.s	.0003				; branch if not done
   2065 FFFC14D0 2B7C 0000 0C80 04BC         		move.l	#BMP_WIDTH*8,$4BC(a5)		; set destination transfer count pixels
   2066 FFFC14D8 2B7C 0001 C840 0498         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$498(a5)	; set destination address
   2067 FFFC14E0 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2068 FFFC14E8 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   2069 FFFC14F0 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   2070 FFFC14F8 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   2071 FFFC14FE 4BF9 1FFF 073A              		lea		VirtScreen+50*37,a5
   2072 FFFC1504 7028                        		moveq	#40,d0
   2073 FFFC1506                             .0001:
   2074 FFFC1506 1AFC 0020                   		move.b	#$20,(a5)+
   2075 FFFC150A 51C8 FFFA                   		dbra	d0,.0001
   2076 FFFC150E 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2077 FFFC1512 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Load an S19 format file
                                             ;==============================================================================
                                             ;
   2083 FFFC1514                             LoadS19:
   2084 FFFC1514 600A                        	bra		ProcessRec
   2085 FFFC1516                             NextRec:
   2086 FFFC1516 6100 017A                   	bsr		sGetChar
   2087 FFFC151A 0C00 000A                   	cmpi.b	#LF,d0
   2088 FFFC151E 66F6                        	bne		NextRec
   2089 FFFC1520                             ProcessRec
   2090 FFFC1520 6100 0170                   	bsr		sGetChar
   2091 FFFC1524 1800                        	move.b	d0,d4
   2092 FFFC1526 0C04 001A                   	cmpi.b	#26,d4		; CTRL-Z ?
   2093 FFFC152A 6700 FBF8                   	beq		Monitor
   2094 FFFC152E 0C04 0053                   	cmpi.b	#'S',d4
   2095 FFFC1532 66E2                        	bne		NextRec
   2096 FFFC1534 6100 015C                   	bsr		sGetChar
   2097 FFFC1538 1800                        	move.b	d0,d4
   2098 FFFC153A 0C04 0030                   	cmpi.b	#'0',d4
   2099 FFFC153E 65D6                        	blo		NextRec
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 36
bootrom.asm
   2100 FFFC1540 0C04 0039                   	cmpi.b	#'9',d4		; d4 = record type
   2101 FFFC1544 62D0                        	bhi		NextRec
   2102 FFFC1546 6100 014A                   	bsr		sGetChar
   2103 FFFC154A 6100 FE5C                   	bsr		AsciiToHexNybble
   2104 FFFC154E 1401                        	move.b	d1,d2
   2105 FFFC1550 6100 0140                   	bsr		sGetChar
   2106 FFFC1554 6100 FE52                   	bsr		AsciiToHexNybble
   2107 FFFC1558 E90A                        	lsl.b	#4,d2
   2108 FFFC155A 8202                        	or.b	d2,d1		; d1 = byte count
   2109 FFFC155C 1601                        	move.b	d1,d3		; d3 = byte count
   2110 FFFC155E 0C04 0030                   	cmpi.b	#'0',d4		; manufacturer ID record, ignore
   2111 FFFC1562 67B2                        	beq		NextRec
   2112 FFFC1564 0C04 0031                   	cmpi.b	#'1',d4
   2113 FFFC1568 676A                        	beq		ProcessS1
   2114 FFFC156A 0C04 0032                   	cmpi.b	#'2',d4
   2115 FFFC156E 676A                        	beq		ProcessS2
   2116 FFFC1570 0C04 0033                   	cmpi.b	#'3',d4
   2117 FFFC1574 676A                        	beq		ProcessS3
   2118 FFFC1576 0C04 0035                   	cmpi.b	#'5',d4		; record count record, ignore
   2119 FFFC157A 679A                        	beq		NextRec
   2120 FFFC157C 0C04 0037                   	cmpi.b	#'7',d4
   2121 FFFC1580 6764                        	beq		ProcessS7
   2122 FFFC1582 0C04 0038                   	cmpi.b	#'8',d4
   2123 FFFC1586 676C                        	beq		ProcessS8
   2124 FFFC1588 0C04 0039                   	cmpi.b	#'9',d4
   2125 FFFC158C 6774                        	beq		ProcessS9
   2126 FFFC158E 6086                        	bra		NextRec
                                             
   2128 FFFC1590                             pcssxa
   2129 FFFC1590 0243 00FF                   	andi.w	#0xff,d3
   2130 FFFC1594 5343                        	subi.w	#1,d3			; one less for dbra
   2131 FFFC1596                             pcss1a
   2132 FFFC1596 4282                        	clr.l	d2
   2133 FFFC1598 6100 00F8                   	bsr		sGetChar
   2134 FFFC159C 6100 FE0A                   	bsr		AsciiToHexNybble
   2135 FFFC15A0 E98A                        	lsl.l	#4,d2
   2136 FFFC15A2 8401                        	or.b	d1,d2
   2137 FFFC15A4 6100 00EC                   	bsr		sGetChar
   2138 FFFC15A8 6100 FDFE                   	bsr		AsciiToHexNybble
   2139 FFFC15AC E98A                        	lsl.l	#4,d2
   2140 FFFC15AE 8401                        	or.b	d1,d2
   2141 FFFC15B0 12C2                        	move.b	d2,(a1)+
   2142 FFFC15B2 51CB FFE2                   	dbra	d3,pcss1a
                                             ; Get the checksum byte
   2144 FFFC15B6 4282                        	clr.l	d2
   2145 FFFC15B8 6100 00D8                   	bsr		sGetChar
   2146 FFFC15BC 6100 FDEA                   	bsr		AsciiToHexNybble
   2147 FFFC15C0 E98A                        	lsl.l	#4,d2
   2148 FFFC15C2 8401                        	or.b	d1,d2
   2149 FFFC15C4 6100 00CC                   	bsr		sGetChar
   2150 FFFC15C8 6100 FDDE                   	bsr		AsciiToHexNybble
   2151 FFFC15CC E98A                        	lsl.l	#4,d2
   2152 FFFC15CE 8401                        	or.b	d1,d2
   2153 FFFC15D0 6000 FF44                   	bra		NextRec
                                             
   2155 FFFC15D4                             ProcessS1:
   2156 FFFC15D4 6100 003A                   	bsr		S19Get16BitAddress
   2157 FFFC15D8 60B6                        	bra		pcssxa
   2158 FFFC15DA                             ProcessS2:
   2159 FFFC15DA 6100 0042                   	bsr		S19Get24BitAddress
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 37
bootrom.asm
   2160 FFFC15DE 60B0                        	bra		pcssxa
   2161 FFFC15E0                             ProcessS3:
   2162 FFFC15E0 6100 004A                   	bsr		S19Get32BitAddress
   2163 FFFC15E4 60AA                        	bra		pcssxa
   2164 FFFC15E6                             ProcessS7:
   2165 FFFC15E6 6100 0044                   	bsr		S19Get32BitAddress
   2166 FFFC15EA 23C9 0001 0438              	move.l	a1,S19StartAddress
   2167 FFFC15F0 6000 FB32                   	bra		Monitor
   2168 FFFC15F4                             ProcessS8:
   2169 FFFC15F4 6100 0028                   	bsr		S19Get24BitAddress
   2170 FFFC15F8 23C9 0001 0438              	move.l	a1,S19StartAddress
   2171 FFFC15FE 6000 FB24                   	bra		Monitor
   2172 FFFC1602                             ProcessS9:
   2173 FFFC1602 6100 000C                   	bsr		S19Get16BitAddress
   2174 FFFC1606 23C9 0001 0438              	move.l	a1,S19StartAddress
   2175 FFFC160C 6000 FB16                   	bra		Monitor
                                             
   2177 FFFC1610                             S19Get16BitAddress:
   2178 FFFC1610 4282                        	clr.l	d2
   2179 FFFC1612 6100 007E                   	bsr		sGetChar
   2180 FFFC1616 6100 FD90                   	bsr		AsciiToHexNybble
   2181 FFFC161A 1401                        	move.b	d1,d2
   2182 FFFC161C 604A                        	bra		S1932b
                                             
   2184 FFFC161E                             S19Get24BitAddress:
   2185 FFFC161E 4282                        	clr.l	d2
   2186 FFFC1620 6100 0070                   	bsr		sGetChar
   2187 FFFC1624 6100 FD82                   	bsr		AsciiToHexNybble
   2188 FFFC1628 1401                        	move.b	d1,d2
   2189 FFFC162A 6024                        	bra		S1932a
                                             
   2191 FFFC162C                             S19Get32BitAddress:
   2192 FFFC162C 4282                        	clr.l	d2
   2193 FFFC162E 6100 0062                   	bsr		sGetChar
   2194 FFFC1632 6100 FD74                   	bsr		AsciiToHexNybble
   2195 FFFC1636 1401                        	move.b	d1,d2
   2196 FFFC1638 6100 0058                   	bsr		sGetChar
   2197 FFFC163C 6100 FD6A                   	bsr		AsciiToHexNybble
   2198 FFFC1640 E98A                        	lsl.l	#4,d2
   2199 FFFC1642 8401                        	or.b	d1,d2
   2200 FFFC1644 6100 004C                   	bsr		sGetChar
   2201 FFFC1648 6100 FD5E                   	bsr		AsciiToHexNybble
   2202 FFFC164C E98A                        	lsl.l	#4,d2
   2203 FFFC164E 8401                        	or.b	d1,d2
   2204 FFFC1650                             S1932a:
   2205 FFFC1650 6100 0040                   	bsr		sGetChar
   2206 FFFC1654 6100 FD52                   	bsr		AsciiToHexNybble
   2207 FFFC1658 E98A                        	lsl.l	#4,d2
   2208 FFFC165A 8401                        	or.b	d1,d2
   2209 FFFC165C 6100 0034                   	bsr		sGetChar
   2210 FFFC1660 6100 FD46                   	bsr		AsciiToHexNybble
   2211 FFFC1664 E98A                        	lsl.l	#4,d2
   2212 FFFC1666 8401                        	or.b	d1,d2
   2213 FFFC1668                             S1932b:
   2214 FFFC1668 6100 0028                   	bsr		sGetChar
   2215 FFFC166C 6100 FD3A                   	bsr		AsciiToHexNybble
   2216 FFFC1670 E98A                        	lsl.l	#4,d2
   2217 FFFC1672 8401                        	or.b	d1,d2
   2218 FFFC1674 6100 001C                   	bsr		sGetChar
   2219 FFFC1678 6100 FD2E                   	bsr		AsciiToHexNybble
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 38
bootrom.asm
   2220 FFFC167C E98A                        	lsl.l	#4,d2
   2221 FFFC167E 8401                        	or.b	d1,d2
   2222 FFFC1680 6100 0010                   	bsr		sGetChar
   2223 FFFC1684 6100 FD22                   	bsr		AsciiToHexNybble
   2224 FFFC1688 E98A                        	lsl.l	#4,d2
   2225 FFFC168A 8401                        	or.b	d1,d2
   2226 FFFC168C 4284                        	clr.l	d4
   2227 FFFC168E 2242                        	move.l	d2,a1
   2228 FFFC1690 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a character from auxillary input, checking the keyboard status for a
                                             ; CTRL-C
                                             ;------------------------------------------------------------------------------
                                             ;
   2235 FFFC1692                             sGetChar:
   2236 FFFC1692 6100 F4F8                   	bsr		CheckForKey
   2237 FFFC1696 670C                        	beq		sgc1
   2238 FFFC1698 6100 F504                   	bsr		GetKey
   2239 FFFC169C 0C01 0003                   	cmpi.b	#CTRLC,d1
   2240 FFFC16A0 6700 FA82                   	beq		Monitor
   2241 FFFC16A4                             sgc1:
   2242 FFFC16A4 6100 FFFF                   	bsr		AUXIN
   2243 FFFC16A8 67E8                        	beq		sGetChar
   2244 FFFC16AA 1200                        	move.b	d0,d1
   2245 FFFC16AC 4E75                        	rts
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   2253 FFFC16AE                             DisplayHexNumber:
   2254 FFFC16AE 33FC A6A6 FFDC 0600         		move.w	#$A6A6,leds		; diagnostics
   2255 FFFC16B6 2C7C FFE0 0000              		move.l	#VDGREG,a6
   2256 FFFC16BC 343C 0007                   		move.w	#7,d2		; number-1 of digits to display
   2257 FFFC16C0                             disphnum1:
   2258 FFFC16C0 1001                        		move.b	d1,d0		; get digit into d0.b
   2259 FFFC16C2 0240 000F                   		andi.w	#$0f,d0
   2260 FFFC16C6 0C40 0009                   		cmpi.w	#$09,d0
   2261 FFFC16CA 6302                        		bls.s	disphnum2
   2262 FFFC16CC 5E40                        		addi.w	#7,d0
   2263 FFFC16CE                             disphnum2:
   2264 FFFC16CE 0640 0030                   		addi.w	#$30,d0	; convert to display char
   2265 FFFC16D2 3602                        		move.w	d2,d3		; char count into d3
   2266 FFFC16D4 E743                        		asl.w	#3,d3		; scale * 8
   2267 FFFC16D6                             disphnum3:
   2268 FFFC16D6 382E 042C                   		move.w	$42C(a6),d4			; read character queue index into d4
   2269 FFFC16DA B87C 001C                   		cmp.w	#28,d4					; allow up 28 entries to be in progress
   2270 FFFC16DE 64F6                        		bhs.s	disphnum3				; branch if too many chars queued
   2271 FFFC16E0 4880                        		ext.w	d0						; zero out high order bits
   2272 FFFC16E2 3D40 0420                   		move.w	d0,$420(a6)			; set char code
   2273 FFFC16E6 3D7C 7FFF 0422              		move.w	#WHITE,$422(a6)		; set fg color
   2274 FFFC16EC 3D7C 000F 0424              		move.w	#DARK_BLUE,$424(a6)	; set bk color
   2275 FFFC16F2 3D43 0426                   		move.w	d3,$426(a6)			; set x pos
   2276 FFFC16F6 3D7C 0008 0428              		move.w	#8,$428(a6)			; set y pos
   2277 FFFC16FC 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
   2278 FFFC1702 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
   2279 FFFC1708 E899                        		ror.l	#4,d1					; rot to next digit
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 39
bootrom.asm
   2280 FFFC170A 57CA FFB4                   		dbeq	d2,disphnum1
   2281 FFFC170E 4ED5                        		jmp		(a5)
                                             
                                             ;===============================================================================
                                             ;    Perform ram test. (Uses checkerboard testing).
                                             ; 
                                             ;    Return address must be stored in a3 since the stack cannot be used (it
                                             ; would get overwritten in test). Note this routine uses no ram at all.
                                             ;===============================================================================
   2289 FFFC1710                             ramtest:
   2290 FFFC1710 33FC A5A5 FFDC 0600         		move.w	#$A5A5,leds		; diagnostics
   2291 FFFC1718 207C 0003 0000                      movea.l #$30000,a0
   2292 FFFC171E 203C AAAA 5555                      move.l #$aaaa5555,d0
                                             ;-----------------------------------------------------------
                                             ;   Write checkerboard pattern to ram then read it back to
                                             ; find the highest usable ram address (maybe). This address
                                             ; must be lower than the start of the rom (0xe00000).
                                             ;-----------------------------------------------------------
   2298 FFFC1724                             ramtest1:
   2299 FFFC1724 20C0                                move.l 	d0,(a0)+
   2300 FFFC1726 2208                                move.l	a0,d1
   2301 FFFC1728 4A41                                tst.w	d1
   2302 FFFC172A 660A                                bne.s	rmtst1
   2303 FFFC172C 4BF9 FFFC 1736                      lea		rmtst1,a5
   2304 FFFC1732 6000 FF7A                           bra		DisplayHexNumber
   2305 FFFC1736                             rmtst1:
   2306 FFFC1736 33FC A9A9 FFDC 0600         		move.w	#$A9A9,leds		; diagnostics
   2307 FFFC173E B1FC 0005 FFFC                      cmpa.l 	#$5FFFC,a0
   2308 FFFC1744 66DE                                bne.s 	ramtest1
   2309 FFFC1746 7200                                move.l	#0,d1
   2310 FFFC1748 6100 EADE                           bsr		CalcScreenLoc
   2311 FFFC174C 6000 FC04                           bra		DumpMem1
                                             
                                             ;------------------------------------------------------
                                             ;   Save maximum useable address for later comparison.
                                             ;------------------------------------------------------
   2316 FFFC1750                             ramtest6:
   2317 FFFC1750 33FC A7A7 FFDC 0600         		move.w	#$A7A7,leds		; diagnostics
   2318 FFFC1758 2448                                movea.l a0,a2
   2319 FFFC175A 207C 0003 0000                      movea.l #$30000,a0
                                             ;--------------------------------------------
                                             ;   Read back checkerboard pattern from ram.
                                             ;--------------------------------------------
   2323 FFFC1760                             ramtest2:
   2324 FFFC1760 2A18                                move.l  (a0)+,d5
   2325 FFFC1762 B5C8                                cmpa.l	a0,a2
   2326 FFFC1764 671A                                beq.s	ramtest3
   2327 FFFC1766 2208                                move.l	a0,d1
   2328 FFFC1768 4A41                                tst.w	d1
   2329 FFFC176A 660A                                bne.s	rmtst2
   2330 FFFC176C 4BF9 FFFC 1776                      lea		rmtst2,a5
   2331 FFFC1772 6000 FF3A                           bra		DisplayHexNumber
   2332 FFFC1776                             rmtst2:
   2333 FFFC1776 0C85 AAAA 5555                      cmpi.l 	#$aaaa5555,d5
   2334 FFFC177C 67E2                                beq.s 	ramtest2
   2335 FFFC177E 6678                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   The following section does the same test except
                                             ; with the checkerboard order switched around.
                                             ;---------------------------------------------------
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 40
bootrom.asm
   2340 FFFC1780                             ramtest3:                
   2341 FFFC1780 33FC A8A8 FFDC 0600         		move.w	#$A8A8,leds		; diagnostics
   2342 FFFC1788 207C 0003 0000                      movea.l #$30000,a0
   2343 FFFC178E 203C 5555 AAAA                      move.l 	#$5555aaaa,d0
   2344 FFFC1794                             ramtest4:
   2345 FFFC1794 20C0                                move.l 	d0,(a0)+
   2346 FFFC1796 2208                                move.l 	a0,d1
   2347 FFFC1798 4A41                                tst.w	d1
   2348 FFFC179A 660A                                bne.s   rmtst3
   2349 FFFC179C 4BF9 FFFC 17A6                      lea		rmtst3,a5
   2350 FFFC17A2 6000 FF0A                           bra		DisplayHexNumber
   2351 FFFC17A6                             rmtst3:
   2352 FFFC17A6 B1FC 1FFF FFFC                      cmpa.l 	#$1FFFFFFC,a0
   2353 FFFC17AC 66E6                                bne.s 	ramtest4
   2354 FFFC17AE                             ramtest8:
   2355 FFFC17AE 2448                                movea.l a0,a2
   2356 FFFC17B0 207C 0003 0000                      movea.l #$30000,a0
   2357 FFFC17B6                             ramtest5:
   2358 FFFC17B6 2018                                move.l 	(a0)+,d0
   2359 FFFC17B8 B5C8                                cmpa.l	a0,a2
   2360 FFFC17BA 671A                                beq.s	rmtst5
   2361 FFFC17BC 2208                                move.l 	a0,d1
   2362 FFFC17BE 4A41                                tst.w	d1
   2363 FFFC17C0 660A                                bne.s	rmtst4
   2364 FFFC17C2 4BF9 FFFC 17CC                      lea		rmtst4,a5
   2365 FFFC17C8 6000 FEE4                           bra		DisplayHexNumber
   2366 FFFC17CC                             rmtst4:
   2367 FFFC17CC 0C80 5555 AAAA                      cmpi.l 	#$5555aaaa,d0
   2368 FFFC17D2 67E2                                beq.s 	ramtest5
   2369 FFFC17D4 6622                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   Save last ram address in end of memory pointer.
                                             ;---------------------------------------------------
   2373 FFFC17D6                             rmtst5:
   2374 FFFC17D6 23C8 0001 0008                      move.l a0,memend
                                             ;-----------------------------------
                                             ;   Create very first memory block.
                                             ;-----------------------------------
   2378 FFFC17DC 91FC 0000 000C                      suba.l 	#12,a0
   2379 FFFC17E2 21C8 0404                           move.l 	a0,$0404
   2380 FFFC17E6 21FC 4652 4545 0400                 move.l 	#$46524545,$0400
   2381 FFFC17EE 21FC 0000 0408 0408                 move.l 	#$408,$408			; point back-link to self
   2382 FFFC17F6 4ED3                                jmp 	(a3)
                                             ;----------------------------------
                                             ; Error in ram - go no farther.
                                             ;----------------------------------
   2386 FFFC17F8                             ramtest7:
   2387 FFFC17F8 4ED3                        		jmp 	(a3)
   2388 FFFC17FA 60FC                                bra.s 	ramtest7
                                             
                                             
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2396 FFFC17FC                             GraphicsDemo:
   2397 FFFC17FC 6100 0080                   		bsr		DrawLines
   2398 FFFC1800 6100 0006                   		bsr		DrawRects
   2399 FFFC1804 6000 F91E                   		bra		Monitor
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 41
bootrom.asm
                                             
   2401 FFFC1808                             DrawRects:
   2402 FFFC1808 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2403 FFFC180E 4BF9 FFE0 0000              		lea		VDGREG,a5
   2404 FFFC1814 2C3C 0000 4E20              		move.l	#20000,d6		; repeat a few times
   2405 FFFC181A                             .0001:
   2406 FFFC181A 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2407 FFFC181E 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2408 FFFC1820 4840                        		swap	d0				; and bits 16 to 24 for x0
   2409 FFFC1822 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2410 FFFC1826 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2411 FFFC182A 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2412 FFFC182E 242E 0C00                   		move.l	$0C00(a6),d2
   2413 FFFC1832 3602                        		move.w	d2,d3
   2414 FFFC1834 4842                        		swap	d2
   2415 FFFC1836 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2416 FFFC183A 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2417 FFFC183E 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2418 FFFC1842 282E 0C00                   		move.l	$0C00(a6),d4
   2419 FFFC1846 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2420 FFFC184A 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2421 FFFC184E                             .0002:
   2422 FFFC184E 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2423 FFFC1852 BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2424 FFFC1856 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2425 FFFC1858 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2426 FFFC185E 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2427 FFFC1862 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2428 FFFC1866 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2429 FFFC186A 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2430 FFFC186E 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2431 FFFC1872 3B7C 0003 042E              		move.w	#3,$42E(a5)		; pulse command queue (3 = draw rect)
   2432 FFFC1878 5386                        		sub.l	#1,d6
   2433 FFFC187A 669E                        		bne		.0001			; go back and do more lines
   2434 FFFC187C 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Draw lines randomly on the screen.
                                             ;===============================================================================
                                             
   2440 FFFC187E                             DrawLines:
   2441 FFFC187E 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2442 FFFC1884 4BF9 FFE0 0000              		lea		VDGREG,a5
   2443 FFFC188A 2C3C 0003 0D40              		move.l	#200000,d6		; repeat a few times
   2444 FFFC1890                             .0001:
                                             		; Wait for blitter to be done
   2446 FFFC1890                             .0003:								
   2447 FFFC1890 33FC 000A FFDC 0600         		move.w	#10,leds
   2448 FFFC1898 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2449 FFFC189C 0800 000E                   		btst	#14,d0
   2450 FFFC18A0 6706                        		beq.s	.0004
   2451 FFFC18A2 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2452 FFFC18A6 67E8                        		beq.s	.0003				; branch if not done
   2453 FFFC18A8                             .0004:
   2454 FFFC18A8 33FC 000B FFDC 0600         		move.w	#11,leds
   2455 FFFC18B0 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2456 FFFC18B4 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2457 FFFC18B6 4840                        		swap	d0				; and bits 16 to 24 for x0
   2458 FFFC18B8 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2459 FFFC18BC 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 42
bootrom.asm
   2460 FFFC18C0 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2461 FFFC18C4 242E 0C00                   		move.l	$0C00(a6),d2
   2462 FFFC18C8 3602                        		move.w	d2,d3
   2463 FFFC18CA 4842                        		swap	d2
   2464 FFFC18CC 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2465 FFFC18D0 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2466 FFFC18D4 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2467 FFFC18D8 282E 0C00                   		move.l	$0C00(a6),d4
   2468 FFFC18DC 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2469 FFFC18E0 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2470 FFFC18E4                             .0002:
   2471 FFFC18E4 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2472 FFFC18E8 BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2473 FFFC18EC 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2474 FFFC18EE 33FC 000C FFDC 0600         		move.w	#12,leds
   2475 FFFC18F6 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2476 FFFC18FC 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2477 FFFC1900 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2478 FFFC1904 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2479 FFFC1908 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2480 FFFC190C 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2481 FFFC1910 3B7C 0002 042E              		move.w	#2,$42E(a5)		; pulse command queue (2 = draw line)
   2482 FFFC1916 5386                        		sub.l	#1,d6
   2483 FFFC1918 6600 FF76                   		bne		.0001			; go back and do more lines
   2484 FFFC191C 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Test Blitter
                                             ;===============================================================================
                                             
   2490 FFFC191E                             TestBlitter:
                                             		; puts a red rectangle on screen
   2492 FFFC191E 4BF9 FFE0 0000              		lea		VDGREG,a5
   2493 FFFC1924                             .0003:								
   2494 FFFC1924 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2495 FFFC1928 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2496 FFFC192C 67F6                        		beq.s	.0003				; branch if not done
   2497 FFFC192E 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set transfer count 8000 pixels
   2498 FFFC1936 3B7C 7C00 04A8              		move.w	#RED,$4A8(a5)		; set color red
   2499 FFFC193C 2B7C 0000 0168 0498         		move.l	#360,$498(a5)		; set destination address
   2500 FFFC1944 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2501 FFFC194C 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
   2502 FFFC1954 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; makes a copy of the upper left corner of the screen
   2505 FFFC195A                             .0001:								
   2506 FFFC195A 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2507 FFFC195E 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2508 FFFC1962 67F6                        		beq.s	.0001				; branch if not done
                                             		; Channel A
   2510 FFFC1964 2B7C 0000 03E8 04B0         		move.l	#1000,$4B0(a5)		; set source transfer count 8000 pixels
   2511 FFFC196C 2B7C 0000 0000 0480         		move.l	#0,$480(a5)			; set source bitmap address (address in graphics mem)
   2512 FFFC1974 2B7C 0000 0168 0484         		move.l	#360,$484(a5)		; set src modulo
                                             		; Channel C
   2514 FFFC197C 2B7C 0000 03E8 04B8         		move.l	#1000,$4B8(a5)		; set source transfer count 8000 pixels
   2515 FFFC1984 2B7C 0000 0000 0490         		move.l	#0,$490(a5)			; set source bitmap address (address in graphics mem)
   2516 FFFC198C 2B7C 0000 0168 0494         		move.l	#360,$494(a5)		; set src modulo
                                             		; Channel D
   2518 FFFC1994 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set destination transfer count 8000 pixels
   2519 FFFC199C 2B7C 0000 0140 0498         		move.l	#320,$498(a5)		; set destination address
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 43
bootrom.asm
   2520 FFFC19A4 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
                                             		
   2522 FFFC19AC 2B7C 0000 0028 04A0         		move.l	#40,$4A0(a5)		; set source width
   2523 FFFC19B4 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2524 FFFC19BC 3B7C 0091 04AE              		move.w	#$91,$4AE(a5)		; set op A|C	($11 = copy A)
   2525 FFFC19C2 3B7C 80A2 04AC              		move.w	#%1000000010100010,$4AC(a5)		; enable channel A,C,D, start transfer
   2526 FFFC19C8                             .0002:								
   2527 FFFC19C8 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2528 FFFC19CC 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2529 FFFC19D0 67F6                        		beq.s	.0002				; branch if not done
   2530 FFFC19D2 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Generic I2C routines
                                             ;===============================================================================
                                             
                                             I2C_PREL	EQU		$0
                                             I2C_PREH	EQU		$2
                                             I2C_CTRL	EQU		$4
                                             I2C_RXR		EQU		$6
                                             I2C_TXR		EQU		$6
                                             I2C_CMD		EQU		$8
                                             I2C_STAT	EQU		$A
                                             
                                             ; i2c
   2545 FFFC19D4                             i2c_setup:
   2546 FFFC19D4 4DF9 FFDC 0E00              		lea		I2C,a6				
   2547 FFFC19DA 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2548 FFFC19DE 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2549 FFFC19E4 4DF9 FFDC 0E10              		lea		I2C2,a6				
   2550 FFFC19EA 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2551 FFFC19EE 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2552 FFFC19F4 4E75                        		rts
                                             
                                             ; Wait for I2C transfer to complete
                                             ;
                                             ; Parameters
                                             ; 	a6 - I2C controller base address
                                             
   2559 FFFC19F6                             i2c_wait_tip:
   2560 FFFC19F6 3F00                        		move.w	d0,-(a7)
   2561 FFFC19F8                             .0001:					
   2562 FFFC19F8 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for tip to clear
   2563 FFFC19FC 0800 0001                   		btst	#1,d0
   2564 FFFC1A00 66F6                        		bne.s	.0001
   2565 FFFC1A02 301F                        		move.w	(a7)+,d0
   2566 FFFC1A04 4E75                        		rts
                                             
                                             ; Parameters
                                             ;	d0.w - data to transmit
                                             ;	d1.w - command value
                                             ;	a6	 - I2C controller base address
                                             ;
   2573 FFFC1A06                             i2c_wr_cmd:
   2574 FFFC1A06 3D40 0006                   		move.w	d0,I2C_TXR(a6)
   2575 FFFC1A0A 3D41 0008                   		move.w	d1,I2C_CMD(a6)
   2576 FFFC1A0E 6100 FFE6                   		bsr		i2c_wait_tip
   2577 FFFC1A12 302E 000A                   		move.w	I2C_STAT(a6),d0
   2578 FFFC1A16 4E75                        		rts
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 44
bootrom.asm
   2580 FFFC1A18                             i2c_xmit1:
   2581 FFFC1A18 3F00                        		move.w	d0,-(a7)
   2582 FFFC1A1A 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2583 FFFC1A20 7076                        		moveq	#$76,d0				; set slave address = %0111011
   2584 FFFC1A22 323C 0090                   		move.w	#$90,d1				; set STA, WR
   2585 FFFC1A26 6100 FFDE                   		bsr		i2c_wr_cmd
   2586 FFFC1A2A 6100 0010                   		bsr		i2c_wait_rx_nack
   2587 FFFC1A2E 301F                        		move.w	(a7)+,d0
   2588 FFFC1A30 323C 0050                   		move.w	#$50,d1				; set STO, WR
   2589 FFFC1A34 6100 FFD0                   		bsr		i2c_wr_cmd
   2590 FFFC1A38 6100 0002                   		bsr		i2c_wait_rx_nack
                                             
   2592 FFFC1A3C                             i2c_wait_rx_nack:
   2593 FFFC1A3C 3F00                        		move.w	d0,-(a7)
   2594 FFFC1A3E                             .0001:							
   2595 FFFC1A3E 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for RXack = 0
   2596 FFFC1A42 0800 0007                   		btst	#7,d0
   2597 FFFC1A46 66F6                        		bne.s	.0001
   2598 FFFC1A48 301F                        		move.w	(a7)+,d0
   2599 FFFC1A4A 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Audio
                                             ;===============================================================================
                                             
   2605 FFFC1A4C                             AudioInputTest:
   2606 FFFC1A4C 4BF9 FFE0 0000              		lea		VDGREG,a5
   2607 FFFC1A52 2B7C 0005 8000 0640         		move.l	#$58000,$640(a5)	; set buffer address ($FF8B0000)
   2608 FFFC1A5A 3B7C 4000 0644              		move.w	#$4000,$644(a5)		; set buffer length
   2609 FFFC1A60 3B7C 0716 0646              		move.w	#1814,$646(a5)		; set period = 22.05kHz
   2610 FFFC1A66 3B7C 1090 0584              		move.w	#$1090,$584(a5)		; enable input channel, plot mode
   2611 FFFC1A6C 3B7C 0090 0584              		move.w	#$0090,$584(a5)		; turn off reset
                                             		; should have input now
                                             
                                             		; puts a dark blue rectangle on screen
   2615 FFFC1A72                             .0003:								
   2616 FFFC1A72 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2617 FFFC1A76 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2618 FFFC1A7A 67F6                        		beq.s	.0003				; branch if not done
   2619 FFFC1A7C 2B7C 0001 0000 04BC         		move.l	#256*256,$4BC(a5)		; set transfer count pixels
   2620 FFFC1A84 3B7C 000F 04A8              		move.w	#DARK_BLUE,$4A8(a5)		; set color 
   2621 FFFC1A8A 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2622 FFFC1A92 2B7C 0000 0100 04A4         		move.l	#256,$4A4(a5)		; set destination width
   2623 FFFC1A9A 2B7C 0000 0090 049C         		move.l	#BMP_WIDTH-256,$49C(a5)		; set dst modulo
   2624 FFFC1AA2 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; delay a bit
   2627 FFFC1AA8 203C 0003 D090              		move.l	#250000,d0
   2628 FFFC1AAE                             .0004:
   2629 FFFC1AAE 5380                        		sub.l	#1,d0
   2630 FFFC1AB0 66FC                        		bne.s	.0004
   2631 FFFC1AB2 60BE                        		bra.s	.0003
                                             		
                                             
   2634 FFFC1AB4                             audio_pll_config:
   2635 FFFC1AB4 7000                        		moveq	#0,d0
   2636 FFFC1AB6 720E                        		moveq	#$0E,d1
   2637 FFFC1AB8 6100 001C                   		bsr		audio_write_reg
   2638 FFFC1ABC 7002                        		moveq	#2,d0
   2639 FFFC1ABE 41F9 FFFC 1B30              		lea		audio_tbl1,a0
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 45
bootrom.asm
   2640 FFFC1AC4 6100 0076                   		bsr		audio_write_reg6
   2641 FFFC1AC8 4E75                        		rts
                                             
   2643 FFFC1ACA                             audio_startup_config:
   2644 FFFC1ACA 4E75                        		rts
                                             
   2646 FFFC1ACC                             audio_init:
   2647 FFFC1ACC 6100 FFE6                   		bsr		audio_pll_config
   2648 FFFC1AD0 6100 FFF8                   		bsr		audio_startup_config
   2649 FFFC1AD4 4E75                        		rts
                                             
                                             ; d0.w = register number
                                             ; d1.w = data to write
                                             		
   2654 FFFC1AD6                             audio_write_reg:
   2655 FFFC1AD6 4DF9 FFDC 0E00              		lea		I2C,a6				
   2656 FFFC1ADC 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2657 FFFC1AE2 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2658 FFFC1AE8 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2659 FFFC1AEE 6100 FF06                   		bsr		i2c_wait_tip	; wait for tip to clear
   2660 FFFC1AF2 6100 FF48                   		bsr		i2c_wait_rx_nack
   2661 FFFC1AF6 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2662 FFFC1AFC 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2663 FFFC1B02 6100 FEF2                   		bsr		i2c_wait_tip	; wait for tip to clear
   2664 FFFC1B06 6100 FF34                   		bsr		i2c_wait_rx_nack
   2665 FFFC1B0A 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2666 FFFC1B0E 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2667 FFFC1B14 6100 FEE0                   		bsr		i2c_wait_tip	; wait for tip to clear
   2668 FFFC1B18 6100 FF22                   		bsr		i2c_wait_rx_nack
   2669 FFFC1B1C 3D41 0006                   		move.w	d1,I2C_TXR(a6)		; send data
   2670 FFFC1B20 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set STO, WR
   2671 FFFC1B26 6100 FECE                   		bsr		i2c_wait_tip	; wait for tip to clear
   2672 FFFC1B2A 6100 FF10                   		bsr		i2c_wait_rx_nack
   2673 FFFC1B2E 4E75                        		rts
                                             
   2675 FFFC1B30                             audio_tbl1:
   2676 FFFC1B30 0000 007D 0000 000C         		dc.w	$00,$7D,$00,$0C,$20,$01
   2677 FFFC1B38 0020 0001                   
                                             ; a0
                                             ;
   2680 FFFC1B3C                             audio_write_reg6:
   2681 FFFC1B3C 41F9 FFFC 1B30              		lea		audio_tbl1,a0
   2682 FFFC1B42 4DF9 FFDC 0E00              		lea		I2C,a6				
   2683 FFFC1B48 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2684 FFFC1B4E 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2685 FFFC1B54 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2686 FFFC1B5A 6100 FE9A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2687 FFFC1B5E 6100 FEDC                   		bsr		i2c_wait_rx_nack
   2688 FFFC1B62 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2689 FFFC1B68 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2690 FFFC1B6E 6100 FE86                   		bsr		i2c_wait_tip	; wait for tip to clear
   2691 FFFC1B72 6100 FEC8                   		bsr		i2c_wait_rx_nack
                                             
   2693 FFFC1B76 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2694 FFFC1B7A 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2695 FFFC1B80 6100 FE74                   		bsr		i2c_wait_tip	; wait for tip to clear
   2696 FFFC1B84 6100 FEB6                   		bsr		i2c_wait_rx_nack
                                             		
   2698 FFFC1B88 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #0
   2699 FFFC1B8C 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 46
bootrom.asm
   2700 FFFC1B92 6100 FE62                   		bsr		i2c_wait_tip	; wait for tip to clear
   2701 FFFC1B96 6100 FEA4                   		bsr		i2c_wait_rx_nack
                                             
   2703 FFFC1B9A 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #1
   2704 FFFC1B9E 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2705 FFFC1BA4 6100 FE50                   		bsr		i2c_wait_tip	; wait for tip to clear
   2706 FFFC1BA8 6100 FE92                   		bsr		i2c_wait_rx_nack
                                             
   2708 FFFC1BAC 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #2
   2709 FFFC1BB0 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2710 FFFC1BB6 6100 FE3E                   		bsr		i2c_wait_tip	; wait for tip to clear
   2711 FFFC1BBA 6100 FE80                   		bsr		i2c_wait_rx_nack
                                             
   2713 FFFC1BBE 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #3
   2714 FFFC1BC2 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2715 FFFC1BC8 6100 FE2C                   		bsr		i2c_wait_tip	; wait for tip to clear
   2716 FFFC1BCC 6100 FE6E                   		bsr		i2c_wait_rx_nack
                                             
   2718 FFFC1BD0 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #4
   2719 FFFC1BD4 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2720 FFFC1BDA 6100 FE1A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2721 FFFC1BDE 6100 FE5C                   		bsr		i2c_wait_rx_nack
                                             
   2723 FFFC1BE2 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #5
   2724 FFFC1BE6 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set WR, STO
   2725 FFFC1BEC 6100 FE08                   		bsr		i2c_wait_tip		; wait for tip to clear
   2726 FFFC1BF0 6100 FE4A                   		bsr		i2c_wait_rx_nack
   2727 FFFC1BF4 4E75                        		rts
                                             
   2729 FFFC1BF6                             set_hp_output:
   2730 FFFC1BF6 7021                        		moveq	#$21,d0				;
   2731 FFFC1BF8 7200                        		moveq	#0,d1
   2732 FFFC1BFA 6100 FEDA                   		bsr		audio_write_reg
   2733 FFFC1BFE 7020                        		moveq	#$20,d0				;
   2734 FFFC1C00 6100 FED4                   		bsr		audio_write_reg
   2735 FFFC1C04 7023                        		moveq	#$23,d0
   2736 FFFC1C06 323C 00E7                   		move.w	#$E7,d1		
   2737 FFFC1C0A 6100 FECA                   		bsr		audio_write_reg
   2738 FFFC1C0E 7024                        		moveq	#$24,d0
   2739 FFFC1C10 323C 00E7                   		move.w	#$E7,d1		
   2740 FFFC1C14 6100 FEC0                   		bsr		audio_write_reg
   2741 FFFC1C18 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Realtime clock routines
                                             ;===============================================================================
                                             
   2747 FFFC1C1A                             rtc_read:
   2748 FFFC1C1A 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2749 FFFC1C20 4BF9 0001 0600              		lea		RTCBuf,a5
   2750 FFFC1C26 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2751 FFFC1C2C 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2752 FFFC1C30 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2753 FFFC1C34 6100 FDD0                   		bsr		i2c_wr_cmd
   2754 FFFC1C38 4A00                        		tst.b	d0
   2755 FFFC1C3A 6B72                        		bmi		.rxerr
   2756 FFFC1C3C 303C 0000                   		move.w	#$00,d0				; address zero
   2757 FFFC1C40 323C 0010                   		move.w	#$10,d1				; wr bit
   2758 FFFC1C44 6100 FDC0                   		bsr		i2c_wr_cmd
   2759 FFFC1C48 4A00                        		tst.b	d0
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 47
bootrom.asm
   2760 FFFC1C4A 6B62                        		bmi		.rxerr
   2761 FFFC1C4C 303C 00DF                   		move.w	#$DF,d0				; read address, read op
   2762 FFFC1C50 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2763 FFFC1C54 6100 FDB0                   		bsr		i2c_wr_cmd
   2764 FFFC1C58 4A00                        		tst.b	d0
   2765 FFFC1C5A 6B52                        		bmi		.rxerr
                                             		
   2767 FFFC1C5C 343C 0020                   		move.w	#$20,d2
   2768 FFFC1C60                             .0001:
   2769 FFFC1C60 3D7C 0020 0008              		move.w	#$20,I2C_CMD(a6)	; rd bit
   2770 FFFC1C66 6100 FD8E                   		bsr		i2c_wait_tip
   2771 FFFC1C6A 6100 FDD0                   		bsr		i2c_wait_rx_nack
   2772 FFFC1C6E 302E 000A                   		move.w	I2C_STAT(a6),d0
   2773 FFFC1C72 4A00                        		tst.b	d0
   2774 FFFC1C74 6B38                        		bmi		.rxerr
   2775 FFFC1C76 302E 0006                   		move.w	I2C_RXR(a6),d0
   2776 FFFC1C7A 1B80 2000                   		move.b	d0,(a5,d2.w)
   2777 FFFC1C7E 5242                        		add.w	#1,d2
   2778 FFFC1C80 B47C 005F                   		cmp.w	#$5F,d2
   2779 FFFC1C84 66DA                        		bne		.0001
   2780 FFFC1C86 3D7C 0068 0008              		move.w	#$68,I2C_CMD(a6)	; STO, rd bit + nack
   2781 FFFC1C8C 6100 FD68                   		bsr		i2c_wait_tip
   2782 FFFC1C90 6100 FDAA                   		bsr		i2c_wait_rx_nack
   2783 FFFC1C94 302E 000A                   		move.w	I2C_STAT(a6),d0
   2784 FFFC1C98 4A00                        		tst.b	d0
   2785 FFFC1C9A 6B12                        		bmi		.rxerr
   2786 FFFC1C9C 302E 0006                   		move.w	I2C_RXR(a6),d0
   2787 FFFC1CA0 1B80 2000                   		move.b	d0,(a5,d2.w)
   2788 FFFC1CA4 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2789 FFFC1CAA 7000                        		moveq	#0,d0
   2790 FFFC1CAC 4E75                        		rts
   2791 FFFC1CAE                             .rxerr:
   2792 FFFC1CAE 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2793 FFFC1CB4 4E75                        		rts
                                             
   2795 FFFC1CB6                             rtc_write:
   2796 FFFC1CB6 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2797 FFFC1CBC 4BF9 0001 0600              		lea		RTCBuf,a5
   2798 FFFC1CC2 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2799 FFFC1CC8 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2800 FFFC1CCC 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2801 FFFC1CD0 6100 FD34                   		bsr		i2c_wr_cmd
   2802 FFFC1CD4 4A00                        		tst.b	d0
   2803 FFFC1CD6 6B46                        		bmi		.rxerr
   2804 FFFC1CD8 303C 0000                   		move.w	#$00,d0				; address zero
   2805 FFFC1CDC 323C 0010                   		move.w	#$10,d1				; wr bit
   2806 FFFC1CE0 6100 FD24                   		bsr		i2c_wr_cmd
   2807 FFFC1CE4 4A00                        		tst.b	d0
   2808 FFFC1CE6 6B36                        		bmi		.rxerr
   2809 FFFC1CE8 343C 0020                   		move.w	#$20,d2
   2810 FFFC1CEC                             .0001:
   2811 FFFC1CEC 1035 2000                   		move.b	(a5,d2.w),d0
   2812 FFFC1CF0 323C 0010                   		move.w	#$10,d1
   2813 FFFC1CF4 6100 FD10                   		bsr		i2c_wr_cmd
   2814 FFFC1CF8 4A00                        		tst.b	d0
   2815 FFFC1CFA 6B22                        		bmi		.rxerr
   2816 FFFC1CFC 5242                        		add.w	#1,d2
   2817 FFFC1CFE B47C 005F                   		cmp.w	#$5F,d2
   2818 FFFC1D02 66E8                        		bne.s	.0001
   2819 FFFC1D04 1035 2000                   		move.b	(a5,d2.w),d0
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 48
bootrom.asm
   2820 FFFC1D08 323C 0050                   		move.w	#$50,d1				; STO, wr bit
   2821 FFFC1D0C 6100 FCF8                   		bsr		i2c_wr_cmd
   2822 FFFC1D10 4A00                        		tst.b	d0
   2823 FFFC1D12 6B0A                        		bmi		.rxerr
   2824 FFFC1D14 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2825 FFFC1D1A 7000                        		moveq	#0,d0
   2826 FFFC1D1C 4E75                        		rts
   2827 FFFC1D1E                             .rxerr:
   2828 FFFC1D1E 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2829 FFFC1D24 4E75                        		rts
                                             
   2831 FFFC1D26                             msgRtcReadFail:
   2832 FFFC1D26 52 54 43 20 72 65 61 64     		dc.b	"RTC read/write failed.",$0D,$0A,$00
   2833 FFFC1D2E 2F 77 72 69 74 65 20 66     
   2834 FFFC1D36 61 69 6C 65 64 2E 0D 0A     
   2835 FFFC1D3E 00                          
                                             
                                             
                                             ;===============================================================================
                                             ; ORGFX routines
                                             ;===============================================================================
                                             
   2842 FFFC1D3F FF                          		align	2
   2843 FFFC1D40                             gfx_wait:
   2844 FFFC1D40 48E7 8004                   		movem.l	d0/a5,-(a7)
   2845 FFFC1D44 4BF9 FFE0 0000              		lea		VDGREG,a5
   2846 FFFC1D4A 2B7C 0000 0004 0700         		move.l	#GFX_STATUS,$700(a5)	; address status register
   2847 FFFC1D52                             .0001:
   2848 FFFC1D52 3B7C 00F3 0708              		move.w	#$F3,$708(a5)		; set control (generate bus access to gfx)
   2849 FFFC1D58 202D 0704                   		move.l	$704(a5),d0			; get status value
   2850 FFFC1D5C 0800 0000                   		btst	#0,d0				; test bit 0
   2851 FFFC1D60 66F0                        		bne.s	.0001
   2852 FFFC1D62 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2853 FFFC1D66 4E75                        		rts
                                             
   2855 FFFC1D68                             gfx_set_400x300:
   2856 FFFC1D68 6100 FFD6                   		bsr		gfx_wait
   2857 FFFC1D6C 4BF9 FFE0 0000              		lea		VDGREG,a5
   2858 FFFC1D72 2B7C 0000 0014 0700         		move.l	#GFX_TARGET_SIZE_X,$700(a5)	; address register
   2859 FFFC1D7A 2B7C 0000 0190 0704         		move.l	#400,$704(a5)				; set data
   2860 FFFC1D82 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2861 FFFC1D88 2B7C 0000 0018 0700         		move.l	#GFX_TARGET_SIZE_Y,$700(a5)	; address register
   2862 FFFC1D90 2B7C 0000 012C 0704         		move.l	#300,$704(a5)				; set data
   2863 FFFC1D98 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2864 FFFC1D9E 4E75                        		rts
                                             
   2866 FFFC1DA0                             gfx_init:
   2867 FFFC1DA0 6100 FF9E                   		bsr		gfx_wait
   2868 FFFC1DA4 4BF9 FFE0 0000              		lea		VDGREG,a5
   2869 FFFC1DAA 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2870 FFFC1DB2 23FC 0000 0000 0001 042C    		move.l	#0,gfx_control_reg_mem
                                             
   2872 FFFC1DBC 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2873 FFFC1DC4 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2874 FFFC1DCA 2B7C 0000 0010 0700         		move.l	#GFX_TARGET_BASE,$700(a5)	; address register
   2875 FFFC1DD2 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2876 FFFC1DD8 4E75                        		rts
                                             
   2878 FFFC1DDA                             gfx_set_color_depth:
   2879 FFFC1DDA 4BF9 FFE0 0000              		lea		VDGREG,a5
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 49
bootrom.asm
   2880 FFFC1DE0 02B9 FFFF FFFD 0001 042C    		and.l	#-3,gfx_control_reg_mem		; mask off 2 LSB (color depth field)
                                             
   2882 FFFC1DEA 00B9 0000 0001 0001 042C    		or.l	#1,gfx_control_reg_mem		; select 16 bpp
                                             
   2884 FFFC1DF4 6100 FF4A                   		bsr		gfx_wait
   2885 FFFC1DF8 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2886 FFFC1E00 2B79 0001 042C 0704         		move.l	gfx_control_reg_mem,$704(a5)
   2887 FFFC1E08 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2888 FFFC1E0E 4E75                        		rts
                                             
   2890 FFFC1E10                             gfx_set_color:
   2891 FFFC1E10 6100 FF2E                   		bsr		gfx_wait
   2892 FFFC1E14 4BF9 FFE0 0000              		lea		VDGREG,a5
   2893 FFFC1E1A 2B7C 0000 0084 0700         		move.l	#GFX_COLOR0,$700(a5)
   2894 FFFC1E22 2B40 0704                   		move.l	d0,$704(a5)
   2895 FFFC1E26 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2896 FFFC1E2C 4E75                        		rts
                                             
   2898 FFFC1E2E                             gfx_line:
   2899 FFFC1E2E 6100 FF10                   		bsr		gfx_wait
   2900 FFFC1E32 4BF9 FFE0 0000              		lea		VDGREG,a5
   2901 FFFC1E38 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2902 FFFC1E40 2B40 0704                   		move.l	d0,$704(a5)
   2903 FFFC1E44 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2904 FFFC1E4A 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2905 FFFC1E52 2B41 0704                   		move.l	d1,$704(a5)
   2906 FFFC1E56 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2907 FFFC1E5C 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2908 FFFC1E64 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2909 FFFC1E6C 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2910 FFFC1E72 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2911 FFFC1E78 0086 0000 0000              		or.l	#GFX_ACTIVE_POINT0,d6
   2912 FFFC1E7E 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2913 FFFC1E80 2B46 0704                   		move.l	d6,$704(a5)
   2914 FFFC1E84 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2915 FFFC1E8A 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2916 FFFC1E92 2B42 0704                   		move.l	d2,$704(a5)
   2917 FFFC1E96 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2918 FFFC1E9C 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2919 FFFC1EA4 2B43 0704                   		move.l	d3,$704(a5)
   2920 FFFC1EA8 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2921 FFFC1EAE 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2922 FFFC1EB6 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2923 FFFC1EBE 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2924 FFFC1EC4 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2925 FFFC1ECA 0086 0001 0000              		or.l	#GFX_ACTIVE_POINT1,d6
   2926 FFFC1ED0 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2927 FFFC1ED2 2B46 0704                   		move.l	d6,$704(a5)
   2928 FFFC1ED6 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2929 FFFC1EDC 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2930 FFFC1EE2 0086 0000 0200              		or.l	#GFX_LINE,d6
   2931 FFFC1EE8 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2932 FFFC1EEA 2B46 0704                   		move.l	d6,$704(a5)
   2933 FFFC1EEE 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2934 FFFC1EF4 4E75                        		rts
                                             
   2936 FFFC1EF6                             gfx_demo:
   2937 FFFC1EF6 6100 FEA8                   		bsr		gfx_init
   2938 FFFC1EFA 6100 FE6C                   		bsr		gfx_set_400x300
   2939 FFFC1EFE                             .0001:
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 50
bootrom.asm
   2940 FFFC1EFE 4DF9 FFDC 0000              		lea		$FFDC0000,a6	; set I/O base
   2941 FFFC1F04 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2942 FFFC1F08 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2943 FFFC1F0A 4840                        		swap	d0				; and bits 16 to 24 for x0
   2944 FFFC1F0C 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2945 FFFC1F10 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2946 FFFC1F14 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2947 FFFC1F18 242E 0C00                   		move.l	$0C00(a6),d2
   2948 FFFC1F1C 3602                        		move.w	d2,d3
   2949 FFFC1F1E 4842                        		swap	d2
   2950 FFFC1F20 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2951 FFFC1F24 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2952 FFFC1F28 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2953 FFFC1F2C 282E 0C00                   		move.l	$0C00(a6),d4
   2954 FFFC1F30 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2955 FFFC1F34 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2956 FFFC1F38 2C00                        		move.l	d0,d6
   2957 FFFC1F3A 2004                        		move.l	d4,d0
   2958 FFFC1F3C 6100 FED2                   		bsr		gfx_set_color
   2959 FFFC1F40 2006                        		move.l	d6,d0
   2960 FFFC1F42 6100 FEEA                   		bsr		gfx_line
   2961 FFFC1F46 60B6                        		bra		.0001
                                             
                                             		
                                             ; Randomize the screen	
                                             ;		move.l	#VDGBUF,A0
                                             ;		move.l	#%011011111,D0		; light blue
                                             ;		move.l	#640*512,D1
                                             ;clrscr_loop1:
                                             ;		move.l	$0C00(a6),d0			; get a random number
                                             ;		clr.w	$0C04(a6)				; generate next number
                                             ;		move.w	d0,(a0)+				; store it to the screen
                                             ;		sub.l	#1,d1
                                             ;		bne		clrscr_loop1
                                             
   2975 FFFC1F48                             msg_start:
   2976 FFFC1F48 4E 34 56 20 36 38 6B 20     	dc.b	"N4V 68k System Starting",0
   2977 FFFC1F50 53 79 73 74 65 6D 20 53     
   2978 FFFC1F58 74 61 72 74 69 6E 67 00     
                                             
                                             
                                             ;===============================================================================
                                             ; MMU
                                             ;===============================================================================
                                             		align	2
   2985 FFFC1F60                             mmu_init:
   2986 FFFC1F60 33FC 1010 FFDC 0600         		move.w	#$1010,leds
   2987 FFFC1F68 223C 0002 0000              		move.l	#131072,d1					; count of addresses to set map
   2988 FFFC1F6E 207C 1FF4 0000              		movea.l	#$1FF40000,a0				; base of page tables
   2989 FFFC1F74 7007                        		moveq	#7,d0						; start at page zero, read,write,execute
   2990 FFFC1F76                             .0001:
   2991 FFFC1F76 20C0                        		move.l	d0,(a0)+					; update page table entry
   2992 FFFC1F78 0680 0000 1000              		add.l	#$1000,d0
   2993 FFFC1F7E 5381                        		sub.l	#1,d1
   2994 FFFC1F80 66F4                        		bne.s	.0001
                                             	
                                             		; Setup the page directory
                                             		; There are only 128 entries to be set, but all entries must be
                                             		; setup because there's no page faulting on not present. All the
                                             		; entries must point to present pages. So the part of the address
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 51
bootrom.asm
                                             		; space that isn't present is setup to point to a dummy page
                                             		; table.
                                             
   3003 FFFC1F82 33FC 1111 FFDC 0600         		move.w	#$1111,leds
   3004 FFFC1F8A 323C 0400                   		move.w	#1024,d1			; 1024 entries to setup
   3005 FFFC1F8E 207C 1FFF E000              		move.l	#$1FFFE000,a0		; page table for not present entries
   3006 FFFC1F94 203C 1FFF D006              		move.l	#$1FFFD006,d0		; point all entries for not present pages to $1FFFD000
   3007 FFFC1F9A                             .0003:
   3008 FFFC1F9A 20C0                        		move.l	d0,(a0)+
   3009 FFFC1F9C 51C9 FFFC                   		dbra	d1,.0003
                                             
   3011 FFFC1FA0 33FC 1212 FFDC 0600         		move.w	#$1212,leds
   3012 FFFC1FA8 747F                        		move.l	#127,d2
   3013 FFFC1FAA 207C 1FFF F000              		movea.l	#$1FFFF000,a0		; a0 = page directory address
   3014 FFFC1FB0 223C 1FFF E000              		move.l	#$1FFFE000,d1		; point to not present page table
   3015 FFFC1FB6 203C 1FF4 0007              		move.l	#$1FF40007,d0
   3016 FFFC1FBC                             .0002:
   3017 FFFC1FBC 2141 0200                   		move.l	d1,$0200(a0)		; 7/8 of memory isn't available
   3018 FFFC1FC0 2141 0400                   		move.l	d1,$0400(a0)
   3019 FFFC1FC4 2141 0600                   		move.l	d1,$0600(a0)
   3020 FFFC1FC8 2141 0800                   		move.l	d1,$0800(a0)
   3021 FFFC1FCC 2141 0A00                   		move.l	d1,$0A00(a0)
   3022 FFFC1FD0 2141 0C00                   		move.l	d1,$0C00(a0)
   3023 FFFC1FD4 2141 0E00                   		move.l	d1,$0E00(a0)
   3024 FFFC1FD8 20C0                        		move.l	d0,(a0)+
   3025 FFFC1FDA 0680 0000 1000              		add.l	#$1000,d0
   3026 FFFC1FE0 51CA FFDA                   		dbra	d2,.0002
   3027 FFFC1FE4 33FC 1919 FFDC 0600         		move.w	#$1919,leds
   3028 FFFC1FEC 33FC 0000 FFFF FFF6         		move.w	#$00,$FFFFFFF6				; set asid
   3029 FFFC1FF4 23F9 1FFF F000 FFFF FFF0    		move.l	$1FFFF000,$FFFFFFF0			; set page directory address, enable
                                             
   3031 FFFC1FFE 4E75                        		rts
                                             		
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   3038 FFFC2000                             font8:
   3039 FFFC2000 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $00
                                             
   3041 FFFC2008 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3043 FFFC2010 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3045 FFFC2018 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3047 FFFC2020 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $04
                                             
   3049 FFFC2028 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3051 FFFC2030 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3053 FFFC2038 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3055 FFFC2040 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $08
                                             
   3057 FFFC2048 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3059 FFFC2050 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 52
bootrom.asm
                                             
   3061 FFFC2058 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3063 FFFC2060 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $0C
                                             
   3065 FFFC2068 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3067 FFFC2070 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3069 FFFC2078 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3071 FFFC2080 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $10
                                             
   3073 FFFC2088 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3075 FFFC2090 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3077 FFFC2098 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3079 FFFC20A0 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $14
                                             
   3081 FFFC20A8 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3083 FFFC20B0 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3085 FFFC20B8 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3087 FFFC20C0 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $18
                                             
   3089 FFFC20C8 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3091 FFFC20D0 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3093 FFFC20D8 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3095 FFFC20E0 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $1C
                                             
   3097 FFFC20E8 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3099 FFFC20F0 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3101 FFFC20F8 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3103 FFFC2100 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; SPACE
                                             
   3105 FFFC2108 18 18 18 18 18 00 18 00     	dc.b	$18,$18,$18,$18,$18,$00,$18,$00	; !
                                             
   3107 FFFC2110 6C 6C 00 00 00 00 00 00     	dc.b	$6C,$6C,$00,$00,$00,$00,$00,$00	; "
                                             
   3109 FFFC2118 6C 6C FE 6C FE 6C 6C 00     	dc.b	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00	; #
                                             
   3111 FFFC2120 18 3E 60 3C 06 7C 18 00     	dc.b	$18,$3E,$60,$3C,$06,$7C,$18,$00	; $
                                             
   3113 FFFC2128 00 66 AC D8 36 6A CC 00     	dc.b	$00,$66,$AC,$D8,$36,$6A,$CC,$00	; %
                                             
   3115 FFFC2130 38 6C 68 76 DC CE 7B 00     	dc.b	$38,$6C,$68,$76,$DC,$CE,$7B,$00	; &
                                             
   3117 FFFC2138 18 18 30 00 00 00 00 00     	dc.b	$18,$18,$30,$00,$00,$00,$00,$00	; '
                                             
   3119 FFFC2140 0C 18 30 30 30 18 0C 00     	dc.b	$0C,$18,$30,$30,$30,$18,$0C,$00	; (
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 53
bootrom.asm
                                             
   3121 FFFC2148 30 18 0C 0C 0C 18 30 00     	dc.b	$30,$18,$0C,$0C,$0C,$18,$30,$00	; )
                                             
   3123 FFFC2150 00 66 3C FF 3C 66 00 00     	dc.b	$00,$66,$3C,$FF,$3C,$66,$00,$00	; *
                                             
   3125 FFFC2158 00 18 18 7E 18 18 00 00     	dc.b	$00,$18,$18,$7E,$18,$18,$00,$00	; +
                                             
   3127 FFFC2160 00 00 00 00 00 18 18 30     	dc.b	$00,$00,$00,$00,$00,$18,$18,$30	; ,
                                             
   3129 FFFC2168 00 00 00 7E 00 00 00 00     	dc.b	$00,$00,$00,$7E,$00,$00,$00,$00	; -
                                             
   3131 FFFC2170 00 00 00 00 00 18 18 00     	dc.b	$00,$00,$00,$00,$00,$18,$18,$00	; .
                                             
   3133 FFFC2178 03 06 0C 18 30 60 C0 00     	dc.b	$03,$06,$0C,$18,$30,$60,$C0,$00	; /
                                             
   3135 FFFC2180 3C 66 6E 7E 76 66 3C 00     	dc.b	$3C,$66,$6E,$7E,$76,$66,$3C,$00	; 0
                                             
   3137 FFFC2188 18 38 78 18 18 18 18 00     	dc.b	$18,$38,$78,$18,$18,$18,$18,$00	; 1
                                             
   3139 FFFC2190 3C 66 06 0C 18 30 7E 00     	dc.b	$3C,$66,$06,$0C,$18,$30,$7E,$00	; 2
                                             
   3141 FFFC2198 3C 66 06 1C 06 66 3C 00     	dc.b	$3C,$66,$06,$1C,$06,$66,$3C,$00	; 3
                                             
   3143 FFFC21A0 1C 3C 6C CC FE 0C 0C 00     	dc.b	$1C,$3C,$6C,$CC,$FE,$0C,$0C,$00	; 4
                                             
   3145 FFFC21A8 7E 60 7C 06 06 66 3C 00     	dc.b	$7E,$60,$7C,$06,$06,$66,$3C,$00	; 5
                                             
   3147 FFFC21B0 1C 30 60 7C 66 66 3C 00     	dc.b	$1C,$30,$60,$7C,$66,$66,$3C,$00	; 6
                                             
   3149 FFFC21B8 7E 06 06 0C 18 18 18 00     	dc.b	$7E,$06,$06,$0C,$18,$18,$18,$00	; 7
                                             
   3151 FFFC21C0 3C 66 66 3C 66 66 3C 00     	dc.b	$3C,$66,$66,$3C,$66,$66,$3C,$00	; 8
                                             
   3153 FFFC21C8 3C 66 66 3E 06 0C 38 00     	dc.b	$3C,$66,$66,$3E,$06,$0C,$38,$00	; 9
                                             
   3155 FFFC21D0 00 18 18 00 00 18 18 00     	dc.b	$00,$18,$18,$00,$00,$18,$18,$00	; :
                                             
   3157 FFFC21D8 00 18 18 00 00 18 18 30     	dc.b	$00,$18,$18,$00,$00,$18,$18,$30	; ;
                                             
   3159 FFFC21E0 00 06 18 60 18 06 00 00     	dc.b	$00,$06,$18,$60,$18,$06,$00,$00	; <
                                             
   3161 FFFC21E8 00 00 7E 00 7E 00 00 00     	dc.b	$00,$00,$7E,$00,$7E,$00,$00,$00	; =
                                             
   3163 FFFC21F0 00 60 18 06 18 60 00 00     	dc.b	$00,$60,$18,$06,$18,$60,$00,$00	; >
                                             
   3165 FFFC21F8 3C 66 06 0C 18 00 18 00     	dc.b	$3C,$66,$06,$0C,$18,$00,$18,$00	; ?
                                             
   3167 FFFC2200 7C C6 DE D6 DE C0 78 00     	dc.b	$7C,$C6,$DE,$D6,$DE,$C0,$78,$00	; @
                                             
   3169 FFFC2208 3C 66 66 7E 66 66 66 00     	dc.b	$3C,$66,$66,$7E,$66,$66,$66,$00	; A
                                             
   3171 FFFC2210 7C 66 66 7C 66 66 7C 00     	dc.b	$7C,$66,$66,$7C,$66,$66,$7C,$00	; B
                                             
   3173 FFFC2218 1E 30 60 60 60 30 1E 00     	dc.b	$1E,$30,$60,$60,$60,$30,$1E,$00	; C
                                             
   3175 FFFC2220 78 6C 66 66 66 6C 78 00     	dc.b	$78,$6C,$66,$66,$66,$6C,$78,$00	; D
                                             
   3177 FFFC2228 7E 60 60 78 60 60 7E 00     	dc.b	$7E,$60,$60,$78,$60,$60,$7E,$00	; E
                                             
   3179 FFFC2230 7E 60 60 78 60 60 60 00     	dc.b	$7E,$60,$60,$78,$60,$60,$60,$00	; F
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 54
bootrom.asm
                                             
   3181 FFFC2238 3C 66 60 6E 66 66 3E 00     	dc.b	$3C,$66,$60,$6E,$66,$66,$3E,$00	; G
                                             
   3183 FFFC2240 66 66 66 7E 66 66 66 00     	dc.b	$66,$66,$66,$7E,$66,$66,$66,$00	; H
                                             
   3185 FFFC2248 3C 18 18 18 18 18 3C 00     	dc.b	$3C,$18,$18,$18,$18,$18,$3C,$00	; I
                                             
   3187 FFFC2250 06 06 06 06 06 66 3C 00     	dc.b	$06,$06,$06,$06,$06,$66,$3C,$00	; J
                                             
   3189 FFFC2258 C6 CC D8 F0 D8 CC C6 00     	dc.b	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00	; K
                                             
   3191 FFFC2260 60 60 60 60 60 60 7E 00     	dc.b	$60,$60,$60,$60,$60,$60,$7E,$00	; L
                                             
   3193 FFFC2268 C6 EE FE D6 C6 C6 C6 00     	dc.b	$C6,$EE,$FE,$D6,$C6,$C6,$C6,$00	; M
                                             
   3195 FFFC2270 C6 E6 F6 DE CE C6 C6 00     	dc.b	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00	; N
                                             
   3197 FFFC2278 3C 66 66 66 66 66 3C 00     	dc.b	$3C,$66,$66,$66,$66,$66,$3C,$00	; O
                                             
   3199 FFFC2280 7C 66 66 7C 60 60 60 00     	dc.b	$7C,$66,$66,$7C,$60,$60,$60,$00	; P
                                             
   3201 FFFC2288 78 CC CC CC CC DC 7E 00     	dc.b	$78,$CC,$CC,$CC,$CC,$DC,$7E,$00	; Q
                                             
   3203 FFFC2290 7C 66 66 7C 6C 66 66 00     	dc.b	$7C,$66,$66,$7C,$6C,$66,$66,$00	; R
                                             
   3205 FFFC2298 3C 66 70 3C 0E 66 3C 00     	dc.b	$3C,$66,$70,$3C,$0E,$66,$3C,$00	; S
                                             
   3207 FFFC22A0 7E 18 18 18 18 18 18 00     	dc.b	$7E,$18,$18,$18,$18,$18,$18,$00	; T
                                             
   3209 FFFC22A8 66 66 66 66 66 66 3C 00     	dc.b	$66,$66,$66,$66,$66,$66,$3C,$00	; U
                                             
   3211 FFFC22B0 66 66 66 66 3C 3C 18 00     	dc.b	$66,$66,$66,$66,$3C,$3C,$18,$00	; V
                                             
   3213 FFFC22B8 C6 C6 C6 D6 FE EE C6 00     	dc.b	$C6,$C6,$C6,$D6,$FE,$EE,$C6,$00	; W
                                             
   3215 FFFC22C0 C3 66 3C 18 3C 66 C3 00     	dc.b	$C3,$66,$3C,$18,$3C,$66,$C3,$00	; X
                                             
   3217 FFFC22C8 C3 66 3C 18 18 18 18 00     	dc.b	$C3,$66,$3C,$18,$18,$18,$18,$00	; Y
                                             
   3219 FFFC22D0 FE 0C 18 30 60 C0 FE 00     	dc.b	$FE,$0C,$18,$30,$60,$C0,$FE,$00	; Z
                                             
   3221 FFFC22D8 3C 30 30 30 30 30 3C 00     	dc.b	$3C,$30,$30,$30,$30,$30,$3C,$00	; [
                                             
   3223 FFFC22E0 C0 60 30 18 0C 06 03 00     	dc.b	$C0,$60,$30,$18,$0C,$06,$03,$00	; \
                                             
   3225 FFFC22E8 3C 0C 0C 0C 0C 0C 3C 00     	dc.b	$3C,$0C,$0C,$0C,$0C,$0C,$3C,$00	; ]
                                             
   3227 FFFC22F0 10 38 6C C6 00 00 00 00     	dc.b	$10,$38,$6C,$C6,$00,$00,$00,$00	; ^
                                             
   3229 FFFC22F8 00 00 00 00 00 00 00 FE     	dc.b	$00,$00,$00,$00,$00,$00,$00,$FE	; _
                                             
   3231 FFFC2300 18 18 0C 00 00 00 00 00     	dc.b	$18,$18,$0C,$00,$00,$00,$00,$00	; `
                                             
   3233 FFFC2308 00 00 3C 06 3E 66 3E 00     	dc.b	$00,$00,$3C,$06,$3E,$66,$3E,$00	; a
                                             
   3235 FFFC2310 60 60 7C 66 66 66 7C 00     	dc.b	$60,$60,$7C,$66,$66,$66,$7C,$00	; b
                                             
   3237 FFFC2318 00 00 3C 60 60 60 3C 00     	dc.b	$00,$00,$3C,$60,$60,$60,$3C,$00	; c
                                             
   3239 FFFC2320 06 06 3E 66 66 66 3E 00     	dc.b	$06,$06,$3E,$66,$66,$66,$3E,$00	; d
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 55
bootrom.asm
                                             
   3241 FFFC2328 00 00 3C 66 7E 60 3C 00     	dc.b	$00,$00,$3C,$66,$7E,$60,$3C,$00	; e
                                             
   3243 FFFC2330 1C 30 7C 30 30 30 30 00     	dc.b	$1C,$30,$7C,$30,$30,$30,$30,$00	; f
                                             
   3245 FFFC2338 00 00 3E 66 66 3E 06 3C     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$3C	; g
                                             
   3247 FFFC2340 60 60 7C 66 66 66 66 00     	dc.b	$60,$60,$7C,$66,$66,$66,$66,$00	; h
                                             
   3249 FFFC2348 18 00 18 18 18 18 0C 00     	dc.b	$18,$00,$18,$18,$18,$18,$0C,$00	; i
                                             
   3251 FFFC2350 0C 00 0C 0C 0C 0C 0C 78     	dc.b	$0C,$00,$0C,$0C,$0C,$0C,$0C,$78	; j
                                             
   3253 FFFC2358 60 60 66 6C 78 6C 66 00     	dc.b	$60,$60,$66,$6C,$78,$6C,$66,$00	; k
                                             
   3255 FFFC2360 18 18 18 18 18 18 0C 00     	dc.b	$18,$18,$18,$18,$18,$18,$0C,$00	; l
                                             
   3257 FFFC2368 00 00 EC FE D6 C6 C6 00     	dc.b	$00,$00,$EC,$FE,$D6,$C6,$C6,$00	; m
                                             
   3259 FFFC2370 00 00 7C 66 66 66 66 00     	dc.b	$00,$00,$7C,$66,$66,$66,$66,$00	; n
                                             
   3261 FFFC2378 00 00 3C 66 66 66 3C 00     	dc.b	$00,$00,$3C,$66,$66,$66,$3C,$00	; o
                                             
   3263 FFFC2380 00 00 7C 66 66 7C 60 60     	dc.b	$00,$00,$7C,$66,$66,$7C,$60,$60	; p
                                             
   3265 FFFC2388 00 00 3E 66 66 3E 06 06     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$06	; q
                                             
   3267 FFFC2390 00 00 7C 66 60 60 60 00     	dc.b	$00,$00,$7C,$66,$60,$60,$60,$00	; r
                                             
   3269 FFFC2398 00 00 3C 60 3C 06 7C 00     	dc.b	$00,$00,$3C,$60,$3C,$06,$7C,$00	; s
                                             
   3271 FFFC23A0 30 30 7C 30 30 30 1C 00     	dc.b	$30,$30,$7C,$30,$30,$30,$1C,$00	; t
                                             
   3273 FFFC23A8 00 00 66 66 66 66 3E 00     	dc.b	$00,$00,$66,$66,$66,$66,$3E,$00	; u
                                             
   3275 FFFC23B0 00 00 66 66 66 3C 18 00     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$00	; v
                                             
   3277 FFFC23B8 00 00 C6 C6 D6 FE 6C 00     	dc.b	$00,$00,$C6,$C6,$D6,$FE,$6C,$00	; w
                                             
   3279 FFFC23C0 00 00 C6 6C 38 6C C6 00     	dc.b	$00,$00,$C6,$6C,$38,$6C,$C6,$00	; x
                                             
   3281 FFFC23C8 00 00 66 66 66 3C 18 30     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$30	; y
                                             
   3283 FFFC23D0 00 00 7E 0C 18 30 7E 00     	dc.b	$00,$00,$7E,$0C,$18,$30,$7E,$00	; z
                                             
   3285 FFFC23D8 0E 18 18 70 18 18 0E 00     	dc.b	$0E,$18,$18,$70,$18,$18,$0E,$00	; {
                                             
   3287 FFFC23E0 18 18 18 18 18 18 18 00     	dc.b	$18,$18,$18,$18,$18,$18,$18,$00	; |
                                             
   3289 FFFC23E8 70 18 18 0E 18 18 70 00     	dc.b	$70,$18,$18,$0E,$18,$18,$70,$00	; }
                                             
   3291 FFFC23F0 72 9C 00 00 00 00 00 00     	dc.b	$72,$9C,$00,$00,$00,$00,$00,$00	; ~
                                             
   3293 FFFC23F8 FE FE FE FE FE FE FE 00     	dc.b	$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00	; 
                                             
                                             
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 1
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm

                                             ;*****************************************************************
                                             ;								 *
                                             ;		Tiny BASIC for the Motorola MC68000		 *
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 2
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;								 *
                                             ; Derived from Palo Alto Tiny BASIC as published in the May 1976 *
                                             ; issue of Dr. Dobb's Journal.  Adapted to the 68000 by:         *
                                             ;	Gordon Brandly						 *
                                             ;	12147 - 51 Street					 *
                                             ;	Edmonton AB  T5W 3G8					 *
                                             ;	Canada							 *
                                             ;	(updated mailing address for 1996)			 *
                                             ;								 *
                                             ; This version is for MEX68KECB Educational Computer Board I/O.  *
                                             ;								 *
                                             ;*****************************************************************
                                             ;    Copyright (C) 1984 by Gordon Brandly. This program may be	 *
                                             ;    freely distributed for personal use only. All commercial	 *
                                             ;		       rights are reserved.			 *
                                             ;*****************************************************************
                                             
                                             ; Vers. 1.0  1984/7/17	- Original version by Gordon Brandly
                                             ;	1.1  1984/12/9	- Addition of '$' print term by Marvin Lipford
                                             ;	1.2  1985/4/9	- Bug fix in multiply routine by Rick Murray
                                             
                                             ;	OPT	FRS,BRS 	forward ref.'s & branches default to short
                                             
                                             CR	EQU	0x0D		;ASCII equates
                                             LF	EQU	0x0A
                                             TAB	EQU	0x09
                                             CTRLC	EQU	0x03
                                             CTRLH	EQU	0x08
                                             CTRLS	EQU	0x13
                                             CTRLX	EQU	0x18
                                             
                                             BUFLEN	EQU	80	;	length of keyboard input buffer
                                             
                                             ;*
                                             ;* Internal variables follow:
                                             ;*
                                             	BSS
                                             	ORG		0x600
   3338 00000600                             RANPNT:
   3339 00000600                             	DC.L	START	;	random number pointer
   3340 00000604                             CURRNT:
   3341 00000604                             	DC.L	1		;Current line pointer
   3342 00000608                             STKGOS:
   3343 00000608                             	DC.L	1		;Saves stack pointer in 'GOSUB'
   3344 0000060C                             STKINP:
   3345 0000060C                             	DC.L	1		;Saves stack pointer during 'INPUT'
   3346 00000610                             LOPVAR:
   3347 00000610                             	DC.L	1		;'FOR' loop save area
   3348 00000614                             LOPINC:
   3349 00000614                             	DC.L	1		;increment
   3350 00000618                             LOPLMT:
   3351 00000618                             	DC.L	1		;limit
   3352 0000061C                             LOPLN:
   3353 0000061C                             	DC.L	1		;line number
   3354 00000620                             LOPPT:
   3355 00000620                             	DC.L	1		;text pointer
   3356 00000624                             TXTUNF:
   3357 00000624                             	DC.L	1		;points to unfilled text area
   3358 00000628                             VARBGN:
   3359 00000628                             	DC.L	1		;points to variable area
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 3
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3360 0000062C                             STKLMT:
   3361 0000062C                             	DC.L	1		;holds lower limit for stack growth
   3362 00000630                             BUFFER:
   3363 00000630                             	FILL.B	BUFLEN,0x00	;	Keyboard input buffer
                                             
                                             TXT	EQU	$		;Beginning of program area
                                             
                                             	CODE
   3368 FFFC2400 FF FF FF FF FF FF FF FF     	ORG	0xFFFCC000	;
   3369 FFFC2408 FF FF FF FF FF FF FF FF     
   3370 FFFC2410 FF FF FF FF FF FF FF FF     
   3371 FFFC2418 FF FF FF FF FF FF FF FF     
   3372 FFFC2420 FF FF FF FF FF FF FF FF     
   3373 FFFC2428 FF FF FF FF FF FF FF FF     
   3374 FFFC2430 FF FF FF FF FF FF FF FF     
   3375 FFFC2438 FF FF FF FF FF FF FF FF     
   3376 FFFC2440 FF FF FF FF FF FF FF FF     
   3377 FFFC2448 FF FF FF FF FF FF FF FF     
   3378 FFFC2450 FF FF FF FF FF FF FF FF     
   3379 FFFC2458 FF FF FF FF FF FF FF FF     
   3380 FFFC2460 FF FF FF FF FF FF FF FF     
   3381 FFFC2468 FF FF FF FF FF FF FF FF     
   3382 FFFC2470 FF FF FF FF FF FF FF FF     
   3383 FFFC2478 FF FF FF FF FF FF FF FF     
   3384 FFFC2480 FF FF FF FF FF FF FF FF     
   3385 FFFC2488 FF FF FF FF FF FF FF FF     
   3386 FFFC2490 FF FF FF FF FF FF FF FF     
   3387 FFFC2498 FF FF FF FF FF FF FF FF     
   3388 FFFC24A0 FF FF FF FF FF FF FF FF     
   3389 FFFC24A8 FF FF FF FF FF FF FF FF     
   3390 FFFC24B0 FF FF FF FF FF FF FF FF     
   3391 FFFC24B8 FF FF FF FF FF FF FF FF     
   3392 FFFC24C0 FF FF FF FF FF FF FF FF     
   3393 FFFC24C8 FF FF FF FF FF FF FF FF     
   3394 FFFC24D0 FF FF FF FF FF FF FF FF     
   3395 FFFC24D8 FF FF FF FF FF FF FF FF     
   3396 FFFC24E0 FF FF FF FF FF FF FF FF     
   3397 FFFC24E8 FF FF FF FF FF FF FF FF     
   3398 FFFC24F0 FF FF FF FF FF FF FF FF     
   3399 FFFC24F8 FF FF FF FF FF FF FF FF     
   3400 FFFC2500 FF FF FF FF FF FF FF FF     
   3401 FFFC2508 FF FF FF FF FF FF FF FF     
   3402 FFFC2510 FF FF FF FF FF FF FF FF     
   3403 FFFC2518 FF FF FF FF FF FF FF FF     
   3404 FFFC2520 FF FF FF FF FF FF FF FF     
   3405 FFFC2528 FF FF FF FF FF FF FF FF     
   3406 FFFC2530 FF FF FF FF FF FF FF FF     
   3407 FFFC2538 FF FF FF FF FF FF FF FF     
   3408 FFFC2540 FF FF FF FF FF FF FF FF     
   3409 FFFC2548 FF FF FF FF FF FF FF FF     
   3410 FFFC2550 FF FF FF FF FF FF FF FF     
   3411 FFFC2558 FF FF FF FF FF FF FF FF     
   3412 FFFC2560 FF FF FF FF FF FF FF FF     
   3413 FFFC2568 FF FF FF FF FF FF FF FF     
   3414 FFFC2570 FF FF FF FF FF FF FF FF     
   3415 FFFC2578 FF FF FF FF FF FF FF FF     
   3416 FFFC2580 FF FF FF FF FF FF FF FF     
   3417 FFFC2588 FF FF FF FF FF FF FF FF     
   3418 FFFC2590 FF FF FF FF FF FF FF FF     
   3419 FFFC2598 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 4
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3420 FFFC25A0 FF FF FF FF FF FF FF FF     
   3421 FFFC25A8 FF FF FF FF FF FF FF FF     
   3422 FFFC25B0 FF FF FF FF FF FF FF FF     
   3423 FFFC25B8 FF FF FF FF FF FF FF FF     
   3424 FFFC25C0 FF FF FF FF FF FF FF FF     
   3425 FFFC25C8 FF FF FF FF FF FF FF FF     
   3426 FFFC25D0 FF FF FF FF FF FF FF FF     
   3427 FFFC25D8 FF FF FF FF FF FF FF FF     
   3428 FFFC25E0 FF FF FF FF FF FF FF FF     
   3429 FFFC25E8 FF FF FF FF FF FF FF FF     
   3430 FFFC25F0 FF FF FF FF FF FF FF FF     
   3431 FFFC25F8 FF FF FF FF FF FF FF FF     
   3432 FFFC2600 FF FF FF FF FF FF FF FF     
   3433 FFFC2608 FF FF FF FF FF FF FF FF     
   3434 FFFC2610 FF FF FF FF FF FF FF FF     
   3435 FFFC2618 FF FF FF FF FF FF FF FF     
   3436 FFFC2620 FF FF FF FF FF FF FF FF     
   3437 FFFC2628 FF FF FF FF FF FF FF FF     
   3438 FFFC2630 FF FF FF FF FF FF FF FF     
   3439 FFFC2638 FF FF FF FF FF FF FF FF     
   3440 FFFC2640 FF FF FF FF FF FF FF FF     
   3441 FFFC2648 FF FF FF FF FF FF FF FF     
   3442 FFFC2650 FF FF FF FF FF FF FF FF     
   3443 FFFC2658 FF FF FF FF FF FF FF FF     
   3444 FFFC2660 FF FF FF FF FF FF FF FF     
   3445 FFFC2668 FF FF FF FF FF FF FF FF     
   3446 FFFC2670 FF FF FF FF FF FF FF FF     
   3447 FFFC2678 FF FF FF FF FF FF FF FF     
   3448 FFFC2680 FF FF FF FF FF FF FF FF     
   3449 FFFC2688 FF FF FF FF FF FF FF FF     
   3450 FFFC2690 FF FF FF FF FF FF FF FF     
   3451 FFFC2698 FF FF FF FF FF FF FF FF     
   3452 FFFC26A0 FF FF FF FF FF FF FF FF     
   3453 FFFC26A8 FF FF FF FF FF FF FF FF     
   3454 FFFC26B0 FF FF FF FF FF FF FF FF     
   3455 FFFC26B8 FF FF FF FF FF FF FF FF     
   3456 FFFC26C0 FF FF FF FF FF FF FF FF     
   3457 FFFC26C8 FF FF FF FF FF FF FF FF     
   3458 FFFC26D0 FF FF FF FF FF FF FF FF     
   3459 FFFC26D8 FF FF FF FF FF FF FF FF     
   3460 FFFC26E0 FF FF FF FF FF FF FF FF     
   3461 FFFC26E8 FF FF FF FF FF FF FF FF     
   3462 FFFC26F0 FF FF FF FF FF FF FF FF     
   3463 FFFC26F8 FF FF FF FF FF FF FF FF     
   3464 FFFC2700 FF FF FF FF FF FF FF FF     
   3465 FFFC2708 FF FF FF FF FF FF FF FF     
   3466 FFFC2710 FF FF FF FF FF FF FF FF     
   3467 FFFC2718 FF FF FF FF FF FF FF FF     
   3468 FFFC2720 FF FF FF FF FF FF FF FF     
   3469 FFFC2728 FF FF FF FF FF FF FF FF     
   3470 FFFC2730 FF FF FF FF FF FF FF FF     
   3471 FFFC2738 FF FF FF FF FF FF FF FF     
   3472 FFFC2740 FF FF FF FF FF FF FF FF     
   3473 FFFC2748 FF FF FF FF FF FF FF FF     
   3474 FFFC2750 FF FF FF FF FF FF FF FF     
   3475 FFFC2758 FF FF FF FF FF FF FF FF     
   3476 FFFC2760 FF FF FF FF FF FF FF FF     
   3477 FFFC2768 FF FF FF FF FF FF FF FF     
   3478 FFFC2770 FF FF FF FF FF FF FF FF     
   3479 FFFC2778 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 5
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3480 FFFC2780 FF FF FF FF FF FF FF FF     
   3481 FFFC2788 FF FF FF FF FF FF FF FF     
   3482 FFFC2790 FF FF FF FF FF FF FF FF     
   3483 FFFC2798 FF FF FF FF FF FF FF FF     
   3484 FFFC27A0 FF FF FF FF FF FF FF FF     
   3485 FFFC27A8 FF FF FF FF FF FF FF FF     
   3486 FFFC27B0 FF FF FF FF FF FF FF FF     
   3487 FFFC27B8 FF FF FF FF FF FF FF FF     
   3488 FFFC27C0 FF FF FF FF FF FF FF FF     
   3489 FFFC27C8 FF FF FF FF FF FF FF FF     
   3490 FFFC27D0 FF FF FF FF FF FF FF FF     
   3491 FFFC27D8 FF FF FF FF FF FF FF FF     
   3492 FFFC27E0 FF FF FF FF FF FF FF FF     
   3493 FFFC27E8 FF FF FF FF FF FF FF FF     
   3494 FFFC27F0 FF FF FF FF FF FF FF FF     
   3495 FFFC27F8 FF FF FF FF FF FF FF FF     
   3496 FFFC2800 FF FF FF FF FF FF FF FF     
   3497 FFFC2808 FF FF FF FF FF FF FF FF     
   3498 FFFC2810 FF FF FF FF FF FF FF FF     
   3499 FFFC2818 FF FF FF FF FF FF FF FF     
   3500 FFFC2820 FF FF FF FF FF FF FF FF     
   3501 FFFC2828 FF FF FF FF FF FF FF FF     
   3502 FFFC2830 FF FF FF FF FF FF FF FF     
   3503 FFFC2838 FF FF FF FF FF FF FF FF     
   3504 FFFC2840 FF FF FF FF FF FF FF FF     
   3505 FFFC2848 FF FF FF FF FF FF FF FF     
   3506 FFFC2850 FF FF FF FF FF FF FF FF     
   3507 FFFC2858 FF FF FF FF FF FF FF FF     
   3508 FFFC2860 FF FF FF FF FF FF FF FF     
   3509 FFFC2868 FF FF FF FF FF FF FF FF     
   3510 FFFC2870 FF FF FF FF FF FF FF FF     
   3511 FFFC2878 FF FF FF FF FF FF FF FF     
   3512 FFFC2880 FF FF FF FF FF FF FF FF     
   3513 FFFC2888 FF FF FF FF FF FF FF FF     
   3514 FFFC2890 FF FF FF FF FF FF FF FF     
   3515 FFFC2898 FF FF FF FF FF FF FF FF     
   3516 FFFC28A0 FF FF FF FF FF FF FF FF     
   3517 FFFC28A8 FF FF FF FF FF FF FF FF     
   3518 FFFC28B0 FF FF FF FF FF FF FF FF     
   3519 FFFC28B8 FF FF FF FF FF FF FF FF     
   3520 FFFC28C0 FF FF FF FF FF FF FF FF     
   3521 FFFC28C8 FF FF FF FF FF FF FF FF     
   3522 FFFC28D0 FF FF FF FF FF FF FF FF     
   3523 FFFC28D8 FF FF FF FF FF FF FF FF     
   3524 FFFC28E0 FF FF FF FF FF FF FF FF     
   3525 FFFC28E8 FF FF FF FF FF FF FF FF     
   3526 FFFC28F0 FF FF FF FF FF FF FF FF     
   3527 FFFC28F8 FF FF FF FF FF FF FF FF     
   3528 FFFC2900 FF FF FF FF FF FF FF FF     
   3529 FFFC2908 FF FF FF FF FF FF FF FF     
   3530 FFFC2910 FF FF FF FF FF FF FF FF     
   3531 FFFC2918 FF FF FF FF FF FF FF FF     
   3532 FFFC2920 FF FF FF FF FF FF FF FF     
   3533 FFFC2928 FF FF FF FF FF FF FF FF     
   3534 FFFC2930 FF FF FF FF FF FF FF FF     
   3535 FFFC2938 FF FF FF FF FF FF FF FF     
   3536 FFFC2940 FF FF FF FF FF FF FF FF     
   3537 FFFC2948 FF FF FF FF FF FF FF FF     
   3538 FFFC2950 FF FF FF FF FF FF FF FF     
   3539 FFFC2958 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 6
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3540 FFFC2960 FF FF FF FF FF FF FF FF     
   3541 FFFC2968 FF FF FF FF FF FF FF FF     
   3542 FFFC2970 FF FF FF FF FF FF FF FF     
   3543 FFFC2978 FF FF FF FF FF FF FF FF     
   3544 FFFC2980 FF FF FF FF FF FF FF FF     
   3545 FFFC2988 FF FF FF FF FF FF FF FF     
   3546 FFFC2990 FF FF FF FF FF FF FF FF     
   3547 FFFC2998 FF FF FF FF FF FF FF FF     
   3548 FFFC29A0 FF FF FF FF FF FF FF FF     
   3549 FFFC29A8 FF FF FF FF FF FF FF FF     
   3550 FFFC29B0 FF FF FF FF FF FF FF FF     
   3551 FFFC29B8 FF FF FF FF FF FF FF FF     
   3552 FFFC29C0 FF FF FF FF FF FF FF FF     
   3553 FFFC29C8 FF FF FF FF FF FF FF FF     
   3554 FFFC29D0 FF FF FF FF FF FF FF FF     
   3555 FFFC29D8 FF FF FF FF FF FF FF FF     
   3556 FFFC29E0 FF FF FF FF FF FF FF FF     
   3557 FFFC29E8 FF FF FF FF FF FF FF FF     
   3558 FFFC29F0 FF FF FF FF FF FF FF FF     
   3559 FFFC29F8 FF FF FF FF FF FF FF FF     
   3560 FFFC2A00 FF FF FF FF FF FF FF FF     
   3561 FFFC2A08 FF FF FF FF FF FF FF FF     
   3562 FFFC2A10 FF FF FF FF FF FF FF FF     
   3563 FFFC2A18 FF FF FF FF FF FF FF FF     
   3564 FFFC2A20 FF FF FF FF FF FF FF FF     
   3565 FFFC2A28 FF FF FF FF FF FF FF FF     
   3566 FFFC2A30 FF FF FF FF FF FF FF FF     
   3567 FFFC2A38 FF FF FF FF FF FF FF FF     
   3568 FFFC2A40 FF FF FF FF FF FF FF FF     
   3569 FFFC2A48 FF FF FF FF FF FF FF FF     
   3570 FFFC2A50 FF FF FF FF FF FF FF FF     
   3571 FFFC2A58 FF FF FF FF FF FF FF FF     
   3572 FFFC2A60 FF FF FF FF FF FF FF FF     
   3573 FFFC2A68 FF FF FF FF FF FF FF FF     
   3574 FFFC2A70 FF FF FF FF FF FF FF FF     
   3575 FFFC2A78 FF FF FF FF FF FF FF FF     
   3576 FFFC2A80 FF FF FF FF FF FF FF FF     
   3577 FFFC2A88 FF FF FF FF FF FF FF FF     
   3578 FFFC2A90 FF FF FF FF FF FF FF FF     
   3579 FFFC2A98 FF FF FF FF FF FF FF FF     
   3580 FFFC2AA0 FF FF FF FF FF FF FF FF     
   3581 FFFC2AA8 FF FF FF FF FF FF FF FF     
   3582 FFFC2AB0 FF FF FF FF FF FF FF FF     
   3583 FFFC2AB8 FF FF FF FF FF FF FF FF     
   3584 FFFC2AC0 FF FF FF FF FF FF FF FF     
   3585 FFFC2AC8 FF FF FF FF FF FF FF FF     
   3586 FFFC2AD0 FF FF FF FF FF FF FF FF     
   3587 FFFC2AD8 FF FF FF FF FF FF FF FF     
   3588 FFFC2AE0 FF FF FF FF FF FF FF FF     
   3589 FFFC2AE8 FF FF FF FF FF FF FF FF     
   3590 FFFC2AF0 FF FF FF FF FF FF FF FF     
   3591 FFFC2AF8 FF FF FF FF FF FF FF FF     
   3592 FFFC2B00 FF FF FF FF FF FF FF FF     
   3593 FFFC2B08 FF FF FF FF FF FF FF FF     
   3594 FFFC2B10 FF FF FF FF FF FF FF FF     
   3595 FFFC2B18 FF FF FF FF FF FF FF FF     
   3596 FFFC2B20 FF FF FF FF FF FF FF FF     
   3597 FFFC2B28 FF FF FF FF FF FF FF FF     
   3598 FFFC2B30 FF FF FF FF FF FF FF FF     
   3599 FFFC2B38 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 7
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3600 FFFC2B40 FF FF FF FF FF FF FF FF     
   3601 FFFC2B48 FF FF FF FF FF FF FF FF     
   3602 FFFC2B50 FF FF FF FF FF FF FF FF     
   3603 FFFC2B58 FF FF FF FF FF FF FF FF     
   3604 FFFC2B60 FF FF FF FF FF FF FF FF     
   3605 FFFC2B68 FF FF FF FF FF FF FF FF     
   3606 FFFC2B70 FF FF FF FF FF FF FF FF     
   3607 FFFC2B78 FF FF FF FF FF FF FF FF     
   3608 FFFC2B80 FF FF FF FF FF FF FF FF     
   3609 FFFC2B88 FF FF FF FF FF FF FF FF     
   3610 FFFC2B90 FF FF FF FF FF FF FF FF     
   3611 FFFC2B98 FF FF FF FF FF FF FF FF     
   3612 FFFC2BA0 FF FF FF FF FF FF FF FF     
   3613 FFFC2BA8 FF FF FF FF FF FF FF FF     
   3614 FFFC2BB0 FF FF FF FF FF FF FF FF     
   3615 FFFC2BB8 FF FF FF FF FF FF FF FF     
   3616 FFFC2BC0 FF FF FF FF FF FF FF FF     
   3617 FFFC2BC8 FF FF FF FF FF FF FF FF     
   3618 FFFC2BD0 FF FF FF FF FF FF FF FF     
   3619 FFFC2BD8 FF FF FF FF FF FF FF FF     
   3620 FFFC2BE0 FF FF FF FF FF FF FF FF     
   3621 FFFC2BE8 FF FF FF FF FF FF FF FF     
   3622 FFFC2BF0 FF FF FF FF FF FF FF FF     
   3623 FFFC2BF8 FF FF FF FF FF FF FF FF     
   3624 FFFC2C00 FF FF FF FF FF FF FF FF     
   3625 FFFC2C08 FF FF FF FF FF FF FF FF     
   3626 FFFC2C10 FF FF FF FF FF FF FF FF     
   3627 FFFC2C18 FF FF FF FF FF FF FF FF     
   3628 FFFC2C20 FF FF FF FF FF FF FF FF     
   3629 FFFC2C28 FF FF FF FF FF FF FF FF     
   3630 FFFC2C30 FF FF FF FF FF FF FF FF     
   3631 FFFC2C38 FF FF FF FF FF FF FF FF     
   3632 FFFC2C40 FF FF FF FF FF FF FF FF     
   3633 FFFC2C48 FF FF FF FF FF FF FF FF     
   3634 FFFC2C50 FF FF FF FF FF FF FF FF     
   3635 FFFC2C58 FF FF FF FF FF FF FF FF     
   3636 FFFC2C60 FF FF FF FF FF FF FF FF     
   3637 FFFC2C68 FF FF FF FF FF FF FF FF     
   3638 FFFC2C70 FF FF FF FF FF FF FF FF     
   3639 FFFC2C78 FF FF FF FF FF FF FF FF     
   3640 FFFC2C80 FF FF FF FF FF FF FF FF     
   3641 FFFC2C88 FF FF FF FF FF FF FF FF     
   3642 FFFC2C90 FF FF FF FF FF FF FF FF     
   3643 FFFC2C98 FF FF FF FF FF FF FF FF     
   3644 FFFC2CA0 FF FF FF FF FF FF FF FF     
   3645 FFFC2CA8 FF FF FF FF FF FF FF FF     
   3646 FFFC2CB0 FF FF FF FF FF FF FF FF     
   3647 FFFC2CB8 FF FF FF FF FF FF FF FF     
   3648 FFFC2CC0 FF FF FF FF FF FF FF FF     
   3649 FFFC2CC8 FF FF FF FF FF FF FF FF     
   3650 FFFC2CD0 FF FF FF FF FF FF FF FF     
   3651 FFFC2CD8 FF FF FF FF FF FF FF FF     
   3652 FFFC2CE0 FF FF FF FF FF FF FF FF     
   3653 FFFC2CE8 FF FF FF FF FF FF FF FF     
   3654 FFFC2CF0 FF FF FF FF FF FF FF FF     
   3655 FFFC2CF8 FF FF FF FF FF FF FF FF     
   3656 FFFC2D00 FF FF FF FF FF FF FF FF     
   3657 FFFC2D08 FF FF FF FF FF FF FF FF     
   3658 FFFC2D10 FF FF FF FF FF FF FF FF     
   3659 FFFC2D18 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 8
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3660 FFFC2D20 FF FF FF FF FF FF FF FF     
   3661 FFFC2D28 FF FF FF FF FF FF FF FF     
   3662 FFFC2D30 FF FF FF FF FF FF FF FF     
   3663 FFFC2D38 FF FF FF FF FF FF FF FF     
   3664 FFFC2D40 FF FF FF FF FF FF FF FF     
   3665 FFFC2D48 FF FF FF FF FF FF FF FF     
   3666 FFFC2D50 FF FF FF FF FF FF FF FF     
   3667 FFFC2D58 FF FF FF FF FF FF FF FF     
   3668 FFFC2D60 FF FF FF FF FF FF FF FF     
   3669 FFFC2D68 FF FF FF FF FF FF FF FF     
   3670 FFFC2D70 FF FF FF FF FF FF FF FF     
   3671 FFFC2D78 FF FF FF FF FF FF FF FF     
   3672 FFFC2D80 FF FF FF FF FF FF FF FF     
   3673 FFFC2D88 FF FF FF FF FF FF FF FF     
   3674 FFFC2D90 FF FF FF FF FF FF FF FF     
   3675 FFFC2D98 FF FF FF FF FF FF FF FF     
   3676 FFFC2DA0 FF FF FF FF FF FF FF FF     
   3677 FFFC2DA8 FF FF FF FF FF FF FF FF     
   3678 FFFC2DB0 FF FF FF FF FF FF FF FF     
   3679 FFFC2DB8 FF FF FF FF FF FF FF FF     
   3680 FFFC2DC0 FF FF FF FF FF FF FF FF     
   3681 FFFC2DC8 FF FF FF FF FF FF FF FF     
   3682 FFFC2DD0 FF FF FF FF FF FF FF FF     
   3683 FFFC2DD8 FF FF FF FF FF FF FF FF     
   3684 FFFC2DE0 FF FF FF FF FF FF FF FF     
   3685 FFFC2DE8 FF FF FF FF FF FF FF FF     
   3686 FFFC2DF0 FF FF FF FF FF FF FF FF     
   3687 FFFC2DF8 FF FF FF FF FF FF FF FF     
   3688 FFFC2E00 FF FF FF FF FF FF FF FF     
   3689 FFFC2E08 FF FF FF FF FF FF FF FF     
   3690 FFFC2E10 FF FF FF FF FF FF FF FF     
   3691 FFFC2E18 FF FF FF FF FF FF FF FF     
   3692 FFFC2E20 FF FF FF FF FF FF FF FF     
   3693 FFFC2E28 FF FF FF FF FF FF FF FF     
   3694 FFFC2E30 FF FF FF FF FF FF FF FF     
   3695 FFFC2E38 FF FF FF FF FF FF FF FF     
   3696 FFFC2E40 FF FF FF FF FF FF FF FF     
   3697 FFFC2E48 FF FF FF FF FF FF FF FF     
   3698 FFFC2E50 FF FF FF FF FF FF FF FF     
   3699 FFFC2E58 FF FF FF FF FF FF FF FF     
   3700 FFFC2E60 FF FF FF FF FF FF FF FF     
   3701 FFFC2E68 FF FF FF FF FF FF FF FF     
   3702 FFFC2E70 FF FF FF FF FF FF FF FF     
   3703 FFFC2E78 FF FF FF FF FF FF FF FF     
   3704 FFFC2E80 FF FF FF FF FF FF FF FF     
   3705 FFFC2E88 FF FF FF FF FF FF FF FF     
   3706 FFFC2E90 FF FF FF FF FF FF FF FF     
   3707 FFFC2E98 FF FF FF FF FF FF FF FF     
   3708 FFFC2EA0 FF FF FF FF FF FF FF FF     
   3709 FFFC2EA8 FF FF FF FF FF FF FF FF     
   3710 FFFC2EB0 FF FF FF FF FF FF FF FF     
   3711 FFFC2EB8 FF FF FF FF FF FF FF FF     
   3712 FFFC2EC0 FF FF FF FF FF FF FF FF     
   3713 FFFC2EC8 FF FF FF FF FF FF FF FF     
   3714 FFFC2ED0 FF FF FF FF FF FF FF FF     
   3715 FFFC2ED8 FF FF FF FF FF FF FF FF     
   3716 FFFC2EE0 FF FF FF FF FF FF FF FF     
   3717 FFFC2EE8 FF FF FF FF FF FF FF FF     
   3718 FFFC2EF0 FF FF FF FF FF FF FF FF     
   3719 FFFC2EF8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 9
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3720 FFFC2F00 FF FF FF FF FF FF FF FF     
   3721 FFFC2F08 FF FF FF FF FF FF FF FF     
   3722 FFFC2F10 FF FF FF FF FF FF FF FF     
   3723 FFFC2F18 FF FF FF FF FF FF FF FF     
   3724 FFFC2F20 FF FF FF FF FF FF FF FF     
   3725 FFFC2F28 FF FF FF FF FF FF FF FF     
   3726 FFFC2F30 FF FF FF FF FF FF FF FF     
   3727 FFFC2F38 FF FF FF FF FF FF FF FF     
   3728 FFFC2F40 FF FF FF FF FF FF FF FF     
   3729 FFFC2F48 FF FF FF FF FF FF FF FF     
   3730 FFFC2F50 FF FF FF FF FF FF FF FF     
   3731 FFFC2F58 FF FF FF FF FF FF FF FF     
   3732 FFFC2F60 FF FF FF FF FF FF FF FF     
   3733 FFFC2F68 FF FF FF FF FF FF FF FF     
   3734 FFFC2F70 FF FF FF FF FF FF FF FF     
   3735 FFFC2F78 FF FF FF FF FF FF FF FF     
   3736 FFFC2F80 FF FF FF FF FF FF FF FF     
   3737 FFFC2F88 FF FF FF FF FF FF FF FF     
   3738 FFFC2F90 FF FF FF FF FF FF FF FF     
   3739 FFFC2F98 FF FF FF FF FF FF FF FF     
   3740 FFFC2FA0 FF FF FF FF FF FF FF FF     
   3741 FFFC2FA8 FF FF FF FF FF FF FF FF     
   3742 FFFC2FB0 FF FF FF FF FF FF FF FF     
   3743 FFFC2FB8 FF FF FF FF FF FF FF FF     
   3744 FFFC2FC0 FF FF FF FF FF FF FF FF     
   3745 FFFC2FC8 FF FF FF FF FF FF FF FF     
   3746 FFFC2FD0 FF FF FF FF FF FF FF FF     
   3747 FFFC2FD8 FF FF FF FF FF FF FF FF     
   3748 FFFC2FE0 FF FF FF FF FF FF FF FF     
   3749 FFFC2FE8 FF FF FF FF FF FF FF FF     
   3750 FFFC2FF0 FF FF FF FF FF FF FF FF     
   3751 FFFC2FF8 FF FF FF FF FF FF FF FF     
   3752 FFFC3000 FF FF FF FF FF FF FF FF     
   3753 FFFC3008 FF FF FF FF FF FF FF FF     
   3754 FFFC3010 FF FF FF FF FF FF FF FF     
   3755 FFFC3018 FF FF FF FF FF FF FF FF     
   3756 FFFC3020 FF FF FF FF FF FF FF FF     
   3757 FFFC3028 FF FF FF FF FF FF FF FF     
   3758 FFFC3030 FF FF FF FF FF FF FF FF     
   3759 FFFC3038 FF FF FF FF FF FF FF FF     
   3760 FFFC3040 FF FF FF FF FF FF FF FF     
   3761 FFFC3048 FF FF FF FF FF FF FF FF     
   3762 FFFC3050 FF FF FF FF FF FF FF FF     
   3763 FFFC3058 FF FF FF FF FF FF FF FF     
   3764 FFFC3060 FF FF FF FF FF FF FF FF     
   3765 FFFC3068 FF FF FF FF FF FF FF FF     
   3766 FFFC3070 FF FF FF FF FF FF FF FF     
   3767 FFFC3078 FF FF FF FF FF FF FF FF     
   3768 FFFC3080 FF FF FF FF FF FF FF FF     
   3769 FFFC3088 FF FF FF FF FF FF FF FF     
   3770 FFFC3090 FF FF FF FF FF FF FF FF     
   3771 FFFC3098 FF FF FF FF FF FF FF FF     
   3772 FFFC30A0 FF FF FF FF FF FF FF FF     
   3773 FFFC30A8 FF FF FF FF FF FF FF FF     
   3774 FFFC30B0 FF FF FF FF FF FF FF FF     
   3775 FFFC30B8 FF FF FF FF FF FF FF FF     
   3776 FFFC30C0 FF FF FF FF FF FF FF FF     
   3777 FFFC30C8 FF FF FF FF FF FF FF FF     
   3778 FFFC30D0 FF FF FF FF FF FF FF FF     
   3779 FFFC30D8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 10
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3780 FFFC30E0 FF FF FF FF FF FF FF FF     
   3781 FFFC30E8 FF FF FF FF FF FF FF FF     
   3782 FFFC30F0 FF FF FF FF FF FF FF FF     
   3783 FFFC30F8 FF FF FF FF FF FF FF FF     
   3784 FFFC3100 FF FF FF FF FF FF FF FF     
   3785 FFFC3108 FF FF FF FF FF FF FF FF     
   3786 FFFC3110 FF FF FF FF FF FF FF FF     
   3787 FFFC3118 FF FF FF FF FF FF FF FF     
   3788 FFFC3120 FF FF FF FF FF FF FF FF     
   3789 FFFC3128 FF FF FF FF FF FF FF FF     
   3790 FFFC3130 FF FF FF FF FF FF FF FF     
   3791 FFFC3138 FF FF FF FF FF FF FF FF     
   3792 FFFC3140 FF FF FF FF FF FF FF FF     
   3793 FFFC3148 FF FF FF FF FF FF FF FF     
   3794 FFFC3150 FF FF FF FF FF FF FF FF     
   3795 FFFC3158 FF FF FF FF FF FF FF FF     
   3796 FFFC3160 FF FF FF FF FF FF FF FF     
   3797 FFFC3168 FF FF FF FF FF FF FF FF     
   3798 FFFC3170 FF FF FF FF FF FF FF FF     
   3799 FFFC3178 FF FF FF FF FF FF FF FF     
   3800 FFFC3180 FF FF FF FF FF FF FF FF     
   3801 FFFC3188 FF FF FF FF FF FF FF FF     
   3802 FFFC3190 FF FF FF FF FF FF FF FF     
   3803 FFFC3198 FF FF FF FF FF FF FF FF     
   3804 FFFC31A0 FF FF FF FF FF FF FF FF     
   3805 FFFC31A8 FF FF FF FF FF FF FF FF     
   3806 FFFC31B0 FF FF FF FF FF FF FF FF     
   3807 FFFC31B8 FF FF FF FF FF FF FF FF     
   3808 FFFC31C0 FF FF FF FF FF FF FF FF     
   3809 FFFC31C8 FF FF FF FF FF FF FF FF     
   3810 FFFC31D0 FF FF FF FF FF FF FF FF     
   3811 FFFC31D8 FF FF FF FF FF FF FF FF     
   3812 FFFC31E0 FF FF FF FF FF FF FF FF     
   3813 FFFC31E8 FF FF FF FF FF FF FF FF     
   3814 FFFC31F0 FF FF FF FF FF FF FF FF     
   3815 FFFC31F8 FF FF FF FF FF FF FF FF     
   3816 FFFC3200 FF FF FF FF FF FF FF FF     
   3817 FFFC3208 FF FF FF FF FF FF FF FF     
   3818 FFFC3210 FF FF FF FF FF FF FF FF     
   3819 FFFC3218 FF FF FF FF FF FF FF FF     
   3820 FFFC3220 FF FF FF FF FF FF FF FF     
   3821 FFFC3228 FF FF FF FF FF FF FF FF     
   3822 FFFC3230 FF FF FF FF FF FF FF FF     
   3823 FFFC3238 FF FF FF FF FF FF FF FF     
   3824 FFFC3240 FF FF FF FF FF FF FF FF     
   3825 FFFC3248 FF FF FF FF FF FF FF FF     
   3826 FFFC3250 FF FF FF FF FF FF FF FF     
   3827 FFFC3258 FF FF FF FF FF FF FF FF     
   3828 FFFC3260 FF FF FF FF FF FF FF FF     
   3829 FFFC3268 FF FF FF FF FF FF FF FF     
   3830 FFFC3270 FF FF FF FF FF FF FF FF     
   3831 FFFC3278 FF FF FF FF FF FF FF FF     
   3832 FFFC3280 FF FF FF FF FF FF FF FF     
   3833 FFFC3288 FF FF FF FF FF FF FF FF     
   3834 FFFC3290 FF FF FF FF FF FF FF FF     
   3835 FFFC3298 FF FF FF FF FF FF FF FF     
   3836 FFFC32A0 FF FF FF FF FF FF FF FF     
   3837 FFFC32A8 FF FF FF FF FF FF FF FF     
   3838 FFFC32B0 FF FF FF FF FF FF FF FF     
   3839 FFFC32B8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 11
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3840 FFFC32C0 FF FF FF FF FF FF FF FF     
   3841 FFFC32C8 FF FF FF FF FF FF FF FF     
   3842 FFFC32D0 FF FF FF FF FF FF FF FF     
   3843 FFFC32D8 FF FF FF FF FF FF FF FF     
   3844 FFFC32E0 FF FF FF FF FF FF FF FF     
   3845 FFFC32E8 FF FF FF FF FF FF FF FF     
   3846 FFFC32F0 FF FF FF FF FF FF FF FF     
   3847 FFFC32F8 FF FF FF FF FF FF FF FF     
   3848 FFFC3300 FF FF FF FF FF FF FF FF     
   3849 FFFC3308 FF FF FF FF FF FF FF FF     
   3850 FFFC3310 FF FF FF FF FF FF FF FF     
   3851 FFFC3318 FF FF FF FF FF FF FF FF     
   3852 FFFC3320 FF FF FF FF FF FF FF FF     
   3853 FFFC3328 FF FF FF FF FF FF FF FF     
   3854 FFFC3330 FF FF FF FF FF FF FF FF     
   3855 FFFC3338 FF FF FF FF FF FF FF FF     
   3856 FFFC3340 FF FF FF FF FF FF FF FF     
   3857 FFFC3348 FF FF FF FF FF FF FF FF     
   3858 FFFC3350 FF FF FF FF FF FF FF FF     
   3859 FFFC3358 FF FF FF FF FF FF FF FF     
   3860 FFFC3360 FF FF FF FF FF FF FF FF     
   3861 FFFC3368 FF FF FF FF FF FF FF FF     
   3862 FFFC3370 FF FF FF FF FF FF FF FF     
   3863 FFFC3378 FF FF FF FF FF FF FF FF     
   3864 FFFC3380 FF FF FF FF FF FF FF FF     
   3865 FFFC3388 FF FF FF FF FF FF FF FF     
   3866 FFFC3390 FF FF FF FF FF FF FF FF     
   3867 FFFC3398 FF FF FF FF FF FF FF FF     
   3868 FFFC33A0 FF FF FF FF FF FF FF FF     
   3869 FFFC33A8 FF FF FF FF FF FF FF FF     
   3870 FFFC33B0 FF FF FF FF FF FF FF FF     
   3871 FFFC33B8 FF FF FF FF FF FF FF FF     
   3872 FFFC33C0 FF FF FF FF FF FF FF FF     
   3873 FFFC33C8 FF FF FF FF FF FF FF FF     
   3874 FFFC33D0 FF FF FF FF FF FF FF FF     
   3875 FFFC33D8 FF FF FF FF FF FF FF FF     
   3876 FFFC33E0 FF FF FF FF FF FF FF FF     
   3877 FFFC33E8 FF FF FF FF FF FF FF FF     
   3878 FFFC33F0 FF FF FF FF FF FF FF FF     
   3879 FFFC33F8 FF FF FF FF FF FF FF FF     
   3880 FFFC3400 FF FF FF FF FF FF FF FF     
   3881 FFFC3408 FF FF FF FF FF FF FF FF     
   3882 FFFC3410 FF FF FF FF FF FF FF FF     
   3883 FFFC3418 FF FF FF FF FF FF FF FF     
   3884 FFFC3420 FF FF FF FF FF FF FF FF     
   3885 FFFC3428 FF FF FF FF FF FF FF FF     
   3886 FFFC3430 FF FF FF FF FF FF FF FF     
   3887 FFFC3438 FF FF FF FF FF FF FF FF     
   3888 FFFC3440 FF FF FF FF FF FF FF FF     
   3889 FFFC3448 FF FF FF FF FF FF FF FF     
   3890 FFFC3450 FF FF FF FF FF FF FF FF     
   3891 FFFC3458 FF FF FF FF FF FF FF FF     
   3892 FFFC3460 FF FF FF FF FF FF FF FF     
   3893 FFFC3468 FF FF FF FF FF FF FF FF     
   3894 FFFC3470 FF FF FF FF FF FF FF FF     
   3895 FFFC3478 FF FF FF FF FF FF FF FF     
   3896 FFFC3480 FF FF FF FF FF FF FF FF     
   3897 FFFC3488 FF FF FF FF FF FF FF FF     
   3898 FFFC3490 FF FF FF FF FF FF FF FF     
   3899 FFFC3498 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 12
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3900 FFFC34A0 FF FF FF FF FF FF FF FF     
   3901 FFFC34A8 FF FF FF FF FF FF FF FF     
   3902 FFFC34B0 FF FF FF FF FF FF FF FF     
   3903 FFFC34B8 FF FF FF FF FF FF FF FF     
   3904 FFFC34C0 FF FF FF FF FF FF FF FF     
   3905 FFFC34C8 FF FF FF FF FF FF FF FF     
   3906 FFFC34D0 FF FF FF FF FF FF FF FF     
   3907 FFFC34D8 FF FF FF FF FF FF FF FF     
   3908 FFFC34E0 FF FF FF FF FF FF FF FF     
   3909 FFFC34E8 FF FF FF FF FF FF FF FF     
   3910 FFFC34F0 FF FF FF FF FF FF FF FF     
   3911 FFFC34F8 FF FF FF FF FF FF FF FF     
   3912 FFFC3500 FF FF FF FF FF FF FF FF     
   3913 FFFC3508 FF FF FF FF FF FF FF FF     
   3914 FFFC3510 FF FF FF FF FF FF FF FF     
   3915 FFFC3518 FF FF FF FF FF FF FF FF     
   3916 FFFC3520 FF FF FF FF FF FF FF FF     
   3917 FFFC3528 FF FF FF FF FF FF FF FF     
   3918 FFFC3530 FF FF FF FF FF FF FF FF     
   3919 FFFC3538 FF FF FF FF FF FF FF FF     
   3920 FFFC3540 FF FF FF FF FF FF FF FF     
   3921 FFFC3548 FF FF FF FF FF FF FF FF     
   3922 FFFC3550 FF FF FF FF FF FF FF FF     
   3923 FFFC3558 FF FF FF FF FF FF FF FF     
   3924 FFFC3560 FF FF FF FF FF FF FF FF     
   3925 FFFC3568 FF FF FF FF FF FF FF FF     
   3926 FFFC3570 FF FF FF FF FF FF FF FF     
   3927 FFFC3578 FF FF FF FF FF FF FF FF     
   3928 FFFC3580 FF FF FF FF FF FF FF FF     
   3929 FFFC3588 FF FF FF FF FF FF FF FF     
   3930 FFFC3590 FF FF FF FF FF FF FF FF     
   3931 FFFC3598 FF FF FF FF FF FF FF FF     
   3932 FFFC35A0 FF FF FF FF FF FF FF FF     
   3933 FFFC35A8 FF FF FF FF FF FF FF FF     
   3934 FFFC35B0 FF FF FF FF FF FF FF FF     
   3935 FFFC35B8 FF FF FF FF FF FF FF FF     
   3936 FFFC35C0 FF FF FF FF FF FF FF FF     
   3937 FFFC35C8 FF FF FF FF FF FF FF FF     
   3938 FFFC35D0 FF FF FF FF FF FF FF FF     
   3939 FFFC35D8 FF FF FF FF FF FF FF FF     
   3940 FFFC35E0 FF FF FF FF FF FF FF FF     
   3941 FFFC35E8 FF FF FF FF FF FF FF FF     
   3942 FFFC35F0 FF FF FF FF FF FF FF FF     
   3943 FFFC35F8 FF FF FF FF FF FF FF FF     
   3944 FFFC3600 FF FF FF FF FF FF FF FF     
   3945 FFFC3608 FF FF FF FF FF FF FF FF     
   3946 FFFC3610 FF FF FF FF FF FF FF FF     
   3947 FFFC3618 FF FF FF FF FF FF FF FF     
   3948 FFFC3620 FF FF FF FF FF FF FF FF     
   3949 FFFC3628 FF FF FF FF FF FF FF FF     
   3950 FFFC3630 FF FF FF FF FF FF FF FF     
   3951 FFFC3638 FF FF FF FF FF FF FF FF     
   3952 FFFC3640 FF FF FF FF FF FF FF FF     
   3953 FFFC3648 FF FF FF FF FF FF FF FF     
   3954 FFFC3650 FF FF FF FF FF FF FF FF     
   3955 FFFC3658 FF FF FF FF FF FF FF FF     
   3956 FFFC3660 FF FF FF FF FF FF FF FF     
   3957 FFFC3668 FF FF FF FF FF FF FF FF     
   3958 FFFC3670 FF FF FF FF FF FF FF FF     
   3959 FFFC3678 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 13
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3960 FFFC3680 FF FF FF FF FF FF FF FF     
   3961 FFFC3688 FF FF FF FF FF FF FF FF     
   3962 FFFC3690 FF FF FF FF FF FF FF FF     
   3963 FFFC3698 FF FF FF FF FF FF FF FF     
   3964 FFFC36A0 FF FF FF FF FF FF FF FF     
   3965 FFFC36A8 FF FF FF FF FF FF FF FF     
   3966 FFFC36B0 FF FF FF FF FF FF FF FF     
   3967 FFFC36B8 FF FF FF FF FF FF FF FF     
   3968 FFFC36C0 FF FF FF FF FF FF FF FF     
   3969 FFFC36C8 FF FF FF FF FF FF FF FF     
   3970 FFFC36D0 FF FF FF FF FF FF FF FF     
   3971 FFFC36D8 FF FF FF FF FF FF FF FF     
   3972 FFFC36E0 FF FF FF FF FF FF FF FF     
   3973 FFFC36E8 FF FF FF FF FF FF FF FF     
   3974 FFFC36F0 FF FF FF FF FF FF FF FF     
   3975 FFFC36F8 FF FF FF FF FF FF FF FF     
   3976 FFFC3700 FF FF FF FF FF FF FF FF     
   3977 FFFC3708 FF FF FF FF FF FF FF FF     
   3978 FFFC3710 FF FF FF FF FF FF FF FF     
   3979 FFFC3718 FF FF FF FF FF FF FF FF     
   3980 FFFC3720 FF FF FF FF FF FF FF FF     
   3981 FFFC3728 FF FF FF FF FF FF FF FF     
   3982 FFFC3730 FF FF FF FF FF FF FF FF     
   3983 FFFC3738 FF FF FF FF FF FF FF FF     
   3984 FFFC3740 FF FF FF FF FF FF FF FF     
   3985 FFFC3748 FF FF FF FF FF FF FF FF     
   3986 FFFC3750 FF FF FF FF FF FF FF FF     
   3987 FFFC3758 FF FF FF FF FF FF FF FF     
   3988 FFFC3760 FF FF FF FF FF FF FF FF     
   3989 FFFC3768 FF FF FF FF FF FF FF FF     
   3990 FFFC3770 FF FF FF FF FF FF FF FF     
   3991 FFFC3778 FF FF FF FF FF FF FF FF     
   3992 FFFC3780 FF FF FF FF FF FF FF FF     
   3993 FFFC3788 FF FF FF FF FF FF FF FF     
   3994 FFFC3790 FF FF FF FF FF FF FF FF     
   3995 FFFC3798 FF FF FF FF FF FF FF FF     
   3996 FFFC37A0 FF FF FF FF FF FF FF FF     
   3997 FFFC37A8 FF FF FF FF FF FF FF FF     
   3998 FFFC37B0 FF FF FF FF FF FF FF FF     
   3999 FFFC37B8 FF FF FF FF FF FF FF FF     
   4000 FFFC37C0 FF FF FF FF FF FF FF FF     
   4001 FFFC37C8 FF FF FF FF FF FF FF FF     
   4002 FFFC37D0 FF FF FF FF FF FF FF FF     
   4003 FFFC37D8 FF FF FF FF FF FF FF FF     
   4004 FFFC37E0 FF FF FF FF FF FF FF FF     
   4005 FFFC37E8 FF FF FF FF FF FF FF FF     
   4006 FFFC37F0 FF FF FF FF FF FF FF FF     
   4007 FFFC37F8 FF FF FF FF FF FF FF FF     
   4008 FFFC3800 FF FF FF FF FF FF FF FF     
   4009 FFFC3808 FF FF FF FF FF FF FF FF     
   4010 FFFC3810 FF FF FF FF FF FF FF FF     
   4011 FFFC3818 FF FF FF FF FF FF FF FF     
   4012 FFFC3820 FF FF FF FF FF FF FF FF     
   4013 FFFC3828 FF FF FF FF FF FF FF FF     
   4014 FFFC3830 FF FF FF FF FF FF FF FF     
   4015 FFFC3838 FF FF FF FF FF FF FF FF     
   4016 FFFC3840 FF FF FF FF FF FF FF FF     
   4017 FFFC3848 FF FF FF FF FF FF FF FF     
   4018 FFFC3850 FF FF FF FF FF FF FF FF     
   4019 FFFC3858 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 14
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4020 FFFC3860 FF FF FF FF FF FF FF FF     
   4021 FFFC3868 FF FF FF FF FF FF FF FF     
   4022 FFFC3870 FF FF FF FF FF FF FF FF     
   4023 FFFC3878 FF FF FF FF FF FF FF FF     
   4024 FFFC3880 FF FF FF FF FF FF FF FF     
   4025 FFFC3888 FF FF FF FF FF FF FF FF     
   4026 FFFC3890 FF FF FF FF FF FF FF FF     
   4027 FFFC3898 FF FF FF FF FF FF FF FF     
   4028 FFFC38A0 FF FF FF FF FF FF FF FF     
   4029 FFFC38A8 FF FF FF FF FF FF FF FF     
   4030 FFFC38B0 FF FF FF FF FF FF FF FF     
   4031 FFFC38B8 FF FF FF FF FF FF FF FF     
   4032 FFFC38C0 FF FF FF FF FF FF FF FF     
   4033 FFFC38C8 FF FF FF FF FF FF FF FF     
   4034 FFFC38D0 FF FF FF FF FF FF FF FF     
   4035 FFFC38D8 FF FF FF FF FF FF FF FF     
   4036 FFFC38E0 FF FF FF FF FF FF FF FF     
   4037 FFFC38E8 FF FF FF FF FF FF FF FF     
   4038 FFFC38F0 FF FF FF FF FF FF FF FF     
   4039 FFFC38F8 FF FF FF FF FF FF FF FF     
   4040 FFFC3900 FF FF FF FF FF FF FF FF     
   4041 FFFC3908 FF FF FF FF FF FF FF FF     
   4042 FFFC3910 FF FF FF FF FF FF FF FF     
   4043 FFFC3918 FF FF FF FF FF FF FF FF     
   4044 FFFC3920 FF FF FF FF FF FF FF FF     
   4045 FFFC3928 FF FF FF FF FF FF FF FF     
   4046 FFFC3930 FF FF FF FF FF FF FF FF     
   4047 FFFC3938 FF FF FF FF FF FF FF FF     
   4048 FFFC3940 FF FF FF FF FF FF FF FF     
   4049 FFFC3948 FF FF FF FF FF FF FF FF     
   4050 FFFC3950 FF FF FF FF FF FF FF FF     
   4051 FFFC3958 FF FF FF FF FF FF FF FF     
   4052 FFFC3960 FF FF FF FF FF FF FF FF     
   4053 FFFC3968 FF FF FF FF FF FF FF FF     
   4054 FFFC3970 FF FF FF FF FF FF FF FF     
   4055 FFFC3978 FF FF FF FF FF FF FF FF     
   4056 FFFC3980 FF FF FF FF FF FF FF FF     
   4057 FFFC3988 FF FF FF FF FF FF FF FF     
   4058 FFFC3990 FF FF FF FF FF FF FF FF     
   4059 FFFC3998 FF FF FF FF FF FF FF FF     
   4060 FFFC39A0 FF FF FF FF FF FF FF FF     
   4061 FFFC39A8 FF FF FF FF FF FF FF FF     
   4062 FFFC39B0 FF FF FF FF FF FF FF FF     
   4063 FFFC39B8 FF FF FF FF FF FF FF FF     
   4064 FFFC39C0 FF FF FF FF FF FF FF FF     
   4065 FFFC39C8 FF FF FF FF FF FF FF FF     
   4066 FFFC39D0 FF FF FF FF FF FF FF FF     
   4067 FFFC39D8 FF FF FF FF FF FF FF FF     
   4068 FFFC39E0 FF FF FF FF FF FF FF FF     
   4069 FFFC39E8 FF FF FF FF FF FF FF FF     
   4070 FFFC39F0 FF FF FF FF FF FF FF FF     
   4071 FFFC39F8 FF FF FF FF FF FF FF FF     
   4072 FFFC3A00 FF FF FF FF FF FF FF FF     
   4073 FFFC3A08 FF FF FF FF FF FF FF FF     
   4074 FFFC3A10 FF FF FF FF FF FF FF FF     
   4075 FFFC3A18 FF FF FF FF FF FF FF FF     
   4076 FFFC3A20 FF FF FF FF FF FF FF FF     
   4077 FFFC3A28 FF FF FF FF FF FF FF FF     
   4078 FFFC3A30 FF FF FF FF FF FF FF FF     
   4079 FFFC3A38 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 15
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4080 FFFC3A40 FF FF FF FF FF FF FF FF     
   4081 FFFC3A48 FF FF FF FF FF FF FF FF     
   4082 FFFC3A50 FF FF FF FF FF FF FF FF     
   4083 FFFC3A58 FF FF FF FF FF FF FF FF     
   4084 FFFC3A60 FF FF FF FF FF FF FF FF     
   4085 FFFC3A68 FF FF FF FF FF FF FF FF     
   4086 FFFC3A70 FF FF FF FF FF FF FF FF     
   4087 FFFC3A78 FF FF FF FF FF FF FF FF     
   4088 FFFC3A80 FF FF FF FF FF FF FF FF     
   4089 FFFC3A88 FF FF FF FF FF FF FF FF     
   4090 FFFC3A90 FF FF FF FF FF FF FF FF     
   4091 FFFC3A98 FF FF FF FF FF FF FF FF     
   4092 FFFC3AA0 FF FF FF FF FF FF FF FF     
   4093 FFFC3AA8 FF FF FF FF FF FF FF FF     
   4094 FFFC3AB0 FF FF FF FF FF FF FF FF     
   4095 FFFC3AB8 FF FF FF FF FF FF FF FF     
   4096 FFFC3AC0 FF FF FF FF FF FF FF FF     
   4097 FFFC3AC8 FF FF FF FF FF FF FF FF     
   4098 FFFC3AD0 FF FF FF FF FF FF FF FF     
   4099 FFFC3AD8 FF FF FF FF FF FF FF FF     
   4100 FFFC3AE0 FF FF FF FF FF FF FF FF     
   4101 FFFC3AE8 FF FF FF FF FF FF FF FF     
   4102 FFFC3AF0 FF FF FF FF FF FF FF FF     
   4103 FFFC3AF8 FF FF FF FF FF FF FF FF     
   4104 FFFC3B00 FF FF FF FF FF FF FF FF     
   4105 FFFC3B08 FF FF FF FF FF FF FF FF     
   4106 FFFC3B10 FF FF FF FF FF FF FF FF     
   4107 FFFC3B18 FF FF FF FF FF FF FF FF     
   4108 FFFC3B20 FF FF FF FF FF FF FF FF     
   4109 FFFC3B28 FF FF FF FF FF FF FF FF     
   4110 FFFC3B30 FF FF FF FF FF FF FF FF     
   4111 FFFC3B38 FF FF FF FF FF FF FF FF     
   4112 FFFC3B40 FF FF FF FF FF FF FF FF     
   4113 FFFC3B48 FF FF FF FF FF FF FF FF     
   4114 FFFC3B50 FF FF FF FF FF FF FF FF     
   4115 FFFC3B58 FF FF FF FF FF FF FF FF     
   4116 FFFC3B60 FF FF FF FF FF FF FF FF     
   4117 FFFC3B68 FF FF FF FF FF FF FF FF     
   4118 FFFC3B70 FF FF FF FF FF FF FF FF     
   4119 FFFC3B78 FF FF FF FF FF FF FF FF     
   4120 FFFC3B80 FF FF FF FF FF FF FF FF     
   4121 FFFC3B88 FF FF FF FF FF FF FF FF     
   4122 FFFC3B90 FF FF FF FF FF FF FF FF     
   4123 FFFC3B98 FF FF FF FF FF FF FF FF     
   4124 FFFC3BA0 FF FF FF FF FF FF FF FF     
   4125 FFFC3BA8 FF FF FF FF FF FF FF FF     
   4126 FFFC3BB0 FF FF FF FF FF FF FF FF     
   4127 FFFC3BB8 FF FF FF FF FF FF FF FF     
   4128 FFFC3BC0 FF FF FF FF FF FF FF FF     
   4129 FFFC3BC8 FF FF FF FF FF FF FF FF     
   4130 FFFC3BD0 FF FF FF FF FF FF FF FF     
   4131 FFFC3BD8 FF FF FF FF FF FF FF FF     
   4132 FFFC3BE0 FF FF FF FF FF FF FF FF     
   4133 FFFC3BE8 FF FF FF FF FF FF FF FF     
   4134 FFFC3BF0 FF FF FF FF FF FF FF FF     
   4135 FFFC3BF8 FF FF FF FF FF FF FF FF     
   4136 FFFC3C00 FF FF FF FF FF FF FF FF     
   4137 FFFC3C08 FF FF FF FF FF FF FF FF     
   4138 FFFC3C10 FF FF FF FF FF FF FF FF     
   4139 FFFC3C18 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 16
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4140 FFFC3C20 FF FF FF FF FF FF FF FF     
   4141 FFFC3C28 FF FF FF FF FF FF FF FF     
   4142 FFFC3C30 FF FF FF FF FF FF FF FF     
   4143 FFFC3C38 FF FF FF FF FF FF FF FF     
   4144 FFFC3C40 FF FF FF FF FF FF FF FF     
   4145 FFFC3C48 FF FF FF FF FF FF FF FF     
   4146 FFFC3C50 FF FF FF FF FF FF FF FF     
   4147 FFFC3C58 FF FF FF FF FF FF FF FF     
   4148 FFFC3C60 FF FF FF FF FF FF FF FF     
   4149 FFFC3C68 FF FF FF FF FF FF FF FF     
   4150 FFFC3C70 FF FF FF FF FF FF FF FF     
   4151 FFFC3C78 FF FF FF FF FF FF FF FF     
   4152 FFFC3C80 FF FF FF FF FF FF FF FF     
   4153 FFFC3C88 FF FF FF FF FF FF FF FF     
   4154 FFFC3C90 FF FF FF FF FF FF FF FF     
   4155 FFFC3C98 FF FF FF FF FF FF FF FF     
   4156 FFFC3CA0 FF FF FF FF FF FF FF FF     
   4157 FFFC3CA8 FF FF FF FF FF FF FF FF     
   4158 FFFC3CB0 FF FF FF FF FF FF FF FF     
   4159 FFFC3CB8 FF FF FF FF FF FF FF FF     
   4160 FFFC3CC0 FF FF FF FF FF FF FF FF     
   4161 FFFC3CC8 FF FF FF FF FF FF FF FF     
   4162 FFFC3CD0 FF FF FF FF FF FF FF FF     
   4163 FFFC3CD8 FF FF FF FF FF FF FF FF     
   4164 FFFC3CE0 FF FF FF FF FF FF FF FF     
   4165 FFFC3CE8 FF FF FF FF FF FF FF FF     
   4166 FFFC3CF0 FF FF FF FF FF FF FF FF     
   4167 FFFC3CF8 FF FF FF FF FF FF FF FF     
   4168 FFFC3D00 FF FF FF FF FF FF FF FF     
   4169 FFFC3D08 FF FF FF FF FF FF FF FF     
   4170 FFFC3D10 FF FF FF FF FF FF FF FF     
   4171 FFFC3D18 FF FF FF FF FF FF FF FF     
   4172 FFFC3D20 FF FF FF FF FF FF FF FF     
   4173 FFFC3D28 FF FF FF FF FF FF FF FF     
   4174 FFFC3D30 FF FF FF FF FF FF FF FF     
   4175 FFFC3D38 FF FF FF FF FF FF FF FF     
   4176 FFFC3D40 FF FF FF FF FF FF FF FF     
   4177 FFFC3D48 FF FF FF FF FF FF FF FF     
   4178 FFFC3D50 FF FF FF FF FF FF FF FF     
   4179 FFFC3D58 FF FF FF FF FF FF FF FF     
   4180 FFFC3D60 FF FF FF FF FF FF FF FF     
   4181 FFFC3D68 FF FF FF FF FF FF FF FF     
   4182 FFFC3D70 FF FF FF FF FF FF FF FF     
   4183 FFFC3D78 FF FF FF FF FF FF FF FF     
   4184 FFFC3D80 FF FF FF FF FF FF FF FF     
   4185 FFFC3D88 FF FF FF FF FF FF FF FF     
   4186 FFFC3D90 FF FF FF FF FF FF FF FF     
   4187 FFFC3D98 FF FF FF FF FF FF FF FF     
   4188 FFFC3DA0 FF FF FF FF FF FF FF FF     
   4189 FFFC3DA8 FF FF FF FF FF FF FF FF     
   4190 FFFC3DB0 FF FF FF FF FF FF FF FF     
   4191 FFFC3DB8 FF FF FF FF FF FF FF FF     
   4192 FFFC3DC0 FF FF FF FF FF FF FF FF     
   4193 FFFC3DC8 FF FF FF FF FF FF FF FF     
   4194 FFFC3DD0 FF FF FF FF FF FF FF FF     
   4195 FFFC3DD8 FF FF FF FF FF FF FF FF     
   4196 FFFC3DE0 FF FF FF FF FF FF FF FF     
   4197 FFFC3DE8 FF FF FF FF FF FF FF FF     
   4198 FFFC3DF0 FF FF FF FF FF FF FF FF     
   4199 FFFC3DF8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 17
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4200 FFFC3E00 FF FF FF FF FF FF FF FF     
   4201 FFFC3E08 FF FF FF FF FF FF FF FF     
   4202 FFFC3E10 FF FF FF FF FF FF FF FF     
   4203 FFFC3E18 FF FF FF FF FF FF FF FF     
   4204 FFFC3E20 FF FF FF FF FF FF FF FF     
   4205 FFFC3E28 FF FF FF FF FF FF FF FF     
   4206 FFFC3E30 FF FF FF FF FF FF FF FF     
   4207 FFFC3E38 FF FF FF FF FF FF FF FF     
   4208 FFFC3E40 FF FF FF FF FF FF FF FF     
   4209 FFFC3E48 FF FF FF FF FF FF FF FF     
   4210 FFFC3E50 FF FF FF FF FF FF FF FF     
   4211 FFFC3E58 FF FF FF FF FF FF FF FF     
   4212 FFFC3E60 FF FF FF FF FF FF FF FF     
   4213 FFFC3E68 FF FF FF FF FF FF FF FF     
   4214 FFFC3E70 FF FF FF FF FF FF FF FF     
   4215 FFFC3E78 FF FF FF FF FF FF FF FF     
   4216 FFFC3E80 FF FF FF FF FF FF FF FF     
   4217 FFFC3E88 FF FF FF FF FF FF FF FF     
   4218 FFFC3E90 FF FF FF FF FF FF FF FF     
   4219 FFFC3E98 FF FF FF FF FF FF FF FF     
   4220 FFFC3EA0 FF FF FF FF FF FF FF FF     
   4221 FFFC3EA8 FF FF FF FF FF FF FF FF     
   4222 FFFC3EB0 FF FF FF FF FF FF FF FF     
   4223 FFFC3EB8 FF FF FF FF FF FF FF FF     
   4224 FFFC3EC0 FF FF FF FF FF FF FF FF     
   4225 FFFC3EC8 FF FF FF FF FF FF FF FF     
   4226 FFFC3ED0 FF FF FF FF FF FF FF FF     
   4227 FFFC3ED8 FF FF FF FF FF FF FF FF     
   4228 FFFC3EE0 FF FF FF FF FF FF FF FF     
   4229 FFFC3EE8 FF FF FF FF FF FF FF FF     
   4230 FFFC3EF0 FF FF FF FF FF FF FF FF     
   4231 FFFC3EF8 FF FF FF FF FF FF FF FF     
   4232 FFFC3F00 FF FF FF FF FF FF FF FF     
   4233 FFFC3F08 FF FF FF FF FF FF FF FF     
   4234 FFFC3F10 FF FF FF FF FF FF FF FF     
   4235 FFFC3F18 FF FF FF FF FF FF FF FF     
   4236 FFFC3F20 FF FF FF FF FF FF FF FF     
   4237 FFFC3F28 FF FF FF FF FF FF FF FF     
   4238 FFFC3F30 FF FF FF FF FF FF FF FF     
   4239 FFFC3F38 FF FF FF FF FF FF FF FF     
   4240 FFFC3F40 FF FF FF FF FF FF FF FF     
   4241 FFFC3F48 FF FF FF FF FF FF FF FF     
   4242 FFFC3F50 FF FF FF FF FF FF FF FF     
   4243 FFFC3F58 FF FF FF FF FF FF FF FF     
   4244 FFFC3F60 FF FF FF FF FF FF FF FF     
   4245 FFFC3F68 FF FF FF FF FF FF FF FF     
   4246 FFFC3F70 FF FF FF FF FF FF FF FF     
   4247 FFFC3F78 FF FF FF FF FF FF FF FF     
   4248 FFFC3F80 FF FF FF FF FF FF FF FF     
   4249 FFFC3F88 FF FF FF FF FF FF FF FF     
   4250 FFFC3F90 FF FF FF FF FF FF FF FF     
   4251 FFFC3F98 FF FF FF FF FF FF FF FF     
   4252 FFFC3FA0 FF FF FF FF FF FF FF FF     
   4253 FFFC3FA8 FF FF FF FF FF FF FF FF     
   4254 FFFC3FB0 FF FF FF FF FF FF FF FF     
   4255 FFFC3FB8 FF FF FF FF FF FF FF FF     
   4256 FFFC3FC0 FF FF FF FF FF FF FF FF     
   4257 FFFC3FC8 FF FF FF FF FF FF FF FF     
   4258 FFFC3FD0 FF FF FF FF FF FF FF FF     
   4259 FFFC3FD8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 18
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4260 FFFC3FE0 FF FF FF FF FF FF FF FF     
   4261 FFFC3FE8 FF FF FF FF FF FF FF FF     
   4262 FFFC3FF0 FF FF FF FF FF FF FF FF     
   4263 FFFC3FF8 FF FF FF FF FF FF FF FF     
   4264 FFFC4000 FF FF FF FF FF FF FF FF     
   4265 FFFC4008 FF FF FF FF FF FF FF FF     
   4266 FFFC4010 FF FF FF FF FF FF FF FF     
   4267 FFFC4018 FF FF FF FF FF FF FF FF     
   4268 FFFC4020 FF FF FF FF FF FF FF FF     
   4269 FFFC4028 FF FF FF FF FF FF FF FF     
   4270 FFFC4030 FF FF FF FF FF FF FF FF     
   4271 FFFC4038 FF FF FF FF FF FF FF FF     
   4272 FFFC4040 FF FF FF FF FF FF FF FF     
   4273 FFFC4048 FF FF FF FF FF FF FF FF     
   4274 FFFC4050 FF FF FF FF FF FF FF FF     
   4275 FFFC4058 FF FF FF FF FF FF FF FF     
   4276 FFFC4060 FF FF FF FF FF FF FF FF     
   4277 FFFC4068 FF FF FF FF FF FF FF FF     
   4278 FFFC4070 FF FF FF FF FF FF FF FF     
   4279 FFFC4078 FF FF FF FF FF FF FF FF     
   4280 FFFC4080 FF FF FF FF FF FF FF FF     
   4281 FFFC4088 FF FF FF FF FF FF FF FF     
   4282 FFFC4090 FF FF FF FF FF FF FF FF     
   4283 FFFC4098 FF FF FF FF FF FF FF FF     
   4284 FFFC40A0 FF FF FF FF FF FF FF FF     
   4285 FFFC40A8 FF FF FF FF FF FF FF FF     
   4286 FFFC40B0 FF FF FF FF FF FF FF FF     
   4287 FFFC40B8 FF FF FF FF FF FF FF FF     
   4288 FFFC40C0 FF FF FF FF FF FF FF FF     
   4289 FFFC40C8 FF FF FF FF FF FF FF FF     
   4290 FFFC40D0 FF FF FF FF FF FF FF FF     
   4291 FFFC40D8 FF FF FF FF FF FF FF FF     
   4292 FFFC40E0 FF FF FF FF FF FF FF FF     
   4293 FFFC40E8 FF FF FF FF FF FF FF FF     
   4294 FFFC40F0 FF FF FF FF FF FF FF FF     
   4295 FFFC40F8 FF FF FF FF FF FF FF FF     
   4296 FFFC4100 FF FF FF FF FF FF FF FF     
   4297 FFFC4108 FF FF FF FF FF FF FF FF     
   4298 FFFC4110 FF FF FF FF FF FF FF FF     
   4299 FFFC4118 FF FF FF FF FF FF FF FF     
   4300 FFFC4120 FF FF FF FF FF FF FF FF     
   4301 FFFC4128 FF FF FF FF FF FF FF FF     
   4302 FFFC4130 FF FF FF FF FF FF FF FF     
   4303 FFFC4138 FF FF FF FF FF FF FF FF     
   4304 FFFC4140 FF FF FF FF FF FF FF FF     
   4305 FFFC4148 FF FF FF FF FF FF FF FF     
   4306 FFFC4150 FF FF FF FF FF FF FF FF     
   4307 FFFC4158 FF FF FF FF FF FF FF FF     
   4308 FFFC4160 FF FF FF FF FF FF FF FF     
   4309 FFFC4168 FF FF FF FF FF FF FF FF     
   4310 FFFC4170 FF FF FF FF FF FF FF FF     
   4311 FFFC4178 FF FF FF FF FF FF FF FF     
   4312 FFFC4180 FF FF FF FF FF FF FF FF     
   4313 FFFC4188 FF FF FF FF FF FF FF FF     
   4314 FFFC4190 FF FF FF FF FF FF FF FF     
   4315 FFFC4198 FF FF FF FF FF FF FF FF     
   4316 FFFC41A0 FF FF FF FF FF FF FF FF     
   4317 FFFC41A8 FF FF FF FF FF FF FF FF     
   4318 FFFC41B0 FF FF FF FF FF FF FF FF     
   4319 FFFC41B8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 19
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4320 FFFC41C0 FF FF FF FF FF FF FF FF     
   4321 FFFC41C8 FF FF FF FF FF FF FF FF     
   4322 FFFC41D0 FF FF FF FF FF FF FF FF     
   4323 FFFC41D8 FF FF FF FF FF FF FF FF     
   4324 FFFC41E0 FF FF FF FF FF FF FF FF     
   4325 FFFC41E8 FF FF FF FF FF FF FF FF     
   4326 FFFC41F0 FF FF FF FF FF FF FF FF     
   4327 FFFC41F8 FF FF FF FF FF FF FF FF     
   4328 FFFC4200 FF FF FF FF FF FF FF FF     
   4329 FFFC4208 FF FF FF FF FF FF FF FF     
   4330 FFFC4210 FF FF FF FF FF FF FF FF     
   4331 FFFC4218 FF FF FF FF FF FF FF FF     
   4332 FFFC4220 FF FF FF FF FF FF FF FF     
   4333 FFFC4228 FF FF FF FF FF FF FF FF     
   4334 FFFC4230 FF FF FF FF FF FF FF FF     
   4335 FFFC4238 FF FF FF FF FF FF FF FF     
   4336 FFFC4240 FF FF FF FF FF FF FF FF     
   4337 FFFC4248 FF FF FF FF FF FF FF FF     
   4338 FFFC4250 FF FF FF FF FF FF FF FF     
   4339 FFFC4258 FF FF FF FF FF FF FF FF     
   4340 FFFC4260 FF FF FF FF FF FF FF FF     
   4341 FFFC4268 FF FF FF FF FF FF FF FF     
   4342 FFFC4270 FF FF FF FF FF FF FF FF     
   4343 FFFC4278 FF FF FF FF FF FF FF FF     
   4344 FFFC4280 FF FF FF FF FF FF FF FF     
   4345 FFFC4288 FF FF FF FF FF FF FF FF     
   4346 FFFC4290 FF FF FF FF FF FF FF FF     
   4347 FFFC4298 FF FF FF FF FF FF FF FF     
   4348 FFFC42A0 FF FF FF FF FF FF FF FF     
   4349 FFFC42A8 FF FF FF FF FF FF FF FF     
   4350 FFFC42B0 FF FF FF FF FF FF FF FF     
   4351 FFFC42B8 FF FF FF FF FF FF FF FF     
   4352 FFFC42C0 FF FF FF FF FF FF FF FF     
   4353 FFFC42C8 FF FF FF FF FF FF FF FF     
   4354 FFFC42D0 FF FF FF FF FF FF FF FF     
   4355 FFFC42D8 FF FF FF FF FF FF FF FF     
   4356 FFFC42E0 FF FF FF FF FF FF FF FF     
   4357 FFFC42E8 FF FF FF FF FF FF FF FF     
   4358 FFFC42F0 FF FF FF FF FF FF FF FF     
   4359 FFFC42F8 FF FF FF FF FF FF FF FF     
   4360 FFFC4300 FF FF FF FF FF FF FF FF     
   4361 FFFC4308 FF FF FF FF FF FF FF FF     
   4362 FFFC4310 FF FF FF FF FF FF FF FF     
   4363 FFFC4318 FF FF FF FF FF FF FF FF     
   4364 FFFC4320 FF FF FF FF FF FF FF FF     
   4365 FFFC4328 FF FF FF FF FF FF FF FF     
   4366 FFFC4330 FF FF FF FF FF FF FF FF     
   4367 FFFC4338 FF FF FF FF FF FF FF FF     
   4368 FFFC4340 FF FF FF FF FF FF FF FF     
   4369 FFFC4348 FF FF FF FF FF FF FF FF     
   4370 FFFC4350 FF FF FF FF FF FF FF FF     
   4371 FFFC4358 FF FF FF FF FF FF FF FF     
   4372 FFFC4360 FF FF FF FF FF FF FF FF     
   4373 FFFC4368 FF FF FF FF FF FF FF FF     
   4374 FFFC4370 FF FF FF FF FF FF FF FF     
   4375 FFFC4378 FF FF FF FF FF FF FF FF     
   4376 FFFC4380 FF FF FF FF FF FF FF FF     
   4377 FFFC4388 FF FF FF FF FF FF FF FF     
   4378 FFFC4390 FF FF FF FF FF FF FF FF     
   4379 FFFC4398 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 20
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4380 FFFC43A0 FF FF FF FF FF FF FF FF     
   4381 FFFC43A8 FF FF FF FF FF FF FF FF     
   4382 FFFC43B0 FF FF FF FF FF FF FF FF     
   4383 FFFC43B8 FF FF FF FF FF FF FF FF     
   4384 FFFC43C0 FF FF FF FF FF FF FF FF     
   4385 FFFC43C8 FF FF FF FF FF FF FF FF     
   4386 FFFC43D0 FF FF FF FF FF FF FF FF     
   4387 FFFC43D8 FF FF FF FF FF FF FF FF     
   4388 FFFC43E0 FF FF FF FF FF FF FF FF     
   4389 FFFC43E8 FF FF FF FF FF FF FF FF     
   4390 FFFC43F0 FF FF FF FF FF FF FF FF     
   4391 FFFC43F8 FF FF FF FF FF FF FF FF     
   4392 FFFC4400 FF FF FF FF FF FF FF FF     
   4393 FFFC4408 FF FF FF FF FF FF FF FF     
   4394 FFFC4410 FF FF FF FF FF FF FF FF     
   4395 FFFC4418 FF FF FF FF FF FF FF FF     
   4396 FFFC4420 FF FF FF FF FF FF FF FF     
   4397 FFFC4428 FF FF FF FF FF FF FF FF     
   4398 FFFC4430 FF FF FF FF FF FF FF FF     
   4399 FFFC4438 FF FF FF FF FF FF FF FF     
   4400 FFFC4440 FF FF FF FF FF FF FF FF     
   4401 FFFC4448 FF FF FF FF FF FF FF FF     
   4402 FFFC4450 FF FF FF FF FF FF FF FF     
   4403 FFFC4458 FF FF FF FF FF FF FF FF     
   4404 FFFC4460 FF FF FF FF FF FF FF FF     
   4405 FFFC4468 FF FF FF FF FF FF FF FF     
   4406 FFFC4470 FF FF FF FF FF FF FF FF     
   4407 FFFC4478 FF FF FF FF FF FF FF FF     
   4408 FFFC4480 FF FF FF FF FF FF FF FF     
   4409 FFFC4488 FF FF FF FF FF FF FF FF     
   4410 FFFC4490 FF FF FF FF FF FF FF FF     
   4411 FFFC4498 FF FF FF FF FF FF FF FF     
   4412 FFFC44A0 FF FF FF FF FF FF FF FF     
   4413 FFFC44A8 FF FF FF FF FF FF FF FF     
   4414 FFFC44B0 FF FF FF FF FF FF FF FF     
   4415 FFFC44B8 FF FF FF FF FF FF FF FF     
   4416 FFFC44C0 FF FF FF FF FF FF FF FF     
   4417 FFFC44C8 FF FF FF FF FF FF FF FF     
   4418 FFFC44D0 FF FF FF FF FF FF FF FF     
   4419 FFFC44D8 FF FF FF FF FF FF FF FF     
   4420 FFFC44E0 FF FF FF FF FF FF FF FF     
   4421 FFFC44E8 FF FF FF FF FF FF FF FF     
   4422 FFFC44F0 FF FF FF FF FF FF FF FF     
   4423 FFFC44F8 FF FF FF FF FF FF FF FF     
   4424 FFFC4500 FF FF FF FF FF FF FF FF     
   4425 FFFC4508 FF FF FF FF FF FF FF FF     
   4426 FFFC4510 FF FF FF FF FF FF FF FF     
   4427 FFFC4518 FF FF FF FF FF FF FF FF     
   4428 FFFC4520 FF FF FF FF FF FF FF FF     
   4429 FFFC4528 FF FF FF FF FF FF FF FF     
   4430 FFFC4530 FF FF FF FF FF FF FF FF     
   4431 FFFC4538 FF FF FF FF FF FF FF FF     
   4432 FFFC4540 FF FF FF FF FF FF FF FF     
   4433 FFFC4548 FF FF FF FF FF FF FF FF     
   4434 FFFC4550 FF FF FF FF FF FF FF FF     
   4435 FFFC4558 FF FF FF FF FF FF FF FF     
   4436 FFFC4560 FF FF FF FF FF FF FF FF     
   4437 FFFC4568 FF FF FF FF FF FF FF FF     
   4438 FFFC4570 FF FF FF FF FF FF FF FF     
   4439 FFFC4578 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 21
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4440 FFFC4580 FF FF FF FF FF FF FF FF     
   4441 FFFC4588 FF FF FF FF FF FF FF FF     
   4442 FFFC4590 FF FF FF FF FF FF FF FF     
   4443 FFFC4598 FF FF FF FF FF FF FF FF     
   4444 FFFC45A0 FF FF FF FF FF FF FF FF     
   4445 FFFC45A8 FF FF FF FF FF FF FF FF     
   4446 FFFC45B0 FF FF FF FF FF FF FF FF     
   4447 FFFC45B8 FF FF FF FF FF FF FF FF     
   4448 FFFC45C0 FF FF FF FF FF FF FF FF     
   4449 FFFC45C8 FF FF FF FF FF FF FF FF     
   4450 FFFC45D0 FF FF FF FF FF FF FF FF     
   4451 FFFC45D8 FF FF FF FF FF FF FF FF     
   4452 FFFC45E0 FF FF FF FF FF FF FF FF     
   4453 FFFC45E8 FF FF FF FF FF FF FF FF     
   4454 FFFC45F0 FF FF FF FF FF FF FF FF     
   4455 FFFC45F8 FF FF FF FF FF FF FF FF     
   4456 FFFC4600 FF FF FF FF FF FF FF FF     
   4457 FFFC4608 FF FF FF FF FF FF FF FF     
   4458 FFFC4610 FF FF FF FF FF FF FF FF     
   4459 FFFC4618 FF FF FF FF FF FF FF FF     
   4460 FFFC4620 FF FF FF FF FF FF FF FF     
   4461 FFFC4628 FF FF FF FF FF FF FF FF     
   4462 FFFC4630 FF FF FF FF FF FF FF FF     
   4463 FFFC4638 FF FF FF FF FF FF FF FF     
   4464 FFFC4640 FF FF FF FF FF FF FF FF     
   4465 FFFC4648 FF FF FF FF FF FF FF FF     
   4466 FFFC4650 FF FF FF FF FF FF FF FF     
   4467 FFFC4658 FF FF FF FF FF FF FF FF     
   4468 FFFC4660 FF FF FF FF FF FF FF FF     
   4469 FFFC4668 FF FF FF FF FF FF FF FF     
   4470 FFFC4670 FF FF FF FF FF FF FF FF     
   4471 FFFC4678 FF FF FF FF FF FF FF FF     
   4472 FFFC4680 FF FF FF FF FF FF FF FF     
   4473 FFFC4688 FF FF FF FF FF FF FF FF     
   4474 FFFC4690 FF FF FF FF FF FF FF FF     
   4475 FFFC4698 FF FF FF FF FF FF FF FF     
   4476 FFFC46A0 FF FF FF FF FF FF FF FF     
   4477 FFFC46A8 FF FF FF FF FF FF FF FF     
   4478 FFFC46B0 FF FF FF FF FF FF FF FF     
   4479 FFFC46B8 FF FF FF FF FF FF FF FF     
   4480 FFFC46C0 FF FF FF FF FF FF FF FF     
   4481 FFFC46C8 FF FF FF FF FF FF FF FF     
   4482 FFFC46D0 FF FF FF FF FF FF FF FF     
   4483 FFFC46D8 FF FF FF FF FF FF FF FF     
   4484 FFFC46E0 FF FF FF FF FF FF FF FF     
   4485 FFFC46E8 FF FF FF FF FF FF FF FF     
   4486 FFFC46F0 FF FF FF FF FF FF FF FF     
   4487 FFFC46F8 FF FF FF FF FF FF FF FF     
   4488 FFFC4700 FF FF FF FF FF FF FF FF     
   4489 FFFC4708 FF FF FF FF FF FF FF FF     
   4490 FFFC4710 FF FF FF FF FF FF FF FF     
   4491 FFFC4718 FF FF FF FF FF FF FF FF     
   4492 FFFC4720 FF FF FF FF FF FF FF FF     
   4493 FFFC4728 FF FF FF FF FF FF FF FF     
   4494 FFFC4730 FF FF FF FF FF FF FF FF     
   4495 FFFC4738 FF FF FF FF FF FF FF FF     
   4496 FFFC4740 FF FF FF FF FF FF FF FF     
   4497 FFFC4748 FF FF FF FF FF FF FF FF     
   4498 FFFC4750 FF FF FF FF FF FF FF FF     
   4499 FFFC4758 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 22
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4500 FFFC4760 FF FF FF FF FF FF FF FF     
   4501 FFFC4768 FF FF FF FF FF FF FF FF     
   4502 FFFC4770 FF FF FF FF FF FF FF FF     
   4503 FFFC4778 FF FF FF FF FF FF FF FF     
   4504 FFFC4780 FF FF FF FF FF FF FF FF     
   4505 FFFC4788 FF FF FF FF FF FF FF FF     
   4506 FFFC4790 FF FF FF FF FF FF FF FF     
   4507 FFFC4798 FF FF FF FF FF FF FF FF     
   4508 FFFC47A0 FF FF FF FF FF FF FF FF     
   4509 FFFC47A8 FF FF FF FF FF FF FF FF     
   4510 FFFC47B0 FF FF FF FF FF FF FF FF     
   4511 FFFC47B8 FF FF FF FF FF FF FF FF     
   4512 FFFC47C0 FF FF FF FF FF FF FF FF     
   4513 FFFC47C8 FF FF FF FF FF FF FF FF     
   4514 FFFC47D0 FF FF FF FF FF FF FF FF     
   4515 FFFC47D8 FF FF FF FF FF FF FF FF     
   4516 FFFC47E0 FF FF FF FF FF FF FF FF     
   4517 FFFC47E8 FF FF FF FF FF FF FF FF     
   4518 FFFC47F0 FF FF FF FF FF FF FF FF     
   4519 FFFC47F8 FF FF FF FF FF FF FF FF     
   4520 FFFC4800 FF FF FF FF FF FF FF FF     
   4521 FFFC4808 FF FF FF FF FF FF FF FF     
   4522 FFFC4810 FF FF FF FF FF FF FF FF     
   4523 FFFC4818 FF FF FF FF FF FF FF FF     
   4524 FFFC4820 FF FF FF FF FF FF FF FF     
   4525 FFFC4828 FF FF FF FF FF FF FF FF     
   4526 FFFC4830 FF FF FF FF FF FF FF FF     
   4527 FFFC4838 FF FF FF FF FF FF FF FF     
   4528 FFFC4840 FF FF FF FF FF FF FF FF     
   4529 FFFC4848 FF FF FF FF FF FF FF FF     
   4530 FFFC4850 FF FF FF FF FF FF FF FF     
   4531 FFFC4858 FF FF FF FF FF FF FF FF     
   4532 FFFC4860 FF FF FF FF FF FF FF FF     
   4533 FFFC4868 FF FF FF FF FF FF FF FF     
   4534 FFFC4870 FF FF FF FF FF FF FF FF     
   4535 FFFC4878 FF FF FF FF FF FF FF FF     
   4536 FFFC4880 FF FF FF FF FF FF FF FF     
   4537 FFFC4888 FF FF FF FF FF FF FF FF     
   4538 FFFC4890 FF FF FF FF FF FF FF FF     
   4539 FFFC4898 FF FF FF FF FF FF FF FF     
   4540 FFFC48A0 FF FF FF FF FF FF FF FF     
   4541 FFFC48A8 FF FF FF FF FF FF FF FF     
   4542 FFFC48B0 FF FF FF FF FF FF FF FF     
   4543 FFFC48B8 FF FF FF FF FF FF FF FF     
   4544 FFFC48C0 FF FF FF FF FF FF FF FF     
   4545 FFFC48C8 FF FF FF FF FF FF FF FF     
   4546 FFFC48D0 FF FF FF FF FF FF FF FF     
   4547 FFFC48D8 FF FF FF FF FF FF FF FF     
   4548 FFFC48E0 FF FF FF FF FF FF FF FF     
   4549 FFFC48E8 FF FF FF FF FF FF FF FF     
   4550 FFFC48F0 FF FF FF FF FF FF FF FF     
   4551 FFFC48F8 FF FF FF FF FF FF FF FF     
   4552 FFFC4900 FF FF FF FF FF FF FF FF     
   4553 FFFC4908 FF FF FF FF FF FF FF FF     
   4554 FFFC4910 FF FF FF FF FF FF FF FF     
   4555 FFFC4918 FF FF FF FF FF FF FF FF     
   4556 FFFC4920 FF FF FF FF FF FF FF FF     
   4557 FFFC4928 FF FF FF FF FF FF FF FF     
   4558 FFFC4930 FF FF FF FF FF FF FF FF     
   4559 FFFC4938 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 23
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4560 FFFC4940 FF FF FF FF FF FF FF FF     
   4561 FFFC4948 FF FF FF FF FF FF FF FF     
   4562 FFFC4950 FF FF FF FF FF FF FF FF     
   4563 FFFC4958 FF FF FF FF FF FF FF FF     
   4564 FFFC4960 FF FF FF FF FF FF FF FF     
   4565 FFFC4968 FF FF FF FF FF FF FF FF     
   4566 FFFC4970 FF FF FF FF FF FF FF FF     
   4567 FFFC4978 FF FF FF FF FF FF FF FF     
   4568 FFFC4980 FF FF FF FF FF FF FF FF     
   4569 FFFC4988 FF FF FF FF FF FF FF FF     
   4570 FFFC4990 FF FF FF FF FF FF FF FF     
   4571 FFFC4998 FF FF FF FF FF FF FF FF     
   4572 FFFC49A0 FF FF FF FF FF FF FF FF     
   4573 FFFC49A8 FF FF FF FF FF FF FF FF     
   4574 FFFC49B0 FF FF FF FF FF FF FF FF     
   4575 FFFC49B8 FF FF FF FF FF FF FF FF     
   4576 FFFC49C0 FF FF FF FF FF FF FF FF     
   4577 FFFC49C8 FF FF FF FF FF FF FF FF     
   4578 FFFC49D0 FF FF FF FF FF FF FF FF     
   4579 FFFC49D8 FF FF FF FF FF FF FF FF     
   4580 FFFC49E0 FF FF FF FF FF FF FF FF     
   4581 FFFC49E8 FF FF FF FF FF FF FF FF     
   4582 FFFC49F0 FF FF FF FF FF FF FF FF     
   4583 FFFC49F8 FF FF FF FF FF FF FF FF     
   4584 FFFC4A00 FF FF FF FF FF FF FF FF     
   4585 FFFC4A08 FF FF FF FF FF FF FF FF     
   4586 FFFC4A10 FF FF FF FF FF FF FF FF     
   4587 FFFC4A18 FF FF FF FF FF FF FF FF     
   4588 FFFC4A20 FF FF FF FF FF FF FF FF     
   4589 FFFC4A28 FF FF FF FF FF FF FF FF     
   4590 FFFC4A30 FF FF FF FF FF FF FF FF     
   4591 FFFC4A38 FF FF FF FF FF FF FF FF     
   4592 FFFC4A40 FF FF FF FF FF FF FF FF     
   4593 FFFC4A48 FF FF FF FF FF FF FF FF     
   4594 FFFC4A50 FF FF FF FF FF FF FF FF     
   4595 FFFC4A58 FF FF FF FF FF FF FF FF     
   4596 FFFC4A60 FF FF FF FF FF FF FF FF     
   4597 FFFC4A68 FF FF FF FF FF FF FF FF     
   4598 FFFC4A70 FF FF FF FF FF FF FF FF     
   4599 FFFC4A78 FF FF FF FF FF FF FF FF     
   4600 FFFC4A80 FF FF FF FF FF FF FF FF     
   4601 FFFC4A88 FF FF FF FF FF FF FF FF     
   4602 FFFC4A90 FF FF FF FF FF FF FF FF     
   4603 FFFC4A98 FF FF FF FF FF FF FF FF     
   4604 FFFC4AA0 FF FF FF FF FF FF FF FF     
   4605 FFFC4AA8 FF FF FF FF FF FF FF FF     
   4606 FFFC4AB0 FF FF FF FF FF FF FF FF     
   4607 FFFC4AB8 FF FF FF FF FF FF FF FF     
   4608 FFFC4AC0 FF FF FF FF FF FF FF FF     
   4609 FFFC4AC8 FF FF FF FF FF FF FF FF     
   4610 FFFC4AD0 FF FF FF FF FF FF FF FF     
   4611 FFFC4AD8 FF FF FF FF FF FF FF FF     
   4612 FFFC4AE0 FF FF FF FF FF FF FF FF     
   4613 FFFC4AE8 FF FF FF FF FF FF FF FF     
   4614 FFFC4AF0 FF FF FF FF FF FF FF FF     
   4615 FFFC4AF8 FF FF FF FF FF FF FF FF     
   4616 FFFC4B00 FF FF FF FF FF FF FF FF     
   4617 FFFC4B08 FF FF FF FF FF FF FF FF     
   4618 FFFC4B10 FF FF FF FF FF FF FF FF     
   4619 FFFC4B18 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 24
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4620 FFFC4B20 FF FF FF FF FF FF FF FF     
   4621 FFFC4B28 FF FF FF FF FF FF FF FF     
   4622 FFFC4B30 FF FF FF FF FF FF FF FF     
   4623 FFFC4B38 FF FF FF FF FF FF FF FF     
   4624 FFFC4B40 FF FF FF FF FF FF FF FF     
   4625 FFFC4B48 FF FF FF FF FF FF FF FF     
   4626 FFFC4B50 FF FF FF FF FF FF FF FF     
   4627 FFFC4B58 FF FF FF FF FF FF FF FF     
   4628 FFFC4B60 FF FF FF FF FF FF FF FF     
   4629 FFFC4B68 FF FF FF FF FF FF FF FF     
   4630 FFFC4B70 FF FF FF FF FF FF FF FF     
   4631 FFFC4B78 FF FF FF FF FF FF FF FF     
   4632 FFFC4B80 FF FF FF FF FF FF FF FF     
   4633 FFFC4B88 FF FF FF FF FF FF FF FF     
   4634 FFFC4B90 FF FF FF FF FF FF FF FF     
   4635 FFFC4B98 FF FF FF FF FF FF FF FF     
   4636 FFFC4BA0 FF FF FF FF FF FF FF FF     
   4637 FFFC4BA8 FF FF FF FF FF FF FF FF     
   4638 FFFC4BB0 FF FF FF FF FF FF FF FF     
   4639 FFFC4BB8 FF FF FF FF FF FF FF FF     
   4640 FFFC4BC0 FF FF FF FF FF FF FF FF     
   4641 FFFC4BC8 FF FF FF FF FF FF FF FF     
   4642 FFFC4BD0 FF FF FF FF FF FF FF FF     
   4643 FFFC4BD8 FF FF FF FF FF FF FF FF     
   4644 FFFC4BE0 FF FF FF FF FF FF FF FF     
   4645 FFFC4BE8 FF FF FF FF FF FF FF FF     
   4646 FFFC4BF0 FF FF FF FF FF FF FF FF     
   4647 FFFC4BF8 FF FF FF FF FF FF FF FF     
   4648 FFFC4C00 FF FF FF FF FF FF FF FF     
   4649 FFFC4C08 FF FF FF FF FF FF FF FF     
   4650 FFFC4C10 FF FF FF FF FF FF FF FF     
   4651 FFFC4C18 FF FF FF FF FF FF FF FF     
   4652 FFFC4C20 FF FF FF FF FF FF FF FF     
   4653 FFFC4C28 FF FF FF FF FF FF FF FF     
   4654 FFFC4C30 FF FF FF FF FF FF FF FF     
   4655 FFFC4C38 FF FF FF FF FF FF FF FF     
   4656 FFFC4C40 FF FF FF FF FF FF FF FF     
   4657 FFFC4C48 FF FF FF FF FF FF FF FF     
   4658 FFFC4C50 FF FF FF FF FF FF FF FF     
   4659 FFFC4C58 FF FF FF FF FF FF FF FF     
   4660 FFFC4C60 FF FF FF FF FF FF FF FF     
   4661 FFFC4C68 FF FF FF FF FF FF FF FF     
   4662 FFFC4C70 FF FF FF FF FF FF FF FF     
   4663 FFFC4C78 FF FF FF FF FF FF FF FF     
   4664 FFFC4C80 FF FF FF FF FF FF FF FF     
   4665 FFFC4C88 FF FF FF FF FF FF FF FF     
   4666 FFFC4C90 FF FF FF FF FF FF FF FF     
   4667 FFFC4C98 FF FF FF FF FF FF FF FF     
   4668 FFFC4CA0 FF FF FF FF FF FF FF FF     
   4669 FFFC4CA8 FF FF FF FF FF FF FF FF     
   4670 FFFC4CB0 FF FF FF FF FF FF FF FF     
   4671 FFFC4CB8 FF FF FF FF FF FF FF FF     
   4672 FFFC4CC0 FF FF FF FF FF FF FF FF     
   4673 FFFC4CC8 FF FF FF FF FF FF FF FF     
   4674 FFFC4CD0 FF FF FF FF FF FF FF FF     
   4675 FFFC4CD8 FF FF FF FF FF FF FF FF     
   4676 FFFC4CE0 FF FF FF FF FF FF FF FF     
   4677 FFFC4CE8 FF FF FF FF FF FF FF FF     
   4678 FFFC4CF0 FF FF FF FF FF FF FF FF     
   4679 FFFC4CF8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 25
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4680 FFFC4D00 FF FF FF FF FF FF FF FF     
   4681 FFFC4D08 FF FF FF FF FF FF FF FF     
   4682 FFFC4D10 FF FF FF FF FF FF FF FF     
   4683 FFFC4D18 FF FF FF FF FF FF FF FF     
   4684 FFFC4D20 FF FF FF FF FF FF FF FF     
   4685 FFFC4D28 FF FF FF FF FF FF FF FF     
   4686 FFFC4D30 FF FF FF FF FF FF FF FF     
   4687 FFFC4D38 FF FF FF FF FF FF FF FF     
   4688 FFFC4D40 FF FF FF FF FF FF FF FF     
   4689 FFFC4D48 FF FF FF FF FF FF FF FF     
   4690 FFFC4D50 FF FF FF FF FF FF FF FF     
   4691 FFFC4D58 FF FF FF FF FF FF FF FF     
   4692 FFFC4D60 FF FF FF FF FF FF FF FF     
   4693 FFFC4D68 FF FF FF FF FF FF FF FF     
   4694 FFFC4D70 FF FF FF FF FF FF FF FF     
   4695 FFFC4D78 FF FF FF FF FF FF FF FF     
   4696 FFFC4D80 FF FF FF FF FF FF FF FF     
   4697 FFFC4D88 FF FF FF FF FF FF FF FF     
   4698 FFFC4D90 FF FF FF FF FF FF FF FF     
   4699 FFFC4D98 FF FF FF FF FF FF FF FF     
   4700 FFFC4DA0 FF FF FF FF FF FF FF FF     
   4701 FFFC4DA8 FF FF FF FF FF FF FF FF     
   4702 FFFC4DB0 FF FF FF FF FF FF FF FF     
   4703 FFFC4DB8 FF FF FF FF FF FF FF FF     
   4704 FFFC4DC0 FF FF FF FF FF FF FF FF     
   4705 FFFC4DC8 FF FF FF FF FF FF FF FF     
   4706 FFFC4DD0 FF FF FF FF FF FF FF FF     
   4707 FFFC4DD8 FF FF FF FF FF FF FF FF     
   4708 FFFC4DE0 FF FF FF FF FF FF FF FF     
   4709 FFFC4DE8 FF FF FF FF FF FF FF FF     
   4710 FFFC4DF0 FF FF FF FF FF FF FF FF     
   4711 FFFC4DF8 FF FF FF FF FF FF FF FF     
   4712 FFFC4E00 FF FF FF FF FF FF FF FF     
   4713 FFFC4E08 FF FF FF FF FF FF FF FF     
   4714 FFFC4E10 FF FF FF FF FF FF FF FF     
   4715 FFFC4E18 FF FF FF FF FF FF FF FF     
   4716 FFFC4E20 FF FF FF FF FF FF FF FF     
   4717 FFFC4E28 FF FF FF FF FF FF FF FF     
   4718 FFFC4E30 FF FF FF FF FF FF FF FF     
   4719 FFFC4E38 FF FF FF FF FF FF FF FF     
   4720 FFFC4E40 FF FF FF FF FF FF FF FF     
   4721 FFFC4E48 FF FF FF FF FF FF FF FF     
   4722 FFFC4E50 FF FF FF FF FF FF FF FF     
   4723 FFFC4E58 FF FF FF FF FF FF FF FF     
   4724 FFFC4E60 FF FF FF FF FF FF FF FF     
   4725 FFFC4E68 FF FF FF FF FF FF FF FF     
   4726 FFFC4E70 FF FF FF FF FF FF FF FF     
   4727 FFFC4E78 FF FF FF FF FF FF FF FF     
   4728 FFFC4E80 FF FF FF FF FF FF FF FF     
   4729 FFFC4E88 FF FF FF FF FF FF FF FF     
   4730 FFFC4E90 FF FF FF FF FF FF FF FF     
   4731 FFFC4E98 FF FF FF FF FF FF FF FF     
   4732 FFFC4EA0 FF FF FF FF FF FF FF FF     
   4733 FFFC4EA8 FF FF FF FF FF FF FF FF     
   4734 FFFC4EB0 FF FF FF FF FF FF FF FF     
   4735 FFFC4EB8 FF FF FF FF FF FF FF FF     
   4736 FFFC4EC0 FF FF FF FF FF FF FF FF     
   4737 FFFC4EC8 FF FF FF FF FF FF FF FF     
   4738 FFFC4ED0 FF FF FF FF FF FF FF FF     
   4739 FFFC4ED8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 26
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4740 FFFC4EE0 FF FF FF FF FF FF FF FF     
   4741 FFFC4EE8 FF FF FF FF FF FF FF FF     
   4742 FFFC4EF0 FF FF FF FF FF FF FF FF     
   4743 FFFC4EF8 FF FF FF FF FF FF FF FF     
   4744 FFFC4F00 FF FF FF FF FF FF FF FF     
   4745 FFFC4F08 FF FF FF FF FF FF FF FF     
   4746 FFFC4F10 FF FF FF FF FF FF FF FF     
   4747 FFFC4F18 FF FF FF FF FF FF FF FF     
   4748 FFFC4F20 FF FF FF FF FF FF FF FF     
   4749 FFFC4F28 FF FF FF FF FF FF FF FF     
   4750 FFFC4F30 FF FF FF FF FF FF FF FF     
   4751 FFFC4F38 FF FF FF FF FF FF FF FF     
   4752 FFFC4F40 FF FF FF FF FF FF FF FF     
   4753 FFFC4F48 FF FF FF FF FF FF FF FF     
   4754 FFFC4F50 FF FF FF FF FF FF FF FF     
   4755 FFFC4F58 FF FF FF FF FF FF FF FF     
   4756 FFFC4F60 FF FF FF FF FF FF FF FF     
   4757 FFFC4F68 FF FF FF FF FF FF FF FF     
   4758 FFFC4F70 FF FF FF FF FF FF FF FF     
   4759 FFFC4F78 FF FF FF FF FF FF FF FF     
   4760 FFFC4F80 FF FF FF FF FF FF FF FF     
   4761 FFFC4F88 FF FF FF FF FF FF FF FF     
   4762 FFFC4F90 FF FF FF FF FF FF FF FF     
   4763 FFFC4F98 FF FF FF FF FF FF FF FF     
   4764 FFFC4FA0 FF FF FF FF FF FF FF FF     
   4765 FFFC4FA8 FF FF FF FF FF FF FF FF     
   4766 FFFC4FB0 FF FF FF FF FF FF FF FF     
   4767 FFFC4FB8 FF FF FF FF FF FF FF FF     
   4768 FFFC4FC0 FF FF FF FF FF FF FF FF     
   4769 FFFC4FC8 FF FF FF FF FF FF FF FF     
   4770 FFFC4FD0 FF FF FF FF FF FF FF FF     
   4771 FFFC4FD8 FF FF FF FF FF FF FF FF     
   4772 FFFC4FE0 FF FF FF FF FF FF FF FF     
   4773 FFFC4FE8 FF FF FF FF FF FF FF FF     
   4774 FFFC4FF0 FF FF FF FF FF FF FF FF     
   4775 FFFC4FF8 FF FF FF FF FF FF FF FF     
   4776 FFFC5000 FF FF FF FF FF FF FF FF     
   4777 FFFC5008 FF FF FF FF FF FF FF FF     
   4778 FFFC5010 FF FF FF FF FF FF FF FF     
   4779 FFFC5018 FF FF FF FF FF FF FF FF     
   4780 FFFC5020 FF FF FF FF FF FF FF FF     
   4781 FFFC5028 FF FF FF FF FF FF FF FF     
   4782 FFFC5030 FF FF FF FF FF FF FF FF     
   4783 FFFC5038 FF FF FF FF FF FF FF FF     
   4784 FFFC5040 FF FF FF FF FF FF FF FF     
   4785 FFFC5048 FF FF FF FF FF FF FF FF     
   4786 FFFC5050 FF FF FF FF FF FF FF FF     
   4787 FFFC5058 FF FF FF FF FF FF FF FF     
   4788 FFFC5060 FF FF FF FF FF FF FF FF     
   4789 FFFC5068 FF FF FF FF FF FF FF FF     
   4790 FFFC5070 FF FF FF FF FF FF FF FF     
   4791 FFFC5078 FF FF FF FF FF FF FF FF     
   4792 FFFC5080 FF FF FF FF FF FF FF FF     
   4793 FFFC5088 FF FF FF FF FF FF FF FF     
   4794 FFFC5090 FF FF FF FF FF FF FF FF     
   4795 FFFC5098 FF FF FF FF FF FF FF FF     
   4796 FFFC50A0 FF FF FF FF FF FF FF FF     
   4797 FFFC50A8 FF FF FF FF FF FF FF FF     
   4798 FFFC50B0 FF FF FF FF FF FF FF FF     
   4799 FFFC50B8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 27
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4800 FFFC50C0 FF FF FF FF FF FF FF FF     
   4801 FFFC50C8 FF FF FF FF FF FF FF FF     
   4802 FFFC50D0 FF FF FF FF FF FF FF FF     
   4803 FFFC50D8 FF FF FF FF FF FF FF FF     
   4804 FFFC50E0 FF FF FF FF FF FF FF FF     
   4805 FFFC50E8 FF FF FF FF FF FF FF FF     
   4806 FFFC50F0 FF FF FF FF FF FF FF FF     
   4807 FFFC50F8 FF FF FF FF FF FF FF FF     
   4808 FFFC5100 FF FF FF FF FF FF FF FF     
   4809 FFFC5108 FF FF FF FF FF FF FF FF     
   4810 FFFC5110 FF FF FF FF FF FF FF FF     
   4811 FFFC5118 FF FF FF FF FF FF FF FF     
   4812 FFFC5120 FF FF FF FF FF FF FF FF     
   4813 FFFC5128 FF FF FF FF FF FF FF FF     
   4814 FFFC5130 FF FF FF FF FF FF FF FF     
   4815 FFFC5138 FF FF FF FF FF FF FF FF     
   4816 FFFC5140 FF FF FF FF FF FF FF FF     
   4817 FFFC5148 FF FF FF FF FF FF FF FF     
   4818 FFFC5150 FF FF FF FF FF FF FF FF     
   4819 FFFC5158 FF FF FF FF FF FF FF FF     
   4820 FFFC5160 FF FF FF FF FF FF FF FF     
   4821 FFFC5168 FF FF FF FF FF FF FF FF     
   4822 FFFC5170 FF FF FF FF FF FF FF FF     
   4823 FFFC5178 FF FF FF FF FF FF FF FF     
   4824 FFFC5180 FF FF FF FF FF FF FF FF     
   4825 FFFC5188 FF FF FF FF FF FF FF FF     
   4826 FFFC5190 FF FF FF FF FF FF FF FF     
   4827 FFFC5198 FF FF FF FF FF FF FF FF     
   4828 FFFC51A0 FF FF FF FF FF FF FF FF     
   4829 FFFC51A8 FF FF FF FF FF FF FF FF     
   4830 FFFC51B0 FF FF FF FF FF FF FF FF     
   4831 FFFC51B8 FF FF FF FF FF FF FF FF     
   4832 FFFC51C0 FF FF FF FF FF FF FF FF     
   4833 FFFC51C8 FF FF FF FF FF FF FF FF     
   4834 FFFC51D0 FF FF FF FF FF FF FF FF     
   4835 FFFC51D8 FF FF FF FF FF FF FF FF     
   4836 FFFC51E0 FF FF FF FF FF FF FF FF     
   4837 FFFC51E8 FF FF FF FF FF FF FF FF     
   4838 FFFC51F0 FF FF FF FF FF FF FF FF     
   4839 FFFC51F8 FF FF FF FF FF FF FF FF     
   4840 FFFC5200 FF FF FF FF FF FF FF FF     
   4841 FFFC5208 FF FF FF FF FF FF FF FF     
   4842 FFFC5210 FF FF FF FF FF FF FF FF     
   4843 FFFC5218 FF FF FF FF FF FF FF FF     
   4844 FFFC5220 FF FF FF FF FF FF FF FF     
   4845 FFFC5228 FF FF FF FF FF FF FF FF     
   4846 FFFC5230 FF FF FF FF FF FF FF FF     
   4847 FFFC5238 FF FF FF FF FF FF FF FF     
   4848 FFFC5240 FF FF FF FF FF FF FF FF     
   4849 FFFC5248 FF FF FF FF FF FF FF FF     
   4850 FFFC5250 FF FF FF FF FF FF FF FF     
   4851 FFFC5258 FF FF FF FF FF FF FF FF     
   4852 FFFC5260 FF FF FF FF FF FF FF FF     
   4853 FFFC5268 FF FF FF FF FF FF FF FF     
   4854 FFFC5270 FF FF FF FF FF FF FF FF     
   4855 FFFC5278 FF FF FF FF FF FF FF FF     
   4856 FFFC5280 FF FF FF FF FF FF FF FF     
   4857 FFFC5288 FF FF FF FF FF FF FF FF     
   4858 FFFC5290 FF FF FF FF FF FF FF FF     
   4859 FFFC5298 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 28
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4860 FFFC52A0 FF FF FF FF FF FF FF FF     
   4861 FFFC52A8 FF FF FF FF FF FF FF FF     
   4862 FFFC52B0 FF FF FF FF FF FF FF FF     
   4863 FFFC52B8 FF FF FF FF FF FF FF FF     
   4864 FFFC52C0 FF FF FF FF FF FF FF FF     
   4865 FFFC52C8 FF FF FF FF FF FF FF FF     
   4866 FFFC52D0 FF FF FF FF FF FF FF FF     
   4867 FFFC52D8 FF FF FF FF FF FF FF FF     
   4868 FFFC52E0 FF FF FF FF FF FF FF FF     
   4869 FFFC52E8 FF FF FF FF FF FF FF FF     
   4870 FFFC52F0 FF FF FF FF FF FF FF FF     
   4871 FFFC52F8 FF FF FF FF FF FF FF FF     
   4872 FFFC5300 FF FF FF FF FF FF FF FF     
   4873 FFFC5308 FF FF FF FF FF FF FF FF     
   4874 FFFC5310 FF FF FF FF FF FF FF FF     
   4875 FFFC5318 FF FF FF FF FF FF FF FF     
   4876 FFFC5320 FF FF FF FF FF FF FF FF     
   4877 FFFC5328 FF FF FF FF FF FF FF FF     
   4878 FFFC5330 FF FF FF FF FF FF FF FF     
   4879 FFFC5338 FF FF FF FF FF FF FF FF     
   4880 FFFC5340 FF FF FF FF FF FF FF FF     
   4881 FFFC5348 FF FF FF FF FF FF FF FF     
   4882 FFFC5350 FF FF FF FF FF FF FF FF     
   4883 FFFC5358 FF FF FF FF FF FF FF FF     
   4884 FFFC5360 FF FF FF FF FF FF FF FF     
   4885 FFFC5368 FF FF FF FF FF FF FF FF     
   4886 FFFC5370 FF FF FF FF FF FF FF FF     
   4887 FFFC5378 FF FF FF FF FF FF FF FF     
   4888 FFFC5380 FF FF FF FF FF FF FF FF     
   4889 FFFC5388 FF FF FF FF FF FF FF FF     
   4890 FFFC5390 FF FF FF FF FF FF FF FF     
   4891 FFFC5398 FF FF FF FF FF FF FF FF     
   4892 FFFC53A0 FF FF FF FF FF FF FF FF     
   4893 FFFC53A8 FF FF FF FF FF FF FF FF     
   4894 FFFC53B0 FF FF FF FF FF FF FF FF     
   4895 FFFC53B8 FF FF FF FF FF FF FF FF     
   4896 FFFC53C0 FF FF FF FF FF FF FF FF     
   4897 FFFC53C8 FF FF FF FF FF FF FF FF     
   4898 FFFC53D0 FF FF FF FF FF FF FF FF     
   4899 FFFC53D8 FF FF FF FF FF FF FF FF     
   4900 FFFC53E0 FF FF FF FF FF FF FF FF     
   4901 FFFC53E8 FF FF FF FF FF FF FF FF     
   4902 FFFC53F0 FF FF FF FF FF FF FF FF     
   4903 FFFC53F8 FF FF FF FF FF FF FF FF     
   4904 FFFC5400 FF FF FF FF FF FF FF FF     
   4905 FFFC5408 FF FF FF FF FF FF FF FF     
   4906 FFFC5410 FF FF FF FF FF FF FF FF     
   4907 FFFC5418 FF FF FF FF FF FF FF FF     
   4908 FFFC5420 FF FF FF FF FF FF FF FF     
   4909 FFFC5428 FF FF FF FF FF FF FF FF     
   4910 FFFC5430 FF FF FF FF FF FF FF FF     
   4911 FFFC5438 FF FF FF FF FF FF FF FF     
   4912 FFFC5440 FF FF FF FF FF FF FF FF     
   4913 FFFC5448 FF FF FF FF FF FF FF FF     
   4914 FFFC5450 FF FF FF FF FF FF FF FF     
   4915 FFFC5458 FF FF FF FF FF FF FF FF     
   4916 FFFC5460 FF FF FF FF FF FF FF FF     
   4917 FFFC5468 FF FF FF FF FF FF FF FF     
   4918 FFFC5470 FF FF FF FF FF FF FF FF     
   4919 FFFC5478 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 29
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4920 FFFC5480 FF FF FF FF FF FF FF FF     
   4921 FFFC5488 FF FF FF FF FF FF FF FF     
   4922 FFFC5490 FF FF FF FF FF FF FF FF     
   4923 FFFC5498 FF FF FF FF FF FF FF FF     
   4924 FFFC54A0 FF FF FF FF FF FF FF FF     
   4925 FFFC54A8 FF FF FF FF FF FF FF FF     
   4926 FFFC54B0 FF FF FF FF FF FF FF FF     
   4927 FFFC54B8 FF FF FF FF FF FF FF FF     
   4928 FFFC54C0 FF FF FF FF FF FF FF FF     
   4929 FFFC54C8 FF FF FF FF FF FF FF FF     
   4930 FFFC54D0 FF FF FF FF FF FF FF FF     
   4931 FFFC54D8 FF FF FF FF FF FF FF FF     
   4932 FFFC54E0 FF FF FF FF FF FF FF FF     
   4933 FFFC54E8 FF FF FF FF FF FF FF FF     
   4934 FFFC54F0 FF FF FF FF FF FF FF FF     
   4935 FFFC54F8 FF FF FF FF FF FF FF FF     
   4936 FFFC5500 FF FF FF FF FF FF FF FF     
   4937 FFFC5508 FF FF FF FF FF FF FF FF     
   4938 FFFC5510 FF FF FF FF FF FF FF FF     
   4939 FFFC5518 FF FF FF FF FF FF FF FF     
   4940 FFFC5520 FF FF FF FF FF FF FF FF     
   4941 FFFC5528 FF FF FF FF FF FF FF FF     
   4942 FFFC5530 FF FF FF FF FF FF FF FF     
   4943 FFFC5538 FF FF FF FF FF FF FF FF     
   4944 FFFC5540 FF FF FF FF FF FF FF FF     
   4945 FFFC5548 FF FF FF FF FF FF FF FF     
   4946 FFFC5550 FF FF FF FF FF FF FF FF     
   4947 FFFC5558 FF FF FF FF FF FF FF FF     
   4948 FFFC5560 FF FF FF FF FF FF FF FF     
   4949 FFFC5568 FF FF FF FF FF FF FF FF     
   4950 FFFC5570 FF FF FF FF FF FF FF FF     
   4951 FFFC5578 FF FF FF FF FF FF FF FF     
   4952 FFFC5580 FF FF FF FF FF FF FF FF     
   4953 FFFC5588 FF FF FF FF FF FF FF FF     
   4954 FFFC5590 FF FF FF FF FF FF FF FF     
   4955 FFFC5598 FF FF FF FF FF FF FF FF     
   4956 FFFC55A0 FF FF FF FF FF FF FF FF     
   4957 FFFC55A8 FF FF FF FF FF FF FF FF     
   4958 FFFC55B0 FF FF FF FF FF FF FF FF     
   4959 FFFC55B8 FF FF FF FF FF FF FF FF     
   4960 FFFC55C0 FF FF FF FF FF FF FF FF     
   4961 FFFC55C8 FF FF FF FF FF FF FF FF     
   4962 FFFC55D0 FF FF FF FF FF FF FF FF     
   4963 FFFC55D8 FF FF FF FF FF FF FF FF     
   4964 FFFC55E0 FF FF FF FF FF FF FF FF     
   4965 FFFC55E8 FF FF FF FF FF FF FF FF     
   4966 FFFC55F0 FF FF FF FF FF FF FF FF     
   4967 FFFC55F8 FF FF FF FF FF FF FF FF     
   4968 FFFC5600 FF FF FF FF FF FF FF FF     
   4969 FFFC5608 FF FF FF FF FF FF FF FF     
   4970 FFFC5610 FF FF FF FF FF FF FF FF     
   4971 FFFC5618 FF FF FF FF FF FF FF FF     
   4972 FFFC5620 FF FF FF FF FF FF FF FF     
   4973 FFFC5628 FF FF FF FF FF FF FF FF     
   4974 FFFC5630 FF FF FF FF FF FF FF FF     
   4975 FFFC5638 FF FF FF FF FF FF FF FF     
   4976 FFFC5640 FF FF FF FF FF FF FF FF     
   4977 FFFC5648 FF FF FF FF FF FF FF FF     
   4978 FFFC5650 FF FF FF FF FF FF FF FF     
   4979 FFFC5658 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 30
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4980 FFFC5660 FF FF FF FF FF FF FF FF     
   4981 FFFC5668 FF FF FF FF FF FF FF FF     
   4982 FFFC5670 FF FF FF FF FF FF FF FF     
   4983 FFFC5678 FF FF FF FF FF FF FF FF     
   4984 FFFC5680 FF FF FF FF FF FF FF FF     
   4985 FFFC5688 FF FF FF FF FF FF FF FF     
   4986 FFFC5690 FF FF FF FF FF FF FF FF     
   4987 FFFC5698 FF FF FF FF FF FF FF FF     
   4988 FFFC56A0 FF FF FF FF FF FF FF FF     
   4989 FFFC56A8 FF FF FF FF FF FF FF FF     
   4990 FFFC56B0 FF FF FF FF FF FF FF FF     
   4991 FFFC56B8 FF FF FF FF FF FF FF FF     
   4992 FFFC56C0 FF FF FF FF FF FF FF FF     
   4993 FFFC56C8 FF FF FF FF FF FF FF FF     
   4994 FFFC56D0 FF FF FF FF FF FF FF FF     
   4995 FFFC56D8 FF FF FF FF FF FF FF FF     
   4996 FFFC56E0 FF FF FF FF FF FF FF FF     
   4997 FFFC56E8 FF FF FF FF FF FF FF FF     
   4998 FFFC56F0 FF FF FF FF FF FF FF FF     
   4999 FFFC56F8 FF FF FF FF FF FF FF FF     
   5000 FFFC5700 FF FF FF FF FF FF FF FF     
   5001 FFFC5708 FF FF FF FF FF FF FF FF     
   5002 FFFC5710 FF FF FF FF FF FF FF FF     
   5003 FFFC5718 FF FF FF FF FF FF FF FF     
   5004 FFFC5720 FF FF FF FF FF FF FF FF     
   5005 FFFC5728 FF FF FF FF FF FF FF FF     
   5006 FFFC5730 FF FF FF FF FF FF FF FF     
   5007 FFFC5738 FF FF FF FF FF FF FF FF     
   5008 FFFC5740 FF FF FF FF FF FF FF FF     
   5009 FFFC5748 FF FF FF FF FF FF FF FF     
   5010 FFFC5750 FF FF FF FF FF FF FF FF     
   5011 FFFC5758 FF FF FF FF FF FF FF FF     
   5012 FFFC5760 FF FF FF FF FF FF FF FF     
   5013 FFFC5768 FF FF FF FF FF FF FF FF     
   5014 FFFC5770 FF FF FF FF FF FF FF FF     
   5015 FFFC5778 FF FF FF FF FF FF FF FF     
   5016 FFFC5780 FF FF FF FF FF FF FF FF     
   5017 FFFC5788 FF FF FF FF FF FF FF FF     
   5018 FFFC5790 FF FF FF FF FF FF FF FF     
   5019 FFFC5798 FF FF FF FF FF FF FF FF     
   5020 FFFC57A0 FF FF FF FF FF FF FF FF     
   5021 FFFC57A8 FF FF FF FF FF FF FF FF     
   5022 FFFC57B0 FF FF FF FF FF FF FF FF     
   5023 FFFC57B8 FF FF FF FF FF FF FF FF     
   5024 FFFC57C0 FF FF FF FF FF FF FF FF     
   5025 FFFC57C8 FF FF FF FF FF FF FF FF     
   5026 FFFC57D0 FF FF FF FF FF FF FF FF     
   5027 FFFC57D8 FF FF FF FF FF FF FF FF     
   5028 FFFC57E0 FF FF FF FF FF FF FF FF     
   5029 FFFC57E8 FF FF FF FF FF FF FF FF     
   5030 FFFC57F0 FF FF FF FF FF FF FF FF     
   5031 FFFC57F8 FF FF FF FF FF FF FF FF     
   5032 FFFC5800 FF FF FF FF FF FF FF FF     
   5033 FFFC5808 FF FF FF FF FF FF FF FF     
   5034 FFFC5810 FF FF FF FF FF FF FF FF     
   5035 FFFC5818 FF FF FF FF FF FF FF FF     
   5036 FFFC5820 FF FF FF FF FF FF FF FF     
   5037 FFFC5828 FF FF FF FF FF FF FF FF     
   5038 FFFC5830 FF FF FF FF FF FF FF FF     
   5039 FFFC5838 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 31
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5040 FFFC5840 FF FF FF FF FF FF FF FF     
   5041 FFFC5848 FF FF FF FF FF FF FF FF     
   5042 FFFC5850 FF FF FF FF FF FF FF FF     
   5043 FFFC5858 FF FF FF FF FF FF FF FF     
   5044 FFFC5860 FF FF FF FF FF FF FF FF     
   5045 FFFC5868 FF FF FF FF FF FF FF FF     
   5046 FFFC5870 FF FF FF FF FF FF FF FF     
   5047 FFFC5878 FF FF FF FF FF FF FF FF     
   5048 FFFC5880 FF FF FF FF FF FF FF FF     
   5049 FFFC5888 FF FF FF FF FF FF FF FF     
   5050 FFFC5890 FF FF FF FF FF FF FF FF     
   5051 FFFC5898 FF FF FF FF FF FF FF FF     
   5052 FFFC58A0 FF FF FF FF FF FF FF FF     
   5053 FFFC58A8 FF FF FF FF FF FF FF FF     
   5054 FFFC58B0 FF FF FF FF FF FF FF FF     
   5055 FFFC58B8 FF FF FF FF FF FF FF FF     
   5056 FFFC58C0 FF FF FF FF FF FF FF FF     
   5057 FFFC58C8 FF FF FF FF FF FF FF FF     
   5058 FFFC58D0 FF FF FF FF FF FF FF FF     
   5059 FFFC58D8 FF FF FF FF FF FF FF FF     
   5060 FFFC58E0 FF FF FF FF FF FF FF FF     
   5061 FFFC58E8 FF FF FF FF FF FF FF FF     
   5062 FFFC58F0 FF FF FF FF FF FF FF FF     
   5063 FFFC58F8 FF FF FF FF FF FF FF FF     
   5064 FFFC5900 FF FF FF FF FF FF FF FF     
   5065 FFFC5908 FF FF FF FF FF FF FF FF     
   5066 FFFC5910 FF FF FF FF FF FF FF FF     
   5067 FFFC5918 FF FF FF FF FF FF FF FF     
   5068 FFFC5920 FF FF FF FF FF FF FF FF     
   5069 FFFC5928 FF FF FF FF FF FF FF FF     
   5070 FFFC5930 FF FF FF FF FF FF FF FF     
   5071 FFFC5938 FF FF FF FF FF FF FF FF     
   5072 FFFC5940 FF FF FF FF FF FF FF FF     
   5073 FFFC5948 FF FF FF FF FF FF FF FF     
   5074 FFFC5950 FF FF FF FF FF FF FF FF     
   5075 FFFC5958 FF FF FF FF FF FF FF FF     
   5076 FFFC5960 FF FF FF FF FF FF FF FF     
   5077 FFFC5968 FF FF FF FF FF FF FF FF     
   5078 FFFC5970 FF FF FF FF FF FF FF FF     
   5079 FFFC5978 FF FF FF FF FF FF FF FF     
   5080 FFFC5980 FF FF FF FF FF FF FF FF     
   5081 FFFC5988 FF FF FF FF FF FF FF FF     
   5082 FFFC5990 FF FF FF FF FF FF FF FF     
   5083 FFFC5998 FF FF FF FF FF FF FF FF     
   5084 FFFC59A0 FF FF FF FF FF FF FF FF     
   5085 FFFC59A8 FF FF FF FF FF FF FF FF     
   5086 FFFC59B0 FF FF FF FF FF FF FF FF     
   5087 FFFC59B8 FF FF FF FF FF FF FF FF     
   5088 FFFC59C0 FF FF FF FF FF FF FF FF     
   5089 FFFC59C8 FF FF FF FF FF FF FF FF     
   5090 FFFC59D0 FF FF FF FF FF FF FF FF     
   5091 FFFC59D8 FF FF FF FF FF FF FF FF     
   5092 FFFC59E0 FF FF FF FF FF FF FF FF     
   5093 FFFC59E8 FF FF FF FF FF FF FF FF     
   5094 FFFC59F0 FF FF FF FF FF FF FF FF     
   5095 FFFC59F8 FF FF FF FF FF FF FF FF     
   5096 FFFC5A00 FF FF FF FF FF FF FF FF     
   5097 FFFC5A08 FF FF FF FF FF FF FF FF     
   5098 FFFC5A10 FF FF FF FF FF FF FF FF     
   5099 FFFC5A18 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 32
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5100 FFFC5A20 FF FF FF FF FF FF FF FF     
   5101 FFFC5A28 FF FF FF FF FF FF FF FF     
   5102 FFFC5A30 FF FF FF FF FF FF FF FF     
   5103 FFFC5A38 FF FF FF FF FF FF FF FF     
   5104 FFFC5A40 FF FF FF FF FF FF FF FF     
   5105 FFFC5A48 FF FF FF FF FF FF FF FF     
   5106 FFFC5A50 FF FF FF FF FF FF FF FF     
   5107 FFFC5A58 FF FF FF FF FF FF FF FF     
   5108 FFFC5A60 FF FF FF FF FF FF FF FF     
   5109 FFFC5A68 FF FF FF FF FF FF FF FF     
   5110 FFFC5A70 FF FF FF FF FF FF FF FF     
   5111 FFFC5A78 FF FF FF FF FF FF FF FF     
   5112 FFFC5A80 FF FF FF FF FF FF FF FF     
   5113 FFFC5A88 FF FF FF FF FF FF FF FF     
   5114 FFFC5A90 FF FF FF FF FF FF FF FF     
   5115 FFFC5A98 FF FF FF FF FF FF FF FF     
   5116 FFFC5AA0 FF FF FF FF FF FF FF FF     
   5117 FFFC5AA8 FF FF FF FF FF FF FF FF     
   5118 FFFC5AB0 FF FF FF FF FF FF FF FF     
   5119 FFFC5AB8 FF FF FF FF FF FF FF FF     
   5120 FFFC5AC0 FF FF FF FF FF FF FF FF     
   5121 FFFC5AC8 FF FF FF FF FF FF FF FF     
   5122 FFFC5AD0 FF FF FF FF FF FF FF FF     
   5123 FFFC5AD8 FF FF FF FF FF FF FF FF     
   5124 FFFC5AE0 FF FF FF FF FF FF FF FF     
   5125 FFFC5AE8 FF FF FF FF FF FF FF FF     
   5126 FFFC5AF0 FF FF FF FF FF FF FF FF     
   5127 FFFC5AF8 FF FF FF FF FF FF FF FF     
   5128 FFFC5B00 FF FF FF FF FF FF FF FF     
   5129 FFFC5B08 FF FF FF FF FF FF FF FF     
   5130 FFFC5B10 FF FF FF FF FF FF FF FF     
   5131 FFFC5B18 FF FF FF FF FF FF FF FF     
   5132 FFFC5B20 FF FF FF FF FF FF FF FF     
   5133 FFFC5B28 FF FF FF FF FF FF FF FF     
   5134 FFFC5B30 FF FF FF FF FF FF FF FF     
   5135 FFFC5B38 FF FF FF FF FF FF FF FF     
   5136 FFFC5B40 FF FF FF FF FF FF FF FF     
   5137 FFFC5B48 FF FF FF FF FF FF FF FF     
   5138 FFFC5B50 FF FF FF FF FF FF FF FF     
   5139 FFFC5B58 FF FF FF FF FF FF FF FF     
   5140 FFFC5B60 FF FF FF FF FF FF FF FF     
   5141 FFFC5B68 FF FF FF FF FF FF FF FF     
   5142 FFFC5B70 FF FF FF FF FF FF FF FF     
   5143 FFFC5B78 FF FF FF FF FF FF FF FF     
   5144 FFFC5B80 FF FF FF FF FF FF FF FF     
   5145 FFFC5B88 FF FF FF FF FF FF FF FF     
   5146 FFFC5B90 FF FF FF FF FF FF FF FF     
   5147 FFFC5B98 FF FF FF FF FF FF FF FF     
   5148 FFFC5BA0 FF FF FF FF FF FF FF FF     
   5149 FFFC5BA8 FF FF FF FF FF FF FF FF     
   5150 FFFC5BB0 FF FF FF FF FF FF FF FF     
   5151 FFFC5BB8 FF FF FF FF FF FF FF FF     
   5152 FFFC5BC0 FF FF FF FF FF FF FF FF     
   5153 FFFC5BC8 FF FF FF FF FF FF FF FF     
   5154 FFFC5BD0 FF FF FF FF FF FF FF FF     
   5155 FFFC5BD8 FF FF FF FF FF FF FF FF     
   5156 FFFC5BE0 FF FF FF FF FF FF FF FF     
   5157 FFFC5BE8 FF FF FF FF FF FF FF FF     
   5158 FFFC5BF0 FF FF FF FF FF FF FF FF     
   5159 FFFC5BF8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 33
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5160 FFFC5C00 FF FF FF FF FF FF FF FF     
   5161 FFFC5C08 FF FF FF FF FF FF FF FF     
   5162 FFFC5C10 FF FF FF FF FF FF FF FF     
   5163 FFFC5C18 FF FF FF FF FF FF FF FF     
   5164 FFFC5C20 FF FF FF FF FF FF FF FF     
   5165 FFFC5C28 FF FF FF FF FF FF FF FF     
   5166 FFFC5C30 FF FF FF FF FF FF FF FF     
   5167 FFFC5C38 FF FF FF FF FF FF FF FF     
   5168 FFFC5C40 FF FF FF FF FF FF FF FF     
   5169 FFFC5C48 FF FF FF FF FF FF FF FF     
   5170 FFFC5C50 FF FF FF FF FF FF FF FF     
   5171 FFFC5C58 FF FF FF FF FF FF FF FF     
   5172 FFFC5C60 FF FF FF FF FF FF FF FF     
   5173 FFFC5C68 FF FF FF FF FF FF FF FF     
   5174 FFFC5C70 FF FF FF FF FF FF FF FF     
   5175 FFFC5C78 FF FF FF FF FF FF FF FF     
   5176 FFFC5C80 FF FF FF FF FF FF FF FF     
   5177 FFFC5C88 FF FF FF FF FF FF FF FF     
   5178 FFFC5C90 FF FF FF FF FF FF FF FF     
   5179 FFFC5C98 FF FF FF FF FF FF FF FF     
   5180 FFFC5CA0 FF FF FF FF FF FF FF FF     
   5181 FFFC5CA8 FF FF FF FF FF FF FF FF     
   5182 FFFC5CB0 FF FF FF FF FF FF FF FF     
   5183 FFFC5CB8 FF FF FF FF FF FF FF FF     
   5184 FFFC5CC0 FF FF FF FF FF FF FF FF     
   5185 FFFC5CC8 FF FF FF FF FF FF FF FF     
   5186 FFFC5CD0 FF FF FF FF FF FF FF FF     
   5187 FFFC5CD8 FF FF FF FF FF FF FF FF     
   5188 FFFC5CE0 FF FF FF FF FF FF FF FF     
   5189 FFFC5CE8 FF FF FF FF FF FF FF FF     
   5190 FFFC5CF0 FF FF FF FF FF FF FF FF     
   5191 FFFC5CF8 FF FF FF FF FF FF FF FF     
   5192 FFFC5D00 FF FF FF FF FF FF FF FF     
   5193 FFFC5D08 FF FF FF FF FF FF FF FF     
   5194 FFFC5D10 FF FF FF FF FF FF FF FF     
   5195 FFFC5D18 FF FF FF FF FF FF FF FF     
   5196 FFFC5D20 FF FF FF FF FF FF FF FF     
   5197 FFFC5D28 FF FF FF FF FF FF FF FF     
   5198 FFFC5D30 FF FF FF FF FF FF FF FF     
   5199 FFFC5D38 FF FF FF FF FF FF FF FF     
   5200 FFFC5D40 FF FF FF FF FF FF FF FF     
   5201 FFFC5D48 FF FF FF FF FF FF FF FF     
   5202 FFFC5D50 FF FF FF FF FF FF FF FF     
   5203 FFFC5D58 FF FF FF FF FF FF FF FF     
   5204 FFFC5D60 FF FF FF FF FF FF FF FF     
   5205 FFFC5D68 FF FF FF FF FF FF FF FF     
   5206 FFFC5D70 FF FF FF FF FF FF FF FF     
   5207 FFFC5D78 FF FF FF FF FF FF FF FF     
   5208 FFFC5D80 FF FF FF FF FF FF FF FF     
   5209 FFFC5D88 FF FF FF FF FF FF FF FF     
   5210 FFFC5D90 FF FF FF FF FF FF FF FF     
   5211 FFFC5D98 FF FF FF FF FF FF FF FF     
   5212 FFFC5DA0 FF FF FF FF FF FF FF FF     
   5213 FFFC5DA8 FF FF FF FF FF FF FF FF     
   5214 FFFC5DB0 FF FF FF FF FF FF FF FF     
   5215 FFFC5DB8 FF FF FF FF FF FF FF FF     
   5216 FFFC5DC0 FF FF FF FF FF FF FF FF     
   5217 FFFC5DC8 FF FF FF FF FF FF FF FF     
   5218 FFFC5DD0 FF FF FF FF FF FF FF FF     
   5219 FFFC5DD8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 34
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5220 FFFC5DE0 FF FF FF FF FF FF FF FF     
   5221 FFFC5DE8 FF FF FF FF FF FF FF FF     
   5222 FFFC5DF0 FF FF FF FF FF FF FF FF     
   5223 FFFC5DF8 FF FF FF FF FF FF FF FF     
   5224 FFFC5E00 FF FF FF FF FF FF FF FF     
   5225 FFFC5E08 FF FF FF FF FF FF FF FF     
   5226 FFFC5E10 FF FF FF FF FF FF FF FF     
   5227 FFFC5E18 FF FF FF FF FF FF FF FF     
   5228 FFFC5E20 FF FF FF FF FF FF FF FF     
   5229 FFFC5E28 FF FF FF FF FF FF FF FF     
   5230 FFFC5E30 FF FF FF FF FF FF FF FF     
   5231 FFFC5E38 FF FF FF FF FF FF FF FF     
   5232 FFFC5E40 FF FF FF FF FF FF FF FF     
   5233 FFFC5E48 FF FF FF FF FF FF FF FF     
   5234 FFFC5E50 FF FF FF FF FF FF FF FF     
   5235 FFFC5E58 FF FF FF FF FF FF FF FF     
   5236 FFFC5E60 FF FF FF FF FF FF FF FF     
   5237 FFFC5E68 FF FF FF FF FF FF FF FF     
   5238 FFFC5E70 FF FF FF FF FF FF FF FF     
   5239 FFFC5E78 FF FF FF FF FF FF FF FF     
   5240 FFFC5E80 FF FF FF FF FF FF FF FF     
   5241 FFFC5E88 FF FF FF FF FF FF FF FF     
   5242 FFFC5E90 FF FF FF FF FF FF FF FF     
   5243 FFFC5E98 FF FF FF FF FF FF FF FF     
   5244 FFFC5EA0 FF FF FF FF FF FF FF FF     
   5245 FFFC5EA8 FF FF FF FF FF FF FF FF     
   5246 FFFC5EB0 FF FF FF FF FF FF FF FF     
   5247 FFFC5EB8 FF FF FF FF FF FF FF FF     
   5248 FFFC5EC0 FF FF FF FF FF FF FF FF     
   5249 FFFC5EC8 FF FF FF FF FF FF FF FF     
   5250 FFFC5ED0 FF FF FF FF FF FF FF FF     
   5251 FFFC5ED8 FF FF FF FF FF FF FF FF     
   5252 FFFC5EE0 FF FF FF FF FF FF FF FF     
   5253 FFFC5EE8 FF FF FF FF FF FF FF FF     
   5254 FFFC5EF0 FF FF FF FF FF FF FF FF     
   5255 FFFC5EF8 FF FF FF FF FF FF FF FF     
   5256 FFFC5F00 FF FF FF FF FF FF FF FF     
   5257 FFFC5F08 FF FF FF FF FF FF FF FF     
   5258 FFFC5F10 FF FF FF FF FF FF FF FF     
   5259 FFFC5F18 FF FF FF FF FF FF FF FF     
   5260 FFFC5F20 FF FF FF FF FF FF FF FF     
   5261 FFFC5F28 FF FF FF FF FF FF FF FF     
   5262 FFFC5F30 FF FF FF FF FF FF FF FF     
   5263 FFFC5F38 FF FF FF FF FF FF FF FF     
   5264 FFFC5F40 FF FF FF FF FF FF FF FF     
   5265 FFFC5F48 FF FF FF FF FF FF FF FF     
   5266 FFFC5F50 FF FF FF FF FF FF FF FF     
   5267 FFFC5F58 FF FF FF FF FF FF FF FF     
   5268 FFFC5F60 FF FF FF FF FF FF FF FF     
   5269 FFFC5F68 FF FF FF FF FF FF FF FF     
   5270 FFFC5F70 FF FF FF FF FF FF FF FF     
   5271 FFFC5F78 FF FF FF FF FF FF FF FF     
   5272 FFFC5F80 FF FF FF FF FF FF FF FF     
   5273 FFFC5F88 FF FF FF FF FF FF FF FF     
   5274 FFFC5F90 FF FF FF FF FF FF FF FF     
   5275 FFFC5F98 FF FF FF FF FF FF FF FF     
   5276 FFFC5FA0 FF FF FF FF FF FF FF FF     
   5277 FFFC5FA8 FF FF FF FF FF FF FF FF     
   5278 FFFC5FB0 FF FF FF FF FF FF FF FF     
   5279 FFFC5FB8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 35
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5280 FFFC5FC0 FF FF FF FF FF FF FF FF     
   5281 FFFC5FC8 FF FF FF FF FF FF FF FF     
   5282 FFFC5FD0 FF FF FF FF FF FF FF FF     
   5283 FFFC5FD8 FF FF FF FF FF FF FF FF     
   5284 FFFC5FE0 FF FF FF FF FF FF FF FF     
   5285 FFFC5FE8 FF FF FF FF FF FF FF FF     
   5286 FFFC5FF0 FF FF FF FF FF FF FF FF     
   5287 FFFC5FF8 FF FF FF FF FF FF FF FF     
   5288 FFFC6000 FF FF FF FF FF FF FF FF     
   5289 FFFC6008 FF FF FF FF FF FF FF FF     
   5290 FFFC6010 FF FF FF FF FF FF FF FF     
   5291 FFFC6018 FF FF FF FF FF FF FF FF     
   5292 FFFC6020 FF FF FF FF FF FF FF FF     
   5293 FFFC6028 FF FF FF FF FF FF FF FF     
   5294 FFFC6030 FF FF FF FF FF FF FF FF     
   5295 FFFC6038 FF FF FF FF FF FF FF FF     
   5296 FFFC6040 FF FF FF FF FF FF FF FF     
   5297 FFFC6048 FF FF FF FF FF FF FF FF     
   5298 FFFC6050 FF FF FF FF FF FF FF FF     
   5299 FFFC6058 FF FF FF FF FF FF FF FF     
   5300 FFFC6060 FF FF FF FF FF FF FF FF     
   5301 FFFC6068 FF FF FF FF FF FF FF FF     
   5302 FFFC6070 FF FF FF FF FF FF FF FF     
   5303 FFFC6078 FF FF FF FF FF FF FF FF     
   5304 FFFC6080 FF FF FF FF FF FF FF FF     
   5305 FFFC6088 FF FF FF FF FF FF FF FF     
   5306 FFFC6090 FF FF FF FF FF FF FF FF     
   5307 FFFC6098 FF FF FF FF FF FF FF FF     
   5308 FFFC60A0 FF FF FF FF FF FF FF FF     
   5309 FFFC60A8 FF FF FF FF FF FF FF FF     
   5310 FFFC60B0 FF FF FF FF FF FF FF FF     
   5311 FFFC60B8 FF FF FF FF FF FF FF FF     
   5312 FFFC60C0 FF FF FF FF FF FF FF FF     
   5313 FFFC60C8 FF FF FF FF FF FF FF FF     
   5314 FFFC60D0 FF FF FF FF FF FF FF FF     
   5315 FFFC60D8 FF FF FF FF FF FF FF FF     
   5316 FFFC60E0 FF FF FF FF FF FF FF FF     
   5317 FFFC60E8 FF FF FF FF FF FF FF FF     
   5318 FFFC60F0 FF FF FF FF FF FF FF FF     
   5319 FFFC60F8 FF FF FF FF FF FF FF FF     
   5320 FFFC6100 FF FF FF FF FF FF FF FF     
   5321 FFFC6108 FF FF FF FF FF FF FF FF     
   5322 FFFC6110 FF FF FF FF FF FF FF FF     
   5323 FFFC6118 FF FF FF FF FF FF FF FF     
   5324 FFFC6120 FF FF FF FF FF FF FF FF     
   5325 FFFC6128 FF FF FF FF FF FF FF FF     
   5326 FFFC6130 FF FF FF FF FF FF FF FF     
   5327 FFFC6138 FF FF FF FF FF FF FF FF     
   5328 FFFC6140 FF FF FF FF FF FF FF FF     
   5329 FFFC6148 FF FF FF FF FF FF FF FF     
   5330 FFFC6150 FF FF FF FF FF FF FF FF     
   5331 FFFC6158 FF FF FF FF FF FF FF FF     
   5332 FFFC6160 FF FF FF FF FF FF FF FF     
   5333 FFFC6168 FF FF FF FF FF FF FF FF     
   5334 FFFC6170 FF FF FF FF FF FF FF FF     
   5335 FFFC6178 FF FF FF FF FF FF FF FF     
   5336 FFFC6180 FF FF FF FF FF FF FF FF     
   5337 FFFC6188 FF FF FF FF FF FF FF FF     
   5338 FFFC6190 FF FF FF FF FF FF FF FF     
   5339 FFFC6198 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 36
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5340 FFFC61A0 FF FF FF FF FF FF FF FF     
   5341 FFFC61A8 FF FF FF FF FF FF FF FF     
   5342 FFFC61B0 FF FF FF FF FF FF FF FF     
   5343 FFFC61B8 FF FF FF FF FF FF FF FF     
   5344 FFFC61C0 FF FF FF FF FF FF FF FF     
   5345 FFFC61C8 FF FF FF FF FF FF FF FF     
   5346 FFFC61D0 FF FF FF FF FF FF FF FF     
   5347 FFFC61D8 FF FF FF FF FF FF FF FF     
   5348 FFFC61E0 FF FF FF FF FF FF FF FF     
   5349 FFFC61E8 FF FF FF FF FF FF FF FF     
   5350 FFFC61F0 FF FF FF FF FF FF FF FF     
   5351 FFFC61F8 FF FF FF FF FF FF FF FF     
   5352 FFFC6200 FF FF FF FF FF FF FF FF     
   5353 FFFC6208 FF FF FF FF FF FF FF FF     
   5354 FFFC6210 FF FF FF FF FF FF FF FF     
   5355 FFFC6218 FF FF FF FF FF FF FF FF     
   5356 FFFC6220 FF FF FF FF FF FF FF FF     
   5357 FFFC6228 FF FF FF FF FF FF FF FF     
   5358 FFFC6230 FF FF FF FF FF FF FF FF     
   5359 FFFC6238 FF FF FF FF FF FF FF FF     
   5360 FFFC6240 FF FF FF FF FF FF FF FF     
   5361 FFFC6248 FF FF FF FF FF FF FF FF     
   5362 FFFC6250 FF FF FF FF FF FF FF FF     
   5363 FFFC6258 FF FF FF FF FF FF FF FF     
   5364 FFFC6260 FF FF FF FF FF FF FF FF     
   5365 FFFC6268 FF FF FF FF FF FF FF FF     
   5366 FFFC6270 FF FF FF FF FF FF FF FF     
   5367 FFFC6278 FF FF FF FF FF FF FF FF     
   5368 FFFC6280 FF FF FF FF FF FF FF FF     
   5369 FFFC6288 FF FF FF FF FF FF FF FF     
   5370 FFFC6290 FF FF FF FF FF FF FF FF     
   5371 FFFC6298 FF FF FF FF FF FF FF FF     
   5372 FFFC62A0 FF FF FF FF FF FF FF FF     
   5373 FFFC62A8 FF FF FF FF FF FF FF FF     
   5374 FFFC62B0 FF FF FF FF FF FF FF FF     
   5375 FFFC62B8 FF FF FF FF FF FF FF FF     
   5376 FFFC62C0 FF FF FF FF FF FF FF FF     
   5377 FFFC62C8 FF FF FF FF FF FF FF FF     
   5378 FFFC62D0 FF FF FF FF FF FF FF FF     
   5379 FFFC62D8 FF FF FF FF FF FF FF FF     
   5380 FFFC62E0 FF FF FF FF FF FF FF FF     
   5381 FFFC62E8 FF FF FF FF FF FF FF FF     
   5382 FFFC62F0 FF FF FF FF FF FF FF FF     
   5383 FFFC62F8 FF FF FF FF FF FF FF FF     
   5384 FFFC6300 FF FF FF FF FF FF FF FF     
   5385 FFFC6308 FF FF FF FF FF FF FF FF     
   5386 FFFC6310 FF FF FF FF FF FF FF FF     
   5387 FFFC6318 FF FF FF FF FF FF FF FF     
   5388 FFFC6320 FF FF FF FF FF FF FF FF     
   5389 FFFC6328 FF FF FF FF FF FF FF FF     
   5390 FFFC6330 FF FF FF FF FF FF FF FF     
   5391 FFFC6338 FF FF FF FF FF FF FF FF     
   5392 FFFC6340 FF FF FF FF FF FF FF FF     
   5393 FFFC6348 FF FF FF FF FF FF FF FF     
   5394 FFFC6350 FF FF FF FF FF FF FF FF     
   5395 FFFC6358 FF FF FF FF FF FF FF FF     
   5396 FFFC6360 FF FF FF FF FF FF FF FF     
   5397 FFFC6368 FF FF FF FF FF FF FF FF     
   5398 FFFC6370 FF FF FF FF FF FF FF FF     
   5399 FFFC6378 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 37
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5400 FFFC6380 FF FF FF FF FF FF FF FF     
   5401 FFFC6388 FF FF FF FF FF FF FF FF     
   5402 FFFC6390 FF FF FF FF FF FF FF FF     
   5403 FFFC6398 FF FF FF FF FF FF FF FF     
   5404 FFFC63A0 FF FF FF FF FF FF FF FF     
   5405 FFFC63A8 FF FF FF FF FF FF FF FF     
   5406 FFFC63B0 FF FF FF FF FF FF FF FF     
   5407 FFFC63B8 FF FF FF FF FF FF FF FF     
   5408 FFFC63C0 FF FF FF FF FF FF FF FF     
   5409 FFFC63C8 FF FF FF FF FF FF FF FF     
   5410 FFFC63D0 FF FF FF FF FF FF FF FF     
   5411 FFFC63D8 FF FF FF FF FF FF FF FF     
   5412 FFFC63E0 FF FF FF FF FF FF FF FF     
   5413 FFFC63E8 FF FF FF FF FF FF FF FF     
   5414 FFFC63F0 FF FF FF FF FF FF FF FF     
   5415 FFFC63F8 FF FF FF FF FF FF FF FF     
   5416 FFFC6400 FF FF FF FF FF FF FF FF     
   5417 FFFC6408 FF FF FF FF FF FF FF FF     
   5418 FFFC6410 FF FF FF FF FF FF FF FF     
   5419 FFFC6418 FF FF FF FF FF FF FF FF     
   5420 FFFC6420 FF FF FF FF FF FF FF FF     
   5421 FFFC6428 FF FF FF FF FF FF FF FF     
   5422 FFFC6430 FF FF FF FF FF FF FF FF     
   5423 FFFC6438 FF FF FF FF FF FF FF FF     
   5424 FFFC6440 FF FF FF FF FF FF FF FF     
   5425 FFFC6448 FF FF FF FF FF FF FF FF     
   5426 FFFC6450 FF FF FF FF FF FF FF FF     
   5427 FFFC6458 FF FF FF FF FF FF FF FF     
   5428 FFFC6460 FF FF FF FF FF FF FF FF     
   5429 FFFC6468 FF FF FF FF FF FF FF FF     
   5430 FFFC6470 FF FF FF FF FF FF FF FF     
   5431 FFFC6478 FF FF FF FF FF FF FF FF     
   5432 FFFC6480 FF FF FF FF FF FF FF FF     
   5433 FFFC6488 FF FF FF FF FF FF FF FF     
   5434 FFFC6490 FF FF FF FF FF FF FF FF     
   5435 FFFC6498 FF FF FF FF FF FF FF FF     
   5436 FFFC64A0 FF FF FF FF FF FF FF FF     
   5437 FFFC64A8 FF FF FF FF FF FF FF FF     
   5438 FFFC64B0 FF FF FF FF FF FF FF FF     
   5439 FFFC64B8 FF FF FF FF FF FF FF FF     
   5440 FFFC64C0 FF FF FF FF FF FF FF FF     
   5441 FFFC64C8 FF FF FF FF FF FF FF FF     
   5442 FFFC64D0 FF FF FF FF FF FF FF FF     
   5443 FFFC64D8 FF FF FF FF FF FF FF FF     
   5444 FFFC64E0 FF FF FF FF FF FF FF FF     
   5445 FFFC64E8 FF FF FF FF FF FF FF FF     
   5446 FFFC64F0 FF FF FF FF FF FF FF FF     
   5447 FFFC64F8 FF FF FF FF FF FF FF FF     
   5448 FFFC6500 FF FF FF FF FF FF FF FF     
   5449 FFFC6508 FF FF FF FF FF FF FF FF     
   5450 FFFC6510 FF FF FF FF FF FF FF FF     
   5451 FFFC6518 FF FF FF FF FF FF FF FF     
   5452 FFFC6520 FF FF FF FF FF FF FF FF     
   5453 FFFC6528 FF FF FF FF FF FF FF FF     
   5454 FFFC6530 FF FF FF FF FF FF FF FF     
   5455 FFFC6538 FF FF FF FF FF FF FF FF     
   5456 FFFC6540 FF FF FF FF FF FF FF FF     
   5457 FFFC6548 FF FF FF FF FF FF FF FF     
   5458 FFFC6550 FF FF FF FF FF FF FF FF     
   5459 FFFC6558 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 38
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5460 FFFC6560 FF FF FF FF FF FF FF FF     
   5461 FFFC6568 FF FF FF FF FF FF FF FF     
   5462 FFFC6570 FF FF FF FF FF FF FF FF     
   5463 FFFC6578 FF FF FF FF FF FF FF FF     
   5464 FFFC6580 FF FF FF FF FF FF FF FF     
   5465 FFFC6588 FF FF FF FF FF FF FF FF     
   5466 FFFC6590 FF FF FF FF FF FF FF FF     
   5467 FFFC6598 FF FF FF FF FF FF FF FF     
   5468 FFFC65A0 FF FF FF FF FF FF FF FF     
   5469 FFFC65A8 FF FF FF FF FF FF FF FF     
   5470 FFFC65B0 FF FF FF FF FF FF FF FF     
   5471 FFFC65B8 FF FF FF FF FF FF FF FF     
   5472 FFFC65C0 FF FF FF FF FF FF FF FF     
   5473 FFFC65C8 FF FF FF FF FF FF FF FF     
   5474 FFFC65D0 FF FF FF FF FF FF FF FF     
   5475 FFFC65D8 FF FF FF FF FF FF FF FF     
   5476 FFFC65E0 FF FF FF FF FF FF FF FF     
   5477 FFFC65E8 FF FF FF FF FF FF FF FF     
   5478 FFFC65F0 FF FF FF FF FF FF FF FF     
   5479 FFFC65F8 FF FF FF FF FF FF FF FF     
   5480 FFFC6600 FF FF FF FF FF FF FF FF     
   5481 FFFC6608 FF FF FF FF FF FF FF FF     
   5482 FFFC6610 FF FF FF FF FF FF FF FF     
   5483 FFFC6618 FF FF FF FF FF FF FF FF     
   5484 FFFC6620 FF FF FF FF FF FF FF FF     
   5485 FFFC6628 FF FF FF FF FF FF FF FF     
   5486 FFFC6630 FF FF FF FF FF FF FF FF     
   5487 FFFC6638 FF FF FF FF FF FF FF FF     
   5488 FFFC6640 FF FF FF FF FF FF FF FF     
   5489 FFFC6648 FF FF FF FF FF FF FF FF     
   5490 FFFC6650 FF FF FF FF FF FF FF FF     
   5491 FFFC6658 FF FF FF FF FF FF FF FF     
   5492 FFFC6660 FF FF FF FF FF FF FF FF     
   5493 FFFC6668 FF FF FF FF FF FF FF FF     
   5494 FFFC6670 FF FF FF FF FF FF FF FF     
   5495 FFFC6678 FF FF FF FF FF FF FF FF     
   5496 FFFC6680 FF FF FF FF FF FF FF FF     
   5497 FFFC6688 FF FF FF FF FF FF FF FF     
   5498 FFFC6690 FF FF FF FF FF FF FF FF     
   5499 FFFC6698 FF FF FF FF FF FF FF FF     
   5500 FFFC66A0 FF FF FF FF FF FF FF FF     
   5501 FFFC66A8 FF FF FF FF FF FF FF FF     
   5502 FFFC66B0 FF FF FF FF FF FF FF FF     
   5503 FFFC66B8 FF FF FF FF FF FF FF FF     
   5504 FFFC66C0 FF FF FF FF FF FF FF FF     
   5505 FFFC66C8 FF FF FF FF FF FF FF FF     
   5506 FFFC66D0 FF FF FF FF FF FF FF FF     
   5507 FFFC66D8 FF FF FF FF FF FF FF FF     
   5508 FFFC66E0 FF FF FF FF FF FF FF FF     
   5509 FFFC66E8 FF FF FF FF FF FF FF FF     
   5510 FFFC66F0 FF FF FF FF FF FF FF FF     
   5511 FFFC66F8 FF FF FF FF FF FF FF FF     
   5512 FFFC6700 FF FF FF FF FF FF FF FF     
   5513 FFFC6708 FF FF FF FF FF FF FF FF     
   5514 FFFC6710 FF FF FF FF FF FF FF FF     
   5515 FFFC6718 FF FF FF FF FF FF FF FF     
   5516 FFFC6720 FF FF FF FF FF FF FF FF     
   5517 FFFC6728 FF FF FF FF FF FF FF FF     
   5518 FFFC6730 FF FF FF FF FF FF FF FF     
   5519 FFFC6738 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 39
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5520 FFFC6740 FF FF FF FF FF FF FF FF     
   5521 FFFC6748 FF FF FF FF FF FF FF FF     
   5522 FFFC6750 FF FF FF FF FF FF FF FF     
   5523 FFFC6758 FF FF FF FF FF FF FF FF     
   5524 FFFC6760 FF FF FF FF FF FF FF FF     
   5525 FFFC6768 FF FF FF FF FF FF FF FF     
   5526 FFFC6770 FF FF FF FF FF FF FF FF     
   5527 FFFC6778 FF FF FF FF FF FF FF FF     
   5528 FFFC6780 FF FF FF FF FF FF FF FF     
   5529 FFFC6788 FF FF FF FF FF FF FF FF     
   5530 FFFC6790 FF FF FF FF FF FF FF FF     
   5531 FFFC6798 FF FF FF FF FF FF FF FF     
   5532 FFFC67A0 FF FF FF FF FF FF FF FF     
   5533 FFFC67A8 FF FF FF FF FF FF FF FF     
   5534 FFFC67B0 FF FF FF FF FF FF FF FF     
   5535 FFFC67B8 FF FF FF FF FF FF FF FF     
   5536 FFFC67C0 FF FF FF FF FF FF FF FF     
   5537 FFFC67C8 FF FF FF FF FF FF FF FF     
   5538 FFFC67D0 FF FF FF FF FF FF FF FF     
   5539 FFFC67D8 FF FF FF FF FF FF FF FF     
   5540 FFFC67E0 FF FF FF FF FF FF FF FF     
   5541 FFFC67E8 FF FF FF FF FF FF FF FF     
   5542 FFFC67F0 FF FF FF FF FF FF FF FF     
   5543 FFFC67F8 FF FF FF FF FF FF FF FF     
   5544 FFFC6800 FF FF FF FF FF FF FF FF     
   5545 FFFC6808 FF FF FF FF FF FF FF FF     
   5546 FFFC6810 FF FF FF FF FF FF FF FF     
   5547 FFFC6818 FF FF FF FF FF FF FF FF     
   5548 FFFC6820 FF FF FF FF FF FF FF FF     
   5549 FFFC6828 FF FF FF FF FF FF FF FF     
   5550 FFFC6830 FF FF FF FF FF FF FF FF     
   5551 FFFC6838 FF FF FF FF FF FF FF FF     
   5552 FFFC6840 FF FF FF FF FF FF FF FF     
   5553 FFFC6848 FF FF FF FF FF FF FF FF     
   5554 FFFC6850 FF FF FF FF FF FF FF FF     
   5555 FFFC6858 FF FF FF FF FF FF FF FF     
   5556 FFFC6860 FF FF FF FF FF FF FF FF     
   5557 FFFC6868 FF FF FF FF FF FF FF FF     
   5558 FFFC6870 FF FF FF FF FF FF FF FF     
   5559 FFFC6878 FF FF FF FF FF FF FF FF     
   5560 FFFC6880 FF FF FF FF FF FF FF FF     
   5561 FFFC6888 FF FF FF FF FF FF FF FF     
   5562 FFFC6890 FF FF FF FF FF FF FF FF     
   5563 FFFC6898 FF FF FF FF FF FF FF FF     
   5564 FFFC68A0 FF FF FF FF FF FF FF FF     
   5565 FFFC68A8 FF FF FF FF FF FF FF FF     
   5566 FFFC68B0 FF FF FF FF FF FF FF FF     
   5567 FFFC68B8 FF FF FF FF FF FF FF FF     
   5568 FFFC68C0 FF FF FF FF FF FF FF FF     
   5569 FFFC68C8 FF FF FF FF FF FF FF FF     
   5570 FFFC68D0 FF FF FF FF FF FF FF FF     
   5571 FFFC68D8 FF FF FF FF FF FF FF FF     
   5572 FFFC68E0 FF FF FF FF FF FF FF FF     
   5573 FFFC68E8 FF FF FF FF FF FF FF FF     
   5574 FFFC68F0 FF FF FF FF FF FF FF FF     
   5575 FFFC68F8 FF FF FF FF FF FF FF FF     
   5576 FFFC6900 FF FF FF FF FF FF FF FF     
   5577 FFFC6908 FF FF FF FF FF FF FF FF     
   5578 FFFC6910 FF FF FF FF FF FF FF FF     
   5579 FFFC6918 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 40
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5580 FFFC6920 FF FF FF FF FF FF FF FF     
   5581 FFFC6928 FF FF FF FF FF FF FF FF     
   5582 FFFC6930 FF FF FF FF FF FF FF FF     
   5583 FFFC6938 FF FF FF FF FF FF FF FF     
   5584 FFFC6940 FF FF FF FF FF FF FF FF     
   5585 FFFC6948 FF FF FF FF FF FF FF FF     
   5586 FFFC6950 FF FF FF FF FF FF FF FF     
   5587 FFFC6958 FF FF FF FF FF FF FF FF     
   5588 FFFC6960 FF FF FF FF FF FF FF FF     
   5589 FFFC6968 FF FF FF FF FF FF FF FF     
   5590 FFFC6970 FF FF FF FF FF FF FF FF     
   5591 FFFC6978 FF FF FF FF FF FF FF FF     
   5592 FFFC6980 FF FF FF FF FF FF FF FF     
   5593 FFFC6988 FF FF FF FF FF FF FF FF     
   5594 FFFC6990 FF FF FF FF FF FF FF FF     
   5595 FFFC6998 FF FF FF FF FF FF FF FF     
   5596 FFFC69A0 FF FF FF FF FF FF FF FF     
   5597 FFFC69A8 FF FF FF FF FF FF FF FF     
   5598 FFFC69B0 FF FF FF FF FF FF FF FF     
   5599 FFFC69B8 FF FF FF FF FF FF FF FF     
   5600 FFFC69C0 FF FF FF FF FF FF FF FF     
   5601 FFFC69C8 FF FF FF FF FF FF FF FF     
   5602 FFFC69D0 FF FF FF FF FF FF FF FF     
   5603 FFFC69D8 FF FF FF FF FF FF FF FF     
   5604 FFFC69E0 FF FF FF FF FF FF FF FF     
   5605 FFFC69E8 FF FF FF FF FF FF FF FF     
   5606 FFFC69F0 FF FF FF FF FF FF FF FF     
   5607 FFFC69F8 FF FF FF FF FF FF FF FF     
   5608 FFFC6A00 FF FF FF FF FF FF FF FF     
   5609 FFFC6A08 FF FF FF FF FF FF FF FF     
   5610 FFFC6A10 FF FF FF FF FF FF FF FF     
   5611 FFFC6A18 FF FF FF FF FF FF FF FF     
   5612 FFFC6A20 FF FF FF FF FF FF FF FF     
   5613 FFFC6A28 FF FF FF FF FF FF FF FF     
   5614 FFFC6A30 FF FF FF FF FF FF FF FF     
   5615 FFFC6A38 FF FF FF FF FF FF FF FF     
   5616 FFFC6A40 FF FF FF FF FF FF FF FF     
   5617 FFFC6A48 FF FF FF FF FF FF FF FF     
   5618 FFFC6A50 FF FF FF FF FF FF FF FF     
   5619 FFFC6A58 FF FF FF FF FF FF FF FF     
   5620 FFFC6A60 FF FF FF FF FF FF FF FF     
   5621 FFFC6A68 FF FF FF FF FF FF FF FF     
   5622 FFFC6A70 FF FF FF FF FF FF FF FF     
   5623 FFFC6A78 FF FF FF FF FF FF FF FF     
   5624 FFFC6A80 FF FF FF FF FF FF FF FF     
   5625 FFFC6A88 FF FF FF FF FF FF FF FF     
   5626 FFFC6A90 FF FF FF FF FF FF FF FF     
   5627 FFFC6A98 FF FF FF FF FF FF FF FF     
   5628 FFFC6AA0 FF FF FF FF FF FF FF FF     
   5629 FFFC6AA8 FF FF FF FF FF FF FF FF     
   5630 FFFC6AB0 FF FF FF FF FF FF FF FF     
   5631 FFFC6AB8 FF FF FF FF FF FF FF FF     
   5632 FFFC6AC0 FF FF FF FF FF FF FF FF     
   5633 FFFC6AC8 FF FF FF FF FF FF FF FF     
   5634 FFFC6AD0 FF FF FF FF FF FF FF FF     
   5635 FFFC6AD8 FF FF FF FF FF FF FF FF     
   5636 FFFC6AE0 FF FF FF FF FF FF FF FF     
   5637 FFFC6AE8 FF FF FF FF FF FF FF FF     
   5638 FFFC6AF0 FF FF FF FF FF FF FF FF     
   5639 FFFC6AF8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 41
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5640 FFFC6B00 FF FF FF FF FF FF FF FF     
   5641 FFFC6B08 FF FF FF FF FF FF FF FF     
   5642 FFFC6B10 FF FF FF FF FF FF FF FF     
   5643 FFFC6B18 FF FF FF FF FF FF FF FF     
   5644 FFFC6B20 FF FF FF FF FF FF FF FF     
   5645 FFFC6B28 FF FF FF FF FF FF FF FF     
   5646 FFFC6B30 FF FF FF FF FF FF FF FF     
   5647 FFFC6B38 FF FF FF FF FF FF FF FF     
   5648 FFFC6B40 FF FF FF FF FF FF FF FF     
   5649 FFFC6B48 FF FF FF FF FF FF FF FF     
   5650 FFFC6B50 FF FF FF FF FF FF FF FF     
   5651 FFFC6B58 FF FF FF FF FF FF FF FF     
   5652 FFFC6B60 FF FF FF FF FF FF FF FF     
   5653 FFFC6B68 FF FF FF FF FF FF FF FF     
   5654 FFFC6B70 FF FF FF FF FF FF FF FF     
   5655 FFFC6B78 FF FF FF FF FF FF FF FF     
   5656 FFFC6B80 FF FF FF FF FF FF FF FF     
   5657 FFFC6B88 FF FF FF FF FF FF FF FF     
   5658 FFFC6B90 FF FF FF FF FF FF FF FF     
   5659 FFFC6B98 FF FF FF FF FF FF FF FF     
   5660 FFFC6BA0 FF FF FF FF FF FF FF FF     
   5661 FFFC6BA8 FF FF FF FF FF FF FF FF     
   5662 FFFC6BB0 FF FF FF FF FF FF FF FF     
   5663 FFFC6BB8 FF FF FF FF FF FF FF FF     
   5664 FFFC6BC0 FF FF FF FF FF FF FF FF     
   5665 FFFC6BC8 FF FF FF FF FF FF FF FF     
   5666 FFFC6BD0 FF FF FF FF FF FF FF FF     
   5667 FFFC6BD8 FF FF FF FF FF FF FF FF     
   5668 FFFC6BE0 FF FF FF FF FF FF FF FF     
   5669 FFFC6BE8 FF FF FF FF FF FF FF FF     
   5670 FFFC6BF0 FF FF FF FF FF FF FF FF     
   5671 FFFC6BF8 FF FF FF FF FF FF FF FF     
   5672 FFFC6C00 FF FF FF FF FF FF FF FF     
   5673 FFFC6C08 FF FF FF FF FF FF FF FF     
   5674 FFFC6C10 FF FF FF FF FF FF FF FF     
   5675 FFFC6C18 FF FF FF FF FF FF FF FF     
   5676 FFFC6C20 FF FF FF FF FF FF FF FF     
   5677 FFFC6C28 FF FF FF FF FF FF FF FF     
   5678 FFFC6C30 FF FF FF FF FF FF FF FF     
   5679 FFFC6C38 FF FF FF FF FF FF FF FF     
   5680 FFFC6C40 FF FF FF FF FF FF FF FF     
   5681 FFFC6C48 FF FF FF FF FF FF FF FF     
   5682 FFFC6C50 FF FF FF FF FF FF FF FF     
   5683 FFFC6C58 FF FF FF FF FF FF FF FF     
   5684 FFFC6C60 FF FF FF FF FF FF FF FF     
   5685 FFFC6C68 FF FF FF FF FF FF FF FF     
   5686 FFFC6C70 FF FF FF FF FF FF FF FF     
   5687 FFFC6C78 FF FF FF FF FF FF FF FF     
   5688 FFFC6C80 FF FF FF FF FF FF FF FF     
   5689 FFFC6C88 FF FF FF FF FF FF FF FF     
   5690 FFFC6C90 FF FF FF FF FF FF FF FF     
   5691 FFFC6C98 FF FF FF FF FF FF FF FF     
   5692 FFFC6CA0 FF FF FF FF FF FF FF FF     
   5693 FFFC6CA8 FF FF FF FF FF FF FF FF     
   5694 FFFC6CB0 FF FF FF FF FF FF FF FF     
   5695 FFFC6CB8 FF FF FF FF FF FF FF FF     
   5696 FFFC6CC0 FF FF FF FF FF FF FF FF     
   5697 FFFC6CC8 FF FF FF FF FF FF FF FF     
   5698 FFFC6CD0 FF FF FF FF FF FF FF FF     
   5699 FFFC6CD8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 42
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5700 FFFC6CE0 FF FF FF FF FF FF FF FF     
   5701 FFFC6CE8 FF FF FF FF FF FF FF FF     
   5702 FFFC6CF0 FF FF FF FF FF FF FF FF     
   5703 FFFC6CF8 FF FF FF FF FF FF FF FF     
   5704 FFFC6D00 FF FF FF FF FF FF FF FF     
   5705 FFFC6D08 FF FF FF FF FF FF FF FF     
   5706 FFFC6D10 FF FF FF FF FF FF FF FF     
   5707 FFFC6D18 FF FF FF FF FF FF FF FF     
   5708 FFFC6D20 FF FF FF FF FF FF FF FF     
   5709 FFFC6D28 FF FF FF FF FF FF FF FF     
   5710 FFFC6D30 FF FF FF FF FF FF FF FF     
   5711 FFFC6D38 FF FF FF FF FF FF FF FF     
   5712 FFFC6D40 FF FF FF FF FF FF FF FF     
   5713 FFFC6D48 FF FF FF FF FF FF FF FF     
   5714 FFFC6D50 FF FF FF FF FF FF FF FF     
   5715 FFFC6D58 FF FF FF FF FF FF FF FF     
   5716 FFFC6D60 FF FF FF FF FF FF FF FF     
   5717 FFFC6D68 FF FF FF FF FF FF FF FF     
   5718 FFFC6D70 FF FF FF FF FF FF FF FF     
   5719 FFFC6D78 FF FF FF FF FF FF FF FF     
   5720 FFFC6D80 FF FF FF FF FF FF FF FF     
   5721 FFFC6D88 FF FF FF FF FF FF FF FF     
   5722 FFFC6D90 FF FF FF FF FF FF FF FF     
   5723 FFFC6D98 FF FF FF FF FF FF FF FF     
   5724 FFFC6DA0 FF FF FF FF FF FF FF FF     
   5725 FFFC6DA8 FF FF FF FF FF FF FF FF     
   5726 FFFC6DB0 FF FF FF FF FF FF FF FF     
   5727 FFFC6DB8 FF FF FF FF FF FF FF FF     
   5728 FFFC6DC0 FF FF FF FF FF FF FF FF     
   5729 FFFC6DC8 FF FF FF FF FF FF FF FF     
   5730 FFFC6DD0 FF FF FF FF FF FF FF FF     
   5731 FFFC6DD8 FF FF FF FF FF FF FF FF     
   5732 FFFC6DE0 FF FF FF FF FF FF FF FF     
   5733 FFFC6DE8 FF FF FF FF FF FF FF FF     
   5734 FFFC6DF0 FF FF FF FF FF FF FF FF     
   5735 FFFC6DF8 FF FF FF FF FF FF FF FF     
   5736 FFFC6E00 FF FF FF FF FF FF FF FF     
   5737 FFFC6E08 FF FF FF FF FF FF FF FF     
   5738 FFFC6E10 FF FF FF FF FF FF FF FF     
   5739 FFFC6E18 FF FF FF FF FF FF FF FF     
   5740 FFFC6E20 FF FF FF FF FF FF FF FF     
   5741 FFFC6E28 FF FF FF FF FF FF FF FF     
   5742 FFFC6E30 FF FF FF FF FF FF FF FF     
   5743 FFFC6E38 FF FF FF FF FF FF FF FF     
   5744 FFFC6E40 FF FF FF FF FF FF FF FF     
   5745 FFFC6E48 FF FF FF FF FF FF FF FF     
   5746 FFFC6E50 FF FF FF FF FF FF FF FF     
   5747 FFFC6E58 FF FF FF FF FF FF FF FF     
   5748 FFFC6E60 FF FF FF FF FF FF FF FF     
   5749 FFFC6E68 FF FF FF FF FF FF FF FF     
   5750 FFFC6E70 FF FF FF FF FF FF FF FF     
   5751 FFFC6E78 FF FF FF FF FF FF FF FF     
   5752 FFFC6E80 FF FF FF FF FF FF FF FF     
   5753 FFFC6E88 FF FF FF FF FF FF FF FF     
   5754 FFFC6E90 FF FF FF FF FF FF FF FF     
   5755 FFFC6E98 FF FF FF FF FF FF FF FF     
   5756 FFFC6EA0 FF FF FF FF FF FF FF FF     
   5757 FFFC6EA8 FF FF FF FF FF FF FF FF     
   5758 FFFC6EB0 FF FF FF FF FF FF FF FF     
   5759 FFFC6EB8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 43
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5760 FFFC6EC0 FF FF FF FF FF FF FF FF     
   5761 FFFC6EC8 FF FF FF FF FF FF FF FF     
   5762 FFFC6ED0 FF FF FF FF FF FF FF FF     
   5763 FFFC6ED8 FF FF FF FF FF FF FF FF     
   5764 FFFC6EE0 FF FF FF FF FF FF FF FF     
   5765 FFFC6EE8 FF FF FF FF FF FF FF FF     
   5766 FFFC6EF0 FF FF FF FF FF FF FF FF     
   5767 FFFC6EF8 FF FF FF FF FF FF FF FF     
   5768 FFFC6F00 FF FF FF FF FF FF FF FF     
   5769 FFFC6F08 FF FF FF FF FF FF FF FF     
   5770 FFFC6F10 FF FF FF FF FF FF FF FF     
   5771 FFFC6F18 FF FF FF FF FF FF FF FF     
   5772 FFFC6F20 FF FF FF FF FF FF FF FF     
   5773 FFFC6F28 FF FF FF FF FF FF FF FF     
   5774 FFFC6F30 FF FF FF FF FF FF FF FF     
   5775 FFFC6F38 FF FF FF FF FF FF FF FF     
   5776 FFFC6F40 FF FF FF FF FF FF FF FF     
   5777 FFFC6F48 FF FF FF FF FF FF FF FF     
   5778 FFFC6F50 FF FF FF FF FF FF FF FF     
   5779 FFFC6F58 FF FF FF FF FF FF FF FF     
   5780 FFFC6F60 FF FF FF FF FF FF FF FF     
   5781 FFFC6F68 FF FF FF FF FF FF FF FF     
   5782 FFFC6F70 FF FF FF FF FF FF FF FF     
   5783 FFFC6F78 FF FF FF FF FF FF FF FF     
   5784 FFFC6F80 FF FF FF FF FF FF FF FF     
   5785 FFFC6F88 FF FF FF FF FF FF FF FF     
   5786 FFFC6F90 FF FF FF FF FF FF FF FF     
   5787 FFFC6F98 FF FF FF FF FF FF FF FF     
   5788 FFFC6FA0 FF FF FF FF FF FF FF FF     
   5789 FFFC6FA8 FF FF FF FF FF FF FF FF     
   5790 FFFC6FB0 FF FF FF FF FF FF FF FF     
   5791 FFFC6FB8 FF FF FF FF FF FF FF FF     
   5792 FFFC6FC0 FF FF FF FF FF FF FF FF     
   5793 FFFC6FC8 FF FF FF FF FF FF FF FF     
   5794 FFFC6FD0 FF FF FF FF FF FF FF FF     
   5795 FFFC6FD8 FF FF FF FF FF FF FF FF     
   5796 FFFC6FE0 FF FF FF FF FF FF FF FF     
   5797 FFFC6FE8 FF FF FF FF FF FF FF FF     
   5798 FFFC6FF0 FF FF FF FF FF FF FF FF     
   5799 FFFC6FF8 FF FF FF FF FF FF FF FF     
   5800 FFFC7000 FF FF FF FF FF FF FF FF     
   5801 FFFC7008 FF FF FF FF FF FF FF FF     
   5802 FFFC7010 FF FF FF FF FF FF FF FF     
   5803 FFFC7018 FF FF FF FF FF FF FF FF     
   5804 FFFC7020 FF FF FF FF FF FF FF FF     
   5805 FFFC7028 FF FF FF FF FF FF FF FF     
   5806 FFFC7030 FF FF FF FF FF FF FF FF     
   5807 FFFC7038 FF FF FF FF FF FF FF FF     
   5808 FFFC7040 FF FF FF FF FF FF FF FF     
   5809 FFFC7048 FF FF FF FF FF FF FF FF     
   5810 FFFC7050 FF FF FF FF FF FF FF FF     
   5811 FFFC7058 FF FF FF FF FF FF FF FF     
   5812 FFFC7060 FF FF FF FF FF FF FF FF     
   5813 FFFC7068 FF FF FF FF FF FF FF FF     
   5814 FFFC7070 FF FF FF FF FF FF FF FF     
   5815 FFFC7078 FF FF FF FF FF FF FF FF     
   5816 FFFC7080 FF FF FF FF FF FF FF FF     
   5817 FFFC7088 FF FF FF FF FF FF FF FF     
   5818 FFFC7090 FF FF FF FF FF FF FF FF     
   5819 FFFC7098 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 44
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5820 FFFC70A0 FF FF FF FF FF FF FF FF     
   5821 FFFC70A8 FF FF FF FF FF FF FF FF     
   5822 FFFC70B0 FF FF FF FF FF FF FF FF     
   5823 FFFC70B8 FF FF FF FF FF FF FF FF     
   5824 FFFC70C0 FF FF FF FF FF FF FF FF     
   5825 FFFC70C8 FF FF FF FF FF FF FF FF     
   5826 FFFC70D0 FF FF FF FF FF FF FF FF     
   5827 FFFC70D8 FF FF FF FF FF FF FF FF     
   5828 FFFC70E0 FF FF FF FF FF FF FF FF     
   5829 FFFC70E8 FF FF FF FF FF FF FF FF     
   5830 FFFC70F0 FF FF FF FF FF FF FF FF     
   5831 FFFC70F8 FF FF FF FF FF FF FF FF     
   5832 FFFC7100 FF FF FF FF FF FF FF FF     
   5833 FFFC7108 FF FF FF FF FF FF FF FF     
   5834 FFFC7110 FF FF FF FF FF FF FF FF     
   5835 FFFC7118 FF FF FF FF FF FF FF FF     
   5836 FFFC7120 FF FF FF FF FF FF FF FF     
   5837 FFFC7128 FF FF FF FF FF FF FF FF     
   5838 FFFC7130 FF FF FF FF FF FF FF FF     
   5839 FFFC7138 FF FF FF FF FF FF FF FF     
   5840 FFFC7140 FF FF FF FF FF FF FF FF     
   5841 FFFC7148 FF FF FF FF FF FF FF FF     
   5842 FFFC7150 FF FF FF FF FF FF FF FF     
   5843 FFFC7158 FF FF FF FF FF FF FF FF     
   5844 FFFC7160 FF FF FF FF FF FF FF FF     
   5845 FFFC7168 FF FF FF FF FF FF FF FF     
   5846 FFFC7170 FF FF FF FF FF FF FF FF     
   5847 FFFC7178 FF FF FF FF FF FF FF FF     
   5848 FFFC7180 FF FF FF FF FF FF FF FF     
   5849 FFFC7188 FF FF FF FF FF FF FF FF     
   5850 FFFC7190 FF FF FF FF FF FF FF FF     
   5851 FFFC7198 FF FF FF FF FF FF FF FF     
   5852 FFFC71A0 FF FF FF FF FF FF FF FF     
   5853 FFFC71A8 FF FF FF FF FF FF FF FF     
   5854 FFFC71B0 FF FF FF FF FF FF FF FF     
   5855 FFFC71B8 FF FF FF FF FF FF FF FF     
   5856 FFFC71C0 FF FF FF FF FF FF FF FF     
   5857 FFFC71C8 FF FF FF FF FF FF FF FF     
   5858 FFFC71D0 FF FF FF FF FF FF FF FF     
   5859 FFFC71D8 FF FF FF FF FF FF FF FF     
   5860 FFFC71E0 FF FF FF FF FF FF FF FF     
   5861 FFFC71E8 FF FF FF FF FF FF FF FF     
   5862 FFFC71F0 FF FF FF FF FF FF FF FF     
   5863 FFFC71F8 FF FF FF FF FF FF FF FF     
   5864 FFFC7200 FF FF FF FF FF FF FF FF     
   5865 FFFC7208 FF FF FF FF FF FF FF FF     
   5866 FFFC7210 FF FF FF FF FF FF FF FF     
   5867 FFFC7218 FF FF FF FF FF FF FF FF     
   5868 FFFC7220 FF FF FF FF FF FF FF FF     
   5869 FFFC7228 FF FF FF FF FF FF FF FF     
   5870 FFFC7230 FF FF FF FF FF FF FF FF     
   5871 FFFC7238 FF FF FF FF FF FF FF FF     
   5872 FFFC7240 FF FF FF FF FF FF FF FF     
   5873 FFFC7248 FF FF FF FF FF FF FF FF     
   5874 FFFC7250 FF FF FF FF FF FF FF FF     
   5875 FFFC7258 FF FF FF FF FF FF FF FF     
   5876 FFFC7260 FF FF FF FF FF FF FF FF     
   5877 FFFC7268 FF FF FF FF FF FF FF FF     
   5878 FFFC7270 FF FF FF FF FF FF FF FF     
   5879 FFFC7278 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 45
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5880 FFFC7280 FF FF FF FF FF FF FF FF     
   5881 FFFC7288 FF FF FF FF FF FF FF FF     
   5882 FFFC7290 FF FF FF FF FF FF FF FF     
   5883 FFFC7298 FF FF FF FF FF FF FF FF     
   5884 FFFC72A0 FF FF FF FF FF FF FF FF     
   5885 FFFC72A8 FF FF FF FF FF FF FF FF     
   5886 FFFC72B0 FF FF FF FF FF FF FF FF     
   5887 FFFC72B8 FF FF FF FF FF FF FF FF     
   5888 FFFC72C0 FF FF FF FF FF FF FF FF     
   5889 FFFC72C8 FF FF FF FF FF FF FF FF     
   5890 FFFC72D0 FF FF FF FF FF FF FF FF     
   5891 FFFC72D8 FF FF FF FF FF FF FF FF     
   5892 FFFC72E0 FF FF FF FF FF FF FF FF     
   5893 FFFC72E8 FF FF FF FF FF FF FF FF     
   5894 FFFC72F0 FF FF FF FF FF FF FF FF     
   5895 FFFC72F8 FF FF FF FF FF FF FF FF     
   5896 FFFC7300 FF FF FF FF FF FF FF FF     
   5897 FFFC7308 FF FF FF FF FF FF FF FF     
   5898 FFFC7310 FF FF FF FF FF FF FF FF     
   5899 FFFC7318 FF FF FF FF FF FF FF FF     
   5900 FFFC7320 FF FF FF FF FF FF FF FF     
   5901 FFFC7328 FF FF FF FF FF FF FF FF     
   5902 FFFC7330 FF FF FF FF FF FF FF FF     
   5903 FFFC7338 FF FF FF FF FF FF FF FF     
   5904 FFFC7340 FF FF FF FF FF FF FF FF     
   5905 FFFC7348 FF FF FF FF FF FF FF FF     
   5906 FFFC7350 FF FF FF FF FF FF FF FF     
   5907 FFFC7358 FF FF FF FF FF FF FF FF     
   5908 FFFC7360 FF FF FF FF FF FF FF FF     
   5909 FFFC7368 FF FF FF FF FF FF FF FF     
   5910 FFFC7370 FF FF FF FF FF FF FF FF     
   5911 FFFC7378 FF FF FF FF FF FF FF FF     
   5912 FFFC7380 FF FF FF FF FF FF FF FF     
   5913 FFFC7388 FF FF FF FF FF FF FF FF     
   5914 FFFC7390 FF FF FF FF FF FF FF FF     
   5915 FFFC7398 FF FF FF FF FF FF FF FF     
   5916 FFFC73A0 FF FF FF FF FF FF FF FF     
   5917 FFFC73A8 FF FF FF FF FF FF FF FF     
   5918 FFFC73B0 FF FF FF FF FF FF FF FF     
   5919 FFFC73B8 FF FF FF FF FF FF FF FF     
   5920 FFFC73C0 FF FF FF FF FF FF FF FF     
   5921 FFFC73C8 FF FF FF FF FF FF FF FF     
   5922 FFFC73D0 FF FF FF FF FF FF FF FF     
   5923 FFFC73D8 FF FF FF FF FF FF FF FF     
   5924 FFFC73E0 FF FF FF FF FF FF FF FF     
   5925 FFFC73E8 FF FF FF FF FF FF FF FF     
   5926 FFFC73F0 FF FF FF FF FF FF FF FF     
   5927 FFFC73F8 FF FF FF FF FF FF FF FF     
   5928 FFFC7400 FF FF FF FF FF FF FF FF     
   5929 FFFC7408 FF FF FF FF FF FF FF FF     
   5930 FFFC7410 FF FF FF FF FF FF FF FF     
   5931 FFFC7418 FF FF FF FF FF FF FF FF     
   5932 FFFC7420 FF FF FF FF FF FF FF FF     
   5933 FFFC7428 FF FF FF FF FF FF FF FF     
   5934 FFFC7430 FF FF FF FF FF FF FF FF     
   5935 FFFC7438 FF FF FF FF FF FF FF FF     
   5936 FFFC7440 FF FF FF FF FF FF FF FF     
   5937 FFFC7448 FF FF FF FF FF FF FF FF     
   5938 FFFC7450 FF FF FF FF FF FF FF FF     
   5939 FFFC7458 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 46
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5940 FFFC7460 FF FF FF FF FF FF FF FF     
   5941 FFFC7468 FF FF FF FF FF FF FF FF     
   5942 FFFC7470 FF FF FF FF FF FF FF FF     
   5943 FFFC7478 FF FF FF FF FF FF FF FF     
   5944 FFFC7480 FF FF FF FF FF FF FF FF     
   5945 FFFC7488 FF FF FF FF FF FF FF FF     
   5946 FFFC7490 FF FF FF FF FF FF FF FF     
   5947 FFFC7498 FF FF FF FF FF FF FF FF     
   5948 FFFC74A0 FF FF FF FF FF FF FF FF     
   5949 FFFC74A8 FF FF FF FF FF FF FF FF     
   5950 FFFC74B0 FF FF FF FF FF FF FF FF     
   5951 FFFC74B8 FF FF FF FF FF FF FF FF     
   5952 FFFC74C0 FF FF FF FF FF FF FF FF     
   5953 FFFC74C8 FF FF FF FF FF FF FF FF     
   5954 FFFC74D0 FF FF FF FF FF FF FF FF     
   5955 FFFC74D8 FF FF FF FF FF FF FF FF     
   5956 FFFC74E0 FF FF FF FF FF FF FF FF     
   5957 FFFC74E8 FF FF FF FF FF FF FF FF     
   5958 FFFC74F0 FF FF FF FF FF FF FF FF     
   5959 FFFC74F8 FF FF FF FF FF FF FF FF     
   5960 FFFC7500 FF FF FF FF FF FF FF FF     
   5961 FFFC7508 FF FF FF FF FF FF FF FF     
   5962 FFFC7510 FF FF FF FF FF FF FF FF     
   5963 FFFC7518 FF FF FF FF FF FF FF FF     
   5964 FFFC7520 FF FF FF FF FF FF FF FF     
   5965 FFFC7528 FF FF FF FF FF FF FF FF     
   5966 FFFC7530 FF FF FF FF FF FF FF FF     
   5967 FFFC7538 FF FF FF FF FF FF FF FF     
   5968 FFFC7540 FF FF FF FF FF FF FF FF     
   5969 FFFC7548 FF FF FF FF FF FF FF FF     
   5970 FFFC7550 FF FF FF FF FF FF FF FF     
   5971 FFFC7558 FF FF FF FF FF FF FF FF     
   5972 FFFC7560 FF FF FF FF FF FF FF FF     
   5973 FFFC7568 FF FF FF FF FF FF FF FF     
   5974 FFFC7570 FF FF FF FF FF FF FF FF     
   5975 FFFC7578 FF FF FF FF FF FF FF FF     
   5976 FFFC7580 FF FF FF FF FF FF FF FF     
   5977 FFFC7588 FF FF FF FF FF FF FF FF     
   5978 FFFC7590 FF FF FF FF FF FF FF FF     
   5979 FFFC7598 FF FF FF FF FF FF FF FF     
   5980 FFFC75A0 FF FF FF FF FF FF FF FF     
   5981 FFFC75A8 FF FF FF FF FF FF FF FF     
   5982 FFFC75B0 FF FF FF FF FF FF FF FF     
   5983 FFFC75B8 FF FF FF FF FF FF FF FF     
   5984 FFFC75C0 FF FF FF FF FF FF FF FF     
   5985 FFFC75C8 FF FF FF FF FF FF FF FF     
   5986 FFFC75D0 FF FF FF FF FF FF FF FF     
   5987 FFFC75D8 FF FF FF FF FF FF FF FF     
   5988 FFFC75E0 FF FF FF FF FF FF FF FF     
   5989 FFFC75E8 FF FF FF FF FF FF FF FF     
   5990 FFFC75F0 FF FF FF FF FF FF FF FF     
   5991 FFFC75F8 FF FF FF FF FF FF FF FF     
   5992 FFFC7600 FF FF FF FF FF FF FF FF     
   5993 FFFC7608 FF FF FF FF FF FF FF FF     
   5994 FFFC7610 FF FF FF FF FF FF FF FF     
   5995 FFFC7618 FF FF FF FF FF FF FF FF     
   5996 FFFC7620 FF FF FF FF FF FF FF FF     
   5997 FFFC7628 FF FF FF FF FF FF FF FF     
   5998 FFFC7630 FF FF FF FF FF FF FF FF     
   5999 FFFC7638 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 47
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6000 FFFC7640 FF FF FF FF FF FF FF FF     
   6001 FFFC7648 FF FF FF FF FF FF FF FF     
   6002 FFFC7650 FF FF FF FF FF FF FF FF     
   6003 FFFC7658 FF FF FF FF FF FF FF FF     
   6004 FFFC7660 FF FF FF FF FF FF FF FF     
   6005 FFFC7668 FF FF FF FF FF FF FF FF     
   6006 FFFC7670 FF FF FF FF FF FF FF FF     
   6007 FFFC7678 FF FF FF FF FF FF FF FF     
   6008 FFFC7680 FF FF FF FF FF FF FF FF     
   6009 FFFC7688 FF FF FF FF FF FF FF FF     
   6010 FFFC7690 FF FF FF FF FF FF FF FF     
   6011 FFFC7698 FF FF FF FF FF FF FF FF     
   6012 FFFC76A0 FF FF FF FF FF FF FF FF     
   6013 FFFC76A8 FF FF FF FF FF FF FF FF     
   6014 FFFC76B0 FF FF FF FF FF FF FF FF     
   6015 FFFC76B8 FF FF FF FF FF FF FF FF     
   6016 FFFC76C0 FF FF FF FF FF FF FF FF     
   6017 FFFC76C8 FF FF FF FF FF FF FF FF     
   6018 FFFC76D0 FF FF FF FF FF FF FF FF     
   6019 FFFC76D8 FF FF FF FF FF FF FF FF     
   6020 FFFC76E0 FF FF FF FF FF FF FF FF     
   6021 FFFC76E8 FF FF FF FF FF FF FF FF     
   6022 FFFC76F0 FF FF FF FF FF FF FF FF     
   6023 FFFC76F8 FF FF FF FF FF FF FF FF     
   6024 FFFC7700 FF FF FF FF FF FF FF FF     
   6025 FFFC7708 FF FF FF FF FF FF FF FF     
   6026 FFFC7710 FF FF FF FF FF FF FF FF     
   6027 FFFC7718 FF FF FF FF FF FF FF FF     
   6028 FFFC7720 FF FF FF FF FF FF FF FF     
   6029 FFFC7728 FF FF FF FF FF FF FF FF     
   6030 FFFC7730 FF FF FF FF FF FF FF FF     
   6031 FFFC7738 FF FF FF FF FF FF FF FF     
   6032 FFFC7740 FF FF FF FF FF FF FF FF     
   6033 FFFC7748 FF FF FF FF FF FF FF FF     
   6034 FFFC7750 FF FF FF FF FF FF FF FF     
   6035 FFFC7758 FF FF FF FF FF FF FF FF     
   6036 FFFC7760 FF FF FF FF FF FF FF FF     
   6037 FFFC7768 FF FF FF FF FF FF FF FF     
   6038 FFFC7770 FF FF FF FF FF FF FF FF     
   6039 FFFC7778 FF FF FF FF FF FF FF FF     
   6040 FFFC7780 FF FF FF FF FF FF FF FF     
   6041 FFFC7788 FF FF FF FF FF FF FF FF     
   6042 FFFC7790 FF FF FF FF FF FF FF FF     
   6043 FFFC7798 FF FF FF FF FF FF FF FF     
   6044 FFFC77A0 FF FF FF FF FF FF FF FF     
   6045 FFFC77A8 FF FF FF FF FF FF FF FF     
   6046 FFFC77B0 FF FF FF FF FF FF FF FF     
   6047 FFFC77B8 FF FF FF FF FF FF FF FF     
   6048 FFFC77C0 FF FF FF FF FF FF FF FF     
   6049 FFFC77C8 FF FF FF FF FF FF FF FF     
   6050 FFFC77D0 FF FF FF FF FF FF FF FF     
   6051 FFFC77D8 FF FF FF FF FF FF FF FF     
   6052 FFFC77E0 FF FF FF FF FF FF FF FF     
   6053 FFFC77E8 FF FF FF FF FF FF FF FF     
   6054 FFFC77F0 FF FF FF FF FF FF FF FF     
   6055 FFFC77F8 FF FF FF FF FF FF FF FF     
   6056 FFFC7800 FF FF FF FF FF FF FF FF     
   6057 FFFC7808 FF FF FF FF FF FF FF FF     
   6058 FFFC7810 FF FF FF FF FF FF FF FF     
   6059 FFFC7818 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 48
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6060 FFFC7820 FF FF FF FF FF FF FF FF     
   6061 FFFC7828 FF FF FF FF FF FF FF FF     
   6062 FFFC7830 FF FF FF FF FF FF FF FF     
   6063 FFFC7838 FF FF FF FF FF FF FF FF     
   6064 FFFC7840 FF FF FF FF FF FF FF FF     
   6065 FFFC7848 FF FF FF FF FF FF FF FF     
   6066 FFFC7850 FF FF FF FF FF FF FF FF     
   6067 FFFC7858 FF FF FF FF FF FF FF FF     
   6068 FFFC7860 FF FF FF FF FF FF FF FF     
   6069 FFFC7868 FF FF FF FF FF FF FF FF     
   6070 FFFC7870 FF FF FF FF FF FF FF FF     
   6071 FFFC7878 FF FF FF FF FF FF FF FF     
   6072 FFFC7880 FF FF FF FF FF FF FF FF     
   6073 FFFC7888 FF FF FF FF FF FF FF FF     
   6074 FFFC7890 FF FF FF FF FF FF FF FF     
   6075 FFFC7898 FF FF FF FF FF FF FF FF     
   6076 FFFC78A0 FF FF FF FF FF FF FF FF     
   6077 FFFC78A8 FF FF FF FF FF FF FF FF     
   6078 FFFC78B0 FF FF FF FF FF FF FF FF     
   6079 FFFC78B8 FF FF FF FF FF FF FF FF     
   6080 FFFC78C0 FF FF FF FF FF FF FF FF     
   6081 FFFC78C8 FF FF FF FF FF FF FF FF     
   6082 FFFC78D0 FF FF FF FF FF FF FF FF     
   6083 FFFC78D8 FF FF FF FF FF FF FF FF     
   6084 FFFC78E0 FF FF FF FF FF FF FF FF     
   6085 FFFC78E8 FF FF FF FF FF FF FF FF     
   6086 FFFC78F0 FF FF FF FF FF FF FF FF     
   6087 FFFC78F8 FF FF FF FF FF FF FF FF     
   6088 FFFC7900 FF FF FF FF FF FF FF FF     
   6089 FFFC7908 FF FF FF FF FF FF FF FF     
   6090 FFFC7910 FF FF FF FF FF FF FF FF     
   6091 FFFC7918 FF FF FF FF FF FF FF FF     
   6092 FFFC7920 FF FF FF FF FF FF FF FF     
   6093 FFFC7928 FF FF FF FF FF FF FF FF     
   6094 FFFC7930 FF FF FF FF FF FF FF FF     
   6095 FFFC7938 FF FF FF FF FF FF FF FF     
   6096 FFFC7940 FF FF FF FF FF FF FF FF     
   6097 FFFC7948 FF FF FF FF FF FF FF FF     
   6098 FFFC7950 FF FF FF FF FF FF FF FF     
   6099 FFFC7958 FF FF FF FF FF FF FF FF     
   6100 FFFC7960 FF FF FF FF FF FF FF FF     
   6101 FFFC7968 FF FF FF FF FF FF FF FF     
   6102 FFFC7970 FF FF FF FF FF FF FF FF     
   6103 FFFC7978 FF FF FF FF FF FF FF FF     
   6104 FFFC7980 FF FF FF FF FF FF FF FF     
   6105 FFFC7988 FF FF FF FF FF FF FF FF     
   6106 FFFC7990 FF FF FF FF FF FF FF FF     
   6107 FFFC7998 FF FF FF FF FF FF FF FF     
   6108 FFFC79A0 FF FF FF FF FF FF FF FF     
   6109 FFFC79A8 FF FF FF FF FF FF FF FF     
   6110 FFFC79B0 FF FF FF FF FF FF FF FF     
   6111 FFFC79B8 FF FF FF FF FF FF FF FF     
   6112 FFFC79C0 FF FF FF FF FF FF FF FF     
   6113 FFFC79C8 FF FF FF FF FF FF FF FF     
   6114 FFFC79D0 FF FF FF FF FF FF FF FF     
   6115 FFFC79D8 FF FF FF FF FF FF FF FF     
   6116 FFFC79E0 FF FF FF FF FF FF FF FF     
   6117 FFFC79E8 FF FF FF FF FF FF FF FF     
   6118 FFFC79F0 FF FF FF FF FF FF FF FF     
   6119 FFFC79F8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 49
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6120 FFFC7A00 FF FF FF FF FF FF FF FF     
   6121 FFFC7A08 FF FF FF FF FF FF FF FF     
   6122 FFFC7A10 FF FF FF FF FF FF FF FF     
   6123 FFFC7A18 FF FF FF FF FF FF FF FF     
   6124 FFFC7A20 FF FF FF FF FF FF FF FF     
   6125 FFFC7A28 FF FF FF FF FF FF FF FF     
   6126 FFFC7A30 FF FF FF FF FF FF FF FF     
   6127 FFFC7A38 FF FF FF FF FF FF FF FF     
   6128 FFFC7A40 FF FF FF FF FF FF FF FF     
   6129 FFFC7A48 FF FF FF FF FF FF FF FF     
   6130 FFFC7A50 FF FF FF FF FF FF FF FF     
   6131 FFFC7A58 FF FF FF FF FF FF FF FF     
   6132 FFFC7A60 FF FF FF FF FF FF FF FF     
   6133 FFFC7A68 FF FF FF FF FF FF FF FF     
   6134 FFFC7A70 FF FF FF FF FF FF FF FF     
   6135 FFFC7A78 FF FF FF FF FF FF FF FF     
   6136 FFFC7A80 FF FF FF FF FF FF FF FF     
   6137 FFFC7A88 FF FF FF FF FF FF FF FF     
   6138 FFFC7A90 FF FF FF FF FF FF FF FF     
   6139 FFFC7A98 FF FF FF FF FF FF FF FF     
   6140 FFFC7AA0 FF FF FF FF FF FF FF FF     
   6141 FFFC7AA8 FF FF FF FF FF FF FF FF     
   6142 FFFC7AB0 FF FF FF FF FF FF FF FF     
   6143 FFFC7AB8 FF FF FF FF FF FF FF FF     
   6144 FFFC7AC0 FF FF FF FF FF FF FF FF     
   6145 FFFC7AC8 FF FF FF FF FF FF FF FF     
   6146 FFFC7AD0 FF FF FF FF FF FF FF FF     
   6147 FFFC7AD8 FF FF FF FF FF FF FF FF     
   6148 FFFC7AE0 FF FF FF FF FF FF FF FF     
   6149 FFFC7AE8 FF FF FF FF FF FF FF FF     
   6150 FFFC7AF0 FF FF FF FF FF FF FF FF     
   6151 FFFC7AF8 FF FF FF FF FF FF FF FF     
   6152 FFFC7B00 FF FF FF FF FF FF FF FF     
   6153 FFFC7B08 FF FF FF FF FF FF FF FF     
   6154 FFFC7B10 FF FF FF FF FF FF FF FF     
   6155 FFFC7B18 FF FF FF FF FF FF FF FF     
   6156 FFFC7B20 FF FF FF FF FF FF FF FF     
   6157 FFFC7B28 FF FF FF FF FF FF FF FF     
   6158 FFFC7B30 FF FF FF FF FF FF FF FF     
   6159 FFFC7B38 FF FF FF FF FF FF FF FF     
   6160 FFFC7B40 FF FF FF FF FF FF FF FF     
   6161 FFFC7B48 FF FF FF FF FF FF FF FF     
   6162 FFFC7B50 FF FF FF FF FF FF FF FF     
   6163 FFFC7B58 FF FF FF FF FF FF FF FF     
   6164 FFFC7B60 FF FF FF FF FF FF FF FF     
   6165 FFFC7B68 FF FF FF FF FF FF FF FF     
   6166 FFFC7B70 FF FF FF FF FF FF FF FF     
   6167 FFFC7B78 FF FF FF FF FF FF FF FF     
   6168 FFFC7B80 FF FF FF FF FF FF FF FF     
   6169 FFFC7B88 FF FF FF FF FF FF FF FF     
   6170 FFFC7B90 FF FF FF FF FF FF FF FF     
   6171 FFFC7B98 FF FF FF FF FF FF FF FF     
   6172 FFFC7BA0 FF FF FF FF FF FF FF FF     
   6173 FFFC7BA8 FF FF FF FF FF FF FF FF     
   6174 FFFC7BB0 FF FF FF FF FF FF FF FF     
   6175 FFFC7BB8 FF FF FF FF FF FF FF FF     
   6176 FFFC7BC0 FF FF FF FF FF FF FF FF     
   6177 FFFC7BC8 FF FF FF FF FF FF FF FF     
   6178 FFFC7BD0 FF FF FF FF FF FF FF FF     
   6179 FFFC7BD8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 50
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6180 FFFC7BE0 FF FF FF FF FF FF FF FF     
   6181 FFFC7BE8 FF FF FF FF FF FF FF FF     
   6182 FFFC7BF0 FF FF FF FF FF FF FF FF     
   6183 FFFC7BF8 FF FF FF FF FF FF FF FF     
   6184 FFFC7C00 FF FF FF FF FF FF FF FF     
   6185 FFFC7C08 FF FF FF FF FF FF FF FF     
   6186 FFFC7C10 FF FF FF FF FF FF FF FF     
   6187 FFFC7C18 FF FF FF FF FF FF FF FF     
   6188 FFFC7C20 FF FF FF FF FF FF FF FF     
   6189 FFFC7C28 FF FF FF FF FF FF FF FF     
   6190 FFFC7C30 FF FF FF FF FF FF FF FF     
   6191 FFFC7C38 FF FF FF FF FF FF FF FF     
   6192 FFFC7C40 FF FF FF FF FF FF FF FF     
   6193 FFFC7C48 FF FF FF FF FF FF FF FF     
   6194 FFFC7C50 FF FF FF FF FF FF FF FF     
   6195 FFFC7C58 FF FF FF FF FF FF FF FF     
   6196 FFFC7C60 FF FF FF FF FF FF FF FF     
   6197 FFFC7C68 FF FF FF FF FF FF FF FF     
   6198 FFFC7C70 FF FF FF FF FF FF FF FF     
   6199 FFFC7C78 FF FF FF FF FF FF FF FF     
   6200 FFFC7C80 FF FF FF FF FF FF FF FF     
   6201 FFFC7C88 FF FF FF FF FF FF FF FF     
   6202 FFFC7C90 FF FF FF FF FF FF FF FF     
   6203 FFFC7C98 FF FF FF FF FF FF FF FF     
   6204 FFFC7CA0 FF FF FF FF FF FF FF FF     
   6205 FFFC7CA8 FF FF FF FF FF FF FF FF     
   6206 FFFC7CB0 FF FF FF FF FF FF FF FF     
   6207 FFFC7CB8 FF FF FF FF FF FF FF FF     
   6208 FFFC7CC0 FF FF FF FF FF FF FF FF     
   6209 FFFC7CC8 FF FF FF FF FF FF FF FF     
   6210 FFFC7CD0 FF FF FF FF FF FF FF FF     
   6211 FFFC7CD8 FF FF FF FF FF FF FF FF     
   6212 FFFC7CE0 FF FF FF FF FF FF FF FF     
   6213 FFFC7CE8 FF FF FF FF FF FF FF FF     
   6214 FFFC7CF0 FF FF FF FF FF FF FF FF     
   6215 FFFC7CF8 FF FF FF FF FF FF FF FF     
   6216 FFFC7D00 FF FF FF FF FF FF FF FF     
   6217 FFFC7D08 FF FF FF FF FF FF FF FF     
   6218 FFFC7D10 FF FF FF FF FF FF FF FF     
   6219 FFFC7D18 FF FF FF FF FF FF FF FF     
   6220 FFFC7D20 FF FF FF FF FF FF FF FF     
   6221 FFFC7D28 FF FF FF FF FF FF FF FF     
   6222 FFFC7D30 FF FF FF FF FF FF FF FF     
   6223 FFFC7D38 FF FF FF FF FF FF FF FF     
   6224 FFFC7D40 FF FF FF FF FF FF FF FF     
   6225 FFFC7D48 FF FF FF FF FF FF FF FF     
   6226 FFFC7D50 FF FF FF FF FF FF FF FF     
   6227 FFFC7D58 FF FF FF FF FF FF FF FF     
   6228 FFFC7D60 FF FF FF FF FF FF FF FF     
   6229 FFFC7D68 FF FF FF FF FF FF FF FF     
   6230 FFFC7D70 FF FF FF FF FF FF FF FF     
   6231 FFFC7D78 FF FF FF FF FF FF FF FF     
   6232 FFFC7D80 FF FF FF FF FF FF FF FF     
   6233 FFFC7D88 FF FF FF FF FF FF FF FF     
   6234 FFFC7D90 FF FF FF FF FF FF FF FF     
   6235 FFFC7D98 FF FF FF FF FF FF FF FF     
   6236 FFFC7DA0 FF FF FF FF FF FF FF FF     
   6237 FFFC7DA8 FF FF FF FF FF FF FF FF     
   6238 FFFC7DB0 FF FF FF FF FF FF FF FF     
   6239 FFFC7DB8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 51
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6240 FFFC7DC0 FF FF FF FF FF FF FF FF     
   6241 FFFC7DC8 FF FF FF FF FF FF FF FF     
   6242 FFFC7DD0 FF FF FF FF FF FF FF FF     
   6243 FFFC7DD8 FF FF FF FF FF FF FF FF     
   6244 FFFC7DE0 FF FF FF FF FF FF FF FF     
   6245 FFFC7DE8 FF FF FF FF FF FF FF FF     
   6246 FFFC7DF0 FF FF FF FF FF FF FF FF     
   6247 FFFC7DF8 FF FF FF FF FF FF FF FF     
   6248 FFFC7E00 FF FF FF FF FF FF FF FF     
   6249 FFFC7E08 FF FF FF FF FF FF FF FF     
   6250 FFFC7E10 FF FF FF FF FF FF FF FF     
   6251 FFFC7E18 FF FF FF FF FF FF FF FF     
   6252 FFFC7E20 FF FF FF FF FF FF FF FF     
   6253 FFFC7E28 FF FF FF FF FF FF FF FF     
   6254 FFFC7E30 FF FF FF FF FF FF FF FF     
   6255 FFFC7E38 FF FF FF FF FF FF FF FF     
   6256 FFFC7E40 FF FF FF FF FF FF FF FF     
   6257 FFFC7E48 FF FF FF FF FF FF FF FF     
   6258 FFFC7E50 FF FF FF FF FF FF FF FF     
   6259 FFFC7E58 FF FF FF FF FF FF FF FF     
   6260 FFFC7E60 FF FF FF FF FF FF FF FF     
   6261 FFFC7E68 FF FF FF FF FF FF FF FF     
   6262 FFFC7E70 FF FF FF FF FF FF FF FF     
   6263 FFFC7E78 FF FF FF FF FF FF FF FF     
   6264 FFFC7E80 FF FF FF FF FF FF FF FF     
   6265 FFFC7E88 FF FF FF FF FF FF FF FF     
   6266 FFFC7E90 FF FF FF FF FF FF FF FF     
   6267 FFFC7E98 FF FF FF FF FF FF FF FF     
   6268 FFFC7EA0 FF FF FF FF FF FF FF FF     
   6269 FFFC7EA8 FF FF FF FF FF FF FF FF     
   6270 FFFC7EB0 FF FF FF FF FF FF FF FF     
   6271 FFFC7EB8 FF FF FF FF FF FF FF FF     
   6272 FFFC7EC0 FF FF FF FF FF FF FF FF     
   6273 FFFC7EC8 FF FF FF FF FF FF FF FF     
   6274 FFFC7ED0 FF FF FF FF FF FF FF FF     
   6275 FFFC7ED8 FF FF FF FF FF FF FF FF     
   6276 FFFC7EE0 FF FF FF FF FF FF FF FF     
   6277 FFFC7EE8 FF FF FF FF FF FF FF FF     
   6278 FFFC7EF0 FF FF FF FF FF FF FF FF     
   6279 FFFC7EF8 FF FF FF FF FF FF FF FF     
   6280 FFFC7F00 FF FF FF FF FF FF FF FF     
   6281 FFFC7F08 FF FF FF FF FF FF FF FF     
   6282 FFFC7F10 FF FF FF FF FF FF FF FF     
   6283 FFFC7F18 FF FF FF FF FF FF FF FF     
   6284 FFFC7F20 FF FF FF FF FF FF FF FF     
   6285 FFFC7F28 FF FF FF FF FF FF FF FF     
   6286 FFFC7F30 FF FF FF FF FF FF FF FF     
   6287 FFFC7F38 FF FF FF FF FF FF FF FF     
   6288 FFFC7F40 FF FF FF FF FF FF FF FF     
   6289 FFFC7F48 FF FF FF FF FF FF FF FF     
   6290 FFFC7F50 FF FF FF FF FF FF FF FF     
   6291 FFFC7F58 FF FF FF FF FF FF FF FF     
   6292 FFFC7F60 FF FF FF FF FF FF FF FF     
   6293 FFFC7F68 FF FF FF FF FF FF FF FF     
   6294 FFFC7F70 FF FF FF FF FF FF FF FF     
   6295 FFFC7F78 FF FF FF FF FF FF FF FF     
   6296 FFFC7F80 FF FF FF FF FF FF FF FF     
   6297 FFFC7F88 FF FF FF FF FF FF FF FF     
   6298 FFFC7F90 FF FF FF FF FF FF FF FF     
   6299 FFFC7F98 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 52
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6300 FFFC7FA0 FF FF FF FF FF FF FF FF     
   6301 FFFC7FA8 FF FF FF FF FF FF FF FF     
   6302 FFFC7FB0 FF FF FF FF FF FF FF FF     
   6303 FFFC7FB8 FF FF FF FF FF FF FF FF     
   6304 FFFC7FC0 FF FF FF FF FF FF FF FF     
   6305 FFFC7FC8 FF FF FF FF FF FF FF FF     
   6306 FFFC7FD0 FF FF FF FF FF FF FF FF     
   6307 FFFC7FD8 FF FF FF FF FF FF FF FF     
   6308 FFFC7FE0 FF FF FF FF FF FF FF FF     
   6309 FFFC7FE8 FF FF FF FF FF FF FF FF     
   6310 FFFC7FF0 FF FF FF FF FF FF FF FF     
   6311 FFFC7FF8 FF FF FF FF FF FF FF FF     
   6312 FFFC8000 FF FF FF FF FF FF FF FF     
   6313 FFFC8008 FF FF FF FF FF FF FF FF     
   6314 FFFC8010 FF FF FF FF FF FF FF FF     
   6315 FFFC8018 FF FF FF FF FF FF FF FF     
   6316 FFFC8020 FF FF FF FF FF FF FF FF     
   6317 FFFC8028 FF FF FF FF FF FF FF FF     
   6318 FFFC8030 FF FF FF FF FF FF FF FF     
   6319 FFFC8038 FF FF FF FF FF FF FF FF     
   6320 FFFC8040 FF FF FF FF FF FF FF FF     
   6321 FFFC8048 FF FF FF FF FF FF FF FF     
   6322 FFFC8050 FF FF FF FF FF FF FF FF     
   6323 FFFC8058 FF FF FF FF FF FF FF FF     
   6324 FFFC8060 FF FF FF FF FF FF FF FF     
   6325 FFFC8068 FF FF FF FF FF FF FF FF     
   6326 FFFC8070 FF FF FF FF FF FF FF FF     
   6327 FFFC8078 FF FF FF FF FF FF FF FF     
   6328 FFFC8080 FF FF FF FF FF FF FF FF     
   6329 FFFC8088 FF FF FF FF FF FF FF FF     
   6330 FFFC8090 FF FF FF FF FF FF FF FF     
   6331 FFFC8098 FF FF FF FF FF FF FF FF     
   6332 FFFC80A0 FF FF FF FF FF FF FF FF     
   6333 FFFC80A8 FF FF FF FF FF FF FF FF     
   6334 FFFC80B0 FF FF FF FF FF FF FF FF     
   6335 FFFC80B8 FF FF FF FF FF FF FF FF     
   6336 FFFC80C0 FF FF FF FF FF FF FF FF     
   6337 FFFC80C8 FF FF FF FF FF FF FF FF     
   6338 FFFC80D0 FF FF FF FF FF FF FF FF     
   6339 FFFC80D8 FF FF FF FF FF FF FF FF     
   6340 FFFC80E0 FF FF FF FF FF FF FF FF     
   6341 FFFC80E8 FF FF FF FF FF FF FF FF     
   6342 FFFC80F0 FF FF FF FF FF FF FF FF     
   6343 FFFC80F8 FF FF FF FF FF FF FF FF     
   6344 FFFC8100 FF FF FF FF FF FF FF FF     
   6345 FFFC8108 FF FF FF FF FF FF FF FF     
   6346 FFFC8110 FF FF FF FF FF FF FF FF     
   6347 FFFC8118 FF FF FF FF FF FF FF FF     
   6348 FFFC8120 FF FF FF FF FF FF FF FF     
   6349 FFFC8128 FF FF FF FF FF FF FF FF     
   6350 FFFC8130 FF FF FF FF FF FF FF FF     
   6351 FFFC8138 FF FF FF FF FF FF FF FF     
   6352 FFFC8140 FF FF FF FF FF FF FF FF     
   6353 FFFC8148 FF FF FF FF FF FF FF FF     
   6354 FFFC8150 FF FF FF FF FF FF FF FF     
   6355 FFFC8158 FF FF FF FF FF FF FF FF     
   6356 FFFC8160 FF FF FF FF FF FF FF FF     
   6357 FFFC8168 FF FF FF FF FF FF FF FF     
   6358 FFFC8170 FF FF FF FF FF FF FF FF     
   6359 FFFC8178 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 53
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6360 FFFC8180 FF FF FF FF FF FF FF FF     
   6361 FFFC8188 FF FF FF FF FF FF FF FF     
   6362 FFFC8190 FF FF FF FF FF FF FF FF     
   6363 FFFC8198 FF FF FF FF FF FF FF FF     
   6364 FFFC81A0 FF FF FF FF FF FF FF FF     
   6365 FFFC81A8 FF FF FF FF FF FF FF FF     
   6366 FFFC81B0 FF FF FF FF FF FF FF FF     
   6367 FFFC81B8 FF FF FF FF FF FF FF FF     
   6368 FFFC81C0 FF FF FF FF FF FF FF FF     
   6369 FFFC81C8 FF FF FF FF FF FF FF FF     
   6370 FFFC81D0 FF FF FF FF FF FF FF FF     
   6371 FFFC81D8 FF FF FF FF FF FF FF FF     
   6372 FFFC81E0 FF FF FF FF FF FF FF FF     
   6373 FFFC81E8 FF FF FF FF FF FF FF FF     
   6374 FFFC81F0 FF FF FF FF FF FF FF FF     
   6375 FFFC81F8 FF FF FF FF FF FF FF FF     
   6376 FFFC8200 FF FF FF FF FF FF FF FF     
   6377 FFFC8208 FF FF FF FF FF FF FF FF     
   6378 FFFC8210 FF FF FF FF FF FF FF FF     
   6379 FFFC8218 FF FF FF FF FF FF FF FF     
   6380 FFFC8220 FF FF FF FF FF FF FF FF     
   6381 FFFC8228 FF FF FF FF FF FF FF FF     
   6382 FFFC8230 FF FF FF FF FF FF FF FF     
   6383 FFFC8238 FF FF FF FF FF FF FF FF     
   6384 FFFC8240 FF FF FF FF FF FF FF FF     
   6385 FFFC8248 FF FF FF FF FF FF FF FF     
   6386 FFFC8250 FF FF FF FF FF FF FF FF     
   6387 FFFC8258 FF FF FF FF FF FF FF FF     
   6388 FFFC8260 FF FF FF FF FF FF FF FF     
   6389 FFFC8268 FF FF FF FF FF FF FF FF     
   6390 FFFC8270 FF FF FF FF FF FF FF FF     
   6391 FFFC8278 FF FF FF FF FF FF FF FF     
   6392 FFFC8280 FF FF FF FF FF FF FF FF     
   6393 FFFC8288 FF FF FF FF FF FF FF FF     
   6394 FFFC8290 FF FF FF FF FF FF FF FF     
   6395 FFFC8298 FF FF FF FF FF FF FF FF     
   6396 FFFC82A0 FF FF FF FF FF FF FF FF     
   6397 FFFC82A8 FF FF FF FF FF FF FF FF     
   6398 FFFC82B0 FF FF FF FF FF FF FF FF     
   6399 FFFC82B8 FF FF FF FF FF FF FF FF     
   6400 FFFC82C0 FF FF FF FF FF FF FF FF     
   6401 FFFC82C8 FF FF FF FF FF FF FF FF     
   6402 FFFC82D0 FF FF FF FF FF FF FF FF     
   6403 FFFC82D8 FF FF FF FF FF FF FF FF     
   6404 FFFC82E0 FF FF FF FF FF FF FF FF     
   6405 FFFC82E8 FF FF FF FF FF FF FF FF     
   6406 FFFC82F0 FF FF FF FF FF FF FF FF     
   6407 FFFC82F8 FF FF FF FF FF FF FF FF     
   6408 FFFC8300 FF FF FF FF FF FF FF FF     
   6409 FFFC8308 FF FF FF FF FF FF FF FF     
   6410 FFFC8310 FF FF FF FF FF FF FF FF     
   6411 FFFC8318 FF FF FF FF FF FF FF FF     
   6412 FFFC8320 FF FF FF FF FF FF FF FF     
   6413 FFFC8328 FF FF FF FF FF FF FF FF     
   6414 FFFC8330 FF FF FF FF FF FF FF FF     
   6415 FFFC8338 FF FF FF FF FF FF FF FF     
   6416 FFFC8340 FF FF FF FF FF FF FF FF     
   6417 FFFC8348 FF FF FF FF FF FF FF FF     
   6418 FFFC8350 FF FF FF FF FF FF FF FF     
   6419 FFFC8358 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 54
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6420 FFFC8360 FF FF FF FF FF FF FF FF     
   6421 FFFC8368 FF FF FF FF FF FF FF FF     
   6422 FFFC8370 FF FF FF FF FF FF FF FF     
   6423 FFFC8378 FF FF FF FF FF FF FF FF     
   6424 FFFC8380 FF FF FF FF FF FF FF FF     
   6425 FFFC8388 FF FF FF FF FF FF FF FF     
   6426 FFFC8390 FF FF FF FF FF FF FF FF     
   6427 FFFC8398 FF FF FF FF FF FF FF FF     
   6428 FFFC83A0 FF FF FF FF FF FF FF FF     
   6429 FFFC83A8 FF FF FF FF FF FF FF FF     
   6430 FFFC83B0 FF FF FF FF FF FF FF FF     
   6431 FFFC83B8 FF FF FF FF FF FF FF FF     
   6432 FFFC83C0 FF FF FF FF FF FF FF FF     
   6433 FFFC83C8 FF FF FF FF FF FF FF FF     
   6434 FFFC83D0 FF FF FF FF FF FF FF FF     
   6435 FFFC83D8 FF FF FF FF FF FF FF FF     
   6436 FFFC83E0 FF FF FF FF FF FF FF FF     
   6437 FFFC83E8 FF FF FF FF FF FF FF FF     
   6438 FFFC83F0 FF FF FF FF FF FF FF FF     
   6439 FFFC83F8 FF FF FF FF FF FF FF FF     
   6440 FFFC8400 FF FF FF FF FF FF FF FF     
   6441 FFFC8408 FF FF FF FF FF FF FF FF     
   6442 FFFC8410 FF FF FF FF FF FF FF FF     
   6443 FFFC8418 FF FF FF FF FF FF FF FF     
   6444 FFFC8420 FF FF FF FF FF FF FF FF     
   6445 FFFC8428 FF FF FF FF FF FF FF FF     
   6446 FFFC8430 FF FF FF FF FF FF FF FF     
   6447 FFFC8438 FF FF FF FF FF FF FF FF     
   6448 FFFC8440 FF FF FF FF FF FF FF FF     
   6449 FFFC8448 FF FF FF FF FF FF FF FF     
   6450 FFFC8450 FF FF FF FF FF FF FF FF     
   6451 FFFC8458 FF FF FF FF FF FF FF FF     
   6452 FFFC8460 FF FF FF FF FF FF FF FF     
   6453 FFFC8468 FF FF FF FF FF FF FF FF     
   6454 FFFC8470 FF FF FF FF FF FF FF FF     
   6455 FFFC8478 FF FF FF FF FF FF FF FF     
   6456 FFFC8480 FF FF FF FF FF FF FF FF     
   6457 FFFC8488 FF FF FF FF FF FF FF FF     
   6458 FFFC8490 FF FF FF FF FF FF FF FF     
   6459 FFFC8498 FF FF FF FF FF FF FF FF     
   6460 FFFC84A0 FF FF FF FF FF FF FF FF     
   6461 FFFC84A8 FF FF FF FF FF FF FF FF     
   6462 FFFC84B0 FF FF FF FF FF FF FF FF     
   6463 FFFC84B8 FF FF FF FF FF FF FF FF     
   6464 FFFC84C0 FF FF FF FF FF FF FF FF     
   6465 FFFC84C8 FF FF FF FF FF FF FF FF     
   6466 FFFC84D0 FF FF FF FF FF FF FF FF     
   6467 FFFC84D8 FF FF FF FF FF FF FF FF     
   6468 FFFC84E0 FF FF FF FF FF FF FF FF     
   6469 FFFC84E8 FF FF FF FF FF FF FF FF     
   6470 FFFC84F0 FF FF FF FF FF FF FF FF     
   6471 FFFC84F8 FF FF FF FF FF FF FF FF     
   6472 FFFC8500 FF FF FF FF FF FF FF FF     
   6473 FFFC8508 FF FF FF FF FF FF FF FF     
   6474 FFFC8510 FF FF FF FF FF FF FF FF     
   6475 FFFC8518 FF FF FF FF FF FF FF FF     
   6476 FFFC8520 FF FF FF FF FF FF FF FF     
   6477 FFFC8528 FF FF FF FF FF FF FF FF     
   6478 FFFC8530 FF FF FF FF FF FF FF FF     
   6479 FFFC8538 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 55
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6480 FFFC8540 FF FF FF FF FF FF FF FF     
   6481 FFFC8548 FF FF FF FF FF FF FF FF     
   6482 FFFC8550 FF FF FF FF FF FF FF FF     
   6483 FFFC8558 FF FF FF FF FF FF FF FF     
   6484 FFFC8560 FF FF FF FF FF FF FF FF     
   6485 FFFC8568 FF FF FF FF FF FF FF FF     
   6486 FFFC8570 FF FF FF FF FF FF FF FF     
   6487 FFFC8578 FF FF FF FF FF FF FF FF     
   6488 FFFC8580 FF FF FF FF FF FF FF FF     
   6489 FFFC8588 FF FF FF FF FF FF FF FF     
   6490 FFFC8590 FF FF FF FF FF FF FF FF     
   6491 FFFC8598 FF FF FF FF FF FF FF FF     
   6492 FFFC85A0 FF FF FF FF FF FF FF FF     
   6493 FFFC85A8 FF FF FF FF FF FF FF FF     
   6494 FFFC85B0 FF FF FF FF FF FF FF FF     
   6495 FFFC85B8 FF FF FF FF FF FF FF FF     
   6496 FFFC85C0 FF FF FF FF FF FF FF FF     
   6497 FFFC85C8 FF FF FF FF FF FF FF FF     
   6498 FFFC85D0 FF FF FF FF FF FF FF FF     
   6499 FFFC85D8 FF FF FF FF FF FF FF FF     
   6500 FFFC85E0 FF FF FF FF FF FF FF FF     
   6501 FFFC85E8 FF FF FF FF FF FF FF FF     
   6502 FFFC85F0 FF FF FF FF FF FF FF FF     
   6503 FFFC85F8 FF FF FF FF FF FF FF FF     
   6504 FFFC8600 FF FF FF FF FF FF FF FF     
   6505 FFFC8608 FF FF FF FF FF FF FF FF     
   6506 FFFC8610 FF FF FF FF FF FF FF FF     
   6507 FFFC8618 FF FF FF FF FF FF FF FF     
   6508 FFFC8620 FF FF FF FF FF FF FF FF     
   6509 FFFC8628 FF FF FF FF FF FF FF FF     
   6510 FFFC8630 FF FF FF FF FF FF FF FF     
   6511 FFFC8638 FF FF FF FF FF FF FF FF     
   6512 FFFC8640 FF FF FF FF FF FF FF FF     
   6513 FFFC8648 FF FF FF FF FF FF FF FF     
   6514 FFFC8650 FF FF FF FF FF FF FF FF     
   6515 FFFC8658 FF FF FF FF FF FF FF FF     
   6516 FFFC8660 FF FF FF FF FF FF FF FF     
   6517 FFFC8668 FF FF FF FF FF FF FF FF     
   6518 FFFC8670 FF FF FF FF FF FF FF FF     
   6519 FFFC8678 FF FF FF FF FF FF FF FF     
   6520 FFFC8680 FF FF FF FF FF FF FF FF     
   6521 FFFC8688 FF FF FF FF FF FF FF FF     
   6522 FFFC8690 FF FF FF FF FF FF FF FF     
   6523 FFFC8698 FF FF FF FF FF FF FF FF     
   6524 FFFC86A0 FF FF FF FF FF FF FF FF     
   6525 FFFC86A8 FF FF FF FF FF FF FF FF     
   6526 FFFC86B0 FF FF FF FF FF FF FF FF     
   6527 FFFC86B8 FF FF FF FF FF FF FF FF     
   6528 FFFC86C0 FF FF FF FF FF FF FF FF     
   6529 FFFC86C8 FF FF FF FF FF FF FF FF     
   6530 FFFC86D0 FF FF FF FF FF FF FF FF     
   6531 FFFC86D8 FF FF FF FF FF FF FF FF     
   6532 FFFC86E0 FF FF FF FF FF FF FF FF     
   6533 FFFC86E8 FF FF FF FF FF FF FF FF     
   6534 FFFC86F0 FF FF FF FF FF FF FF FF     
   6535 FFFC86F8 FF FF FF FF FF FF FF FF     
   6536 FFFC8700 FF FF FF FF FF FF FF FF     
   6537 FFFC8708 FF FF FF FF FF FF FF FF     
   6538 FFFC8710 FF FF FF FF FF FF FF FF     
   6539 FFFC8718 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 56
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6540 FFFC8720 FF FF FF FF FF FF FF FF     
   6541 FFFC8728 FF FF FF FF FF FF FF FF     
   6542 FFFC8730 FF FF FF FF FF FF FF FF     
   6543 FFFC8738 FF FF FF FF FF FF FF FF     
   6544 FFFC8740 FF FF FF FF FF FF FF FF     
   6545 FFFC8748 FF FF FF FF FF FF FF FF     
   6546 FFFC8750 FF FF FF FF FF FF FF FF     
   6547 FFFC8758 FF FF FF FF FF FF FF FF     
   6548 FFFC8760 FF FF FF FF FF FF FF FF     
   6549 FFFC8768 FF FF FF FF FF FF FF FF     
   6550 FFFC8770 FF FF FF FF FF FF FF FF     
   6551 FFFC8778 FF FF FF FF FF FF FF FF     
   6552 FFFC8780 FF FF FF FF FF FF FF FF     
   6553 FFFC8788 FF FF FF FF FF FF FF FF     
   6554 FFFC8790 FF FF FF FF FF FF FF FF     
   6555 FFFC8798 FF FF FF FF FF FF FF FF     
   6556 FFFC87A0 FF FF FF FF FF FF FF FF     
   6557 FFFC87A8 FF FF FF FF FF FF FF FF     
   6558 FFFC87B0 FF FF FF FF FF FF FF FF     
   6559 FFFC87B8 FF FF FF FF FF FF FF FF     
   6560 FFFC87C0 FF FF FF FF FF FF FF FF     
   6561 FFFC87C8 FF FF FF FF FF FF FF FF     
   6562 FFFC87D0 FF FF FF FF FF FF FF FF     
   6563 FFFC87D8 FF FF FF FF FF FF FF FF     
   6564 FFFC87E0 FF FF FF FF FF FF FF FF     
   6565 FFFC87E8 FF FF FF FF FF FF FF FF     
   6566 FFFC87F0 FF FF FF FF FF FF FF FF     
   6567 FFFC87F8 FF FF FF FF FF FF FF FF     
   6568 FFFC8800 FF FF FF FF FF FF FF FF     
   6569 FFFC8808 FF FF FF FF FF FF FF FF     
   6570 FFFC8810 FF FF FF FF FF FF FF FF     
   6571 FFFC8818 FF FF FF FF FF FF FF FF     
   6572 FFFC8820 FF FF FF FF FF FF FF FF     
   6573 FFFC8828 FF FF FF FF FF FF FF FF     
   6574 FFFC8830 FF FF FF FF FF FF FF FF     
   6575 FFFC8838 FF FF FF FF FF FF FF FF     
   6576 FFFC8840 FF FF FF FF FF FF FF FF     
   6577 FFFC8848 FF FF FF FF FF FF FF FF     
   6578 FFFC8850 FF FF FF FF FF FF FF FF     
   6579 FFFC8858 FF FF FF FF FF FF FF FF     
   6580 FFFC8860 FF FF FF FF FF FF FF FF     
   6581 FFFC8868 FF FF FF FF FF FF FF FF     
   6582 FFFC8870 FF FF FF FF FF FF FF FF     
   6583 FFFC8878 FF FF FF FF FF FF FF FF     
   6584 FFFC8880 FF FF FF FF FF FF FF FF     
   6585 FFFC8888 FF FF FF FF FF FF FF FF     
   6586 FFFC8890 FF FF FF FF FF FF FF FF     
   6587 FFFC8898 FF FF FF FF FF FF FF FF     
   6588 FFFC88A0 FF FF FF FF FF FF FF FF     
   6589 FFFC88A8 FF FF FF FF FF FF FF FF     
   6590 FFFC88B0 FF FF FF FF FF FF FF FF     
   6591 FFFC88B8 FF FF FF FF FF FF FF FF     
   6592 FFFC88C0 FF FF FF FF FF FF FF FF     
   6593 FFFC88C8 FF FF FF FF FF FF FF FF     
   6594 FFFC88D0 FF FF FF FF FF FF FF FF     
   6595 FFFC88D8 FF FF FF FF FF FF FF FF     
   6596 FFFC88E0 FF FF FF FF FF FF FF FF     
   6597 FFFC88E8 FF FF FF FF FF FF FF FF     
   6598 FFFC88F0 FF FF FF FF FF FF FF FF     
   6599 FFFC88F8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 57
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6600 FFFC8900 FF FF FF FF FF FF FF FF     
   6601 FFFC8908 FF FF FF FF FF FF FF FF     
   6602 FFFC8910 FF FF FF FF FF FF FF FF     
   6603 FFFC8918 FF FF FF FF FF FF FF FF     
   6604 FFFC8920 FF FF FF FF FF FF FF FF     
   6605 FFFC8928 FF FF FF FF FF FF FF FF     
   6606 FFFC8930 FF FF FF FF FF FF FF FF     
   6607 FFFC8938 FF FF FF FF FF FF FF FF     
   6608 FFFC8940 FF FF FF FF FF FF FF FF     
   6609 FFFC8948 FF FF FF FF FF FF FF FF     
   6610 FFFC8950 FF FF FF FF FF FF FF FF     
   6611 FFFC8958 FF FF FF FF FF FF FF FF     
   6612 FFFC8960 FF FF FF FF FF FF FF FF     
   6613 FFFC8968 FF FF FF FF FF FF FF FF     
   6614 FFFC8970 FF FF FF FF FF FF FF FF     
   6615 FFFC8978 FF FF FF FF FF FF FF FF     
   6616 FFFC8980 FF FF FF FF FF FF FF FF     
   6617 FFFC8988 FF FF FF FF FF FF FF FF     
   6618 FFFC8990 FF FF FF FF FF FF FF FF     
   6619 FFFC8998 FF FF FF FF FF FF FF FF     
   6620 FFFC89A0 FF FF FF FF FF FF FF FF     
   6621 FFFC89A8 FF FF FF FF FF FF FF FF     
   6622 FFFC89B0 FF FF FF FF FF FF FF FF     
   6623 FFFC89B8 FF FF FF FF FF FF FF FF     
   6624 FFFC89C0 FF FF FF FF FF FF FF FF     
   6625 FFFC89C8 FF FF FF FF FF FF FF FF     
   6626 FFFC89D0 FF FF FF FF FF FF FF FF     
   6627 FFFC89D8 FF FF FF FF FF FF FF FF     
   6628 FFFC89E0 FF FF FF FF FF FF FF FF     
   6629 FFFC89E8 FF FF FF FF FF FF FF FF     
   6630 FFFC89F0 FF FF FF FF FF FF FF FF     
   6631 FFFC89F8 FF FF FF FF FF FF FF FF     
   6632 FFFC8A00 FF FF FF FF FF FF FF FF     
   6633 FFFC8A08 FF FF FF FF FF FF FF FF     
   6634 FFFC8A10 FF FF FF FF FF FF FF FF     
   6635 FFFC8A18 FF FF FF FF FF FF FF FF     
   6636 FFFC8A20 FF FF FF FF FF FF FF FF     
   6637 FFFC8A28 FF FF FF FF FF FF FF FF     
   6638 FFFC8A30 FF FF FF FF FF FF FF FF     
   6639 FFFC8A38 FF FF FF FF FF FF FF FF     
   6640 FFFC8A40 FF FF FF FF FF FF FF FF     
   6641 FFFC8A48 FF FF FF FF FF FF FF FF     
   6642 FFFC8A50 FF FF FF FF FF FF FF FF     
   6643 FFFC8A58 FF FF FF FF FF FF FF FF     
   6644 FFFC8A60 FF FF FF FF FF FF FF FF     
   6645 FFFC8A68 FF FF FF FF FF FF FF FF     
   6646 FFFC8A70 FF FF FF FF FF FF FF FF     
   6647 FFFC8A78 FF FF FF FF FF FF FF FF     
   6648 FFFC8A80 FF FF FF FF FF FF FF FF     
   6649 FFFC8A88 FF FF FF FF FF FF FF FF     
   6650 FFFC8A90 FF FF FF FF FF FF FF FF     
   6651 FFFC8A98 FF FF FF FF FF FF FF FF     
   6652 FFFC8AA0 FF FF FF FF FF FF FF FF     
   6653 FFFC8AA8 FF FF FF FF FF FF FF FF     
   6654 FFFC8AB0 FF FF FF FF FF FF FF FF     
   6655 FFFC8AB8 FF FF FF FF FF FF FF FF     
   6656 FFFC8AC0 FF FF FF FF FF FF FF FF     
   6657 FFFC8AC8 FF FF FF FF FF FF FF FF     
   6658 FFFC8AD0 FF FF FF FF FF FF FF FF     
   6659 FFFC8AD8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 58
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6660 FFFC8AE0 FF FF FF FF FF FF FF FF     
   6661 FFFC8AE8 FF FF FF FF FF FF FF FF     
   6662 FFFC8AF0 FF FF FF FF FF FF FF FF     
   6663 FFFC8AF8 FF FF FF FF FF FF FF FF     
   6664 FFFC8B00 FF FF FF FF FF FF FF FF     
   6665 FFFC8B08 FF FF FF FF FF FF FF FF     
   6666 FFFC8B10 FF FF FF FF FF FF FF FF     
   6667 FFFC8B18 FF FF FF FF FF FF FF FF     
   6668 FFFC8B20 FF FF FF FF FF FF FF FF     
   6669 FFFC8B28 FF FF FF FF FF FF FF FF     
   6670 FFFC8B30 FF FF FF FF FF FF FF FF     
   6671 FFFC8B38 FF FF FF FF FF FF FF FF     
   6672 FFFC8B40 FF FF FF FF FF FF FF FF     
   6673 FFFC8B48 FF FF FF FF FF FF FF FF     
   6674 FFFC8B50 FF FF FF FF FF FF FF FF     
   6675 FFFC8B58 FF FF FF FF FF FF FF FF     
   6676 FFFC8B60 FF FF FF FF FF FF FF FF     
   6677 FFFC8B68 FF FF FF FF FF FF FF FF     
   6678 FFFC8B70 FF FF FF FF FF FF FF FF     
   6679 FFFC8B78 FF FF FF FF FF FF FF FF     
   6680 FFFC8B80 FF FF FF FF FF FF FF FF     
   6681 FFFC8B88 FF FF FF FF FF FF FF FF     
   6682 FFFC8B90 FF FF FF FF FF FF FF FF     
   6683 FFFC8B98 FF FF FF FF FF FF FF FF     
   6684 FFFC8BA0 FF FF FF FF FF FF FF FF     
   6685 FFFC8BA8 FF FF FF FF FF FF FF FF     
   6686 FFFC8BB0 FF FF FF FF FF FF FF FF     
   6687 FFFC8BB8 FF FF FF FF FF FF FF FF     
   6688 FFFC8BC0 FF FF FF FF FF FF FF FF     
   6689 FFFC8BC8 FF FF FF FF FF FF FF FF     
   6690 FFFC8BD0 FF FF FF FF FF FF FF FF     
   6691 FFFC8BD8 FF FF FF FF FF FF FF FF     
   6692 FFFC8BE0 FF FF FF FF FF FF FF FF     
   6693 FFFC8BE8 FF FF FF FF FF FF FF FF     
   6694 FFFC8BF0 FF FF FF FF FF FF FF FF     
   6695 FFFC8BF8 FF FF FF FF FF FF FF FF     
   6696 FFFC8C00 FF FF FF FF FF FF FF FF     
   6697 FFFC8C08 FF FF FF FF FF FF FF FF     
   6698 FFFC8C10 FF FF FF FF FF FF FF FF     
   6699 FFFC8C18 FF FF FF FF FF FF FF FF     
   6700 FFFC8C20 FF FF FF FF FF FF FF FF     
   6701 FFFC8C28 FF FF FF FF FF FF FF FF     
   6702 FFFC8C30 FF FF FF FF FF FF FF FF     
   6703 FFFC8C38 FF FF FF FF FF FF FF FF     
   6704 FFFC8C40 FF FF FF FF FF FF FF FF     
   6705 FFFC8C48 FF FF FF FF FF FF FF FF     
   6706 FFFC8C50 FF FF FF FF FF FF FF FF     
   6707 FFFC8C58 FF FF FF FF FF FF FF FF     
   6708 FFFC8C60 FF FF FF FF FF FF FF FF     
   6709 FFFC8C68 FF FF FF FF FF FF FF FF     
   6710 FFFC8C70 FF FF FF FF FF FF FF FF     
   6711 FFFC8C78 FF FF FF FF FF FF FF FF     
   6712 FFFC8C80 FF FF FF FF FF FF FF FF     
   6713 FFFC8C88 FF FF FF FF FF FF FF FF     
   6714 FFFC8C90 FF FF FF FF FF FF FF FF     
   6715 FFFC8C98 FF FF FF FF FF FF FF FF     
   6716 FFFC8CA0 FF FF FF FF FF FF FF FF     
   6717 FFFC8CA8 FF FF FF FF FF FF FF FF     
   6718 FFFC8CB0 FF FF FF FF FF FF FF FF     
   6719 FFFC8CB8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 59
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6720 FFFC8CC0 FF FF FF FF FF FF FF FF     
   6721 FFFC8CC8 FF FF FF FF FF FF FF FF     
   6722 FFFC8CD0 FF FF FF FF FF FF FF FF     
   6723 FFFC8CD8 FF FF FF FF FF FF FF FF     
   6724 FFFC8CE0 FF FF FF FF FF FF FF FF     
   6725 FFFC8CE8 FF FF FF FF FF FF FF FF     
   6726 FFFC8CF0 FF FF FF FF FF FF FF FF     
   6727 FFFC8CF8 FF FF FF FF FF FF FF FF     
   6728 FFFC8D00 FF FF FF FF FF FF FF FF     
   6729 FFFC8D08 FF FF FF FF FF FF FF FF     
   6730 FFFC8D10 FF FF FF FF FF FF FF FF     
   6731 FFFC8D18 FF FF FF FF FF FF FF FF     
   6732 FFFC8D20 FF FF FF FF FF FF FF FF     
   6733 FFFC8D28 FF FF FF FF FF FF FF FF     
   6734 FFFC8D30 FF FF FF FF FF FF FF FF     
   6735 FFFC8D38 FF FF FF FF FF FF FF FF     
   6736 FFFC8D40 FF FF FF FF FF FF FF FF     
   6737 FFFC8D48 FF FF FF FF FF FF FF FF     
   6738 FFFC8D50 FF FF FF FF FF FF FF FF     
   6739 FFFC8D58 FF FF FF FF FF FF FF FF     
   6740 FFFC8D60 FF FF FF FF FF FF FF FF     
   6741 FFFC8D68 FF FF FF FF FF FF FF FF     
   6742 FFFC8D70 FF FF FF FF FF FF FF FF     
   6743 FFFC8D78 FF FF FF FF FF FF FF FF     
   6744 FFFC8D80 FF FF FF FF FF FF FF FF     
   6745 FFFC8D88 FF FF FF FF FF FF FF FF     
   6746 FFFC8D90 FF FF FF FF FF FF FF FF     
   6747 FFFC8D98 FF FF FF FF FF FF FF FF     
   6748 FFFC8DA0 FF FF FF FF FF FF FF FF     
   6749 FFFC8DA8 FF FF FF FF FF FF FF FF     
   6750 FFFC8DB0 FF FF FF FF FF FF FF FF     
   6751 FFFC8DB8 FF FF FF FF FF FF FF FF     
   6752 FFFC8DC0 FF FF FF FF FF FF FF FF     
   6753 FFFC8DC8 FF FF FF FF FF FF FF FF     
   6754 FFFC8DD0 FF FF FF FF FF FF FF FF     
   6755 FFFC8DD8 FF FF FF FF FF FF FF FF     
   6756 FFFC8DE0 FF FF FF FF FF FF FF FF     
   6757 FFFC8DE8 FF FF FF FF FF FF FF FF     
   6758 FFFC8DF0 FF FF FF FF FF FF FF FF     
   6759 FFFC8DF8 FF FF FF FF FF FF FF FF     
   6760 FFFC8E00 FF FF FF FF FF FF FF FF     
   6761 FFFC8E08 FF FF FF FF FF FF FF FF     
   6762 FFFC8E10 FF FF FF FF FF FF FF FF     
   6763 FFFC8E18 FF FF FF FF FF FF FF FF     
   6764 FFFC8E20 FF FF FF FF FF FF FF FF     
   6765 FFFC8E28 FF FF FF FF FF FF FF FF     
   6766 FFFC8E30 FF FF FF FF FF FF FF FF     
   6767 FFFC8E38 FF FF FF FF FF FF FF FF     
   6768 FFFC8E40 FF FF FF FF FF FF FF FF     
   6769 FFFC8E48 FF FF FF FF FF FF FF FF     
   6770 FFFC8E50 FF FF FF FF FF FF FF FF     
   6771 FFFC8E58 FF FF FF FF FF FF FF FF     
   6772 FFFC8E60 FF FF FF FF FF FF FF FF     
   6773 FFFC8E68 FF FF FF FF FF FF FF FF     
   6774 FFFC8E70 FF FF FF FF FF FF FF FF     
   6775 FFFC8E78 FF FF FF FF FF FF FF FF     
   6776 FFFC8E80 FF FF FF FF FF FF FF FF     
   6777 FFFC8E88 FF FF FF FF FF FF FF FF     
   6778 FFFC8E90 FF FF FF FF FF FF FF FF     
   6779 FFFC8E98 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 60
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6780 FFFC8EA0 FF FF FF FF FF FF FF FF     
   6781 FFFC8EA8 FF FF FF FF FF FF FF FF     
   6782 FFFC8EB0 FF FF FF FF FF FF FF FF     
   6783 FFFC8EB8 FF FF FF FF FF FF FF FF     
   6784 FFFC8EC0 FF FF FF FF FF FF FF FF     
   6785 FFFC8EC8 FF FF FF FF FF FF FF FF     
   6786 FFFC8ED0 FF FF FF FF FF FF FF FF     
   6787 FFFC8ED8 FF FF FF FF FF FF FF FF     
   6788 FFFC8EE0 FF FF FF FF FF FF FF FF     
   6789 FFFC8EE8 FF FF FF FF FF FF FF FF     
   6790 FFFC8EF0 FF FF FF FF FF FF FF FF     
   6791 FFFC8EF8 FF FF FF FF FF FF FF FF     
   6792 FFFC8F00 FF FF FF FF FF FF FF FF     
   6793 FFFC8F08 FF FF FF FF FF FF FF FF     
   6794 FFFC8F10 FF FF FF FF FF FF FF FF     
   6795 FFFC8F18 FF FF FF FF FF FF FF FF     
   6796 FFFC8F20 FF FF FF FF FF FF FF FF     
   6797 FFFC8F28 FF FF FF FF FF FF FF FF     
   6798 FFFC8F30 FF FF FF FF FF FF FF FF     
   6799 FFFC8F38 FF FF FF FF FF FF FF FF     
   6800 FFFC8F40 FF FF FF FF FF FF FF FF     
   6801 FFFC8F48 FF FF FF FF FF FF FF FF     
   6802 FFFC8F50 FF FF FF FF FF FF FF FF     
   6803 FFFC8F58 FF FF FF FF FF FF FF FF     
   6804 FFFC8F60 FF FF FF FF FF FF FF FF     
   6805 FFFC8F68 FF FF FF FF FF FF FF FF     
   6806 FFFC8F70 FF FF FF FF FF FF FF FF     
   6807 FFFC8F78 FF FF FF FF FF FF FF FF     
   6808 FFFC8F80 FF FF FF FF FF FF FF FF     
   6809 FFFC8F88 FF FF FF FF FF FF FF FF     
   6810 FFFC8F90 FF FF FF FF FF FF FF FF     
   6811 FFFC8F98 FF FF FF FF FF FF FF FF     
   6812 FFFC8FA0 FF FF FF FF FF FF FF FF     
   6813 FFFC8FA8 FF FF FF FF FF FF FF FF     
   6814 FFFC8FB0 FF FF FF FF FF FF FF FF     
   6815 FFFC8FB8 FF FF FF FF FF FF FF FF     
   6816 FFFC8FC0 FF FF FF FF FF FF FF FF     
   6817 FFFC8FC8 FF FF FF FF FF FF FF FF     
   6818 FFFC8FD0 FF FF FF FF FF FF FF FF     
   6819 FFFC8FD8 FF FF FF FF FF FF FF FF     
   6820 FFFC8FE0 FF FF FF FF FF FF FF FF     
   6821 FFFC8FE8 FF FF FF FF FF FF FF FF     
   6822 FFFC8FF0 FF FF FF FF FF FF FF FF     
   6823 FFFC8FF8 FF FF FF FF FF FF FF FF     
   6824 FFFC9000 FF FF FF FF FF FF FF FF     
   6825 FFFC9008 FF FF FF FF FF FF FF FF     
   6826 FFFC9010 FF FF FF FF FF FF FF FF     
   6827 FFFC9018 FF FF FF FF FF FF FF FF     
   6828 FFFC9020 FF FF FF FF FF FF FF FF     
   6829 FFFC9028 FF FF FF FF FF FF FF FF     
   6830 FFFC9030 FF FF FF FF FF FF FF FF     
   6831 FFFC9038 FF FF FF FF FF FF FF FF     
   6832 FFFC9040 FF FF FF FF FF FF FF FF     
   6833 FFFC9048 FF FF FF FF FF FF FF FF     
   6834 FFFC9050 FF FF FF FF FF FF FF FF     
   6835 FFFC9058 FF FF FF FF FF FF FF FF     
   6836 FFFC9060 FF FF FF FF FF FF FF FF     
   6837 FFFC9068 FF FF FF FF FF FF FF FF     
   6838 FFFC9070 FF FF FF FF FF FF FF FF     
   6839 FFFC9078 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 61
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6840 FFFC9080 FF FF FF FF FF FF FF FF     
   6841 FFFC9088 FF FF FF FF FF FF FF FF     
   6842 FFFC9090 FF FF FF FF FF FF FF FF     
   6843 FFFC9098 FF FF FF FF FF FF FF FF     
   6844 FFFC90A0 FF FF FF FF FF FF FF FF     
   6845 FFFC90A8 FF FF FF FF FF FF FF FF     
   6846 FFFC90B0 FF FF FF FF FF FF FF FF     
   6847 FFFC90B8 FF FF FF FF FF FF FF FF     
   6848 FFFC90C0 FF FF FF FF FF FF FF FF     
   6849 FFFC90C8 FF FF FF FF FF FF FF FF     
   6850 FFFC90D0 FF FF FF FF FF FF FF FF     
   6851 FFFC90D8 FF FF FF FF FF FF FF FF     
   6852 FFFC90E0 FF FF FF FF FF FF FF FF     
   6853 FFFC90E8 FF FF FF FF FF FF FF FF     
   6854 FFFC90F0 FF FF FF FF FF FF FF FF     
   6855 FFFC90F8 FF FF FF FF FF FF FF FF     
   6856 FFFC9100 FF FF FF FF FF FF FF FF     
   6857 FFFC9108 FF FF FF FF FF FF FF FF     
   6858 FFFC9110 FF FF FF FF FF FF FF FF     
   6859 FFFC9118 FF FF FF FF FF FF FF FF     
   6860 FFFC9120 FF FF FF FF FF FF FF FF     
   6861 FFFC9128 FF FF FF FF FF FF FF FF     
   6862 FFFC9130 FF FF FF FF FF FF FF FF     
   6863 FFFC9138 FF FF FF FF FF FF FF FF     
   6864 FFFC9140 FF FF FF FF FF FF FF FF     
   6865 FFFC9148 FF FF FF FF FF FF FF FF     
   6866 FFFC9150 FF FF FF FF FF FF FF FF     
   6867 FFFC9158 FF FF FF FF FF FF FF FF     
   6868 FFFC9160 FF FF FF FF FF FF FF FF     
   6869 FFFC9168 FF FF FF FF FF FF FF FF     
   6870 FFFC9170 FF FF FF FF FF FF FF FF     
   6871 FFFC9178 FF FF FF FF FF FF FF FF     
   6872 FFFC9180 FF FF FF FF FF FF FF FF     
   6873 FFFC9188 FF FF FF FF FF FF FF FF     
   6874 FFFC9190 FF FF FF FF FF FF FF FF     
   6875 FFFC9198 FF FF FF FF FF FF FF FF     
   6876 FFFC91A0 FF FF FF FF FF FF FF FF     
   6877 FFFC91A8 FF FF FF FF FF FF FF FF     
   6878 FFFC91B0 FF FF FF FF FF FF FF FF     
   6879 FFFC91B8 FF FF FF FF FF FF FF FF     
   6880 FFFC91C0 FF FF FF FF FF FF FF FF     
   6881 FFFC91C8 FF FF FF FF FF FF FF FF     
   6882 FFFC91D0 FF FF FF FF FF FF FF FF     
   6883 FFFC91D8 FF FF FF FF FF FF FF FF     
   6884 FFFC91E0 FF FF FF FF FF FF FF FF     
   6885 FFFC91E8 FF FF FF FF FF FF FF FF     
   6886 FFFC91F0 FF FF FF FF FF FF FF FF     
   6887 FFFC91F8 FF FF FF FF FF FF FF FF     
   6888 FFFC9200 FF FF FF FF FF FF FF FF     
   6889 FFFC9208 FF FF FF FF FF FF FF FF     
   6890 FFFC9210 FF FF FF FF FF FF FF FF     
   6891 FFFC9218 FF FF FF FF FF FF FF FF     
   6892 FFFC9220 FF FF FF FF FF FF FF FF     
   6893 FFFC9228 FF FF FF FF FF FF FF FF     
   6894 FFFC9230 FF FF FF FF FF FF FF FF     
   6895 FFFC9238 FF FF FF FF FF FF FF FF     
   6896 FFFC9240 FF FF FF FF FF FF FF FF     
   6897 FFFC9248 FF FF FF FF FF FF FF FF     
   6898 FFFC9250 FF FF FF FF FF FF FF FF     
   6899 FFFC9258 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 62
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6900 FFFC9260 FF FF FF FF FF FF FF FF     
   6901 FFFC9268 FF FF FF FF FF FF FF FF     
   6902 FFFC9270 FF FF FF FF FF FF FF FF     
   6903 FFFC9278 FF FF FF FF FF FF FF FF     
   6904 FFFC9280 FF FF FF FF FF FF FF FF     
   6905 FFFC9288 FF FF FF FF FF FF FF FF     
   6906 FFFC9290 FF FF FF FF FF FF FF FF     
   6907 FFFC9298 FF FF FF FF FF FF FF FF     
   6908 FFFC92A0 FF FF FF FF FF FF FF FF     
   6909 FFFC92A8 FF FF FF FF FF FF FF FF     
   6910 FFFC92B0 FF FF FF FF FF FF FF FF     
   6911 FFFC92B8 FF FF FF FF FF FF FF FF     
   6912 FFFC92C0 FF FF FF FF FF FF FF FF     
   6913 FFFC92C8 FF FF FF FF FF FF FF FF     
   6914 FFFC92D0 FF FF FF FF FF FF FF FF     
   6915 FFFC92D8 FF FF FF FF FF FF FF FF     
   6916 FFFC92E0 FF FF FF FF FF FF FF FF     
   6917 FFFC92E8 FF FF FF FF FF FF FF FF     
   6918 FFFC92F0 FF FF FF FF FF FF FF FF     
   6919 FFFC92F8 FF FF FF FF FF FF FF FF     
   6920 FFFC9300 FF FF FF FF FF FF FF FF     
   6921 FFFC9308 FF FF FF FF FF FF FF FF     
   6922 FFFC9310 FF FF FF FF FF FF FF FF     
   6923 FFFC9318 FF FF FF FF FF FF FF FF     
   6924 FFFC9320 FF FF FF FF FF FF FF FF     
   6925 FFFC9328 FF FF FF FF FF FF FF FF     
   6926 FFFC9330 FF FF FF FF FF FF FF FF     
   6927 FFFC9338 FF FF FF FF FF FF FF FF     
   6928 FFFC9340 FF FF FF FF FF FF FF FF     
   6929 FFFC9348 FF FF FF FF FF FF FF FF     
   6930 FFFC9350 FF FF FF FF FF FF FF FF     
   6931 FFFC9358 FF FF FF FF FF FF FF FF     
   6932 FFFC9360 FF FF FF FF FF FF FF FF     
   6933 FFFC9368 FF FF FF FF FF FF FF FF     
   6934 FFFC9370 FF FF FF FF FF FF FF FF     
   6935 FFFC9378 FF FF FF FF FF FF FF FF     
   6936 FFFC9380 FF FF FF FF FF FF FF FF     
   6937 FFFC9388 FF FF FF FF FF FF FF FF     
   6938 FFFC9390 FF FF FF FF FF FF FF FF     
   6939 FFFC9398 FF FF FF FF FF FF FF FF     
   6940 FFFC93A0 FF FF FF FF FF FF FF FF     
   6941 FFFC93A8 FF FF FF FF FF FF FF FF     
   6942 FFFC93B0 FF FF FF FF FF FF FF FF     
   6943 FFFC93B8 FF FF FF FF FF FF FF FF     
   6944 FFFC93C0 FF FF FF FF FF FF FF FF     
   6945 FFFC93C8 FF FF FF FF FF FF FF FF     
   6946 FFFC93D0 FF FF FF FF FF FF FF FF     
   6947 FFFC93D8 FF FF FF FF FF FF FF FF     
   6948 FFFC93E0 FF FF FF FF FF FF FF FF     
   6949 FFFC93E8 FF FF FF FF FF FF FF FF     
   6950 FFFC93F0 FF FF FF FF FF FF FF FF     
   6951 FFFC93F8 FF FF FF FF FF FF FF FF     
   6952 FFFC9400 FF FF FF FF FF FF FF FF     
   6953 FFFC9408 FF FF FF FF FF FF FF FF     
   6954 FFFC9410 FF FF FF FF FF FF FF FF     
   6955 FFFC9418 FF FF FF FF FF FF FF FF     
   6956 FFFC9420 FF FF FF FF FF FF FF FF     
   6957 FFFC9428 FF FF FF FF FF FF FF FF     
   6958 FFFC9430 FF FF FF FF FF FF FF FF     
   6959 FFFC9438 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 63
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6960 FFFC9440 FF FF FF FF FF FF FF FF     
   6961 FFFC9448 FF FF FF FF FF FF FF FF     
   6962 FFFC9450 FF FF FF FF FF FF FF FF     
   6963 FFFC9458 FF FF FF FF FF FF FF FF     
   6964 FFFC9460 FF FF FF FF FF FF FF FF     
   6965 FFFC9468 FF FF FF FF FF FF FF FF     
   6966 FFFC9470 FF FF FF FF FF FF FF FF     
   6967 FFFC9478 FF FF FF FF FF FF FF FF     
   6968 FFFC9480 FF FF FF FF FF FF FF FF     
   6969 FFFC9488 FF FF FF FF FF FF FF FF     
   6970 FFFC9490 FF FF FF FF FF FF FF FF     
   6971 FFFC9498 FF FF FF FF FF FF FF FF     
   6972 FFFC94A0 FF FF FF FF FF FF FF FF     
   6973 FFFC94A8 FF FF FF FF FF FF FF FF     
   6974 FFFC94B0 FF FF FF FF FF FF FF FF     
   6975 FFFC94B8 FF FF FF FF FF FF FF FF     
   6976 FFFC94C0 FF FF FF FF FF FF FF FF     
   6977 FFFC94C8 FF FF FF FF FF FF FF FF     
   6978 FFFC94D0 FF FF FF FF FF FF FF FF     
   6979 FFFC94D8 FF FF FF FF FF FF FF FF     
   6980 FFFC94E0 FF FF FF FF FF FF FF FF     
   6981 FFFC94E8 FF FF FF FF FF FF FF FF     
   6982 FFFC94F0 FF FF FF FF FF FF FF FF     
   6983 FFFC94F8 FF FF FF FF FF FF FF FF     
   6984 FFFC9500 FF FF FF FF FF FF FF FF     
   6985 FFFC9508 FF FF FF FF FF FF FF FF     
   6986 FFFC9510 FF FF FF FF FF FF FF FF     
   6987 FFFC9518 FF FF FF FF FF FF FF FF     
   6988 FFFC9520 FF FF FF FF FF FF FF FF     
   6989 FFFC9528 FF FF FF FF FF FF FF FF     
   6990 FFFC9530 FF FF FF FF FF FF FF FF     
   6991 FFFC9538 FF FF FF FF FF FF FF FF     
   6992 FFFC9540 FF FF FF FF FF FF FF FF     
   6993 FFFC9548 FF FF FF FF FF FF FF FF     
   6994 FFFC9550 FF FF FF FF FF FF FF FF     
   6995 FFFC9558 FF FF FF FF FF FF FF FF     
   6996 FFFC9560 FF FF FF FF FF FF FF FF     
   6997 FFFC9568 FF FF FF FF FF FF FF FF     
   6998 FFFC9570 FF FF FF FF FF FF FF FF     
   6999 FFFC9578 FF FF FF FF FF FF FF FF     
   7000 FFFC9580 FF FF FF FF FF FF FF FF     
   7001 FFFC9588 FF FF FF FF FF FF FF FF     
   7002 FFFC9590 FF FF FF FF FF FF FF FF     
   7003 FFFC9598 FF FF FF FF FF FF FF FF     
   7004 FFFC95A0 FF FF FF FF FF FF FF FF     
   7005 FFFC95A8 FF FF FF FF FF FF FF FF     
   7006 FFFC95B0 FF FF FF FF FF FF FF FF     
   7007 FFFC95B8 FF FF FF FF FF FF FF FF     
   7008 FFFC95C0 FF FF FF FF FF FF FF FF     
   7009 FFFC95C8 FF FF FF FF FF FF FF FF     
   7010 FFFC95D0 FF FF FF FF FF FF FF FF     
   7011 FFFC95D8 FF FF FF FF FF FF FF FF     
   7012 FFFC95E0 FF FF FF FF FF FF FF FF     
   7013 FFFC95E8 FF FF FF FF FF FF FF FF     
   7014 FFFC95F0 FF FF FF FF FF FF FF FF     
   7015 FFFC95F8 FF FF FF FF FF FF FF FF     
   7016 FFFC9600 FF FF FF FF FF FF FF FF     
   7017 FFFC9608 FF FF FF FF FF FF FF FF     
   7018 FFFC9610 FF FF FF FF FF FF FF FF     
   7019 FFFC9618 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 64
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7020 FFFC9620 FF FF FF FF FF FF FF FF     
   7021 FFFC9628 FF FF FF FF FF FF FF FF     
   7022 FFFC9630 FF FF FF FF FF FF FF FF     
   7023 FFFC9638 FF FF FF FF FF FF FF FF     
   7024 FFFC9640 FF FF FF FF FF FF FF FF     
   7025 FFFC9648 FF FF FF FF FF FF FF FF     
   7026 FFFC9650 FF FF FF FF FF FF FF FF     
   7027 FFFC9658 FF FF FF FF FF FF FF FF     
   7028 FFFC9660 FF FF FF FF FF FF FF FF     
   7029 FFFC9668 FF FF FF FF FF FF FF FF     
   7030 FFFC9670 FF FF FF FF FF FF FF FF     
   7031 FFFC9678 FF FF FF FF FF FF FF FF     
   7032 FFFC9680 FF FF FF FF FF FF FF FF     
   7033 FFFC9688 FF FF FF FF FF FF FF FF     
   7034 FFFC9690 FF FF FF FF FF FF FF FF     
   7035 FFFC9698 FF FF FF FF FF FF FF FF     
   7036 FFFC96A0 FF FF FF FF FF FF FF FF     
   7037 FFFC96A8 FF FF FF FF FF FF FF FF     
   7038 FFFC96B0 FF FF FF FF FF FF FF FF     
   7039 FFFC96B8 FF FF FF FF FF FF FF FF     
   7040 FFFC96C0 FF FF FF FF FF FF FF FF     
   7041 FFFC96C8 FF FF FF FF FF FF FF FF     
   7042 FFFC96D0 FF FF FF FF FF FF FF FF     
   7043 FFFC96D8 FF FF FF FF FF FF FF FF     
   7044 FFFC96E0 FF FF FF FF FF FF FF FF     
   7045 FFFC96E8 FF FF FF FF FF FF FF FF     
   7046 FFFC96F0 FF FF FF FF FF FF FF FF     
   7047 FFFC96F8 FF FF FF FF FF FF FF FF     
   7048 FFFC9700 FF FF FF FF FF FF FF FF     
   7049 FFFC9708 FF FF FF FF FF FF FF FF     
   7050 FFFC9710 FF FF FF FF FF FF FF FF     
   7051 FFFC9718 FF FF FF FF FF FF FF FF     
   7052 FFFC9720 FF FF FF FF FF FF FF FF     
   7053 FFFC9728 FF FF FF FF FF FF FF FF     
   7054 FFFC9730 FF FF FF FF FF FF FF FF     
   7055 FFFC9738 FF FF FF FF FF FF FF FF     
   7056 FFFC9740 FF FF FF FF FF FF FF FF     
   7057 FFFC9748 FF FF FF FF FF FF FF FF     
   7058 FFFC9750 FF FF FF FF FF FF FF FF     
   7059 FFFC9758 FF FF FF FF FF FF FF FF     
   7060 FFFC9760 FF FF FF FF FF FF FF FF     
   7061 FFFC9768 FF FF FF FF FF FF FF FF     
   7062 FFFC9770 FF FF FF FF FF FF FF FF     
   7063 FFFC9778 FF FF FF FF FF FF FF FF     
   7064 FFFC9780 FF FF FF FF FF FF FF FF     
   7065 FFFC9788 FF FF FF FF FF FF FF FF     
   7066 FFFC9790 FF FF FF FF FF FF FF FF     
   7067 FFFC9798 FF FF FF FF FF FF FF FF     
   7068 FFFC97A0 FF FF FF FF FF FF FF FF     
   7069 FFFC97A8 FF FF FF FF FF FF FF FF     
   7070 FFFC97B0 FF FF FF FF FF FF FF FF     
   7071 FFFC97B8 FF FF FF FF FF FF FF FF     
   7072 FFFC97C0 FF FF FF FF FF FF FF FF     
   7073 FFFC97C8 FF FF FF FF FF FF FF FF     
   7074 FFFC97D0 FF FF FF FF FF FF FF FF     
   7075 FFFC97D8 FF FF FF FF FF FF FF FF     
   7076 FFFC97E0 FF FF FF FF FF FF FF FF     
   7077 FFFC97E8 FF FF FF FF FF FF FF FF     
   7078 FFFC97F0 FF FF FF FF FF FF FF FF     
   7079 FFFC97F8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 65
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7080 FFFC9800 FF FF FF FF FF FF FF FF     
   7081 FFFC9808 FF FF FF FF FF FF FF FF     
   7082 FFFC9810 FF FF FF FF FF FF FF FF     
   7083 FFFC9818 FF FF FF FF FF FF FF FF     
   7084 FFFC9820 FF FF FF FF FF FF FF FF     
   7085 FFFC9828 FF FF FF FF FF FF FF FF     
   7086 FFFC9830 FF FF FF FF FF FF FF FF     
   7087 FFFC9838 FF FF FF FF FF FF FF FF     
   7088 FFFC9840 FF FF FF FF FF FF FF FF     
   7089 FFFC9848 FF FF FF FF FF FF FF FF     
   7090 FFFC9850 FF FF FF FF FF FF FF FF     
   7091 FFFC9858 FF FF FF FF FF FF FF FF     
   7092 FFFC9860 FF FF FF FF FF FF FF FF     
   7093 FFFC9868 FF FF FF FF FF FF FF FF     
   7094 FFFC9870 FF FF FF FF FF FF FF FF     
   7095 FFFC9878 FF FF FF FF FF FF FF FF     
   7096 FFFC9880 FF FF FF FF FF FF FF FF     
   7097 FFFC9888 FF FF FF FF FF FF FF FF     
   7098 FFFC9890 FF FF FF FF FF FF FF FF     
   7099 FFFC9898 FF FF FF FF FF FF FF FF     
   7100 FFFC98A0 FF FF FF FF FF FF FF FF     
   7101 FFFC98A8 FF FF FF FF FF FF FF FF     
   7102 FFFC98B0 FF FF FF FF FF FF FF FF     
   7103 FFFC98B8 FF FF FF FF FF FF FF FF     
   7104 FFFC98C0 FF FF FF FF FF FF FF FF     
   7105 FFFC98C8 FF FF FF FF FF FF FF FF     
   7106 FFFC98D0 FF FF FF FF FF FF FF FF     
   7107 FFFC98D8 FF FF FF FF FF FF FF FF     
   7108 FFFC98E0 FF FF FF FF FF FF FF FF     
   7109 FFFC98E8 FF FF FF FF FF FF FF FF     
   7110 FFFC98F0 FF FF FF FF FF FF FF FF     
   7111 FFFC98F8 FF FF FF FF FF FF FF FF     
   7112 FFFC9900 FF FF FF FF FF FF FF FF     
   7113 FFFC9908 FF FF FF FF FF FF FF FF     
   7114 FFFC9910 FF FF FF FF FF FF FF FF     
   7115 FFFC9918 FF FF FF FF FF FF FF FF     
   7116 FFFC9920 FF FF FF FF FF FF FF FF     
   7117 FFFC9928 FF FF FF FF FF FF FF FF     
   7118 FFFC9930 FF FF FF FF FF FF FF FF     
   7119 FFFC9938 FF FF FF FF FF FF FF FF     
   7120 FFFC9940 FF FF FF FF FF FF FF FF     
   7121 FFFC9948 FF FF FF FF FF FF FF FF     
   7122 FFFC9950 FF FF FF FF FF FF FF FF     
   7123 FFFC9958 FF FF FF FF FF FF FF FF     
   7124 FFFC9960 FF FF FF FF FF FF FF FF     
   7125 FFFC9968 FF FF FF FF FF FF FF FF     
   7126 FFFC9970 FF FF FF FF FF FF FF FF     
   7127 FFFC9978 FF FF FF FF FF FF FF FF     
   7128 FFFC9980 FF FF FF FF FF FF FF FF     
   7129 FFFC9988 FF FF FF FF FF FF FF FF     
   7130 FFFC9990 FF FF FF FF FF FF FF FF     
   7131 FFFC9998 FF FF FF FF FF FF FF FF     
   7132 FFFC99A0 FF FF FF FF FF FF FF FF     
   7133 FFFC99A8 FF FF FF FF FF FF FF FF     
   7134 FFFC99B0 FF FF FF FF FF FF FF FF     
   7135 FFFC99B8 FF FF FF FF FF FF FF FF     
   7136 FFFC99C0 FF FF FF FF FF FF FF FF     
   7137 FFFC99C8 FF FF FF FF FF FF FF FF     
   7138 FFFC99D0 FF FF FF FF FF FF FF FF     
   7139 FFFC99D8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 66
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7140 FFFC99E0 FF FF FF FF FF FF FF FF     
   7141 FFFC99E8 FF FF FF FF FF FF FF FF     
   7142 FFFC99F0 FF FF FF FF FF FF FF FF     
   7143 FFFC99F8 FF FF FF FF FF FF FF FF     
   7144 FFFC9A00 FF FF FF FF FF FF FF FF     
   7145 FFFC9A08 FF FF FF FF FF FF FF FF     
   7146 FFFC9A10 FF FF FF FF FF FF FF FF     
   7147 FFFC9A18 FF FF FF FF FF FF FF FF     
   7148 FFFC9A20 FF FF FF FF FF FF FF FF     
   7149 FFFC9A28 FF FF FF FF FF FF FF FF     
   7150 FFFC9A30 FF FF FF FF FF FF FF FF     
   7151 FFFC9A38 FF FF FF FF FF FF FF FF     
   7152 FFFC9A40 FF FF FF FF FF FF FF FF     
   7153 FFFC9A48 FF FF FF FF FF FF FF FF     
   7154 FFFC9A50 FF FF FF FF FF FF FF FF     
   7155 FFFC9A58 FF FF FF FF FF FF FF FF     
   7156 FFFC9A60 FF FF FF FF FF FF FF FF     
   7157 FFFC9A68 FF FF FF FF FF FF FF FF     
   7158 FFFC9A70 FF FF FF FF FF FF FF FF     
   7159 FFFC9A78 FF FF FF FF FF FF FF FF     
   7160 FFFC9A80 FF FF FF FF FF FF FF FF     
   7161 FFFC9A88 FF FF FF FF FF FF FF FF     
   7162 FFFC9A90 FF FF FF FF FF FF FF FF     
   7163 FFFC9A98 FF FF FF FF FF FF FF FF     
   7164 FFFC9AA0 FF FF FF FF FF FF FF FF     
   7165 FFFC9AA8 FF FF FF FF FF FF FF FF     
   7166 FFFC9AB0 FF FF FF FF FF FF FF FF     
   7167 FFFC9AB8 FF FF FF FF FF FF FF FF     
   7168 FFFC9AC0 FF FF FF FF FF FF FF FF     
   7169 FFFC9AC8 FF FF FF FF FF FF FF FF     
   7170 FFFC9AD0 FF FF FF FF FF FF FF FF     
   7171 FFFC9AD8 FF FF FF FF FF FF FF FF     
   7172 FFFC9AE0 FF FF FF FF FF FF FF FF     
   7173 FFFC9AE8 FF FF FF FF FF FF FF FF     
   7174 FFFC9AF0 FF FF FF FF FF FF FF FF     
   7175 FFFC9AF8 FF FF FF FF FF FF FF FF     
   7176 FFFC9B00 FF FF FF FF FF FF FF FF     
   7177 FFFC9B08 FF FF FF FF FF FF FF FF     
   7178 FFFC9B10 FF FF FF FF FF FF FF FF     
   7179 FFFC9B18 FF FF FF FF FF FF FF FF     
   7180 FFFC9B20 FF FF FF FF FF FF FF FF     
   7181 FFFC9B28 FF FF FF FF FF FF FF FF     
   7182 FFFC9B30 FF FF FF FF FF FF FF FF     
   7183 FFFC9B38 FF FF FF FF FF FF FF FF     
   7184 FFFC9B40 FF FF FF FF FF FF FF FF     
   7185 FFFC9B48 FF FF FF FF FF FF FF FF     
   7186 FFFC9B50 FF FF FF FF FF FF FF FF     
   7187 FFFC9B58 FF FF FF FF FF FF FF FF     
   7188 FFFC9B60 FF FF FF FF FF FF FF FF     
   7189 FFFC9B68 FF FF FF FF FF FF FF FF     
   7190 FFFC9B70 FF FF FF FF FF FF FF FF     
   7191 FFFC9B78 FF FF FF FF FF FF FF FF     
   7192 FFFC9B80 FF FF FF FF FF FF FF FF     
   7193 FFFC9B88 FF FF FF FF FF FF FF FF     
   7194 FFFC9B90 FF FF FF FF FF FF FF FF     
   7195 FFFC9B98 FF FF FF FF FF FF FF FF     
   7196 FFFC9BA0 FF FF FF FF FF FF FF FF     
   7197 FFFC9BA8 FF FF FF FF FF FF FF FF     
   7198 FFFC9BB0 FF FF FF FF FF FF FF FF     
   7199 FFFC9BB8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 67
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7200 FFFC9BC0 FF FF FF FF FF FF FF FF     
   7201 FFFC9BC8 FF FF FF FF FF FF FF FF     
   7202 FFFC9BD0 FF FF FF FF FF FF FF FF     
   7203 FFFC9BD8 FF FF FF FF FF FF FF FF     
   7204 FFFC9BE0 FF FF FF FF FF FF FF FF     
   7205 FFFC9BE8 FF FF FF FF FF FF FF FF     
   7206 FFFC9BF0 FF FF FF FF FF FF FF FF     
   7207 FFFC9BF8 FF FF FF FF FF FF FF FF     
   7208 FFFC9C00 FF FF FF FF FF FF FF FF     
   7209 FFFC9C08 FF FF FF FF FF FF FF FF     
   7210 FFFC9C10 FF FF FF FF FF FF FF FF     
   7211 FFFC9C18 FF FF FF FF FF FF FF FF     
   7212 FFFC9C20 FF FF FF FF FF FF FF FF     
   7213 FFFC9C28 FF FF FF FF FF FF FF FF     
   7214 FFFC9C30 FF FF FF FF FF FF FF FF     
   7215 FFFC9C38 FF FF FF FF FF FF FF FF     
   7216 FFFC9C40 FF FF FF FF FF FF FF FF     
   7217 FFFC9C48 FF FF FF FF FF FF FF FF     
   7218 FFFC9C50 FF FF FF FF FF FF FF FF     
   7219 FFFC9C58 FF FF FF FF FF FF FF FF     
   7220 FFFC9C60 FF FF FF FF FF FF FF FF     
   7221 FFFC9C68 FF FF FF FF FF FF FF FF     
   7222 FFFC9C70 FF FF FF FF FF FF FF FF     
   7223 FFFC9C78 FF FF FF FF FF FF FF FF     
   7224 FFFC9C80 FF FF FF FF FF FF FF FF     
   7225 FFFC9C88 FF FF FF FF FF FF FF FF     
   7226 FFFC9C90 FF FF FF FF FF FF FF FF     
   7227 FFFC9C98 FF FF FF FF FF FF FF FF     
   7228 FFFC9CA0 FF FF FF FF FF FF FF FF     
   7229 FFFC9CA8 FF FF FF FF FF FF FF FF     
   7230 FFFC9CB0 FF FF FF FF FF FF FF FF     
   7231 FFFC9CB8 FF FF FF FF FF FF FF FF     
   7232 FFFC9CC0 FF FF FF FF FF FF FF FF     
   7233 FFFC9CC8 FF FF FF FF FF FF FF FF     
   7234 FFFC9CD0 FF FF FF FF FF FF FF FF     
   7235 FFFC9CD8 FF FF FF FF FF FF FF FF     
   7236 FFFC9CE0 FF FF FF FF FF FF FF FF     
   7237 FFFC9CE8 FF FF FF FF FF FF FF FF     
   7238 FFFC9CF0 FF FF FF FF FF FF FF FF     
   7239 FFFC9CF8 FF FF FF FF FF FF FF FF     
   7240 FFFC9D00 FF FF FF FF FF FF FF FF     
   7241 FFFC9D08 FF FF FF FF FF FF FF FF     
   7242 FFFC9D10 FF FF FF FF FF FF FF FF     
   7243 FFFC9D18 FF FF FF FF FF FF FF FF     
   7244 FFFC9D20 FF FF FF FF FF FF FF FF     
   7245 FFFC9D28 FF FF FF FF FF FF FF FF     
   7246 FFFC9D30 FF FF FF FF FF FF FF FF     
   7247 FFFC9D38 FF FF FF FF FF FF FF FF     
   7248 FFFC9D40 FF FF FF FF FF FF FF FF     
   7249 FFFC9D48 FF FF FF FF FF FF FF FF     
   7250 FFFC9D50 FF FF FF FF FF FF FF FF     
   7251 FFFC9D58 FF FF FF FF FF FF FF FF     
   7252 FFFC9D60 FF FF FF FF FF FF FF FF     
   7253 FFFC9D68 FF FF FF FF FF FF FF FF     
   7254 FFFC9D70 FF FF FF FF FF FF FF FF     
   7255 FFFC9D78 FF FF FF FF FF FF FF FF     
   7256 FFFC9D80 FF FF FF FF FF FF FF FF     
   7257 FFFC9D88 FF FF FF FF FF FF FF FF     
   7258 FFFC9D90 FF FF FF FF FF FF FF FF     
   7259 FFFC9D98 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 68
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7260 FFFC9DA0 FF FF FF FF FF FF FF FF     
   7261 FFFC9DA8 FF FF FF FF FF FF FF FF     
   7262 FFFC9DB0 FF FF FF FF FF FF FF FF     
   7263 FFFC9DB8 FF FF FF FF FF FF FF FF     
   7264 FFFC9DC0 FF FF FF FF FF FF FF FF     
   7265 FFFC9DC8 FF FF FF FF FF FF FF FF     
   7266 FFFC9DD0 FF FF FF FF FF FF FF FF     
   7267 FFFC9DD8 FF FF FF FF FF FF FF FF     
   7268 FFFC9DE0 FF FF FF FF FF FF FF FF     
   7269 FFFC9DE8 FF FF FF FF FF FF FF FF     
   7270 FFFC9DF0 FF FF FF FF FF FF FF FF     
   7271 FFFC9DF8 FF FF FF FF FF FF FF FF     
   7272 FFFC9E00 FF FF FF FF FF FF FF FF     
   7273 FFFC9E08 FF FF FF FF FF FF FF FF     
   7274 FFFC9E10 FF FF FF FF FF FF FF FF     
   7275 FFFC9E18 FF FF FF FF FF FF FF FF     
   7276 FFFC9E20 FF FF FF FF FF FF FF FF     
   7277 FFFC9E28 FF FF FF FF FF FF FF FF     
   7278 FFFC9E30 FF FF FF FF FF FF FF FF     
   7279 FFFC9E38 FF FF FF FF FF FF FF FF     
   7280 FFFC9E40 FF FF FF FF FF FF FF FF     
   7281 FFFC9E48 FF FF FF FF FF FF FF FF     
   7282 FFFC9E50 FF FF FF FF FF FF FF FF     
   7283 FFFC9E58 FF FF FF FF FF FF FF FF     
   7284 FFFC9E60 FF FF FF FF FF FF FF FF     
   7285 FFFC9E68 FF FF FF FF FF FF FF FF     
   7286 FFFC9E70 FF FF FF FF FF FF FF FF     
   7287 FFFC9E78 FF FF FF FF FF FF FF FF     
   7288 FFFC9E80 FF FF FF FF FF FF FF FF     
   7289 FFFC9E88 FF FF FF FF FF FF FF FF     
   7290 FFFC9E90 FF FF FF FF FF FF FF FF     
   7291 FFFC9E98 FF FF FF FF FF FF FF FF     
   7292 FFFC9EA0 FF FF FF FF FF FF FF FF     
   7293 FFFC9EA8 FF FF FF FF FF FF FF FF     
   7294 FFFC9EB0 FF FF FF FF FF FF FF FF     
   7295 FFFC9EB8 FF FF FF FF FF FF FF FF     
   7296 FFFC9EC0 FF FF FF FF FF FF FF FF     
   7297 FFFC9EC8 FF FF FF FF FF FF FF FF     
   7298 FFFC9ED0 FF FF FF FF FF FF FF FF     
   7299 FFFC9ED8 FF FF FF FF FF FF FF FF     
   7300 FFFC9EE0 FF FF FF FF FF FF FF FF     
   7301 FFFC9EE8 FF FF FF FF FF FF FF FF     
   7302 FFFC9EF0 FF FF FF FF FF FF FF FF     
   7303 FFFC9EF8 FF FF FF FF FF FF FF FF     
   7304 FFFC9F00 FF FF FF FF FF FF FF FF     
   7305 FFFC9F08 FF FF FF FF FF FF FF FF     
   7306 FFFC9F10 FF FF FF FF FF FF FF FF     
   7307 FFFC9F18 FF FF FF FF FF FF FF FF     
   7308 FFFC9F20 FF FF FF FF FF FF FF FF     
   7309 FFFC9F28 FF FF FF FF FF FF FF FF     
   7310 FFFC9F30 FF FF FF FF FF FF FF FF     
   7311 FFFC9F38 FF FF FF FF FF FF FF FF     
   7312 FFFC9F40 FF FF FF FF FF FF FF FF     
   7313 FFFC9F48 FF FF FF FF FF FF FF FF     
   7314 FFFC9F50 FF FF FF FF FF FF FF FF     
   7315 FFFC9F58 FF FF FF FF FF FF FF FF     
   7316 FFFC9F60 FF FF FF FF FF FF FF FF     
   7317 FFFC9F68 FF FF FF FF FF FF FF FF     
   7318 FFFC9F70 FF FF FF FF FF FF FF FF     
   7319 FFFC9F78 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 69
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7320 FFFC9F80 FF FF FF FF FF FF FF FF     
   7321 FFFC9F88 FF FF FF FF FF FF FF FF     
   7322 FFFC9F90 FF FF FF FF FF FF FF FF     
   7323 FFFC9F98 FF FF FF FF FF FF FF FF     
   7324 FFFC9FA0 FF FF FF FF FF FF FF FF     
   7325 FFFC9FA8 FF FF FF FF FF FF FF FF     
   7326 FFFC9FB0 FF FF FF FF FF FF FF FF     
   7327 FFFC9FB8 FF FF FF FF FF FF FF FF     
   7328 FFFC9FC0 FF FF FF FF FF FF FF FF     
   7329 FFFC9FC8 FF FF FF FF FF FF FF FF     
   7330 FFFC9FD0 FF FF FF FF FF FF FF FF     
   7331 FFFC9FD8 FF FF FF FF FF FF FF FF     
   7332 FFFC9FE0 FF FF FF FF FF FF FF FF     
   7333 FFFC9FE8 FF FF FF FF FF FF FF FF     
   7334 FFFC9FF0 FF FF FF FF FF FF FF FF     
   7335 FFFC9FF8 FF FF FF FF FF FF FF FF     
   7336 FFFCA000 FF FF FF FF FF FF FF FF     
   7337 FFFCA008 FF FF FF FF FF FF FF FF     
   7338 FFFCA010 FF FF FF FF FF FF FF FF     
   7339 FFFCA018 FF FF FF FF FF FF FF FF     
   7340 FFFCA020 FF FF FF FF FF FF FF FF     
   7341 FFFCA028 FF FF FF FF FF FF FF FF     
   7342 FFFCA030 FF FF FF FF FF FF FF FF     
   7343 FFFCA038 FF FF FF FF FF FF FF FF     
   7344 FFFCA040 FF FF FF FF FF FF FF FF     
   7345 FFFCA048 FF FF FF FF FF FF FF FF     
   7346 FFFCA050 FF FF FF FF FF FF FF FF     
   7347 FFFCA058 FF FF FF FF FF FF FF FF     
   7348 FFFCA060 FF FF FF FF FF FF FF FF     
   7349 FFFCA068 FF FF FF FF FF FF FF FF     
   7350 FFFCA070 FF FF FF FF FF FF FF FF     
   7351 FFFCA078 FF FF FF FF FF FF FF FF     
   7352 FFFCA080 FF FF FF FF FF FF FF FF     
   7353 FFFCA088 FF FF FF FF FF FF FF FF     
   7354 FFFCA090 FF FF FF FF FF FF FF FF     
   7355 FFFCA098 FF FF FF FF FF FF FF FF     
   7356 FFFCA0A0 FF FF FF FF FF FF FF FF     
   7357 FFFCA0A8 FF FF FF FF FF FF FF FF     
   7358 FFFCA0B0 FF FF FF FF FF FF FF FF     
   7359 FFFCA0B8 FF FF FF FF FF FF FF FF     
   7360 FFFCA0C0 FF FF FF FF FF FF FF FF     
   7361 FFFCA0C8 FF FF FF FF FF FF FF FF     
   7362 FFFCA0D0 FF FF FF FF FF FF FF FF     
   7363 FFFCA0D8 FF FF FF FF FF FF FF FF     
   7364 FFFCA0E0 FF FF FF FF FF FF FF FF     
   7365 FFFCA0E8 FF FF FF FF FF FF FF FF     
   7366 FFFCA0F0 FF FF FF FF FF FF FF FF     
   7367 FFFCA0F8 FF FF FF FF FF FF FF FF     
   7368 FFFCA100 FF FF FF FF FF FF FF FF     
   7369 FFFCA108 FF FF FF FF FF FF FF FF     
   7370 FFFCA110 FF FF FF FF FF FF FF FF     
   7371 FFFCA118 FF FF FF FF FF FF FF FF     
   7372 FFFCA120 FF FF FF FF FF FF FF FF     
   7373 FFFCA128 FF FF FF FF FF FF FF FF     
   7374 FFFCA130 FF FF FF FF FF FF FF FF     
   7375 FFFCA138 FF FF FF FF FF FF FF FF     
   7376 FFFCA140 FF FF FF FF FF FF FF FF     
   7377 FFFCA148 FF FF FF FF FF FF FF FF     
   7378 FFFCA150 FF FF FF FF FF FF FF FF     
   7379 FFFCA158 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 70
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7380 FFFCA160 FF FF FF FF FF FF FF FF     
   7381 FFFCA168 FF FF FF FF FF FF FF FF     
   7382 FFFCA170 FF FF FF FF FF FF FF FF     
   7383 FFFCA178 FF FF FF FF FF FF FF FF     
   7384 FFFCA180 FF FF FF FF FF FF FF FF     
   7385 FFFCA188 FF FF FF FF FF FF FF FF     
   7386 FFFCA190 FF FF FF FF FF FF FF FF     
   7387 FFFCA198 FF FF FF FF FF FF FF FF     
   7388 FFFCA1A0 FF FF FF FF FF FF FF FF     
   7389 FFFCA1A8 FF FF FF FF FF FF FF FF     
   7390 FFFCA1B0 FF FF FF FF FF FF FF FF     
   7391 FFFCA1B8 FF FF FF FF FF FF FF FF     
   7392 FFFCA1C0 FF FF FF FF FF FF FF FF     
   7393 FFFCA1C8 FF FF FF FF FF FF FF FF     
   7394 FFFCA1D0 FF FF FF FF FF FF FF FF     
   7395 FFFCA1D8 FF FF FF FF FF FF FF FF     
   7396 FFFCA1E0 FF FF FF FF FF FF FF FF     
   7397 FFFCA1E8 FF FF FF FF FF FF FF FF     
   7398 FFFCA1F0 FF FF FF FF FF FF FF FF     
   7399 FFFCA1F8 FF FF FF FF FF FF FF FF     
   7400 FFFCA200 FF FF FF FF FF FF FF FF     
   7401 FFFCA208 FF FF FF FF FF FF FF FF     
   7402 FFFCA210 FF FF FF FF FF FF FF FF     
   7403 FFFCA218 FF FF FF FF FF FF FF FF     
   7404 FFFCA220 FF FF FF FF FF FF FF FF     
   7405 FFFCA228 FF FF FF FF FF FF FF FF     
   7406 FFFCA230 FF FF FF FF FF FF FF FF     
   7407 FFFCA238 FF FF FF FF FF FF FF FF     
   7408 FFFCA240 FF FF FF FF FF FF FF FF     
   7409 FFFCA248 FF FF FF FF FF FF FF FF     
   7410 FFFCA250 FF FF FF FF FF FF FF FF     
   7411 FFFCA258 FF FF FF FF FF FF FF FF     
   7412 FFFCA260 FF FF FF FF FF FF FF FF     
   7413 FFFCA268 FF FF FF FF FF FF FF FF     
   7414 FFFCA270 FF FF FF FF FF FF FF FF     
   7415 FFFCA278 FF FF FF FF FF FF FF FF     
   7416 FFFCA280 FF FF FF FF FF FF FF FF     
   7417 FFFCA288 FF FF FF FF FF FF FF FF     
   7418 FFFCA290 FF FF FF FF FF FF FF FF     
   7419 FFFCA298 FF FF FF FF FF FF FF FF     
   7420 FFFCA2A0 FF FF FF FF FF FF FF FF     
   7421 FFFCA2A8 FF FF FF FF FF FF FF FF     
   7422 FFFCA2B0 FF FF FF FF FF FF FF FF     
   7423 FFFCA2B8 FF FF FF FF FF FF FF FF     
   7424 FFFCA2C0 FF FF FF FF FF FF FF FF     
   7425 FFFCA2C8 FF FF FF FF FF FF FF FF     
   7426 FFFCA2D0 FF FF FF FF FF FF FF FF     
   7427 FFFCA2D8 FF FF FF FF FF FF FF FF     
   7428 FFFCA2E0 FF FF FF FF FF FF FF FF     
   7429 FFFCA2E8 FF FF FF FF FF FF FF FF     
   7430 FFFCA2F0 FF FF FF FF FF FF FF FF     
   7431 FFFCA2F8 FF FF FF FF FF FF FF FF     
   7432 FFFCA300 FF FF FF FF FF FF FF FF     
   7433 FFFCA308 FF FF FF FF FF FF FF FF     
   7434 FFFCA310 FF FF FF FF FF FF FF FF     
   7435 FFFCA318 FF FF FF FF FF FF FF FF     
   7436 FFFCA320 FF FF FF FF FF FF FF FF     
   7437 FFFCA328 FF FF FF FF FF FF FF FF     
   7438 FFFCA330 FF FF FF FF FF FF FF FF     
   7439 FFFCA338 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 71
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7440 FFFCA340 FF FF FF FF FF FF FF FF     
   7441 FFFCA348 FF FF FF FF FF FF FF FF     
   7442 FFFCA350 FF FF FF FF FF FF FF FF     
   7443 FFFCA358 FF FF FF FF FF FF FF FF     
   7444 FFFCA360 FF FF FF FF FF FF FF FF     
   7445 FFFCA368 FF FF FF FF FF FF FF FF     
   7446 FFFCA370 FF FF FF FF FF FF FF FF     
   7447 FFFCA378 FF FF FF FF FF FF FF FF     
   7448 FFFCA380 FF FF FF FF FF FF FF FF     
   7449 FFFCA388 FF FF FF FF FF FF FF FF     
   7450 FFFCA390 FF FF FF FF FF FF FF FF     
   7451 FFFCA398 FF FF FF FF FF FF FF FF     
   7452 FFFCA3A0 FF FF FF FF FF FF FF FF     
   7453 FFFCA3A8 FF FF FF FF FF FF FF FF     
   7454 FFFCA3B0 FF FF FF FF FF FF FF FF     
   7455 FFFCA3B8 FF FF FF FF FF FF FF FF     
   7456 FFFCA3C0 FF FF FF FF FF FF FF FF     
   7457 FFFCA3C8 FF FF FF FF FF FF FF FF     
   7458 FFFCA3D0 FF FF FF FF FF FF FF FF     
   7459 FFFCA3D8 FF FF FF FF FF FF FF FF     
   7460 FFFCA3E0 FF FF FF FF FF FF FF FF     
   7461 FFFCA3E8 FF FF FF FF FF FF FF FF     
   7462 FFFCA3F0 FF FF FF FF FF FF FF FF     
   7463 FFFCA3F8 FF FF FF FF FF FF FF FF     
   7464 FFFCA400 FF FF FF FF FF FF FF FF     
   7465 FFFCA408 FF FF FF FF FF FF FF FF     
   7466 FFFCA410 FF FF FF FF FF FF FF FF     
   7467 FFFCA418 FF FF FF FF FF FF FF FF     
   7468 FFFCA420 FF FF FF FF FF FF FF FF     
   7469 FFFCA428 FF FF FF FF FF FF FF FF     
   7470 FFFCA430 FF FF FF FF FF FF FF FF     
   7471 FFFCA438 FF FF FF FF FF FF FF FF     
   7472 FFFCA440 FF FF FF FF FF FF FF FF     
   7473 FFFCA448 FF FF FF FF FF FF FF FF     
   7474 FFFCA450 FF FF FF FF FF FF FF FF     
   7475 FFFCA458 FF FF FF FF FF FF FF FF     
   7476 FFFCA460 FF FF FF FF FF FF FF FF     
   7477 FFFCA468 FF FF FF FF FF FF FF FF     
   7478 FFFCA470 FF FF FF FF FF FF FF FF     
   7479 FFFCA478 FF FF FF FF FF FF FF FF     
   7480 FFFCA480 FF FF FF FF FF FF FF FF     
   7481 FFFCA488 FF FF FF FF FF FF FF FF     
   7482 FFFCA490 FF FF FF FF FF FF FF FF     
   7483 FFFCA498 FF FF FF FF FF FF FF FF     
   7484 FFFCA4A0 FF FF FF FF FF FF FF FF     
   7485 FFFCA4A8 FF FF FF FF FF FF FF FF     
   7486 FFFCA4B0 FF FF FF FF FF FF FF FF     
   7487 FFFCA4B8 FF FF FF FF FF FF FF FF     
   7488 FFFCA4C0 FF FF FF FF FF FF FF FF     
   7489 FFFCA4C8 FF FF FF FF FF FF FF FF     
   7490 FFFCA4D0 FF FF FF FF FF FF FF FF     
   7491 FFFCA4D8 FF FF FF FF FF FF FF FF     
   7492 FFFCA4E0 FF FF FF FF FF FF FF FF     
   7493 FFFCA4E8 FF FF FF FF FF FF FF FF     
   7494 FFFCA4F0 FF FF FF FF FF FF FF FF     
   7495 FFFCA4F8 FF FF FF FF FF FF FF FF     
   7496 FFFCA500 FF FF FF FF FF FF FF FF     
   7497 FFFCA508 FF FF FF FF FF FF FF FF     
   7498 FFFCA510 FF FF FF FF FF FF FF FF     
   7499 FFFCA518 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 72
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7500 FFFCA520 FF FF FF FF FF FF FF FF     
   7501 FFFCA528 FF FF FF FF FF FF FF FF     
   7502 FFFCA530 FF FF FF FF FF FF FF FF     
   7503 FFFCA538 FF FF FF FF FF FF FF FF     
   7504 FFFCA540 FF FF FF FF FF FF FF FF     
   7505 FFFCA548 FF FF FF FF FF FF FF FF     
   7506 FFFCA550 FF FF FF FF FF FF FF FF     
   7507 FFFCA558 FF FF FF FF FF FF FF FF     
   7508 FFFCA560 FF FF FF FF FF FF FF FF     
   7509 FFFCA568 FF FF FF FF FF FF FF FF     
   7510 FFFCA570 FF FF FF FF FF FF FF FF     
   7511 FFFCA578 FF FF FF FF FF FF FF FF     
   7512 FFFCA580 FF FF FF FF FF FF FF FF     
   7513 FFFCA588 FF FF FF FF FF FF FF FF     
   7514 FFFCA590 FF FF FF FF FF FF FF FF     
   7515 FFFCA598 FF FF FF FF FF FF FF FF     
   7516 FFFCA5A0 FF FF FF FF FF FF FF FF     
   7517 FFFCA5A8 FF FF FF FF FF FF FF FF     
   7518 FFFCA5B0 FF FF FF FF FF FF FF FF     
   7519 FFFCA5B8 FF FF FF FF FF FF FF FF     
   7520 FFFCA5C0 FF FF FF FF FF FF FF FF     
   7521 FFFCA5C8 FF FF FF FF FF FF FF FF     
   7522 FFFCA5D0 FF FF FF FF FF FF FF FF     
   7523 FFFCA5D8 FF FF FF FF FF FF FF FF     
   7524 FFFCA5E0 FF FF FF FF FF FF FF FF     
   7525 FFFCA5E8 FF FF FF FF FF FF FF FF     
   7526 FFFCA5F0 FF FF FF FF FF FF FF FF     
   7527 FFFCA5F8 FF FF FF FF FF FF FF FF     
   7528 FFFCA600 FF FF FF FF FF FF FF FF     
   7529 FFFCA608 FF FF FF FF FF FF FF FF     
   7530 FFFCA610 FF FF FF FF FF FF FF FF     
   7531 FFFCA618 FF FF FF FF FF FF FF FF     
   7532 FFFCA620 FF FF FF FF FF FF FF FF     
   7533 FFFCA628 FF FF FF FF FF FF FF FF     
   7534 FFFCA630 FF FF FF FF FF FF FF FF     
   7535 FFFCA638 FF FF FF FF FF FF FF FF     
   7536 FFFCA640 FF FF FF FF FF FF FF FF     
   7537 FFFCA648 FF FF FF FF FF FF FF FF     
   7538 FFFCA650 FF FF FF FF FF FF FF FF     
   7539 FFFCA658 FF FF FF FF FF FF FF FF     
   7540 FFFCA660 FF FF FF FF FF FF FF FF     
   7541 FFFCA668 FF FF FF FF FF FF FF FF     
   7542 FFFCA670 FF FF FF FF FF FF FF FF     
   7543 FFFCA678 FF FF FF FF FF FF FF FF     
   7544 FFFCA680 FF FF FF FF FF FF FF FF     
   7545 FFFCA688 FF FF FF FF FF FF FF FF     
   7546 FFFCA690 FF FF FF FF FF FF FF FF     
   7547 FFFCA698 FF FF FF FF FF FF FF FF     
   7548 FFFCA6A0 FF FF FF FF FF FF FF FF     
   7549 FFFCA6A8 FF FF FF FF FF FF FF FF     
   7550 FFFCA6B0 FF FF FF FF FF FF FF FF     
   7551 FFFCA6B8 FF FF FF FF FF FF FF FF     
   7552 FFFCA6C0 FF FF FF FF FF FF FF FF     
   7553 FFFCA6C8 FF FF FF FF FF FF FF FF     
   7554 FFFCA6D0 FF FF FF FF FF FF FF FF     
   7555 FFFCA6D8 FF FF FF FF FF FF FF FF     
   7556 FFFCA6E0 FF FF FF FF FF FF FF FF     
   7557 FFFCA6E8 FF FF FF FF FF FF FF FF     
   7558 FFFCA6F0 FF FF FF FF FF FF FF FF     
   7559 FFFCA6F8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 73
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7560 FFFCA700 FF FF FF FF FF FF FF FF     
   7561 FFFCA708 FF FF FF FF FF FF FF FF     
   7562 FFFCA710 FF FF FF FF FF FF FF FF     
   7563 FFFCA718 FF FF FF FF FF FF FF FF     
   7564 FFFCA720 FF FF FF FF FF FF FF FF     
   7565 FFFCA728 FF FF FF FF FF FF FF FF     
   7566 FFFCA730 FF FF FF FF FF FF FF FF     
   7567 FFFCA738 FF FF FF FF FF FF FF FF     
   7568 FFFCA740 FF FF FF FF FF FF FF FF     
   7569 FFFCA748 FF FF FF FF FF FF FF FF     
   7570 FFFCA750 FF FF FF FF FF FF FF FF     
   7571 FFFCA758 FF FF FF FF FF FF FF FF     
   7572 FFFCA760 FF FF FF FF FF FF FF FF     
   7573 FFFCA768 FF FF FF FF FF FF FF FF     
   7574 FFFCA770 FF FF FF FF FF FF FF FF     
   7575 FFFCA778 FF FF FF FF FF FF FF FF     
   7576 FFFCA780 FF FF FF FF FF FF FF FF     
   7577 FFFCA788 FF FF FF FF FF FF FF FF     
   7578 FFFCA790 FF FF FF FF FF FF FF FF     
   7579 FFFCA798 FF FF FF FF FF FF FF FF     
   7580 FFFCA7A0 FF FF FF FF FF FF FF FF     
   7581 FFFCA7A8 FF FF FF FF FF FF FF FF     
   7582 FFFCA7B0 FF FF FF FF FF FF FF FF     
   7583 FFFCA7B8 FF FF FF FF FF FF FF FF     
   7584 FFFCA7C0 FF FF FF FF FF FF FF FF     
   7585 FFFCA7C8 FF FF FF FF FF FF FF FF     
   7586 FFFCA7D0 FF FF FF FF FF FF FF FF     
   7587 FFFCA7D8 FF FF FF FF FF FF FF FF     
   7588 FFFCA7E0 FF FF FF FF FF FF FF FF     
   7589 FFFCA7E8 FF FF FF FF FF FF FF FF     
   7590 FFFCA7F0 FF FF FF FF FF FF FF FF     
   7591 FFFCA7F8 FF FF FF FF FF FF FF FF     
   7592 FFFCA800 FF FF FF FF FF FF FF FF     
   7593 FFFCA808 FF FF FF FF FF FF FF FF     
   7594 FFFCA810 FF FF FF FF FF FF FF FF     
   7595 FFFCA818 FF FF FF FF FF FF FF FF     
   7596 FFFCA820 FF FF FF FF FF FF FF FF     
   7597 FFFCA828 FF FF FF FF FF FF FF FF     
   7598 FFFCA830 FF FF FF FF FF FF FF FF     
   7599 FFFCA838 FF FF FF FF FF FF FF FF     
   7600 FFFCA840 FF FF FF FF FF FF FF FF     
   7601 FFFCA848 FF FF FF FF FF FF FF FF     
   7602 FFFCA850 FF FF FF FF FF FF FF FF     
   7603 FFFCA858 FF FF FF FF FF FF FF FF     
   7604 FFFCA860 FF FF FF FF FF FF FF FF     
   7605 FFFCA868 FF FF FF FF FF FF FF FF     
   7606 FFFCA870 FF FF FF FF FF FF FF FF     
   7607 FFFCA878 FF FF FF FF FF FF FF FF     
   7608 FFFCA880 FF FF FF FF FF FF FF FF     
   7609 FFFCA888 FF FF FF FF FF FF FF FF     
   7610 FFFCA890 FF FF FF FF FF FF FF FF     
   7611 FFFCA898 FF FF FF FF FF FF FF FF     
   7612 FFFCA8A0 FF FF FF FF FF FF FF FF     
   7613 FFFCA8A8 FF FF FF FF FF FF FF FF     
   7614 FFFCA8B0 FF FF FF FF FF FF FF FF     
   7615 FFFCA8B8 FF FF FF FF FF FF FF FF     
   7616 FFFCA8C0 FF FF FF FF FF FF FF FF     
   7617 FFFCA8C8 FF FF FF FF FF FF FF FF     
   7618 FFFCA8D0 FF FF FF FF FF FF FF FF     
   7619 FFFCA8D8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 74
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7620 FFFCA8E0 FF FF FF FF FF FF FF FF     
   7621 FFFCA8E8 FF FF FF FF FF FF FF FF     
   7622 FFFCA8F0 FF FF FF FF FF FF FF FF     
   7623 FFFCA8F8 FF FF FF FF FF FF FF FF     
   7624 FFFCA900 FF FF FF FF FF FF FF FF     
   7625 FFFCA908 FF FF FF FF FF FF FF FF     
   7626 FFFCA910 FF FF FF FF FF FF FF FF     
   7627 FFFCA918 FF FF FF FF FF FF FF FF     
   7628 FFFCA920 FF FF FF FF FF FF FF FF     
   7629 FFFCA928 FF FF FF FF FF FF FF FF     
   7630 FFFCA930 FF FF FF FF FF FF FF FF     
   7631 FFFCA938 FF FF FF FF FF FF FF FF     
   7632 FFFCA940 FF FF FF FF FF FF FF FF     
   7633 FFFCA948 FF FF FF FF FF FF FF FF     
   7634 FFFCA950 FF FF FF FF FF FF FF FF     
   7635 FFFCA958 FF FF FF FF FF FF FF FF     
   7636 FFFCA960 FF FF FF FF FF FF FF FF     
   7637 FFFCA968 FF FF FF FF FF FF FF FF     
   7638 FFFCA970 FF FF FF FF FF FF FF FF     
   7639 FFFCA978 FF FF FF FF FF FF FF FF     
   7640 FFFCA980 FF FF FF FF FF FF FF FF     
   7641 FFFCA988 FF FF FF FF FF FF FF FF     
   7642 FFFCA990 FF FF FF FF FF FF FF FF     
   7643 FFFCA998 FF FF FF FF FF FF FF FF     
   7644 FFFCA9A0 FF FF FF FF FF FF FF FF     
   7645 FFFCA9A8 FF FF FF FF FF FF FF FF     
   7646 FFFCA9B0 FF FF FF FF FF FF FF FF     
   7647 FFFCA9B8 FF FF FF FF FF FF FF FF     
   7648 FFFCA9C0 FF FF FF FF FF FF FF FF     
   7649 FFFCA9C8 FF FF FF FF FF FF FF FF     
   7650 FFFCA9D0 FF FF FF FF FF FF FF FF     
   7651 FFFCA9D8 FF FF FF FF FF FF FF FF     
   7652 FFFCA9E0 FF FF FF FF FF FF FF FF     
   7653 FFFCA9E8 FF FF FF FF FF FF FF FF     
   7654 FFFCA9F0 FF FF FF FF FF FF FF FF     
   7655 FFFCA9F8 FF FF FF FF FF FF FF FF     
   7656 FFFCAA00 FF FF FF FF FF FF FF FF     
   7657 FFFCAA08 FF FF FF FF FF FF FF FF     
   7658 FFFCAA10 FF FF FF FF FF FF FF FF     
   7659 FFFCAA18 FF FF FF FF FF FF FF FF     
   7660 FFFCAA20 FF FF FF FF FF FF FF FF     
   7661 FFFCAA28 FF FF FF FF FF FF FF FF     
   7662 FFFCAA30 FF FF FF FF FF FF FF FF     
   7663 FFFCAA38 FF FF FF FF FF FF FF FF     
   7664 FFFCAA40 FF FF FF FF FF FF FF FF     
   7665 FFFCAA48 FF FF FF FF FF FF FF FF     
   7666 FFFCAA50 FF FF FF FF FF FF FF FF     
   7667 FFFCAA58 FF FF FF FF FF FF FF FF     
   7668 FFFCAA60 FF FF FF FF FF FF FF FF     
   7669 FFFCAA68 FF FF FF FF FF FF FF FF     
   7670 FFFCAA70 FF FF FF FF FF FF FF FF     
   7671 FFFCAA78 FF FF FF FF FF FF FF FF     
   7672 FFFCAA80 FF FF FF FF FF FF FF FF     
   7673 FFFCAA88 FF FF FF FF FF FF FF FF     
   7674 FFFCAA90 FF FF FF FF FF FF FF FF     
   7675 FFFCAA98 FF FF FF FF FF FF FF FF     
   7676 FFFCAAA0 FF FF FF FF FF FF FF FF     
   7677 FFFCAAA8 FF FF FF FF FF FF FF FF     
   7678 FFFCAAB0 FF FF FF FF FF FF FF FF     
   7679 FFFCAAB8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 75
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7680 FFFCAAC0 FF FF FF FF FF FF FF FF     
   7681 FFFCAAC8 FF FF FF FF FF FF FF FF     
   7682 FFFCAAD0 FF FF FF FF FF FF FF FF     
   7683 FFFCAAD8 FF FF FF FF FF FF FF FF     
   7684 FFFCAAE0 FF FF FF FF FF FF FF FF     
   7685 FFFCAAE8 FF FF FF FF FF FF FF FF     
   7686 FFFCAAF0 FF FF FF FF FF FF FF FF     
   7687 FFFCAAF8 FF FF FF FF FF FF FF FF     
   7688 FFFCAB00 FF FF FF FF FF FF FF FF     
   7689 FFFCAB08 FF FF FF FF FF FF FF FF     
   7690 FFFCAB10 FF FF FF FF FF FF FF FF     
   7691 FFFCAB18 FF FF FF FF FF FF FF FF     
   7692 FFFCAB20 FF FF FF FF FF FF FF FF     
   7693 FFFCAB28 FF FF FF FF FF FF FF FF     
   7694 FFFCAB30 FF FF FF FF FF FF FF FF     
   7695 FFFCAB38 FF FF FF FF FF FF FF FF     
   7696 FFFCAB40 FF FF FF FF FF FF FF FF     
   7697 FFFCAB48 FF FF FF FF FF FF FF FF     
   7698 FFFCAB50 FF FF FF FF FF FF FF FF     
   7699 FFFCAB58 FF FF FF FF FF FF FF FF     
   7700 FFFCAB60 FF FF FF FF FF FF FF FF     
   7701 FFFCAB68 FF FF FF FF FF FF FF FF     
   7702 FFFCAB70 FF FF FF FF FF FF FF FF     
   7703 FFFCAB78 FF FF FF FF FF FF FF FF     
   7704 FFFCAB80 FF FF FF FF FF FF FF FF     
   7705 FFFCAB88 FF FF FF FF FF FF FF FF     
   7706 FFFCAB90 FF FF FF FF FF FF FF FF     
   7707 FFFCAB98 FF FF FF FF FF FF FF FF     
   7708 FFFCABA0 FF FF FF FF FF FF FF FF     
   7709 FFFCABA8 FF FF FF FF FF FF FF FF     
   7710 FFFCABB0 FF FF FF FF FF FF FF FF     
   7711 FFFCABB8 FF FF FF FF FF FF FF FF     
   7712 FFFCABC0 FF FF FF FF FF FF FF FF     
   7713 FFFCABC8 FF FF FF FF FF FF FF FF     
   7714 FFFCABD0 FF FF FF FF FF FF FF FF     
   7715 FFFCABD8 FF FF FF FF FF FF FF FF     
   7716 FFFCABE0 FF FF FF FF FF FF FF FF     
   7717 FFFCABE8 FF FF FF FF FF FF FF FF     
   7718 FFFCABF0 FF FF FF FF FF FF FF FF     
   7719 FFFCABF8 FF FF FF FF FF FF FF FF     
   7720 FFFCAC00 FF FF FF FF FF FF FF FF     
   7721 FFFCAC08 FF FF FF FF FF FF FF FF     
   7722 FFFCAC10 FF FF FF FF FF FF FF FF     
   7723 FFFCAC18 FF FF FF FF FF FF FF FF     
   7724 FFFCAC20 FF FF FF FF FF FF FF FF     
   7725 FFFCAC28 FF FF FF FF FF FF FF FF     
   7726 FFFCAC30 FF FF FF FF FF FF FF FF     
   7727 FFFCAC38 FF FF FF FF FF FF FF FF     
   7728 FFFCAC40 FF FF FF FF FF FF FF FF     
   7729 FFFCAC48 FF FF FF FF FF FF FF FF     
   7730 FFFCAC50 FF FF FF FF FF FF FF FF     
   7731 FFFCAC58 FF FF FF FF FF FF FF FF     
   7732 FFFCAC60 FF FF FF FF FF FF FF FF     
   7733 FFFCAC68 FF FF FF FF FF FF FF FF     
   7734 FFFCAC70 FF FF FF FF FF FF FF FF     
   7735 FFFCAC78 FF FF FF FF FF FF FF FF     
   7736 FFFCAC80 FF FF FF FF FF FF FF FF     
   7737 FFFCAC88 FF FF FF FF FF FF FF FF     
   7738 FFFCAC90 FF FF FF FF FF FF FF FF     
   7739 FFFCAC98 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 76
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7740 FFFCACA0 FF FF FF FF FF FF FF FF     
   7741 FFFCACA8 FF FF FF FF FF FF FF FF     
   7742 FFFCACB0 FF FF FF FF FF FF FF FF     
   7743 FFFCACB8 FF FF FF FF FF FF FF FF     
   7744 FFFCACC0 FF FF FF FF FF FF FF FF     
   7745 FFFCACC8 FF FF FF FF FF FF FF FF     
   7746 FFFCACD0 FF FF FF FF FF FF FF FF     
   7747 FFFCACD8 FF FF FF FF FF FF FF FF     
   7748 FFFCACE0 FF FF FF FF FF FF FF FF     
   7749 FFFCACE8 FF FF FF FF FF FF FF FF     
   7750 FFFCACF0 FF FF FF FF FF FF FF FF     
   7751 FFFCACF8 FF FF FF FF FF FF FF FF     
   7752 FFFCAD00 FF FF FF FF FF FF FF FF     
   7753 FFFCAD08 FF FF FF FF FF FF FF FF     
   7754 FFFCAD10 FF FF FF FF FF FF FF FF     
   7755 FFFCAD18 FF FF FF FF FF FF FF FF     
   7756 FFFCAD20 FF FF FF FF FF FF FF FF     
   7757 FFFCAD28 FF FF FF FF FF FF FF FF     
   7758 FFFCAD30 FF FF FF FF FF FF FF FF     
   7759 FFFCAD38 FF FF FF FF FF FF FF FF     
   7760 FFFCAD40 FF FF FF FF FF FF FF FF     
   7761 FFFCAD48 FF FF FF FF FF FF FF FF     
   7762 FFFCAD50 FF FF FF FF FF FF FF FF     
   7763 FFFCAD58 FF FF FF FF FF FF FF FF     
   7764 FFFCAD60 FF FF FF FF FF FF FF FF     
   7765 FFFCAD68 FF FF FF FF FF FF FF FF     
   7766 FFFCAD70 FF FF FF FF FF FF FF FF     
   7767 FFFCAD78 FF FF FF FF FF FF FF FF     
   7768 FFFCAD80 FF FF FF FF FF FF FF FF     
   7769 FFFCAD88 FF FF FF FF FF FF FF FF     
   7770 FFFCAD90 FF FF FF FF FF FF FF FF     
   7771 FFFCAD98 FF FF FF FF FF FF FF FF     
   7772 FFFCADA0 FF FF FF FF FF FF FF FF     
   7773 FFFCADA8 FF FF FF FF FF FF FF FF     
   7774 FFFCADB0 FF FF FF FF FF FF FF FF     
   7775 FFFCADB8 FF FF FF FF FF FF FF FF     
   7776 FFFCADC0 FF FF FF FF FF FF FF FF     
   7777 FFFCADC8 FF FF FF FF FF FF FF FF     
   7778 FFFCADD0 FF FF FF FF FF FF FF FF     
   7779 FFFCADD8 FF FF FF FF FF FF FF FF     
   7780 FFFCADE0 FF FF FF FF FF FF FF FF     
   7781 FFFCADE8 FF FF FF FF FF FF FF FF     
   7782 FFFCADF0 FF FF FF FF FF FF FF FF     
   7783 FFFCADF8 FF FF FF FF FF FF FF FF     
   7784 FFFCAE00 FF FF FF FF FF FF FF FF     
   7785 FFFCAE08 FF FF FF FF FF FF FF FF     
   7786 FFFCAE10 FF FF FF FF FF FF FF FF     
   7787 FFFCAE18 FF FF FF FF FF FF FF FF     
   7788 FFFCAE20 FF FF FF FF FF FF FF FF     
   7789 FFFCAE28 FF FF FF FF FF FF FF FF     
   7790 FFFCAE30 FF FF FF FF FF FF FF FF     
   7791 FFFCAE38 FF FF FF FF FF FF FF FF     
   7792 FFFCAE40 FF FF FF FF FF FF FF FF     
   7793 FFFCAE48 FF FF FF FF FF FF FF FF     
   7794 FFFCAE50 FF FF FF FF FF FF FF FF     
   7795 FFFCAE58 FF FF FF FF FF FF FF FF     
   7796 FFFCAE60 FF FF FF FF FF FF FF FF     
   7797 FFFCAE68 FF FF FF FF FF FF FF FF     
   7798 FFFCAE70 FF FF FF FF FF FF FF FF     
   7799 FFFCAE78 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 77
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7800 FFFCAE80 FF FF FF FF FF FF FF FF     
   7801 FFFCAE88 FF FF FF FF FF FF FF FF     
   7802 FFFCAE90 FF FF FF FF FF FF FF FF     
   7803 FFFCAE98 FF FF FF FF FF FF FF FF     
   7804 FFFCAEA0 FF FF FF FF FF FF FF FF     
   7805 FFFCAEA8 FF FF FF FF FF FF FF FF     
   7806 FFFCAEB0 FF FF FF FF FF FF FF FF     
   7807 FFFCAEB8 FF FF FF FF FF FF FF FF     
   7808 FFFCAEC0 FF FF FF FF FF FF FF FF     
   7809 FFFCAEC8 FF FF FF FF FF FF FF FF     
   7810 FFFCAED0 FF FF FF FF FF FF FF FF     
   7811 FFFCAED8 FF FF FF FF FF FF FF FF     
   7812 FFFCAEE0 FF FF FF FF FF FF FF FF     
   7813 FFFCAEE8 FF FF FF FF FF FF FF FF     
   7814 FFFCAEF0 FF FF FF FF FF FF FF FF     
   7815 FFFCAEF8 FF FF FF FF FF FF FF FF     
   7816 FFFCAF00 FF FF FF FF FF FF FF FF     
   7817 FFFCAF08 FF FF FF FF FF FF FF FF     
   7818 FFFCAF10 FF FF FF FF FF FF FF FF     
   7819 FFFCAF18 FF FF FF FF FF FF FF FF     
   7820 FFFCAF20 FF FF FF FF FF FF FF FF     
   7821 FFFCAF28 FF FF FF FF FF FF FF FF     
   7822 FFFCAF30 FF FF FF FF FF FF FF FF     
   7823 FFFCAF38 FF FF FF FF FF FF FF FF     
   7824 FFFCAF40 FF FF FF FF FF FF FF FF     
   7825 FFFCAF48 FF FF FF FF FF FF FF FF     
   7826 FFFCAF50 FF FF FF FF FF FF FF FF     
   7827 FFFCAF58 FF FF FF FF FF FF FF FF     
   7828 FFFCAF60 FF FF FF FF FF FF FF FF     
   7829 FFFCAF68 FF FF FF FF FF FF FF FF     
   7830 FFFCAF70 FF FF FF FF FF FF FF FF     
   7831 FFFCAF78 FF FF FF FF FF FF FF FF     
   7832 FFFCAF80 FF FF FF FF FF FF FF FF     
   7833 FFFCAF88 FF FF FF FF FF FF FF FF     
   7834 FFFCAF90 FF FF FF FF FF FF FF FF     
   7835 FFFCAF98 FF FF FF FF FF FF FF FF     
   7836 FFFCAFA0 FF FF FF FF FF FF FF FF     
   7837 FFFCAFA8 FF FF FF FF FF FF FF FF     
   7838 FFFCAFB0 FF FF FF FF FF FF FF FF     
   7839 FFFCAFB8 FF FF FF FF FF FF FF FF     
   7840 FFFCAFC0 FF FF FF FF FF FF FF FF     
   7841 FFFCAFC8 FF FF FF FF FF FF FF FF     
   7842 FFFCAFD0 FF FF FF FF FF FF FF FF     
   7843 FFFCAFD8 FF FF FF FF FF FF FF FF     
   7844 FFFCAFE0 FF FF FF FF FF FF FF FF     
   7845 FFFCAFE8 FF FF FF FF FF FF FF FF     
   7846 FFFCAFF0 FF FF FF FF FF FF FF FF     
   7847 FFFCAFF8 FF FF FF FF FF FF FF FF     
   7848 FFFCB000 FF FF FF FF FF FF FF FF     
   7849 FFFCB008 FF FF FF FF FF FF FF FF     
   7850 FFFCB010 FF FF FF FF FF FF FF FF     
   7851 FFFCB018 FF FF FF FF FF FF FF FF     
   7852 FFFCB020 FF FF FF FF FF FF FF FF     
   7853 FFFCB028 FF FF FF FF FF FF FF FF     
   7854 FFFCB030 FF FF FF FF FF FF FF FF     
   7855 FFFCB038 FF FF FF FF FF FF FF FF     
   7856 FFFCB040 FF FF FF FF FF FF FF FF     
   7857 FFFCB048 FF FF FF FF FF FF FF FF     
   7858 FFFCB050 FF FF FF FF FF FF FF FF     
   7859 FFFCB058 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 78
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7860 FFFCB060 FF FF FF FF FF FF FF FF     
   7861 FFFCB068 FF FF FF FF FF FF FF FF     
   7862 FFFCB070 FF FF FF FF FF FF FF FF     
   7863 FFFCB078 FF FF FF FF FF FF FF FF     
   7864 FFFCB080 FF FF FF FF FF FF FF FF     
   7865 FFFCB088 FF FF FF FF FF FF FF FF     
   7866 FFFCB090 FF FF FF FF FF FF FF FF     
   7867 FFFCB098 FF FF FF FF FF FF FF FF     
   7868 FFFCB0A0 FF FF FF FF FF FF FF FF     
   7869 FFFCB0A8 FF FF FF FF FF FF FF FF     
   7870 FFFCB0B0 FF FF FF FF FF FF FF FF     
   7871 FFFCB0B8 FF FF FF FF FF FF FF FF     
   7872 FFFCB0C0 FF FF FF FF FF FF FF FF     
   7873 FFFCB0C8 FF FF FF FF FF FF FF FF     
   7874 FFFCB0D0 FF FF FF FF FF FF FF FF     
   7875 FFFCB0D8 FF FF FF FF FF FF FF FF     
   7876 FFFCB0E0 FF FF FF FF FF FF FF FF     
   7877 FFFCB0E8 FF FF FF FF FF FF FF FF     
   7878 FFFCB0F0 FF FF FF FF FF FF FF FF     
   7879 FFFCB0F8 FF FF FF FF FF FF FF FF     
   7880 FFFCB100 FF FF FF FF FF FF FF FF     
   7881 FFFCB108 FF FF FF FF FF FF FF FF     
   7882 FFFCB110 FF FF FF FF FF FF FF FF     
   7883 FFFCB118 FF FF FF FF FF FF FF FF     
   7884 FFFCB120 FF FF FF FF FF FF FF FF     
   7885 FFFCB128 FF FF FF FF FF FF FF FF     
   7886 FFFCB130 FF FF FF FF FF FF FF FF     
   7887 FFFCB138 FF FF FF FF FF FF FF FF     
   7888 FFFCB140 FF FF FF FF FF FF FF FF     
   7889 FFFCB148 FF FF FF FF FF FF FF FF     
   7890 FFFCB150 FF FF FF FF FF FF FF FF     
   7891 FFFCB158 FF FF FF FF FF FF FF FF     
   7892 FFFCB160 FF FF FF FF FF FF FF FF     
   7893 FFFCB168 FF FF FF FF FF FF FF FF     
   7894 FFFCB170 FF FF FF FF FF FF FF FF     
   7895 FFFCB178 FF FF FF FF FF FF FF FF     
   7896 FFFCB180 FF FF FF FF FF FF FF FF     
   7897 FFFCB188 FF FF FF FF FF FF FF FF     
   7898 FFFCB190 FF FF FF FF FF FF FF FF     
   7899 FFFCB198 FF FF FF FF FF FF FF FF     
   7900 FFFCB1A0 FF FF FF FF FF FF FF FF     
   7901 FFFCB1A8 FF FF FF FF FF FF FF FF     
   7902 FFFCB1B0 FF FF FF FF FF FF FF FF     
   7903 FFFCB1B8 FF FF FF FF FF FF FF FF     
   7904 FFFCB1C0 FF FF FF FF FF FF FF FF     
   7905 FFFCB1C8 FF FF FF FF FF FF FF FF     
   7906 FFFCB1D0 FF FF FF FF FF FF FF FF     
   7907 FFFCB1D8 FF FF FF FF FF FF FF FF     
   7908 FFFCB1E0 FF FF FF FF FF FF FF FF     
   7909 FFFCB1E8 FF FF FF FF FF FF FF FF     
   7910 FFFCB1F0 FF FF FF FF FF FF FF FF     
   7911 FFFCB1F8 FF FF FF FF FF FF FF FF     
   7912 FFFCB200 FF FF FF FF FF FF FF FF     
   7913 FFFCB208 FF FF FF FF FF FF FF FF     
   7914 FFFCB210 FF FF FF FF FF FF FF FF     
   7915 FFFCB218 FF FF FF FF FF FF FF FF     
   7916 FFFCB220 FF FF FF FF FF FF FF FF     
   7917 FFFCB228 FF FF FF FF FF FF FF FF     
   7918 FFFCB230 FF FF FF FF FF FF FF FF     
   7919 FFFCB238 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 79
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7920 FFFCB240 FF FF FF FF FF FF FF FF     
   7921 FFFCB248 FF FF FF FF FF FF FF FF     
   7922 FFFCB250 FF FF FF FF FF FF FF FF     
   7923 FFFCB258 FF FF FF FF FF FF FF FF     
   7924 FFFCB260 FF FF FF FF FF FF FF FF     
   7925 FFFCB268 FF FF FF FF FF FF FF FF     
   7926 FFFCB270 FF FF FF FF FF FF FF FF     
   7927 FFFCB278 FF FF FF FF FF FF FF FF     
   7928 FFFCB280 FF FF FF FF FF FF FF FF     
   7929 FFFCB288 FF FF FF FF FF FF FF FF     
   7930 FFFCB290 FF FF FF FF FF FF FF FF     
   7931 FFFCB298 FF FF FF FF FF FF FF FF     
   7932 FFFCB2A0 FF FF FF FF FF FF FF FF     
   7933 FFFCB2A8 FF FF FF FF FF FF FF FF     
   7934 FFFCB2B0 FF FF FF FF FF FF FF FF     
   7935 FFFCB2B8 FF FF FF FF FF FF FF FF     
   7936 FFFCB2C0 FF FF FF FF FF FF FF FF     
   7937 FFFCB2C8 FF FF FF FF FF FF FF FF     
   7938 FFFCB2D0 FF FF FF FF FF FF FF FF     
   7939 FFFCB2D8 FF FF FF FF FF FF FF FF     
   7940 FFFCB2E0 FF FF FF FF FF FF FF FF     
   7941 FFFCB2E8 FF FF FF FF FF FF FF FF     
   7942 FFFCB2F0 FF FF FF FF FF FF FF FF     
   7943 FFFCB2F8 FF FF FF FF FF FF FF FF     
   7944 FFFCB300 FF FF FF FF FF FF FF FF     
   7945 FFFCB308 FF FF FF FF FF FF FF FF     
   7946 FFFCB310 FF FF FF FF FF FF FF FF     
   7947 FFFCB318 FF FF FF FF FF FF FF FF     
   7948 FFFCB320 FF FF FF FF FF FF FF FF     
   7949 FFFCB328 FF FF FF FF FF FF FF FF     
   7950 FFFCB330 FF FF FF FF FF FF FF FF     
   7951 FFFCB338 FF FF FF FF FF FF FF FF     
   7952 FFFCB340 FF FF FF FF FF FF FF FF     
   7953 FFFCB348 FF FF FF FF FF FF FF FF     
   7954 FFFCB350 FF FF FF FF FF FF FF FF     
   7955 FFFCB358 FF FF FF FF FF FF FF FF     
   7956 FFFCB360 FF FF FF FF FF FF FF FF     
   7957 FFFCB368 FF FF FF FF FF FF FF FF     
   7958 FFFCB370 FF FF FF FF FF FF FF FF     
   7959 FFFCB378 FF FF FF FF FF FF FF FF     
   7960 FFFCB380 FF FF FF FF FF FF FF FF     
   7961 FFFCB388 FF FF FF FF FF FF FF FF     
   7962 FFFCB390 FF FF FF FF FF FF FF FF     
   7963 FFFCB398 FF FF FF FF FF FF FF FF     
   7964 FFFCB3A0 FF FF FF FF FF FF FF FF     
   7965 FFFCB3A8 FF FF FF FF FF FF FF FF     
   7966 FFFCB3B0 FF FF FF FF FF FF FF FF     
   7967 FFFCB3B8 FF FF FF FF FF FF FF FF     
   7968 FFFCB3C0 FF FF FF FF FF FF FF FF     
   7969 FFFCB3C8 FF FF FF FF FF FF FF FF     
   7970 FFFCB3D0 FF FF FF FF FF FF FF FF     
   7971 FFFCB3D8 FF FF FF FF FF FF FF FF     
   7972 FFFCB3E0 FF FF FF FF FF FF FF FF     
   7973 FFFCB3E8 FF FF FF FF FF FF FF FF     
   7974 FFFCB3F0 FF FF FF FF FF FF FF FF     
   7975 FFFCB3F8 FF FF FF FF FF FF FF FF     
   7976 FFFCB400 FF FF FF FF FF FF FF FF     
   7977 FFFCB408 FF FF FF FF FF FF FF FF     
   7978 FFFCB410 FF FF FF FF FF FF FF FF     
   7979 FFFCB418 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 80
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7980 FFFCB420 FF FF FF FF FF FF FF FF     
   7981 FFFCB428 FF FF FF FF FF FF FF FF     
   7982 FFFCB430 FF FF FF FF FF FF FF FF     
   7983 FFFCB438 FF FF FF FF FF FF FF FF     
   7984 FFFCB440 FF FF FF FF FF FF FF FF     
   7985 FFFCB448 FF FF FF FF FF FF FF FF     
   7986 FFFCB450 FF FF FF FF FF FF FF FF     
   7987 FFFCB458 FF FF FF FF FF FF FF FF     
   7988 FFFCB460 FF FF FF FF FF FF FF FF     
   7989 FFFCB468 FF FF FF FF FF FF FF FF     
   7990 FFFCB470 FF FF FF FF FF FF FF FF     
   7991 FFFCB478 FF FF FF FF FF FF FF FF     
   7992 FFFCB480 FF FF FF FF FF FF FF FF     
   7993 FFFCB488 FF FF FF FF FF FF FF FF     
   7994 FFFCB490 FF FF FF FF FF FF FF FF     
   7995 FFFCB498 FF FF FF FF FF FF FF FF     
   7996 FFFCB4A0 FF FF FF FF FF FF FF FF     
   7997 FFFCB4A8 FF FF FF FF FF FF FF FF     
   7998 FFFCB4B0 FF FF FF FF FF FF FF FF     
   7999 FFFCB4B8 FF FF FF FF FF FF FF FF     
   8000 FFFCB4C0 FF FF FF FF FF FF FF FF     
   8001 FFFCB4C8 FF FF FF FF FF FF FF FF     
   8002 FFFCB4D0 FF FF FF FF FF FF FF FF     
   8003 FFFCB4D8 FF FF FF FF FF FF FF FF     
   8004 FFFCB4E0 FF FF FF FF FF FF FF FF     
   8005 FFFCB4E8 FF FF FF FF FF FF FF FF     
   8006 FFFCB4F0 FF FF FF FF FF FF FF FF     
   8007 FFFCB4F8 FF FF FF FF FF FF FF FF     
   8008 FFFCB500 FF FF FF FF FF FF FF FF     
   8009 FFFCB508 FF FF FF FF FF FF FF FF     
   8010 FFFCB510 FF FF FF FF FF FF FF FF     
   8011 FFFCB518 FF FF FF FF FF FF FF FF     
   8012 FFFCB520 FF FF FF FF FF FF FF FF     
   8013 FFFCB528 FF FF FF FF FF FF FF FF     
   8014 FFFCB530 FF FF FF FF FF FF FF FF     
   8015 FFFCB538 FF FF FF FF FF FF FF FF     
   8016 FFFCB540 FF FF FF FF FF FF FF FF     
   8017 FFFCB548 FF FF FF FF FF FF FF FF     
   8018 FFFCB550 FF FF FF FF FF FF FF FF     
   8019 FFFCB558 FF FF FF FF FF FF FF FF     
   8020 FFFCB560 FF FF FF FF FF FF FF FF     
   8021 FFFCB568 FF FF FF FF FF FF FF FF     
   8022 FFFCB570 FF FF FF FF FF FF FF FF     
   8023 FFFCB578 FF FF FF FF FF FF FF FF     
   8024 FFFCB580 FF FF FF FF FF FF FF FF     
   8025 FFFCB588 FF FF FF FF FF FF FF FF     
   8026 FFFCB590 FF FF FF FF FF FF FF FF     
   8027 FFFCB598 FF FF FF FF FF FF FF FF     
   8028 FFFCB5A0 FF FF FF FF FF FF FF FF     
   8029 FFFCB5A8 FF FF FF FF FF FF FF FF     
   8030 FFFCB5B0 FF FF FF FF FF FF FF FF     
   8031 FFFCB5B8 FF FF FF FF FF FF FF FF     
   8032 FFFCB5C0 FF FF FF FF FF FF FF FF     
   8033 FFFCB5C8 FF FF FF FF FF FF FF FF     
   8034 FFFCB5D0 FF FF FF FF FF FF FF FF     
   8035 FFFCB5D8 FF FF FF FF FF FF FF FF     
   8036 FFFCB5E0 FF FF FF FF FF FF FF FF     
   8037 FFFCB5E8 FF FF FF FF FF FF FF FF     
   8038 FFFCB5F0 FF FF FF FF FF FF FF FF     
   8039 FFFCB5F8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 81
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8040 FFFCB600 FF FF FF FF FF FF FF FF     
   8041 FFFCB608 FF FF FF FF FF FF FF FF     
   8042 FFFCB610 FF FF FF FF FF FF FF FF     
   8043 FFFCB618 FF FF FF FF FF FF FF FF     
   8044 FFFCB620 FF FF FF FF FF FF FF FF     
   8045 FFFCB628 FF FF FF FF FF FF FF FF     
   8046 FFFCB630 FF FF FF FF FF FF FF FF     
   8047 FFFCB638 FF FF FF FF FF FF FF FF     
   8048 FFFCB640 FF FF FF FF FF FF FF FF     
   8049 FFFCB648 FF FF FF FF FF FF FF FF     
   8050 FFFCB650 FF FF FF FF FF FF FF FF     
   8051 FFFCB658 FF FF FF FF FF FF FF FF     
   8052 FFFCB660 FF FF FF FF FF FF FF FF     
   8053 FFFCB668 FF FF FF FF FF FF FF FF     
   8054 FFFCB670 FF FF FF FF FF FF FF FF     
   8055 FFFCB678 FF FF FF FF FF FF FF FF     
   8056 FFFCB680 FF FF FF FF FF FF FF FF     
   8057 FFFCB688 FF FF FF FF FF FF FF FF     
   8058 FFFCB690 FF FF FF FF FF FF FF FF     
   8059 FFFCB698 FF FF FF FF FF FF FF FF     
   8060 FFFCB6A0 FF FF FF FF FF FF FF FF     
   8061 FFFCB6A8 FF FF FF FF FF FF FF FF     
   8062 FFFCB6B0 FF FF FF FF FF FF FF FF     
   8063 FFFCB6B8 FF FF FF FF FF FF FF FF     
   8064 FFFCB6C0 FF FF FF FF FF FF FF FF     
   8065 FFFCB6C8 FF FF FF FF FF FF FF FF     
   8066 FFFCB6D0 FF FF FF FF FF FF FF FF     
   8067 FFFCB6D8 FF FF FF FF FF FF FF FF     
   8068 FFFCB6E0 FF FF FF FF FF FF FF FF     
   8069 FFFCB6E8 FF FF FF FF FF FF FF FF     
   8070 FFFCB6F0 FF FF FF FF FF FF FF FF     
   8071 FFFCB6F8 FF FF FF FF FF FF FF FF     
   8072 FFFCB700 FF FF FF FF FF FF FF FF     
   8073 FFFCB708 FF FF FF FF FF FF FF FF     
   8074 FFFCB710 FF FF FF FF FF FF FF FF     
   8075 FFFCB718 FF FF FF FF FF FF FF FF     
   8076 FFFCB720 FF FF FF FF FF FF FF FF     
   8077 FFFCB728 FF FF FF FF FF FF FF FF     
   8078 FFFCB730 FF FF FF FF FF FF FF FF     
   8079 FFFCB738 FF FF FF FF FF FF FF FF     
   8080 FFFCB740 FF FF FF FF FF FF FF FF     
   8081 FFFCB748 FF FF FF FF FF FF FF FF     
   8082 FFFCB750 FF FF FF FF FF FF FF FF     
   8083 FFFCB758 FF FF FF FF FF FF FF FF     
   8084 FFFCB760 FF FF FF FF FF FF FF FF     
   8085 FFFCB768 FF FF FF FF FF FF FF FF     
   8086 FFFCB770 FF FF FF FF FF FF FF FF     
   8087 FFFCB778 FF FF FF FF FF FF FF FF     
   8088 FFFCB780 FF FF FF FF FF FF FF FF     
   8089 FFFCB788 FF FF FF FF FF FF FF FF     
   8090 FFFCB790 FF FF FF FF FF FF FF FF     
   8091 FFFCB798 FF FF FF FF FF FF FF FF     
   8092 FFFCB7A0 FF FF FF FF FF FF FF FF     
   8093 FFFCB7A8 FF FF FF FF FF FF FF FF     
   8094 FFFCB7B0 FF FF FF FF FF FF FF FF     
   8095 FFFCB7B8 FF FF FF FF FF FF FF FF     
   8096 FFFCB7C0 FF FF FF FF FF FF FF FF     
   8097 FFFCB7C8 FF FF FF FF FF FF FF FF     
   8098 FFFCB7D0 FF FF FF FF FF FF FF FF     
   8099 FFFCB7D8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 82
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8100 FFFCB7E0 FF FF FF FF FF FF FF FF     
   8101 FFFCB7E8 FF FF FF FF FF FF FF FF     
   8102 FFFCB7F0 FF FF FF FF FF FF FF FF     
   8103 FFFCB7F8 FF FF FF FF FF FF FF FF     
   8104 FFFCB800 FF FF FF FF FF FF FF FF     
   8105 FFFCB808 FF FF FF FF FF FF FF FF     
   8106 FFFCB810 FF FF FF FF FF FF FF FF     
   8107 FFFCB818 FF FF FF FF FF FF FF FF     
   8108 FFFCB820 FF FF FF FF FF FF FF FF     
   8109 FFFCB828 FF FF FF FF FF FF FF FF     
   8110 FFFCB830 FF FF FF FF FF FF FF FF     
   8111 FFFCB838 FF FF FF FF FF FF FF FF     
   8112 FFFCB840 FF FF FF FF FF FF FF FF     
   8113 FFFCB848 FF FF FF FF FF FF FF FF     
   8114 FFFCB850 FF FF FF FF FF FF FF FF     
   8115 FFFCB858 FF FF FF FF FF FF FF FF     
   8116 FFFCB860 FF FF FF FF FF FF FF FF     
   8117 FFFCB868 FF FF FF FF FF FF FF FF     
   8118 FFFCB870 FF FF FF FF FF FF FF FF     
   8119 FFFCB878 FF FF FF FF FF FF FF FF     
   8120 FFFCB880 FF FF FF FF FF FF FF FF     
   8121 FFFCB888 FF FF FF FF FF FF FF FF     
   8122 FFFCB890 FF FF FF FF FF FF FF FF     
   8123 FFFCB898 FF FF FF FF FF FF FF FF     
   8124 FFFCB8A0 FF FF FF FF FF FF FF FF     
   8125 FFFCB8A8 FF FF FF FF FF FF FF FF     
   8126 FFFCB8B0 FF FF FF FF FF FF FF FF     
   8127 FFFCB8B8 FF FF FF FF FF FF FF FF     
   8128 FFFCB8C0 FF FF FF FF FF FF FF FF     
   8129 FFFCB8C8 FF FF FF FF FF FF FF FF     
   8130 FFFCB8D0 FF FF FF FF FF FF FF FF     
   8131 FFFCB8D8 FF FF FF FF FF FF FF FF     
   8132 FFFCB8E0 FF FF FF FF FF FF FF FF     
   8133 FFFCB8E8 FF FF FF FF FF FF FF FF     
   8134 FFFCB8F0 FF FF FF FF FF FF FF FF     
   8135 FFFCB8F8 FF FF FF FF FF FF FF FF     
   8136 FFFCB900 FF FF FF FF FF FF FF FF     
   8137 FFFCB908 FF FF FF FF FF FF FF FF     
   8138 FFFCB910 FF FF FF FF FF FF FF FF     
   8139 FFFCB918 FF FF FF FF FF FF FF FF     
   8140 FFFCB920 FF FF FF FF FF FF FF FF     
   8141 FFFCB928 FF FF FF FF FF FF FF FF     
   8142 FFFCB930 FF FF FF FF FF FF FF FF     
   8143 FFFCB938 FF FF FF FF FF FF FF FF     
   8144 FFFCB940 FF FF FF FF FF FF FF FF     
   8145 FFFCB948 FF FF FF FF FF FF FF FF     
   8146 FFFCB950 FF FF FF FF FF FF FF FF     
   8147 FFFCB958 FF FF FF FF FF FF FF FF     
   8148 FFFCB960 FF FF FF FF FF FF FF FF     
   8149 FFFCB968 FF FF FF FF FF FF FF FF     
   8150 FFFCB970 FF FF FF FF FF FF FF FF     
   8151 FFFCB978 FF FF FF FF FF FF FF FF     
   8152 FFFCB980 FF FF FF FF FF FF FF FF     
   8153 FFFCB988 FF FF FF FF FF FF FF FF     
   8154 FFFCB990 FF FF FF FF FF FF FF FF     
   8155 FFFCB998 FF FF FF FF FF FF FF FF     
   8156 FFFCB9A0 FF FF FF FF FF FF FF FF     
   8157 FFFCB9A8 FF FF FF FF FF FF FF FF     
   8158 FFFCB9B0 FF FF FF FF FF FF FF FF     
   8159 FFFCB9B8 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 83
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8160 FFFCB9C0 FF FF FF FF FF FF FF FF     
   8161 FFFCB9C8 FF FF FF FF FF FF FF FF     
   8162 FFFCB9D0 FF FF FF FF FF FF FF FF     
   8163 FFFCB9D8 FF FF FF FF FF FF FF FF     
   8164 FFFCB9E0 FF FF FF FF FF FF FF FF     
   8165 FFFCB9E8 FF FF FF FF FF FF FF FF     
   8166 FFFCB9F0 FF FF FF FF FF FF FF FF     
   8167 FFFCB9F8 FF FF FF FF FF FF FF FF     
   8168 FFFCBA00 FF FF FF FF FF FF FF FF     
   8169 FFFCBA08 FF FF FF FF FF FF FF FF     
   8170 FFFCBA10 FF FF FF FF FF FF FF FF     
   8171 FFFCBA18 FF FF FF FF FF FF FF FF     
   8172 FFFCBA20 FF FF FF FF FF FF FF FF     
   8173 FFFCBA28 FF FF FF FF FF FF FF FF     
   8174 FFFCBA30 FF FF FF FF FF FF FF FF     
   8175 FFFCBA38 FF FF FF FF FF FF FF FF     
   8176 FFFCBA40 FF FF FF FF FF FF FF FF     
   8177 FFFCBA48 FF FF FF FF FF FF FF FF     
   8178 FFFCBA50 FF FF FF FF FF FF FF FF     
   8179 FFFCBA58 FF FF FF FF FF FF FF FF     
   8180 FFFCBA60 FF FF FF FF FF FF FF FF     
   8181 FFFCBA68 FF FF FF FF FF FF FF FF     
   8182 FFFCBA70 FF FF FF FF FF FF FF FF     
   8183 FFFCBA78 FF FF FF FF FF FF FF FF     
   8184 FFFCBA80 FF FF FF FF FF FF FF FF     
   8185 FFFCBA88 FF FF FF FF FF FF FF FF     
   8186 FFFCBA90 FF FF FF FF FF FF FF FF     
   8187 FFFCBA98 FF FF FF FF FF FF FF FF     
   8188 FFFCBAA0 FF FF FF FF FF FF FF FF     
   8189 FFFCBAA8 FF FF FF FF FF FF FF FF     
   8190 FFFCBAB0 FF FF FF FF FF FF FF FF     
   8191 FFFCBAB8 FF FF FF FF FF FF FF FF     
   8192 FFFCBAC0 FF FF FF FF FF FF FF FF     
   8193 FFFCBAC8 FF FF FF FF FF FF FF FF     
   8194 FFFCBAD0 FF FF FF FF FF FF FF FF     
   8195 FFFCBAD8 FF FF FF FF FF FF FF FF     
   8196 FFFCBAE0 FF FF FF FF FF FF FF FF     
   8197 FFFCBAE8 FF FF FF FF FF FF FF FF     
   8198 FFFCBAF0 FF FF FF FF FF FF FF FF     
   8199 FFFCBAF8 FF FF FF FF FF FF FF FF     
   8200 FFFCBB00 FF FF FF FF FF FF FF FF     
   8201 FFFCBB08 FF FF FF FF FF FF FF FF     
   8202 FFFCBB10 FF FF FF FF FF FF FF FF     
   8203 FFFCBB18 FF FF FF FF FF FF FF FF     
   8204 FFFCBB20 FF FF FF FF FF FF FF FF     
   8205 FFFCBB28 FF FF FF FF FF FF FF FF     
   8206 FFFCBB30 FF FF FF FF FF FF FF FF     
   8207 FFFCBB38 FF FF FF FF FF FF FF FF     
   8208 FFFCBB40 FF FF FF FF FF FF FF FF     
   8209 FFFCBB48 FF FF FF FF FF FF FF FF     
   8210 FFFCBB50 FF FF FF FF FF FF FF FF     
   8211 FFFCBB58 FF FF FF FF FF FF FF FF     
   8212 FFFCBB60 FF FF FF FF FF FF FF FF     
   8213 FFFCBB68 FF FF FF FF FF FF FF FF     
   8214 FFFCBB70 FF FF FF FF FF FF FF FF     
   8215 FFFCBB78 FF FF FF FF FF FF FF FF     
   8216 FFFCBB80 FF FF FF FF FF FF FF FF     
   8217 FFFCBB88 FF FF FF FF FF FF FF FF     
   8218 FFFCBB90 FF FF FF FF FF FF FF FF     
   8219 FFFCBB98 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 84
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8220 FFFCBBA0 FF FF FF FF FF FF FF FF     
   8221 FFFCBBA8 FF FF FF FF FF FF FF FF     
   8222 FFFCBBB0 FF FF FF FF FF FF FF FF     
   8223 FFFCBBB8 FF FF FF FF FF FF FF FF     
   8224 FFFCBBC0 FF FF FF FF FF FF FF FF     
   8225 FFFCBBC8 FF FF FF FF FF FF FF FF     
   8226 FFFCBBD0 FF FF FF FF FF FF FF FF     
   8227 FFFCBBD8 FF FF FF FF FF FF FF FF     
   8228 FFFCBBE0 FF FF FF FF FF FF FF FF     
   8229 FFFCBBE8 FF FF FF FF FF FF FF FF     
   8230 FFFCBBF0 FF FF FF FF FF FF FF FF     
   8231 FFFCBBF8 FF FF FF FF FF FF FF FF     
   8232 FFFCBC00 FF FF FF FF FF FF FF FF     
   8233 FFFCBC08 FF FF FF FF FF FF FF FF     
   8234 FFFCBC10 FF FF FF FF FF FF FF FF     
   8235 FFFCBC18 FF FF FF FF FF FF FF FF     
   8236 FFFCBC20 FF FF FF FF FF FF FF FF     
   8237 FFFCBC28 FF FF FF FF FF FF FF FF     
   8238 FFFCBC30 FF FF FF FF FF FF FF FF     
   8239 FFFCBC38 FF FF FF FF FF FF FF FF     
   8240 FFFCBC40 FF FF FF FF FF FF FF FF     
   8241 FFFCBC48 FF FF FF FF FF FF FF FF     
   8242 FFFCBC50 FF FF FF FF FF FF FF FF     
   8243 FFFCBC58 FF FF FF FF FF FF FF FF     
   8244 FFFCBC60 FF FF FF FF FF FF FF FF     
   8245 FFFCBC68 FF FF FF FF FF FF FF FF     
   8246 FFFCBC70 FF FF FF FF FF FF FF FF     
   8247 FFFCBC78 FF FF FF FF FF FF FF FF     
   8248 FFFCBC80 FF FF FF FF FF FF FF FF     
   8249 FFFCBC88 FF FF FF FF FF FF FF FF     
   8250 FFFCBC90 FF FF FF FF FF FF FF FF     
   8251 FFFCBC98 FF FF FF FF FF FF FF FF     
   8252 FFFCBCA0 FF FF FF FF FF FF FF FF     
   8253 FFFCBCA8 FF FF FF FF FF FF FF FF     
   8254 FFFCBCB0 FF FF FF FF FF FF FF FF     
   8255 FFFCBCB8 FF FF FF FF FF FF FF FF     
   8256 FFFCBCC0 FF FF FF FF FF FF FF FF     
   8257 FFFCBCC8 FF FF FF FF FF FF FF FF     
   8258 FFFCBCD0 FF FF FF FF FF FF FF FF     
   8259 FFFCBCD8 FF FF FF FF FF FF FF FF     
   8260 FFFCBCE0 FF FF FF FF FF FF FF FF     
   8261 FFFCBCE8 FF FF FF FF FF FF FF FF     
   8262 FFFCBCF0 FF FF FF FF FF FF FF FF     
   8263 FFFCBCF8 FF FF FF FF FF FF FF FF     
   8264 FFFCBD00 FF FF FF FF FF FF FF FF     
   8265 FFFCBD08 FF FF FF FF FF FF FF FF     
   8266 FFFCBD10 FF FF FF FF FF FF FF FF     
   8267 FFFCBD18 FF FF FF FF FF FF FF FF     
   8268 FFFCBD20 FF FF FF FF FF FF FF FF     
   8269 FFFCBD28 FF FF FF FF FF FF FF FF     
   8270 FFFCBD30 FF FF FF FF FF FF FF FF     
   8271 FFFCBD38 FF FF FF FF FF FF FF FF     
   8272 FFFCBD40 FF FF FF FF FF FF FF FF     
   8273 FFFCBD48 FF FF FF FF FF FF FF FF     
   8274 FFFCBD50 FF FF FF FF FF FF FF FF     
   8275 FFFCBD58 FF FF FF FF FF FF FF FF     
   8276 FFFCBD60 FF FF FF FF FF FF FF FF     
   8277 FFFCBD68 FF FF FF FF FF FF FF FF     
   8278 FFFCBD70 FF FF FF FF FF FF FF FF     
   8279 FFFCBD78 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 85
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8280 FFFCBD80 FF FF FF FF FF FF FF FF     
   8281 FFFCBD88 FF FF FF FF FF FF FF FF     
   8282 FFFCBD90 FF FF FF FF FF FF FF FF     
   8283 FFFCBD98 FF FF FF FF FF FF FF FF     
   8284 FFFCBDA0 FF FF FF FF FF FF FF FF     
   8285 FFFCBDA8 FF FF FF FF FF FF FF FF     
   8286 FFFCBDB0 FF FF FF FF FF FF FF FF     
   8287 FFFCBDB8 FF FF FF FF FF FF FF FF     
   8288 FFFCBDC0 FF FF FF FF FF FF FF FF     
   8289 FFFCBDC8 FF FF FF FF FF FF FF FF     
   8290 FFFCBDD0 FF FF FF FF FF FF FF FF     
   8291 FFFCBDD8 FF FF FF FF FF FF FF FF     
   8292 FFFCBDE0 FF FF FF FF FF FF FF FF     
   8293 FFFCBDE8 FF FF FF FF FF FF FF FF     
   8294 FFFCBDF0 FF FF FF FF FF FF FF FF     
   8295 FFFCBDF8 FF FF FF FF FF FF FF FF     
   8296 FFFCBE00 FF FF FF FF FF FF FF FF     
   8297 FFFCBE08 FF FF FF FF FF FF FF FF     
   8298 FFFCBE10 FF FF FF FF FF FF FF FF     
   8299 FFFCBE18 FF FF FF FF FF FF FF FF     
   8300 FFFCBE20 FF FF FF FF FF FF FF FF     
   8301 FFFCBE28 FF FF FF FF FF FF FF FF     
   8302 FFFCBE30 FF FF FF FF FF FF FF FF     
   8303 FFFCBE38 FF FF FF FF FF FF FF FF     
   8304 FFFCBE40 FF FF FF FF FF FF FF FF     
   8305 FFFCBE48 FF FF FF FF FF FF FF FF     
   8306 FFFCBE50 FF FF FF FF FF FF FF FF     
   8307 FFFCBE58 FF FF FF FF FF FF FF FF     
   8308 FFFCBE60 FF FF FF FF FF FF FF FF     
   8309 FFFCBE68 FF FF FF FF FF FF FF FF     
   8310 FFFCBE70 FF FF FF FF FF FF FF FF     
   8311 FFFCBE78 FF FF FF FF FF FF FF FF     
   8312 FFFCBE80 FF FF FF FF FF FF FF FF     
   8313 FFFCBE88 FF FF FF FF FF FF FF FF     
   8314 FFFCBE90 FF FF FF FF FF FF FF FF     
   8315 FFFCBE98 FF FF FF FF FF FF FF FF     
   8316 FFFCBEA0 FF FF FF FF FF FF FF FF     
   8317 FFFCBEA8 FF FF FF FF FF FF FF FF     
   8318 FFFCBEB0 FF FF FF FF FF FF FF FF     
   8319 FFFCBEB8 FF FF FF FF FF FF FF FF     
   8320 FFFCBEC0 FF FF FF FF FF FF FF FF     
   8321 FFFCBEC8 FF FF FF FF FF FF FF FF     
   8322 FFFCBED0 FF FF FF FF FF FF FF FF     
   8323 FFFCBED8 FF FF FF FF FF FF FF FF     
   8324 FFFCBEE0 FF FF FF FF FF FF FF FF     
   8325 FFFCBEE8 FF FF FF FF FF FF FF FF     
   8326 FFFCBEF0 FF FF FF FF FF FF FF FF     
   8327 FFFCBEF8 FF FF FF FF FF FF FF FF     
   8328 FFFCBF00 FF FF FF FF FF FF FF FF     
   8329 FFFCBF08 FF FF FF FF FF FF FF FF     
   8330 FFFCBF10 FF FF FF FF FF FF FF FF     
   8331 FFFCBF18 FF FF FF FF FF FF FF FF     
   8332 FFFCBF20 FF FF FF FF FF FF FF FF     
   8333 FFFCBF28 FF FF FF FF FF FF FF FF     
   8334 FFFCBF30 FF FF FF FF FF FF FF FF     
   8335 FFFCBF38 FF FF FF FF FF FF FF FF     
   8336 FFFCBF40 FF FF FF FF FF FF FF FF     
   8337 FFFCBF48 FF FF FF FF FF FF FF FF     
   8338 FFFCBF50 FF FF FF FF FF FF FF FF     
   8339 FFFCBF58 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 86
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8340 FFFCBF60 FF FF FF FF FF FF FF FF     
   8341 FFFCBF68 FF FF FF FF FF FF FF FF     
   8342 FFFCBF70 FF FF FF FF FF FF FF FF     
   8343 FFFCBF78 FF FF FF FF FF FF FF FF     
   8344 FFFCBF80 FF FF FF FF FF FF FF FF     
   8345 FFFCBF88 FF FF FF FF FF FF FF FF     
   8346 FFFCBF90 FF FF FF FF FF FF FF FF     
   8347 FFFCBF98 FF FF FF FF FF FF FF FF     
   8348 FFFCBFA0 FF FF FF FF FF FF FF FF     
   8349 FFFCBFA8 FF FF FF FF FF FF FF FF     
   8350 FFFCBFB0 FF FF FF FF FF FF FF FF     
   8351 FFFCBFB8 FF FF FF FF FF FF FF FF     
   8352 FFFCBFC0 FF FF FF FF FF FF FF FF     
   8353 FFFCBFC8 FF FF FF FF FF FF FF FF     
   8354 FFFCBFD0 FF FF FF FF FF FF FF FF     
   8355 FFFCBFD8 FF FF FF FF FF FF FF FF     
   8356 FFFCBFE0 FF FF FF FF FF FF FF FF     
   8357 FFFCBFE8 FF FF FF FF FF FF FF FF     
   8358 FFFCBFF0 FF FF FF FF FF FF FF FF     
   8359 FFFCBFF8 FF FF FF FF FF FF FF FF     
                                             
                                             ;*
                                             ;* Standard jump table. You can change these addresses if you are
                                             ;* customizing this interpreter for a different environment.
                                             ;*
   8365 FFFCC000 6000 0022                   START	BRA.L	CSTART		;Cold Start entry point
   8366 FFFCC004 6000 005A                   GOWARM	BRA.L	WSTART		;Warm Start entry point
   8367 FFFCC008 6000 0B68                   GOOUT	BRA.L	OUTC		;Jump to character-out routine
   8368 FFFCC00C 6000 0B74                   GOIN	BRA.L	INC		;Jump to character-in routine
   8369 FFFCC010 6000 0B86                   GOAUXO	BRA.L	AUXOUT		;Jump to auxiliary-out routine
   8370 FFFCC014 6000 0B94                   GOAUXI	BRA.L	AUXIN		;Jump to auxiliary-in routine
   8371 FFFCC018 6000 0BA6                   GOBYE	BRA.L	BYEBYE		;Jump to monitor, DOS, etc.
                                             ;*
                                             ;* Modifiable system constants:
                                             ;*
   8375 FFFCC01C 00200000                    TXTBGN	DC.L	0x200000	;beginning of program memory
   8376 FFFCC020 1E000000                    ENDMEM	DC.L	0x1E000000	;	end of available memory
                                             ;*
                                             ;* The main interpreter starts here:
                                             ;*
   8380 FFFCC024                             CSTART:
   8381 FFFCC024 41F9 FFFC C000              	LEA		START,A0
   8382 FFFCC02A 21C8 0600                   	MOVE.L	A0,RANPNT
   8383 FFFCC02E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;initialize stack pointer
   8384 FFFCC034 4DF9 FFFC CBC6              	LEA		INITMSG,A6	;tell who we are
   8385 FFFCC03A 6100 0B2A                   	BSR.L	PRMESG
   8386 FFFCC03E 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;init. end-of-program pointer
   8387 FFFCC046 2039 FFFC C020              	MOVE.L	ENDMEM,D0	;get address of end of memory
   8388 FFFCC04C 0480 0000 0800              	SUB.L	#2048,D0	;reserve 2K for the stack
   8389 FFFCC052 21C0 062C                   	MOVE.L	D0,STKLMT
   8390 FFFCC056 0480 0000 006C              	SUB.L	#108,D0 	;reserve variable area (27 long words)
   8391 FFFCC05C 21C0 0628                   	MOVE.L	D0,VARBGN
   8392 FFFCC060                             WSTART:
   8393 FFFCC060 4280                        	CLR.L	D0		;initialize internal variables
   8394 FFFCC062 21C0 0610                   	MOVE.L	D0,LOPVAR
   8395 FFFCC066 21C0 0608                   	MOVE.L	D0,STKGOS
   8396 FFFCC06A 21C0 0604                   	MOVE.L	D0,CURRNT	;current line number pointer = 0
   8397 FFFCC06E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;init S.P. again, just in case
   8398 FFFCC074 4DF9 FFFC CBEC              	LEA	OKMSG,A6	;display "OK"
   8399 FFFCC07A 6100 0AEA                   	BSR.L	PRMESG
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 87
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8400 FFFCC07E                             ST3:
   8401 FFFCC07E 103C 003E                   	MOVE.B	#'>',D0  ;       Prompt with a '>' and
   8402 FFFCC082 6100 0810                   	BSR.L	GETLN	;	read a line.
   8403 FFFCC086 6100 0A7A                   	BSR.L	TOUPBUF ;	convert to upper case
   8404 FFFCC08A 2848                        	MOVE.L	A0,A4	;	save pointer to end of line
   8405 FFFCC08C 41F8 0630                   	LEA	BUFFER,A0	;point to the beginning of line
   8406 FFFCC090 6100 0A2C                   	BSR.L	TSTNUM	;	is there a number there?
   8407 FFFCC094 6100 0A60                   	BSR.L	IGNBLK	;	skip trailing blanks
   8408 FFFCC098 4A81                        	TST	D1		;does line no. exist? (or nonzero?)
   8409 FFFCC09A 6700 011A                   	BEQ.L	DIRECT	;	if not, it's a direct statement
   8410 FFFCC09E B2BC 0000 FFFF              	CMP.L	#$FFFF,D1	;see if line no. is <= 16 bits
   8411 FFFCC0A4 6400 07E4                   	BCC.L	QHOW		;if not, we've overflowed
   8412 FFFCC0A8 1101                        	MOVE.B	D1,-(A0)	;store the binary line no.
   8413 FFFCC0AA E099                        	ROR	#8,D1		;(Kludge to store a word on a
   8414 FFFCC0AC 1101                        	MOVE.B	D1,-(A0)	;possible byte boundary)
   8415 FFFCC0AE E199                        	ROL	#8,D1
   8416 FFFCC0B0 6100 0882                   	BSR.L	FNDLN	;	find this line in save area
   8417 FFFCC0B4 2A49                        	MOVE.L	A1,A5	;	save possible line pointer
   8418 FFFCC0B6 6612                        	BNE	ST4				;	if not found, insert
   8419 FFFCC0B8 6100 08A2                   	BSR.L	FNDNXT		;find the next line (into A1)
   8420 FFFCC0BC 244D                        	MOVE.L	A5,A2		;pointer to line to be deleted
   8421 FFFCC0BE 2678 0624                   	MOVE.L	TXTUNF,A3	;points to top of save area
   8422 FFFCC0C2 6100 08A2                   	BSR.L	MVUP		;move up to delete
   8423 FFFCC0C6 21CA 0624                   	MOVE.L	A2,TXTUNF	;update the end pointer
   8424 FFFCC0CA                             ST4:
   8425 FFFCC0CA 200C                        	MOVE.L	A4,D0		;calculate the length of new line
   8426 FFFCC0CC 9088                        	SUB.L	A0,D0
   8427 FFFCC0CE B0BC 0000 0003              	CMP.L	#3,D0		;is it just a line no. & CR?
   8428 FFFCC0D4 67A8                        	BEQ	ST3				;if so, it was just a delete
   8429 FFFCC0D6 2678 0624                   	MOVE.L	TXTUNF,A3	;compute new end
   8430 FFFCC0DA 2C4B                        	MOVE.L	A3,A6
   8431 FFFCC0DC D7C0                        	ADD.L	D0,A3
   8432 FFFCC0DE 2038 0628                   	MOVE.L	VARBGN,D0	;see if there's enough room
   8433 FFFCC0E2 B08B                        	CMP.L	A3,D0
   8434 FFFCC0E4 6300 079A                   	BLS.L	QSORRY		;if not, say so
   8435 FFFCC0E8 21CB 0624                   	MOVE.L	A3,TXTUNF	;if so, store new end position
   8436 FFFCC0EC 224E                        	MOVE.L	A6,A1		;points to old unfilled area
   8437 FFFCC0EE 244D                        	MOVE.L	A5,A2		;points to beginning of move area
   8438 FFFCC0F0 6100 087E                   	BSR.L	MVDOWN		;move things out of the way
   8439 FFFCC0F4 2248                        	MOVE.L	A0,A1		;set up to do the insertion
   8440 FFFCC0F6 244D                        	MOVE.L	A5,A2
   8441 FFFCC0F8 264C                        	MOVE.L	A4,A3
   8442 FFFCC0FA 6100 086A                   	BSR.L	MVUP		;do it
   8443 FFFCC0FE 6000 FF7E                   	BRA	ST3		;go back and get another line
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** Tables *** DIRECT *** EXEC ***
                                             ;*
                                             ;* This section of the code tests a string against a table. When
                                             ;* a match is found, control is transferred to the section of
                                             ;* code according to the table.
                                             ;*
                                             ;* At 'EXEC', A0 should point to the string, A1 should point to
                                             ;* the character table, and A2 should point to the execution
                                             ;* table. At 'DIRECT', A0 should point to the string, A1 and
                                             ;* A2 will be set up to point to TAB1 and TAB1.1, which are
                                             ;* the tables of all direct and statement commands.
                                             ;*
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 88
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* A '.' in the string will terminate the test and the partial
                                             ;* match will be considered as a match, e.g. 'P.', 'PR.','PRI.',
                                             ;* 'PRIN.', or 'PRINT' will all match 'PRINT'.
                                             ;*
                                             ;* There are two tables: the character table and the execution
                                             ;* table. The character table consists of any number of text items.
                                             ;* Each item is a string of characters with the last character's
                                             ;* high bit set to one. The execution table holds a 16-bit
                                             ;* execution addresses that correspond to each entry in the
                                             ;* character table.
                                             ;*
                                             ;* The end of the character table is a 0 byte which corresponds
                                             ;* to the default routine in the execution table, which is
                                             ;* executed if none of the other table items are matched.
                                             ;*
                                             ;* Character-matching tables:
   8476 FFFCC102                             TAB1:
   8477 FFFCC102 4C 49 53 D4                 	DC.B	'LIS',('T'+0x80) ;        Direct commands
   8478 FFFCC106 4C 4F 41 C4                 	DC.B	'LOA',('D'+0x80)
   8479 FFFCC10A 4E 45 D7                    	DC.B	'NE',('W'+0x80)
   8480 FFFCC10D 52 55 CE                    	DC.B	'RU',('N'+0x80)
   8481 FFFCC110 53 41 56 C5                 	DC.B	'SAV',('E'+0x80)
   8482 FFFCC114                             TAB2:
   8483 FFFCC114 4E 45 58 D4                 	DC.B	'NEX',('T'+0x80)  ;       Direct / statement
   8484 FFFCC118 4C 45 D4                    	DC.B	'LE',('T'+0x80)
   8485 FFFCC11B 49 C6                       	DC.B	'I',('F'+0x80)
   8486 FFFCC11D 47 4F 54 CF                 	DC.B	'GOT',('O'+0x80)
   8487 FFFCC121 47 4F 53 55 C2              	DC.B	'GOSU',('B'+0x80)
   8488 FFFCC126 52 45 54 55 52 CE           	DC.B	'RETUR',('N'+0x80)
   8489 FFFCC12C 52 45 CD                    	DC.B	'RE',('M'+0x80)
   8490 FFFCC12F 46 4F D2                    	DC.B	'FO',('R'+0x80)
   8491 FFFCC132 49 4E 50 55 D4              	DC.B	'INPU',('T'+0x80)
   8492 FFFCC137 50 52 49 4E D4              	DC.B	'PRIN',('T'+0x80)
   8493 FFFCC13C 50 4F 4B C5                 	DC.B	'POK',('E'+0x80)
   8494 FFFCC140 53 54 4F D0                 	DC.B	'STO',('P'+0x80)
   8495 FFFCC144 42 59 C5                    	DC.B	'BY',('E'+0x80)
   8496 FFFCC147 43 41 4C CC                 	DC.B	'CAL',('L'+0x80)
   8497 FFFCC14B 00                          	DC.B	0
   8498 FFFCC14C                             TAB4:
   8499 FFFCC14C 50 45 45 CB                 	DC.B	'PEE',('K'+0x80)   ;      Functions
   8500 FFFCC150 52 4E C4                    	DC.B	'RN',('D'+0x80)
   8501 FFFCC153 41 42 D3                    	DC.B	'AB',('S'+0x80)
   8502 FFFCC156 53 49 5A C5                 	DC.B	'SIZ',('E'+0x80)
   8503 FFFCC15A 00                          	DC.B	0
   8504 FFFCC15B                             TAB5:
   8505 FFFCC15B 54 CF                       	DC.B	'T',('O'+0x80)      ;     "TO" in "FOR"
   8506 FFFCC15D 00                          	DC.B	0
   8507 FFFCC15E                             TAB6:
   8508 FFFCC15E 53 54 45 D0                 	DC.B	'STE',('P'+0x80)     ;    "STEP" in "FOR"
   8509 FFFCC162 00                          	DC.B	0
   8510 FFFCC163                             TAB8:
   8511 FFFCC163 3E BD                       	DC.B	'>',('='+0x80)        ;   Relational operators
   8512 FFFCC165 3C BE                       	DC.B	'<',('>'+0x80)
   8513 FFFCC167 BE                          	DC.B	('>'+0x80)
   8514 FFFCC168 BD                          	DC.B	('='+0x80)
   8515 FFFCC169 3C BD                       	DC.B	'<',('='+0x80)
   8516 FFFCC16B BC                          	DC.B	('<'+0x80)
   8517 FFFCC16C 00                          	DC.B	0
   8518 FFFCC16D 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 89
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             	align	2
                                             ;* Execution address tables:
   8522 FFFCC16E                             TAB1_1:
   8523 FFFCC16E C266                        	DC.W	LIST_			;Direct commands
   8524 FFFCC170 C4A8                        	DC.W	LOAD
   8525 FFFCC172 C200                        	DC.W	NEW
   8526 FFFCC174 C214                        	DC.W	RUN
   8527 FFFCC176 C50C                        	DC.W	SAVE
   8528 FFFCC178                             TAB2_1:
   8529 FFFCC178 C3B4                        	DC.W	NEXT			;Direct / statement
   8530 FFFCC17A C498                        	DC.W	LET
   8531 FFFCC17C C404                        	DC.W	IF
   8532 FFFCC17E C252                        	DC.W	GOTO
   8533 FFFCC180 C2FC                        	DC.W	GOSUB
   8534 FFFCC182 C324                        	DC.W	RETURN
   8535 FFFCC184 C402                        	DC.W	REM
   8536 FFFCC186 C342                        	DC.W	FOR
   8537 FFFCC188 C42A                        	DC.W	INPUT
   8538 FFFCC18A C292                        	DC.W	PRINT
   8539 FFFCC18C C590                        	DC.W	POKE
   8540 FFFCC18E C20C                        	DC.W	STOP_
   8541 FFFCC190 C018                        	DC.W	GOBYE
   8542 FFFCC192 C5AC                        	DC.W	CALL
   8543 FFFCC194 C492                        	DC.W	DEFLT
   8544 FFFCC196                             TAB4_1:
   8545 FFFCC196 C7A2                        	DC.W	PEEK			;Functions
   8546 FFFCC198 C7AE                        	DC.W	RND
   8547 FFFCC19A C7E4                        	DC.W	ABS
   8548 FFFCC19C C7F4                        	DC.W	SIZE_
   8549 FFFCC19E C6A6                        	DC.W	XP40
   8550 FFFCC1A0                             TAB5_1:
   8551 FFFCC1A0 C35E                        	DC.W	FR1		;	"TO" in "FOR"
   8552 FFFCC1A2 C83E                        	DC.W	QWHAT
   8553 FFFCC1A4                             TAB6_1:
   8554 FFFCC1A4 C376                        	DC.W	FR2		;	"STEP" in "FOR"
   8555 FFFCC1A6 C37C                        	DC.W	FR3
   8556 FFFCC1A8                             TAB8_1:
   8557 FFFCC1A8 C5D8                        	DC.W	XP11;	>=		Relational operators
   8558 FFFCC1AA C5E0                        	DC.W	XP12	;<>
   8559 FFFCC1AC C5E8                        	DC.W	XP13	;>
   8560 FFFCC1AE C5F8                        	DC.W	XP15	;=
   8561 FFFCC1B0 C5F0                        	DC.W	XP14	;<=
   8562 FFFCC1B2 C602                        	DC.W	XP16	;<
   8563 FFFCC1B4 C614                        	DC.W	XP17
                                             ;*
   8565 FFFCC1B6                             DIRECT:
   8566 FFFCC1B6 43F9 FFFC C102              	LEA	TAB1,A1
   8567 FFFCC1BC 45F9 FFFC C16E              	LEA	TAB1_1,A2
   8568 FFFCC1C2                             EXEC:
   8569 FFFCC1C2 6100 0932                   	BSR.L	IGNBLK;		ignore leading blanks
   8570 FFFCC1C6 2648                        	MOVE.L	A0,A3		;save the pointer
   8571 FFFCC1C8 4202                        	CLR.B	D2		;clear match flag
   8572 FFFCC1CA                             EXLP:
   8573 FFFCC1CA 1018                        	MOVE.B	(A0)+,D0;	get the program character
   8574 FFFCC1CC 1211                        	MOVE.B	(A1),D1 	;get the table character
   8575 FFFCC1CE 6604                        	BNE	EXNGO		;If end of table,
   8576 FFFCC1D0 204B                        	MOVE.L	A3,A0	;;	restore the text pointer and...
   8577 FFFCC1D2 6024                        	BRA	EXGO		;execute the default.
   8578 FFFCC1D4                             EXNGO:
   8579 FFFCC1D4 1600                        	MOVE.B	D0,D3	;	Else check for period...
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 90
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8580 FFFCC1D6 C602                        	AND.B	D2,D3		;and a match.
   8581 FFFCC1D8 B63C 002E                   	CMP.B	#'.',D3
   8582 FFFCC1DC 671A                        	BEQ	EXGO		;if so, execute
   8583 FFFCC1DE 0201 007F                   	AND.B	#0x7F,D1 ;	ignore the table's high bit
   8584 FFFCC1E2 B200                        	CMP.B	D0,D1	;	is there a match?
   8585 FFFCC1E4 670C                        	BEQ	EXMAT
   8586 FFFCC1E6 548A                        	ADDQ.L	#2,A2	;	if not, try the next entry
   8587 FFFCC1E8 204B                        	MOVE.L	A3,A0	;	reset the program pointer
   8588 FFFCC1EA 4202                        	CLR.B	D2		;sorry, no match
   8589 FFFCC1EC                             EX1:
   8590 FFFCC1EC 4A19                        	TST.B	(A1)+	;	get to the end of the entry
   8591 FFFCC1EE 6AFC                        	BPL	EX1
   8592 FFFCC1F0 60D8                        	BRA	EXLP		;back for more matching
   8593 FFFCC1F2                             EXMAT:
   8594 FFFCC1F2 74FF                        	MOVEQ	#-1,D2;		we've got a match so far
   8595 FFFCC1F4 4A19                        	TST.B	(A1)+	;	end of table entry?
   8596 FFFCC1F6 6AD2                        	BPL	EXLP		;if not, go back for more
   8597 FFFCC1F8                             EXGO:
   8598 FFFCC1F8 47F8 0000                   	LEA	0,A3	;	execute the appropriate routine
   8599 FFFCC1FC 2652                        	MOVE	(A2),A3
   8600 FFFCC1FE 4ED3                        	JMP	(A3)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* What follows is the code to execute direct and statement
                                             ;* commands. Control is transferred to these points via the command
                                             ;* table lookup code of 'DIRECT' and 'EXEC' in the last section.
                                             ;* After the command is executed, control is transferred to other
                                             ;* sections as follows:
                                             ;*
                                             ;* For 'LIST', 'NEW', and 'STOP': go back to the warm start point.
                                             ;* For 'RUN': go execute the first stored line if any; else go
                                             ;* back to the warm start point.
                                             ;* For 'GOTO' and 'GOSUB': go execute the target line.
                                             ;* For 'RETURN' and 'NEXT'; go back to saved return line.
                                             ;* For all others: if 'CURRNT' is 0, go to warm start; else go;
                                             ;* execute next command. (This is done in 'FINISH'.)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** NEW *** STOP *** RUN (& friends) *** GOTO ***
                                             ;*
                                             ;* 'NEW<CR>' sets TXTUNF to point to TXTBGN
                                             ;*
                                             ;* 'STOP<CR>' goes back to WSTART
                                             ;*
                                             ;* 'RUN<CR>' finds the first stored line, stores its address
                                             ;* in CURRNT, and starts executing it. Note that only those
                                             ;* commands in TAB2 are legal for a stored program.
                                             ;*
                                             ;* There are 3 more entries in 'RUN':
                                             ;* 'RUNNXL' finds next line, stores it's address and executes it.
                                             ;* 'RUNTSL' stores the address of this line and executes it.
                                             ;* 'RUNSML' continues the execution on same line.
                                             ;*
                                             ;* 'GOTO expr<CR>' evaluates the expression, finds the target
                                             ;* line, and jumps to 'RUNTSL' to do it.
                                             ;*
   8638 FFFCC200                             NEW:
   8639 FFFCC200 6100 0630                   	BSR.L	ENDCHK
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 91
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8640 FFFCC204 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;set the end pointer
                                             
   8642 FFFCC20C                             STOP_:
   8643 FFFCC20C 6100 0624                   	BSR.L	ENDCHK
   8644 FFFCC210 6000 FE4E                   	BRA	WSTART
                                             
   8646 FFFCC214                             RUN:
   8647 FFFCC214 6100 061C                   	BSR.L	ENDCHK
   8648 FFFCC218 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to beginning
   8649 FFFCC21E 21C8 0604                   	MOVE.L	A0,CURRNT
                                             
   8651 FFFCC222                             RUNNXL:
   8652 FFFCC222 4AB8 0604                   	TST.L	CURRNT	;	executing a program?
   8653 FFFCC226 6700 FE38                   	BEQ.L	WSTART		;if not, we've finished a direct stat.
   8654 FFFCC22A 4281                        	CLR.L	D1		;else find the next line number
   8655 FFFCC22C 2248                        	MOVE.L	A0,A1
   8656 FFFCC22E 6100 0714                   	BSR.L	FNDLNP
   8657 FFFCC232 6500 FE2C                   	BCS	WSTART		;if we've fallen off the end, stop
                                             
   8659 FFFCC236                             RUNTSL:
   8660 FFFCC236 21C9 0604                   	MOVE.L	A1,CURRNT	;set CURRNT to point to the line no.
   8661 FFFCC23A 2049                        	MOVE.L	A1,A0		;set the text pointer to
   8662 FFFCC23C 5488                        	ADDQ.L	#2,A0		;the start of the line text
                                             
   8664 FFFCC23E                             RUNSML:
   8665 FFFCC23E 6100 090E                   	BSR.L	CHKIO	;	see if a control-C was pressed
   8666 FFFCC242 43F9 FFFC C114              	LEA	TAB2,A1 	;find command in TAB2
   8667 FFFCC248 45F9 FFFC C178              	LEA	TAB2_1,A2
   8668 FFFCC24E 6000 FF72                   	BRA	EXEC		;and execute it
                                             
   8670 FFFCC252                             GOTO:
   8671 FFFCC252 6100 036E                   	BSR.L	EXPR	;	evaluate the following expression
   8672 FFFCC256 6100 05DA                   	BSR.L	ENDCHK		;must find end of line
   8673 FFFCC25A 2200                        	MOVE.L	D0,D1
   8674 FFFCC25C 6100 06D6                   	BSR.L	FNDLN		;find the target line
   8675 FFFCC260 6600 0628                   	BNE.L	QHOW		;no such line no.
   8676 FFFCC264 60D0                        	BRA	RUNTSL		;go do it
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LIST *** PRINT ***
                                             ;*
                                             ;* LIST has two forms:
                                             ;* 'LIST<CR>' lists all saved lines
                                             ;* 'LIST #<CR>' starts listing at the line #
                                             ;* Control-S pauses the listing, control-C stops it.
                                             ;*
                                             ;* PRINT command is 'PRINT ....:' or 'PRINT ....<CR>'
                                             ;* where '....' is a list of expressions, formats, back-arrows,
                                             ;* and strings.	These items a separated by commas.
                                             ;*
                                             ;* A format is a pound sign followed by a number.  It controls
                                             ;* the number of spaces the value of an expression is going to
                                             ;* be printed in.  It stays effective for the rest of the print
                                             ;* command unless changed by another format.  If no format is
                                             ;* specified, 11 positions will be used.
                                             ;*
                                             ;* A string is quoted in a pair of single- or double-quotes.
                                             ;*
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 92
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* An underline (back-arrow) means generate a <CR> without a <LF>
                                             ;*
                                             ;* A <CR LF> is generated after the entire list has been printed
                                             ;* or if the list is empty.  If the list ends with a semicolon,
                                             ;* however, no <CR LF> is generated.
                                             ;*
                                             
   8707 FFFCC266                             LIST_:
   8708 FFFCC266 6100 0856                   	BSR.L	TSTNUM	;	see if there's a line no.
   8709 FFFCC26A 6100 05C6                   	BSR.L	ENDCHK		;if not, we get a zero
   8710 FFFCC26E 6100 06C4                   	BSR.L	FNDLN		;find this or next line
   8711 FFFCC272                             LS1:
   8712 FFFCC272 6500 FDEC                   	BCS	WSTART		;warm start if we passed the end
   8713 FFFCC276 6100 0810                   	BSR.L	PRTLN	;	print the line
   8714 FFFCC27A 6100 08D2                   	BSR.L	CHKIO	;	check for listing halt request
   8715 FFFCC27E 670C                        	BEQ	LS3
   8716 FFFCC280 B03C 0013                   	CMP.B	#CTRLS,D0	;pause the listing?
   8717 FFFCC284 6606                        	BNE	LS3
   8718 FFFCC286                             LS2:
   8719 FFFCC286 6100 08C6                   	BSR.L	CHKIO		;if so, wait for another keypress
   8720 FFFCC28A 67FA                        	BEQ	LS2
   8721 FFFCC28C                             LS3:
   8722 FFFCC28C 6100 06B6                   	BSR.L	FNDLNP		;find the next line
   8723 FFFCC290 60E0                        	BRA	LS1
                                             
   8725 FFFCC292                             PRINT:
   8726 FFFCC292 780B                        	MOVE	#11,D4	;	D4 = number of print spaces
   8727 FFFCC294 6100 080E                   	BSR.L	TSTC		;if null list and ":"
   8728 FFFCC298 3A 07                       	DC.B	':',PR2-$
   8729 FFFCC29A 6100 08C4                   	BSR.L	CRLF		;give CR-LF and continue
   8730 FFFCC29E 609E                        	BRA	RUNSML		;execution on the same line
   8731 FFFCC2A0                             PR2:
   8732 FFFCC2A0 6100 0802                   	BSR.L	TSTC		;if null list and <CR>
   8733 FFFCC2A4 0D 09                       	DC.B	CR,PR0-$
   8734 FFFCC2A6 6100 08B8                   	BSR.L	CRLF		;also give CR-LF and
   8735 FFFCC2AA 6000 FF76                   	BRA	RUNNXL		;execute the next line
   8736 FFFCC2AE                             PR0:
   8737 FFFCC2AE 6100 07F4                   	BSR.L	TSTC		;else is it a format?
   8738 FFFCC2B2 23 09                       	DC.B	'#',PR1-$
   8739 FFFCC2B4 6100 030C                   	BSR.L	EXPR		;yes, evaluate expression
   8740 FFFCC2B8 2800                        	MOVE	D0,D4		;and save it as print width
   8741 FFFCC2BA 6016                        	BRA	PR3		;look for more to print
   8742 FFFCC2BC                             PR1:
   8743 FFFCC2BC 6100 07E6                   	BSR.L	TSTC		;is character expression? (MRL)
   8744 FFFCC2C0 24 0B                       	DC.B	'$',PR4-$
   8745 FFFCC2C2 6100 02FE                   	BSR.L	EXPR		;yep. Evaluate expression (MRL)
   8746 FFFCC2C6 6100 FD40                   	BSR	GOOUT		;print low byte (MRL)
   8747 FFFCC2CA 6006                        	BRA	PR3		;look for more. (MRL)
   8748 FFFCC2CC                             PR4:
   8749 FFFCC2CC 6100 0706                   	BSR.L	QTSTG	;	is it a string?
   8750 FFFCC2D0 6012                        	BRA.S	PR8		;if not, must be an expression
   8751 FFFCC2D2                             PR3:
   8752 FFFCC2D2 6100 07D0                   	BSR.L	TSTC	;	if ",", go find next
   8753 FFFCC2D6 2C 07                       	DC.B	',',PR6-$
   8754 FFFCC2D8 6100 053E                   	BSR.L	FIN		;in the list.
   8755 FFFCC2DC 60D0                        	BRA	PR0
   8756 FFFCC2DE                             PR6:
   8757 FFFCC2DE 6100 0880                   	BSR.L	CRLF	;	list ends here
   8758 FFFCC2E2 6010                        	BRA	FINISH
   8759 FFFCC2E4                             PR8:
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 93
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8760 FFFCC2E4 2F04                        	MOVE	D4,-(SP)	;save the width value
   8761 FFFCC2E6 6100 02DA                   	BSR.L	EXPR		;evaluate the expression
   8762 FFFCC2EA 281F                        	MOVE	(SP)+,D4	;restore the width
   8763 FFFCC2EC 2200                        	MOVE.L	D0,D1
   8764 FFFCC2EE 6100 0724                   	BSR.L	PRTNUM		;print its value
   8765 FFFCC2F2 60DE                        	BRA	PR3		;more to print?
                                             
   8767 FFFCC2F4                             FINISH:
   8768 FFFCC2F4 6100 0522                   	BSR.L	FIN	;	Check end of command
   8769 FFFCC2F8 6000 0544                   	BRA.L	QWHAT	;	print "What?" if wrong
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GOSUB *** & RETURN ***
                                             ;*
                                             ;* 'GOSUB expr:' or 'GOSUB expr<CR>' is like the 'GOTO' command,
                                             ;* except that the current text pointer, stack pointer, etc. are
                                             ;* saved so that execution can be continued after the subroutine
                                             ;* 'RETURN's.  In order that 'GOSUB' can be nested (and even
                                             ;* recursive), the save area must be stacked.  The stack pointer
                                             ;* is saved in 'STKGOS'.  The old 'STKGOS' is saved on the stack.
                                             ;* If we are in the main routine, 'STKGOS' is zero (this was done
                                             ;* in the initialization section of the interpreter), but we still
                                             ;* save it as a flag for no further 'RETURN's.
                                             ;*
                                             ;* 'RETURN<CR>' undoes everything that 'GOSUB' did, and thus
                                             ;* returns the execution to the command after the most recent
                                             ;* 'GOSUB'.  If 'STKGOS' is zero, it indicates that we never had
                                             ;* a 'GOSUB' and is thus an error.
                                             ;*
   8791 FFFCC2FC                             GOSUB:
   8792 FFFCC2FC 6100 0694                   	BSR.L	PUSHA	;	save the current 'FOR' parameters
   8793 FFFCC300 6100 02C0                   	BSR.L	EXPR		;get line number
   8794 FFFCC304 2F08                        	MOVE.L	A0,-(SP)	;save text pointer
   8795 FFFCC306 2200                        	MOVE.L	D0,D1
   8796 FFFCC308 6100 062A                   	BSR.L	FNDLN		;find the target line
   8797 FFFCC30C 6600 057E                   	BNE.L	AHOW		;if not there, say "How?"
   8798 FFFCC310 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;found it, save old 'CURRNT'...
   8799 FFFCC314 2F38 0608                   	MOVE.L	STKGOS,-(SP)	;and 'STKGOS'
   8800 FFFCC318 42B8 0610                   	CLR.L	LOPVAR		;load new values
   8801 FFFCC31C 21CF 0608                   	MOVE.L	SP,STKGOS
   8802 FFFCC320 6000 FF14                   	BRA	RUNTSL
                                             
   8804 FFFCC324                             RETURN:
   8805 FFFCC324 6100 050C                   	BSR.L	ENDCHK	;	there should be just a <CR>
   8806 FFFCC328 2238 0608                   	MOVE.L	STKGOS,D1	;get old stack pointer
   8807 FFFCC32C 6700 0510                   	BEQ.L	QWHAT		;if zero, it doesn't exist
   8808 FFFCC330 2E41                        	MOVE.L	D1,SP		;else restore it
   8809 FFFCC332 21DF 0608                   	MOVE.L	(SP)+,STKGOS	;and the old 'STKGOS'
   8810 FFFCC336 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;and the old 'CURRNT'
   8811 FFFCC33A 205F                        	MOVE.L	(SP)+,A0	;and the old text pointer
   8812 FFFCC33C 6100 063A                   	BSR.L	POPA		;and the old 'FOR' parameters
   8813 FFFCC340 60B2                        	BRA	FINISH		;and we are back home
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** FOR *** & NEXT ***
                                             ;*
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 94
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* 'FOR' has two forms:
                                             ;* 'FOR var=exp1 TO exp2 STEP exp1' and 'FOR var=exp1 TO exp2'
                                             ;* The second form means the same thing as the first form with a
                                             ;* STEP of positive 1.  The interpreter will find the variable 'var'
                                             ;* and set its value to the current value of 'exp1'.  It also
                                             ;* evaluates 'exp2' and 'exp1' and saves all these together with
                                             ;* the text pointer, etc. in the 'FOR' save area, which consisits of
                                             ;* 'LOPVAR', 'LOPINC', 'LOPLMT', 'LOPLN', and 'LOPPT'.  If there is
                                             ;* already something in the save area (indicated by a non-zero
                                             ;* 'LOPVAR'), then the old save area is saved on the stack before
                                             ;* the new values are stored.  The interpreter will then dig in the
                                             ;* stack and find out if this same variable was used in another
                                             ;* currently active 'FOR' loop.  If that is the case, then the old
                                             ;* 'FOR' loop is deactivated. (i.e. purged from the stack)
                                             ;*
                                             ;* 'NEXT var' serves as the logical (not necessarily physical) end
                                             ;* of the 'FOR' loop.  The control variable 'var' is checked with
                                             ;* the 'LOPVAR'.  If they are not the same, the interpreter digs in
                                             ;* the stack to find the right one and purges all those that didn't
                                             ;* match.  Either way, it then adds the 'STEP' to that variable and
                                             ;* checks the result with against the limit value.  If it is within
                                             ;* the limit, control loops back to the command following the
                                             ;* 'FOR'.  If it's outside the limit, the save area is purged and
                                             ;* execution continues.
                                             ;*
   8845 FFFCC342                             FOR:
   8846 FFFCC342 6100 064E                   	BSR.L	PUSHA		;save the old 'FOR' save area
   8847 FFFCC346 6100 04B6                   	BSR.L	SETVAL		;set the control variable
   8848 FFFCC34A 21CE 0610                   	MOVE.L	A6,LOPVAR	;save its address
   8849 FFFCC34E 43F9 FFFC C15B              	LEA	TAB5,A1 	;use 'EXEC' to test for 'TO'
   8850 FFFCC354 45F9 FFFC C1A0              	LEA	TAB5_1,A2
   8851 FFFCC35A 6000 FE66                   	BRA	EXEC
   8852 FFFCC35E                             FR1:
   8853 FFFCC35E 6100 0262                   	BSR.L	EXPR		;evaluate the limit
   8854 FFFCC362 21C0 0618                   	MOVE.L	D0,LOPLMT	;save that
   8855 FFFCC366 43F9 FFFC C15E              	LEA	TAB6,A1 	;use 'EXEC' to look for the
   8856 FFFCC36C 45F9 FFFC C1A4              	LEA	TAB6_1,A2	;word 'STEP'
   8857 FFFCC372 6000 FE4E                   	BRA	EXEC
   8858 FFFCC376                             FR2:
   8859 FFFCC376 6100 024A                   	BSR.L	EXPR	;	found it, get the step value
   8860 FFFCC37A 6002                        	BRA	FR4
   8861 FFFCC37C                             FR3:
   8862 FFFCC37C 7001                        	MOVEQ	#1,D0	;	not found, step defaults to 1
   8863 FFFCC37E                             FR4:
   8864 FFFCC37E 21C0 0614                   	MOVE.L	D0,LOPINC	;save that too
   8865 FFFCC382                             FR5:
   8866 FFFCC382 21F8 0604 061C              	MOVE.L	CURRNT,LOPLN	;save address of current line number
   8867 FFFCC388 21C8 0620                   	MOVE.L	A0,LOPPT	;and text pointer
   8868 FFFCC38C 2C4F                        	MOVE.L	SP,A6		;dig into the stack to find 'LOPVAR'
   8869 FFFCC38E 6006                        	BRA	FR7
   8870 FFFCC390                             FR6:
   8871 FFFCC390 DDFC 0000 0014              	ADD.L	#20,A6		;look at next stack frame
   8872 FFFCC396                             FR7:
   8873 FFFCC396 2016                        	MOVE.L	(A6),D0 	;is it zero?
   8874 FFFCC398 6716                        	BEQ	FR8		;if so, we're done
   8875 FFFCC39A B0B8 0610                   	CMP.L	LOPVAR,D0	;same as current LOPVAR?
   8876 FFFCC39E 66F0                        	BNE	FR6		;nope, look some more
   8877 FFFCC3A0 244F                        	MOVE.L	SP,A2	;	Else remove 5 long words from...
   8878 FFFCC3A2 224E                        	MOVE.L	A6,A1	;	inside the stack.
   8879 FFFCC3A4 47F8 0014                   	LEA	20,A3
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 95
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8880 FFFCC3A8 D7C9                        	ADD.L	A1,A3
   8881 FFFCC3AA 6100 05C4                   	BSR.L	MVDOWN
   8882 FFFCC3AE 2E4B                        	MOVE.L	A3,SP	;	set the SP 5 long words up
   8883 FFFCC3B0                             FR8:
   8884 FFFCC3B0 6000 FF42                   	BRA	FINISH		;and continue execution
                                             
   8886 FFFCC3B4                             NEXT:
   8887 FFFCC3B4 6100 031E                   	BSR.L	TSTV;		get address of variable
   8888 FFFCC3B8 6500 0484                   	BCS.L	QWHAT	;	if no variable, say "What?"
   8889 FFFCC3BC 2240                        	MOVE.L	D0,A1	;	save variable's address
   8890 FFFCC3BE                             NX0:
   8891 FFFCC3BE 2038 0610                   	MOVE.L	LOPVAR,D0;	If 'LOPVAR' is zero, we never...
   8892 FFFCC3C2 6700 047A                   	BEQ.L	QWHAT	;	had a FOR loop, so say "What?"
   8893 FFFCC3C6 B3C0                        	CMP.L	D0,A1	;;	else we check them
   8894 FFFCC3C8 6706                        	BEQ	NX3	;	OK, they agree
   8895 FFFCC3CA 6100 05AC                   	BSR.L	POPA	;	nope, let's see the next frame
   8896 FFFCC3CE 60EE                        	BRA	NX0
   8897 FFFCC3D0                             NX3:
   8898 FFFCC3D0 2011                        	MOVE.L	(A1),D0 ;	get control variable's value
   8899 FFFCC3D2 D0B8 0614                   	ADD.L	LOPINC,D0;	add in loop increment
   8900 FFFCC3D6 6900 04B2                   	BVS.L	QHOW	;	say "How?" for 32-bit overflow
   8901 FFFCC3DA 2280                        	MOVE.L	D0,(A1) ;	save control variable's new value
   8902 FFFCC3DC 2238 0618                   	MOVE.L	LOPLMT,D1;	get loop's limit value
   8903 FFFCC3E0 4AB8 0614                   	TST.L	LOPINC
   8904 FFFCC3E4 6A02                        	BPL	NX1	;	branch if loop increment is positive
   8905 FFFCC3E6 C141                        	EXG	D0,D1
   8906 FFFCC3E8                             NX1:
   8907 FFFCC3E8 B280                        	CMP.L	D0,D1;		test against limit
   8908 FFFCC3EA 6D0E                        	BLT	NX2;		branch if outside limit
   8909 FFFCC3EC 21F8 061C 0604              	MOVE.L	LOPLN,CURRNT	;Within limit, go back to the...
   8910 FFFCC3F2 2078 0620                   	MOVE.L	LOPPT,A0	;saved 'CURRNT' and text pointer.
   8911 FFFCC3F6 6000 FEFC                   	BRA	FINISH
   8912 FFFCC3FA                             NX2:
   8913 FFFCC3FA 6100 057C                   	BSR.L	POPA		;purge this loop
   8914 FFFCC3FE 6000 FEF4                   	BRA	FINISH
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** REM *** IF *** INPUT *** LET (& DEFLT) ***
                                             ;*
                                             ;* 'REM' can be followed by anything and is ignored by the
                                             ;* interpreter.
                                             ;*
                                             ;* 'IF' is followed by an expression, as a condition and one or
                                             ;* more commands (including other 'IF's) separated by colons.
                                             ;* Note that the word 'THEN' is not used.  The interpreter evaluates
                                             ;* the expression.  If it is non-zero, execution continues.  If it
                                             ;* is zero, the commands that follow are ignored and execution
                                             ;* continues on the next line.
                                             ;*
                                             ;* 'INPUT' is like the 'PRINT' command, and is followed by a list
                                             ;* of items.  If the item is a string in single or double quotes,
                                             ;* or is an underline (back arrow), it has the same effect as in
                                             ;* 'PRINT'.  If an item is a variable, this variable name is
                                             ;* printed out followed by a colon, then the interpreter waits for
                                             ;* an expression to be typed in.  The variable is then set to the
                                             ;* value of this expression.  If the variable is preceeded by a
                                             ;* string (again in single or double quotes), the string will be
                                             ;* displayed followed by a colon.  The interpreter the waits for an
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 96
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* expression to be entered and sets the variable equal to the
                                             ;* expression's value.  If the input expression is invalid, the
                                             ;* interpreter will print "What?", "How?", or "Sorry" and reprint
                                             ;* the prompt and redo the input.  The execution will not terminate
                                             ;* unless you press control-C.  This is handled in 'INPERR'.
                                             ;*
                                             ;* 'LET' is followed by a list of items separated by commas.
                                             ;* Each item consists of a variable, an equals sign, and an
                                             ;* expression.  The interpreter evaluates the expression and sets
                                             ;* the variable to that value.  The interpreter will also handle
                                             ;* 'LET' commands without the word 'LET'.  This is done by 'DEFLT'.
                                             ;*
   8952 FFFCC402                             REM:
   8953 FFFCC402 600A                        	BRA	IF2		;skip the rest of the line
                                             
   8955 FFFCC404                             IF:	
   8956 FFFCC404 6100 01BC                   	BSR.L	EXPR	;	evaluate the expression
   8957 FFFCC408                             IF1:
   8958 FFFCC408 4A80                        	TST.L	D0		;is it zero?
   8959 FFFCC40A 6600 FE32                   	BNE	RUNSML		;if not, continue
   8960 FFFCC40E                             IF2:
   8961 FFFCC40E 2248                        	MOVE.L	A0,A1
   8962 FFFCC410 4281                        	CLR.L	D1
   8963 FFFCC412 6100 054A                   	BSR.L	FNDSKP	;	if so, skip the rest of the line
   8964 FFFCC416 6400 FE1E                   	BCC	RUNTSL		;and run the next line
   8965 FFFCC41A 6000 FC44                   	BRA.L	WSTART	;	if no next line, do a warm start
                                             
   8967 FFFCC41E                             INPERR:
   8968 FFFCC41E 2E78 060C                   	MOVE.L	STKINP,SP;	restore the old stack pointer
   8969 FFFCC422 21DF 0604                   	MOVE.L	(SP)+,CURRNT;	and old 'CURRNT'
   8970 FFFCC426 588F                        	ADDQ.L	#4,SP
   8971 FFFCC428 205F                        	MOVE.L	(SP)+,A0	;and old text pointer
                                             
   8973 FFFCC42A                             INPUT:
   8974 FFFCC42A 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   8975 FFFCC42C 6100 05A6                   	BSR.L	QTSTG		;is next item a string?
   8976 FFFCC430 600A                        	BRA.S	IP2		;nope
   8977 FFFCC432 6100 02A0                   	BSR.L	TSTV	;	yes, but is it followed by a variable?
   8978 FFFCC436 654C                        	BCS	IP4		;if not, branch
   8979 FFFCC438 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   8980 FFFCC43A 601A                        	BRA	IP3		;if so, input to variable
   8981 FFFCC43C                             IP2:
   8982 FFFCC43C 2F08                        	MOVE.L	A0,-(SP);	save for 'PRTSTG'
   8983 FFFCC43E 6100 0294                   	BSR.L	TSTV	;	must be a variable now
   8984 FFFCC442 6500 03FA                   	BCS.L	QWHAT	;	"What?" it isn't?
   8985 FFFCC446 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   8986 FFFCC448 1410                        	MOVE.B	(A0),D2 ;	get ready for 'PRTSTG'
   8987 FFFCC44A 4200                        	CLR.B	D0
   8988 FFFCC44C 1080                        	MOVE.B	D0,(A0)
   8989 FFFCC44E 225F                        	MOVE.L	(SP)+,A1
   8990 FFFCC450 6100 0566                   	BSR.L	PRTSTG	;	print string as prompt
   8991 FFFCC454 1082                        	MOVE.B	D2,(A0) ;	restore text
   8992 FFFCC456                             IP3:
   8993 FFFCC456 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   8994 FFFCC458 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;also save 'CURRNT'
   8995 FFFCC45C 21FC FFFF FFFF 0604         	MOVE.L	#-1,CURRNT	;flag that we are in INPUT
   8996 FFFCC464 21CF 060C                   	MOVE.L	SP,STKINP	;save the stack pointer too
   8997 FFFCC468 2F0A                        	MOVE.L	A2,-(SP)	;save the variable address
   8998 FFFCC46A 103C 003A                   	MOVE.B	#':',D0     ;    print a colon first
   8999 FFFCC46E 6100 0424                   	BSR.L	GETLN		;then get an input line
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 97
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9000 FFFCC472 41F8 0630                   	LEA	BUFFER,A0	;point to the buffer
   9001 FFFCC476 6100 014A                   	BSR.L	EXPR	;	evaluate the input
   9002 FFFCC47A 245F                        	MOVE.L	(SP)+,A2	;restore the variable address
   9003 FFFCC47C 2480                        	MOVE.L	D0,(A2) 	;save value in variable
   9004 FFFCC47E 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;restore old 'CURRNT'
   9005 FFFCC482 205F                        	MOVE.L	(SP)+,A0;	and the old text pointer
   9006 FFFCC484                             IP4:
   9007 FFFCC484 588F                        	ADDQ.L	#4,SP	;	clean up the stack
   9008 FFFCC486 6100 061C                   	BSR.L	TSTC	;	is the next thing a comma?
   9009 FFFCC48A 2C 03                       	DC.B	',',IP5-$
   9010 FFFCC48C 609C                        	BRA	INPUT	;	yes, more items
   9011 FFFCC48E                             IP5:
   9012 FFFCC48E 6000 FE64                   	BRA	FINISH
                                             
   9014 FFFCC492                             DEFLT:
   9015 FFFCC492 0C10 000D                   	CMP.B	#CR,(A0);	empty line is OK
   9016 FFFCC496 670C                        	BEQ	LT1		;else it is 'LET'
                                             
   9018 FFFCC498                             LET:
   9019 FFFCC498 6100 0364                   	BSR.L	SETVAL		;do the assignment
   9020 FFFCC49C 6100 0606                   	BSR.L	TSTC		;check for more 'LET' items
   9021 FFFCC4A0 2C 03                       	DC.B	',',LT1-$
   9022 FFFCC4A2 60F4                        	BRA	LET
   9023 FFFCC4A4                             LT1:
   9024 FFFCC4A4 6000 FE4E                   	BRA	FINISH		;until we are finished.
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LOAD *** & SAVE ***
                                             ;*
                                             ;* These two commands transfer a program to/from an auxiliary
                                             ;* device such as a cassette, another computer, etc.  The program
                                             ;* is converted to an easily-stored format: each line starts with
                                             ;* a colon, the line no. as 4 hex digits, and the rest of the line.
                                             ;* At the end, a line starting with an '@' sign is sent.  This
                                             ;* format can be read back with a minimum of processing time by
                                             ;* the 68000.
                                             ;*
   9039 FFFCC4A8                             LOAD:
   9040 FFFCC4A8 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to start of prog. area
   9041 FFFCC4AE 103C 000D                   	MOVE.B	#CR,D0		;For a CP/M host, tell it we're ready...
   9042 FFFCC4B2 6100 FB5C                   	BSR	GOAUXO		;by sending a CR to finish PIP command.
   9043 FFFCC4B6                             LOD1:
   9044 FFFCC4B6 6100 FB5C                   	BSR	GOAUXI	;	look for start of line
   9045 FFFCC4BA 67FA                        	BEQ	LOD1
   9046 FFFCC4BC B03C 0040                   	CMP.B	#'@',D0  ;       end of program?
   9047 FFFCC4C0 6722                        	BEQ	LODEND
   9048 FFFCC4C2 B03C 003A                   	CMP.B	#':',D0   ;      if not, is it start of line?
   9049 FFFCC4C6 66EE                        	BNE	LOD1		;if not, wait for it
   9050 FFFCC4C8 6100 0022                   	BSR	GBYTE		;get first byte of line no.
   9051 FFFCC4CC 10C1                        	MOVE.B	D1,(A0)+	;store it
   9052 FFFCC4CE 6100 001C                   	BSR	GBYTE		;get 2nd bye of line no.
   9053 FFFCC4D2 10C1                        	MOVE.B	D1,(A0)+;	store that, too
   9054 FFFCC4D4                             LOD2:
   9055 FFFCC4D4 6100 FB3E                   	BSR	GOAUXI	;	get another text char.
   9056 FFFCC4D8 67FA                        	BEQ	LOD2
   9057 FFFCC4DA 10C0                        	MOVE.B	D0,(A0)+	;store it
   9058 FFFCC4DC B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9059 FFFCC4E0 66F2                        	BNE	LOD2		;if not, go back for more
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 98
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9060 FFFCC4E2 60D2                        	BRA	LOD1		;if so, start a new line
   9061 FFFCC4E4                             LODEND:
   9062 FFFCC4E4 21C8 0624                   	MOVE.L	A0,TXTUNF	;set end-of program pointer
   9063 FFFCC4E8 6000 FB76                   	BRA	WSTART		;back to direct mode
                                             
   9065 FFFCC4EC                             GBYTE:
   9066 FFFCC4EC 7401                        	MOVEQ	#1,D2;		get two hex characters from auxiliary
   9067 FFFCC4EE 4281                        	CLR	D1		;and store them as a byte in D1
   9068 FFFCC4F0                             GBYTE1:
   9069 FFFCC4F0 6100 FB22                   	BSR	GOAUXI	;	get a char.
   9070 FFFCC4F4 67FA                        	BEQ	GBYTE1
   9071 FFFCC4F6 B03C 0041                   	CMP.B	#'A',D0
   9072 FFFCC4FA 6502                        	BCS	GBYTE2
   9073 FFFCC4FC 5F00                        	SUBQ.B	#7,D0	;	if greater than 9, adjust
   9074 FFFCC4FE                             GBYTE2:
   9075 FFFCC4FE 0200 000F                   	AND.B	#0xF,D0		;strip ASCII
   9076 FFFCC502 E909                        	LSL.B	#4,D1		;put nybble into the result
   9077 FFFCC504 8200                        	OR.B	D0,D1
   9078 FFFCC506 51CA FFE8                   	DBRA	D2,GBYTE1	;get another char.
   9079 FFFCC50A 4E75                        	RTS
                                             
   9081 FFFCC50C                             SAVE:
   9082 FFFCC50C 2079 FFFC C01C              	MOVE.L	TXTBGN,A0;	set pointer to start of prog. area
   9083 FFFCC512 2278 0624                   	MOVE.L	TXTUNF,A1	;set pointer to end of prog. area
   9084 FFFCC516                             SAVE1:
   9085 FFFCC516 103C 000D                   	MOVE.B	#CR,D0	;	send out a CR & LF (CP/M likes this)
   9086 FFFCC51A 6100 FAF4                   	BSR	GOAUXO
   9087 FFFCC51E 103C 000A                   	MOVE.B	#LF,D0
   9088 FFFCC522 6100 FAEC                   	BSR	GOAUXO
   9089 FFFCC526 B3C8                        	CMP.L	A0,A1		;are we finished?
   9090 FFFCC528 6322                        	BLS	SAVEND
   9091 FFFCC52A 103C 003A                   	MOVE.B	#':',D0      ;   if not, start a line
   9092 FFFCC52E 6100 FAE0                   	BSR	GOAUXO
   9093 FFFCC532 1218                        	MOVE.B	(A0)+,D1	;send first half of line no.
   9094 FFFCC534 6100 003A                   	BSR	PBYTE
   9095 FFFCC538 1218                        	MOVE.B	(A0)+,D1	;and send 2nd half
   9096 FFFCC53A 6100 0034                   	BSR	PBYTE
   9097 FFFCC53E                             SAVE2:
   9098 FFFCC53E 1018                        	MOVE.B	(A0)+,D0;	get a text char.
   9099 FFFCC540 B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9100 FFFCC544 67D0                        	BEQ	SAVE1		;if so, send CR & LF and start new line
   9101 FFFCC546 6100 FAC8                   	BSR	GOAUXO		;send it out
   9102 FFFCC54A 60F2                        	BRA	SAVE2		;go back for more text
   9103 FFFCC54C                             SAVEND:
   9104 FFFCC54C 103C 0040                   	MOVE.B	#'@',D0 ;        send end-of-program indicator
   9105 FFFCC550 6100 FABE                   	BSR	GOAUXO
   9106 FFFCC554 103C 000D                   	MOVE.B	#CR,D0	;	followed by a CR & LF
   9107 FFFCC558 6100 FAB6                   	BSR	GOAUXO
   9108 FFFCC55C 103C 000A                   	MOVE.B	#LF,D0
   9109 FFFCC560 6100 FAAE                   	BSR	GOAUXO
   9110 FFFCC564 103C 001A                   	MOVE.B	#0x1A,D0 	;and a control-Z to end the CP/M file
   9111 FFFCC568 6100 FAA6                   	BSR	GOAUXO
   9112 FFFCC56C 6000 FAF2                   	BRA	WSTART		;then go do a warm start
                                             
   9114 FFFCC570                             PBYTE:
   9115 FFFCC570 7401                        	MOVEQ	#1,D2	;	send two hex characters from D1's low byte
   9116 FFFCC572                             PBYTE1:
   9117 FFFCC572 E919                        	ROL.B	#4,D1	;	get the next nybble
   9118 FFFCC574 1001                        	MOVE.B	D1,D0
   9119 FFFCC576 0200 000F                   	AND.B	#0xF,D0	;	strip off garbage
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 99
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9120 FFFCC57A 0600 0030                   	ADD.B	#'0',D0   ;      make it into ASCII
   9121 FFFCC57E B03C 0039                   	CMP.B	#'9',D0
   9122 FFFCC582 6302                        	BLS	PBYTE2
   9123 FFFCC584 5E00                        	ADDQ.B	#7,D0		;adjust if greater than 9
   9124 FFFCC586                             PBYTE2:
   9125 FFFCC586 6100 FA88                   	BSR	GOAUXO		;send it out
   9126 FFFCC58A 51CA FFE6                   	DBRA	D2,PBYTE1	;then send the next nybble
   9127 FFFCC58E 4E75                        	RTS
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** POKE *** & CALL ***
                                             ;*
                                             ;* 'POKE expr1,expr2' stores the byte from 'expr2' into the memory
                                             ;* address specified by 'expr1'.
                                             ;*
                                             ;* 'CALL expr' jumps to the machine language subroutine whose
                                             ;* starting address is specified by 'expr'.  The subroutine can use
                                             ;* all registers but must leave the stack the way it found it.
                                             ;* The subroutine returns to the interpreter by executing an RTS.
                                             ;*
   9142 FFFCC590                             POKE:
   9143 FFFCC590 6100 0030                   	BSR	EXPR		;get the memory address
   9144 FFFCC594 6100 050E                   	BSR.L	TSTC		;it must be followed by a comma
   9145 FFFCC598 2C 0F                       	DC.B	',',PKER-$
   9146 FFFCC59A 2F00                        	MOVE.L	D0,-(SP)	;save the address
   9147 FFFCC59C 6100 0024                   	BSR	EXPR		;get the byte to be POKE'd
   9148 FFFCC5A0 225F                        	MOVE.L	(SP)+,A1	;get the address back
   9149 FFFCC5A2 1280                        	MOVE.B	D0,(A1) 	;store the byte in memory
   9150 FFFCC5A4 6000 FD4E                   	BRA	FINISH
   9151 FFFCC5A8                             PKER:
   9152 FFFCC5A8 6000 0294                   	BRA.L	QWHAT	;	if no comma, say "What?"
                                             
   9154 FFFCC5AC                             CALL:
   9155 FFFCC5AC 6100 0014                   	BSR	EXPR		;get the subroutine's address
   9156 FFFCC5B0 4A80                        	TST.L	D0		;make sure we got a valid address
   9157 FFFCC5B2 6700 02D6                   	BEQ.L	QHOW	;	if not, say "How?"
   9158 FFFCC5B6 2F08                        	MOVE.L	A0,-(SP);	save the text pointer
   9159 FFFCC5B8 2240                        	MOVE.L	D0,A1
   9160 FFFCC5BA 4E91                        	JSR	(A1)		;jump to the subroutine
   9161 FFFCC5BC 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9162 FFFCC5BE 6000 FD34                   	BRA	FINISH
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** EXPR ***
                                             ;*
                                             ;* 'EXPR' evaluates arithmetical or logical expressions.
                                             ;* <EXPR>::=<EXPR2>
                                             ;*	   <EXPR2><rel.op.><EXPR2>
                                             ;* where <rel.op.> is one of the operators in TAB8 and the result
                                             ;* of these operations is 1 if true and 0 if false.
                                             ;* <EXPR2>::=(+ or -)<EXPR3>(+ or -)<EXPR3>(...
                                             ;* where () are optional and (... are optional repeats.
                                             ;* <EXPR3>::=<EXPR4>( <* or /><EXPR4> )(...
                                             ;* <EXPR4>::=<variable>
                                             ;*	    <function>
                                             ;*	    (<EXPR>)
                                             ;* <EXPR> is recursive so that the variable '@' can have an <EXPR>
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 100
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* as an index, functions can have an <EXPR> as arguments, and
                                             ;* <EXPR4> can be an <EXPR> in parenthesis.
                                             ;*
   9183 FFFCC5C2                             EXPR:
   9184 FFFCC5C2 6100 0066                   	BSR	EXPR2
   9185 FFFCC5C6 2F00                        	MOVE.L	D0,-(SP);	save <EXPR2> value
   9186 FFFCC5C8 43F9 FFFC C163              	LEA	TAB8,A1 	;look up a relational operator
   9187 FFFCC5CE 45F9 FFFC C1A8              	LEA	TAB8_1,A2
   9188 FFFCC5D4 6000 FBEC                   	BRA	EXEC		;go do it
                                             
   9190 FFFCC5D8                             XP11:
   9191 FFFCC5D8 6100 003E                   	BSR	XP18	;	is it ">="?
   9192 FFFCC5DC 6D2E                        	BLT	XPRT0		;no, return D0=0
   9193 FFFCC5DE 6030                        	BRA	XPRT1		;else return D0=1
                                             
   9195 FFFCC5E0                             XP12:
   9196 FFFCC5E0 6100 0036                   	BSR	XP18	;	is it "<>"?
   9197 FFFCC5E4 6726                        	BEQ	XPRT0		;no, return D0=0
   9198 FFFCC5E6 6028                        	BRA	XPRT1		;else return D0=1
                                             
   9200 FFFCC5E8                             XP13:
   9201 FFFCC5E8 6100 002E                   	BSR	XP18	;	is it ">"?
   9202 FFFCC5EC 6F1E                        	BLE	XPRT0		;no, return D0=0
   9203 FFFCC5EE 6020                        	BRA	XPRT1		;else return D0=1
                                             
   9205 FFFCC5F0                             XP14:
   9206 FFFCC5F0 6100 0026                   	BSR	XP18	;	is it "<="?
   9207 FFFCC5F4 6E16                        	BGT	XPRT0		;no, return D0=0
   9208 FFFCC5F6 6018                        	BRA	XPRT1		;else return D0=1
                                             
   9210 FFFCC5F8                             XP15:
   9211 FFFCC5F8 6100 001E                   	BSR	XP18	;	is it "="?
   9212 FFFCC5FC 660E                        	BNE	XPRT0		;if not, return D0=0
   9213 FFFCC5FE 6010                        	BRA	XPRT1		;else return D0=1
   9214 FFFCC600                             XP15RT:
   9215 FFFCC600 4E75                        	RTS
                                             
   9217 FFFCC602                             XP16:
   9218 FFFCC602 6100 0014                   	BSR	XP18	;	is it "<"?
   9219 FFFCC606 6C04                        	BGE	XPRT0		;if not, return D0=0
   9220 FFFCC608 6006                        	BRA	XPRT1		;else return D0=1
   9221 FFFCC60A                             XP16RT:
   9222 FFFCC60A 4E75                        	RTS
                                             
   9224 FFFCC60C                             XPRT0:
   9225 FFFCC60C 4280                        	CLR.L	D0	;	return D0=0 (false)
   9226 FFFCC60E 4E75                        	RTS
                                             
   9228 FFFCC610                             XPRT1:
   9229 FFFCC610 7001                        	MOVEQ	#1,D0;		return D0=1 (true)
   9230 FFFCC612 4E75                        	RTS
                                             
   9232 FFFCC614                             XP17:
   9233 FFFCC614 201F                        	MOVE.L	(SP)+,D0	;it's not a rel. operator
   9234 FFFCC616 4E75                        	RTS			;return D0=<EXPR2>
                                             
   9236 FFFCC618                             XP18:
   9237 FFFCC618 201F                        	MOVE.L	(SP)+,D0	;reverse the top two stack items
   9238 FFFCC61A 221F                        	MOVE.L	(SP)+,D1
   9239 FFFCC61C 2F00                        	MOVE.L	D0,-(SP)
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 101
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9240 FFFCC61E 2F01                        	MOVE.L	D1,-(SP)
   9241 FFFCC620 6100 0008                   	BSR	EXPR2		;do second <EXPR2>
   9242 FFFCC624 221F                        	MOVE.L	(SP)+,D1
   9243 FFFCC626 B280                        	CMP.L	D0,D1	;	compare with the first result
   9244 FFFCC628 4E75                        	RTS			;return the result
                                             
   9246 FFFCC62A                             EXPR2:
   9247 FFFCC62A 6100 0478                   	BSR.L	TSTC		;negative sign?
   9248 FFFCC62E 2D 05                       	DC.B	'-',XP21-$
   9249 FFFCC630 4280                        	CLR.L	D0	;	yes, fake '0-'
   9250 FFFCC632 6026                        	BRA	XP26
   9251 FFFCC634                             XP21:
   9252 FFFCC634 6100 046E                   	BSR.L	TSTC	;	positive sign? ignore it
   9253 FFFCC638 2B 01                       	DC.B	'+',XP22-$
   9254 FFFCC63A                             XP22:
   9255 FFFCC63A 6100 002C                   	BSR	EXPR3		;first <EXPR3>
   9256 FFFCC63E                             XP23:
   9257 FFFCC63E 6100 0464                   	BSR.L	TSTC	;	add?
   9258 FFFCC642 2B 11                       	DC.B	'+',XP25-$
   9259 FFFCC644 2F00                        	MOVE.L	D0,-(SP)	;yes, save the value
   9260 FFFCC646 6100 0020                   	BSR	EXPR3		;get the second <EXPR3>
   9261 FFFCC64A                             XP24:
   9262 FFFCC64A 221F                        	MOVE.L	(SP)+,D1
   9263 FFFCC64C D081                        	ADD.L	D1,D0	;	add it to the first <EXPR3>
   9264 FFFCC64E 6900 023A                   	BVS.L	QHOW	;	branch if there's an overflow
   9265 FFFCC652 60EA                        	BRA	XP23	;	else go back for more operations
   9266 FFFCC654                             XP25:
   9267 FFFCC654 6100 044E                   	BSR.L	TSTC		;subtract?
   9268 FFFCC658 2D 75                       	DC.B	'-',XP42-$
   9269 FFFCC65A                             XP26:
   9270 FFFCC65A 2F00                        	MOVE.L	D0,-(SP)	;yes, save the result of 1st <EXPR3>
   9271 FFFCC65C 6100 000A                   	BSR	EXPR3		;get second <EXPR3>
   9272 FFFCC660 4480                        	NEG.L	D0		;change its sign
   9273 FFFCC662 4EF9 FFFC C64A              	JMP	XP24		;and do an addition
                                             
   9275 FFFCC668                             EXPR3:
   9276 FFFCC668 6100 002C                   	BSR	EXPR4		;get first <EXPR4>
   9277 FFFCC66C                             XP31:
   9278 FFFCC66C 6100 0436                   	BSR.L	TSTC	;	multiply?
   9279 FFFCC670 2A 0F                       	DC.B	'*',XP34-$
   9280 FFFCC672 2F00                        	MOVE.L	D0,-(SP);	yes, save that first result
   9281 FFFCC674 6100 0020                   	BSR	EXPR4		;get second <EXPR4>
   9282 FFFCC678 221F                        	MOVE.L	(SP)+,D1
   9283 FFFCC67A 6100 00A8                   	BSR.L	MULT32	;	multiply the two
   9284 FFFCC67E 60EC                        	BRA	XP31		;then look for more terms
   9285 FFFCC680                             XP34:
   9286 FFFCC680 6100 0422                   	BSR.L	TSTC;		divide?
   9287 FFFCC684 2F 49                       	DC.B	'/',XP42-$
   9288 FFFCC686 2F00                        	MOVE.L	D0,-(SP);	save result of 1st <EXPR4>
   9289 FFFCC688 6100 000C                   	BSR	EXPR4		;get second <EXPR4>
   9290 FFFCC68C 221F                        	MOVE.L	(SP)+,D1
   9291 FFFCC68E C141                        	EXG	D0,D1
   9292 FFFCC690 6100 00D4                   	BSR.L	DIV32	;	do the division
   9293 FFFCC694 60D6                        	BRA	XP31		;go back for any more terms
                                             
   9295 FFFCC696                             EXPR4:
   9296 FFFCC696 43F9 FFFC C14C              	LEA	TAB4,A1 ;	find possible function
   9297 FFFCC69C 45F9 FFFC C196              	LEA	TAB4_1,A2
   9298 FFFCC6A2 6000 FB1E                   	BRA	EXEC
   9299 FFFCC6A6                             XP40:
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 102
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9300 FFFCC6A6 6100 002C                   	BSR	TSTV	;	nope, not a function
   9301 FFFCC6AA 6508                        	BCS	XP41		;nor a variable
   9302 FFFCC6AC 2240                        	MOVE.L	D0,A1
   9303 FFFCC6AE 4280                        	CLR.L	D0
   9304 FFFCC6B0 2011                        	MOVE.L	(A1),D0 ;	if a variable, return its value in D0
   9305 FFFCC6B2                             EXP4RT:
   9306 FFFCC6B2 4E75                        	RTS
   9307 FFFCC6B4                             XP41:
   9308 FFFCC6B4 6100 0408                   	BSR.L	TSTNUM	;	or is it a number?
   9309 FFFCC6B8 2001                        	MOVE.L	D1,D0
   9310 FFFCC6BA 4A82                        	TST	D2		;(if not, # of digits will be zero)
   9311 FFFCC6BC 66F4                        	BNE	EXP4RT	;	if so, return it in D0
   9312 FFFCC6BE                             PARN:
   9313 FFFCC6BE 6100 03E4                   	BSR.L	TSTC	;	else look for ( EXPR )
   9314 FFFCC6C2 28 0D                       	DC.B	'(',XP43-$
   9315 FFFCC6C4 6100 FEFC                   	BSR	EXPR
   9316 FFFCC6C8 6100 03DA                   	BSR.L	TSTC
   9317 FFFCC6CC 29 03                       	DC.B	')',XP43-$
   9318 FFFCC6CE                             XP42:
   9319 FFFCC6CE 4E75                        	RTS
   9320 FFFCC6D0                             XP43:
   9321 FFFCC6D0 6000 016C                   	BRA.L	QWHAT	;	else say "What?"
                                             
                                             ;*
                                             ;* ===== Test for a valid variable name.  Returns Carry=1 if not
                                             ;*	found, else returns Carry=0 and the address of the
                                             ;*	variable in D0.
                                             
   9328 FFFCC6D4                             TSTV:
   9329 FFFCC6D4 6100 0420                   	BSR.L	IGNBLK
   9330 FFFCC6D8 4280                        	CLR.L	D0
   9331 FFFCC6DA 1010                        	MOVE.B	(A0),D0 ;	look at the program text
   9332 FFFCC6DC 0400 0040                   	SUB.B	#'@',D0
   9333 FFFCC6E0 6540                        	BCS	TSTVRT	;	C=1: not a variable
   9334 FFFCC6E2 6628                        	BNE	TV1		;branch if not "@" array
   9335 FFFCC6E4 5288                        	ADDQ	#1,A0	;	If it is, it should be
   9336 FFFCC6E6 6100 FFD6                   	BSR	PARN		;followed by (EXPR) as its index.
   9337 FFFCC6EA D080                        	ADD.L	D0,D0
   9338 FFFCC6EC 6500 019C                   	BCS.L	QHOW	;	say "How?" if index is too big
   9339 FFFCC6F0 D080                        	ADD.L	D0,D0
   9340 FFFCC6F2 6500 0196                   	BCS.L	QHOW
   9341 FFFCC6F6 2F00                        	MOVE.L	D0,-(SP)	;save the index
   9342 FFFCC6F8 6100 00FA                   	BSR.L	SIZE_		;get amount of free memory
   9343 FFFCC6FC 221F                        	MOVE.L	(SP)+,D1	;get back the index
   9344 FFFCC6FE B081                        	CMP.L	D1,D0		;see if there's enough memory
   9345 FFFCC700 6300 017E                   	BLS.L	QSORRY		;if not, say "Sorry"
   9346 FFFCC704 2038 0628                   	MOVE.L	VARBGN,D0	;put address of array element...
   9347 FFFCC708 9081                        	SUB.L	D1,D0		;into D0
   9348 FFFCC70A 4E75                        	RTS
   9349 FFFCC70C                             TV1:
   9350 FFFCC70C B03C 001B                   	CMP.B	#27,D0		;if not @, is it A through Z?
   9351 FFFCC710 0A3C 0001                   	EOR	#1,CCR
   9352 FFFCC714 650C                        	BCS	TSTVRT		;if not, set Carry and return
   9353 FFFCC716 5288                        	ADDQ	#1,A0	;	else bump the text pointer
   9354 FFFCC718 D080                        	ADD	D0,D0		;compute the variable's address
   9355 FFFCC71A D080                        	ADD	D0,D0
   9356 FFFCC71C 2238 0628                   	MOVE.L	VARBGN,D1
   9357 FFFCC720 D081                        	ADD	D1,D0		;and return it in D0 with Carry=0
   9358 FFFCC722                             TSTVRT:
   9359 FFFCC722 4E75                        	RTS
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 103
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             ;*
                                             ;* ===== Multiplies the 32 bit values in D0 and D1, returning
                                             ;*	the 32 bit result in D0.
                                             ;*
   9365 FFFCC724                             MULT32:
   9366 FFFCC724 2801                        	MOVE.L	D1,D4
   9367 FFFCC726 B184                        	EOR.L	D0,D4	;	see if the signs are the same
   9368 FFFCC728 4A80                        	TST.L	D0		;take absolute value of D0
   9369 FFFCC72A 6A02                        	BPL	MLT1
   9370 FFFCC72C 4480                        	NEG.L	D0
   9371 FFFCC72E                             MLT1:
   9372 FFFCC72E 4A81                        	TST.L	D1	;	take absolute value of D1
   9373 FFFCC730 6A02                        	BPL	MLT2
   9374 FFFCC732 4481                        	NEG.L	D1
   9375 FFFCC734                             MLT2:
   9376 FFFCC734 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;is second argument <= 16 bits?
   9377 FFFCC73A 630C                        	BLS	MLT3	;	OK, let it through
   9378 FFFCC73C C141                        	EXG	D0,D1	;	else swap the two arguments
   9379 FFFCC73E B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;and check 2nd argument again
   9380 FFFCC744 6200 0144                   	BHI.L	QHOW		;one of them MUST be 16 bits
   9381 FFFCC748                             MLT3:
   9382 FFFCC748 2400                        	MOVE	D0,D2	;	prepare for 32 bit X 16 bit multiply
   9383 FFFCC74A C4C1                        	MULU	D1,D2		;multiply low word
   9384 FFFCC74C 4840                        	SWAP	D0
   9385 FFFCC74E C0C1                        	MULU	D1,D0		;multiply high word
   9386 FFFCC750 4840                        	SWAP	D0
                                             ;*** Rick Murray's bug correction follows:
   9388 FFFCC752 4A80                        	TST	D0		;if lower word not 0, then overflow
   9389 FFFCC754 6600 0134                   	BNE.L	QHOW	;	if overflow, say "How?"
   9390 FFFCC758 D082                        	ADD.L	D2,D0	;	D0 now holds the product
   9391 FFFCC75A 6B00 012E                   	BMI.L	QHOW	;	if sign bit set, it's an overflow
   9392 FFFCC75E 4A84                        	TST.L	D4		;were the signs the same?
   9393 FFFCC760 6A02                        	BPL	MLTRET
   9394 FFFCC762 4480                        	NEG.L	D0		;if not, make the result negative
   9395 FFFCC764                             MLTRET:
   9396 FFFCC764 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Divide the 32 bit value in D0 by the 32 bit value in D1.
                                             ;*	Returns the 32 bit quotient in D0, remainder in D1.
                                             ;*
   9402 FFFCC766                             DIV32:
   9403 FFFCC766 4A81                        	TST.L	D1		;check for divide-by-zero
   9404 FFFCC768 6700 0120                   	BEQ.L	QHOW		;if so, say "How?"
   9405 FFFCC76C 2401                        	MOVE.L	D1,D2
   9406 FFFCC76E 2801                        	MOVE.L	D1,D4
   9407 FFFCC770 B184                        	EOR.L	D0,D4		;see if the signs are the same
   9408 FFFCC772 4A80                        	TST.L	D0		;take absolute value of D0
   9409 FFFCC774 6A02                        	BPL	DIV1
   9410 FFFCC776 4480                        	NEG.L	D0
   9411 FFFCC778                             DIV1:
   9412 FFFCC778 4A81                        	TST.L	D1	;	take absolute value of D1
   9413 FFFCC77A 6A02                        	BPL	DIV2
   9414 FFFCC77C 4481                        	NEG.L	D1
   9415 FFFCC77E                             DIV2:
   9416 FFFCC77E 761F                        	MOVEQ	#31,D3	;	iteration count for 32 bits
   9417 FFFCC780 2200                        	MOVE.L	D0,D1
   9418 FFFCC782 4280                        	CLR.L	D0
   9419 FFFCC784                             DIV3:
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 104
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9420 FFFCC784 D281                        	ADD.L	D1,D1	;	(This algorithm was translated from
   9421 FFFCC786 D180                        	ADDX.L	D0,D0		;the divide routine in Ron Cain's
   9422 FFFCC788 6708                        	BEQ	DIV4		;Small-C run time library.)
   9423 FFFCC78A B082                        	CMP.L	D2,D0
   9424 FFFCC78C 6B04                        	BMI	DIV4
   9425 FFFCC78E 5281                        	ADDQ.L	#1,D1
   9426 FFFCC790 9082                        	SUB.L	D2,D0
   9427 FFFCC792                             DIV4:
   9428 FFFCC792 51CB FFF0                   	DBRA	D3,DIV3
   9429 FFFCC796 C141                        	EXG	D0,D1	;	put rem. & quot. in proper registers
   9430 FFFCC798 4A84                        	TST.L	D4	;	were the signs the same?
   9431 FFFCC79A 6A04                        	BPL	DIVRT
   9432 FFFCC79C 4480                        	NEG.L	D0	;	if not, results are negative
   9433 FFFCC79E 4481                        	NEG.L	D1
   9434 FFFCC7A0                             DIVRT:
   9435 FFFCC7A0 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The PEEK function returns the byte stored at the address
                                             ;*	contained in the following expression.
                                             ;*
   9441 FFFCC7A2                             PEEK:
   9442 FFFCC7A2 6100 FF1A                   	BSR	PARN	;	get the memory address
   9443 FFFCC7A6 2240                        	MOVE.L	D0,A1
   9444 FFFCC7A8 4280                        	CLR.L	D0		;upper 3 bytes will be zero
   9445 FFFCC7AA 1011                        	MOVE.B	(A1),D0 ;	get the addressed byte
   9446 FFFCC7AC 4E75                        	RTS			;and return it
                                             
                                             ;*
                                             ;* ===== The RND function returns a random number from 1 to
                                             ;*	the value of the following expression in D0.
                                             ;*
   9452 FFFCC7AE                             RND:
   9453 FFFCC7AE 6100 FF0E                   	BSR	PARN	;	get the upper limit
   9454 FFFCC7B2 4A80                        	TST.L	D0	;	it must be positive and non-zero
   9455 FFFCC7B4 6700 00D4                   	BEQ.L	QHOW
   9456 FFFCC7B8 6B00 00D0                   	BMI.L	QHOW
   9457 FFFCC7BC 2200                        	MOVE.L	D0,D1
   9458 FFFCC7BE 2278 0600                   	MOVE.L	RANPNT,A1	;get memory as a random number
   9459 FFFCC7C2 B3FC FFFC CC78              	CMP.L	#LSTROM,A1
   9460 FFFCC7C8 6506                        	BCS	RA1
   9461 FFFCC7CA 43F9 FFFC C000              	LEA	START,A1	;wrap around if end of program
   9462 FFFCC7D0                             RA1:
   9463 FFFCC7D0 2019                        	MOVE.L	(A1)+,D0;	get the slightly random number
   9464 FFFCC7D2 0880 001F                   	BCLR	#31,D0	;	make sure it's positive
   9465 FFFCC7D6 21C9 0600                   	MOVE.L	A1,RANPNT	;(even I can do better than this!)
   9466 FFFCC7DA 6100 FF8A                   	BSR	DIV32		;RND(n)=MOD(number,n)+1
   9467 FFFCC7DE 2001                        	MOVE.L	D1,D0	;	MOD is the remainder of the div.
   9468 FFFCC7E0 5280                        	ADDQ.L	#1,D0
   9469 FFFCC7E2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The ABS function returns an absolute value in D0.
                                             ;*
   9474 FFFCC7E4                             ABS:
   9475 FFFCC7E4 6100 FED8                   	BSR	PARN		;get the following expr.'s value
   9476 FFFCC7E8 4A80                        	TST.L	D0
   9477 FFFCC7EA 6A06                        	BPL	ABSRT
   9478 FFFCC7EC 4480                        	NEG.L	D0		;if negative, complement it
   9479 FFFCC7EE 6B00 009A                   	BMI.L	QHOW	;	if still negative, it was too big
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 105
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9480 FFFCC7F2                             ABSRT:
   9481 FFFCC7F2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The SIZE function returns the size of free memory in D0.
                                             ;*
   9486 FFFCC7F4                             SIZE_:
   9487 FFFCC7F4 2038 0628                   	MOVE.L	VARBGN,D0	;get the number of free bytes...
   9488 FFFCC7F8 90B8 0624                   	SUB.L	TXTUNF,D0	;between 'TXTUNF' and 'VARBGN'
   9489 FFFCC7FC 4E75                        	RTS			;return the number in D0
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** SETVAL *** FIN *** ENDCHK *** ERROR (& friends) ***
                                             ;*
                                             ;* 'SETVAL' expects a variable, followed by an equal sign and then
                                             ;* an expression.  It evaluates the expression and sets the variable
                                             ;* to that value.
                                             ;*
                                             ;* 'FIN' checks the end of a command.  If it ended with ":",
                                             ;* execution continues.	If it ended with a CR, it finds the
                                             ;* the next line and continues from there.
                                             ;*
                                             ;* 'ENDCHK' checks if a command is ended with a CR. This is
                                             ;* required in certain commands, such as GOTO, RETURN, STOP, etc.
                                             ;*
                                             ;* 'ERROR' prints the string pointed to by A0. It then prints the
                                             ;* line pointed to by CURRNT with a "?" inserted at where the
                                             ;* old text pointer (should be on top of the stack) points to.
                                             ;* Execution of Tiny BASIC is stopped and a warm start is done.
                                             ;* If CURRNT is zero (indicating a direct command), the direct
                                             ;* command is not printed. If CURRNT is -1 (indicating
                                             ;* 'INPUT' command in progress), the input line is not printed
                                             ;* and execution is not terminated but continues at 'INPERR'.
                                             ;*
                                             ;* Related to 'ERROR' are the following:
                                             ;* 'QWHAT' saves text pointer on stack and gets "What?" message.
                                             ;* 'AWHAT' just gets the "What?" message and jumps to 'ERROR'.
                                             ;* 'QSORRY' and 'ASORRY' do the same kind of thing.
                                             ;* 'QHOW' and 'AHOW' also do this for "How?".
                                             ;*
   9522 FFFCC7FE                             SETVAL:
   9523 FFFCC7FE 6100 FED4                   	BSR	TSTV	;	variable name?
   9524 FFFCC802 653A                        	BCS	QWHAT		;if not, say "What?"
   9525 FFFCC804 2F00                        	MOVE.L	D0,-(SP);	save the variable's address
   9526 FFFCC806 6100 029C                   	BSR.L	TSTC	;	get past the "=" sign
   9527 FFFCC80A 3D 0B                       	DC.B	'=',SV1-$
   9528 FFFCC80C 6100 FDB4                   	BSR	EXPR	;	evaluate the expression
   9529 FFFCC810 2C5F                        	MOVE.L	(SP)+,A6
   9530 FFFCC812 2C80                        	MOVE.L	D0,(A6) ;	and save its value in the variable
   9531 FFFCC814 4E75                        	RTS
   9532 FFFCC816                             SV1:
   9533 FFFCC816 6026                        	BRA	QWHAT	;	if no "=" sign
                                             
   9535 FFFCC818                             FIN:
   9536 FFFCC818 6100 028A                   	BSR.L	TSTC	;	*** FIN ***
   9537 FFFCC81C 3A 07                       	DC.B	':',FI1-$
   9538 FFFCC81E 588F                        	ADDQ.L	#4,SP	;	if ":", discard return address
   9539 FFFCC820 6000 FA1C                   	BRA	RUNSML	;	continue on the same line
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 106
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9540 FFFCC824                             FI1:
   9541 FFFCC824 6100 027E                   	BSR.L	TSTC	;	not ":", is it a CR?
   9542 FFFCC828 0D 07                       	DC.B	CR,FI2-$
   9543 FFFCC82A 588F                        	ADDQ.L	#4,SP	;	yes, purge return address
   9544 FFFCC82C 6000 F9F4                   	BRA	RUNNXL		;execute the next line
   9545 FFFCC830                             FI2:
   9546 FFFCC830 4E75                        	RTS			;else return to the caller
                                             
   9548 FFFCC832                             ENDCHK:
   9549 FFFCC832 6100 02C2                   	BSR.L	IGNBLK
   9550 FFFCC836 0C10 000D                   	CMP.B	#CR,(A0);	does it end with a CR?
   9551 FFFCC83A 6602                        	BNE	QWHAT	;	if not, say "WHAT?"
   9552 FFFCC83C 4E75                        	RTS
                                             
   9554 FFFCC83E                             QWHAT:
   9555 FFFCC83E 2F08                        	MOVE.L	A0,-(SP)
   9556 FFFCC840                             AWHAT:
   9557 FFFCC840 4DF9 FFFC CBFA              	LEA	WHTMSG,A6
   9558 FFFCC846                             ERROR:
   9559 FFFCC846 6100 031E                   	BSR.L	PRMESG	;	display the error message
   9560 FFFCC84A 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9561 FFFCC84C 2038 0604                   	MOVE.L	CURRNT,D0	;get the current line number
   9562 FFFCC850 6700 F80E                   	BEQ	WSTART		;if zero, do a warm start
   9563 FFFCC854 B0BC FFFF FFFF              	CMP.L	#-1,D0		;is the line no. pointer = -1?
   9564 FFFCC85A 6700 FBC2                   	BEQ	INPERR		;if so, redo input
   9565 FFFCC85E 1F10                        	MOVE.B	(A0),-(SP)	;save the char. pointed to
   9566 FFFCC860 4210                        	CLR.B	(A0)		;put a zero where the error is
   9567 FFFCC862 2278 0604                   	MOVE.L	CURRNT,A1	;point to start of current line
   9568 FFFCC866 6100 0220                   	BSR.L	PRTLN		;display the line in error up to the 0
   9569 FFFCC86A 109F                        	MOVE.B	(SP)+,(A0)	;restore the character
   9570 FFFCC86C 103C 003F                   	MOVE.B	#'?',D0     ;    display a "?"
   9571 FFFCC870 6100 F796                   	BSR	GOOUT
   9572 FFFCC874 4280                        	CLR	D0
   9573 FFFCC876 5389                        	SUBQ.L	#1,A1		;point back to the error char.
   9574 FFFCC878 6100 013E                   	BSR.L	PRTSTG		;display the rest of the line
   9575 FFFCC87C 6000 F7E2                   	BRA	WSTART		;and do a warm start
   9576 FFFCC880                             QSORRY:
   9577 FFFCC880 2F08                        	MOVE.L	A0,-(SP)
   9578 FFFCC882                             ASORRY:
   9579 FFFCC882 4DF9 FFFC CC02              	LEA	SRYMSG,A6
   9580 FFFCC888 60BC                        	BRA	ERROR
   9581 FFFCC88A                             QHOW:
   9582 FFFCC88A 2F08                        	MOVE.L	A0,-(SP)	;Error: "How?"
   9583 FFFCC88C                             AHOW:
   9584 FFFCC88C 4DF9 FFFC CBF3              	LEA	HOWMSG,A6
   9585 FFFCC892 60B2                        	BRA	ERROR
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GETLN *** FNDLN (& friends) ***
                                             ;*
                                             ;* 'GETLN' reads in input line into 'BUFFER'. It first prompts with
                                             ;* the character in D0 (given by the caller), then it fills the
                                             ;* buffer and echos. It ignores LF's but still echos
                                             ;* them back. Control-H is used to delete the last character
                                             ;* entered (if there is one), and control-X is used to delete the
                                             ;* whole line and start over again. CR signals the end of a line,
                                             ;* and causes 'GETLN' to return.
                                             ;*
                                             ;* 'FNDLN' finds a line with a given line no. (in D1) in the
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 107
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* text save area.  A1 is used as the text pointer. If the line
                                             ;* is found, A1 will point to the beginning of that line
                                             ;* (i.e. the high byte of the line no.), and flags are NC & Z.
                                             ;* If that line is not there and a line with a higher line no.
                                             ;* is found, A1 points there and flags are NC & NZ. If we reached
                                             ;* the end of the text save area and cannot find the line, flags
                                             ;* are C & NZ.
                                             ;* 'FNDLN' will initialize A1 to the beginning of the text save
                                             ;* area to start the search. Some other entries of this routine
                                             ;* will not initialize A1 and do the search.
                                             ;* 'FNDLNP' will start with A1 and search for the line no.
                                             ;* 'FNDNXT' will bump A1 by 2, find a CR and then start search.
                                             ;* 'FNDSKP' uses A1 to find a CR, and then starts the search.
                                             ;*
   9614 FFFCC894                             GETLN:
   9615 FFFCC894 6100 F772                   	BSR	GOOUT		;display the prompt
   9616 FFFCC898 103C 0020                   	MOVE.B	#' ',D0      ;   and a space
   9617 FFFCC89C 6100 F76A                   	BSR	GOOUT
   9618 FFFCC8A0 41F8 0630                   	LEA	BUFFER,A0;	A0 is the buffer pointer
   9619 FFFCC8A4                             GL1:
   9620 FFFCC8A4 6100 02A8                   	BSR.L	CHKIO;		check keyboard
   9621 FFFCC8A8 67FA                        	BEQ	GL1	;	wait for a char. to come in
   9622 FFFCC8AA B03C 0008                   	CMP.B	#CTRLH,D0	;delete last character?
   9623 FFFCC8AE 6726                        	BEQ	GL3	;	if so
   9624 FFFCC8B0 B03C 0018                   	CMP.B	#CTRLX,D0;	delete the whole line?
   9625 FFFCC8B4 6744                        	BEQ	GL4	;	if so
   9626 FFFCC8B6 B03C 000D                   	CMP.B	#CR,D0	;	accept a CR
   9627 FFFCC8BA 6706                        	BEQ	GL2
   9628 FFFCC8BC B03C 0020                   	CMP.B	#' ',D0  ;       if other control char., discard it
   9629 FFFCC8C0 65E2                        	BCS	GL1
   9630 FFFCC8C2                             GL2:
   9631 FFFCC8C2 10C0                        	MOVE.B	D0,(A0)+;	save the char.
   9632 FFFCC8C4 6100 F742                   	BSR	GOOUT		;echo the char back out
   9633 FFFCC8C8 B03C 000D                   	CMP.B	#CR,D0	;	if it's a CR, end the line
   9634 FFFCC8CC 675C                        	BEQ	GL7
   9635 FFFCC8CE B1FC 0000 067F              	CMP.L	#(BUFFER+BUFLEN-1),A0	;any more room?
   9636 FFFCC8D4 65CE                        	BCS	GL1	;	yes: get some more, else delete last char.
   9637 FFFCC8D6                             GL3:
   9638 FFFCC8D6 103C 0008                   	MOVE.B	#CTRLH,D0	;delete a char. if possible
   9639 FFFCC8DA 6100 F72C                   	BSR	GOOUT
   9640 FFFCC8DE 103C 0020                   	MOVE.B	#' ',D0
   9641 FFFCC8E2 6100 F724                   	BSR	GOOUT
   9642 FFFCC8E6 B1FC 0000 0630              	CMP.L	#BUFFER,A0	;any char.'s left?
   9643 FFFCC8EC 63B6                        	BLS	GL1		;if not
   9644 FFFCC8EE 103C 0008                   	MOVE.B	#CTRLH,D0;	if so, finish the BS-space-BS sequence
   9645 FFFCC8F2 6100 F714                   	BSR	GOOUT
   9646 FFFCC8F6 5388                        	SUBQ.L	#1,A0	;	decrement the text pointer
   9647 FFFCC8F8 60AA                        	BRA	GL1		;back for more
   9648 FFFCC8FA                             GL4:
   9649 FFFCC8FA 2208                        	MOVE.L	A0,D1	;	delete the whole line
   9650 FFFCC8FC 0481 0000 0630              	SUB.L	#BUFFER,D1;	figure out how many backspaces we need
   9651 FFFCC902 671E                        	BEQ	GL6		;if none needed, branch
   9652 FFFCC904 5381                        	SUBQ	#1,D1	;	adjust for DBRA
   9653 FFFCC906                             GL5:
   9654 FFFCC906 103C 0008                   	MOVE.B	#CTRLH,D0	;and display BS-space-BS sequences
   9655 FFFCC90A 6100 F6FC                   	BSR	GOOUT
   9656 FFFCC90E 103C 0020                   	MOVE.B	#' ',D0
   9657 FFFCC912 6100 F6F4                   	BSR	GOOUT
   9658 FFFCC916 103C 0008                   	MOVE.B	#CTRLH,D0
   9659 FFFCC91A 6100 F6EC                   	BSR	GOOUT
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 108
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9660 FFFCC91E 51C9 FFE6                   	DBRA	D1,GL5
   9661 FFFCC922                             GL6:
   9662 FFFCC922 41F8 0630                   	LEA	BUFFER,A0	;reinitialize the text pointer
   9663 FFFCC926 6000 FF7C                   	BRA	GL1		;and go back for more
   9664 FFFCC92A                             GL7:
   9665 FFFCC92A 103C 000A                   	MOVE.B	#LF,D0	;	echo a LF for the CR
   9666 FFFCC92E 6100 F6D8                   	BSR	GOOUT
   9667 FFFCC932 4E75                        	RTS
                                             
   9669 FFFCC934                             FNDLN:
   9670 FFFCC934 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;line no. must be < 65535
   9671 FFFCC93A 6400 FF4E                   	BCC	QHOW
   9672 FFFCC93E 2279 FFFC C01C              	MOVE.L	TXTBGN,A1	;init. the text save pointer
                                             
   9674 FFFCC944                             FNDLNP:
   9675 FFFCC944 2478 0624                   	MOVE.L	TXTUNF,A2	;check if we passed the end
   9676 FFFCC948 538A                        	SUBQ.L	#1,A2
   9677 FFFCC94A B5C9                        	CMP	A1,A2
   9678 FFFCC94C 650C                        	BCS	FNDRET	;	if so, return with Z=0 & C=1
   9679 FFFCC94E 1419                        	MOVE.B	(A1)+,D2	;if not, get a line no.
   9680 FFFCC950 E18A                        	LSL	#8,D2
   9681 FFFCC952 1411                        	MOVE.B	(A1),D2
   9682 FFFCC954 5389                        	SUBQ.L	#1,A1
   9683 FFFCC956 B481                        	CMP	D1,D2		;is this the line we want?
   9684 FFFCC958 6502                        	BCS	FNDNXT		;no, not there yet
   9685 FFFCC95A                             FNDRET:
   9686 FFFCC95A 4E75                        	RTS			;return the cond. codes
                                             
   9688 FFFCC95C                             FNDNXT:
   9689 FFFCC95C 5489                        	ADDQ.L	#2,A1;		find the next line
                                             
   9691 FFFCC95E                             FNDSKP:
   9692 FFFCC95E 0C19 000D                   	CMP.B	#CR,(A1)+	;try to find a CR
   9693 FFFCC962 66FA                        	BNE	FNDSKP		;keep looking
   9694 FFFCC964 60DE                        	BRA	FNDLNP		;check if end of text
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** MVUP *** MVDOWN *** POPA *** PUSHA ***
                                             ;*
                                             ;* 'MVUP' moves a block up from where A1 points to where A2 points
                                             ;* until A1=A3
                                             ;*
                                             ;* 'MVDOWN' moves a block down from where A1 points to where A3
                                             ;* points until A1=A2
                                             ;*
                                             ;* 'POPA' restores the 'FOR' loop variable save area from the stack
                                             ;*
                                             ;* 'PUSHA' stacks for 'FOR' loop variable save area onto the stack
                                             ;*
   9711 FFFCC966                             MVUP:
   9712 FFFCC966 B7C9                        	CMP.L	A1,A3	;	see the above description
   9713 FFFCC968 6704                        	BEQ	MVRET
   9714 FFFCC96A 14D9                        	MOVE.B	(A1)+,(A2)+
   9715 FFFCC96C 60F8                        	BRA	MVUP
   9716 FFFCC96E                             MVRET:
   9717 FFFCC96E 4E75                        	RTS
                                             
   9719 FFFCC970                             MVDOWN:
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 109
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9720 FFFCC970 B5C9                        	CMP.L	A1,A2	;	see the above description
   9721 FFFCC972 67FA                        	BEQ	MVRET
   9722 FFFCC974 1721                        	MOVE.B	-(A1),-(A3)
   9723 FFFCC976 60F8                        	BRA	MVDOWN
                                             
   9725 FFFCC978                             POPA:
   9726 FFFCC978 2C5F                        	MOVE.L	(SP)+,A6	;A6 = return address
   9727 FFFCC97A 21DF 0610                   	MOVE.L	(SP)+,LOPVAR	;restore LOPVAR, but zero means no more
   9728 FFFCC97E 6710                        	BEQ	PP1
   9729 FFFCC980 21DF 0614                   	MOVE.L	(SP)+,LOPINC	;if not zero, restore the rest
   9730 FFFCC984 21DF 0618                   	MOVE.L	(SP)+,LOPLMT
   9731 FFFCC988 21DF 061C                   	MOVE.L	(SP)+,LOPLN
   9732 FFFCC98C 21DF 0620                   	MOVE.L	(SP)+,LOPPT
   9733 FFFCC990                             PP1:
   9734 FFFCC990 4ED6                        	JMP	(A6)	;	return
                                             
   9736 FFFCC992                             PUSHA:
   9737 FFFCC992 2238 062C                   	MOVE.L	STKLMT,D1	;Are we running out of stack room?
   9738 FFFCC996 928F                        	SUB.L	SP,D1
   9739 FFFCC998 6400 FEE6                   	BCC	QSORRY		;if so, say we're sorry
   9740 FFFCC99C 2C5F                        	MOVE.L	(SP)+,A6	;else get the return address
   9741 FFFCC99E 2238 0610                   	MOVE.L	LOPVAR,D1	;save loop variables
   9742 FFFCC9A2 6710                        	BEQ	PU1		;if LOPVAR is zero, that's all
   9743 FFFCC9A4 2F38 0620                   	MOVE.L	LOPPT,-(SP)	;else save all the others
   9744 FFFCC9A8 2F38 061C                   	MOVE.L	LOPLN,-(SP)
   9745 FFFCC9AC 2F38 0618                   	MOVE.L	LOPLMT,-(SP)
   9746 FFFCC9B0 2F38 0614                   	MOVE.L	LOPINC,-(SP)
   9747 FFFCC9B4                             PU1:
   9748 FFFCC9B4 2F01                        	MOVE.L	D1,-(SP)
   9749 FFFCC9B6 4ED6                        	JMP	(A6)		;return
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** PRTSTG *** QTSTG *** PRTNUM *** PRTLN ***
                                             ;*
                                             ;* 'PRTSTG' prints a string pointed to by A1. It stops printing
                                             ;* and returns to the caller when either a CR is printed or when
                                             ;* the next byte is the same as what was passed in D0 by the
                                             ;* caller.
                                             ;*
                                             ;* 'QTSTG' looks for an underline (back-arrow on some systems),
                                             ;* single-quote, or double-quote.  If none of these are found, returns
                                             ;* to the caller.  If underline, outputs a CR without a LF.  If single
                                             ;* or double quote, prints the quoted string and demands a matching
                                             ;* end quote.  After the printing, the next 2 bytes of the caller are
                                             ;* skipped over (usually a short branch instruction).
                                             ;*
                                             ;* 'PRTNUM' prints the 32 bit number in D1, leading blanks are added if
                                             ;* needed to pad the number of spaces to the number in D4.
                                             ;* However, if the number of digits is larger than the no. in
                                             ;* D4, all digits are printed anyway. Negative sign is also
                                             ;* printed and counted in, positive sign is not.
                                             ;*
                                             ;* 'PRTLN' prints the saved text line pointed to by A1
                                             ;* with line no. and all.
                                             ;*
   9777 FFFCC9B8                             PRTSTG:
   9778 FFFCC9B8 1200                        	MOVE.B	D0,D1	;	save the stop character
   9779 FFFCC9BA                             PS1:
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 110
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9780 FFFCC9BA 1019                        	MOVE.B	(A1)+,D0	;get a text character
   9781 FFFCC9BC B200                        	CMP.B	D0,D1		;same as stop character?
   9782 FFFCC9BE 6712                        	BEQ	PRTRET		;if so, return
   9783 FFFCC9C0 6100 F646                   	BSR	GOOUT		;display the char.
   9784 FFFCC9C4 B03C 000D                   	CMP.B	#CR,D0		;;is it a C.R.?
   9785 FFFCC9C8 66F0                        	BNE	PS1		;no, go back for more
   9786 FFFCC9CA 103C 000A                   	MOVE.B	#LF,D0	;	yes, add a L.F.
   9787 FFFCC9CE 6100 F638                   	BSR	GOOUT
   9788 FFFCC9D2                             PRTRET:
   9789 FFFCC9D2 4E75                        	RTS			;then return
                                             
   9791 FFFCC9D4                             QTSTG:
   9792 FFFCC9D4 6100 00CE                   	BSR.L	TSTC;		*** QTSTG ***
   9793 FFFCC9D8 22 1B                       	DC.B	'"',QT3-$
   9794 FFFCC9DA 103C 0022                   	MOVE.B	#'"',D0  ;       it is a "
   9795 FFFCC9DE                             QT1:
   9796 FFFCC9DE 2248                        	MOVE.L	A0,A1
   9797 FFFCC9E0 6100 FFD6                   	BSR	PRTSTG		;print until another
   9798 FFFCC9E4 2049                        	MOVE.L	A1,A0
   9799 FFFCC9E6 225F                        	MOVE.L	(SP)+,A1;	pop return address
   9800 FFFCC9E8 B03C 000A                   	CMP.B	#LF,D0	;	was last one a CR?
   9801 FFFCC9EC 6700 F834                   	BEQ	RUNNXL		;if so, run next line
   9802 FFFCC9F0                             QT2:
   9803 FFFCC9F0 5489                        	ADDQ.L	#2,A1	;	skip 2 bytes on return
   9804 FFFCC9F2 4ED1                        	JMP	(A1)		;return
   9805 FFFCC9F4                             QT3:
   9806 FFFCC9F4 6100 00AE                   	BSR.L	TSTC	;	is it a single quote?
   9807 FFFCC9F8 27 07                       	DC.B	'\'',QT4-$
   9808 FFFCC9FA 103C 0027                   	MOVE.B	#'''',D0  ;      if so, do same as above
   9809 FFFCC9FE 60DE                        	BRA	QT1
   9810 FFFCCA00                             QT4:
   9811 FFFCCA00 6100 00A2                   	BSR.L	TSTC		;is it an underline?
   9812 FFFCCA04 5F 0D                       	DC.B	'_',QT5-$
   9813 FFFCCA06 103C 000D                   	MOVE.B	#CR,D0		;if so, output a CR without LF
   9814 FFFCCA0A 6100 F5FC                   	BSR.L	GOOUT
   9815 FFFCCA0E 225F                        	MOVE.L	(SP)+,A1	;pop return address
   9816 FFFCCA10 60DE                        	BRA	QT2
   9817 FFFCCA12                             QT5:
   9818 FFFCCA12 4E75                        	RTS			;none of the above
                                             
   9820 FFFCCA14                             PRTNUM:
   9821 FFFCCA14 2601                        	MOVE.L	D1,D3	;	save the number for later
   9822 FFFCCA16 2F04                        	MOVE	D4,-(SP)	;save the width value
   9823 FFFCCA18 1F3C 00FF                   	MOVE.B	#0xFF,-(SP)	;flag for end of digit string
   9824 FFFCCA1C 4A81                        	TST.L	D1		;is it negative?
   9825 FFFCCA1E 6A04                        	BPL	PN1		;if not
   9826 FFFCCA20 4481                        	NEG.L	D1	;	else make it positive
   9827 FFFCCA22 5384                        	SUBQ	#1,D4	;	one less for width count
   9828 FFFCCA24                             PN1:
   9829 FFFCCA24 82FC 000A                   	DIVU	#10,D1	;	get the next digit
   9830 FFFCCA28 690A                        	BVS	PNOV	;	overflow flag set?
   9831 FFFCCA2A 2001                        	MOVE.L	D1,D0	;	if not, save remainder
   9832 FFFCCA2C 0281 0000 FFFF              	AND.L	#0xFFFF,D1	;strip the remainder
   9833 FFFCCA32 601A                        	BRA	TOASCII 	;skip the overflow stuff
   9834 FFFCCA34                             PNOV:
   9835 FFFCCA34 2001                        	MOVE	D1,D0	;	prepare for long word division
   9836 FFFCCA36 4241                        	CLR.W	D1		;zero out low word
   9837 FFFCCA38 4841                        	SWAP	D1		;high word into low
   9838 FFFCCA3A 82FC 000A                   	DIVU	#10,D1	;	divide high word
   9839 FFFCCA3E 2401                        	MOVE	D1,D2	;	save quotient
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 111
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9840 FFFCCA40 2200                        	MOVE	D0,D1	;	low word into low
   9841 FFFCCA42 82FC 000A                   	DIVU	#10,D1	;	divide low word
   9842 FFFCCA46 2001                        	MOVE.L	D1,D0	;	D0 = remainder
   9843 FFFCCA48 4841                        	SWAP	D1	;	R/Q becomes Q/R
   9844 FFFCCA4A 2202                        	MOVE	D2,D1	;	D1 is low/high
   9845 FFFCCA4C 4841                        	SWAP	D1	;	D1 is finally high/low
   9846 FFFCCA4E                             TOASCII:
   9847 FFFCCA4E 4840                        	SWAP	D0	;	get remainder
   9848 FFFCCA50 1F00                        	MOVE.B	D0,-(SP);	stack it as a digit
   9849 FFFCCA52 4840                        	SWAP	D0
   9850 FFFCCA54 5384                        	SUBQ	#1,D4	;	decrement width count
   9851 FFFCCA56 4A81                        	TST.L	D1		;if quotient is zero, we're done
   9852 FFFCCA58 66CA                        	BNE	PN1
   9853 FFFCCA5A 5384                        	SUBQ	#1,D4	;	adjust padding count for DBRA
   9854 FFFCCA5C 6B0C                        	BMI	PN4		;skip padding if not needed
   9855 FFFCCA5E                             PN3:
   9856 FFFCCA5E 103C 0020                   	MOVE.B	#' ',D0  ;       display the required leading spaces
   9857 FFFCCA62 6100 F5A4                   	BSR	GOOUT
   9858 FFFCCA66 51CC FFF6                   	DBRA	D4,PN3
   9859 FFFCCA6A                             PN4:
   9860 FFFCCA6A 4A83                        	TST.L	D3		;is number negative?
   9861 FFFCCA6C 6A08                        	BPL	PN5
   9862 FFFCCA6E 103C 002D                   	MOVE.B	#'-',D0  ;       if so, display the sign
   9863 FFFCCA72 6100 F594                   	BSR	GOOUT
   9864 FFFCCA76                             PN5:
   9865 FFFCCA76 101F                        	MOVE.B	(SP)+,D0	;now unstack the digits and display
   9866 FFFCCA78 6B0A                        	BMI	PNRET		;until the flag code is reached
   9867 FFFCCA7A 0600 0030                   	ADD.B	#'0',D0   ;      make into ASCII
   9868 FFFCCA7E 6100 F588                   	BSR	GOOUT
   9869 FFFCCA82 60F2                        	BRA	PN5
   9870 FFFCCA84                             PNRET:
   9871 FFFCCA84 281F                        	MOVE	(SP)+,D4	;restore width value
   9872 FFFCCA86 4E75                        	RTS
                                             
   9874 FFFCCA88                             PRTLN:
   9875 FFFCCA88 4281                        	CLR.L	D1
   9876 FFFCCA8A 1219                        	MOVE.B	(A1)+,D1	;get the binary line number
   9877 FFFCCA8C E189                        	LSL	#8,D1
   9878 FFFCCA8E 1219                        	MOVE.B	(A1)+,D1
   9879 FFFCCA90 7805                        	MOVEQ	#5,D4		;display a 5 digit line no.
   9880 FFFCCA92 6100 FF80                   	BSR	PRTNUM
   9881 FFFCCA96 103C 0020                   	MOVE.B	#' ',D0      ;   followed by a blank
   9882 FFFCCA9A 6100 F56C                   	BSR	GOOUT
   9883 FFFCCA9E 4280                        	CLR	D0		;stop char. is a zero
   9884 FFFCCAA0 6000 FF16                   	BRA	PRTSTG	;	display the rest of the line
                                             
                                             ;*
                                             ;* ===== Test text byte following the call to this subroutine. If it
                                             ;*	equals the byte pointed to by A0, return to the code following
                                             ;*	the call. If they are not equal, branch to the point
                                             ;*	indicated by the offset byte following the text byte.
                                             ;*
   9892 FFFCCAA4                             TSTC:
   9893 FFFCCAA4 6100 0050                   	BSR	IGNBLK		;ignore leading blanks
   9894 FFFCCAA8 225F                        	MOVE.L	(SP)+,A1	;get the return address
   9895 FFFCCAAA 1219                        	MOVE.B	(A1)+,D1	;get the byte to compare
   9896 FFFCCAAC B210                        	CMP.B	(A0),D1 	;is it = to what A0 points to?
   9897 FFFCCAAE 6708                        	BEQ	TC1		;if so
   9898 FFFCCAB0 4281                        	CLR.L	D1		;If not, add the second
   9899 FFFCCAB2 1211                        	MOVE.B	(A1),D1 ;	byte following the call to
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 112
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9900 FFFCCAB4 D3C1                        	ADD.L	D1,A1	;	the return address.
   9901 FFFCCAB6 4ED1                        	JMP	(A1)		;jump to the routine
   9902 FFFCCAB8                             TC1:
   9903 FFFCCAB8 5288                        	ADDQ.L	#1,A0	;	if equal, bump text pointer
   9904 FFFCCABA 5289                        	ADDQ.L	#1,A1	;	Skip the 2 bytes following
   9905 FFFCCABC 4ED1                        	JMP	(A1)		;the call and continue.
                                             
                                             ;*
                                             ;* ===== See if the text pointed to by A0 is a number. If so,
                                             ;*	return the number in D1 and the number of digits in D2,
                                             ;*	else return zero in D1 and D2.
                                             ;*
   9912 FFFCCABE                             TSTNUM:
   9913 FFFCCABE 4281                        	CLR.L	D1		;initialize return parameters
   9914 FFFCCAC0 4282                        	CLR	D2
   9915 FFFCCAC2 6100 0032                   	BSR	IGNBLK		;skip over blanks
   9916 FFFCCAC6                             TN1:
   9917 FFFCCAC6 0C10 0030                   	CMP.B	#'0',(A0) ;      is it less than zero?
   9918 FFFCCACA 6528                        	BCS	TSNMRET 	;if so, that's all
   9919 FFFCCACC 0C10 0039                   	CMP.B	#'9',(A0) ;      is it greater than nine?
   9920 FFFCCAD0 6222                        	BHI	TSNMRET 	;if so, return
   9921 FFFCCAD2 B2BC 0CCC CCCC              	CMP.L	#214748364,D1	;see if there's room for new digit
   9922 FFFCCAD8 6400 FDB0                   	BCC	QHOW		;if not, we've overflowd
   9923 FFFCCADC 2001                        	MOVE.L	D1,D0	;	quickly multiply result by 10
   9924 FFFCCADE D281                        	ADD.L	D1,D1
   9925 FFFCCAE0 D281                        	ADD.L	D1,D1
   9926 FFFCCAE2 D280                        	ADD.L	D0,D1
   9927 FFFCCAE4 D281                        	ADD.L	D1,D1
   9928 FFFCCAE6 1018                        	MOVE.B	(A0)+,D0	;add in the new digit
   9929 FFFCCAE8 0280 0000 000F              	AND.L	#0xF,D0
   9930 FFFCCAEE D280                        	ADD.L	D0,D1
   9931 FFFCCAF0 5282                        	ADDQ	#1,D2		;increment the no. of digits
   9932 FFFCCAF2 60D2                        	BRA	TN1
   9933 FFFCCAF4                             TSNMRET:
   9934 FFFCCAF4 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Skip over blanks in the text pointed to by A0.
                                             ;*
   9939 FFFCCAF6                             IGNBLK:
   9940 FFFCCAF6 0C10 0020                   	CMP.B	#' ',(A0)   ;    see if it's a space
   9941 FFFCCAFA 6604                        	BNE	IGBRET		;if so, swallow it
   9942 FFFCCAFC                             IGB1:
   9943 FFFCCAFC 5288                        	ADDQ.L	#1,A0	;	increment the text pointer
   9944 FFFCCAFE 60F6                        	BRA	IGNBLK
   9945 FFFCCB00                             IGBRET:
   9946 FFFCCB00 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Convert the line of text in the input buffer to upper
                                             ;*	case (except for stuff between quotes).
                                             ;*
   9952 FFFCCB02                             TOUPBUF:
   9953 FFFCCB02 41F8 0630                   	LEA	BUFFER,A0	;set up text pointer
   9954 FFFCCB06 4201                        	CLR.B	D1		;clear quote flag
   9955 FFFCCB08                             TOUPB1:
   9956 FFFCCB08 1018                        	MOVE.B	(A0)+,D0	;get the next text char.
   9957 FFFCCB0A B03C 000D                   	CMP.B	#CR,D0		;is it end of line?
   9958 FFFCCB0E 671A                        	BEQ	TOUPBRT 	;if so, return
   9959 FFFCCB10 B03C 0022                   	CMP.B	#'"',D0  ;       a double quote?
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 113
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9960 FFFCCB14 6716                        	BEQ	DOQUO
   9961 FFFCCB16 B03C 0027                   	CMP.B	#'''',D0  ;      or a single quote?
   9962 FFFCCB1A 6710                        	BEQ	DOQUO
   9963 FFFCCB1C 4A01                        	TST.B	D1		;inside quotes?
   9964 FFFCCB1E 66E8                        	BNE	TOUPB1		;if so, do the next one
   9965 FFFCCB20 6100 001A                   	BSR	TOUPPER 	;convert to upper case
   9966 FFFCCB24 1100                        	MOVE.B	D0,-(A0);	store it
   9967 FFFCCB26 5288                        	ADDQ.L	#1,A0
   9968 FFFCCB28 60DE                        	BRA	TOUPB1		;and go back for more
   9969 FFFCCB2A                             TOUPBRT:
   9970 FFFCCB2A 4E75                        	RTS
                                             
   9972 FFFCCB2C                             DOQUO:
   9973 FFFCCB2C 4A01                        	TST.B	D1	;	are we inside quotes?
   9974 FFFCCB2E 6604                        	BNE	DOQUO1
   9975 FFFCCB30 1200                        	MOVE.B	D0,D1	;	if not, toggle inside-quotes flag
   9976 FFFCCB32 60D4                        	BRA	TOUPB1
   9977 FFFCCB34                             DOQUO1:
   9978 FFFCCB34 B200                        	CMP.B	D0,D1	;	make sure we're ending proper quote
   9979 FFFCCB36 66D0                        	BNE	TOUPB1		;if not, ignore it
   9980 FFFCCB38 4201                        	CLR.B	D1		;else clear quote flag
   9981 FFFCCB3A 60CC                        	BRA	TOUPB1
                                             
                                             ;*
                                             ;* ===== Convert the character in D0 to upper case
                                             ;*
   9986 FFFCCB3C                             TOUPPER:
   9987 FFFCCB3C B03C 0061                   	CMP.B	#'a',D0   ;      is it < 'a'?
   9988 FFFCCB40 650A                        	BCS	TOUPRET
   9989 FFFCCB42 B03C 007A                   	CMP.B	#'z',D0        ; or > 'z'?
   9990 FFFCCB46 6204                        	BHI	TOUPRET
   9991 FFFCCB48 0400 0020                   	SUB.B	#32,D0		;if not, make it upper case
   9992 FFFCCB4C                             TOUPRET:
   9993 FFFCCB4C 4E75                        	RTS
                                             
                                             ;*
                                             ;* 'CHKIO' checks the input. If there's no input, it will return
                                             ;* to the caller with the Z flag set. If there is input, the Z
                                             ;* flag is cleared and the input byte is in D0. However, if a
                                             ;* control-C is read, 'CHKIO' will warm-start BASIC and will not
                                             ;* return to the caller.
                                             ;*
  10002 FFFCCB4E                             CHKIO:
  10003 FFFCCB4E 6100 F4BC                   	BSR.L	GOIN	;	get input if possible
  10004 FFFCCB52 670A                        	BEQ	CHKRET		;if Zero, no input
  10005 FFFCCB54 B03C 0003                   	CMP.B	#CTRLC,D0	;is it control-C?
  10006 FFFCCB58 6604                        	BNE	CHKRET		;if not
  10007 FFFCCB5A 6000 F504                   	BRA.L	WSTART		;if so, do a warm start
  10008 FFFCCB5E                             CHKRET:
  10009 FFFCCB5E 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Display a CR-LF sequence
                                             ;*
  10014 FFFCCB60                             CRLF:
  10015 FFFCCB60 4DF9 FFFC CC08              	LEA	CLMSG,A6
                                             
                                             ;*
                                             ;* ===== Display a zero-ended string pointed to by register A6
                                             ;*
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 114
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10020 FFFCCB66                             PRMESG:
  10021 FFFCCB66 101E                        	MOVE.B	(A6)+,D0	;get the char.
  10022 FFFCCB68 6706                        	BEQ	PRMRET		;if it's zero, we're done
  10023 FFFCCB6A 6100 F49C                   	BSR	GOOUT		;else display it
  10024 FFFCCB6E 60F6                        	BRA	PRMESG
  10025 FFFCCB70                             PRMRET:
  10026 FFFCCB70 4E75                        	RTS
                                             
                                             ;******************************************************
                                             ;* The following routines are the only ones that need *
                                             ;* to be changed for a different I/O environment.     *
                                             ;******************************************************
                                             
                                             UART		EQU		0xFFDC0A00
                                             UART_LS		EQU		UART+1
                                             UART_CTRL	EQU		UART+7
                                             KEYBD		EQU		0xFFDC0000
                                             
                                             
                                             ;*
                                             ;* ===== Output character to the console (Port 1) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10043 FFFCCB72                             OUTC:
  10044 FFFCCB72 48E7 C000                   	MOVEM.L	D0/D1,-(SP)
  10045 FFFCCB76 2200                        	MOVE.L	D0,D1
  10046 FFFCCB78 7006                        	MOVEQ	#6,D0
  10047 FFFCCB7A 4E4F                        	TRAP	#15
  10048 FFFCCB7C 4CDF 0003                   	MOVEM.L	(SP)+,D0/D1
  10049 FFFCCB80 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the console into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10055 FFFCCB82                             INC:
  10056 FFFCCB82 2F01                        	move.l	d1,-(a7)
  10057 FFFCCB84 7007                        	moveq	#7,d0		; check for key
  10058 FFFCCB86 4E4F                        	trap	#15
  10059 FFFCCB88 4A00                        	tst.b	d0
  10060 FFFCCB8A 670A                        	beq.s	.0001
  10061 FFFCCB8C 7005                        	moveq	#5,d0
  10062 FFFCCB8E 4E4F                        	trap	#15
  10063 FFFCCB90 2001                        	move.l	d1,d0
  10064 FFFCCB92 221F                        	move.l	(a7)+,d1
  10065 FFFCCB94 4A00                        	tst.b	d0
  10066 FFFCCB96                             .0001:
  10067 FFFCCB96 4E75                        	rts
                                             
                                             ;*
                                             ;* ===== Output character to the host (Port 2) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10073 FFFCCB98                             AUXOUT:
  10074 FFFCCB98 0839 0005 FFDC 0A01         	BTST	#5,UART_LS	;is port ready for a character?
  10075 FFFCCBA0 67F6                        	BEQ		AUXOUT		;if not, wait for it
  10076 FFFCCBA2 13C0 FFDC 0A00              	MOVE.B	D0,UART		;out it goes.
  10077 FFFCCBA8 4E75                        	RTS
                                             
                                             ;*
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 115
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* ===== Input a character from the host into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10083 FFFCCBAA                             AUXIN:
  10084 FFFCCBAA 0839 0000 FFDC 0A01         	BTST	#0,UART_LS	;is character ready?
  10085 FFFCCBB2 670A                        	BEQ		AXIRET		;if not, return Zero status
  10086 FFFCCBB4 1039 FFDC 0A00              	MOVE.B	UART,D0		;else get the character
  10087 FFFCCBBA 0200 007F                   	AND.B	#0x7F,D0 	;zero out the high bit
  10088 FFFCCBBE                             AXIRET:
  10089 FFFCCBBE 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Return to the resident monitor, operating system, etc.
                                             ;*
  10094 FFFCCBC0                             BYEBYE:
  10095 FFFCCBC0 1E3C 00E4                   	MOVE.B	#228,D7 	;return to Tutor
  10096 FFFCCBC4 4E4E                        	TRAP	#14
                                             
  10098 FFFCCBC6                             INITMSG:
  10099 FFFCCBC6 0D 0A 47 6F 72 64 6F 27     	DC.B	CR,LF,"Gordo's MC68000 Tiny BASIC, v1.2",CR,LF,LF,0
  10100 FFFCCBCE 73 20 4D 43 36 38 30 30     
  10101 FFFCCBD6 30 20 54 69 6E 79 20 42     
  10102 FFFCCBDE 41 53 49 43 2C 20 76 31     
  10103 FFFCCBE6 2E 32 0D 0A 0A 00           
  10104 FFFCCBEC                             OKMSG:
  10105 FFFCCBEC 0D 0A 4F 4B 0D 0A 00        	DC.B	CR,LF,'OK',CR,LF,0
  10106 FFFCCBF3                             HOWMSG:
  10107 FFFCCBF3 48 6F 77 3F 0D 0A 00        	DC.B	'How?',CR,LF,0
  10108 FFFCCBFA                             WHTMSG:
  10109 FFFCCBFA 57 68 61 74 3F 0D 0A 00     	DC.B	'What?',CR,LF,0
                                             
  10111 FFFCCC02                             SRYMSG:
  10112 FFFCCC02 53 6F 72 72 79 2E           	DC.B	'Sorry.'
  10113 FFFCCC08                             CLMSG:
  10114 FFFCCC08 0D 0A 00                    	DC.B	CR,LF,0
  10115 FFFCCC0B 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             LSTROM	EQU		$
                                             	;	end of possible ROM area
                                             
Finitron asm68 assembler    version 5.6   Fri Dec 08 17:06:21 2017     Page 115
bootrom.asm


                                             .include C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             	;
                                             
                                             
