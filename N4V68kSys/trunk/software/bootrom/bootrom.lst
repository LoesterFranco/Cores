Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 1
bootrom.asm

                                             ; N4V68kSys bootrom - (C) 2017 Robert Finch, Waterloo
                                             ;
                                             ; This file is part of N4V68kSys
                                             ;
                                             ; how to build:
                                             ; 1. assemble using "asm68 bootrom.asm /G00 /olyebvm"
                                             ; 2. copy bootrom.vh to the correct directory if not already there
                                             ;
                                             ;------------------------------------------------------------------------------
                                             ;
                                             ; system memory map
                                             ;
                                             ;
                                             ; 00000000 +----------------+
                                             ;          | startup sp,pc  | 8 B
                                             ; 00000008 +----------------+
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ;          :  dram memory   : 512 MB
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ; 20000000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FF800000 +----------------+
                                             ;          |                |
                                             ;          : display buffer : 896k
                                             ;          |                |
                                             ; FF8E0000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFD00000 +----------------+
                                             ;          |                |
                                             ;          :    I/O area    : 1.0 M
                                             ;          |                |
                                             ; FFE00000 +----------------+
                                             ;          |   VDG regs     |
                                             ; FFE01000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFFC0000 +----------------+
                                             ;          |                |
                                             ;          :    boot rom    :
                                             ;          |                |
                                             ; FFFFFFFF +----------------+
                                             ;
                                             ;
                                             RGBMASK		EQU		%0111111111111111
                                             RED			EQU		%0111110000000000
                                             DARK_BLUE	EQU		%0000000000001111
                                             BLACK		EQU		%0000000000000000
                                             WHITE		EQU		%0111111111111111
                                             
                                             CTRLC	EQU		$03
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 2
bootrom.asm
                                             CTRLH	EQU		$08
                                             LF		EQU		$0A
                                             CR		EQU		$0D
                                             
                                             SC_F12  EQU    $07
                                             SC_C    EQU    $21
                                             SC_T    EQU    $2C
                                             SC_Z    EQU    $1A
                                             SC_KEYUP	EQU		$F0
                                             SC_EXTEND   EQU		$E0
                                             SC_CTRL		EQU		$14
                                             SC_RSHIFT	EQU		$59
                                             SC_NUMLOCK	EQU		$77
                                             SC_SCROLLLOCK	EQU	$7E
                                             SC_CAPSLOCK		EQU	$58
                                             SC_ALT		EQU		$11
                                             SC_LSHIFT	EQU		$12
                                             SC_DEL		EQU		$71		; extend
                                             SC_LCTRL	EQU		$58
                                             SC_TAB      EQU		$0D
                                             
                                             TEXTCOLS	EQU	50
                                             TEXTROWS	EQU	37
                                             
                                             VDGBUF		EQU	$FF800000
                                             VDGREG		EQU	$FFE00000
                                             VDG_CURX	EQU	$0440
                                             VDG_CURY	EQU	$0442
                                             VDG_CURSZ	EQU	$0444
                                             VDG_CURFLSH	EQU	$0446
                                             VDG_CURCLR0	EQU	$0448
                                             VDG_CURCLR1	EQU	$044A
                                             VDG_CURCLR2	EQU	$044C
                                             VDG_CURCLR3	EQU	$044E
                                             VDG_CURIMG	EQU	$0460
                                             I2C			EQU	$FFDC0E00
                                             I2C2		EQU	$FFDC0E10
                                             VirtScreen	EQU	$1FFF0000
                                             KEYBD		EQU	$FFDC0000
                                             leds		EQU	$FFDC0600
                                             rand		EQU	$FFDC0C00
                                             
                                             fgcolor		EQU	$10002
                                             bkcolor		EQU	$10004
                                             fntsz		EQU	$10006
                                             memend		EQU	$10008
                                             CursorRow	EQU	$10418
                                             CursorCol	EQU $10419
                                             TextRows	EQU	$1041A
                                             TextCols	EQU	$1041B
                                             TextCurpos	EQU	$1041C
                                             TextScr		EQU	$10420
                                             KeybdEcho		EQU	$10424
                                             KeybdWaitFlag	EQU	$10425
                                             _KeyState1		EQU	$10426
                                             _KeyState2		EQU	$10427
                                             KeybdLEDs		EQU	$10428
                                             gfx_control_reg_mem		EQU	$1042C
                                             milliseconds	EQU	$10430
                                             systick			EQU	$10434
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 3
bootrom.asm
                                             
                                             GFX_CONTROL			EQU		$00
                                             GFX_STATUS			EQU		$04
                                             GFX_TARGET_BASE		EQU		$10
                                             GFX_TARGET_SIZE_X	EQU		$14
                                             GFX_TARGET_SIZE_Y	EQU		$18
                                             GFX_DEST_PIXEL_X	EQU		$38
                                             GFX_DEST_PIXEL_Y	EQU		$3C
                                             GFX_DEST_PIXEL_Z	EQU		$40
                                             GFX_COLOR0			EQU		$84
                                             
                                             GFX_ACTIVE_POINT0	EQU		0
                                             GFX_ACTIVE_POINT1	EQU		$10000
                                             GFX_LINE			EQU		$200
                                             
                                             reg_d0			EQU	$10500
                                             reg_d1			EQU	$10504
                                             reg_d2			EQU	$10508
                                             reg_d3			EQU	$1050C
                                             reg_d4			EQU $10510
                                             reg_d5			EQU $10514
                                             reg_d6			EQU	$10518
                                             reg_d7			EQU	$1051C
                                             reg_a0			EQU $10520
                                             reg_a1			EQU	$10524
                                             reg_a2			EQU	$10528
                                             reg_a3			EQU $1052C
                                             reg_a4			EQU $10530
                                             reg_a5			EQU $10534
                                             reg_a6			EQU $10538
                                             reg_ssp			EQU	$1053C
                                             reg_usp			EQU	$10540
                                             reg_pc			EQU $10544
                                             reg_sr			EQU	$10548
                                             
                                             RTCBuf			EQU	$10600
                                             RTFBufEnd		EQU	$10660
                                             
                                             	org		$FFFC0000
                                             
                                             ;------------------------------------------------------------------------------
                                             
    162 FFFC0000 FF401000                    	dc.l	$FF401000	; initial SSP
    163 FFFC0004 FFFC0010                    	dc.l	Start		; initial PC
                                             	
                                             ;------------------------------------------------------------------------------
    166 FFFC0008                             fpga_version:
    167 FFFC0008 41 41 30 30 30 30 30 30     	dc.b	"AA000000"	; FPGA core version - 8 ASCII characters
                                             
                                             
                                             ;------------------------------------------------------------------------------
    171 FFFC0010                             	Start:
                                             ;------------------------------------------------------------------------------
    173 FFFC0010 33FC A1A1 FFDC 0600         		move.w	#$A1A1,leds		; diagnostics
                                             
                                             		; SIM croaked because the upper half of D1 was undefined. This caused
                                             		; problems with a dbra instruction. So the contents of all the registers
                                             		; are defined at startup. This is only needed for SIM.
    178 FFFC0018 7000                        		moveq	#0,D0
    179 FFFC001A 7200                        		moveq	#0,D1				; for SIM
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 4
bootrom.asm
    180 FFFC001C 7400                        		moveq	#0,D2
    181 FFFC001E 7600                        		moveq	#0,D3
    182 FFFC0020 7800                        		moveq	#0,D4
    183 FFFC0022 7A00                        		moveq	#0,D5
    184 FFFC0024 7C00                        		moveq	#0,D6
    185 FFFC0026 7E00                        		moveq	#0,D7
    186 FFFC0028 4288                        		clr.l	A0
    187 FFFC002A 4289                        		clr.l	A1
    188 FFFC002C 428A                        		clr.l	A2
    189 FFFC002E 428B                        		clr.l	A3
    190 FFFC0030 428C                        		clr.l	A4
    191 FFFC0032 428D                        		clr.l	A5
    192 FFFC0034 428E                        		clr.l	A6
    193 FFFC0036 4E67                        		move.l	A7,usp
                                             
                                             		; setup vector table
                                             		;
    197 FFFC0038 41F9 0000 0000              		lea		BusError,a0
    198 FFFC003E 21C8 0008                   		move.l	a0,0x008		; set bus error vector
    199 FFFC0042 41F9 FFFC 014C              		lea		IllegalInstruction,a0
    200 FFFC0048 21C8 0010                   		move.l	a0,0x010
    201 FFFC004C 41F9 FFFC 0132              		lea		Pulse1000,a0
    202 FFFC0052 21C8 0078                   		move.l	a0,0x078		; set autovector 6
    203 FFFC0056 41F9 0000 0000              		lea		KeybdNMI,a0
    204 FFFC005C 21C8 007C                   		move.l	a0,0x07C		; set autovector 7
    205 FFFC0060 41F9 FFFC 016E              		lea		TRAP15,a0
    206 FFFC0066 21C8 00BC                   		move.l	a0,188			; set trap 15 vector
                                             
                                             ;		bsr		mmu_init
    209 FFFC006A 6100 15BC                   		bsr		i2c_setup
                                             ;		bsr		rtc_read
    211 FFFC006E 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds		; diagnostics
                                             
    213 FFFC0076 13FC 0032 0001 041B         		move.b	#TEXTCOLS,TextCols
    214 FFFC007E 13FC 0025 0001 041A         		move.b	#TEXTROWS,TextRows
    215 FFFC0086 4239 0001 0419              		clr.b	CursorCol
    216 FFFC008C 4239 0001 0418              		clr.b	CursorRow
    217 FFFC0092 4279 0001 041C              		clr.w	TextCurpos
    218 FFFC0098 23FC 0002 0000 0001 0420    		move.l	#$00020000,TextScr		; set virtual screen location
                                             
                                             
    221 FFFC00A2 4DF9 FFDC 0000              		lea	$FFDC0000,A6	; I/O base
                                             
                                             		; Initialize random number generator
                                             
    225 FFFC00A8 426E 0C06                   		clr.w	$0C06(a6)				; select stream #0
    226 FFFC00AC 2D7C 8888 8888 0C08         		move.l	#$88888888,$0C08(a6)	; set initial m_z
    227 FFFC00B4 2D7C 0123 4567 0C0C         		move.l	#$01234567,$0C0C(a6)	; set initial m_w
                                             
    229 FFFC00BC 6100 0504                   		bsr		SetCursorColor
    230 FFFC00C0 6100 0534                   		bsr		SetCursorImage
    231 FFFC00C4 6100 056E                   		bsr		SetCursorImage64
                                             
    233 FFFC00C8 6100 03C8                   		bsr		BootClearScreen		
    234 FFFC00CC 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds			; diagnostics
                                             		
                                             		; turn on audio test mode
    237 FFFC00D4 4DF9 FFDC 0000              		lea		$FFDC0000,A6		; set I/O base
    238 FFFC00DA 3D7C FFFF 0700              		move.w	#$FFFF,$0700(a6)	; turn on audio clocks
    239 FFFC00E0 2A7C FFE0 0000              		movea.l	#VDGREG,a5
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 5
bootrom.asm
    240 FFFC00E6 3B7C 4000 0584              		move.w	#%0100000000000000,$584(a5)
                                             
    242 FFFC00EC 6100 13E4                   		bsr		DrawLines
    243 FFFC00F0 6100 1480                   		bsr		TestBlitter
                                             
    245 FFFC00F4 6100 03B2                   		bsr		BootCopyFont
    246 FFFC00F8 33FC A3A3 FFDC 0600         		move.w	#$A3A3,leds			; diagnostics
                                             
    248 FFFC0100 33FC 7FFF 0001 0002         		move.w	#WHITE,fgcolor		; set text colors
    249 FFFC0108 33FC 000F 0001 0004         		move.w	#DARK_BLUE,bkcolor
                                             
                                             		; Write startup message to screen
                                             
    253 FFFC0110 41F9 FFFC 1B9C              		lea		msg_start,a0
    254 FFFC0116 7200                        		moveq	#0,d1					; xpos
    255 FFFC0118 7400                        		moveq	#0,d2					; ypos
    256 FFFC011A 6100 05E0                   		bsr		DispStringAt
    257 FFFC011E 33FC A4A4 FFDC 0600         		move.w	#$A4A4,leds			; diagnostics
                                             
    259 FFFC0126 47F9 FFFC 0130              		lea		j1,a3
    260 FFFC012C 6000 1236                   		bra		ramtest
    261 FFFC0130                             j1:
    262 FFFC0130 60FE                        		bra		j1
                                             
                                             ;------------------------------------------------------------------------------
                                             ; 1000 Hz interrupt
                                             ;------------------------------------------------------------------------------
                                             ;
    268 FFFC0132                             Pulse1000:
    269 FFFC0132 52B9 0001 0430              		add.l	#1,milliseconds
    270 FFFC0138 5279 0001 0434              		add.w	#1,systick
    271 FFFC013E 0279 001F 0001 0434         		and.w	#$1F,systick
    272 FFFC0146 6702                        		beq.s	Pulse31
    273 FFFC0148 4E73                        		rte
    274 FFFC014A                             Pulse31:
    275 FFFC014A 4E73                        		rte
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    280 FFFC014C                             IllegalInstruction:
    281 FFFC014C 43F9 FFFC 015A              		lea		MSG_ILLEGAL_INSN,a1
    282 FFFC0152 4EB9 FFFC 03EC              		jsr		DisplayString
    283 FFFC0158 4E73                        		rte
                                             
    285 FFFC015A                             MSG_ILLEGAL_INSN:
    286 FFFC015A 49 6C 6C 65 67 61 6C 20     		dc.b	"Illegal instruction",0
    287 FFFC0162 69 6E 73 74 72 75 63 74     
    288 FFFC016A 69 6F 6E 00                 
                                             
                                             		align	2
                                             
                                             ;------------------------------------------------------------------------------
                                             ; TRAP #15 handler
                                             ;------------------------------------------------------------------------------
                                             ;
    296 FFFC016E                             TRAP15:
    297 FFFC016E 48E7 8080                   		movem.l	d0/a0,-(a7)
    298 FFFC0172 41F9 FFFC 0188              		lea		T15DispatchTable,a0
    299 FFFC0178 E580                        		asl.l	#2,d0
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 6
bootrom.asm
    300 FFFC017A 2070 0000                   		move.l	(a0,d0.w),a0
    301 FFFC017E 4E90                        		jsr		(a0)
    302 FFFC0180 4CDF 0101                   		movem.l	(a7)+,d0/a0
    303 FFFC0184 4E73                        		rte
                                             
    305 FFFC0186 FF FF                       		align	4
    306 FFFC0188                             T15DispatchTable:
    307 FFFC0188 FFFC0228                    dc.l	StubRout
    308 FFFC018C FFFC0228                    dc.l	StubRout
    309 FFFC0190 FFFC0228                    dc.l	StubRout
    310 FFFC0194 FFFC0228                    dc.l	StubRout
    311 FFFC0198 FFFC0228                    dc.l	StubRout
    312 FFFC019C FFFC07FA                    dc.l	GetKey
    313 FFFC01A0 FFFC027C                    dc.l	DisplayChar
    314 FFFC01A4 FFFC07E8                    dc.l	CheckForKey
    315 FFFC01A8 FFFC0228                    dc.l	StubRout
    316 FFFC01AC FFFC0228                    dc.l	StubRout
    317 FFFC01B0 FFFC0228                    dc.l	StubRout
    318 FFFC01B4 FFFC0436                    dc.l	Cursor1
    319 FFFC01B8 FFFC022A                    dc.l	SetKeyboardEcho
    320 FFFC01BC FFFC0406                    dc.l	DisplayStringCRLF
    321 FFFC01C0 FFFC03EC                    dc.l	DisplayString
    322 FFFC01C4 FFFC0228                    dc.l	StubRout
    323 FFFC01C8 FFFC0228                    dc.l	StubRout
    324 FFFC01CC FFFC0228                    dc.l	StubRout
    325 FFFC01D0 FFFC0228                    dc.l	StubRout
    326 FFFC01D4 FFFC0228                    dc.l	StubRout
    327 FFFC01D8 FFFC0228                    dc.l	StubRout
    328 FFFC01DC FFFC0228                    dc.l	StubRout
    329 FFFC01E0 FFFC0228                    dc.l	StubRout
    330 FFFC01E4 FFFC0228                    dc.l	StubRout
    331 FFFC01E8 FFFC0228                    dc.l	StubRout
    332 FFFC01EC FFFC0228                    dc.l	StubRout
    333 FFFC01F0 FFFC0228                    dc.l	StubRout
    334 FFFC01F4 FFFC0228                    dc.l	StubRout
    335 FFFC01F8 FFFC0228                    dc.l	StubRout
    336 FFFC01FC FFFC0228                    dc.l	StubRout
    337 FFFC0200 FFFC0228                    dc.l	StubRout
    338 FFFC0204 FFFC0228                    dc.l	StubRout
    339 FFFC0208 FFFC0228                    dc.l	StubRout
    340 FFFC020C FFFC0228                    dc.l	StubRout
    341 FFFC0210 FFFC0228                    dc.l	StubRout
    342 FFFC0214 FFFC0228                    dc.l	StubRout
    343 FFFC0218 FFFC0228                    dc.l	StubRout
    344 FFFC021C FFFC0228                    dc.l	StubRout
    345 FFFC0220 FFFC0228                    dc.l	StubRout
    346 FFFC0224 FFFC0228                    dc.l	StubRout
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Stub routine for unimplemented functionality.
                                             ;------------------------------------------------------------------------------
                                             ;
    352 FFFC0228                             StubRout:
    353 FFFC0228 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; d1.b 0=echo off, non-zero = echo on
                                             ;------------------------------------------------------------------------------
    358 FFFC022A                             SetKeyboardEcho:
    359 FFFC022A 13C1 0001 0424              	move.b	d1,KeybdEcho
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 7
bootrom.asm
    360 FFFC0230 4E75                        	rts
                                             
                                             
    363 FFFC0232                             CRLF:
    364 FFFC0232 2F01                        		move.l	d1,-(a7)
    365 FFFC0234 123C 000D                   		move.b	#'\r',d1
    366 FFFC0238 4EB9 FFFC 027C              		jsr		DisplayChar
    367 FFFC023E 123C 000A                   		move.b	#'\n',d1
    368 FFFC0242 4EB9 FFFC 027C              		jsr		DisplayChar
    369 FFFC0248 221F                        		move.l	(a7)+,d1
    370 FFFC024A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Calculate screen memory location from CursorRow,CursorCol.
                                             ; Destroys d0,d2,a0
                                             ;------------------------------------------------------------------------------
                                             ;
    377 FFFC024C                             CalcScreenLoc:
    378 FFFC024C 1039 0001 0418              		move.b	CursorRow,d0		; compute screen location
    379 FFFC0252 0240 007F                   		andi.w	#0x7f,d0
    380 FFFC0256 1439 0001 041B              		move.b	TextCols,d2
    381 FFFC025C 4882                        		ext.w	d2
    382 FFFC025E C0C2                        		mulu.w	d2,d0
    383 FFFC0260 1439 0001 0419              		move.b	CursorCol,d2
    384 FFFC0266 0242 00FF                   		andi.w	#0xff,d2
    385 FFFC026A D042                        		add.w	d2,d0
    386 FFFC026C 33C0 0001 041C              		move.w	d0,TextCurpos
    387 FFFC0272 D0B9 0001 0420              		add.l	TextScr,d0
    388 FFFC0278 2040                        		move.l	d0,a0				; a0 = screen location
    389 FFFC027A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a character on the screen
                                             ; d1.b = char to display
                                             ;------------------------------------------------------------------------------
                                             ;
    396 FFFC027C                             DisplayChar:
    397 FFFC027C 0C01 000D                   		cmpi.b	#'\r',d1			; carriage return ?
    398 FFFC0280 6608                        		bne.s	dccr
    399 FFFC0282 4239 0001 0419              		clr.b	CursorCol			; just set cursor column to zero on a CR
    400 FFFC0288 4E75                        		rts
    401 FFFC028A                             dccr:
    402 FFFC028A 0C01 0091                   		cmpi.b	#0x91,d1			; cursor right ?
    403 FFFC028E 6616                        		bne.s   dcx6
    404 FFFC0290 0C39 004F 0001 0419         		cmpi.b	#79,CursorCol
    405 FFFC0298 670A                        		beq.s	dcx7
    406 FFFC029A 5239 0001 0419              		addi.b	#1,CursorCol
    407 FFFC02A0 6000 02EA                   		bra		DispCursor
    408 FFFC02A4                             dcx7:
    409 FFFC02A4 4E75                        		rts
    410 FFFC02A6                             dcx6:
    411 FFFC02A6 0C01 0090                   		cmpi.b	#0x90,d1			; cursor up ?
    412 FFFC02AA 6614                        		bne.s	dcx8
    413 FFFC02AC 0C39 0000 0001 0418         		cmpi.b	#0,CursorRow
    414 FFFC02B4 67EE                        		beq.s	dcx7
    415 FFFC02B6 5339 0001 0418              		subi.b	#1,CursorRow
    416 FFFC02BC 6000 02CE                   		bra		DispCursor
    417 FFFC02C0                             dcx8:
    418 FFFC02C0 0C01 0093                   		cmpi.b	#0x93,d1			; cursor left?
    419 FFFC02C4 6614                        		bne.s	dcx9
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 8
bootrom.asm
    420 FFFC02C6 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    421 FFFC02CE 67D4                        		beq.s	dcx7
    422 FFFC02D0 5339 0001 0419              		subi.b	#1,CursorCol
    423 FFFC02D6 6000 02B4                   		bra		DispCursor
    424 FFFC02DA                             dcx9:
    425 FFFC02DA 0C01 0092                   		cmpi.b	#0x92,d1			; cursor down ?
    426 FFFC02DE 6614                        		bne		dcx10
    427 FFFC02E0 0C39 003F 0001 0418         		cmpi.b	#63,CursorRow
    428 FFFC02E8 67BA                        		beq		dcx7
    429 FFFC02EA 5279 0001 0418              		addi.w	#1,CursorRow
    430 FFFC02F0 6000 029A                   		bra		DispCursor
    431 FFFC02F4                             dcx10:
    432 FFFC02F4 0C01 0094                   		cmpi.b	#0x94,d1			; cursor home ?
    433 FFFC02F8 661E                        		bne.s	dcx11
    434 FFFC02FA 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    435 FFFC0302 670A                        		beq.s	dcx12
    436 FFFC0304 4239 0001 0419              		clr.b	CursorCol
    437 FFFC030A 6000 0280                   		bra		DispCursor
    438 FFFC030E                             dcx12:
    439 FFFC030E 4239 0001 0418              		clr.b	CursorRow
    440 FFFC0314 6000 0276                   		bra		DispCursor
    441 FFFC0318                             dcx11:
    442 FFFC0318 48E7 E080                   		movem.l	d0/d1/d2/a0,-(a7)
    443 FFFC031C 0C01 0099                   		cmpi.b	#0x99,d1			; delete ?
    444 FFFC0320 660C                        		bne.s	dcx13
    445 FFFC0322 6100 FF28                   		bsr		CalcScreenLoc
    446 FFFC0326 1039 0001 0419              		move.b	CursorCol,d0
    447 FFFC032C 6020                        		bra.s	dcx5
    448 FFFC032E                             dcx13:
    449 FFFC032E 0C01 0008                   		cmpi.b	#CTRLH,d1			; backspace ?
    450 FFFC0332 6632                        		bne.s   dcx3
    451 FFFC0334 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    452 FFFC033C 6752                        		beq.s   dcx4
    453 FFFC033E 5339 0001 0419              		subi.b	#1,CursorCol
    454 FFFC0344 6100 FF06                   		bsr		CalcScreenLoc		; a0 = screen location
    455 FFFC0348 1039 0001 0419              		move.b	CursorCol,d0
    456 FFFC034E                             dcx5:
    457 FFFC034E 10E8 0001                   		move.b	1(a0),(a0)+
    458 FFFC0352 5200                        		addi.b	#1,d0
    459 FFFC0354 B039 0001 041B              		cmp.b	TextCols,d0
    460 FFFC035A 65F2                        		blo.s	dcx5
    461 FFFC035C 103C 0020                   		move.b	#32,d0
    462 FFFC0360 1140 FFFF                   		move.b	d0,-1(a0)
    463 FFFC0364 602A                        		bra.s	dcx4
    464 FFFC0366                             dcx3:
    465 FFFC0366 0C01 000A                   		cmpi.b	#'\n',d1		; linefeed ?
    466 FFFC036A 671C                        		beq.s	dclf
                                             
    468 FFFC036C 6100 FEDE                   		bsr		CalcScreenLoc	; a0 = screen location
                                             		;bsr		AsciiToScreen	; convert ascii char to screen char
    470 FFFC0370 1081                        		move.b	d1,(a0)
    471 FFFC0372 1001                        		move.b	d1,d0
    472 FFFC0374 4880                        		ext.w	d0
    473 FFFC0376 6100 01BA                   		bsr		DispChar
    474 FFFC037A 6100 001A                   		bsr		IncCursorPos
    475 FFFC037E 6100 020C                   		bsr		DispCursor
    476 FFFC0382 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0
    477 FFFC0386 4E75                        		rts
    478 FFFC0388                             dclf:
    479 FFFC0388 6100 002C                   		bsr		IncCursorRow
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 9
bootrom.asm
    480 FFFC038C 6100 01FE                   		bsr		DispCursor
    481 FFFC0390                             dcx4:
    482 FFFC0390 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0		; get back a0
    483 FFFC0394 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Increment the cursor position, scroll the screen if needed.
                                             ;------------------------------------------------------------------------------
                                             ;
    489 FFFC0396                             IncCursorPos:
    490 FFFC0396 5279 0001 041C              		addi.w	#1,TextCurpos
    491 FFFC039C 5239 0001 0419              		addi.b	#1,CursorCol
    492 FFFC03A2 1039 0001 041B              		move.b	TextCols,d0
    493 FFFC03A8 B039 0001 0419              		cmp.b	CursorCol,d0
    494 FFFC03AE 643A                        		bhs.s	icc1
    495 FFFC03B0 4239 0001 0419              		clr.b	CursorCol
    496 FFFC03B6                             IncCursorRow:
    497 FFFC03B6 5239 0001 0418              		addi.b	#1,CursorRow
    498 FFFC03BC 1039 0001 041A              		move.b	TextRows,d0
    499 FFFC03C2 B039 0001 0418              		cmp.b	CursorRow,d0
    500 FFFC03C8 6220                        		bhi.s	icc1
    501 FFFC03CA 1039 0001 041A              		move.b	TextRows,d0
    502 FFFC03D0 13C0 0001 0418              		move.b	d0,CursorRow		; in case CursorRow is way over
    503 FFFC03D6 5339 0001 0418              		subi.b	#1,CursorRow
    504 FFFC03DC 4880                        		ext.w	d0
    505 FFFC03DE E340                        		asl.w	#1,d0
    506 FFFC03E0 9179 0001 041C              		sub.w	d0,TextCurpos
    507 FFFC03E6 6100 0CA8                   		bsr		ScrollUp
    508 FFFC03EA                             icc1:
    509 FFFC03EA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen.
                                             ;------------------------------------------------------------------------------
                                             ;
    515 FFFC03EC                             DisplayString:
    516 FFFC03EC 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    517 FFFC03F0                             dspj1:
    518 FFFC03F0 4281                        		clr.l	d1				; clear upper bits of d1
    519 FFFC03F2 1219                        		move.b	(a1)+,d1		; move string char into d1
    520 FFFC03F4 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    521 FFFC03F8 6706                        		beq		dsret			
    522 FFFC03FA 6100 FE80                   		bsr		DisplayChar		; display character
    523 FFFC03FE 60F0                        		bra		dspj1			; go back for next character
    524 FFFC0400                             dsret:
    525 FFFC0400 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    526 FFFC0404 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen followed by carriage return / linefeed.
                                             ;------------------------------------------------------------------------------
                                             ;
    532 FFFC0406                             DisplayStringCRLF:
    533 FFFC0406 6100 FFE4                   		bsr		DisplayString
    534 FFFC040A 6000 FE26                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ;------------------------------------------------------------------------------
                                             ;
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 10
bootrom.asm
    540 FFFC040E                             DisplayString1:
    541 FFFC040E 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    542 FFFC0412 0241 00FF                   		andi.w	#255,d1			; max 255 chars
    543 FFFC0416 2001                        		move.l	d1,d0
    544 FFFC0418                             dspj11:
    545 FFFC0418 1219                        		move.b	(a1)+,d1		; move string char into d1
    546 FFFC041A 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    547 FFFC041E 6708                        		beq		dsret1			
    548 FFFC0420 6100 FE5A                   		bsr		DisplayChar		; display character
    549 FFFC0424 57C8 FFF2                   		dbeq	d0,dspj11		; go back for next character
    550 FFFC0428                             dsret1:
    551 FFFC0428 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    552 FFFC042C 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ; end string with CR,LF
                                             ;------------------------------------------------------------------------------
                                             ;
    559 FFFC042E                             DisplayString0:
    560 FFFC042E 6100 FFDE                   		bsr		DisplayString1
    561 FFFC0432 6000 FDFE                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Dispatch cursor functions
                                             ;------------------------------------------------------------------------------
                                             ;
    567 FFFC0436                             Cursor1:
    568 FFFC0436 0C41 00FF                   		cmpi.w	#0x00ff,d1
    569 FFFC043A 670E                        		beq		GetCursorPos
    570 FFFC043C 0C41 FF00                   		cmpi.w	#0xFF00,d1
    571 FFFC0440 6718                        		beq		SetCursorPos
    572 FFFC0442 4EB9 FFFC 103E              		jsr		ClearScreen
    573 FFFC0448 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get the cursor position.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    581 FFFC044A                             GetCursorPos:
    582 FFFC044A 1239 0001 0419              		move.b	CursorCol,d1
    583 FFFC0450 E141                        		asl.w	#8,d1
    584 FFFC0452 1239 0001 0418              		move.b	CursorRow,d1
    585 FFFC0458 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Set the position of the cursor, update the linear screen pointer.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    593 FFFC045A                             SetCursorPos:
    594 FFFC045A 48E7 6000                   		movem.l	d1/d2,-(a7)
    595 FFFC045E 13C1 0001 0418              		move.b	d1,CursorRow
    596 FFFC0464 E049                        		lsr.w	#8,d1
    597 FFFC0466 13C1 0001 0419              		move.b	d1,CursorCol
    598 FFFC046C 1239 0001 0418              		move.b	CursorRow,d1
    599 FFFC0472 4881                        		ext.w	d1
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 11
bootrom.asm
    600 FFFC0474 1439 0001 041B              		move.b	TextCols,d2
    601 FFFC047A 4882                        		ext.w	d2
    602 FFFC047C C2C2                        		mulu.w	d2,d1
    603 FFFC047E 1439 0001 0419              		move.b	CursorCol,d2
    604 FFFC0484 D242                        		add.w	d2,d1
    605 FFFC0486 33C1 0001 041C              		move.w	d1,TextCurpos
    606 FFFC048C                             scp1:
    607 FFFC048C 4CDF 0006                   		movem.l	(a7)+,d1/d2
    608 FFFC0490 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; clear screen	
                                             ;
                                             ; Trashes:
                                             ;	a0,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    618 FFFC0492                             BootClearScreen:
    619 FFFC0492 207C FF80 0000              		move.l	#VDGBUF,A0
    620 FFFC0498 700F                        		moveq	#DARK_BLUE,D0			; dark blue
    621 FFFC049A 223C 0001 D4C0              		move.l	#400*300,D1				; number of pixels
    622 FFFC04A0                             .loop1:
    623 FFFC04A0 30C0                        		move.w	d0,(a0)+				; store it to the screen
    624 FFFC04A2 5381                        		sub.l	#1,d1					; can't use dbra here
    625 FFFC04A4 66FA                        		bne.s	.loop1
    626 FFFC04A6 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; copy font to VDG ram
                                             ;
                                             ; The font address is 1/2 of the memory address that the cpu sees because
                                             ; the AV controller only deals with word accesses.
                                             ;
                                             ; Trashes:
                                             ;	a0,a1,a6,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    638 FFFC04A8                             BootCopyFont:
    639 FFFC04A8 2C7C FFE0 0000              		movea.l	#VDGREG,a6
                                             		; Setup font table
    641 FFFC04AE 2D7C 0005 C000 0590         		move.l	#$5C000,$590(a6)	; set font table address 1/2 B8000
    642 FFFC04B6 203C 0005 C004              		move.l	#$5C004,d0			; set bitmap address (directly follows)
    643 FFFC04BC 4840                        		swap	d0
    644 FFFC04BE 0040 9CE0                   		or.w	#%1001110011100000,d0	; set font fixed, width, height
    645 FFFC04C2 4840                        		swap	d0
    646 FFFC04C4 23C0 FF8B 8000              		move.l	d0,$FF8B8000
    647 FFFC04CA 42B9 FF8B 8004              		clr.l	$FF8B8004			; clear glyph width table address (not used)
    648 FFFC04D0 227C FF8B 8008              		movea.l	#$FF8B8008,a1		; font table address
                                             
    650 FFFC04D6 41F9 FFFC 1C54              		lea		font8,a0
    651 FFFC04DC 223C 0000 1000              		move.l	#8*512,d1			; 512 chars * 8 bytes per char
                                             
    653 FFFC04E2 3D7C 0000 0594              		move.w	#0,$594(a6)			; select font id (0)
                                             
    655 FFFC04E8 7000                        		moveq	#0,d0				; zero out high order bits
    656 FFFC04EA                             cpyfnt:
    657 FFFC04EA 1018                        		move.b	(a0)+,d0			; get a byte
    658 FFFC04EC 32C0                        		move.w	d0,(a1)+			; store in font table
    659 FFFC04EE 51C9 FFFA                   		dbra	d1,cpyfnt
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 12
bootrom.asm
    660 FFFC04F2 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Trashes:
                                             ;	a6
                                             ;------------------------------------------------------------------------------
                                             
    671 FFFC04F4                             DispCharAt:
    672 FFFC04F4 2C7C FFE0 0000              		move.l	#VDGREG,a6
    673 FFFC04FA 4840                        		swap	d0						; save off d0 low
    674 FFFC04FC                             .0001:									; wait for character que to empty
    675 FFFC04FC 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    676 FFFC0500 B07C 001C                   		cmp.w	#28,d0					; allow up 28 entries to be in progress
    677 FFFC0504 64F6                        		bhs.s	.0001					; branch if too many chars queued
    678 FFFC0506 4840                        		swap	d0						; get back d0 low
    679 FFFC0508 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    680 FFFC050C 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)		; set fg color
    681 FFFC0514 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)		; set bk color
    682 FFFC051C 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    683 FFFC0520 3D42 0428                   		move.w	d2,$428(a6)			; set y pos
    684 FFFC0524 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    685 FFFC052A 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    686 FFFC0530 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;------------------------------------------------------------------------------
                                             
    693 FFFC0532                             DispChar:
    694 FFFC0532 48E7 4002                   		movem.l	d1/a6,-(a7)
    695 FFFC0536 2C7C FFE0 0000              		move.l	#VDGREG,a6
    696 FFFC053C 4840                        		swap	d0					; save off d0 low
    697 FFFC053E                             .0001:								; wait for character que to empty
    698 FFFC053E 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    699 FFFC0542 B07C 001C                   		cmp.w	#28,d0				; allow up 28 entries to be in progress
    700 FFFC0546 64F6                        		bhs.s	.0001				; branch if too many chars queued
    701 FFFC0548 4840                        		swap	d0					; get back d0 low
    702 FFFC054A 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    703 FFFC054E 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)	; set fg color
    704 FFFC0556 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)	; set bk color
    705 FFFC055E 1239 0001 0419              		move.b	CursorCol,d1
    706 FFFC0564 4881                        		ext.w	d1
    707 FFFC0566 E741                        		asl.w	#3,d1
    708 FFFC0568 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    709 FFFC056C 1239 0001 0418              		move.b	CursorRow,d1
    710 FFFC0572 4881                        		ext.w	d1
    711 FFFC0574 E741                        		asl.w	#3,d1
    712 FFFC0576 3D41 0428                   		move.w	d1,$428(a6)			; set y pos
    713 FFFC057A 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    714 FFFC0580 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    715 FFFC0586 4CDF 4002                   		movem.l	(a7)+,d1/a6
    716 FFFC058A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 13
bootrom.asm
                                             
    721 FFFC058C                             DispCursor:
    722 FFFC058C 48E7 4002                   		movem.l	d1/a6,-(a7)
    723 FFFC0590 2C7C FFE0 0000              		move.l	#VDGREG,a6
    724 FFFC0596 3D7C 0A0A 0444              		move.w	#$0A0A,VDG_CURSZ(a6)
    725 FFFC059C 1239 0001 0419              		move.b	CursorCol,d1
    726 FFFC05A2 4881                        		ext.w	d1
    727 FFFC05A4 E741                        		asl.w	#3,d1
    728 FFFC05A6 5341                        		sub.w	#1,d1
    729 FFFC05A8 3D41 0440                   		move.w	d1,VDG_CURX(a6)
    730 FFFC05AC 1239 0001 0418              		move.b	CursorRow,d1
    731 FFFC05B2 4881                        		ext.w	d1
    732 FFFC05B4 E741                        		asl.w	#3,d1
    733 FFFC05B6 5341                        		sub.w	#1,d1
    734 FFFC05B8 3D41 0442                   		move.w	d1,VDG_CURY(a6)
    735 FFFC05BC 4CDF 4002                   		movem.l	(a7)+,d1/a6
    736 FFFC05C0 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Color
                                             ; - cursor color is a 23 bit vector
                                             ;
                                             ;	aifffff-rrrrrgggggbbbbb
                                             ;	||  |     |    |    |
                                             ;   ||  |     |    |    +-- blue
                                             ;	||  |     |    +------- green
                                             ;   ||  |     +------------ red
                                             ;   ||  +------------------ flashrate 0xxxx = no flash
                                             ;   |+--------------------- invert video (rgb ignored)
                                             ;   +---------------------- alpha blend (least significant 8 bits used as alpha)
                                             ;
                                             ;   flash rate
                                             ;		 0xxxx = no flash
                                             ;        00001 = 1/8 vsync (7.5 Hz)
                                             ;	     00010 = 1/16 vsync (3.75 Hz)
                                             ;        00100 = 1/32 vsync (1.875 Hz)
                                             ;------------------------------------------------------------------------------
                                             
    758 FFFC05C2                             SetCursorColor:
    759 FFFC05C2 2F02                        		move.l  d2/a5/a6,-(a7)
    760 FFFC05C4 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    761 FFFC05CA 2C7C FFE0 0000              		move.l	#VDGREG,a6
    762 FFFC05D0 3D7C 0004 0446              		move.w	#%00100,VDG_CURFLSH(a6)
    763 FFFC05D6 3D7C 7FFF 0448              		move.w	#%0111111111111111,VDG_CURCLR0(a6)
    764 FFFC05DC 743F                        		moveq	#63,d2
    765 FFFC05DE                             .0001:
    766 FFFC05DE 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    767 FFFC05E2 262D 0C00                   		move.l	$0C00(a5),d3
    768 FFFC05E6 0283 0000 FFFF              		and.l	#$FFFF,d3
    769 FFFC05EC 2CC3                        		move.l	d3,(a6)+
    770 FFFC05EE 51CA FFEE                   		dbra	d2,.0001
    771 FFFC05F2 241F                        		move.l	(a7)+,d2/a5/a6
    772 FFFC05F4 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Image
                                             ; Cursor may be up to 16x16 pixels.
                                             ;------------------------------------------------------------------------------
                                             
    779 FFFC05F6                             SetCursorImage:
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 14
bootrom.asm
    780 FFFC05F6 48E7 4082                   		movem.l	d1/a0/a6,-(a7)
    781 FFFC05FA 41F9 FFFC 0614              		lea		CursorImage,a0
    782 FFFC0600 2C7C FFE0 0460              		move.l	#VDGREG+VDG_CURIMG,a6
    783 FFFC0606 720F                        		moveq	#15,d1
    784 FFFC0608                             .0001:
    785 FFFC0608 3CD8                        		move.w	(a0)+,(a6)+
    786 FFFC060A 51C9 FFFC                   		dbra	d1,.0001
    787 FFFC060E 4CDF 4102                   		movem.l	(a7)+,d1/a0/a6
    788 FFFC0612 4E75                        		rts
                                             
                                             	align	2
    791 FFFC0614                             CursorImage:
    792 FFFC0614 03FF                        	dc.w	%1111111111
    793 FFFC0616 0201                        	dc.w	%1000000001
    794 FFFC0618 0201                        	dc.w	%1000000001
    795 FFFC061A 0201                        	dc.w	%1000000001
    796 FFFC061C 0201                        	dc.w	%1000000001
    797 FFFC061E 0201                        	dc.w	%1000000001
    798 FFFC0620 0201                        	dc.w	%1000000001
    799 FFFC0622 0201                        	dc.w	%1000000001
    800 FFFC0624 0231                        	dc.w	%1000110001
    801 FFFC0626 03FF                        	dc.w	%1111111111
    802 FFFC0628 0000                        	dc.w	%0000000000
    803 FFFC062A 0000                        	dc.w	%0000000000
    804 FFFC062C 0000                        	dc.w	%0000000000
    805 FFFC062E 0000                        	dc.w	%0000000000
    806 FFFC0630 0000                        	dc.w	%0000000000
    807 FFFC0632 0000                        	dc.w	%0000000000
                                             
    809 FFFC0634                             SetCursorImage64:
    810 FFFC0634 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
    811 FFFC0638 41F9 FFFC 069C              		lea		CursorImage64,a0
    812 FFFC063E 7214                        		moveq	#20,d1					; set count number of long words to move
    813 FFFC0640 227C FF8B 7E00              		move.l	#$FF8B7E00,a1
    814 FFFC0646                             .0001:
    815 FFFC0646 22D8                        		move.l	(a0)+,(a1)+
    816 FFFC0648 51C9 FFFC                   		dbra	d1,.0001
    817 FFFC064C 343C 0200                   		move.w	#$200,d2
    818 FFFC0650 207C FFE0 0000              		move.l	#VDGREG,a0
    819 FFFC0656 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
    820 FFFC065C                             .0002:
    821 FFFC065C 21BC 0005 BF00 2000         		move.l	#$5BF00,(a0,d2.w)
    822 FFFC0664 31BC 0249 2008              		move.w	#$0249,8(a0,d2.w)	; set cursor size 10x10
    823 FFFC066A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    824 FFFC066E 262E 0C00                   		move.l	$0C00(a6),d3
    825 FFFC0672 0243 00FF                   		and.w	#$FF,d3
    826 FFFC0676 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
    827 FFFC067A 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    828 FFFC067E 262E 0C00                   		move.l	$0C00(a6),d3
    829 FFFC0682 0243 00FF                   		and.w	#$FF,d3
    830 FFFC0686 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
    831 FFFC068A 0642 0010                   		add.w	#$10,d2
    832 FFFC068E B47C 0300                   		cmp.w	#$300,d2
    833 FFFC0692 66C8                        		bne.s	.0002
    834 FFFC0694 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6
    835 FFFC0698 4E75                        		rts
                                             		
    837 FFFC069A FF FF                       	align	4
    838 FFFC069C                             CursorImage64:
    839 FFFC069C 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 15
bootrom.asm
    840 FFFC06A4 40201000 00000000           	dc.l	%01000000001000000001000000000000,$00
    841 FFFC06AC 40201000 00000000           	dc.l	%01000000001000000001000000000000,$00
    842 FFFC06B4 40201000 00000000           	dc.l	%01000000001000000001000000000000,$00
    843 FFFC06BC 6AAA9000 00000000           	dc.l	%01101010101010101001000000000000,$00
    844 FFFC06C4 40201000 00000000           	dc.l	%01000000001000000001000000000000,$00
    845 FFFC06CC 40201000 00000000           	dc.l	%01000000001000000001000000000000,$00
    846 FFFC06D4 40201000 00000000           	dc.l	%01000000001000000001000000000000,$00
    847 FFFC06DC 40501000 00000000           	dc.l	%01000000010100000001000000000000,$00
    848 FFFC06E4 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
    849 FFFC06EC 00000000 00000000           	dc.l	$00,$00
    850 FFFC06F4 00000000 00000000           	dc.l	$00,$00
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	a0			pointer to string
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Returns:
                                             ;	a0			points to byte after NULL character
                                             ;	d1.w		updated x position
                                             ; Trashes:
                                             ;	d0,a6
                                             ;------------------------------------------------------------------------------
                                             
    864 FFFC06FC                             DispStringAt:
    865 FFFC06FC                             .0003:
    866 FFFC06FC 7000                        		moveq	#0,d0					; zero out high order bits
    867 FFFC06FE 1018                        		move.b	(a0)+,d0				; get character from string into d0
    868 FFFC0700 6708                        		beq.s	.0002					; end of string ?
    869 FFFC0702 6100 FDF0                   		bsr		DispCharAt
    870 FFFC0706 5041                        		add.w	#8,d1					; increment xpos
    871 FFFC0708 60F2                        		bra.s	.0003
    872 FFFC070A                             .0002:
    873 FFFC070A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display nybble in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
    879 FFFC070C                             DisplayNybble:
    880 FFFC070C 3F01                        		move.w	d1,-(a7)
    881 FFFC070E 0201 000F                   		andi.b	#0xF,d1
    882 FFFC0712 0601 0030                   		addi.b	#'0',d1
    883 FFFC0716 0C01 0039                   		cmpi.b	#'9',d1
    884 FFFC071A 6302                        		bls.s	dispnyb1
    885 FFFC071C 5E01                        		addi.b	#7,d1
    886 FFFC071E                             dispnyb1:
    887 FFFC071E 6100 FB5C                   		bsr		DisplayChar
    888 FFFC0722 321F                        		move.w	(a7)+,d1
    889 FFFC0724 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the byte in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
    895 FFFC0726                             DisplayByte:
    896 FFFC0726 3F01                        		move.w	d1,-(a7)
    897 FFFC0728 E819                        		ror.b	#4,d1
    898 FFFC072A 6100 FFE0                   		bsr		DisplayNybble
    899 FFFC072E E919                        		rol.b	#4,d1
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 16
bootrom.asm
    900 FFFC0730 6100 FFDA                   		bsr		DisplayNybble
    901 FFFC0734 321F                        		move.w	(a7)+,d1
    902 FFFC0736 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the 32 bit word in D1.L
                                             ;------------------------------------------------------------------------------
                                             ;
    908 FFFC0738                             DisplayWord:
    909 FFFC0738 E199                        		rol.l	#8,d1
    910 FFFC073A 6100 FFEA                   		bsr		DisplayByte
    911 FFFC073E E199                        		rol.l	#8,d1
    912 FFFC0740 6100 FFE4                   		bsr		DisplayByte
    913 FFFC0744 E199                        		rol.l	#8,d1
    914 FFFC0746 6100 FFDE                   		bsr		DisplayByte
    915 FFFC074A E199                        		rol.l	#8,d1
    916 FFFC074C 6100 FFD8                   		bsr		DisplayByte
    917 FFFC0750 4E75                        		rts
                                             
    919 FFFC0752                             DisplayMem:
    920 FFFC0752 123C 003A                   		move.b	#':',d1
    921 FFFC0756 4EB9 FFFC 027C              		jsr		DisplayChar
    922 FFFC075C 2208                        		move.l	a0,d1
    923 FFFC075E 4EB9 FFFC 0738              		jsr		DisplayWord
    924 FFFC0764 7407                        		moveq	#7,d2
    925 FFFC0766                             dspmem1:
    926 FFFC0766 123C 0020                   		move.b	#' ',d1
    927 FFFC076A 4EB9 FFFC 027C              		jsr		DisplayChar
    928 FFFC0770 1218                        		move.b	(a0)+,d1
    929 FFFC0772 4EB9 FFFC 0726              		jsr		DisplayByte
    930 FFFC0778 51CA FFEC                   		dbra	d2,dspmem1
    931 FFFC077C 4EF9 FFFC 0232              		jmp		CRLF
                                             
                                             ;==============================================================================
                                             ; Keyboard stuff
                                             ;
                                             ; KeyState2_
                                             ; 876543210
                                             ; ||||||||+ = shift
                                             ; |||||||+- = alt
                                             ; ||||||+-- = control
                                             ; |||||+--- = numlock
                                             ; ||||+---- = capslock
                                             ; |||+----- = scrolllock
                                             ; ||+------ =
                                             ; |+------- = 
                                             ; +-------- = extended
                                             ;
                                             ;==============================================================================
                                             
    950 FFFC0782                             _KeybdGetStatus:
    951 FFFC0782 1239 FFDC 0001              		move.b	KEYBD+1,d1
    952 FFFC0788 4E75                        		rts
                                             
                                             ; Get the scancode from the keyboard port
                                             ;
    956 FFFC078A                             _KeybdGetScancode:
    957 FFFC078A 7200                        		moveq	#0,d1
    958 FFFC078C 1239 FFDC 0000              		move.b	KEYBD,d1				; get the scan code
    959 FFFC0792 13FC 0000 FFDC 0001         		move.b	#0,KEYBD+1				; clear receive register
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 17
bootrom.asm
    960 FFFC079A 4E75                        		rts
                                             
                                             ; Recieve a byte from the keyboard, used after a command is sent to the
                                             ; keyboard in order to wait for a response.
                                             ;
    965 FFFC079C                             KeybdRecvByte:
    966 FFFC079C 2F03                        		move.l	d3,-(a7)
    967 FFFC079E 363C 0064                   		move.w	#100,d3		; wait up to 1s
    968 FFFC07A2                             .0003:
    969 FFFC07A2 6100 FFDE                   		bsr		_KeybdGetStatus	; wait for response from keyboard
    970 FFFC07A6 4A01                        		tst.b	d1
    971 FFFC07A8 6B0E                        		bmi		.0004		; is input buffer full ? yes, branch
    972 FFFC07AA 6100 02C4                   		bsr		Wait10ms		; wait a bit
    973 FFFC07AE 51CB FFF2                   		dbra	d3,.0003	; go back and try again
    974 FFFC07B2 261F                        		move.l	(a7)+,d3
    975 FFFC07B4 72FF                        		moveq	#-1,d1			; return -1
    976 FFFC07B6 4E75                        		rts
    977 FFFC07B8                             .0004:
    978 FFFC07B8 6100 FFD0                   		bsr		_KeybdGetScancode
    979 FFFC07BC 261F                        		move.l	(a7)+,d3
    980 FFFC07BE 4E75                        		rts
                                             
                                             
                                             ; Wait until the keyboard transmit is complete
                                             ; Returns .CF = 1 if successful, .CF=0 timeout
                                             ;
    986 FFFC07C0                             KeybdWaitTx:
    987 FFFC07C0 48E7 3000                   		movem.l	d2/d3,-(a7)
    988 FFFC07C4 7664                        		moveq	#100,d3		; wait a max of 1s
    989 FFFC07C6                             .0001:
    990 FFFC07C6 6100 FFBA                   		bsr		_KeybdGetStatus
    991 FFFC07CA 0801 0006                   		btst	#6,d1		; check for transmit complete bit
    992 FFFC07CE 6610                        		bne	    .0002		; branch if bit set
    993 FFFC07D0 6100 029E                   		bsr		Wait10ms		; delay a little bit
    994 FFFC07D4 51CB FFF0                   		dbra	d3,.0001	; go back and try again
    995 FFFC07D8 4CDF 000C                   		movem.l	(a7)+,d2/d3
    996 FFFC07DC 72FF                        		moveq	#-1,d1		; return -1
    997 FFFC07DE 4E75                        		rts
    998 FFFC07E0                             .0002:
    999 FFFC07E0 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1000 FFFC07E4 7200                        		moveq	#0,d1		; return 0
   1001 FFFC07E6 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; get key pending status into d1.b
                                             ;------------------------------------------------------------------------------
                                             ;
   1008 FFFC07E8                             CheckForKey:
   1009 FFFC07E8 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1010 FFFC07EE 6A06                        		bpl.s	cfk1
   1011 FFFC07F0 123C 0001                   		move.b	#1,d1
   1012 FFFC07F4 4E75                        		rts
   1013 FFFC07F6                             cfk1:
   1014 FFFC07F6 4201                        		clr.b	d1
   1015 FFFC07F8 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 18
bootrom.asm
   1020 FFFC07FA                             GetKey:
   1021 FFFC07FA 6100 0022                   		bsr		KeybdGetCharWait
   1022 FFFC07FE 0C39 0000 0001 0424         		cmpi.b	#0,KeybdEcho	; is keyboard echo on ?
   1023 FFFC0806 670C                        		beq.s	gk1
   1024 FFFC0808 0C01 000D                   		cmpi.b	#'\r',d1		; convert CR keystroke into CRLF
   1025 FFFC080C 6700 FA24                   		beq		CRLF
   1026 FFFC0810 6100 FA6A                   		bsr		DisplayChar
   1027 FFFC0814                             gk1:
   1028 FFFC0814 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1034 FFFC0816                             KeybdGetCharNoWait:
   1035 FFFC0816 4239 0001 0425              		clr.b	KeybdWaitFlag
   1036 FFFC081C 6008                        		bra		KeybdGetChar
                                             
   1038 FFFC081E                             KeybdGetCharWait:
   1039 FFFC081E 13FC FFFF 0001 0425         		move.b	#-1,KeybdWaitFlag
                                             
   1041 FFFC0826                             KeybdGetChar:
   1042 FFFC0826 48E7 3080                   		movem.l	d2/d3/a0,-(a7)
   1043 FFFC082A                             .0003:
   1044 FFFC082A 6100 FF56                   		bsr		_KeybdGetStatus			; check keyboard status for key available
   1045 FFFC082E 6B10                        		bmi		.0006					; yes, go process
   1046 FFFC0830 4A39 0001 0425              		tst.b	KeybdWaitFlag			; are we willing to wait for a key ?
   1047 FFFC0836 6BF2                        		bmi		.0003					; yes, branch back
   1048 FFFC0838 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1049 FFFC083C 72FF                        		moveq	#-1,d1					; flag no char available
   1050 FFFC083E 4E75                        		rts
   1051 FFFC0840                             .0006:
   1052 FFFC0840 6100 FF48                   		bsr		_KeybdGetScancode
   1053 FFFC0844                             .0001:
   1054 FFFC0844 33FC 0001 FFDC 0600         		move.w	#1,leds
   1055 FFFC084C B23C 00F0                   		cmp.b	#SC_KEYUP,d1
   1056 FFFC0850 6700 00CA                   		beq		.doKeyup
   1057 FFFC0854 B23C 00E0                   		cmp.b	#SC_EXTEND,d1
   1058 FFFC0858 6700 00CE                   		beq		.doExtend
   1059 FFFC085C B23C 0014                   		cmp.b	#SC_CTRL,d1
   1060 FFFC0860 6700 00D2                   		beq		.doCtrl
   1061 FFFC0864 B23C 0012                   		cmp.b	#SC_LSHIFT,d1
   1062 FFFC0868 6700 0134                   		beq		.doShift
   1063 FFFC086C B23C 0059                   		cmp.b	#SC_RSHIFT,d1
   1064 FFFC0870 6700 012C                   		beq		.doShift
   1065 FFFC0874 B23C 0077                   		cmp.b	#SC_NUMLOCK,d1
   1066 FFFC0878 6700 014C                   		beq		.doNumLock
   1067 FFFC087C B23C 0058                   		cmp.b	#SC_CAPSLOCK,d1
   1068 FFFC0880 6700 0154                   		beq		.doCapsLock
   1069 FFFC0884 B23C 007E                   		cmp.b	#SC_SCROLLLOCK,d1
   1070 FFFC0888 6700 015C                   		beq		.doScrollLock
   1071 FFFC088C B23C 0011                   		cmp.b   #SC_ALT,d1
   1072 FFFC0890 6700 00CA                   		beq     .doAlt
   1073 FFFC0894 1439 0001 0426              		move.b	_KeyState1,d2			; check key up/down
   1074 FFFC089A 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup status
   1075 FFFC08A2 4A02                        		tst.b	d2
   1076 FFFC08A4 6684                        		bne	    .0003					; ignore key up
   1077 FFFC08A6 B23C 000D                   		cmp.b   #SC_TAB,d1
   1078 FFFC08AA 6700 00D8                   		beq     .doTab
   1079 FFFC08AE                             .0013:
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 19
bootrom.asm
   1080 FFFC08AE 1439 0001 0427              		move.b	_KeyState2,d2
   1081 FFFC08B4 6A1E                        		bpl		.0010					; is it extended code ?
   1082 FFFC08B6 0202 007F                   		and.b	#$7F,d2					; clear extended bit
   1083 FFFC08BA 13C2 0001 0427              		move.b	d2,_KeyState2
   1084 FFFC08C0 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup
   1085 FFFC08C8 41F9 FFFC 0D00              		lea		_keybdExtendedCodes,a0
   1086 FFFC08CE 1230 1000                   		move.b	(a0,d1.w),d1
   1087 FFFC08D2 603A                        		bra		.0008
   1088 FFFC08D4                             .0010:
   1089 FFFC08D4 0802 0002                   		btst	#2,d2					; is it CTRL code ?
   1090 FFFC08D8 6710                        		beq		.0009
   1091 FFFC08DA 0241 007F                   		and.w	#$7F,d1
   1092 FFFC08DE 41F9 FFFC 0C80              		lea		_keybdControlCodes,a0
   1093 FFFC08E4 1230 1000                   		move.b	(a0,d1.w),d1
   1094 FFFC08E8 6024                        		bra		.0008
   1095 FFFC08EA                             .0009:
   1096 FFFC08EA 0802 0000                   		btst	#0,d2					; is it shift down ?
   1097 FFFC08EE 670C                        		beq  	.0007
   1098 FFFC08F0 41F9 FFFC 0B80              		lea		_shiftedScanCodes,a0
   1099 FFFC08F6 1230 1000                   		move.b	(a0,d1.w),d1
   1100 FFFC08FA 6012                        		bra		.0008
   1101 FFFC08FC                             .0007:
   1102 FFFC08FC 41F9 FFFC 0A80              		lea		_unshiftedScanCodes,a0
   1103 FFFC0902 1230 1000                   		move.b	(a0,d1.w),d1
   1104 FFFC0906 33FC 0202 FFDC 0600         		move.w	#$0202,leds
   1105 FFFC090E                             .0008:
   1106 FFFC090E 33FC 0303 FFDC 0600         		move.w	#$0303,leds
   1107 FFFC0916 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1108 FFFC091A 4E75                        		rts
   1109 FFFC091C                             .doKeyup:
   1110 FFFC091C 13FC FFFF 0001 0426         		move.b	#-1,_KeyState1
   1111 FFFC0924 6000 FF04                   		bra		.0003
   1112 FFFC0928                             .doExtend:
   1113 FFFC0928 0039 0080 0001 0427         		or.b	#$80,_KeyState2
   1114 FFFC0930 6000 FEF8                   		bra		.0003
   1115 FFFC0934                             .doCtrl:
   1116 FFFC0934 1239 0001 0426              		move.b	_KeyState1,d1
   1117 FFFC093A 4239 0001 0426              		clr.b	_KeyState1
   1118 FFFC0940 4A01                        		tst.b	d1
   1119 FFFC0942 6A0C                        		bpl.s	.0004
   1120 FFFC0944 08B9 0002 0001 0427         		bclr	#2,_KeyState2
   1121 FFFC094C 6000 FEDC                   		bra		.0003
   1122 FFFC0950                             .0004:
   1123 FFFC0950 08F9 0002 0001 0427         		bset	#2,_KeyState2
   1124 FFFC0958 6000 FED0                   		bra		.0003
   1125 FFFC095C                             .doAlt:
   1126 FFFC095C 1239 0001 0426              		move.b	_KeyState1,d1
   1127 FFFC0962 4239 0001 0426              		clr.b	_KeyState1
   1128 FFFC0968 4A01                        		tst.b	d1
   1129 FFFC096A 6A0C                        		bpl		.0011
   1130 FFFC096C 08B9 0001 0001 0427         		bclr	#1,_KeyState2
   1131 FFFC0974 6000 FEB4                   		bra		.0003
   1132 FFFC0978                             .0011:
   1133 FFFC0978 08F9 0001 0001 0427         		bset	#1,_KeyState2
   1134 FFFC0980 6000 FEA8                   		bra		.0003
   1135 FFFC0984                             .doTab:
   1136 FFFC0984 2F01                        		move.l	d1,-(a7)
   1137 FFFC0986 1239 0001 0427              	    move.b  _KeyState2,d1
   1138 FFFC098C 0801 0000                   	    btst	#0,d1                 ; is ALT down ?
   1139 FFFC0990 6706                        	    beq     .0012
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 20
bootrom.asm
                                             ;    	inc     _iof_switch
   1141 FFFC0992 221F                        	    move.l	(a7)+,d1
   1142 FFFC0994 6000 FE94                   	    bra     .0003
   1143 FFFC0998                             .0012:
   1144 FFFC0998 221F                        	    move.l	(a7)+,d1
   1145 FFFC099A 6000 FF12                   	    bra     .0013
   1146 FFFC099E                             .doShift:
   1147 FFFC099E 1239 0001 0426              		move.b	_KeyState1,d1
   1148 FFFC09A4 4239 0001 0426              		clr.b	_KeyState1
   1149 FFFC09AA 4A01                        		tst.b	d1
   1150 FFFC09AC 6A0C                        		bpl.s	.0005
   1151 FFFC09AE 08B9 0000 0001 0427         		bclr	#0,_KeyState2
   1152 FFFC09B6 6000 FE72                   		bra		.0003
   1153 FFFC09BA                             .0005:
   1154 FFFC09BA 08F9 0000 0001 0427         		bset	#0,_KeyState2
   1155 FFFC09C2 6000 FE66                   		bra		.0003
   1156 FFFC09C6                             .doNumLock:
   1157 FFFC09C6 0879 0004 0001 0427         		bchg	#4,_KeyState2
   1158 FFFC09CE 6100 0026                   		bsr		KeybdSetLEDStatus
   1159 FFFC09D2 6000 FE56                   		bra		.0003
   1160 FFFC09D6                             .doCapsLock:
   1161 FFFC09D6 0879 0005 0001 0427         		bchg	#5,_KeyState2
   1162 FFFC09DE 6100 0016                   		bsr		KeybdSetLEDStatus
   1163 FFFC09E2 6000 FE46                   		bra		.0003
   1164 FFFC09E6                             .doScrollLock:
   1165 FFFC09E6 0879 0006 0001 0427         		bchg	#6,_KeyState2
   1166 FFFC09EE 6100 0006                   		bsr		KeybdSetLEDStatus
   1167 FFFC09F2 6000 FE36                   		bra		.0003
                                             
   1169 FFFC09F6                             KeybdSetLEDStatus:
   1170 FFFC09F6 48E7 3000                   		movem.l	d2/d3,-(a7)
   1171 FFFC09FA 4239 0001 0428              		clr.b	KeybdLEDs
   1172 FFFC0A00 0839 0004 0001 0427         		btst	#4,_KeyState2
   1173 FFFC0A08 6708                        		beq.s	.0002
   1174 FFFC0A0A 13FC 0002 0001 0428         		move.b	#2,KeybdLEDs
   1175 FFFC0A12                             .0002:
   1176 FFFC0A12 0839 0005 0001 0427         		btst	#5,_KeyState2
   1177 FFFC0A1A 6708                        		beq.s	.0003
   1178 FFFC0A1C 08F9 0002 0001 0428         		bset	#2,KeybdLEDs
   1179 FFFC0A24                             .0003:
   1180 FFFC0A24 0839 0006 0001 0427         		btst	#6,_KeyState2
   1181 FFFC0A2C 6708                        		beq.s	.0004
   1182 FFFC0A2E 08F9 0000 0001 0428         		bset	#0,KeybdLEDs
   1183 FFFC0A36                             .0004:
   1184 FFFC0A36 123C 00ED                   		move.b	#$ED,d1
   1185 FFFC0A3A 6100 002C                   		bsr		KeybdSendByte
   1186 FFFC0A3E 6100 FD80                   		bsr		KeybdWaitTx
   1187 FFFC0A42 6100 FD58                   		bsr		KeybdRecvByte
   1188 FFFC0A46 4A01                        		tst.b	d1
   1189 FFFC0A48 6B18                        		bmi		.0001
   1190 FFFC0A4A B2BC 0000 00FA              		cmp		#$FA,d1
   1191 FFFC0A50 1239 0001 0428              		move.b	KeybdLEDs,d1
   1192 FFFC0A56 6100 0010                   		bsr		KeybdSendByte
   1193 FFFC0A5A 6100 FD64                   		bsr		KeybdWaitTx
   1194 FFFC0A5E 6100 FD3C                   		bsr		KeybdRecvByte
   1195 FFFC0A62                             .0001:
   1196 FFFC0A62 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1197 FFFC0A66 4E75                        		rts
                                             
   1199 FFFC0A68                             KeybdSendByte:
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 21
bootrom.asm
   1200 FFFC0A68 13C1 FFDC 0000              		move.b	d1,KEYBD
   1201 FFFC0A6E 4E75                        		rts
                                             	
   1203 FFFC0A70                             Wait10ms:
   1204 FFFC0A70 2F03                        		move.l	d3,-(a7)
   1205 FFFC0A72 263C 0000 03E8              		move.l	#1000,d3
   1206 FFFC0A78                             .0001:
   1207 FFFC0A78 51CB FFFE                   		dbra	d3,.0001
   1208 FFFC0A7C 261F                        		move.l	(a7)+,d3
   1209 FFFC0A7E 4E75                        		rts
                                             
                                             
                                             ;--------------------------------------------------------------------------
                                             ; PS2 scan codes to ascii conversion tables.
                                             ;--------------------------------------------------------------------------
                                             ;
   1216 FFFC0A80                             _unshiftedScanCodes:
   1217 FFFC0A80 2E A9 2E A5 A3 A1 A2 AC     	dc.b	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
                                             
   1219 FFFC0A88 2E AA A8 A6 A4 09 60 2E     	dc.b	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
                                             
   1221 FFFC0A90 2E 2E 2E 2E 2E 71 31 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
                                             
   1223 FFFC0A98 2E 2E 7A 73 61 77 32 2E     	dc.b	$2e,$2e,$7a,$73,$61,$77,$32,$2e
                                             
   1225 FFFC0AA0 2E 63 78 64 65 34 33 2E     	dc.b	$2e,$63,$78,$64,$65,$34,$33,$2e
                                             
   1227 FFFC0AA8 2E 20 76 66 74 72 35 2E     	dc.b	$2e,$20,$76,$66,$74,$72,$35,$2e
                                             
   1229 FFFC0AB0 2E 6E 62 68 67 79 36 2E     	dc.b	$2e,$6e,$62,$68,$67,$79,$36,$2e
                                             
   1231 FFFC0AB8 2E 2E 6D 6A 75 37 38 2E     	dc.b	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
                                             
   1233 FFFC0AC0 2E 2C 6B 69 6F 30 39 2E     	dc.b	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
                                             
   1235 FFFC0AC8 2E 2E 2F 6C 3B 70 2D 2E     	dc.b	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
                                             
   1237 FFFC0AD0 2E 2E 27 2E 5B 3D 2E 2E     	dc.b	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
                                             
   1239 FFFC0AD8 AD 2E 0D 5D 2E 5C 2E 2E     	dc.b	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
                                             
   1241 FFFC0AE0 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1243 FFFC0AE8 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1245 FFFC0AF0 98 7F 92 2E 91 90 1B AF     	dc.b	$98,$7f,$92,$2e,$91,$90,$1b,$af
                                             
   1247 FFFC0AF8 AB 2E 97 2E 2E 96 AE 2E     	dc.b	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
                                             
                                             
   1250 FFFC0B00 2E 2E 2E A7 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
                                             
   1252 FFFC0B08 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1254 FFFC0B10 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1256 FFFC0B18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1258 FFFC0B20 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 22
bootrom.asm
   1260 FFFC0B28 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1262 FFFC0B30 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1264 FFFC0B38 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1266 FFFC0B40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1268 FFFC0B48 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1270 FFFC0B50 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1272 FFFC0B58 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1274 FFFC0B60 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1276 FFFC0B68 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1278 FFFC0B70 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1280 FFFC0B78 2E 2E FA 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1283 FFFC0B80                             _shiftedScanCodes:
   1284 FFFC0B80 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1286 FFFC0B88 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1288 FFFC0B90 2E 2E 2E 2E 2E 51 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
                                             
   1290 FFFC0B98 2E 2E 5A 53 41 57 40 2E     	dc.b	$2e,$2e,$5a,$53,$41,$57,$40,$2e
                                             
   1292 FFFC0BA0 2E 43 58 44 45 24 23 2E     	dc.b	$2e,$43,$58,$44,$45,$24,$23,$2e
                                             
   1294 FFFC0BA8 2E 20 56 46 54 52 25 2E     	dc.b	$2e,$20,$56,$46,$54,$52,$25,$2e
                                             
   1296 FFFC0BB0 2E 4E 42 48 47 59 5E 2E     	dc.b	$2e,$4e,$42,$48,$47,$59,$5e,$2e
                                             
   1298 FFFC0BB8 2E 2E 4D 4A 55 26 2A 2E     	dc.b	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
                                             
   1300 FFFC0BC0 2E 3C 4B 49 4F 29 28 2E     	dc.b	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
                                             
   1302 FFFC0BC8 2E 3E 3F 4C 3A 50 5F 2E     	dc.b	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
                                             
   1304 FFFC0BD0 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1306 FFFC0BD8 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1308 FFFC0BE0 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1310 FFFC0BE8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1312 FFFC0BF0 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1314 FFFC0BF8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1317 FFFC0C00 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1319 FFFC0C08 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 23
bootrom.asm
                                             
   1321 FFFC0C10 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1323 FFFC0C18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1325 FFFC0C20 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1327 FFFC0C28 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1329 FFFC0C30 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1331 FFFC0C38 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1333 FFFC0C40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1335 FFFC0C48 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1337 FFFC0C50 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1339 FFFC0C58 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1341 FFFC0C60 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1343 FFFC0C68 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1345 FFFC0C70 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1347 FFFC0C78 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
                                             ; control
   1351 FFFC0C80                             _keybdControlCodes:
   1352 FFFC0C80 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1354 FFFC0C88 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1356 FFFC0C90 2E 2E 2E 2E 2E 11 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
                                             
   1358 FFFC0C98 2E 2E 1A 13 01 17 40 2E     	dc.b	$2e,$2e,$1a,$13,$01,$17,$40,$2e
                                             
   1360 FFFC0CA0 2E 03 18 04 05 24 23 2E     	dc.b	$2e,$03,$18,$04,$05,$24,$23,$2e
                                             
   1362 FFFC0CA8 2E 20 16 06 14 12 25 2E     	dc.b	$2e,$20,$16,$06,$14,$12,$25,$2e
                                             
   1364 FFFC0CB0 2E 0E 02 08 07 19 5E 2E     	dc.b	$2e,$0e,$02,$08,$07,$19,$5e,$2e
                                             
   1366 FFFC0CB8 2E 2E 0D 0A 15 26 2A 2E     	dc.b	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
                                             
   1368 FFFC0CC0 2E 3C 0B 09 0F 29 28 2E     	dc.b	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
                                             
   1370 FFFC0CC8 2E 3E 3F 0C 3A 10 5F 2E     	dc.b	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
                                             
   1372 FFFC0CD0 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1374 FFFC0CD8 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1376 FFFC0CE0 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1378 FFFC0CE8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 24
bootrom.asm
   1380 FFFC0CF0 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1382 FFFC0CF8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1385 FFFC0D00                             _keybdExtendedCodes:
   1386 FFFC0D00 2E 2E 2E 2E A3 A1 A2 2E     	dc.b	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
                                             
   1388 FFFC0D08 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1390 FFFC0D10 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1392 FFFC0D18 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1394 FFFC0D20 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1396 FFFC0D28 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1398 FFFC0D30 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1400 FFFC0D38 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1402 FFFC0D40 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1404 FFFC0D48 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1406 FFFC0D50 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1408 FFFC0D58 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1410 FFFC0D60 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1412 FFFC0D68 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1414 FFFC0D70 98 99 92 2E 91 90 2E 2E     	dc.b	$98,$99,$92,$2e,$91,$90,$2e,$2e
                                             
   1416 FFFC0D78 2E 2E 97 2E 2E 96 2E 2E     	dc.b	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
                                             
                                             
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             ; Monitor
                                             ;==============================================================================
                                             ;==============================================================================
                                             ;
   1426 FFFC0D80                             StartMon:
   1427 FFFC0D80                             Monitor:
                                             ;	lea		STACK,a7		; reset the stack pointer
   1429 FFFC0D80 4239 0001 0424              		clr.b	KeybdEcho		; turn off keyboard echo
   1430 FFFC0D86                             PromptLn:
   1431 FFFC0D86 6100 F4AA                   		bsr		CRLF
   1432 FFFC0D8A 123C 0024                   		move.b	#'$',d1
   1433 FFFC0D8E 6100 F4EC                   		bsr		DisplayChar
                                             
                                             ; Get characters until a CR is keyed
                                             ;
   1437 FFFC0D92                             Prompt3:
   1438 FFFC0D92 6100 FA66                   		bsr		GetKey
   1439 FFFC0D96 0C01 000D                   		cmpi.b	#CR,d1
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 25
bootrom.asm
   1440 FFFC0D9A 6706                        		beq.s	Prompt1
   1441 FFFC0D9C 6100 F4DE                   		bsr		DisplayChar
   1442 FFFC0DA0 60F0                        		bra.s	Prompt3
                                             
                                             ; Process the screen line that the CR was keyed on
                                             ;
   1446 FFFC0DA2                             Prompt1:
   1447 FFFC0DA2 4239 0001 0419              		clr.b	CursorCol		; go back to the start of the line
   1448 FFFC0DA8 6100 F4A2                   		bsr		CalcScreenLoc	; a0 = screen memory location
   1449 FFFC0DAC 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1451 FFFC0DAE 0C01 0024                   		cmpi.b	#'$',d1			; skip over '$' prompt character
   1452 FFFC0DB2 6602                        		bne.s	Prompt2
   1453 FFFC0DB4 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
                                             	
                                             ; Dispatch based on command character
                                             ;
   1458 FFFC0DB6                             Prompt2:
   1459 FFFC0DB6 0C01 006F                   		cmpi.b	#'o',d1
   1460 FFFC0DBA 6700 0D8E                   		beq		gfx_demo
   1461 FFFC0DBE 0C01 0061                   		cmpi.b	#'a',d1
   1462 FFFC0DC2 6700 08DC                   		beq		AudioInputTest
   1463 FFFC0DC6 0C01 0067                   		cmpi.b	#'g',d1
   1464 FFFC0DCA 6700 0684                   		beq		GraphicsDemo
   1465 FFFC0DCE 0C01 003A                   		cmpi.b	#':',d1			; $: - edit memory
   1466 FFFC0DD2 6700 015C                   		beq		EditMem
   1467 FFFC0DD6 0C01 0044                   		cmpi.b	#'D',d1			; $D - dump memory
   1468 FFFC0DDA 6700 01C2                   		beq		DumpMem
   1469 FFFC0DDE 0C01 0046                   		cmpi.b	#'F',d1
   1470 FFFC0DE2 6700 00F6                   		beq		FillMem
   1471 FFFC0DE6 0C01 0042                   		cmpi.b	#'B',d1			; $B - start tiny basic
   1472 FFFC0DEA 6606                        		bne.s	.0001
   1473 FFFC0DEC 4EF9 FFFC C000              		jmp		$FFFCC000
   1474 FFFC0DF2                             .0001:
   1475 FFFC0DF2 0C01 004A                   		cmpi.b	#'J',d1			; $J - execute code
   1476 FFFC0DF6 6700 0196                   		beq		ExecuteCode
   1477 FFFC0DFA 0C01 004C                   		cmpi.b	#'L',d1			; $L - load S19 file
   1478 FFFC0DFE 6700 0368                   		beq		LoadS19
   1479 FFFC0E02 0C01 003F                   		cmpi.b	#'?',d1			; $? - display help
   1480 FFFC0E06 6726                        		beq		DisplayHelp
   1481 FFFC0E08 0C01 0043                   		cmpi.b	#'C',d1			; $C - clear screen
   1482 FFFC0E0C 6704                        		beq		TestCLS
   1483 FFFC0E0E 6000 FF70                   		bra		Monitor
                                             
   1485 FFFC0E12                             TestCLS:
   1486 FFFC0E12 1218                        		move.b	(a0)+,d1
   1487 FFFC0E14 0C01 004C                   		cmpi.b	#'L',d1
   1488 FFFC0E18 6600 FF66                   		bne		Monitor
   1489 FFFC0E1C 1218                        		move.b	(a0)+,d1
   1490 FFFC0E1E 0C01 0053                   		cmpi.b	#'S',d1
   1491 FFFC0E22 6600 FF5C                   		bne		Monitor
   1492 FFFC0E26 6100 0216                   		bsr		ClearScreen
   1493 FFFC0E2A 6000 FF54                   		bra		Monitor
                                             	
   1495 FFFC0E2E                             DisplayHelp:
   1496 FFFC0E2E 43F9 FFFC 0E3E              		lea		HelpMsg,a1
   1497 FFFC0E34 4EB9 FFFC 03EC              		jsr		DisplayString
   1498 FFFC0E3A 6000 FF44                   		bra		Monitor
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 26
bootrom.asm
   1500 FFFC0E3E                             HelpMsg:
   1501 FFFC0E3E 3F 20 3D 20 44 69 73 70     		dc.b	"? = Display help",CR,LF
   1502 FFFC0E46 6C 61 79 20 68 65 6C 70     
   1503 FFFC0E4E 0D 0A                       
   1504 FFFC0E50 43 4C 53 20 3D 20 63 6C     		dc.b	"CLS = clear screen",CR,LF
   1505 FFFC0E58 65 61 72 20 73 63 72 65     
   1506 FFFC0E60 65 6E 0D 0A                 
   1507 FFFC0E64 3A 20 3D 20 45 64 69 74     		dc.b	": = Edit memory bytes",CR,LF
   1508 FFFC0E6C 20 6D 65 6D 6F 72 79 20     
   1509 FFFC0E74 62 79 74 65 73 0D 0A        
   1510 FFFC0E7B 46 20 3D 20 46 69 6C 6C     		dc.b	"F = Fill memory",CR,LF
   1511 FFFC0E83 20 6D 65 6D 6F 72 79 0D     
   1512 FFFC0E8B 0A                          
   1513 FFFC0E8C 4C 20 3D 20 4C 6F 61 64     		dc.b	"L = Load S19 file",CR,LF
   1514 FFFC0E94 20 53 31 39 20 66 69 6C     
   1515 FFFC0E9C 65 0D 0A                    
   1516 FFFC0E9F 44 20 3D 20 44 75 6D 70     		dc.b	"D = Dump memory",CR,LF
   1517 FFFC0EA7 20 6D 65 6D 6F 72 79 0D     
   1518 FFFC0EAF 0A                          
   1519 FFFC0EB0 42 20 3D 20 73 74 61 72     		dc.b	"B = start tiny basic",CR,LF
   1520 FFFC0EB8 74 20 74 69 6E 79 20 62     
   1521 FFFC0EC0 61 73 69 63 0D 0A           
   1522 FFFC0EC6 4A 20 3D 20 4A 75 6D 70     		dc.b	"J = Jump to code",CR,LF,0
   1523 FFFC0ECE 20 74 6F 20 63 6F 64 65     
   1524 FFFC0ED6 0D 0A 00                    
   1525 FFFC0ED9 FF                         		even
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Fill memory
                                             ; FB = fill bytes		FB 00000010 100 FF	; fill starting at 10 for 256 bytes
                                             ; FW = fill words
                                             ; FL = fill longs
                                             ; F = fill bytes
                                             ;------------------------------------------------------------------------------
                                             ;
   1535 FFFC0EDA                             FillMem:
   1536 FFFC0EDA 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1538 FFFC0EDC 1801                        		move.b	d1,d4			; d4 = fill size
   1539 FFFC0EDE 6100 0044                   		bsr		ignBlanks
   1540 FFFC0EE2 6100 00EE                   		bsr		GetHexNumber
   1541 FFFC0EE6 2241                        		move.l	d1,a1			; a1 = start
   1542 FFFC0EE8 6100 003A                   		bsr		ignBlanks
   1543 FFFC0EEC 6100 00E4                   		bsr		GetHexNumber
   1544 FFFC0EF0 2601                        		move.l	d1,d3			; d3 = count
   1545 FFFC0EF2 6100 0030                   		bsr		ignBlanks
   1546 FFFC0EF6 6100 00DA                   		bsr		GetHexNumber	; fill value
   1547 FFFC0EFA 0C04 004C                   		cmpi.b	#'L',d4
   1548 FFFC0EFE 660A                        		bne		fmem1
   1549 FFFC0F00                             fmemL:
   1550 FFFC0F00 22C1                        		move.l	d1,(a1)+
   1551 FFFC0F02 5383                        		sub.l	#1,d3
   1552 FFFC0F04 66FA                        		bne.s	fmemL
   1553 FFFC0F06 6000 FE78                   		bra		Monitor
   1554 FFFC0F0A                             fmem1
   1555 FFFC0F0A 0C04 0057                   		cmpi.b	#'W',d4
   1556 FFFC0F0E 660A                        		bne		fmemB
   1557 FFFC0F10                             fmemW:
   1558 FFFC0F10 32C1                        		move.w	d1,(a1)+
   1559 FFFC0F12 5383                        		sub.l	#1,d3
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 27
bootrom.asm
   1560 FFFC0F14 66FA                        		bne.s	fmemW
   1561 FFFC0F16 6000 FE68                   		bra		Monitor
   1562 FFFC0F1A                             fmemB:
   1563 FFFC0F1A 12C1                        		move.b	d1,(a1)+
   1564 FFFC0F1C 5383                        		sub.l	#1,d3
   1565 FFFC0F1E 66FA                        		bne.s	fmemB
   1566 FFFC0F20 6000 FE5E                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   1571 FFFC0F24                             ignBlanks:
   1572 FFFC0F24 1218                        		move.b	(a0)+,d1
   1573 FFFC0F26 0C01 0020                   		cmpi.b	#' ',d1
   1574 FFFC0F2A 67F8                        		beq		ignBlanks
   1575 FFFC0F2C 5388                        		subq	#1,a0
   1576 FFFC0F2E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Edit memory byte.
                                             ;------------------------------------------------------------------------------
                                             ;
   1582 FFFC0F30                             EditMem:
   1583 FFFC0F30 6100 FFF2                   		bsr		ignBlanks
   1584 FFFC0F34 6100 009C                   		bsr		GetHexNumber
   1585 FFFC0F38 2241                        		move.l	d1,a1
   1586 FFFC0F3A                             edtmem1:
   1587 FFFC0F3A 6100 FFE8                   		bsr		ignBlanks
   1588 FFFC0F3E 6100 0092                   		bsr		GetHexNumber
   1589 FFFC0F42 12C1                        		move.b	d1,(a1)+
   1590 FFFC0F44 6100 FFDE                   		bsr		ignBlanks
   1591 FFFC0F48 6100 0088                   		bsr		GetHexNumber
   1592 FFFC0F4C 12C1                        		move.b	d1,(a1)+
   1593 FFFC0F4E 6100 FFD4                   		bsr		ignBlanks
   1594 FFFC0F52 6100 007E                   		bsr		GetHexNumber
   1595 FFFC0F56 12C1                        		move.b	d1,(a1)+
   1596 FFFC0F58 6100 FFCA                   		bsr		ignBlanks
   1597 FFFC0F5C 6100 0074                   		bsr		GetHexNumber
   1598 FFFC0F60 12C1                        		move.b	d1,(a1)+
   1599 FFFC0F62 6100 FFC0                   		bsr		ignBlanks
   1600 FFFC0F66 6100 006A                   		bsr		GetHexNumber
   1601 FFFC0F6A 12C1                        		move.b	d1,(a1)+
   1602 FFFC0F6C 6100 FFB6                   		bsr		ignBlanks
   1603 FFFC0F70 6100 0060                   		bsr		GetHexNumber
   1604 FFFC0F74 12C1                        		move.b	d1,(a1)+
   1605 FFFC0F76 6100 FFAC                   		bsr		ignBlanks
   1606 FFFC0F7A 6100 0056                   		bsr		GetHexNumber
   1607 FFFC0F7E 12C1                        		move.b	d1,(a1)+
   1608 FFFC0F80 6100 FFA2                   		bsr		ignBlanks
   1609 FFFC0F84 6100 004C                   		bsr		GetHexNumber
   1610 FFFC0F88 12C1                        		move.b	d1,(a1)+
   1611 FFFC0F8A 6000 FDF4                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Execute code at the specified address.
                                             ;------------------------------------------------------------------------------
                                             ;
   1617 FFFC0F8E                             ExecuteCode:
   1618 FFFC0F8E 6100 FF94                   		bsr		ignBlanks
   1619 FFFC0F92 6100 003E                   		bsr		GetHexNumber
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 28
bootrom.asm
   1620 FFFC0F96 2041                        		move.l	d1,a0
   1621 FFFC0F98 4E90                        		jsr		(a0)
   1622 FFFC0F9A 6000 FDE4                   		bra     Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Do a memory dump of the requested location.
                                             ;------------------------------------------------------------------------------
                                             ;
   1628 FFFC0F9E                             DumpMem:
   1629 FFFC0F9E 6100 FF84                   		bsr		ignBlanks
   1630 FFFC0FA2 6100 002E                   		bsr		GetHexNumber
   1631 FFFC0FA6                             DumpMem1:
   1632 FFFC0FA6 2041                        		move.l	d1,a0
   1633 FFFC0FA8 4EB9 FFFC 0232              		jsr		CRLF
   1634 FFFC0FAE 6100 F7A2                   		bsr		DisplayMem
   1635 FFFC0FB2 6100 F79E                   		bsr		DisplayMem
   1636 FFFC0FB6 6100 F79A                   		bsr		DisplayMem
   1637 FFFC0FBA 6100 F796                   		bsr		DisplayMem
   1638 FFFC0FBE 6100 F792                   		bsr		DisplayMem
   1639 FFFC0FC2 6100 F78E                   		bsr		DisplayMem
   1640 FFFC0FC6 6100 F78A                   		bsr		DisplayMem
   1641 FFFC0FCA 6100 F786                   		bsr		DisplayMem
   1642 FFFC0FCE 6000 FDB0                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a hexidecimal number. Maximum of eight digits.
                                             ;------------------------------------------------------------------------------
                                             ;
   1648 FFFC0FD2                             GetHexNumber:
   1649 FFFC0FD2 48E7 A000                   		movem.l	d0/d2,-(a7)
   1650 FFFC0FD6 4282                        		clr.l	d2
   1651 FFFC0FD8 7007                        		moveq	#7,d0
   1652 FFFC0FDA                             gthxn2:
   1653 FFFC0FDA 1218                        		move.b	(a0)+,d1
   1654 FFFC0FDC 6100 001E                   		bsr		AsciiToHexNybble
   1655 FFFC0FE0 B23C 00FF                   		cmp.b	#0xff,d1
   1656 FFFC0FE4 670E                        		beq		gthxn1
   1657 FFFC0FE6 E98A                        		lsl.l	#4,d2
   1658 FFFC0FE8 0281 0000 000F              		andi.l	#0x0f,d1
   1659 FFFC0FEE 8481                        		or.l	d1,d2
   1660 FFFC0FF0 51C8 FFE8                   		dbra	d0,gthxn2
   1661 FFFC0FF4                             gthxn1:
   1662 FFFC0FF4 2202                        		move.l	d2,d1
   1663 FFFC0FF6 4CDF 0005                   		movem.l	(a7)+,d0/d2
   1664 FFFC0FFA 4E75                        		rts	
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Convert ASCII character in the range '0' to '9', 'a' tr 'f' or 'A' to 'F'
                                             ; to a hex nybble.
                                             ;------------------------------------------------------------------------------
                                             ;
   1671 FFFC0FFC                             AsciiToHexNybble:
   1672 FFFC0FFC 0C01 0030                   		cmpi.b	#'0',d1
   1673 FFFC1000 6538                        		blo.s	gthx3
   1674 FFFC1002 0C01 0039                   		cmpi.b	#'9',d1
   1675 FFFC1006 6206                        		bhi.s	gthx5
   1676 FFFC1008 0401 0030                   		subi.b	#'0',d1
   1677 FFFC100C 4E75                        		rts
   1678 FFFC100E                             gthx5:
   1679 FFFC100E 0C01 0041                   		cmpi.b	#'A',d1
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 29
bootrom.asm
   1680 FFFC1012 6526                        		blo.s	gthx3
   1681 FFFC1014 0C01 0046                   		cmpi.b	#'F',d1
   1682 FFFC1018 620A                        		bhi.s	gthx6
   1683 FFFC101A 0401 0041                   		subi.b	#'A',d1
   1684 FFFC101E 0601 000A                   		addi.b	#10,d1
   1685 FFFC1022 4E75                        		rts
   1686 FFFC1024                             gthx6:
   1687 FFFC1024 0C01 0061                   		cmpi.b	#'a',d1
   1688 FFFC1028 6510                        		blo.s	gthx3
   1689 FFFC102A 0C01 0066                   		cmpi.b	#'f',d1
   1690 FFFC102E 620A                        		bhi.s	gthx3
   1691 FFFC1030 0401 0061                   		subi.b	#'a',d1
   1692 FFFC1034 0601 000A                   		addi.b	#10,d1
   1693 FFFC1038 4E75                        		rts
   1694 FFFC103A                             gthx3:
   1695 FFFC103A 72FF                        		moveq	#-1,d1		; not a hex number
   1696 FFFC103C 4E75                        		rts
                                             
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             ; The fast way to clear the screen. Uses the blitter.
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             
   1702 FFFC103E                             ClearScreen:
   1703 FFFC103E 4BF9 FFE0 0000              		lea		VDGREG,a5
   1704 FFFC1044                             .0003:								
   1705 FFFC1044 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1706 FFFC1048 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1707 FFFC104C 67F6                        		beq.s	.0003				; branch if not done
   1708 FFFC104E 2B7C 0001 D4C0 04BC         		move.l	#400*300,$4BC(a5)		; set transfer count  pixels
   1709 FFFC1056 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   1710 FFFC105E 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   1711 FFFC1066 2B7C 0000 0190 04A4         		move.l	#400,$4A4(a5)		; set destination width
   1712 FFFC106E 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   1713 FFFC1076 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; clear virtual screen too
   1716 FFFC107C 7020                        		moveq	#$20,d0				; d0 = space character
   1717 FFFC107E 323C 073A                   		move.w	#50*37,d1
   1718 FFFC1082 4BF9 1FFF 0000              		lea		VirtScreen,a5
   1719 FFFC1088                             .0001:
   1720 FFFC1088 1AC0                        		move.b	d0,(a5)+
   1721 FFFC108A 51C9 FFFC                   		dbra	d1,.0001
   1722 FFFC108E 4E75                        		rts
                                             
   1724 FFFC1090                             ScrollUp:
   1725 FFFC1090 48E7 8084                   		movem.l	d0/a0/a5,-(a7)
   1726 FFFC1094 4BF9 FFE0 0000              		lea		VDGREG,a5
   1727 FFFC109A                             .0003:								
   1728 FFFC109A 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1729 FFFC109E 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1730 FFFC10A2 67F6                        		beq.s	.0003				; branch if not done
                                             		; Channel A
   1732 FFFC10A4 2B7C 0001 C840 04B0         		move.l	#400*292,$4B0(a5)	; set source transfer count pixels
   1733 FFFC10AC 2B7C 0000 0C80 0480         		move.l	#400*8,$480(a5)		; set source bitmap address (address in graphics mem)
   1734 FFFC10B4 2B7C 0000 0000 0484         		move.l	#0,$484(a5)			; set src modulo
                                             		; Channel D
   1736 FFFC10BC 2B7C 0001 C840 04BC         		move.l	#400*292,$4BC(a5)	; set destination transfer count pixels
   1737 FFFC10C4 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   1738 FFFC10CC 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 30
bootrom.asm
   1740 FFFC10D4 2B7C FFFF FFFF 04A0         		move.l	#-1,$4A0(a5)		; set source width
   1741 FFFC10DC 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   1742 FFFC10E4 3B7C 0011 04AE              		move.w	#$11,$4AE(a5)		; set op A ($11 = copy A)
   1743 FFFC10EA 3B7C 8082 04AC              		move.w	#%1000000010000010,$4AC(a5)		; enable channel A,D, start transfer
                                             
                                             		; Scroll virtual screen
   1746 FFFC10F0 4BF9 1FFF 0000              		lea		VirtScreen,a5
   1747 FFFC10F6 204D                        		movea.l	a5,a0
   1748 FFFC10F8 1039 0001 041B              		move.b	TextCols,d0
   1749 FFFC10FE 4880                        		ext.w	d0
   1750 FFFC1100 D1C0                        		add.l	d0,a0
   1751 FFFC1102 C0FC 0025                   		mulu	#37,d0
   1752 FFFC1106                             .0001:
   1753 FFFC1106 1AD8                        		move.b	(a0)+,(a5)+
   1754 FFFC1108 51C8 FFFC                   		dbra	d0,.0001
   1755 FFFC110C 4CDF 2101                   		movem.l	(a7)+,d0/a0/a5
                                             
   1757 FFFC1110                             BlankLastLine:
   1758 FFFC1110 48E7 8004                   		movem.l	d0/a5,-(a7)
                                             		; Channel D
   1760 FFFC1114 4BF9 FFE0 0000              		lea		VDGREG,a5
   1761 FFFC111A                             .0003:								
   1762 FFFC111A 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   1763 FFFC111E 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   1764 FFFC1122 67F6                        		beq.s	.0003				; branch if not done
   1765 FFFC1124 2B7C 0000 0C80 04BC         		move.l	#400*8,$4BC(a5)		; set destination transfer count pixels
   1766 FFFC112C 2B7C 0001 C840 0498         		move.l	#400*292,$498(a5)	; set destination address
   1767 FFFC1134 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   1768 FFFC113C 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   1769 FFFC1144 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   1770 FFFC114C 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   1771 FFFC1152 4BF9 1FFF 073A              		lea		VirtScreen+50*37,a5
   1772 FFFC1158 7028                        		moveq	#40,d0
   1773 FFFC115A                             .0001:
   1774 FFFC115A 1AFC 0020                   		move.b	#$20,(a5)+
   1775 FFFC115E 51C8 FFFA                   		dbra	d0,.0001
   1776 FFFC1162 4CDF 2001                   		movem.l	(a7)+,d0/a5
   1777 FFFC1166 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Load an S19 format file
                                             ;==============================================================================
                                             ;
   1783 FFFC1168                             LoadS19:
   1784 FFFC1168 600A                        	bra		ProcessRec
   1785 FFFC116A                             NextRec:
   1786 FFFC116A 6100 017A                   	bsr		sGetChar
   1787 FFFC116E 0C00 000A                   	cmpi.b	#LF,d0
   1788 FFFC1172 66F6                        	bne		NextRec
   1789 FFFC1174                             ProcessRec
   1790 FFFC1174 6100 0170                   	bsr		sGetChar
   1791 FFFC1178 1800                        	move.b	d0,d4
   1792 FFFC117A 0C04 001A                   	cmpi.b	#26,d4		; CTRL-Z ?
   1793 FFFC117E 6700 FC00                   	beq		Monitor
   1794 FFFC1182 0C04 0053                   	cmpi.b	#'S',d4
   1795 FFFC1186 66E2                        	bne		NextRec
   1796 FFFC1188 6100 015C                   	bsr		sGetChar
   1797 FFFC118C 1800                        	move.b	d0,d4
   1798 FFFC118E 0C04 0030                   	cmpi.b	#'0',d4
   1799 FFFC1192 65D6                        	blo		NextRec
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 31
bootrom.asm
   1800 FFFC1194 0C04 0039                   	cmpi.b	#'9',d4		; d4 = record type
   1801 FFFC1198 62D0                        	bhi		NextRec
   1802 FFFC119A 6100 014A                   	bsr		sGetChar
   1803 FFFC119E 6100 FE5C                   	bsr		AsciiToHexNybble
   1804 FFFC11A2 1401                        	move.b	d1,d2
   1805 FFFC11A4 6100 0140                   	bsr		sGetChar
   1806 FFFC11A8 6100 FE52                   	bsr		AsciiToHexNybble
   1807 FFFC11AC E90A                        	lsl.b	#4,d2
   1808 FFFC11AE 8202                        	or.b	d2,d1		; d1 = byte count
   1809 FFFC11B0 1601                        	move.b	d1,d3		; d3 = byte count
   1810 FFFC11B2 0C04 0030                   	cmpi.b	#'0',d4		; manufacturer ID record, ignore
   1811 FFFC11B6 67B2                        	beq		NextRec
   1812 FFFC11B8 0C04 0031                   	cmpi.b	#'1',d4
   1813 FFFC11BC 676A                        	beq		ProcessS1
   1814 FFFC11BE 0C04 0032                   	cmpi.b	#'2',d4
   1815 FFFC11C2 676A                        	beq		ProcessS2
   1816 FFFC11C4 0C04 0033                   	cmpi.b	#'3',d4
   1817 FFFC11C8 676A                        	beq		ProcessS3
   1818 FFFC11CA 0C04 0035                   	cmpi.b	#'5',d4		; record count record, ignore
   1819 FFFC11CE 679A                        	beq		NextRec
   1820 FFFC11D0 0C04 0037                   	cmpi.b	#'7',d4
   1821 FFFC11D4 6764                        	beq		ProcessS7
   1822 FFFC11D6 0C04 0038                   	cmpi.b	#'8',d4
   1823 FFFC11DA 676C                        	beq		ProcessS8
   1824 FFFC11DC 0C04 0039                   	cmpi.b	#'9',d4
   1825 FFFC11E0 6774                        	beq		ProcessS9
   1826 FFFC11E2 6086                        	bra		NextRec
                                             
   1828 FFFC11E4                             pcssxa
   1829 FFFC11E4 0243 00FF                   	andi.w	#0xff,d3
   1830 FFFC11E8 5343                        	subi.w	#1,d3			; one less for dbra
   1831 FFFC11EA                             pcss1a
   1832 FFFC11EA 4282                        	clr.l	d2
   1833 FFFC11EC 6100 00F8                   	bsr		sGetChar
   1834 FFFC11F0 6100 FE0A                   	bsr		AsciiToHexNybble
   1835 FFFC11F4 E98A                        	lsl.l	#4,d2
   1836 FFFC11F6 8401                        	or.b	d1,d2
   1837 FFFC11F8 6100 00EC                   	bsr		sGetChar
   1838 FFFC11FC 6100 FDFE                   	bsr		AsciiToHexNybble
   1839 FFFC1200 E98A                        	lsl.l	#4,d2
   1840 FFFC1202 8401                        	or.b	d1,d2
   1841 FFFC1204 12C2                        	move.b	d2,(a1)+
   1842 FFFC1206 51CB FFE2                   	dbra	d3,pcss1a
                                             ; Get the checksum byte
   1844 FFFC120A 4282                        	clr.l	d2
   1845 FFFC120C 6100 00D8                   	bsr		sGetChar
   1846 FFFC1210 6100 FDEA                   	bsr		AsciiToHexNybble
   1847 FFFC1214 E98A                        	lsl.l	#4,d2
   1848 FFFC1216 8401                        	or.b	d1,d2
   1849 FFFC1218 6100 00CC                   	bsr		sGetChar
   1850 FFFC121C 6100 FDDE                   	bsr		AsciiToHexNybble
   1851 FFFC1220 E98A                        	lsl.l	#4,d2
   1852 FFFC1222 8401                        	or.b	d1,d2
   1853 FFFC1224 6000 FF44                   	bra		NextRec
                                             
   1855 FFFC1228                             ProcessS1:
   1856 FFFC1228 6100 003A                   	bsr		S19Get16BitAddress
   1857 FFFC122C 60B6                        	bra		pcssxa
   1858 FFFC122E                             ProcessS2:
   1859 FFFC122E 6100 0042                   	bsr		S19Get24BitAddress
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 32
bootrom.asm
   1860 FFFC1232 60B0                        	bra		pcssxa
   1861 FFFC1234                             ProcessS3:
   1862 FFFC1234 6100 004A                   	bsr		S19Get32BitAddress
   1863 FFFC1238 60AA                        	bra		pcssxa
   1864 FFFC123A                             ProcessS7:
   1865 FFFC123A 6100 0044                   	bsr		S19Get32BitAddress
   1866 FFFC123E 23C9 0000 0000              	move.l	a1,S19StartAddress
   1867 FFFC1244 6000 FB3A                   	bra		Monitor
   1868 FFFC1248                             ProcessS8:
   1869 FFFC1248 6100 0028                   	bsr		S19Get24BitAddress
   1870 FFFC124C 23C9 0000 0000              	move.l	a1,S19StartAddress
   1871 FFFC1252 6000 FB2C                   	bra		Monitor
   1872 FFFC1256                             ProcessS9:
   1873 FFFC1256 6100 000C                   	bsr		S19Get16BitAddress
   1874 FFFC125A 23C9 0000 0000              	move.l	a1,S19StartAddress
   1875 FFFC1260 6000 FB1E                   	bra		Monitor
                                             
   1877 FFFC1264                             S19Get16BitAddress:
   1878 FFFC1264 4282                        	clr.l	d2
   1879 FFFC1266 6100 007E                   	bsr		sGetChar
   1880 FFFC126A 6100 FD90                   	bsr		AsciiToHexNybble
   1881 FFFC126E 1401                        	move.b	d1,d2
   1882 FFFC1270 604A                        	bra		S1932b
                                             
   1884 FFFC1272                             S19Get24BitAddress:
   1885 FFFC1272 4282                        	clr.l	d2
   1886 FFFC1274 6100 0070                   	bsr		sGetChar
   1887 FFFC1278 6100 FD82                   	bsr		AsciiToHexNybble
   1888 FFFC127C 1401                        	move.b	d1,d2
   1889 FFFC127E 6024                        	bra		S1932a
                                             
   1891 FFFC1280                             S19Get32BitAddress:
   1892 FFFC1280 4282                        	clr.l	d2
   1893 FFFC1282 6100 0062                   	bsr		sGetChar
   1894 FFFC1286 6100 FD74                   	bsr		AsciiToHexNybble
   1895 FFFC128A 1401                        	move.b	d1,d2
   1896 FFFC128C 6100 0058                   	bsr		sGetChar
   1897 FFFC1290 6100 FD6A                   	bsr		AsciiToHexNybble
   1898 FFFC1294 E98A                        	lsl.l	#4,d2
   1899 FFFC1296 8401                        	or.b	d1,d2
   1900 FFFC1298 6100 004C                   	bsr		sGetChar
   1901 FFFC129C 6100 FD5E                   	bsr		AsciiToHexNybble
   1902 FFFC12A0 E98A                        	lsl.l	#4,d2
   1903 FFFC12A2 8401                        	or.b	d1,d2
   1904 FFFC12A4                             S1932a:
   1905 FFFC12A4 6100 0040                   	bsr		sGetChar
   1906 FFFC12A8 6100 FD52                   	bsr		AsciiToHexNybble
   1907 FFFC12AC E98A                        	lsl.l	#4,d2
   1908 FFFC12AE 8401                        	or.b	d1,d2
   1909 FFFC12B0 6100 0034                   	bsr		sGetChar
   1910 FFFC12B4 6100 FD46                   	bsr		AsciiToHexNybble
   1911 FFFC12B8 E98A                        	lsl.l	#4,d2
   1912 FFFC12BA 8401                        	or.b	d1,d2
   1913 FFFC12BC                             S1932b:
   1914 FFFC12BC 6100 0028                   	bsr		sGetChar
   1915 FFFC12C0 6100 FD3A                   	bsr		AsciiToHexNybble
   1916 FFFC12C4 E98A                        	lsl.l	#4,d2
   1917 FFFC12C6 8401                        	or.b	d1,d2
   1918 FFFC12C8 6100 001C                   	bsr		sGetChar
   1919 FFFC12CC 6100 FD2E                   	bsr		AsciiToHexNybble
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 33
bootrom.asm
   1920 FFFC12D0 E98A                        	lsl.l	#4,d2
   1921 FFFC12D2 8401                        	or.b	d1,d2
   1922 FFFC12D4 6100 0010                   	bsr		sGetChar
   1923 FFFC12D8 6100 FD22                   	bsr		AsciiToHexNybble
   1924 FFFC12DC E98A                        	lsl.l	#4,d2
   1925 FFFC12DE 8401                        	or.b	d1,d2
   1926 FFFC12E0 4284                        	clr.l	d4
   1927 FFFC12E2 2242                        	move.l	d2,a1
   1928 FFFC12E4 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a character from auxillary input, checking the keyboard status for a
                                             ; CTRL-C
                                             ;------------------------------------------------------------------------------
                                             ;
   1935 FFFC12E6                             sGetChar:
   1936 FFFC12E6 6100 F500                   	bsr		CheckForKey
   1937 FFFC12EA 670C                        	beq		sgc1
   1938 FFFC12EC 6100 F50C                   	bsr		GetKey
   1939 FFFC12F0 0C01 0003                   	cmpi.b	#CTRLC,d1
   1940 FFFC12F4 6700 FA8A                   	beq		Monitor
   1941 FFFC12F8                             sgc1:
   1942 FFFC12F8 6100 FFFF                   	bsr		AUXIN
   1943 FFFC12FC 67E8                        	beq		sGetChar
   1944 FFFC12FE 1200                        	move.b	d0,d1
   1945 FFFC1300 4E75                        	rts
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   1953 FFFC1302                             DisplayHexNumber:
   1954 FFFC1302 33FC A6A6 FFDC 0600         		move.w	#$A6A6,leds		; diagnostics
   1955 FFFC130A 2C7C FFE0 0000              		move.l	#VDGREG,a6
   1956 FFFC1310 343C 0007                   		move.w	#7,d2		; number-1 of digits to display
   1957 FFFC1314                             disphnum1:
   1958 FFFC1314 1001                        		move.b	d1,d0		; get digit into d0.b
   1959 FFFC1316 0240 000F                   		andi.w	#$0f,d0
   1960 FFFC131A 0C40 0009                   		cmpi.w	#$09,d0
   1961 FFFC131E 6302                        		bls.s	disphnum2
   1962 FFFC1320 5E40                        		addi.w	#7,d0
   1963 FFFC1322                             disphnum2:
   1964 FFFC1322 0640 0030                   		addi.w	#$30,d0	; convert to display char
   1965 FFFC1326 3602                        		move.w	d2,d3		; char count into d3
   1966 FFFC1328 E743                        		asl.w	#3,d3		; scale * 8
   1967 FFFC132A                             disphnum3:
   1968 FFFC132A 382E 042C                   		move.w	$42C(a6),d4			; read character queue index into d4
   1969 FFFC132E B87C 001C                   		cmp.w	#28,d4					; allow up 28 entries to be in progress
   1970 FFFC1332 64F6                        		bhs.s	disphnum3				; branch if too many chars queued
   1971 FFFC1334 4880                        		ext.w	d0						; zero out high order bits
   1972 FFFC1336 3D40 0420                   		move.w	d0,$420(a6)			; set char code
   1973 FFFC133A 3D7C 7FFF 0422              		move.w	#WHITE,$422(a6)		; set fg color
   1974 FFFC1340 3D7C 000F 0424              		move.w	#DARK_BLUE,$424(a6)	; set bk color
   1975 FFFC1346 3D43 0426                   		move.w	d3,$426(a6)			; set x pos
   1976 FFFC134A 3D7C 0008 0428              		move.w	#8,$428(a6)			; set y pos
   1977 FFFC1350 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
   1978 FFFC1356 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
   1979 FFFC135C E899                        		ror.l	#4,d1					; rot to next digit
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 34
bootrom.asm
   1980 FFFC135E 57CA FFB4                   		dbeq	d2,disphnum1
   1981 FFFC1362 4ED5                        		jmp		(a5)
                                             
                                             ;===============================================================================
                                             ;    Perform ram test. (Uses checkerboard testing).
                                             ; 
                                             ;    Return address must be stored in a3 since the stack cannot be used (it
                                             ; would get overwritten in test). Note this routine uses no ram at all.
                                             ;===============================================================================
   1989 FFFC1364                             ramtest:
   1990 FFFC1364 33FC A5A5 FFDC 0600         		move.w	#$A5A5,leds		; diagnostics
   1991 FFFC136C 207C 0003 0000                      movea.l #$30000,a0
   1992 FFFC1372 203C AAAA 5555                      move.l #$aaaa5555,d0
                                             ;-----------------------------------------------------------
                                             ;   Write checkerboard pattern to ram then read it back to
                                             ; find the highest usable ram address (maybe). This address
                                             ; must be lower than the start of the rom (0xe00000).
                                             ;-----------------------------------------------------------
   1998 FFFC1378                             ramtest1:
   1999 FFFC1378 20C0                                move.l 	d0,(a0)+
   2000 FFFC137A 2208                                move.l	a0,d1
   2001 FFFC137C 4A41                                tst.w	d1
   2002 FFFC137E 660A                                bne.s	rmtst1
   2003 FFFC1380 4BF9 FFFC 138A                      lea		rmtst1,a5
   2004 FFFC1386 6000 FF7A                           bra		DisplayHexNumber
   2005 FFFC138A                             rmtst1:
   2006 FFFC138A 33FC A9A9 FFDC 0600         		move.w	#$A9A9,leds		; diagnostics
   2007 FFFC1392 B1FC 0005 FFFC                      cmpa.l 	#$5FFFC,a0
   2008 FFFC1398 66DE                                bne.s 	ramtest1
   2009 FFFC139A 7200                                move.l	#0,d1
   2010 FFFC139C 6100 EEAE                           bsr		CalcScreenLoc
   2011 FFFC13A0 6000 FC04                           bra		DumpMem1
                                             
                                             ;------------------------------------------------------
                                             ;   Save maximum useable address for later comparison.
                                             ;------------------------------------------------------
   2016 FFFC13A4                             ramtest6:
   2017 FFFC13A4 33FC A7A7 FFDC 0600         		move.w	#$A7A7,leds		; diagnostics
   2018 FFFC13AC 2448                                movea.l a0,a2
   2019 FFFC13AE 207C 0003 0000                      movea.l #$30000,a0
                                             ;--------------------------------------------
                                             ;   Read back checkerboard pattern from ram.
                                             ;--------------------------------------------
   2023 FFFC13B4                             ramtest2:
   2024 FFFC13B4 2A18                                move.l  (a0)+,d5
   2025 FFFC13B6 B5C8                                cmpa.l	a0,a2
   2026 FFFC13B8 671A                                beq.s	ramtest3
   2027 FFFC13BA 2208                                move.l	a0,d1
   2028 FFFC13BC 4A41                                tst.w	d1
   2029 FFFC13BE 660A                                bne.s	rmtst2
   2030 FFFC13C0 4BF9 FFFC 13CA                      lea		rmtst2,a5
   2031 FFFC13C6 6000 FF3A                           bra		DisplayHexNumber
   2032 FFFC13CA                             rmtst2:
   2033 FFFC13CA 0C85 AAAA 5555                      cmpi.l 	#$aaaa5555,d5
   2034 FFFC13D0 67E2                                beq.s 	ramtest2
   2035 FFFC13D2 6678                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   The following section does the same test except
                                             ; with the checkerboard order switched around.
                                             ;---------------------------------------------------
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 35
bootrom.asm
   2040 FFFC13D4                             ramtest3:                
   2041 FFFC13D4 33FC A8A8 FFDC 0600         		move.w	#$A8A8,leds		; diagnostics
   2042 FFFC13DC 207C 0003 0000                      movea.l #$30000,a0
   2043 FFFC13E2 203C 5555 AAAA                      move.l 	#$5555aaaa,d0
   2044 FFFC13E8                             ramtest4:
   2045 FFFC13E8 20C0                                move.l 	d0,(a0)+
   2046 FFFC13EA 2208                                move.l 	a0,d1
   2047 FFFC13EC 4A41                                tst.w	d1
   2048 FFFC13EE 660A                                bne.s   rmtst3
   2049 FFFC13F0 4BF9 FFFC 13FA                      lea		rmtst3,a5
   2050 FFFC13F6 6000 FF0A                           bra		DisplayHexNumber
   2051 FFFC13FA                             rmtst3:
   2052 FFFC13FA B1FC 1FFF FFFC                      cmpa.l 	#$1FFFFFFC,a0
   2053 FFFC1400 66E6                                bne.s 	ramtest4
   2054 FFFC1402                             ramtest8:
   2055 FFFC1402 2448                                movea.l a0,a2
   2056 FFFC1404 207C 0003 0000                      movea.l #$30000,a0
   2057 FFFC140A                             ramtest5:
   2058 FFFC140A 2018                                move.l 	(a0)+,d0
   2059 FFFC140C B5C8                                cmpa.l	a0,a2
   2060 FFFC140E 671A                                beq.s	rmtst5
   2061 FFFC1410 2208                                move.l 	a0,d1
   2062 FFFC1412 4A41                                tst.w	d1
   2063 FFFC1414 660A                                bne.s	rmtst4
   2064 FFFC1416 4BF9 FFFC 1420                      lea		rmtst4,a5
   2065 FFFC141C 6000 FEE4                           bra		DisplayHexNumber
   2066 FFFC1420                             rmtst4:
   2067 FFFC1420 0C80 5555 AAAA                      cmpi.l 	#$5555aaaa,d0
   2068 FFFC1426 67E2                                beq.s 	ramtest5
   2069 FFFC1428 6622                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   Save last ram address in end of memory pointer.
                                             ;---------------------------------------------------
   2073 FFFC142A                             rmtst5:
   2074 FFFC142A 23C8 0001 0008                      move.l a0,memend
                                             ;-----------------------------------
                                             ;   Create very first memory block.
                                             ;-----------------------------------
   2078 FFFC1430 91FC 0000 000C                      suba.l 	#12,a0
   2079 FFFC1436 21C8 0404                           move.l 	a0,$0404
   2080 FFFC143A 21FC 4652 4545 0400                 move.l 	#$46524545,$0400
   2081 FFFC1442 21FC 0000 0408 0408                 move.l 	#$408,$408			; point back-link to self
   2082 FFFC144A 4ED3                                jmp 	(a3)
                                             ;----------------------------------
                                             ; Error in ram - go no farther.
                                             ;----------------------------------
   2086 FFFC144C                             ramtest7:
   2087 FFFC144C 4ED3                        		jmp 	(a3)
   2088 FFFC144E 60FC                                bra.s 	ramtest7
                                             
                                             
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2096 FFFC1450                             GraphicsDemo:
   2097 FFFC1450 6100 0080                   		bsr		DrawLines
   2098 FFFC1454 6100 0006                   		bsr		DrawRects
   2099 FFFC1458 6000 F926                   		bra		Monitor
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 36
bootrom.asm
                                             
   2101 FFFC145C                             DrawRects:
   2102 FFFC145C 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2103 FFFC1462 4BF9 FFE0 0000              		lea		VDGREG,a5
   2104 FFFC1468 2C3C 0000 4E20              		move.l	#20000,d6		; repeat a few times
   2105 FFFC146E                             .0001:
   2106 FFFC146E 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2107 FFFC1472 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2108 FFFC1474 4840                        		swap	d0				; and bits 16 to 24 for x0
   2109 FFFC1476 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2110 FFFC147A 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2111 FFFC147E 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2112 FFFC1482 242E 0C00                   		move.l	$0C00(a6),d2
   2113 FFFC1486 3602                        		move.w	d2,d3
   2114 FFFC1488 4842                        		swap	d2
   2115 FFFC148A 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2116 FFFC148E 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2117 FFFC1492 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2118 FFFC1496 282E 0C00                   		move.l	$0C00(a6),d4
   2119 FFFC149A 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2120 FFFC149E 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2121 FFFC14A2                             .0002:
   2122 FFFC14A2 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2123 FFFC14A6 BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2124 FFFC14AA 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2125 FFFC14AC 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2126 FFFC14B2 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2127 FFFC14B6 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2128 FFFC14BA 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2129 FFFC14BE 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2130 FFFC14C2 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2131 FFFC14C6 3B7C 0003 042E              		move.w	#3,$42E(a5)		; pulse command queue (3 = draw rect)
   2132 FFFC14CC 5386                        		sub.l	#1,d6
   2133 FFFC14CE 669E                        		bne		.0001			; go back and do more lines
   2134 FFFC14D0 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Draw lines randomly on the screen.
                                             ;===============================================================================
                                             
   2140 FFFC14D2                             DrawLines:
   2141 FFFC14D2 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2142 FFFC14D8 4BF9 FFE0 0000              		lea		VDGREG,a5
   2143 FFFC14DE 2C3C 0003 0D40              		move.l	#200000,d6		; repeat a few times
   2144 FFFC14E4                             .0001:
                                             		; Wait for blitter to be done
   2146 FFFC14E4                             .0003:								
   2147 FFFC14E4 33FC 000A FFDC 0600         		move.w	#10,leds
   2148 FFFC14EC 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2149 FFFC14F0 0800 000E                   		btst	#14,d0
   2150 FFFC14F4 6706                        		beq.s	.0004
   2151 FFFC14F6 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2152 FFFC14FA 67E8                        		beq.s	.0003				; branch if not done
   2153 FFFC14FC                             .0004:
   2154 FFFC14FC 33FC 000B FFDC 0600         		move.w	#11,leds
   2155 FFFC1504 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2156 FFFC1508 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2157 FFFC150A 4840                        		swap	d0				; and bits 16 to 24 for x0
   2158 FFFC150C 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2159 FFFC1510 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 37
bootrom.asm
   2160 FFFC1514 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2161 FFFC1518 242E 0C00                   		move.l	$0C00(a6),d2
   2162 FFFC151C 3602                        		move.w	d2,d3
   2163 FFFC151E 4842                        		swap	d2
   2164 FFFC1520 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2165 FFFC1524 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2166 FFFC1528 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2167 FFFC152C 282E 0C00                   		move.l	$0C00(a6),d4
   2168 FFFC1530 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2169 FFFC1534 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2170 FFFC1538                             .0002:
   2171 FFFC1538 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2172 FFFC153C BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2173 FFFC1540 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2174 FFFC1542 33FC 000C FFDC 0600         		move.w	#12,leds
   2175 FFFC154A 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2176 FFFC1550 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2177 FFFC1554 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2178 FFFC1558 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2179 FFFC155C 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2180 FFFC1560 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2181 FFFC1564 3B7C 0002 042E              		move.w	#2,$42E(a5)		; pulse command queue (2 = draw line)
   2182 FFFC156A 5386                        		sub.l	#1,d6
   2183 FFFC156C 6600 FF76                   		bne		.0001			; go back and do more lines
   2184 FFFC1570 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Test Blitter
                                             ;===============================================================================
                                             
   2190 FFFC1572                             TestBlitter:
                                             		; puts a red rectangle on screen
   2192 FFFC1572 4BF9 FFE0 0000              		lea		VDGREG,a5
   2193 FFFC1578                             .0003:								
   2194 FFFC1578 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2195 FFFC157C 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2196 FFFC1580 67F6                        		beq.s	.0003				; branch if not done
   2197 FFFC1582 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set transfer count 8000 pixels
   2198 FFFC158A 3B7C 7C00 04A8              		move.w	#RED,$4A8(a5)		; set color red
   2199 FFFC1590 2B7C 0000 0168 0498         		move.l	#360,$498(a5)		; set destination address
   2200 FFFC1598 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2201 FFFC15A0 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
   2202 FFFC15A8 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; makes a copy of the upper left corner of the screen
   2205 FFFC15AE                             .0001:								
   2206 FFFC15AE 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2207 FFFC15B2 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2208 FFFC15B6 67F6                        		beq.s	.0001				; branch if not done
                                             		; Channel A
   2210 FFFC15B8 2B7C 0000 03E8 04B0         		move.l	#1000,$4B0(a5)		; set source transfer count 8000 pixels
   2211 FFFC15C0 2B7C 0000 0000 0480         		move.l	#0,$480(a5)			; set source bitmap address (address in graphics mem)
   2212 FFFC15C8 2B7C 0000 0168 0484         		move.l	#360,$484(a5)		; set src modulo
                                             		; Channel C
   2214 FFFC15D0 2B7C 0000 03E8 04B8         		move.l	#1000,$4B8(a5)		; set source transfer count 8000 pixels
   2215 FFFC15D8 2B7C 0000 0000 0490         		move.l	#0,$490(a5)			; set source bitmap address (address in graphics mem)
   2216 FFFC15E0 2B7C 0000 0168 0494         		move.l	#360,$494(a5)		; set src modulo
                                             		; Channel D
   2218 FFFC15E8 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set destination transfer count 8000 pixels
   2219 FFFC15F0 2B7C 0000 0140 0498         		move.l	#320,$498(a5)		; set destination address
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 38
bootrom.asm
   2220 FFFC15F8 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
                                             		
   2222 FFFC1600 2B7C 0000 0028 04A0         		move.l	#40,$4A0(a5)		; set source width
   2223 FFFC1608 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2224 FFFC1610 3B7C 0091 04AE              		move.w	#$91,$4AE(a5)		; set op A|C	($11 = copy A)
   2225 FFFC1616 3B7C 80A2 04AC              		move.w	#%1000000010100010,$4AC(a5)		; enable channel A,C,D, start transfer
   2226 FFFC161C                             .0002:								
   2227 FFFC161C 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2228 FFFC1620 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2229 FFFC1624 67F6                        		beq.s	.0002				; branch if not done
   2230 FFFC1626 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Generic I2C routines
                                             ;===============================================================================
                                             
                                             I2C_PREL	EQU		$0
                                             I2C_PREH	EQU		$2
                                             I2C_CTRL	EQU		$4
                                             I2C_RXR		EQU		$6
                                             I2C_TXR		EQU		$6
                                             I2C_CMD		EQU		$8
                                             I2C_STAT	EQU		$A
                                             
                                             ; i2c
   2245 FFFC1628                             i2c_setup:
   2246 FFFC1628 4DF9 FFDC 0E00              		lea		I2C,a6				
   2247 FFFC162E 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2248 FFFC1632 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2249 FFFC1638 4DF9 FFDC 0E10              		lea		I2C2,a6				
   2250 FFFC163E 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2251 FFFC1642 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2252 FFFC1648 4E75                        		rts
                                             
                                             ; Wait for I2C transfer to complete
                                             ;
                                             ; Parameters
                                             ; 	a6 - I2C controller base address
                                             
   2259 FFFC164A                             i2c_wait_tip:
   2260 FFFC164A 3F00                        		move.w	d0,-(a7)
   2261 FFFC164C                             .0001:					
   2262 FFFC164C 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for tip to clear
   2263 FFFC1650 0800 0001                   		btst	#1,d0
   2264 FFFC1654 66F6                        		bne.s	.0001
   2265 FFFC1656 301F                        		move.w	(a7)+,d0
   2266 FFFC1658 4E75                        		rts
                                             
                                             ; Parameters
                                             ;	d0.w - data to transmit
                                             ;	d1.w - command value
                                             ;	a6	 - I2C controller base address
                                             ;
   2273 FFFC165A                             i2c_wr_cmd:
   2274 FFFC165A 3D40 0006                   		move.w	d0,I2C_TXR(a6)
   2275 FFFC165E 3D41 0008                   		move.w	d1,I2C_CMD(a6)
   2276 FFFC1662 6100 FFE6                   		bsr		i2c_wait_tip
   2277 FFFC1666 302E 000A                   		move.w	I2C_STAT(a6),d0
   2278 FFFC166A 4E75                        		rts
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 39
bootrom.asm
   2280 FFFC166C                             i2c_xmit1:
   2281 FFFC166C 3F00                        		move.w	d0,-(a7)
   2282 FFFC166E 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2283 FFFC1674 7076                        		moveq	#$76,d0				; set slave address = %0111011
   2284 FFFC1676 323C 0090                   		move.w	#$90,d1				; set STA, WR
   2285 FFFC167A 6100 FFDE                   		bsr		i2c_wr_cmd
   2286 FFFC167E 6100 0010                   		bsr		i2c_wait_rx_nack
   2287 FFFC1682 301F                        		move.w	(a7)+,d0
   2288 FFFC1684 323C 0050                   		move.w	#$50,d1				; set STO, WR
   2289 FFFC1688 6100 FFD0                   		bsr		i2c_wr_cmd
   2290 FFFC168C 6100 0002                   		bsr		i2c_wait_rx_nack
                                             
   2292 FFFC1690                             i2c_wait_rx_nack:
   2293 FFFC1690 3F00                        		move.w	d0,-(a7)
   2294 FFFC1692                             .0001:							
   2295 FFFC1692 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for RXack = 0
   2296 FFFC1696 0800 0007                   		btst	#7,d0
   2297 FFFC169A 66F6                        		bne.s	.0001
   2298 FFFC169C 301F                        		move.w	(a7)+,d0
   2299 FFFC169E 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Audio
                                             ;===============================================================================
                                             
   2305 FFFC16A0                             AudioInputTest:
   2306 FFFC16A0 4BF9 FFE0 0000              		lea		VDGREG,a5
   2307 FFFC16A6 2B7C 0005 8000 0640         		move.l	#$58000,$640(a5)	; set buffer address ($FF8B0000)
   2308 FFFC16AE 3B7C 4000 0644              		move.w	#$4000,$644(a5)		; set buffer length
   2309 FFFC16B4 3B7C 0716 0646              		move.w	#1814,$646(a5)		; set period = 22.05kHz
   2310 FFFC16BA 3B7C 1090 0584              		move.w	#$1090,$584(a5)		; enable input channel, plot mode
   2311 FFFC16C0 3B7C 0090 0584              		move.w	#$0090,$584(a5)		; turn off reset
                                             		; should have input now
                                             
                                             		; puts a dark blue rectangle on screen
   2315 FFFC16C6                             .0003:								
   2316 FFFC16C6 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2317 FFFC16CA 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2318 FFFC16CE 67F6                        		beq.s	.0003				; branch if not done
   2319 FFFC16D0 2B7C 0001 0000 04BC         		move.l	#256*256,$4BC(a5)		; set transfer count pixels
   2320 FFFC16D8 3B7C 000F 04A8              		move.w	#DARK_BLUE,$4A8(a5)		; set color 
   2321 FFFC16DE 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2322 FFFC16E6 2B7C 0000 0100 04A4         		move.l	#256,$4A4(a5)		; set destination width
   2323 FFFC16EE 2B7C 0000 0040 049C         		move.l	#64,$49C(a5)		; set dst modulo
   2324 FFFC16F6 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; delay a bit
   2327 FFFC16FC 203C 0003 D090              		move.l	#250000,d0
   2328 FFFC1702                             .0004:
   2329 FFFC1702 5380                        		sub.l	#1,d0
   2330 FFFC1704 66FC                        		bne.s	.0004
   2331 FFFC1706 60BE                        		bra.s	.0003
                                             		
                                             
   2334 FFFC1708                             audio_pll_config:
   2335 FFFC1708 7000                        		moveq	#0,d0
   2336 FFFC170A 720E                        		moveq	#$0E,d1
   2337 FFFC170C 6100 001C                   		bsr		audio_write_reg
   2338 FFFC1710 7002                        		moveq	#2,d0
   2339 FFFC1712 41F9 FFFC 1784              		lea		audio_tbl1,a0
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 40
bootrom.asm
   2340 FFFC1718 6100 0076                   		bsr		audio_write_reg6
   2341 FFFC171C 4E75                        		rts
                                             
   2343 FFFC171E                             audio_startup_config:
   2344 FFFC171E 4E75                        		rts
                                             
   2346 FFFC1720                             audio_init:
   2347 FFFC1720 6100 FFE6                   		bsr		audio_pll_config
   2348 FFFC1724 6100 FFF8                   		bsr		audio_startup_config
   2349 FFFC1728 4E75                        		rts
                                             
                                             ; d0.w = register number
                                             ; d1.w = data to write
                                             		
   2354 FFFC172A                             audio_write_reg:
   2355 FFFC172A 4DF9 FFDC 0E00              		lea		I2C,a6				
   2356 FFFC1730 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2357 FFFC1736 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2358 FFFC173C 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2359 FFFC1742 6100 FF06                   		bsr		i2c_wait_tip	; wait for tip to clear
   2360 FFFC1746 6100 FF48                   		bsr		i2c_wait_rx_nack
   2361 FFFC174A 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2362 FFFC1750 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2363 FFFC1756 6100 FEF2                   		bsr		i2c_wait_tip	; wait for tip to clear
   2364 FFFC175A 6100 FF34                   		bsr		i2c_wait_rx_nack
   2365 FFFC175E 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2366 FFFC1762 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2367 FFFC1768 6100 FEE0                   		bsr		i2c_wait_tip	; wait for tip to clear
   2368 FFFC176C 6100 FF22                   		bsr		i2c_wait_rx_nack
   2369 FFFC1770 3D41 0006                   		move.w	d1,I2C_TXR(a6)		; send data
   2370 FFFC1774 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set STO, WR
   2371 FFFC177A 6100 FECE                   		bsr		i2c_wait_tip	; wait for tip to clear
   2372 FFFC177E 6100 FF10                   		bsr		i2c_wait_rx_nack
   2373 FFFC1782 4E75                        		rts
                                             
   2375 FFFC1784                             audio_tbl1:
   2376 FFFC1784 0000 007D 0000 000C         		dc.w	$00,$7D,$00,$0C,$20,$01
   2377 FFFC178C 0020 0001                   
                                             ; a0
                                             ;
   2380 FFFC1790                             audio_write_reg6:
   2381 FFFC1790 41F9 FFFC 1784              		lea		audio_tbl1,a0
   2382 FFFC1796 4DF9 FFDC 0E00              		lea		I2C,a6				
   2383 FFFC179C 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2384 FFFC17A2 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2385 FFFC17A8 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2386 FFFC17AE 6100 FE9A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2387 FFFC17B2 6100 FEDC                   		bsr		i2c_wait_rx_nack
   2388 FFFC17B6 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2389 FFFC17BC 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2390 FFFC17C2 6100 FE86                   		bsr		i2c_wait_tip	; wait for tip to clear
   2391 FFFC17C6 6100 FEC8                   		bsr		i2c_wait_rx_nack
                                             
   2393 FFFC17CA 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2394 FFFC17CE 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2395 FFFC17D4 6100 FE74                   		bsr		i2c_wait_tip	; wait for tip to clear
   2396 FFFC17D8 6100 FEB6                   		bsr		i2c_wait_rx_nack
                                             		
   2398 FFFC17DC 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #0
   2399 FFFC17E0 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 41
bootrom.asm
   2400 FFFC17E6 6100 FE62                   		bsr		i2c_wait_tip	; wait for tip to clear
   2401 FFFC17EA 6100 FEA4                   		bsr		i2c_wait_rx_nack
                                             
   2403 FFFC17EE 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #1
   2404 FFFC17F2 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2405 FFFC17F8 6100 FE50                   		bsr		i2c_wait_tip	; wait for tip to clear
   2406 FFFC17FC 6100 FE92                   		bsr		i2c_wait_rx_nack
                                             
   2408 FFFC1800 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #2
   2409 FFFC1804 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2410 FFFC180A 6100 FE3E                   		bsr		i2c_wait_tip	; wait for tip to clear
   2411 FFFC180E 6100 FE80                   		bsr		i2c_wait_rx_nack
                                             
   2413 FFFC1812 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #3
   2414 FFFC1816 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2415 FFFC181C 6100 FE2C                   		bsr		i2c_wait_tip	; wait for tip to clear
   2416 FFFC1820 6100 FE6E                   		bsr		i2c_wait_rx_nack
                                             
   2418 FFFC1824 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #4
   2419 FFFC1828 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2420 FFFC182E 6100 FE1A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2421 FFFC1832 6100 FE5C                   		bsr		i2c_wait_rx_nack
                                             
   2423 FFFC1836 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #5
   2424 FFFC183A 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set WR, STO
   2425 FFFC1840 6100 FE08                   		bsr		i2c_wait_tip		; wait for tip to clear
   2426 FFFC1844 6100 FE4A                   		bsr		i2c_wait_rx_nack
   2427 FFFC1848 4E75                        		rts
                                             
   2429 FFFC184A                             set_hp_output:
   2430 FFFC184A 7021                        		moveq	#$21,d0				;
   2431 FFFC184C 7200                        		moveq	#0,d1
   2432 FFFC184E 6100 FEDA                   		bsr		audio_write_reg
   2433 FFFC1852 7020                        		moveq	#$20,d0				;
   2434 FFFC1854 6100 FED4                   		bsr		audio_write_reg
   2435 FFFC1858 7023                        		moveq	#$23,d0
   2436 FFFC185A 323C 00E7                   		move.w	#$E7,d1		
   2437 FFFC185E 6100 FECA                   		bsr		audio_write_reg
   2438 FFFC1862 7024                        		moveq	#$24,d0
   2439 FFFC1864 323C 00E7                   		move.w	#$E7,d1		
   2440 FFFC1868 6100 FEC0                   		bsr		audio_write_reg
   2441 FFFC186C 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Realtime clock routines
                                             ;===============================================================================
                                             
   2447 FFFC186E                             rtc_read:
   2448 FFFC186E 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2449 FFFC1874 4BF9 0001 0600              		lea		RTCBuf,a5
   2450 FFFC187A 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2451 FFFC1880 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2452 FFFC1884 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2453 FFFC1888 6100 FDD0                   		bsr		i2c_wr_cmd
   2454 FFFC188C 4A00                        		tst.b	d0
   2455 FFFC188E 6B72                        		bmi		.rxerr
   2456 FFFC1890 303C 0000                   		move.w	#$00,d0				; address zero
   2457 FFFC1894 323C 0010                   		move.w	#$10,d1				; wr bit
   2458 FFFC1898 6100 FDC0                   		bsr		i2c_wr_cmd
   2459 FFFC189C 4A00                        		tst.b	d0
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 42
bootrom.asm
   2460 FFFC189E 6B62                        		bmi		.rxerr
   2461 FFFC18A0 303C 00DF                   		move.w	#$DF,d0				; read address, read op
   2462 FFFC18A4 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2463 FFFC18A8 6100 FDB0                   		bsr		i2c_wr_cmd
   2464 FFFC18AC 4A00                        		tst.b	d0
   2465 FFFC18AE 6B52                        		bmi		.rxerr
                                             		
   2467 FFFC18B0 343C 0020                   		move.w	#$20,d2
   2468 FFFC18B4                             .0001:
   2469 FFFC18B4 3D7C 0020 0008              		move.w	#$20,I2C_CMD(a6)	; rd bit
   2470 FFFC18BA 6100 FD8E                   		bsr		i2c_wait_tip
   2471 FFFC18BE 6100 FDD0                   		bsr		i2c_wait_rx_nack
   2472 FFFC18C2 302E 000A                   		move.w	I2C_STAT(a6),d0
   2473 FFFC18C6 4A00                        		tst.b	d0
   2474 FFFC18C8 6B38                        		bmi		.rxerr
   2475 FFFC18CA 302E 0006                   		move.w	I2C_RXR(a6),d0
   2476 FFFC18CE 1B80 2000                   		move.b	d0,(a5,d2.w)
   2477 FFFC18D2 5242                        		add.w	#1,d2
   2478 FFFC18D4 B47C 005F                   		cmp.w	#$5F,d2
   2479 FFFC18D8 66DA                        		bne		.0001
   2480 FFFC18DA 3D7C 0068 0008              		move.w	#$68,I2C_CMD(a6)	; STO, rd bit + nack
   2481 FFFC18E0 6100 FD68                   		bsr		i2c_wait_tip
   2482 FFFC18E4 6100 FDAA                   		bsr		i2c_wait_rx_nack
   2483 FFFC18E8 302E 000A                   		move.w	I2C_STAT(a6),d0
   2484 FFFC18EC 4A00                        		tst.b	d0
   2485 FFFC18EE 6B12                        		bmi		.rxerr
   2486 FFFC18F0 302E 0006                   		move.w	I2C_RXR(a6),d0
   2487 FFFC18F4 1B80 2000                   		move.b	d0,(a5,d2.w)
   2488 FFFC18F8 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2489 FFFC18FE 7000                        		moveq	#0,d0
   2490 FFFC1900 4E75                        		rts
   2491 FFFC1902                             .rxerr:
   2492 FFFC1902 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2493 FFFC1908 4E75                        		rts
                                             
   2495 FFFC190A                             rtc_write:
   2496 FFFC190A 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2497 FFFC1910 4BF9 0001 0600              		lea		RTCBuf,a5
   2498 FFFC1916 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2499 FFFC191C 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2500 FFFC1920 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2501 FFFC1924 6100 FD34                   		bsr		i2c_wr_cmd
   2502 FFFC1928 4A00                        		tst.b	d0
   2503 FFFC192A 6B46                        		bmi		.rxerr
   2504 FFFC192C 303C 0000                   		move.w	#$00,d0				; address zero
   2505 FFFC1930 323C 0010                   		move.w	#$10,d1				; wr bit
   2506 FFFC1934 6100 FD24                   		bsr		i2c_wr_cmd
   2507 FFFC1938 4A00                        		tst.b	d0
   2508 FFFC193A 6B36                        		bmi		.rxerr
   2509 FFFC193C 343C 0020                   		move.w	#$20,d2
   2510 FFFC1940                             .0001:
   2511 FFFC1940 1035 2000                   		move.b	(a5,d2.w),d0
   2512 FFFC1944 323C 0010                   		move.w	#$10,d1
   2513 FFFC1948 6100 FD10                   		bsr		i2c_wr_cmd
   2514 FFFC194C 4A00                        		tst.b	d0
   2515 FFFC194E 6B22                        		bmi		.rxerr
   2516 FFFC1950 5242                        		add.w	#1,d2
   2517 FFFC1952 B47C 005F                   		cmp.w	#$5F,d2
   2518 FFFC1956 66E8                        		bne.s	.0001
   2519 FFFC1958 1035 2000                   		move.b	(a5,d2.w),d0
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 43
bootrom.asm
   2520 FFFC195C 323C 0050                   		move.w	#$50,d1				; STO, wr bit
   2521 FFFC1960 6100 FCF8                   		bsr		i2c_wr_cmd
   2522 FFFC1964 4A00                        		tst.b	d0
   2523 FFFC1966 6B0A                        		bmi		.rxerr
   2524 FFFC1968 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   2525 FFFC196E 7000                        		moveq	#0,d0
   2526 FFFC1970 4E75                        		rts
   2527 FFFC1972                             .rxerr:
   2528 FFFC1972 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   2529 FFFC1978 4E75                        		rts
                                             
   2531 FFFC197A                             msgRtcReadFail:
   2532 FFFC197A 52 54 43 20 72 65 61 64     		dc.b	"RTC read/write failed.",$0D,$0A,$00
   2533 FFFC1982 2F 77 72 69 74 65 20 66     
   2534 FFFC198A 61 69 6C 65 64 2E 0D 0A     
   2535 FFFC1992 00                          
                                             
                                             
                                             ;===============================================================================
                                             ; ORGFX routines
                                             ;===============================================================================
                                             
   2542 FFFC1993 FF                          		align	2
   2543 FFFC1994                             gfx_wait:
   2544 FFFC1994 48E7 8004                   		movem.l	d0/a5,-(a7)
   2545 FFFC1998 4BF9 FFE0 0000              		lea		VDGREG,a5
   2546 FFFC199E 2B7C 0000 0004 0700         		move.l	#GFX_STATUS,$700(a5)	; address status register
   2547 FFFC19A6                             .0001:
   2548 FFFC19A6 3B7C 00F3 0708              		move.w	#$F3,$708(a5)		; set control (generate bus access to gfx)
   2549 FFFC19AC 202D 0704                   		move.l	$704(a5),d0			; get status value
   2550 FFFC19B0 0800 0000                   		btst	#0,d0				; test bit 0
   2551 FFFC19B4 66F0                        		bne.s	.0001
   2552 FFFC19B6 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2553 FFFC19BA 4E75                        		rts
                                             
   2555 FFFC19BC                             gfx_set_400x300:
   2556 FFFC19BC 6100 FFD6                   		bsr		gfx_wait
   2557 FFFC19C0 4BF9 FFE0 0000              		lea		VDGREG,a5
   2558 FFFC19C6 2B7C 0000 0014 0700         		move.l	#GFX_TARGET_SIZE_X,$700(a5)	; address register
   2559 FFFC19CE 2B7C 0000 0190 0704         		move.l	#400,$704(a5)				; set data
   2560 FFFC19D6 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2561 FFFC19DC 2B7C 0000 0018 0700         		move.l	#GFX_TARGET_SIZE_Y,$700(a5)	; address register
   2562 FFFC19E4 2B7C 0000 012C 0704         		move.l	#300,$704(a5)				; set data
   2563 FFFC19EC 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2564 FFFC19F2 4E75                        		rts
                                             
   2566 FFFC19F4                             gfx_init:
   2567 FFFC19F4 6100 FF9E                   		bsr		gfx_wait
   2568 FFFC19F8 4BF9 FFE0 0000              		lea		VDGREG,a5
   2569 FFFC19FE 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2570 FFFC1A06 23FC 0000 0000 0001 042C    		move.l	#0,gfx_control_reg_mem
                                             
   2572 FFFC1A10 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2573 FFFC1A18 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2574 FFFC1A1E 2B7C 0000 0010 0700         		move.l	#GFX_TARGET_BASE,$700(a5)	; address register
   2575 FFFC1A26 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2576 FFFC1A2C 4E75                        		rts
                                             
   2578 FFFC1A2E                             gfx_set_color_depth:
   2579 FFFC1A2E 4BF9 FFE0 0000              		lea		VDGREG,a5
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 44
bootrom.asm
   2580 FFFC1A34 02B9 FFFF FFFD 0001 042C    		and.l	#-3,gfx_control_reg_mem		; mask off 2 LSB (color depth field)
                                             
   2582 FFFC1A3E 00B9 0000 0001 0001 042C    		or.l	#1,gfx_control_reg_mem		; select 16 bpp
                                             
   2584 FFFC1A48 6100 FF4A                   		bsr		gfx_wait
   2585 FFFC1A4C 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   2586 FFFC1A54 2B79 0001 042C 0704         		move.l	gfx_control_reg_mem,$704(a5)
   2587 FFFC1A5C 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2588 FFFC1A62 4E75                        		rts
                                             
   2590 FFFC1A64                             gfx_set_color:
   2591 FFFC1A64 6100 FF2E                   		bsr		gfx_wait
   2592 FFFC1A68 4BF9 FFE0 0000              		lea		VDGREG,a5
   2593 FFFC1A6E 2B7C 0000 0084 0700         		move.l	#GFX_COLOR0,$700(a5)
   2594 FFFC1A76 2B40 0704                   		move.l	d0,$704(a5)
   2595 FFFC1A7A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2596 FFFC1A80 4E75                        		rts
                                             
   2598 FFFC1A82                             gfx_line:
   2599 FFFC1A82 6100 FF10                   		bsr		gfx_wait
   2600 FFFC1A86 4BF9 FFE0 0000              		lea		VDGREG,a5
   2601 FFFC1A8C 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2602 FFFC1A94 2B40 0704                   		move.l	d0,$704(a5)
   2603 FFFC1A98 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2604 FFFC1A9E 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2605 FFFC1AA6 2B41 0704                   		move.l	d1,$704(a5)
   2606 FFFC1AAA 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2607 FFFC1AB0 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2608 FFFC1AB8 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2609 FFFC1AC0 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2610 FFFC1AC6 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2611 FFFC1ACC 0086 0000 0000              		or.l	#GFX_ACTIVE_POINT0,d6
   2612 FFFC1AD2 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2613 FFFC1AD4 2B46 0704                   		move.l	d6,$704(a5)
   2614 FFFC1AD8 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2615 FFFC1ADE 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   2616 FFFC1AE6 2B42 0704                   		move.l	d2,$704(a5)
   2617 FFFC1AEA 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2618 FFFC1AF0 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   2619 FFFC1AF8 2B43 0704                   		move.l	d3,$704(a5)
   2620 FFFC1AFC 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2621 FFFC1B02 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   2622 FFFC1B0A 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   2623 FFFC1B12 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2624 FFFC1B18 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2625 FFFC1B1E 0086 0001 0000              		or.l	#GFX_ACTIVE_POINT1,d6
   2626 FFFC1B24 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2627 FFFC1B26 2B46 0704                   		move.l	d6,$704(a5)
   2628 FFFC1B2A 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2629 FFFC1B30 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   2630 FFFC1B36 0086 0000 0200              		or.l	#GFX_LINE,d6
   2631 FFFC1B3C 2A86                        		move.l	d6,GFX_CONTROL(a5)
   2632 FFFC1B3E 2B46 0704                   		move.l	d6,$704(a5)
   2633 FFFC1B42 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   2634 FFFC1B48 4E75                        		rts
                                             
   2636 FFFC1B4A                             gfx_demo:
   2637 FFFC1B4A 6100 FEA8                   		bsr		gfx_init
   2638 FFFC1B4E 6100 FE6C                   		bsr		gfx_set_400x300
   2639 FFFC1B52                             .0001:
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 45
bootrom.asm
   2640 FFFC1B52 4DF9 FFDC 0000              		lea		$FFDC0000,a6	; set I/O base
   2641 FFFC1B58 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2642 FFFC1B5C 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2643 FFFC1B5E 4840                        		swap	d0				; and bits 16 to 24 for x0
   2644 FFFC1B60 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2645 FFFC1B64 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2646 FFFC1B68 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2647 FFFC1B6C 242E 0C00                   		move.l	$0C00(a6),d2
   2648 FFFC1B70 3602                        		move.w	d2,d3
   2649 FFFC1B72 4842                        		swap	d2
   2650 FFFC1B74 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2651 FFFC1B78 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2652 FFFC1B7C 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2653 FFFC1B80 282E 0C00                   		move.l	$0C00(a6),d4
   2654 FFFC1B84 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2655 FFFC1B88 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2656 FFFC1B8C 2C00                        		move.l	d0,d6
   2657 FFFC1B8E 2004                        		move.l	d4,d0
   2658 FFFC1B90 6100 FED2                   		bsr		gfx_set_color
   2659 FFFC1B94 2006                        		move.l	d6,d0
   2660 FFFC1B96 6100 FEEA                   		bsr		gfx_line
   2661 FFFC1B9A 60B6                        		bra		.0001
                                             
                                             		
                                             ; Randomize the screen	
                                             ;		move.l	#VDGBUF,A0
                                             ;		move.l	#%011011111,D0		; light blue
                                             ;		move.l	#640*512,D1
                                             ;clrscr_loop1:
                                             ;		move.l	$0C00(a6),d0			; get a random number
                                             ;		clr.w	$0C04(a6)				; generate next number
                                             ;		move.w	d0,(a0)+				; store it to the screen
                                             ;		sub.l	#1,d1
                                             ;		bne		clrscr_loop1
                                             
   2675 FFFC1B9C                             msg_start:
   2676 FFFC1B9C 4E 34 56 20 36 38 6B 20     	dc.b	"N4V 68k System Starting",0
   2677 FFFC1BA4 53 79 73 74 65 6D 20 53     
   2678 FFFC1BAC 74 61 72 74 69 6E 67 00     
                                             
                                             
                                             ;===============================================================================
                                             ; MMU
                                             ;===============================================================================
                                             		align	2
   2685 FFFC1BB4                             mmu_init:
   2686 FFFC1BB4 33FC 1010 FFDC 0600         		move.w	#$1010,leds
   2687 FFFC1BBC 223C 0002 0000              		move.l	#131072,d1					; count of addresses to set map
   2688 FFFC1BC2 207C 1FF4 0000              		movea.l	#$1FF40000,a0				; base of page tables
   2689 FFFC1BC8 7007                        		moveq	#7,d0						; start at page zero, read,write,execute
   2690 FFFC1BCA                             .0001:
   2691 FFFC1BCA 20C0                        		move.l	d0,(a0)+					; update page table entry
   2692 FFFC1BCC 0680 0000 1000              		add.l	#$1000,d0
   2693 FFFC1BD2 5381                        		sub.l	#1,d1
   2694 FFFC1BD4 66F4                        		bne.s	.0001
                                             	
                                             		; Setup the page directory
                                             		; There are only 128 entries to be set, but all entries must be
                                             		; setup because there's no page faulting on not present. All the
                                             		; entries must point to present pages. So the part of the address
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 46
bootrom.asm
                                             		; space that isn't present is setup to point to a dummy page
                                             		; table.
                                             
   2703 FFFC1BD6 33FC 1111 FFDC 0600         		move.w	#$1111,leds
   2704 FFFC1BDE 323C 0400                   		move.w	#1024,d1			; 1024 entries to setup
   2705 FFFC1BE2 207C 1FFF E000              		move.l	#$1FFFE000,a0		; page table for not present entries
   2706 FFFC1BE8 203C 1FFF D006              		move.l	#$1FFFD006,d0		; point all entries for not present pages to $1FFFD000
   2707 FFFC1BEE                             .0003:
   2708 FFFC1BEE 20C0                        		move.l	d0,(a0)+
   2709 FFFC1BF0 51C9 FFFC                   		dbra	d1,.0003
                                             
   2711 FFFC1BF4 33FC 1212 FFDC 0600         		move.w	#$1212,leds
   2712 FFFC1BFC 747F                        		move.l	#127,d2
   2713 FFFC1BFE 207C 1FFF F000              		movea.l	#$1FFFF000,a0		; a0 = page directory address
   2714 FFFC1C04 223C 1FFF E000              		move.l	#$1FFFE000,d1		; point to not present page table
   2715 FFFC1C0A 203C 1FF4 0007              		move.l	#$1FF40007,d0
   2716 FFFC1C10                             .0002:
   2717 FFFC1C10 2141 0200                   		move.l	d1,$0200(a0)		; 7/8 of memory isn't available
   2718 FFFC1C14 2141 0400                   		move.l	d1,$0400(a0)
   2719 FFFC1C18 2141 0600                   		move.l	d1,$0600(a0)
   2720 FFFC1C1C 2141 0800                   		move.l	d1,$0800(a0)
   2721 FFFC1C20 2141 0A00                   		move.l	d1,$0A00(a0)
   2722 FFFC1C24 2141 0C00                   		move.l	d1,$0C00(a0)
   2723 FFFC1C28 2141 0E00                   		move.l	d1,$0E00(a0)
   2724 FFFC1C2C 20C0                        		move.l	d0,(a0)+
   2725 FFFC1C2E 0680 0000 1000              		add.l	#$1000,d0
   2726 FFFC1C34 51CA FFDA                   		dbra	d2,.0002
   2727 FFFC1C38 33FC 1919 FFDC 0600         		move.w	#$1919,leds
   2728 FFFC1C40 33FC 0000 FFFF FFF6         		move.w	#$00,$FFFFFFF6				; set asid
   2729 FFFC1C48 23F9 1FFF F000 FFFF FFF0    		move.l	$1FFFF000,$FFFFFFF0			; set page directory address, enable
                                             
   2731 FFFC1C52 4E75                        		rts
                                             		
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2738 FFFC1C54                             font8:
   2739 FFFC1C54 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $00
                                             
   2741 FFFC1C5C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2743 FFFC1C64 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2745 FFFC1C6C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2747 FFFC1C74 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $04
                                             
   2749 FFFC1C7C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2751 FFFC1C84 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2753 FFFC1C8C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2755 FFFC1C94 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $08
                                             
   2757 FFFC1C9C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2759 FFFC1CA4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 47
bootrom.asm
                                             
   2761 FFFC1CAC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2763 FFFC1CB4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $0C
                                             
   2765 FFFC1CBC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2767 FFFC1CC4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2769 FFFC1CCC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2771 FFFC1CD4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $10
                                             
   2773 FFFC1CDC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2775 FFFC1CE4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2777 FFFC1CEC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2779 FFFC1CF4 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $14
                                             
   2781 FFFC1CFC 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2783 FFFC1D04 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2785 FFFC1D0C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2787 FFFC1D14 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $18
                                             
   2789 FFFC1D1C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2791 FFFC1D24 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2793 FFFC1D2C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2795 FFFC1D34 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $1C
                                             
   2797 FFFC1D3C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2799 FFFC1D44 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2801 FFFC1D4C 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   2803 FFFC1D54 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; SPACE
                                             
   2805 FFFC1D5C 18 18 18 18 18 00 18 00     	dc.b	$18,$18,$18,$18,$18,$00,$18,$00	; !
                                             
   2807 FFFC1D64 6C 6C 00 00 00 00 00 00     	dc.b	$6C,$6C,$00,$00,$00,$00,$00,$00	; "
                                             
   2809 FFFC1D6C 6C 6C FE 6C FE 6C 6C 00     	dc.b	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00	; #
                                             
   2811 FFFC1D74 18 3E 60 3C 06 7C 18 00     	dc.b	$18,$3E,$60,$3C,$06,$7C,$18,$00	; $
                                             
   2813 FFFC1D7C 00 66 AC D8 36 6A CC 00     	dc.b	$00,$66,$AC,$D8,$36,$6A,$CC,$00	; %
                                             
   2815 FFFC1D84 38 6C 68 76 DC CE 7B 00     	dc.b	$38,$6C,$68,$76,$DC,$CE,$7B,$00	; &
                                             
   2817 FFFC1D8C 18 18 30 00 00 00 00 00     	dc.b	$18,$18,$30,$00,$00,$00,$00,$00	; '
                                             
   2819 FFFC1D94 0C 18 30 30 30 18 0C 00     	dc.b	$0C,$18,$30,$30,$30,$18,$0C,$00	; (
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 48
bootrom.asm
                                             
   2821 FFFC1D9C 30 18 0C 0C 0C 18 30 00     	dc.b	$30,$18,$0C,$0C,$0C,$18,$30,$00	; )
                                             
   2823 FFFC1DA4 00 66 3C FF 3C 66 00 00     	dc.b	$00,$66,$3C,$FF,$3C,$66,$00,$00	; *
                                             
   2825 FFFC1DAC 00 18 18 7E 18 18 00 00     	dc.b	$00,$18,$18,$7E,$18,$18,$00,$00	; +
                                             
   2827 FFFC1DB4 00 00 00 00 00 18 18 30     	dc.b	$00,$00,$00,$00,$00,$18,$18,$30	; ,
                                             
   2829 FFFC1DBC 00 00 00 7E 00 00 00 00     	dc.b	$00,$00,$00,$7E,$00,$00,$00,$00	; -
                                             
   2831 FFFC1DC4 00 00 00 00 00 18 18 00     	dc.b	$00,$00,$00,$00,$00,$18,$18,$00	; .
                                             
   2833 FFFC1DCC 03 06 0C 18 30 60 C0 00     	dc.b	$03,$06,$0C,$18,$30,$60,$C0,$00	; /
                                             
   2835 FFFC1DD4 3C 66 6E 7E 76 66 3C 00     	dc.b	$3C,$66,$6E,$7E,$76,$66,$3C,$00	; 0
                                             
   2837 FFFC1DDC 18 38 78 18 18 18 18 00     	dc.b	$18,$38,$78,$18,$18,$18,$18,$00	; 1
                                             
   2839 FFFC1DE4 3C 66 06 0C 18 30 7E 00     	dc.b	$3C,$66,$06,$0C,$18,$30,$7E,$00	; 2
                                             
   2841 FFFC1DEC 3C 66 06 1C 06 66 3C 00     	dc.b	$3C,$66,$06,$1C,$06,$66,$3C,$00	; 3
                                             
   2843 FFFC1DF4 1C 3C 6C CC FE 0C 0C 00     	dc.b	$1C,$3C,$6C,$CC,$FE,$0C,$0C,$00	; 4
                                             
   2845 FFFC1DFC 7E 60 7C 06 06 66 3C 00     	dc.b	$7E,$60,$7C,$06,$06,$66,$3C,$00	; 5
                                             
   2847 FFFC1E04 1C 30 60 7C 66 66 3C 00     	dc.b	$1C,$30,$60,$7C,$66,$66,$3C,$00	; 6
                                             
   2849 FFFC1E0C 7E 06 06 0C 18 18 18 00     	dc.b	$7E,$06,$06,$0C,$18,$18,$18,$00	; 7
                                             
   2851 FFFC1E14 3C 66 66 3C 66 66 3C 00     	dc.b	$3C,$66,$66,$3C,$66,$66,$3C,$00	; 8
                                             
   2853 FFFC1E1C 3C 66 66 3E 06 0C 38 00     	dc.b	$3C,$66,$66,$3E,$06,$0C,$38,$00	; 9
                                             
   2855 FFFC1E24 00 18 18 00 00 18 18 00     	dc.b	$00,$18,$18,$00,$00,$18,$18,$00	; :
                                             
   2857 FFFC1E2C 00 18 18 00 00 18 18 30     	dc.b	$00,$18,$18,$00,$00,$18,$18,$30	; ;
                                             
   2859 FFFC1E34 00 06 18 60 18 06 00 00     	dc.b	$00,$06,$18,$60,$18,$06,$00,$00	; <
                                             
   2861 FFFC1E3C 00 00 7E 00 7E 00 00 00     	dc.b	$00,$00,$7E,$00,$7E,$00,$00,$00	; =
                                             
   2863 FFFC1E44 00 60 18 06 18 60 00 00     	dc.b	$00,$60,$18,$06,$18,$60,$00,$00	; >
                                             
   2865 FFFC1E4C 3C 66 06 0C 18 00 18 00     	dc.b	$3C,$66,$06,$0C,$18,$00,$18,$00	; ?
                                             
   2867 FFFC1E54 7C C6 DE D6 DE C0 78 00     	dc.b	$7C,$C6,$DE,$D6,$DE,$C0,$78,$00	; @
                                             
   2869 FFFC1E5C 3C 66 66 7E 66 66 66 00     	dc.b	$3C,$66,$66,$7E,$66,$66,$66,$00	; A
                                             
   2871 FFFC1E64 7C 66 66 7C 66 66 7C 00     	dc.b	$7C,$66,$66,$7C,$66,$66,$7C,$00	; B
                                             
   2873 FFFC1E6C 1E 30 60 60 60 30 1E 00     	dc.b	$1E,$30,$60,$60,$60,$30,$1E,$00	; C
                                             
   2875 FFFC1E74 78 6C 66 66 66 6C 78 00     	dc.b	$78,$6C,$66,$66,$66,$6C,$78,$00	; D
                                             
   2877 FFFC1E7C 7E 60 60 78 60 60 7E 00     	dc.b	$7E,$60,$60,$78,$60,$60,$7E,$00	; E
                                             
   2879 FFFC1E84 7E 60 60 78 60 60 60 00     	dc.b	$7E,$60,$60,$78,$60,$60,$60,$00	; F
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 49
bootrom.asm
                                             
   2881 FFFC1E8C 3C 66 60 6E 66 66 3E 00     	dc.b	$3C,$66,$60,$6E,$66,$66,$3E,$00	; G
                                             
   2883 FFFC1E94 66 66 66 7E 66 66 66 00     	dc.b	$66,$66,$66,$7E,$66,$66,$66,$00	; H
                                             
   2885 FFFC1E9C 3C 18 18 18 18 18 3C 00     	dc.b	$3C,$18,$18,$18,$18,$18,$3C,$00	; I
                                             
   2887 FFFC1EA4 06 06 06 06 06 66 3C 00     	dc.b	$06,$06,$06,$06,$06,$66,$3C,$00	; J
                                             
   2889 FFFC1EAC C6 CC D8 F0 D8 CC C6 00     	dc.b	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00	; K
                                             
   2891 FFFC1EB4 60 60 60 60 60 60 7E 00     	dc.b	$60,$60,$60,$60,$60,$60,$7E,$00	; L
                                             
   2893 FFFC1EBC C6 EE FE D6 C6 C6 C6 00     	dc.b	$C6,$EE,$FE,$D6,$C6,$C6,$C6,$00	; M
                                             
   2895 FFFC1EC4 C6 E6 F6 DE CE C6 C6 00     	dc.b	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00	; N
                                             
   2897 FFFC1ECC 3C 66 66 66 66 66 3C 00     	dc.b	$3C,$66,$66,$66,$66,$66,$3C,$00	; O
                                             
   2899 FFFC1ED4 7C 66 66 7C 60 60 60 00     	dc.b	$7C,$66,$66,$7C,$60,$60,$60,$00	; P
                                             
   2901 FFFC1EDC 78 CC CC CC CC DC 7E 00     	dc.b	$78,$CC,$CC,$CC,$CC,$DC,$7E,$00	; Q
                                             
   2903 FFFC1EE4 7C 66 66 7C 6C 66 66 00     	dc.b	$7C,$66,$66,$7C,$6C,$66,$66,$00	; R
                                             
   2905 FFFC1EEC 3C 66 70 3C 0E 66 3C 00     	dc.b	$3C,$66,$70,$3C,$0E,$66,$3C,$00	; S
                                             
   2907 FFFC1EF4 7E 18 18 18 18 18 18 00     	dc.b	$7E,$18,$18,$18,$18,$18,$18,$00	; T
                                             
   2909 FFFC1EFC 66 66 66 66 66 66 3C 00     	dc.b	$66,$66,$66,$66,$66,$66,$3C,$00	; U
                                             
   2911 FFFC1F04 66 66 66 66 3C 3C 18 00     	dc.b	$66,$66,$66,$66,$3C,$3C,$18,$00	; V
                                             
   2913 FFFC1F0C C6 C6 C6 D6 FE EE C6 00     	dc.b	$C6,$C6,$C6,$D6,$FE,$EE,$C6,$00	; W
                                             
   2915 FFFC1F14 C3 66 3C 18 3C 66 C3 00     	dc.b	$C3,$66,$3C,$18,$3C,$66,$C3,$00	; X
                                             
   2917 FFFC1F1C C3 66 3C 18 18 18 18 00     	dc.b	$C3,$66,$3C,$18,$18,$18,$18,$00	; Y
                                             
   2919 FFFC1F24 FE 0C 18 30 60 C0 FE 00     	dc.b	$FE,$0C,$18,$30,$60,$C0,$FE,$00	; Z
                                             
   2921 FFFC1F2C 3C 30 30 30 30 30 3C 00     	dc.b	$3C,$30,$30,$30,$30,$30,$3C,$00	; [
                                             
   2923 FFFC1F34 C0 60 30 18 0C 06 03 00     	dc.b	$C0,$60,$30,$18,$0C,$06,$03,$00	; \
                                             
   2925 FFFC1F3C 3C 0C 0C 0C 0C 0C 3C 00     	dc.b	$3C,$0C,$0C,$0C,$0C,$0C,$3C,$00	; ]
                                             
   2927 FFFC1F44 10 38 6C C6 00 00 00 00     	dc.b	$10,$38,$6C,$C6,$00,$00,$00,$00	; ^
                                             
   2929 FFFC1F4C 00 00 00 00 00 00 00 FE     	dc.b	$00,$00,$00,$00,$00,$00,$00,$FE	; _
                                             
   2931 FFFC1F54 18 18 0C 00 00 00 00 00     	dc.b	$18,$18,$0C,$00,$00,$00,$00,$00	; `
                                             
   2933 FFFC1F5C 00 00 3C 06 3E 66 3E 00     	dc.b	$00,$00,$3C,$06,$3E,$66,$3E,$00	; a
                                             
   2935 FFFC1F64 60 60 7C 66 66 66 7C 00     	dc.b	$60,$60,$7C,$66,$66,$66,$7C,$00	; b
                                             
   2937 FFFC1F6C 00 00 3C 60 60 60 3C 00     	dc.b	$00,$00,$3C,$60,$60,$60,$3C,$00	; c
                                             
   2939 FFFC1F74 06 06 3E 66 66 66 3E 00     	dc.b	$06,$06,$3E,$66,$66,$66,$3E,$00	; d
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 50
bootrom.asm
                                             
   2941 FFFC1F7C 00 00 3C 66 7E 60 3C 00     	dc.b	$00,$00,$3C,$66,$7E,$60,$3C,$00	; e
                                             
   2943 FFFC1F84 1C 30 7C 30 30 30 30 00     	dc.b	$1C,$30,$7C,$30,$30,$30,$30,$00	; f
                                             
   2945 FFFC1F8C 00 00 3E 66 66 3E 06 3C     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$3C	; g
                                             
   2947 FFFC1F94 60 60 7C 66 66 66 66 00     	dc.b	$60,$60,$7C,$66,$66,$66,$66,$00	; h
                                             
   2949 FFFC1F9C 18 00 18 18 18 18 0C 00     	dc.b	$18,$00,$18,$18,$18,$18,$0C,$00	; i
                                             
   2951 FFFC1FA4 0C 00 0C 0C 0C 0C 0C 78     	dc.b	$0C,$00,$0C,$0C,$0C,$0C,$0C,$78	; j
                                             
   2953 FFFC1FAC 60 60 66 6C 78 6C 66 00     	dc.b	$60,$60,$66,$6C,$78,$6C,$66,$00	; k
                                             
   2955 FFFC1FB4 18 18 18 18 18 18 0C 00     	dc.b	$18,$18,$18,$18,$18,$18,$0C,$00	; l
                                             
   2957 FFFC1FBC 00 00 EC FE D6 C6 C6 00     	dc.b	$00,$00,$EC,$FE,$D6,$C6,$C6,$00	; m
                                             
   2959 FFFC1FC4 00 00 7C 66 66 66 66 00     	dc.b	$00,$00,$7C,$66,$66,$66,$66,$00	; n
                                             
   2961 FFFC1FCC 00 00 3C 66 66 66 3C 00     	dc.b	$00,$00,$3C,$66,$66,$66,$3C,$00	; o
                                             
   2963 FFFC1FD4 00 00 7C 66 66 7C 60 60     	dc.b	$00,$00,$7C,$66,$66,$7C,$60,$60	; p
                                             
   2965 FFFC1FDC 00 00 3E 66 66 3E 06 06     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$06	; q
                                             
   2967 FFFC1FE4 00 00 7C 66 60 60 60 00     	dc.b	$00,$00,$7C,$66,$60,$60,$60,$00	; r
                                             
   2969 FFFC1FEC 00 00 3C 60 3C 06 7C 00     	dc.b	$00,$00,$3C,$60,$3C,$06,$7C,$00	; s
                                             
   2971 FFFC1FF4 30 30 7C 30 30 30 1C 00     	dc.b	$30,$30,$7C,$30,$30,$30,$1C,$00	; t
                                             
   2973 FFFC1FFC 00 00 66 66 66 66 3E 00     	dc.b	$00,$00,$66,$66,$66,$66,$3E,$00	; u
                                             
   2975 FFFC2004 00 00 66 66 66 3C 18 00     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$00	; v
                                             
   2977 FFFC200C 00 00 C6 C6 D6 FE 6C 00     	dc.b	$00,$00,$C6,$C6,$D6,$FE,$6C,$00	; w
                                             
   2979 FFFC2014 00 00 C6 6C 38 6C C6 00     	dc.b	$00,$00,$C6,$6C,$38,$6C,$C6,$00	; x
                                             
   2981 FFFC201C 00 00 66 66 66 3C 18 30     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$30	; y
                                             
   2983 FFFC2024 00 00 7E 0C 18 30 7E 00     	dc.b	$00,$00,$7E,$0C,$18,$30,$7E,$00	; z
                                             
   2985 FFFC202C 0E 18 18 70 18 18 0E 00     	dc.b	$0E,$18,$18,$70,$18,$18,$0E,$00	; {
                                             
   2987 FFFC2034 18 18 18 18 18 18 18 00     	dc.b	$18,$18,$18,$18,$18,$18,$18,$00	; |
                                             
   2989 FFFC203C 70 18 18 0E 18 18 70 00     	dc.b	$70,$18,$18,$0E,$18,$18,$70,$00	; }
                                             
   2991 FFFC2044 72 9C 00 00 00 00 00 00     	dc.b	$72,$9C,$00,$00,$00,$00,$00,$00	; ~
                                             
   2993 FFFC204C FE FE FE FE FE FE FE 00     	dc.b	$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00	; 
                                             
                                             
   2996 FFFC2054                             font10x12:
                                             ; 0
   2998 FFFC2054 0000                        	dc.w	%0000000000000000
   2999 FFFC2056 0000                        	dc.w	%0000000000000000
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 51
bootrom.asm
   3000 FFFC2058 0000                        	dc.w	%0000000000000000
   3001 FFFC205A 0000                        	dc.w	%0000000000000000
   3002 FFFC205C 0000                        	dc.w	%0000000000000000
   3003 FFFC205E 0000                        	dc.w	%0000000000000000
   3004 FFFC2060 0000                        	dc.w	%0000000000000000
   3005 FFFC2062 0000                        	dc.w	%0000000000000000
   3006 FFFC2064 0000                        	dc.w	%0000000000000000
   3007 FFFC2066 0000                        	dc.w	%0000000000000000
   3008 FFFC2068 0000                        	dc.w	%0000000000000000
   3009 FFFC206A 0000                        	dc.w	%0000000000000000
                                             ; 1
   3011 FFFC206C 0000                        	dc.w	%0000000000000000
   3012 FFFC206E 0000                        	dc.w	%0000000000000000
   3013 FFFC2070 0000                        	dc.w	%0000000000000000
   3014 FFFC2072 0000                        	dc.w	%0000000000000000
   3015 FFFC2074 0000                        	dc.w	%0000000000000000
   3016 FFFC2076 0000                        	dc.w	%0000000000000000
   3017 FFFC2078 0000                        	dc.w	%0000000000000000
   3018 FFFC207A 0000                        	dc.w	%0000000000000000
   3019 FFFC207C 0000                        	dc.w	%0000000000000000
   3020 FFFC207E 0000                        	dc.w	%0000000000000000
   3021 FFFC2080 0000                        	dc.w	%0000000000000000
   3022 FFFC2082 0000                        	dc.w	%0000000000000000
                                             ; 2
   3024 FFFC2084 0000                        	dc.w	%0000000000000000
   3025 FFFC2086 0000                        	dc.w	%0000000000000000
   3026 FFFC2088 0000                        	dc.w	%0000000000000000
   3027 FFFC208A 0000                        	dc.w	%0000000000000000
   3028 FFFC208C 0000                        	dc.w	%0000000000000000
   3029 FFFC208E 0000                        	dc.w	%0000000000000000
   3030 FFFC2090 0000                        	dc.w	%0000000000000000
   3031 FFFC2092 0000                        	dc.w	%0000000000000000
   3032 FFFC2094 0000                        	dc.w	%0000000000000000
   3033 FFFC2096 0000                        	dc.w	%0000000000000000
   3034 FFFC2098 0000                        	dc.w	%0000000000000000
   3035 FFFC209A 0000                        	dc.w	%0000000000000000
                                             ; 3
   3037 FFFC209C 0000                        	dc.w	%0000000000000000
   3038 FFFC209E 0000                        	dc.w	%0000000000000000
   3039 FFFC20A0 0000                        	dc.w	%0000000000000000
   3040 FFFC20A2 0000                        	dc.w	%0000000000000000
   3041 FFFC20A4 0000                        	dc.w	%0000000000000000
   3042 FFFC20A6 0000                        	dc.w	%0000000000000000
   3043 FFFC20A8 0000                        	dc.w	%0000000000000000
   3044 FFFC20AA 0000                        	dc.w	%0000000000000000
   3045 FFFC20AC 0000                        	dc.w	%0000000000000000
   3046 FFFC20AE 0000                        	dc.w	%0000000000000000
   3047 FFFC20B0 0000                        	dc.w	%0000000000000000
   3048 FFFC20B2 0000                        	dc.w	%0000000000000000
                                             ; 4
   3050 FFFC20B4 0000                        	dc.w	%0000000000000000
   3051 FFFC20B6 0000                        	dc.w	%0000000000000000
   3052 FFFC20B8 0000                        	dc.w	%0000000000000000
   3053 FFFC20BA 0000                        	dc.w	%0000000000000000
   3054 FFFC20BC 0000                        	dc.w	%0000000000000000
   3055 FFFC20BE 0000                        	dc.w	%0000000000000000
   3056 FFFC20C0 0000                        	dc.w	%0000000000000000
   3057 FFFC20C2 0000                        	dc.w	%0000000000000000
   3058 FFFC20C4 0000                        	dc.w	%0000000000000000
   3059 FFFC20C6 0000                        	dc.w	%0000000000000000
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 52
bootrom.asm
   3060 FFFC20C8 0000                        	dc.w	%0000000000000000
   3061 FFFC20CA 0000                        	dc.w	%0000000000000000
                                             ; 5
   3063 FFFC20CC 0000                        	dc.w	%0000000000000000
   3064 FFFC20CE 0000                        	dc.w	%0000000000000000
   3065 FFFC20D0 0000                        	dc.w	%0000000000000000
   3066 FFFC20D2 0000                        	dc.w	%0000000000000000
   3067 FFFC20D4 0000                        	dc.w	%0000000000000000
   3068 FFFC20D6 0000                        	dc.w	%0000000000000000
   3069 FFFC20D8 0000                        	dc.w	%0000000000000000
   3070 FFFC20DA 0000                        	dc.w	%0000000000000000
   3071 FFFC20DC 0000                        	dc.w	%0000000000000000
   3072 FFFC20DE 0000                        	dc.w	%0000000000000000
   3073 FFFC20E0 0000                        	dc.w	%0000000000000000
   3074 FFFC20E2 0000                        	dc.w	%0000000000000000
                                             ; 6
   3076 FFFC20E4 0000                        	dc.w	%0000000000000000
   3077 FFFC20E6 0000                        	dc.w	%0000000000000000
   3078 FFFC20E8 0000                        	dc.w	%0000000000000000
   3079 FFFC20EA 0000                        	dc.w	%0000000000000000
   3080 FFFC20EC 0000                        	dc.w	%0000000000000000
   3081 FFFC20EE 0000                        	dc.w	%0000000000000000
   3082 FFFC20F0 0000                        	dc.w	%0000000000000000
   3083 FFFC20F2 0000                        	dc.w	%0000000000000000
   3084 FFFC20F4 0000                        	dc.w	%0000000000000000
   3085 FFFC20F6 0000                        	dc.w	%0000000000000000
   3086 FFFC20F8 0000                        	dc.w	%0000000000000000
   3087 FFFC20FA 0000                        	dc.w	%0000000000000000
                                             ; 7
   3089 FFFC20FC 0000                        	dc.w	%0000000000000000
   3090 FFFC20FE 0000                        	dc.w	%0000000000000000
   3091 FFFC2100 0000                        	dc.w	%0000000000000000
   3092 FFFC2102 0000                        	dc.w	%0000000000000000
   3093 FFFC2104 0000                        	dc.w	%0000000000000000
   3094 FFFC2106 0000                        	dc.w	%0000000000000000
   3095 FFFC2108 0000                        	dc.w	%0000000000000000
   3096 FFFC210A 0000                        	dc.w	%0000000000000000
   3097 FFFC210C 0000                        	dc.w	%0000000000000000
   3098 FFFC210E 0000                        	dc.w	%0000000000000000
   3099 FFFC2110 0000                        	dc.w	%0000000000000000
   3100 FFFC2112 0000                        	dc.w	%0000000000000000
                                             ; 8
   3102 FFFC2114 0000                        	dc.w	%0000000000000000
   3103 FFFC2116 0000                        	dc.w	%0000000000000000
   3104 FFFC2118 0000                        	dc.w	%0000000000000000
   3105 FFFC211A 0000                        	dc.w	%0000000000000000
   3106 FFFC211C 0000                        	dc.w	%0000000000000000
   3107 FFFC211E 0000                        	dc.w	%0000000000000000
   3108 FFFC2120 0000                        	dc.w	%0000000000000000
   3109 FFFC2122 0000                        	dc.w	%0000000000000000
   3110 FFFC2124 0000                        	dc.w	%0000000000000000
   3111 FFFC2126 0000                        	dc.w	%0000000000000000
   3112 FFFC2128 0000                        	dc.w	%0000000000000000
   3113 FFFC212A 0000                        	dc.w	%0000000000000000
                                             ; 9
   3115 FFFC212C 0000                        	dc.w	%0000000000000000
   3116 FFFC212E 0000                        	dc.w	%0000000000000000
   3117 FFFC2130 0000                        	dc.w	%0000000000000000
   3118 FFFC2132 0000                        	dc.w	%0000000000000000
   3119 FFFC2134 0000                        	dc.w	%0000000000000000
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 53
bootrom.asm
   3120 FFFC2136 0000                        	dc.w	%0000000000000000
   3121 FFFC2138 0000                        	dc.w	%0000000000000000
   3122 FFFC213A 0000                        	dc.w	%0000000000000000
   3123 FFFC213C 0000                        	dc.w	%0000000000000000
   3124 FFFC213E 0000                        	dc.w	%0000000000000000
   3125 FFFC2140 0000                        	dc.w	%0000000000000000
   3126 FFFC2142 0000                        	dc.w	%0000000000000000
                                             ; 10
   3128 FFFC2144 0000                        	dc.w	%0000000000000000
   3129 FFFC2146 0000                        	dc.w	%0000000000000000
   3130 FFFC2148 0000                        	dc.w	%0000000000000000
   3131 FFFC214A 0000                        	dc.w	%0000000000000000
   3132 FFFC214C 0000                        	dc.w	%0000000000000000
   3133 FFFC214E 0000                        	dc.w	%0000000000000000
   3134 FFFC2150 0000                        	dc.w	%0000000000000000
   3135 FFFC2152 0000                        	dc.w	%0000000000000000
   3136 FFFC2154 0000                        	dc.w	%0000000000000000
   3137 FFFC2156 0000                        	dc.w	%0000000000000000
   3138 FFFC2158 0000                        	dc.w	%0000000000000000
   3139 FFFC215A 0000                        	dc.w	%0000000000000000
                                             ; 11
   3141 FFFC215C 0000                        	dc.w	%0000000000000000
   3142 FFFC215E 0000                        	dc.w	%0000000000000000
   3143 FFFC2160 0000                        	dc.w	%0000000000000000
   3144 FFFC2162 0000                        	dc.w	%0000000000000000
   3145 FFFC2164 0000                        	dc.w	%0000000000000000
   3146 FFFC2166 0000                        	dc.w	%0000000000000000
   3147 FFFC2168 0000                        	dc.w	%0000000000000000
   3148 FFFC216A 0000                        	dc.w	%0000000000000000
   3149 FFFC216C 0000                        	dc.w	%0000000000000000
   3150 FFFC216E 0000                        	dc.w	%0000000000000000
   3151 FFFC2170 0000                        	dc.w	%0000000000000000
   3152 FFFC2172 0000                        	dc.w	%0000000000000000
                                             ; 12
   3154 FFFC2174 0000                        	dc.w	%0000000000000000
   3155 FFFC2176 0000                        	dc.w	%0000000000000000
   3156 FFFC2178 0000                        	dc.w	%0000000000000000
   3157 FFFC217A 0000                        	dc.w	%0000000000000000
   3158 FFFC217C 0000                        	dc.w	%0000000000000000
   3159 FFFC217E 0000                        	dc.w	%0000000000000000
   3160 FFFC2180 0000                        	dc.w	%0000000000000000
   3161 FFFC2182 0000                        	dc.w	%0000000000000000
   3162 FFFC2184 0000                        	dc.w	%0000000000000000
   3163 FFFC2186 0000                        	dc.w	%0000000000000000
   3164 FFFC2188 0000                        	dc.w	%0000000000000000
   3165 FFFC218A 0000                        	dc.w	%0000000000000000
                                             ; 13
   3167 FFFC218C 0000                        	dc.w	%0000000000000000
   3168 FFFC218E 0000                        	dc.w	%0000000000000000
   3169 FFFC2190 0000                        	dc.w	%0000000000000000
   3170 FFFC2192 0000                        	dc.w	%0000000000000000
   3171 FFFC2194 0000                        	dc.w	%0000000000000000
   3172 FFFC2196 0000                        	dc.w	%0000000000000000
   3173 FFFC2198 0000                        	dc.w	%0000000000000000
   3174 FFFC219A 0000                        	dc.w	%0000000000000000
   3175 FFFC219C 0000                        	dc.w	%0000000000000000
   3176 FFFC219E 0000                        	dc.w	%0000000000000000
   3177 FFFC21A0 0000                        	dc.w	%0000000000000000
   3178 FFFC21A2 0000                        	dc.w	%0000000000000000
                                             ; 14
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 54
bootrom.asm
   3180 FFFC21A4 0000                        	dc.w	%0000000000000000
   3181 FFFC21A6 0000                        	dc.w	%0000000000000000
   3182 FFFC21A8 0000                        	dc.w	%0000000000000000
   3183 FFFC21AA 0000                        	dc.w	%0000000000000000
   3184 FFFC21AC 0000                        	dc.w	%0000000000000000
   3185 FFFC21AE 0000                        	dc.w	%0000000000000000
   3186 FFFC21B0 0000                        	dc.w	%0000000000000000
   3187 FFFC21B2 0000                        	dc.w	%0000000000000000
   3188 FFFC21B4 0000                        	dc.w	%0000000000000000
   3189 FFFC21B6 0000                        	dc.w	%0000000000000000
   3190 FFFC21B8 0000                        	dc.w	%0000000000000000
   3191 FFFC21BA 0000                        	dc.w	%0000000000000000
                                             ; 15
   3193 FFFC21BC 0000                        	dc.w	%0000000000000000
   3194 FFFC21BE 0000                        	dc.w	%0000000000000000
   3195 FFFC21C0 0000                        	dc.w	%0000000000000000
   3196 FFFC21C2 0000                        	dc.w	%0000000000000000
   3197 FFFC21C4 0000                        	dc.w	%0000000000000000
   3198 FFFC21C6 0000                        	dc.w	%0000000000000000
   3199 FFFC21C8 0000                        	dc.w	%0000000000000000
   3200 FFFC21CA 0000                        	dc.w	%0000000000000000
   3201 FFFC21CC 0000                        	dc.w	%0000000000000000
   3202 FFFC21CE 0000                        	dc.w	%0000000000000000
   3203 FFFC21D0 0000                        	dc.w	%0000000000000000
   3204 FFFC21D2 0000                        	dc.w	%0000000000000000
                                             ; 16
   3206 FFFC21D4 0000                        	dc.w	%0000000000000000
   3207 FFFC21D6 0000                        	dc.w	%0000000000000000
   3208 FFFC21D8 0000                        	dc.w	%0000000000000000
   3209 FFFC21DA 0000                        	dc.w	%0000000000000000
   3210 FFFC21DC 0000                        	dc.w	%0000000000000000
   3211 FFFC21DE 0000                        	dc.w	%0000000000000000
   3212 FFFC21E0 0000                        	dc.w	%0000000000000000
   3213 FFFC21E2 0000                        	dc.w	%0000000000000000
   3214 FFFC21E4 0000                        	dc.w	%0000000000000000
   3215 FFFC21E6 0000                        	dc.w	%0000000000000000
   3216 FFFC21E8 0000                        	dc.w	%0000000000000000
   3217 FFFC21EA 0000                        	dc.w	%0000000000000000
                                             ; 17
   3219 FFFC21EC 0000                        	dc.w	%0000000000000000
   3220 FFFC21EE 0000                        	dc.w	%0000000000000000
   3221 FFFC21F0 0000                        	dc.w	%0000000000000000
   3222 FFFC21F2 0000                        	dc.w	%0000000000000000
   3223 FFFC21F4 0000                        	dc.w	%0000000000000000
   3224 FFFC21F6 0000                        	dc.w	%0000000000000000
   3225 FFFC21F8 0000                        	dc.w	%0000000000000000
   3226 FFFC21FA 0000                        	dc.w	%0000000000000000
   3227 FFFC21FC 0000                        	dc.w	%0000000000000000
   3228 FFFC21FE 0000                        	dc.w	%0000000000000000
   3229 FFFC2200 0000                        	dc.w	%0000000000000000
   3230 FFFC2202 0000                        	dc.w	%0000000000000000
                                             ; 18
   3232 FFFC2204 0000                        	dc.w	%0000000000000000
   3233 FFFC2206 0000                        	dc.w	%0000000000000000
   3234 FFFC2208 0000                        	dc.w	%0000000000000000
   3235 FFFC220A 0000                        	dc.w	%0000000000000000
   3236 FFFC220C 0000                        	dc.w	%0000000000000000
   3237 FFFC220E 0000                        	dc.w	%0000000000000000
   3238 FFFC2210 0000                        	dc.w	%0000000000000000
   3239 FFFC2212 0000                        	dc.w	%0000000000000000
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 55
bootrom.asm
   3240 FFFC2214 0000                        	dc.w	%0000000000000000
   3241 FFFC2216 0000                        	dc.w	%0000000000000000
   3242 FFFC2218 0000                        	dc.w	%0000000000000000
   3243 FFFC221A 0000                        	dc.w	%0000000000000000
                                             ; 19
   3245 FFFC221C 0000                        	dc.w	%0000000000000000
   3246 FFFC221E 0000                        	dc.w	%0000000000000000
   3247 FFFC2220 0000                        	dc.w	%0000000000000000
   3248 FFFC2222 0000                        	dc.w	%0000000000000000
   3249 FFFC2224 0000                        	dc.w	%0000000000000000
   3250 FFFC2226 0000                        	dc.w	%0000000000000000
   3251 FFFC2228 0000                        	dc.w	%0000000000000000
   3252 FFFC222A 0000                        	dc.w	%0000000000000000
   3253 FFFC222C 0000                        	dc.w	%0000000000000000
   3254 FFFC222E 0000                        	dc.w	%0000000000000000
   3255 FFFC2230 0000                        	dc.w	%0000000000000000
   3256 FFFC2232 0000                        	dc.w	%0000000000000000
                                             ; 20
   3258 FFFC2234 0000                        	dc.w	%0000000000000000
   3259 FFFC2236 0000                        	dc.w	%0000000000000000
   3260 FFFC2238 0000                        	dc.w	%0000000000000000
   3261 FFFC223A 0000                        	dc.w	%0000000000000000
   3262 FFFC223C 0000                        	dc.w	%0000000000000000
   3263 FFFC223E 0000                        	dc.w	%0000000000000000
   3264 FFFC2240 0000                        	dc.w	%0000000000000000
   3265 FFFC2242 0000                        	dc.w	%0000000000000000
   3266 FFFC2244 0000                        	dc.w	%0000000000000000
   3267 FFFC2246 0000                        	dc.w	%0000000000000000
   3268 FFFC2248 0000                        	dc.w	%0000000000000000
   3269 FFFC224A 0000                        	dc.w	%0000000000000000
                                             ; 21
   3271 FFFC224C 0000                        	dc.w	%0000000000000000
   3272 FFFC224E 0000                        	dc.w	%0000000000000000
   3273 FFFC2250 0000                        	dc.w	%0000000000000000
   3274 FFFC2252 0000                        	dc.w	%0000000000000000
   3275 FFFC2254 0000                        	dc.w	%0000000000000000
   3276 FFFC2256 0000                        	dc.w	%0000000000000000
   3277 FFFC2258 0000                        	dc.w	%0000000000000000
   3278 FFFC225A 0000                        	dc.w	%0000000000000000
   3279 FFFC225C 0000                        	dc.w	%0000000000000000
   3280 FFFC225E 0000                        	dc.w	%0000000000000000
   3281 FFFC2260 0000                        	dc.w	%0000000000000000
   3282 FFFC2262 0000                        	dc.w	%0000000000000000
                                             ; 22
   3284 FFFC2264 0000                        	dc.w	%0000000000000000
   3285 FFFC2266 0000                        	dc.w	%0000000000000000
   3286 FFFC2268 0000                        	dc.w	%0000000000000000
   3287 FFFC226A 0000                        	dc.w	%0000000000000000
   3288 FFFC226C 0000                        	dc.w	%0000000000000000
   3289 FFFC226E 0000                        	dc.w	%0000000000000000
   3290 FFFC2270 0000                        	dc.w	%0000000000000000
   3291 FFFC2272 0000                        	dc.w	%0000000000000000
   3292 FFFC2274 0000                        	dc.w	%0000000000000000
   3293 FFFC2276 0000                        	dc.w	%0000000000000000
   3294 FFFC2278 0000                        	dc.w	%0000000000000000
   3295 FFFC227A 0000                        	dc.w	%0000000000000000
                                             ; 23
   3297 FFFC227C 0000                        	dc.w	%0000000000000000
   3298 FFFC227E 0000                        	dc.w	%0000000000000000
   3299 FFFC2280 0000                        	dc.w	%0000000000000000
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 56
bootrom.asm
   3300 FFFC2282 0000                        	dc.w	%0000000000000000
   3301 FFFC2284 0000                        	dc.w	%0000000000000000
   3302 FFFC2286 0000                        	dc.w	%0000000000000000
   3303 FFFC2288 0000                        	dc.w	%0000000000000000
   3304 FFFC228A 0000                        	dc.w	%0000000000000000
   3305 FFFC228C 0000                        	dc.w	%0000000000000000
   3306 FFFC228E 0000                        	dc.w	%0000000000000000
   3307 FFFC2290 0000                        	dc.w	%0000000000000000
   3308 FFFC2292 0000                        	dc.w	%0000000000000000
                                             ; 24
   3310 FFFC2294 0000                        	dc.w	%0000000000000000
   3311 FFFC2296 0000                        	dc.w	%0000000000000000
   3312 FFFC2298 0000                        	dc.w	%0000000000000000
   3313 FFFC229A 0000                        	dc.w	%0000000000000000
   3314 FFFC229C 0000                        	dc.w	%0000000000000000
   3315 FFFC229E 0000                        	dc.w	%0000000000000000
   3316 FFFC22A0 0000                        	dc.w	%0000000000000000
   3317 FFFC22A2 0000                        	dc.w	%0000000000000000
   3318 FFFC22A4 0000                        	dc.w	%0000000000000000
   3319 FFFC22A6 0000                        	dc.w	%0000000000000000
   3320 FFFC22A8 0000                        	dc.w	%0000000000000000
   3321 FFFC22AA 0000                        	dc.w	%0000000000000000
                                             ; 25
   3323 FFFC22AC 0000                        	dc.w	%0000000000000000
   3324 FFFC22AE 0000                        	dc.w	%0000000000000000
   3325 FFFC22B0 0000                        	dc.w	%0000000000000000
   3326 FFFC22B2 0000                        	dc.w	%0000000000000000
   3327 FFFC22B4 0000                        	dc.w	%0000000000000000
   3328 FFFC22B6 0000                        	dc.w	%0000000000000000
   3329 FFFC22B8 0000                        	dc.w	%0000000000000000
   3330 FFFC22BA 0000                        	dc.w	%0000000000000000
   3331 FFFC22BC 0000                        	dc.w	%0000000000000000
   3332 FFFC22BE 0000                        	dc.w	%0000000000000000
   3333 FFFC22C0 0000                        	dc.w	%0000000000000000
   3334 FFFC22C2 0000                        	dc.w	%0000000000000000
                                             ; 26
   3336 FFFC22C4 0000                        	dc.w	%0000000000000000
   3337 FFFC22C6 0000                        	dc.w	%0000000000000000
   3338 FFFC22C8 0000                        	dc.w	%0000000000000000
   3339 FFFC22CA 0000                        	dc.w	%0000000000000000
   3340 FFFC22CC 0000                        	dc.w	%0000000000000000
   3341 FFFC22CE 0000                        	dc.w	%0000000000000000
   3342 FFFC22D0 0000                        	dc.w	%0000000000000000
   3343 FFFC22D2 0000                        	dc.w	%0000000000000000
   3344 FFFC22D4 0000                        	dc.w	%0000000000000000
   3345 FFFC22D6 0000                        	dc.w	%0000000000000000
   3346 FFFC22D8 0000                        	dc.w	%0000000000000000
   3347 FFFC22DA 0000                        	dc.w	%0000000000000000
                                             ; 27
   3349 FFFC22DC 0000                        	dc.w	%0000000000000000
   3350 FFFC22DE 0000                        	dc.w	%0000000000000000
   3351 FFFC22E0 0000                        	dc.w	%0000000000000000
   3352 FFFC22E2 0000                        	dc.w	%0000000000000000
   3353 FFFC22E4 0000                        	dc.w	%0000000000000000
   3354 FFFC22E6 0000                        	dc.w	%0000000000000000
   3355 FFFC22E8 0000                        	dc.w	%0000000000000000
   3356 FFFC22EA 0000                        	dc.w	%0000000000000000
   3357 FFFC22EC 0000                        	dc.w	%0000000000000000
   3358 FFFC22EE 0000                        	dc.w	%0000000000000000
   3359 FFFC22F0 0000                        	dc.w	%0000000000000000
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 57
bootrom.asm
   3360 FFFC22F2 0000                        	dc.w	%0000000000000000
                                             ; 28
   3362 FFFC22F4 0000                        	dc.w	%0000000000000000
   3363 FFFC22F6 0000                        	dc.w	%0000000000000000
   3364 FFFC22F8 0000                        	dc.w	%0000000000000000
   3365 FFFC22FA 0000                        	dc.w	%0000000000000000
   3366 FFFC22FC 0000                        	dc.w	%0000000000000000
   3367 FFFC22FE 0000                        	dc.w	%0000000000000000
   3368 FFFC2300 0000                        	dc.w	%0000000000000000
   3369 FFFC2302 0000                        	dc.w	%0000000000000000
   3370 FFFC2304 0000                        	dc.w	%0000000000000000
   3371 FFFC2306 0000                        	dc.w	%0000000000000000
   3372 FFFC2308 0000                        	dc.w	%0000000000000000
   3373 FFFC230A 0000                        	dc.w	%0000000000000000
                                             ; 29
   3375 FFFC230C 0000                        	dc.w	%0000000000000000
   3376 FFFC230E 0000                        	dc.w	%0000000000000000
   3377 FFFC2310 0000                        	dc.w	%0000000000000000
   3378 FFFC2312 0000                        	dc.w	%0000000000000000
   3379 FFFC2314 0000                        	dc.w	%0000000000000000
   3380 FFFC2316 0000                        	dc.w	%0000000000000000
   3381 FFFC2318 0000                        	dc.w	%0000000000000000
   3382 FFFC231A 0000                        	dc.w	%0000000000000000
   3383 FFFC231C 0000                        	dc.w	%0000000000000000
   3384 FFFC231E 0000                        	dc.w	%0000000000000000
   3385 FFFC2320 0000                        	dc.w	%0000000000000000
   3386 FFFC2322 0000                        	dc.w	%0000000000000000
                                             ; 30
   3388 FFFC2324 0000                        	dc.w	%0000000000000000
   3389 FFFC2326 0000                        	dc.w	%0000000000000000
   3390 FFFC2328 0000                        	dc.w	%0000000000000000
   3391 FFFC232A 0000                        	dc.w	%0000000000000000
   3392 FFFC232C 0000                        	dc.w	%0000000000000000
   3393 FFFC232E 0000                        	dc.w	%0000000000000000
   3394 FFFC2330 0000                        	dc.w	%0000000000000000
   3395 FFFC2332 0000                        	dc.w	%0000000000000000
   3396 FFFC2334 0000                        	dc.w	%0000000000000000
   3397 FFFC2336 0000                        	dc.w	%0000000000000000
   3398 FFFC2338 0000                        	dc.w	%0000000000000000
   3399 FFFC233A 0000                        	dc.w	%0000000000000000
                                             ; 31
   3401 FFFC233C 0000                        	dc.w	%0000000000000000
   3402 FFFC233E 0000                        	dc.w	%0000000000000000
   3403 FFFC2340 0000                        	dc.w	%0000000000000000
   3404 FFFC2342 0000                        	dc.w	%0000000000000000
   3405 FFFC2344 0000                        	dc.w	%0000000000000000
   3406 FFFC2346 0000                        	dc.w	%0000000000000000
   3407 FFFC2348 0000                        	dc.w	%0000000000000000
   3408 FFFC234A 0000                        	dc.w	%0000000000000000
   3409 FFFC234C 0000                        	dc.w	%0000000000000000
   3410 FFFC234E 0000                        	dc.w	%0000000000000000
   3411 FFFC2350 0000                        	dc.w	%0000000000000000
   3412 FFFC2352 0000                        	dc.w	%0000000000000000
                                             ; 32
   3414 FFFC2354 0000                        	dc.w	%0000000000000000
   3415 FFFC2356 0000                        	dc.w	%0000000000000000
   3416 FFFC2358 0000                        	dc.w	%0000000000000000
   3417 FFFC235A 0000                        	dc.w	%0000000000000000
   3418 FFFC235C 0000                        	dc.w	%0000000000000000
   3419 FFFC235E 0000                        	dc.w	%0000000000000000
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 58
bootrom.asm
   3420 FFFC2360 0000                        	dc.w	%0000000000000000
   3421 FFFC2362 0000                        	dc.w	%0000000000000000
   3422 FFFC2364 0000                        	dc.w	%0000000000000000
   3423 FFFC2366 0000                        	dc.w	%0000000000000000
   3424 FFFC2368 0000                        	dc.w	%0000000000000000
   3425 FFFC236A 0000                        	dc.w	%0000000000000000
                                             ; 33
   3427 FFFC236C 0000                        	dc.w	%0000000000000000
   3428 FFFC236E 0300                        	dc.w	%0000001100000000
   3429 FFFC2370 0300                        	dc.w	%0000001100000000
   3430 FFFC2372 0300                        	dc.w	%0000001100000000
   3431 FFFC2374 0300                        	dc.w	%0000001100000000
   3432 FFFC2376 0300                        	dc.w	%0000001100000000
   3433 FFFC2378 0000                        	dc.w	%0000000000000000
   3434 FFFC237A 0300                        	dc.w	%0000001100000000
   3435 FFFC237C 0300                        	dc.w	%0000001100000000
   3436 FFFC237E 0000                        	dc.w	%0000000000000000
   3437 FFFC2380 0000                        	dc.w	%0000000000000000
   3438 FFFC2382 0000                        	dc.w	%0000000000000000
                                             ; 34
   3440 FFFC2384 0000                        	dc.w	%0000000000000000
   3441 FFFC2386 0C30                        	dc.w	%0000110000110000
   3442 FFFC2388 0C30                        	dc.w	%0000110000110000
   3443 FFFC238A 0000                        	dc.w	%0000000000000000
   3444 FFFC238C 0000                        	dc.w	%0000000000000000
   3445 FFFC238E 0000                        	dc.w	%0000000000000000
   3446 FFFC2390 0000                        	dc.w	%0000000000000000
   3447 FFFC2392 0000                        	dc.w	%0000000000000000
   3448 FFFC2394 0000                        	dc.w	%0000000000000000
   3449 FFFC2396 0000                        	dc.w	%0000000000000000
   3450 FFFC2398 0000                        	dc.w	%0000000000000000
   3451 FFFC239A 0000                        	dc.w	%0000000000000000
                                             ; 35
   3453 FFFC239C 0000                        	dc.w	%0000000000000000
   3454 FFFC239E 0C30                        	dc.w	%0000110000110000
   3455 FFFC23A0 0C30                        	dc.w	%0000110000110000
   3456 FFFC23A2 3FFC                        	dc.w	%0011111111111100
   3457 FFFC23A4 0C30                        	dc.w	%0000110000110000
   3458 FFFC23A6 0C30                        	dc.w	%0000110000110000
   3459 FFFC23A8 3FFC                        	dc.w	%0011111111111100
   3460 FFFC23AA 0C30                        	dc.w	%0000110000110000
   3461 FFFC23AC 0C30                        	dc.w	%0000110000110000
   3462 FFFC23AE 0000                        	dc.w	%0000000000000000
   3463 FFFC23B0 0000                        	dc.w	%0000000000000000
   3464 FFFC23B2 0000                        	dc.w	%0000000000000000
                                             ; 36
   3466 FFFC23B4 0000                        	dc.w	%0000000000000000
   3467 FFFC23B6 0180                        	dc.w	%0000000110000000
   3468 FFFC23B8 07E0                        	dc.w	%0000011111100000
   3469 FFFC23BA 0990                        	dc.w	%0000100110010000
   3470 FFFC23BC 0980                        	dc.w	%0000100110000000
   3471 FFFC23BE 07E0                        	dc.w	%0000011111100000
   3472 FFFC23C0 0190                        	dc.w	%0000000110010000
   3473 FFFC23C2 0990                        	dc.w	%0000100110010000
   3474 FFFC23C4 07E0                        	dc.w	%0000011111100000
   3475 FFFC23C6 0180                        	dc.w	%0000000110000000
   3476 FFFC23C8 0000                        	dc.w	%0000000000000000
   3477 FFFC23CA 0000                        	dc.w	%0000000000000000
                                             
                                             ; 37
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 59
bootrom.asm
   3480 FFFC23CC 0000                        	dc.w	%0000000000000000
   3481 FFFC23CE 0C18                        	dc.w	%0000110000011000
   3482 FFFC23D0 1230                        	dc.w	%0001001000110000
   3483 FFFC23D2 0C60                        	dc.w	%0000110001100000
   3484 FFFC23D4 00C0                        	dc.w	%0000000011000000
   3485 FFFC23D6 0180                        	dc.w	%0000000110000000
   3486 FFFC23D8 0330                        	dc.w	%0000001100110000
   3487 FFFC23DA 0648                        	dc.w	%0000011001001000
   3488 FFFC23DC 0C30                        	dc.w	%0000110000110000
   3489 FFFC23DE 0000                        	dc.w	%0000000000000000
   3490 FFFC23E0 0000                        	dc.w	%0000000000000000
   3491 FFFC23E2 0000                        	dc.w	%0000000000000000
                                             
                                             ; 38
   3494 FFFC23E4 0000                        	dc.w	%0000000000000000
   3495 FFFC23E6 0000                        	dc.w	%0000000000000000
   3496 FFFC23E8 0000                        	dc.w	%0000000000000000
   3497 FFFC23EA 0000                        	dc.w	%0000000000000000
   3498 FFFC23EC 0000                        	dc.w	%0000000000000000
   3499 FFFC23EE 0000                        	dc.w	%0000000000000000
   3500 FFFC23F0 0000                        	dc.w	%0000000000000000
   3501 FFFC23F2 0000                        	dc.w	%0000000000000000
   3502 FFFC23F4 0000                        	dc.w	%0000000000000000
   3503 FFFC23F6 0000                        	dc.w	%0000000000000000
   3504 FFFC23F8 0000                        	dc.w	%0000000000000000
   3505 FFFC23FA 0000                        	dc.w	%0000000000000000
                                             
                                             ; 32
   3508 FFFC23FC 0000                        	dc.w	%0000000000000000
   3509 FFFC23FE 0000                        	dc.w	%0000000000000000
   3510 FFFC2400 0000                        	dc.w	%0000000000000000
   3511 FFFC2402 0000                        	dc.w	%0000000000000000
   3512 FFFC2404 0000                        	dc.w	%0000000000000000
   3513 FFFC2406 0000                        	dc.w	%0000000000000000
   3514 FFFC2408 0000                        	dc.w	%0000000000000000
   3515 FFFC240A 0000                        	dc.w	%0000000000000000
   3516 FFFC240C 0000                        	dc.w	%0000000000000000
   3517 FFFC240E 0000                        	dc.w	%0000000000000000
   3518 FFFC2410 0000                        	dc.w	%0000000000000000
   3519 FFFC2412 0000                        	dc.w	%0000000000000000
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 1
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm

                                             ;*****************************************************************
                                             ;								 *
                                             ;		Tiny BASIC for the Motorola MC68000		 *
                                             ;								 *
                                             ; Derived from Palo Alto Tiny BASIC as published in the May 1976 *
                                             ; issue of Dr. Dobb's Journal.  Adapted to the 68000 by:         *
                                             ;	Gordon Brandly						 *
                                             ;	12147 - 51 Street					 *
                                             ;	Edmonton AB  T5W 3G8					 *
                                             ;	Canada							 *
                                             ;	(updated mailing address for 1996)			 *
                                             ;								 *
                                             ; This version is for MEX68KECB Educational Computer Board I/O.  *
                                             ;								 *
                                             ;*****************************************************************
                                             ;    Copyright (C) 1984 by Gordon Brandly. This program may be	 *
                                             ;    freely distributed for personal use only. All commercial	 *
                                             ;		       rights are reserved.			 *
                                             ;*****************************************************************
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 2
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             ; Vers. 1.0  1984/7/17	- Original version by Gordon Brandly
                                             ;	1.1  1984/12/9	- Addition of '$' print term by Marvin Lipford
                                             ;	1.2  1985/4/9	- Bug fix in multiply routine by Rick Murray
                                             
                                             ;	OPT	FRS,BRS 	forward ref.'s & branches default to short
                                             
                                             CR	EQU	0x0D		;ASCII equates
                                             LF	EQU	0x0A
                                             TAB	EQU	0x09
                                             CTRLC	EQU	0x03
                                             CTRLH	EQU	0x08
                                             CTRLS	EQU	0x13
                                             CTRLX	EQU	0x18
                                             
                                             BUFLEN	EQU	80	;	length of keyboard input buffer
                                             
                                             ;*
                                             ;* Internal variables follow:
                                             ;*
                                             	BSS
                                             	ORG		0x600
   3562 00000600                             RANPNT:
   3563 00000600                             	DC.L	START	;	random number pointer
   3564 00000604                             CURRNT:
   3565 00000604                             	DC.L	1		;Current line pointer
   3566 00000608                             STKGOS:
   3567 00000608                             	DC.L	1		;Saves stack pointer in 'GOSUB'
   3568 0000060C                             STKINP:
   3569 0000060C                             	DC.L	1		;Saves stack pointer during 'INPUT'
   3570 00000610                             LOPVAR:
   3571 00000610                             	DC.L	1		;'FOR' loop save area
   3572 00000614                             LOPINC:
   3573 00000614                             	DC.L	1		;increment
   3574 00000618                             LOPLMT:
   3575 00000618                             	DC.L	1		;limit
   3576 0000061C                             LOPLN:
   3577 0000061C                             	DC.L	1		;line number
   3578 00000620                             LOPPT:
   3579 00000620                             	DC.L	1		;text pointer
   3580 00000624                             TXTUNF:
   3581 00000624                             	DC.L	1		;points to unfilled text area
   3582 00000628                             VARBGN:
   3583 00000628                             	DC.L	1		;points to variable area
   3584 0000062C                             STKLMT:
   3585 0000062C                             	DC.L	1		;holds lower limit for stack growth
   3586 00000630                             BUFFER:
   3587 00000630                             	FILL.B	BUFLEN,0x00	;	Keyboard input buffer
                                             
                                             TXT	EQU	$		;Beginning of program area
                                             
                                             	CODE
   3592 FFFC2414 FF FF FF FF FF FF FF FF     	ORG	0xFFFCC000	;
   3593 FFFC241C FF FF FF FF FF FF FF FF     
   3594 FFFC2424 FF FF FF FF FF FF FF FF     
   3595 FFFC242C FF FF FF FF FF FF FF FF     
   3596 FFFC2434 FF FF FF FF FF FF FF FF     
   3597 FFFC243C FF FF FF FF FF FF FF FF     
   3598 FFFC2444 FF FF FF FF FF FF FF FF     
   3599 FFFC244C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 3
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3600 FFFC2454 FF FF FF FF FF FF FF FF     
   3601 FFFC245C FF FF FF FF FF FF FF FF     
   3602 FFFC2464 FF FF FF FF FF FF FF FF     
   3603 FFFC246C FF FF FF FF FF FF FF FF     
   3604 FFFC2474 FF FF FF FF FF FF FF FF     
   3605 FFFC247C FF FF FF FF FF FF FF FF     
   3606 FFFC2484 FF FF FF FF FF FF FF FF     
   3607 FFFC248C FF FF FF FF FF FF FF FF     
   3608 FFFC2494 FF FF FF FF FF FF FF FF     
   3609 FFFC249C FF FF FF FF FF FF FF FF     
   3610 FFFC24A4 FF FF FF FF FF FF FF FF     
   3611 FFFC24AC FF FF FF FF FF FF FF FF     
   3612 FFFC24B4 FF FF FF FF FF FF FF FF     
   3613 FFFC24BC FF FF FF FF FF FF FF FF     
   3614 FFFC24C4 FF FF FF FF FF FF FF FF     
   3615 FFFC24CC FF FF FF FF FF FF FF FF     
   3616 FFFC24D4 FF FF FF FF FF FF FF FF     
   3617 FFFC24DC FF FF FF FF FF FF FF FF     
   3618 FFFC24E4 FF FF FF FF FF FF FF FF     
   3619 FFFC24EC FF FF FF FF FF FF FF FF     
   3620 FFFC24F4 FF FF FF FF FF FF FF FF     
   3621 FFFC24FC FF FF FF FF FF FF FF FF     
   3622 FFFC2504 FF FF FF FF FF FF FF FF     
   3623 FFFC250C FF FF FF FF FF FF FF FF     
   3624 FFFC2514 FF FF FF FF FF FF FF FF     
   3625 FFFC251C FF FF FF FF FF FF FF FF     
   3626 FFFC2524 FF FF FF FF FF FF FF FF     
   3627 FFFC252C FF FF FF FF FF FF FF FF     
   3628 FFFC2534 FF FF FF FF FF FF FF FF     
   3629 FFFC253C FF FF FF FF FF FF FF FF     
   3630 FFFC2544 FF FF FF FF FF FF FF FF     
   3631 FFFC254C FF FF FF FF FF FF FF FF     
   3632 FFFC2554 FF FF FF FF FF FF FF FF     
   3633 FFFC255C FF FF FF FF FF FF FF FF     
   3634 FFFC2564 FF FF FF FF FF FF FF FF     
   3635 FFFC256C FF FF FF FF FF FF FF FF     
   3636 FFFC2574 FF FF FF FF FF FF FF FF     
   3637 FFFC257C FF FF FF FF FF FF FF FF     
   3638 FFFC2584 FF FF FF FF FF FF FF FF     
   3639 FFFC258C FF FF FF FF FF FF FF FF     
   3640 FFFC2594 FF FF FF FF FF FF FF FF     
   3641 FFFC259C FF FF FF FF FF FF FF FF     
   3642 FFFC25A4 FF FF FF FF FF FF FF FF     
   3643 FFFC25AC FF FF FF FF FF FF FF FF     
   3644 FFFC25B4 FF FF FF FF FF FF FF FF     
   3645 FFFC25BC FF FF FF FF FF FF FF FF     
   3646 FFFC25C4 FF FF FF FF FF FF FF FF     
   3647 FFFC25CC FF FF FF FF FF FF FF FF     
   3648 FFFC25D4 FF FF FF FF FF FF FF FF     
   3649 FFFC25DC FF FF FF FF FF FF FF FF     
   3650 FFFC25E4 FF FF FF FF FF FF FF FF     
   3651 FFFC25EC FF FF FF FF FF FF FF FF     
   3652 FFFC25F4 FF FF FF FF FF FF FF FF     
   3653 FFFC25FC FF FF FF FF FF FF FF FF     
   3654 FFFC2604 FF FF FF FF FF FF FF FF     
   3655 FFFC260C FF FF FF FF FF FF FF FF     
   3656 FFFC2614 FF FF FF FF FF FF FF FF     
   3657 FFFC261C FF FF FF FF FF FF FF FF     
   3658 FFFC2624 FF FF FF FF FF FF FF FF     
   3659 FFFC262C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 4
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3660 FFFC2634 FF FF FF FF FF FF FF FF     
   3661 FFFC263C FF FF FF FF FF FF FF FF     
   3662 FFFC2644 FF FF FF FF FF FF FF FF     
   3663 FFFC264C FF FF FF FF FF FF FF FF     
   3664 FFFC2654 FF FF FF FF FF FF FF FF     
   3665 FFFC265C FF FF FF FF FF FF FF FF     
   3666 FFFC2664 FF FF FF FF FF FF FF FF     
   3667 FFFC266C FF FF FF FF FF FF FF FF     
   3668 FFFC2674 FF FF FF FF FF FF FF FF     
   3669 FFFC267C FF FF FF FF FF FF FF FF     
   3670 FFFC2684 FF FF FF FF FF FF FF FF     
   3671 FFFC268C FF FF FF FF FF FF FF FF     
   3672 FFFC2694 FF FF FF FF FF FF FF FF     
   3673 FFFC269C FF FF FF FF FF FF FF FF     
   3674 FFFC26A4 FF FF FF FF FF FF FF FF     
   3675 FFFC26AC FF FF FF FF FF FF FF FF     
   3676 FFFC26B4 FF FF FF FF FF FF FF FF     
   3677 FFFC26BC FF FF FF FF FF FF FF FF     
   3678 FFFC26C4 FF FF FF FF FF FF FF FF     
   3679 FFFC26CC FF FF FF FF FF FF FF FF     
   3680 FFFC26D4 FF FF FF FF FF FF FF FF     
   3681 FFFC26DC FF FF FF FF FF FF FF FF     
   3682 FFFC26E4 FF FF FF FF FF FF FF FF     
   3683 FFFC26EC FF FF FF FF FF FF FF FF     
   3684 FFFC26F4 FF FF FF FF FF FF FF FF     
   3685 FFFC26FC FF FF FF FF FF FF FF FF     
   3686 FFFC2704 FF FF FF FF FF FF FF FF     
   3687 FFFC270C FF FF FF FF FF FF FF FF     
   3688 FFFC2714 FF FF FF FF FF FF FF FF     
   3689 FFFC271C FF FF FF FF FF FF FF FF     
   3690 FFFC2724 FF FF FF FF FF FF FF FF     
   3691 FFFC272C FF FF FF FF FF FF FF FF     
   3692 FFFC2734 FF FF FF FF FF FF FF FF     
   3693 FFFC273C FF FF FF FF FF FF FF FF     
   3694 FFFC2744 FF FF FF FF FF FF FF FF     
   3695 FFFC274C FF FF FF FF FF FF FF FF     
   3696 FFFC2754 FF FF FF FF FF FF FF FF     
   3697 FFFC275C FF FF FF FF FF FF FF FF     
   3698 FFFC2764 FF FF FF FF FF FF FF FF     
   3699 FFFC276C FF FF FF FF FF FF FF FF     
   3700 FFFC2774 FF FF FF FF FF FF FF FF     
   3701 FFFC277C FF FF FF FF FF FF FF FF     
   3702 FFFC2784 FF FF FF FF FF FF FF FF     
   3703 FFFC278C FF FF FF FF FF FF FF FF     
   3704 FFFC2794 FF FF FF FF FF FF FF FF     
   3705 FFFC279C FF FF FF FF FF FF FF FF     
   3706 FFFC27A4 FF FF FF FF FF FF FF FF     
   3707 FFFC27AC FF FF FF FF FF FF FF FF     
   3708 FFFC27B4 FF FF FF FF FF FF FF FF     
   3709 FFFC27BC FF FF FF FF FF FF FF FF     
   3710 FFFC27C4 FF FF FF FF FF FF FF FF     
   3711 FFFC27CC FF FF FF FF FF FF FF FF     
   3712 FFFC27D4 FF FF FF FF FF FF FF FF     
   3713 FFFC27DC FF FF FF FF FF FF FF FF     
   3714 FFFC27E4 FF FF FF FF FF FF FF FF     
   3715 FFFC27EC FF FF FF FF FF FF FF FF     
   3716 FFFC27F4 FF FF FF FF FF FF FF FF     
   3717 FFFC27FC FF FF FF FF FF FF FF FF     
   3718 FFFC2804 FF FF FF FF FF FF FF FF     
   3719 FFFC280C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 5
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3720 FFFC2814 FF FF FF FF FF FF FF FF     
   3721 FFFC281C FF FF FF FF FF FF FF FF     
   3722 FFFC2824 FF FF FF FF FF FF FF FF     
   3723 FFFC282C FF FF FF FF FF FF FF FF     
   3724 FFFC2834 FF FF FF FF FF FF FF FF     
   3725 FFFC283C FF FF FF FF FF FF FF FF     
   3726 FFFC2844 FF FF FF FF FF FF FF FF     
   3727 FFFC284C FF FF FF FF FF FF FF FF     
   3728 FFFC2854 FF FF FF FF FF FF FF FF     
   3729 FFFC285C FF FF FF FF FF FF FF FF     
   3730 FFFC2864 FF FF FF FF FF FF FF FF     
   3731 FFFC286C FF FF FF FF FF FF FF FF     
   3732 FFFC2874 FF FF FF FF FF FF FF FF     
   3733 FFFC287C FF FF FF FF FF FF FF FF     
   3734 FFFC2884 FF FF FF FF FF FF FF FF     
   3735 FFFC288C FF FF FF FF FF FF FF FF     
   3736 FFFC2894 FF FF FF FF FF FF FF FF     
   3737 FFFC289C FF FF FF FF FF FF FF FF     
   3738 FFFC28A4 FF FF FF FF FF FF FF FF     
   3739 FFFC28AC FF FF FF FF FF FF FF FF     
   3740 FFFC28B4 FF FF FF FF FF FF FF FF     
   3741 FFFC28BC FF FF FF FF FF FF FF FF     
   3742 FFFC28C4 FF FF FF FF FF FF FF FF     
   3743 FFFC28CC FF FF FF FF FF FF FF FF     
   3744 FFFC28D4 FF FF FF FF FF FF FF FF     
   3745 FFFC28DC FF FF FF FF FF FF FF FF     
   3746 FFFC28E4 FF FF FF FF FF FF FF FF     
   3747 FFFC28EC FF FF FF FF FF FF FF FF     
   3748 FFFC28F4 FF FF FF FF FF FF FF FF     
   3749 FFFC28FC FF FF FF FF FF FF FF FF     
   3750 FFFC2904 FF FF FF FF FF FF FF FF     
   3751 FFFC290C FF FF FF FF FF FF FF FF     
   3752 FFFC2914 FF FF FF FF FF FF FF FF     
   3753 FFFC291C FF FF FF FF FF FF FF FF     
   3754 FFFC2924 FF FF FF FF FF FF FF FF     
   3755 FFFC292C FF FF FF FF FF FF FF FF     
   3756 FFFC2934 FF FF FF FF FF FF FF FF     
   3757 FFFC293C FF FF FF FF FF FF FF FF     
   3758 FFFC2944 FF FF FF FF FF FF FF FF     
   3759 FFFC294C FF FF FF FF FF FF FF FF     
   3760 FFFC2954 FF FF FF FF FF FF FF FF     
   3761 FFFC295C FF FF FF FF FF FF FF FF     
   3762 FFFC2964 FF FF FF FF FF FF FF FF     
   3763 FFFC296C FF FF FF FF FF FF FF FF     
   3764 FFFC2974 FF FF FF FF FF FF FF FF     
   3765 FFFC297C FF FF FF FF FF FF FF FF     
   3766 FFFC2984 FF FF FF FF FF FF FF FF     
   3767 FFFC298C FF FF FF FF FF FF FF FF     
   3768 FFFC2994 FF FF FF FF FF FF FF FF     
   3769 FFFC299C FF FF FF FF FF FF FF FF     
   3770 FFFC29A4 FF FF FF FF FF FF FF FF     
   3771 FFFC29AC FF FF FF FF FF FF FF FF     
   3772 FFFC29B4 FF FF FF FF FF FF FF FF     
   3773 FFFC29BC FF FF FF FF FF FF FF FF     
   3774 FFFC29C4 FF FF FF FF FF FF FF FF     
   3775 FFFC29CC FF FF FF FF FF FF FF FF     
   3776 FFFC29D4 FF FF FF FF FF FF FF FF     
   3777 FFFC29DC FF FF FF FF FF FF FF FF     
   3778 FFFC29E4 FF FF FF FF FF FF FF FF     
   3779 FFFC29EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 6
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3780 FFFC29F4 FF FF FF FF FF FF FF FF     
   3781 FFFC29FC FF FF FF FF FF FF FF FF     
   3782 FFFC2A04 FF FF FF FF FF FF FF FF     
   3783 FFFC2A0C FF FF FF FF FF FF FF FF     
   3784 FFFC2A14 FF FF FF FF FF FF FF FF     
   3785 FFFC2A1C FF FF FF FF FF FF FF FF     
   3786 FFFC2A24 FF FF FF FF FF FF FF FF     
   3787 FFFC2A2C FF FF FF FF FF FF FF FF     
   3788 FFFC2A34 FF FF FF FF FF FF FF FF     
   3789 FFFC2A3C FF FF FF FF FF FF FF FF     
   3790 FFFC2A44 FF FF FF FF FF FF FF FF     
   3791 FFFC2A4C FF FF FF FF FF FF FF FF     
   3792 FFFC2A54 FF FF FF FF FF FF FF FF     
   3793 FFFC2A5C FF FF FF FF FF FF FF FF     
   3794 FFFC2A64 FF FF FF FF FF FF FF FF     
   3795 FFFC2A6C FF FF FF FF FF FF FF FF     
   3796 FFFC2A74 FF FF FF FF FF FF FF FF     
   3797 FFFC2A7C FF FF FF FF FF FF FF FF     
   3798 FFFC2A84 FF FF FF FF FF FF FF FF     
   3799 FFFC2A8C FF FF FF FF FF FF FF FF     
   3800 FFFC2A94 FF FF FF FF FF FF FF FF     
   3801 FFFC2A9C FF FF FF FF FF FF FF FF     
   3802 FFFC2AA4 FF FF FF FF FF FF FF FF     
   3803 FFFC2AAC FF FF FF FF FF FF FF FF     
   3804 FFFC2AB4 FF FF FF FF FF FF FF FF     
   3805 FFFC2ABC FF FF FF FF FF FF FF FF     
   3806 FFFC2AC4 FF FF FF FF FF FF FF FF     
   3807 FFFC2ACC FF FF FF FF FF FF FF FF     
   3808 FFFC2AD4 FF FF FF FF FF FF FF FF     
   3809 FFFC2ADC FF FF FF FF FF FF FF FF     
   3810 FFFC2AE4 FF FF FF FF FF FF FF FF     
   3811 FFFC2AEC FF FF FF FF FF FF FF FF     
   3812 FFFC2AF4 FF FF FF FF FF FF FF FF     
   3813 FFFC2AFC FF FF FF FF FF FF FF FF     
   3814 FFFC2B04 FF FF FF FF FF FF FF FF     
   3815 FFFC2B0C FF FF FF FF FF FF FF FF     
   3816 FFFC2B14 FF FF FF FF FF FF FF FF     
   3817 FFFC2B1C FF FF FF FF FF FF FF FF     
   3818 FFFC2B24 FF FF FF FF FF FF FF FF     
   3819 FFFC2B2C FF FF FF FF FF FF FF FF     
   3820 FFFC2B34 FF FF FF FF FF FF FF FF     
   3821 FFFC2B3C FF FF FF FF FF FF FF FF     
   3822 FFFC2B44 FF FF FF FF FF FF FF FF     
   3823 FFFC2B4C FF FF FF FF FF FF FF FF     
   3824 FFFC2B54 FF FF FF FF FF FF FF FF     
   3825 FFFC2B5C FF FF FF FF FF FF FF FF     
   3826 FFFC2B64 FF FF FF FF FF FF FF FF     
   3827 FFFC2B6C FF FF FF FF FF FF FF FF     
   3828 FFFC2B74 FF FF FF FF FF FF FF FF     
   3829 FFFC2B7C FF FF FF FF FF FF FF FF     
   3830 FFFC2B84 FF FF FF FF FF FF FF FF     
   3831 FFFC2B8C FF FF FF FF FF FF FF FF     
   3832 FFFC2B94 FF FF FF FF FF FF FF FF     
   3833 FFFC2B9C FF FF FF FF FF FF FF FF     
   3834 FFFC2BA4 FF FF FF FF FF FF FF FF     
   3835 FFFC2BAC FF FF FF FF FF FF FF FF     
   3836 FFFC2BB4 FF FF FF FF FF FF FF FF     
   3837 FFFC2BBC FF FF FF FF FF FF FF FF     
   3838 FFFC2BC4 FF FF FF FF FF FF FF FF     
   3839 FFFC2BCC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 7
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3840 FFFC2BD4 FF FF FF FF FF FF FF FF     
   3841 FFFC2BDC FF FF FF FF FF FF FF FF     
   3842 FFFC2BE4 FF FF FF FF FF FF FF FF     
   3843 FFFC2BEC FF FF FF FF FF FF FF FF     
   3844 FFFC2BF4 FF FF FF FF FF FF FF FF     
   3845 FFFC2BFC FF FF FF FF FF FF FF FF     
   3846 FFFC2C04 FF FF FF FF FF FF FF FF     
   3847 FFFC2C0C FF FF FF FF FF FF FF FF     
   3848 FFFC2C14 FF FF FF FF FF FF FF FF     
   3849 FFFC2C1C FF FF FF FF FF FF FF FF     
   3850 FFFC2C24 FF FF FF FF FF FF FF FF     
   3851 FFFC2C2C FF FF FF FF FF FF FF FF     
   3852 FFFC2C34 FF FF FF FF FF FF FF FF     
   3853 FFFC2C3C FF FF FF FF FF FF FF FF     
   3854 FFFC2C44 FF FF FF FF FF FF FF FF     
   3855 FFFC2C4C FF FF FF FF FF FF FF FF     
   3856 FFFC2C54 FF FF FF FF FF FF FF FF     
   3857 FFFC2C5C FF FF FF FF FF FF FF FF     
   3858 FFFC2C64 FF FF FF FF FF FF FF FF     
   3859 FFFC2C6C FF FF FF FF FF FF FF FF     
   3860 FFFC2C74 FF FF FF FF FF FF FF FF     
   3861 FFFC2C7C FF FF FF FF FF FF FF FF     
   3862 FFFC2C84 FF FF FF FF FF FF FF FF     
   3863 FFFC2C8C FF FF FF FF FF FF FF FF     
   3864 FFFC2C94 FF FF FF FF FF FF FF FF     
   3865 FFFC2C9C FF FF FF FF FF FF FF FF     
   3866 FFFC2CA4 FF FF FF FF FF FF FF FF     
   3867 FFFC2CAC FF FF FF FF FF FF FF FF     
   3868 FFFC2CB4 FF FF FF FF FF FF FF FF     
   3869 FFFC2CBC FF FF FF FF FF FF FF FF     
   3870 FFFC2CC4 FF FF FF FF FF FF FF FF     
   3871 FFFC2CCC FF FF FF FF FF FF FF FF     
   3872 FFFC2CD4 FF FF FF FF FF FF FF FF     
   3873 FFFC2CDC FF FF FF FF FF FF FF FF     
   3874 FFFC2CE4 FF FF FF FF FF FF FF FF     
   3875 FFFC2CEC FF FF FF FF FF FF FF FF     
   3876 FFFC2CF4 FF FF FF FF FF FF FF FF     
   3877 FFFC2CFC FF FF FF FF FF FF FF FF     
   3878 FFFC2D04 FF FF FF FF FF FF FF FF     
   3879 FFFC2D0C FF FF FF FF FF FF FF FF     
   3880 FFFC2D14 FF FF FF FF FF FF FF FF     
   3881 FFFC2D1C FF FF FF FF FF FF FF FF     
   3882 FFFC2D24 FF FF FF FF FF FF FF FF     
   3883 FFFC2D2C FF FF FF FF FF FF FF FF     
   3884 FFFC2D34 FF FF FF FF FF FF FF FF     
   3885 FFFC2D3C FF FF FF FF FF FF FF FF     
   3886 FFFC2D44 FF FF FF FF FF FF FF FF     
   3887 FFFC2D4C FF FF FF FF FF FF FF FF     
   3888 FFFC2D54 FF FF FF FF FF FF FF FF     
   3889 FFFC2D5C FF FF FF FF FF FF FF FF     
   3890 FFFC2D64 FF FF FF FF FF FF FF FF     
   3891 FFFC2D6C FF FF FF FF FF FF FF FF     
   3892 FFFC2D74 FF FF FF FF FF FF FF FF     
   3893 FFFC2D7C FF FF FF FF FF FF FF FF     
   3894 FFFC2D84 FF FF FF FF FF FF FF FF     
   3895 FFFC2D8C FF FF FF FF FF FF FF FF     
   3896 FFFC2D94 FF FF FF FF FF FF FF FF     
   3897 FFFC2D9C FF FF FF FF FF FF FF FF     
   3898 FFFC2DA4 FF FF FF FF FF FF FF FF     
   3899 FFFC2DAC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 8
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3900 FFFC2DB4 FF FF FF FF FF FF FF FF     
   3901 FFFC2DBC FF FF FF FF FF FF FF FF     
   3902 FFFC2DC4 FF FF FF FF FF FF FF FF     
   3903 FFFC2DCC FF FF FF FF FF FF FF FF     
   3904 FFFC2DD4 FF FF FF FF FF FF FF FF     
   3905 FFFC2DDC FF FF FF FF FF FF FF FF     
   3906 FFFC2DE4 FF FF FF FF FF FF FF FF     
   3907 FFFC2DEC FF FF FF FF FF FF FF FF     
   3908 FFFC2DF4 FF FF FF FF FF FF FF FF     
   3909 FFFC2DFC FF FF FF FF FF FF FF FF     
   3910 FFFC2E04 FF FF FF FF FF FF FF FF     
   3911 FFFC2E0C FF FF FF FF FF FF FF FF     
   3912 FFFC2E14 FF FF FF FF FF FF FF FF     
   3913 FFFC2E1C FF FF FF FF FF FF FF FF     
   3914 FFFC2E24 FF FF FF FF FF FF FF FF     
   3915 FFFC2E2C FF FF FF FF FF FF FF FF     
   3916 FFFC2E34 FF FF FF FF FF FF FF FF     
   3917 FFFC2E3C FF FF FF FF FF FF FF FF     
   3918 FFFC2E44 FF FF FF FF FF FF FF FF     
   3919 FFFC2E4C FF FF FF FF FF FF FF FF     
   3920 FFFC2E54 FF FF FF FF FF FF FF FF     
   3921 FFFC2E5C FF FF FF FF FF FF FF FF     
   3922 FFFC2E64 FF FF FF FF FF FF FF FF     
   3923 FFFC2E6C FF FF FF FF FF FF FF FF     
   3924 FFFC2E74 FF FF FF FF FF FF FF FF     
   3925 FFFC2E7C FF FF FF FF FF FF FF FF     
   3926 FFFC2E84 FF FF FF FF FF FF FF FF     
   3927 FFFC2E8C FF FF FF FF FF FF FF FF     
   3928 FFFC2E94 FF FF FF FF FF FF FF FF     
   3929 FFFC2E9C FF FF FF FF FF FF FF FF     
   3930 FFFC2EA4 FF FF FF FF FF FF FF FF     
   3931 FFFC2EAC FF FF FF FF FF FF FF FF     
   3932 FFFC2EB4 FF FF FF FF FF FF FF FF     
   3933 FFFC2EBC FF FF FF FF FF FF FF FF     
   3934 FFFC2EC4 FF FF FF FF FF FF FF FF     
   3935 FFFC2ECC FF FF FF FF FF FF FF FF     
   3936 FFFC2ED4 FF FF FF FF FF FF FF FF     
   3937 FFFC2EDC FF FF FF FF FF FF FF FF     
   3938 FFFC2EE4 FF FF FF FF FF FF FF FF     
   3939 FFFC2EEC FF FF FF FF FF FF FF FF     
   3940 FFFC2EF4 FF FF FF FF FF FF FF FF     
   3941 FFFC2EFC FF FF FF FF FF FF FF FF     
   3942 FFFC2F04 FF FF FF FF FF FF FF FF     
   3943 FFFC2F0C FF FF FF FF FF FF FF FF     
   3944 FFFC2F14 FF FF FF FF FF FF FF FF     
   3945 FFFC2F1C FF FF FF FF FF FF FF FF     
   3946 FFFC2F24 FF FF FF FF FF FF FF FF     
   3947 FFFC2F2C FF FF FF FF FF FF FF FF     
   3948 FFFC2F34 FF FF FF FF FF FF FF FF     
   3949 FFFC2F3C FF FF FF FF FF FF FF FF     
   3950 FFFC2F44 FF FF FF FF FF FF FF FF     
   3951 FFFC2F4C FF FF FF FF FF FF FF FF     
   3952 FFFC2F54 FF FF FF FF FF FF FF FF     
   3953 FFFC2F5C FF FF FF FF FF FF FF FF     
   3954 FFFC2F64 FF FF FF FF FF FF FF FF     
   3955 FFFC2F6C FF FF FF FF FF FF FF FF     
   3956 FFFC2F74 FF FF FF FF FF FF FF FF     
   3957 FFFC2F7C FF FF FF FF FF FF FF FF     
   3958 FFFC2F84 FF FF FF FF FF FF FF FF     
   3959 FFFC2F8C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 9
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3960 FFFC2F94 FF FF FF FF FF FF FF FF     
   3961 FFFC2F9C FF FF FF FF FF FF FF FF     
   3962 FFFC2FA4 FF FF FF FF FF FF FF FF     
   3963 FFFC2FAC FF FF FF FF FF FF FF FF     
   3964 FFFC2FB4 FF FF FF FF FF FF FF FF     
   3965 FFFC2FBC FF FF FF FF FF FF FF FF     
   3966 FFFC2FC4 FF FF FF FF FF FF FF FF     
   3967 FFFC2FCC FF FF FF FF FF FF FF FF     
   3968 FFFC2FD4 FF FF FF FF FF FF FF FF     
   3969 FFFC2FDC FF FF FF FF FF FF FF FF     
   3970 FFFC2FE4 FF FF FF FF FF FF FF FF     
   3971 FFFC2FEC FF FF FF FF FF FF FF FF     
   3972 FFFC2FF4 FF FF FF FF FF FF FF FF     
   3973 FFFC2FFC FF FF FF FF FF FF FF FF     
   3974 FFFC3004 FF FF FF FF FF FF FF FF     
   3975 FFFC300C FF FF FF FF FF FF FF FF     
   3976 FFFC3014 FF FF FF FF FF FF FF FF     
   3977 FFFC301C FF FF FF FF FF FF FF FF     
   3978 FFFC3024 FF FF FF FF FF FF FF FF     
   3979 FFFC302C FF FF FF FF FF FF FF FF     
   3980 FFFC3034 FF FF FF FF FF FF FF FF     
   3981 FFFC303C FF FF FF FF FF FF FF FF     
   3982 FFFC3044 FF FF FF FF FF FF FF FF     
   3983 FFFC304C FF FF FF FF FF FF FF FF     
   3984 FFFC3054 FF FF FF FF FF FF FF FF     
   3985 FFFC305C FF FF FF FF FF FF FF FF     
   3986 FFFC3064 FF FF FF FF FF FF FF FF     
   3987 FFFC306C FF FF FF FF FF FF FF FF     
   3988 FFFC3074 FF FF FF FF FF FF FF FF     
   3989 FFFC307C FF FF FF FF FF FF FF FF     
   3990 FFFC3084 FF FF FF FF FF FF FF FF     
   3991 FFFC308C FF FF FF FF FF FF FF FF     
   3992 FFFC3094 FF FF FF FF FF FF FF FF     
   3993 FFFC309C FF FF FF FF FF FF FF FF     
   3994 FFFC30A4 FF FF FF FF FF FF FF FF     
   3995 FFFC30AC FF FF FF FF FF FF FF FF     
   3996 FFFC30B4 FF FF FF FF FF FF FF FF     
   3997 FFFC30BC FF FF FF FF FF FF FF FF     
   3998 FFFC30C4 FF FF FF FF FF FF FF FF     
   3999 FFFC30CC FF FF FF FF FF FF FF FF     
   4000 FFFC30D4 FF FF FF FF FF FF FF FF     
   4001 FFFC30DC FF FF FF FF FF FF FF FF     
   4002 FFFC30E4 FF FF FF FF FF FF FF FF     
   4003 FFFC30EC FF FF FF FF FF FF FF FF     
   4004 FFFC30F4 FF FF FF FF FF FF FF FF     
   4005 FFFC30FC FF FF FF FF FF FF FF FF     
   4006 FFFC3104 FF FF FF FF FF FF FF FF     
   4007 FFFC310C FF FF FF FF FF FF FF FF     
   4008 FFFC3114 FF FF FF FF FF FF FF FF     
   4009 FFFC311C FF FF FF FF FF FF FF FF     
   4010 FFFC3124 FF FF FF FF FF FF FF FF     
   4011 FFFC312C FF FF FF FF FF FF FF FF     
   4012 FFFC3134 FF FF FF FF FF FF FF FF     
   4013 FFFC313C FF FF FF FF FF FF FF FF     
   4014 FFFC3144 FF FF FF FF FF FF FF FF     
   4015 FFFC314C FF FF FF FF FF FF FF FF     
   4016 FFFC3154 FF FF FF FF FF FF FF FF     
   4017 FFFC315C FF FF FF FF FF FF FF FF     
   4018 FFFC3164 FF FF FF FF FF FF FF FF     
   4019 FFFC316C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 10
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4020 FFFC3174 FF FF FF FF FF FF FF FF     
   4021 FFFC317C FF FF FF FF FF FF FF FF     
   4022 FFFC3184 FF FF FF FF FF FF FF FF     
   4023 FFFC318C FF FF FF FF FF FF FF FF     
   4024 FFFC3194 FF FF FF FF FF FF FF FF     
   4025 FFFC319C FF FF FF FF FF FF FF FF     
   4026 FFFC31A4 FF FF FF FF FF FF FF FF     
   4027 FFFC31AC FF FF FF FF FF FF FF FF     
   4028 FFFC31B4 FF FF FF FF FF FF FF FF     
   4029 FFFC31BC FF FF FF FF FF FF FF FF     
   4030 FFFC31C4 FF FF FF FF FF FF FF FF     
   4031 FFFC31CC FF FF FF FF FF FF FF FF     
   4032 FFFC31D4 FF FF FF FF FF FF FF FF     
   4033 FFFC31DC FF FF FF FF FF FF FF FF     
   4034 FFFC31E4 FF FF FF FF FF FF FF FF     
   4035 FFFC31EC FF FF FF FF FF FF FF FF     
   4036 FFFC31F4 FF FF FF FF FF FF FF FF     
   4037 FFFC31FC FF FF FF FF FF FF FF FF     
   4038 FFFC3204 FF FF FF FF FF FF FF FF     
   4039 FFFC320C FF FF FF FF FF FF FF FF     
   4040 FFFC3214 FF FF FF FF FF FF FF FF     
   4041 FFFC321C FF FF FF FF FF FF FF FF     
   4042 FFFC3224 FF FF FF FF FF FF FF FF     
   4043 FFFC322C FF FF FF FF FF FF FF FF     
   4044 FFFC3234 FF FF FF FF FF FF FF FF     
   4045 FFFC323C FF FF FF FF FF FF FF FF     
   4046 FFFC3244 FF FF FF FF FF FF FF FF     
   4047 FFFC324C FF FF FF FF FF FF FF FF     
   4048 FFFC3254 FF FF FF FF FF FF FF FF     
   4049 FFFC325C FF FF FF FF FF FF FF FF     
   4050 FFFC3264 FF FF FF FF FF FF FF FF     
   4051 FFFC326C FF FF FF FF FF FF FF FF     
   4052 FFFC3274 FF FF FF FF FF FF FF FF     
   4053 FFFC327C FF FF FF FF FF FF FF FF     
   4054 FFFC3284 FF FF FF FF FF FF FF FF     
   4055 FFFC328C FF FF FF FF FF FF FF FF     
   4056 FFFC3294 FF FF FF FF FF FF FF FF     
   4057 FFFC329C FF FF FF FF FF FF FF FF     
   4058 FFFC32A4 FF FF FF FF FF FF FF FF     
   4059 FFFC32AC FF FF FF FF FF FF FF FF     
   4060 FFFC32B4 FF FF FF FF FF FF FF FF     
   4061 FFFC32BC FF FF FF FF FF FF FF FF     
   4062 FFFC32C4 FF FF FF FF FF FF FF FF     
   4063 FFFC32CC FF FF FF FF FF FF FF FF     
   4064 FFFC32D4 FF FF FF FF FF FF FF FF     
   4065 FFFC32DC FF FF FF FF FF FF FF FF     
   4066 FFFC32E4 FF FF FF FF FF FF FF FF     
   4067 FFFC32EC FF FF FF FF FF FF FF FF     
   4068 FFFC32F4 FF FF FF FF FF FF FF FF     
   4069 FFFC32FC FF FF FF FF FF FF FF FF     
   4070 FFFC3304 FF FF FF FF FF FF FF FF     
   4071 FFFC330C FF FF FF FF FF FF FF FF     
   4072 FFFC3314 FF FF FF FF FF FF FF FF     
   4073 FFFC331C FF FF FF FF FF FF FF FF     
   4074 FFFC3324 FF FF FF FF FF FF FF FF     
   4075 FFFC332C FF FF FF FF FF FF FF FF     
   4076 FFFC3334 FF FF FF FF FF FF FF FF     
   4077 FFFC333C FF FF FF FF FF FF FF FF     
   4078 FFFC3344 FF FF FF FF FF FF FF FF     
   4079 FFFC334C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 11
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4080 FFFC3354 FF FF FF FF FF FF FF FF     
   4081 FFFC335C FF FF FF FF FF FF FF FF     
   4082 FFFC3364 FF FF FF FF FF FF FF FF     
   4083 FFFC336C FF FF FF FF FF FF FF FF     
   4084 FFFC3374 FF FF FF FF FF FF FF FF     
   4085 FFFC337C FF FF FF FF FF FF FF FF     
   4086 FFFC3384 FF FF FF FF FF FF FF FF     
   4087 FFFC338C FF FF FF FF FF FF FF FF     
   4088 FFFC3394 FF FF FF FF FF FF FF FF     
   4089 FFFC339C FF FF FF FF FF FF FF FF     
   4090 FFFC33A4 FF FF FF FF FF FF FF FF     
   4091 FFFC33AC FF FF FF FF FF FF FF FF     
   4092 FFFC33B4 FF FF FF FF FF FF FF FF     
   4093 FFFC33BC FF FF FF FF FF FF FF FF     
   4094 FFFC33C4 FF FF FF FF FF FF FF FF     
   4095 FFFC33CC FF FF FF FF FF FF FF FF     
   4096 FFFC33D4 FF FF FF FF FF FF FF FF     
   4097 FFFC33DC FF FF FF FF FF FF FF FF     
   4098 FFFC33E4 FF FF FF FF FF FF FF FF     
   4099 FFFC33EC FF FF FF FF FF FF FF FF     
   4100 FFFC33F4 FF FF FF FF FF FF FF FF     
   4101 FFFC33FC FF FF FF FF FF FF FF FF     
   4102 FFFC3404 FF FF FF FF FF FF FF FF     
   4103 FFFC340C FF FF FF FF FF FF FF FF     
   4104 FFFC3414 FF FF FF FF FF FF FF FF     
   4105 FFFC341C FF FF FF FF FF FF FF FF     
   4106 FFFC3424 FF FF FF FF FF FF FF FF     
   4107 FFFC342C FF FF FF FF FF FF FF FF     
   4108 FFFC3434 FF FF FF FF FF FF FF FF     
   4109 FFFC343C FF FF FF FF FF FF FF FF     
   4110 FFFC3444 FF FF FF FF FF FF FF FF     
   4111 FFFC344C FF FF FF FF FF FF FF FF     
   4112 FFFC3454 FF FF FF FF FF FF FF FF     
   4113 FFFC345C FF FF FF FF FF FF FF FF     
   4114 FFFC3464 FF FF FF FF FF FF FF FF     
   4115 FFFC346C FF FF FF FF FF FF FF FF     
   4116 FFFC3474 FF FF FF FF FF FF FF FF     
   4117 FFFC347C FF FF FF FF FF FF FF FF     
   4118 FFFC3484 FF FF FF FF FF FF FF FF     
   4119 FFFC348C FF FF FF FF FF FF FF FF     
   4120 FFFC3494 FF FF FF FF FF FF FF FF     
   4121 FFFC349C FF FF FF FF FF FF FF FF     
   4122 FFFC34A4 FF FF FF FF FF FF FF FF     
   4123 FFFC34AC FF FF FF FF FF FF FF FF     
   4124 FFFC34B4 FF FF FF FF FF FF FF FF     
   4125 FFFC34BC FF FF FF FF FF FF FF FF     
   4126 FFFC34C4 FF FF FF FF FF FF FF FF     
   4127 FFFC34CC FF FF FF FF FF FF FF FF     
   4128 FFFC34D4 FF FF FF FF FF FF FF FF     
   4129 FFFC34DC FF FF FF FF FF FF FF FF     
   4130 FFFC34E4 FF FF FF FF FF FF FF FF     
   4131 FFFC34EC FF FF FF FF FF FF FF FF     
   4132 FFFC34F4 FF FF FF FF FF FF FF FF     
   4133 FFFC34FC FF FF FF FF FF FF FF FF     
   4134 FFFC3504 FF FF FF FF FF FF FF FF     
   4135 FFFC350C FF FF FF FF FF FF FF FF     
   4136 FFFC3514 FF FF FF FF FF FF FF FF     
   4137 FFFC351C FF FF FF FF FF FF FF FF     
   4138 FFFC3524 FF FF FF FF FF FF FF FF     
   4139 FFFC352C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 12
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4140 FFFC3534 FF FF FF FF FF FF FF FF     
   4141 FFFC353C FF FF FF FF FF FF FF FF     
   4142 FFFC3544 FF FF FF FF FF FF FF FF     
   4143 FFFC354C FF FF FF FF FF FF FF FF     
   4144 FFFC3554 FF FF FF FF FF FF FF FF     
   4145 FFFC355C FF FF FF FF FF FF FF FF     
   4146 FFFC3564 FF FF FF FF FF FF FF FF     
   4147 FFFC356C FF FF FF FF FF FF FF FF     
   4148 FFFC3574 FF FF FF FF FF FF FF FF     
   4149 FFFC357C FF FF FF FF FF FF FF FF     
   4150 FFFC3584 FF FF FF FF FF FF FF FF     
   4151 FFFC358C FF FF FF FF FF FF FF FF     
   4152 FFFC3594 FF FF FF FF FF FF FF FF     
   4153 FFFC359C FF FF FF FF FF FF FF FF     
   4154 FFFC35A4 FF FF FF FF FF FF FF FF     
   4155 FFFC35AC FF FF FF FF FF FF FF FF     
   4156 FFFC35B4 FF FF FF FF FF FF FF FF     
   4157 FFFC35BC FF FF FF FF FF FF FF FF     
   4158 FFFC35C4 FF FF FF FF FF FF FF FF     
   4159 FFFC35CC FF FF FF FF FF FF FF FF     
   4160 FFFC35D4 FF FF FF FF FF FF FF FF     
   4161 FFFC35DC FF FF FF FF FF FF FF FF     
   4162 FFFC35E4 FF FF FF FF FF FF FF FF     
   4163 FFFC35EC FF FF FF FF FF FF FF FF     
   4164 FFFC35F4 FF FF FF FF FF FF FF FF     
   4165 FFFC35FC FF FF FF FF FF FF FF FF     
   4166 FFFC3604 FF FF FF FF FF FF FF FF     
   4167 FFFC360C FF FF FF FF FF FF FF FF     
   4168 FFFC3614 FF FF FF FF FF FF FF FF     
   4169 FFFC361C FF FF FF FF FF FF FF FF     
   4170 FFFC3624 FF FF FF FF FF FF FF FF     
   4171 FFFC362C FF FF FF FF FF FF FF FF     
   4172 FFFC3634 FF FF FF FF FF FF FF FF     
   4173 FFFC363C FF FF FF FF FF FF FF FF     
   4174 FFFC3644 FF FF FF FF FF FF FF FF     
   4175 FFFC364C FF FF FF FF FF FF FF FF     
   4176 FFFC3654 FF FF FF FF FF FF FF FF     
   4177 FFFC365C FF FF FF FF FF FF FF FF     
   4178 FFFC3664 FF FF FF FF FF FF FF FF     
   4179 FFFC366C FF FF FF FF FF FF FF FF     
   4180 FFFC3674 FF FF FF FF FF FF FF FF     
   4181 FFFC367C FF FF FF FF FF FF FF FF     
   4182 FFFC3684 FF FF FF FF FF FF FF FF     
   4183 FFFC368C FF FF FF FF FF FF FF FF     
   4184 FFFC3694 FF FF FF FF FF FF FF FF     
   4185 FFFC369C FF FF FF FF FF FF FF FF     
   4186 FFFC36A4 FF FF FF FF FF FF FF FF     
   4187 FFFC36AC FF FF FF FF FF FF FF FF     
   4188 FFFC36B4 FF FF FF FF FF FF FF FF     
   4189 FFFC36BC FF FF FF FF FF FF FF FF     
   4190 FFFC36C4 FF FF FF FF FF FF FF FF     
   4191 FFFC36CC FF FF FF FF FF FF FF FF     
   4192 FFFC36D4 FF FF FF FF FF FF FF FF     
   4193 FFFC36DC FF FF FF FF FF FF FF FF     
   4194 FFFC36E4 FF FF FF FF FF FF FF FF     
   4195 FFFC36EC FF FF FF FF FF FF FF FF     
   4196 FFFC36F4 FF FF FF FF FF FF FF FF     
   4197 FFFC36FC FF FF FF FF FF FF FF FF     
   4198 FFFC3704 FF FF FF FF FF FF FF FF     
   4199 FFFC370C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 13
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4200 FFFC3714 FF FF FF FF FF FF FF FF     
   4201 FFFC371C FF FF FF FF FF FF FF FF     
   4202 FFFC3724 FF FF FF FF FF FF FF FF     
   4203 FFFC372C FF FF FF FF FF FF FF FF     
   4204 FFFC3734 FF FF FF FF FF FF FF FF     
   4205 FFFC373C FF FF FF FF FF FF FF FF     
   4206 FFFC3744 FF FF FF FF FF FF FF FF     
   4207 FFFC374C FF FF FF FF FF FF FF FF     
   4208 FFFC3754 FF FF FF FF FF FF FF FF     
   4209 FFFC375C FF FF FF FF FF FF FF FF     
   4210 FFFC3764 FF FF FF FF FF FF FF FF     
   4211 FFFC376C FF FF FF FF FF FF FF FF     
   4212 FFFC3774 FF FF FF FF FF FF FF FF     
   4213 FFFC377C FF FF FF FF FF FF FF FF     
   4214 FFFC3784 FF FF FF FF FF FF FF FF     
   4215 FFFC378C FF FF FF FF FF FF FF FF     
   4216 FFFC3794 FF FF FF FF FF FF FF FF     
   4217 FFFC379C FF FF FF FF FF FF FF FF     
   4218 FFFC37A4 FF FF FF FF FF FF FF FF     
   4219 FFFC37AC FF FF FF FF FF FF FF FF     
   4220 FFFC37B4 FF FF FF FF FF FF FF FF     
   4221 FFFC37BC FF FF FF FF FF FF FF FF     
   4222 FFFC37C4 FF FF FF FF FF FF FF FF     
   4223 FFFC37CC FF FF FF FF FF FF FF FF     
   4224 FFFC37D4 FF FF FF FF FF FF FF FF     
   4225 FFFC37DC FF FF FF FF FF FF FF FF     
   4226 FFFC37E4 FF FF FF FF FF FF FF FF     
   4227 FFFC37EC FF FF FF FF FF FF FF FF     
   4228 FFFC37F4 FF FF FF FF FF FF FF FF     
   4229 FFFC37FC FF FF FF FF FF FF FF FF     
   4230 FFFC3804 FF FF FF FF FF FF FF FF     
   4231 FFFC380C FF FF FF FF FF FF FF FF     
   4232 FFFC3814 FF FF FF FF FF FF FF FF     
   4233 FFFC381C FF FF FF FF FF FF FF FF     
   4234 FFFC3824 FF FF FF FF FF FF FF FF     
   4235 FFFC382C FF FF FF FF FF FF FF FF     
   4236 FFFC3834 FF FF FF FF FF FF FF FF     
   4237 FFFC383C FF FF FF FF FF FF FF FF     
   4238 FFFC3844 FF FF FF FF FF FF FF FF     
   4239 FFFC384C FF FF FF FF FF FF FF FF     
   4240 FFFC3854 FF FF FF FF FF FF FF FF     
   4241 FFFC385C FF FF FF FF FF FF FF FF     
   4242 FFFC3864 FF FF FF FF FF FF FF FF     
   4243 FFFC386C FF FF FF FF FF FF FF FF     
   4244 FFFC3874 FF FF FF FF FF FF FF FF     
   4245 FFFC387C FF FF FF FF FF FF FF FF     
   4246 FFFC3884 FF FF FF FF FF FF FF FF     
   4247 FFFC388C FF FF FF FF FF FF FF FF     
   4248 FFFC3894 FF FF FF FF FF FF FF FF     
   4249 FFFC389C FF FF FF FF FF FF FF FF     
   4250 FFFC38A4 FF FF FF FF FF FF FF FF     
   4251 FFFC38AC FF FF FF FF FF FF FF FF     
   4252 FFFC38B4 FF FF FF FF FF FF FF FF     
   4253 FFFC38BC FF FF FF FF FF FF FF FF     
   4254 FFFC38C4 FF FF FF FF FF FF FF FF     
   4255 FFFC38CC FF FF FF FF FF FF FF FF     
   4256 FFFC38D4 FF FF FF FF FF FF FF FF     
   4257 FFFC38DC FF FF FF FF FF FF FF FF     
   4258 FFFC38E4 FF FF FF FF FF FF FF FF     
   4259 FFFC38EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 14
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4260 FFFC38F4 FF FF FF FF FF FF FF FF     
   4261 FFFC38FC FF FF FF FF FF FF FF FF     
   4262 FFFC3904 FF FF FF FF FF FF FF FF     
   4263 FFFC390C FF FF FF FF FF FF FF FF     
   4264 FFFC3914 FF FF FF FF FF FF FF FF     
   4265 FFFC391C FF FF FF FF FF FF FF FF     
   4266 FFFC3924 FF FF FF FF FF FF FF FF     
   4267 FFFC392C FF FF FF FF FF FF FF FF     
   4268 FFFC3934 FF FF FF FF FF FF FF FF     
   4269 FFFC393C FF FF FF FF FF FF FF FF     
   4270 FFFC3944 FF FF FF FF FF FF FF FF     
   4271 FFFC394C FF FF FF FF FF FF FF FF     
   4272 FFFC3954 FF FF FF FF FF FF FF FF     
   4273 FFFC395C FF FF FF FF FF FF FF FF     
   4274 FFFC3964 FF FF FF FF FF FF FF FF     
   4275 FFFC396C FF FF FF FF FF FF FF FF     
   4276 FFFC3974 FF FF FF FF FF FF FF FF     
   4277 FFFC397C FF FF FF FF FF FF FF FF     
   4278 FFFC3984 FF FF FF FF FF FF FF FF     
   4279 FFFC398C FF FF FF FF FF FF FF FF     
   4280 FFFC3994 FF FF FF FF FF FF FF FF     
   4281 FFFC399C FF FF FF FF FF FF FF FF     
   4282 FFFC39A4 FF FF FF FF FF FF FF FF     
   4283 FFFC39AC FF FF FF FF FF FF FF FF     
   4284 FFFC39B4 FF FF FF FF FF FF FF FF     
   4285 FFFC39BC FF FF FF FF FF FF FF FF     
   4286 FFFC39C4 FF FF FF FF FF FF FF FF     
   4287 FFFC39CC FF FF FF FF FF FF FF FF     
   4288 FFFC39D4 FF FF FF FF FF FF FF FF     
   4289 FFFC39DC FF FF FF FF FF FF FF FF     
   4290 FFFC39E4 FF FF FF FF FF FF FF FF     
   4291 FFFC39EC FF FF FF FF FF FF FF FF     
   4292 FFFC39F4 FF FF FF FF FF FF FF FF     
   4293 FFFC39FC FF FF FF FF FF FF FF FF     
   4294 FFFC3A04 FF FF FF FF FF FF FF FF     
   4295 FFFC3A0C FF FF FF FF FF FF FF FF     
   4296 FFFC3A14 FF FF FF FF FF FF FF FF     
   4297 FFFC3A1C FF FF FF FF FF FF FF FF     
   4298 FFFC3A24 FF FF FF FF FF FF FF FF     
   4299 FFFC3A2C FF FF FF FF FF FF FF FF     
   4300 FFFC3A34 FF FF FF FF FF FF FF FF     
   4301 FFFC3A3C FF FF FF FF FF FF FF FF     
   4302 FFFC3A44 FF FF FF FF FF FF FF FF     
   4303 FFFC3A4C FF FF FF FF FF FF FF FF     
   4304 FFFC3A54 FF FF FF FF FF FF FF FF     
   4305 FFFC3A5C FF FF FF FF FF FF FF FF     
   4306 FFFC3A64 FF FF FF FF FF FF FF FF     
   4307 FFFC3A6C FF FF FF FF FF FF FF FF     
   4308 FFFC3A74 FF FF FF FF FF FF FF FF     
   4309 FFFC3A7C FF FF FF FF FF FF FF FF     
   4310 FFFC3A84 FF FF FF FF FF FF FF FF     
   4311 FFFC3A8C FF FF FF FF FF FF FF FF     
   4312 FFFC3A94 FF FF FF FF FF FF FF FF     
   4313 FFFC3A9C FF FF FF FF FF FF FF FF     
   4314 FFFC3AA4 FF FF FF FF FF FF FF FF     
   4315 FFFC3AAC FF FF FF FF FF FF FF FF     
   4316 FFFC3AB4 FF FF FF FF FF FF FF FF     
   4317 FFFC3ABC FF FF FF FF FF FF FF FF     
   4318 FFFC3AC4 FF FF FF FF FF FF FF FF     
   4319 FFFC3ACC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 15
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4320 FFFC3AD4 FF FF FF FF FF FF FF FF     
   4321 FFFC3ADC FF FF FF FF FF FF FF FF     
   4322 FFFC3AE4 FF FF FF FF FF FF FF FF     
   4323 FFFC3AEC FF FF FF FF FF FF FF FF     
   4324 FFFC3AF4 FF FF FF FF FF FF FF FF     
   4325 FFFC3AFC FF FF FF FF FF FF FF FF     
   4326 FFFC3B04 FF FF FF FF FF FF FF FF     
   4327 FFFC3B0C FF FF FF FF FF FF FF FF     
   4328 FFFC3B14 FF FF FF FF FF FF FF FF     
   4329 FFFC3B1C FF FF FF FF FF FF FF FF     
   4330 FFFC3B24 FF FF FF FF FF FF FF FF     
   4331 FFFC3B2C FF FF FF FF FF FF FF FF     
   4332 FFFC3B34 FF FF FF FF FF FF FF FF     
   4333 FFFC3B3C FF FF FF FF FF FF FF FF     
   4334 FFFC3B44 FF FF FF FF FF FF FF FF     
   4335 FFFC3B4C FF FF FF FF FF FF FF FF     
   4336 FFFC3B54 FF FF FF FF FF FF FF FF     
   4337 FFFC3B5C FF FF FF FF FF FF FF FF     
   4338 FFFC3B64 FF FF FF FF FF FF FF FF     
   4339 FFFC3B6C FF FF FF FF FF FF FF FF     
   4340 FFFC3B74 FF FF FF FF FF FF FF FF     
   4341 FFFC3B7C FF FF FF FF FF FF FF FF     
   4342 FFFC3B84 FF FF FF FF FF FF FF FF     
   4343 FFFC3B8C FF FF FF FF FF FF FF FF     
   4344 FFFC3B94 FF FF FF FF FF FF FF FF     
   4345 FFFC3B9C FF FF FF FF FF FF FF FF     
   4346 FFFC3BA4 FF FF FF FF FF FF FF FF     
   4347 FFFC3BAC FF FF FF FF FF FF FF FF     
   4348 FFFC3BB4 FF FF FF FF FF FF FF FF     
   4349 FFFC3BBC FF FF FF FF FF FF FF FF     
   4350 FFFC3BC4 FF FF FF FF FF FF FF FF     
   4351 FFFC3BCC FF FF FF FF FF FF FF FF     
   4352 FFFC3BD4 FF FF FF FF FF FF FF FF     
   4353 FFFC3BDC FF FF FF FF FF FF FF FF     
   4354 FFFC3BE4 FF FF FF FF FF FF FF FF     
   4355 FFFC3BEC FF FF FF FF FF FF FF FF     
   4356 FFFC3BF4 FF FF FF FF FF FF FF FF     
   4357 FFFC3BFC FF FF FF FF FF FF FF FF     
   4358 FFFC3C04 FF FF FF FF FF FF FF FF     
   4359 FFFC3C0C FF FF FF FF FF FF FF FF     
   4360 FFFC3C14 FF FF FF FF FF FF FF FF     
   4361 FFFC3C1C FF FF FF FF FF FF FF FF     
   4362 FFFC3C24 FF FF FF FF FF FF FF FF     
   4363 FFFC3C2C FF FF FF FF FF FF FF FF     
   4364 FFFC3C34 FF FF FF FF FF FF FF FF     
   4365 FFFC3C3C FF FF FF FF FF FF FF FF     
   4366 FFFC3C44 FF FF FF FF FF FF FF FF     
   4367 FFFC3C4C FF FF FF FF FF FF FF FF     
   4368 FFFC3C54 FF FF FF FF FF FF FF FF     
   4369 FFFC3C5C FF FF FF FF FF FF FF FF     
   4370 FFFC3C64 FF FF FF FF FF FF FF FF     
   4371 FFFC3C6C FF FF FF FF FF FF FF FF     
   4372 FFFC3C74 FF FF FF FF FF FF FF FF     
   4373 FFFC3C7C FF FF FF FF FF FF FF FF     
   4374 FFFC3C84 FF FF FF FF FF FF FF FF     
   4375 FFFC3C8C FF FF FF FF FF FF FF FF     
   4376 FFFC3C94 FF FF FF FF FF FF FF FF     
   4377 FFFC3C9C FF FF FF FF FF FF FF FF     
   4378 FFFC3CA4 FF FF FF FF FF FF FF FF     
   4379 FFFC3CAC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 16
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4380 FFFC3CB4 FF FF FF FF FF FF FF FF     
   4381 FFFC3CBC FF FF FF FF FF FF FF FF     
   4382 FFFC3CC4 FF FF FF FF FF FF FF FF     
   4383 FFFC3CCC FF FF FF FF FF FF FF FF     
   4384 FFFC3CD4 FF FF FF FF FF FF FF FF     
   4385 FFFC3CDC FF FF FF FF FF FF FF FF     
   4386 FFFC3CE4 FF FF FF FF FF FF FF FF     
   4387 FFFC3CEC FF FF FF FF FF FF FF FF     
   4388 FFFC3CF4 FF FF FF FF FF FF FF FF     
   4389 FFFC3CFC FF FF FF FF FF FF FF FF     
   4390 FFFC3D04 FF FF FF FF FF FF FF FF     
   4391 FFFC3D0C FF FF FF FF FF FF FF FF     
   4392 FFFC3D14 FF FF FF FF FF FF FF FF     
   4393 FFFC3D1C FF FF FF FF FF FF FF FF     
   4394 FFFC3D24 FF FF FF FF FF FF FF FF     
   4395 FFFC3D2C FF FF FF FF FF FF FF FF     
   4396 FFFC3D34 FF FF FF FF FF FF FF FF     
   4397 FFFC3D3C FF FF FF FF FF FF FF FF     
   4398 FFFC3D44 FF FF FF FF FF FF FF FF     
   4399 FFFC3D4C FF FF FF FF FF FF FF FF     
   4400 FFFC3D54 FF FF FF FF FF FF FF FF     
   4401 FFFC3D5C FF FF FF FF FF FF FF FF     
   4402 FFFC3D64 FF FF FF FF FF FF FF FF     
   4403 FFFC3D6C FF FF FF FF FF FF FF FF     
   4404 FFFC3D74 FF FF FF FF FF FF FF FF     
   4405 FFFC3D7C FF FF FF FF FF FF FF FF     
   4406 FFFC3D84 FF FF FF FF FF FF FF FF     
   4407 FFFC3D8C FF FF FF FF FF FF FF FF     
   4408 FFFC3D94 FF FF FF FF FF FF FF FF     
   4409 FFFC3D9C FF FF FF FF FF FF FF FF     
   4410 FFFC3DA4 FF FF FF FF FF FF FF FF     
   4411 FFFC3DAC FF FF FF FF FF FF FF FF     
   4412 FFFC3DB4 FF FF FF FF FF FF FF FF     
   4413 FFFC3DBC FF FF FF FF FF FF FF FF     
   4414 FFFC3DC4 FF FF FF FF FF FF FF FF     
   4415 FFFC3DCC FF FF FF FF FF FF FF FF     
   4416 FFFC3DD4 FF FF FF FF FF FF FF FF     
   4417 FFFC3DDC FF FF FF FF FF FF FF FF     
   4418 FFFC3DE4 FF FF FF FF FF FF FF FF     
   4419 FFFC3DEC FF FF FF FF FF FF FF FF     
   4420 FFFC3DF4 FF FF FF FF FF FF FF FF     
   4421 FFFC3DFC FF FF FF FF FF FF FF FF     
   4422 FFFC3E04 FF FF FF FF FF FF FF FF     
   4423 FFFC3E0C FF FF FF FF FF FF FF FF     
   4424 FFFC3E14 FF FF FF FF FF FF FF FF     
   4425 FFFC3E1C FF FF FF FF FF FF FF FF     
   4426 FFFC3E24 FF FF FF FF FF FF FF FF     
   4427 FFFC3E2C FF FF FF FF FF FF FF FF     
   4428 FFFC3E34 FF FF FF FF FF FF FF FF     
   4429 FFFC3E3C FF FF FF FF FF FF FF FF     
   4430 FFFC3E44 FF FF FF FF FF FF FF FF     
   4431 FFFC3E4C FF FF FF FF FF FF FF FF     
   4432 FFFC3E54 FF FF FF FF FF FF FF FF     
   4433 FFFC3E5C FF FF FF FF FF FF FF FF     
   4434 FFFC3E64 FF FF FF FF FF FF FF FF     
   4435 FFFC3E6C FF FF FF FF FF FF FF FF     
   4436 FFFC3E74 FF FF FF FF FF FF FF FF     
   4437 FFFC3E7C FF FF FF FF FF FF FF FF     
   4438 FFFC3E84 FF FF FF FF FF FF FF FF     
   4439 FFFC3E8C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 17
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4440 FFFC3E94 FF FF FF FF FF FF FF FF     
   4441 FFFC3E9C FF FF FF FF FF FF FF FF     
   4442 FFFC3EA4 FF FF FF FF FF FF FF FF     
   4443 FFFC3EAC FF FF FF FF FF FF FF FF     
   4444 FFFC3EB4 FF FF FF FF FF FF FF FF     
   4445 FFFC3EBC FF FF FF FF FF FF FF FF     
   4446 FFFC3EC4 FF FF FF FF FF FF FF FF     
   4447 FFFC3ECC FF FF FF FF FF FF FF FF     
   4448 FFFC3ED4 FF FF FF FF FF FF FF FF     
   4449 FFFC3EDC FF FF FF FF FF FF FF FF     
   4450 FFFC3EE4 FF FF FF FF FF FF FF FF     
   4451 FFFC3EEC FF FF FF FF FF FF FF FF     
   4452 FFFC3EF4 FF FF FF FF FF FF FF FF     
   4453 FFFC3EFC FF FF FF FF FF FF FF FF     
   4454 FFFC3F04 FF FF FF FF FF FF FF FF     
   4455 FFFC3F0C FF FF FF FF FF FF FF FF     
   4456 FFFC3F14 FF FF FF FF FF FF FF FF     
   4457 FFFC3F1C FF FF FF FF FF FF FF FF     
   4458 FFFC3F24 FF FF FF FF FF FF FF FF     
   4459 FFFC3F2C FF FF FF FF FF FF FF FF     
   4460 FFFC3F34 FF FF FF FF FF FF FF FF     
   4461 FFFC3F3C FF FF FF FF FF FF FF FF     
   4462 FFFC3F44 FF FF FF FF FF FF FF FF     
   4463 FFFC3F4C FF FF FF FF FF FF FF FF     
   4464 FFFC3F54 FF FF FF FF FF FF FF FF     
   4465 FFFC3F5C FF FF FF FF FF FF FF FF     
   4466 FFFC3F64 FF FF FF FF FF FF FF FF     
   4467 FFFC3F6C FF FF FF FF FF FF FF FF     
   4468 FFFC3F74 FF FF FF FF FF FF FF FF     
   4469 FFFC3F7C FF FF FF FF FF FF FF FF     
   4470 FFFC3F84 FF FF FF FF FF FF FF FF     
   4471 FFFC3F8C FF FF FF FF FF FF FF FF     
   4472 FFFC3F94 FF FF FF FF FF FF FF FF     
   4473 FFFC3F9C FF FF FF FF FF FF FF FF     
   4474 FFFC3FA4 FF FF FF FF FF FF FF FF     
   4475 FFFC3FAC FF FF FF FF FF FF FF FF     
   4476 FFFC3FB4 FF FF FF FF FF FF FF FF     
   4477 FFFC3FBC FF FF FF FF FF FF FF FF     
   4478 FFFC3FC4 FF FF FF FF FF FF FF FF     
   4479 FFFC3FCC FF FF FF FF FF FF FF FF     
   4480 FFFC3FD4 FF FF FF FF FF FF FF FF     
   4481 FFFC3FDC FF FF FF FF FF FF FF FF     
   4482 FFFC3FE4 FF FF FF FF FF FF FF FF     
   4483 FFFC3FEC FF FF FF FF FF FF FF FF     
   4484 FFFC3FF4 FF FF FF FF FF FF FF FF     
   4485 FFFC3FFC FF FF FF FF FF FF FF FF     
   4486 FFFC4004 FF FF FF FF FF FF FF FF     
   4487 FFFC400C FF FF FF FF FF FF FF FF     
   4488 FFFC4014 FF FF FF FF FF FF FF FF     
   4489 FFFC401C FF FF FF FF FF FF FF FF     
   4490 FFFC4024 FF FF FF FF FF FF FF FF     
   4491 FFFC402C FF FF FF FF FF FF FF FF     
   4492 FFFC4034 FF FF FF FF FF FF FF FF     
   4493 FFFC403C FF FF FF FF FF FF FF FF     
   4494 FFFC4044 FF FF FF FF FF FF FF FF     
   4495 FFFC404C FF FF FF FF FF FF FF FF     
   4496 FFFC4054 FF FF FF FF FF FF FF FF     
   4497 FFFC405C FF FF FF FF FF FF FF FF     
   4498 FFFC4064 FF FF FF FF FF FF FF FF     
   4499 FFFC406C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 18
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4500 FFFC4074 FF FF FF FF FF FF FF FF     
   4501 FFFC407C FF FF FF FF FF FF FF FF     
   4502 FFFC4084 FF FF FF FF FF FF FF FF     
   4503 FFFC408C FF FF FF FF FF FF FF FF     
   4504 FFFC4094 FF FF FF FF FF FF FF FF     
   4505 FFFC409C FF FF FF FF FF FF FF FF     
   4506 FFFC40A4 FF FF FF FF FF FF FF FF     
   4507 FFFC40AC FF FF FF FF FF FF FF FF     
   4508 FFFC40B4 FF FF FF FF FF FF FF FF     
   4509 FFFC40BC FF FF FF FF FF FF FF FF     
   4510 FFFC40C4 FF FF FF FF FF FF FF FF     
   4511 FFFC40CC FF FF FF FF FF FF FF FF     
   4512 FFFC40D4 FF FF FF FF FF FF FF FF     
   4513 FFFC40DC FF FF FF FF FF FF FF FF     
   4514 FFFC40E4 FF FF FF FF FF FF FF FF     
   4515 FFFC40EC FF FF FF FF FF FF FF FF     
   4516 FFFC40F4 FF FF FF FF FF FF FF FF     
   4517 FFFC40FC FF FF FF FF FF FF FF FF     
   4518 FFFC4104 FF FF FF FF FF FF FF FF     
   4519 FFFC410C FF FF FF FF FF FF FF FF     
   4520 FFFC4114 FF FF FF FF FF FF FF FF     
   4521 FFFC411C FF FF FF FF FF FF FF FF     
   4522 FFFC4124 FF FF FF FF FF FF FF FF     
   4523 FFFC412C FF FF FF FF FF FF FF FF     
   4524 FFFC4134 FF FF FF FF FF FF FF FF     
   4525 FFFC413C FF FF FF FF FF FF FF FF     
   4526 FFFC4144 FF FF FF FF FF FF FF FF     
   4527 FFFC414C FF FF FF FF FF FF FF FF     
   4528 FFFC4154 FF FF FF FF FF FF FF FF     
   4529 FFFC415C FF FF FF FF FF FF FF FF     
   4530 FFFC4164 FF FF FF FF FF FF FF FF     
   4531 FFFC416C FF FF FF FF FF FF FF FF     
   4532 FFFC4174 FF FF FF FF FF FF FF FF     
   4533 FFFC417C FF FF FF FF FF FF FF FF     
   4534 FFFC4184 FF FF FF FF FF FF FF FF     
   4535 FFFC418C FF FF FF FF FF FF FF FF     
   4536 FFFC4194 FF FF FF FF FF FF FF FF     
   4537 FFFC419C FF FF FF FF FF FF FF FF     
   4538 FFFC41A4 FF FF FF FF FF FF FF FF     
   4539 FFFC41AC FF FF FF FF FF FF FF FF     
   4540 FFFC41B4 FF FF FF FF FF FF FF FF     
   4541 FFFC41BC FF FF FF FF FF FF FF FF     
   4542 FFFC41C4 FF FF FF FF FF FF FF FF     
   4543 FFFC41CC FF FF FF FF FF FF FF FF     
   4544 FFFC41D4 FF FF FF FF FF FF FF FF     
   4545 FFFC41DC FF FF FF FF FF FF FF FF     
   4546 FFFC41E4 FF FF FF FF FF FF FF FF     
   4547 FFFC41EC FF FF FF FF FF FF FF FF     
   4548 FFFC41F4 FF FF FF FF FF FF FF FF     
   4549 FFFC41FC FF FF FF FF FF FF FF FF     
   4550 FFFC4204 FF FF FF FF FF FF FF FF     
   4551 FFFC420C FF FF FF FF FF FF FF FF     
   4552 FFFC4214 FF FF FF FF FF FF FF FF     
   4553 FFFC421C FF FF FF FF FF FF FF FF     
   4554 FFFC4224 FF FF FF FF FF FF FF FF     
   4555 FFFC422C FF FF FF FF FF FF FF FF     
   4556 FFFC4234 FF FF FF FF FF FF FF FF     
   4557 FFFC423C FF FF FF FF FF FF FF FF     
   4558 FFFC4244 FF FF FF FF FF FF FF FF     
   4559 FFFC424C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 19
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4560 FFFC4254 FF FF FF FF FF FF FF FF     
   4561 FFFC425C FF FF FF FF FF FF FF FF     
   4562 FFFC4264 FF FF FF FF FF FF FF FF     
   4563 FFFC426C FF FF FF FF FF FF FF FF     
   4564 FFFC4274 FF FF FF FF FF FF FF FF     
   4565 FFFC427C FF FF FF FF FF FF FF FF     
   4566 FFFC4284 FF FF FF FF FF FF FF FF     
   4567 FFFC428C FF FF FF FF FF FF FF FF     
   4568 FFFC4294 FF FF FF FF FF FF FF FF     
   4569 FFFC429C FF FF FF FF FF FF FF FF     
   4570 FFFC42A4 FF FF FF FF FF FF FF FF     
   4571 FFFC42AC FF FF FF FF FF FF FF FF     
   4572 FFFC42B4 FF FF FF FF FF FF FF FF     
   4573 FFFC42BC FF FF FF FF FF FF FF FF     
   4574 FFFC42C4 FF FF FF FF FF FF FF FF     
   4575 FFFC42CC FF FF FF FF FF FF FF FF     
   4576 FFFC42D4 FF FF FF FF FF FF FF FF     
   4577 FFFC42DC FF FF FF FF FF FF FF FF     
   4578 FFFC42E4 FF FF FF FF FF FF FF FF     
   4579 FFFC42EC FF FF FF FF FF FF FF FF     
   4580 FFFC42F4 FF FF FF FF FF FF FF FF     
   4581 FFFC42FC FF FF FF FF FF FF FF FF     
   4582 FFFC4304 FF FF FF FF FF FF FF FF     
   4583 FFFC430C FF FF FF FF FF FF FF FF     
   4584 FFFC4314 FF FF FF FF FF FF FF FF     
   4585 FFFC431C FF FF FF FF FF FF FF FF     
   4586 FFFC4324 FF FF FF FF FF FF FF FF     
   4587 FFFC432C FF FF FF FF FF FF FF FF     
   4588 FFFC4334 FF FF FF FF FF FF FF FF     
   4589 FFFC433C FF FF FF FF FF FF FF FF     
   4590 FFFC4344 FF FF FF FF FF FF FF FF     
   4591 FFFC434C FF FF FF FF FF FF FF FF     
   4592 FFFC4354 FF FF FF FF FF FF FF FF     
   4593 FFFC435C FF FF FF FF FF FF FF FF     
   4594 FFFC4364 FF FF FF FF FF FF FF FF     
   4595 FFFC436C FF FF FF FF FF FF FF FF     
   4596 FFFC4374 FF FF FF FF FF FF FF FF     
   4597 FFFC437C FF FF FF FF FF FF FF FF     
   4598 FFFC4384 FF FF FF FF FF FF FF FF     
   4599 FFFC438C FF FF FF FF FF FF FF FF     
   4600 FFFC4394 FF FF FF FF FF FF FF FF     
   4601 FFFC439C FF FF FF FF FF FF FF FF     
   4602 FFFC43A4 FF FF FF FF FF FF FF FF     
   4603 FFFC43AC FF FF FF FF FF FF FF FF     
   4604 FFFC43B4 FF FF FF FF FF FF FF FF     
   4605 FFFC43BC FF FF FF FF FF FF FF FF     
   4606 FFFC43C4 FF FF FF FF FF FF FF FF     
   4607 FFFC43CC FF FF FF FF FF FF FF FF     
   4608 FFFC43D4 FF FF FF FF FF FF FF FF     
   4609 FFFC43DC FF FF FF FF FF FF FF FF     
   4610 FFFC43E4 FF FF FF FF FF FF FF FF     
   4611 FFFC43EC FF FF FF FF FF FF FF FF     
   4612 FFFC43F4 FF FF FF FF FF FF FF FF     
   4613 FFFC43FC FF FF FF FF FF FF FF FF     
   4614 FFFC4404 FF FF FF FF FF FF FF FF     
   4615 FFFC440C FF FF FF FF FF FF FF FF     
   4616 FFFC4414 FF FF FF FF FF FF FF FF     
   4617 FFFC441C FF FF FF FF FF FF FF FF     
   4618 FFFC4424 FF FF FF FF FF FF FF FF     
   4619 FFFC442C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 20
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4620 FFFC4434 FF FF FF FF FF FF FF FF     
   4621 FFFC443C FF FF FF FF FF FF FF FF     
   4622 FFFC4444 FF FF FF FF FF FF FF FF     
   4623 FFFC444C FF FF FF FF FF FF FF FF     
   4624 FFFC4454 FF FF FF FF FF FF FF FF     
   4625 FFFC445C FF FF FF FF FF FF FF FF     
   4626 FFFC4464 FF FF FF FF FF FF FF FF     
   4627 FFFC446C FF FF FF FF FF FF FF FF     
   4628 FFFC4474 FF FF FF FF FF FF FF FF     
   4629 FFFC447C FF FF FF FF FF FF FF FF     
   4630 FFFC4484 FF FF FF FF FF FF FF FF     
   4631 FFFC448C FF FF FF FF FF FF FF FF     
   4632 FFFC4494 FF FF FF FF FF FF FF FF     
   4633 FFFC449C FF FF FF FF FF FF FF FF     
   4634 FFFC44A4 FF FF FF FF FF FF FF FF     
   4635 FFFC44AC FF FF FF FF FF FF FF FF     
   4636 FFFC44B4 FF FF FF FF FF FF FF FF     
   4637 FFFC44BC FF FF FF FF FF FF FF FF     
   4638 FFFC44C4 FF FF FF FF FF FF FF FF     
   4639 FFFC44CC FF FF FF FF FF FF FF FF     
   4640 FFFC44D4 FF FF FF FF FF FF FF FF     
   4641 FFFC44DC FF FF FF FF FF FF FF FF     
   4642 FFFC44E4 FF FF FF FF FF FF FF FF     
   4643 FFFC44EC FF FF FF FF FF FF FF FF     
   4644 FFFC44F4 FF FF FF FF FF FF FF FF     
   4645 FFFC44FC FF FF FF FF FF FF FF FF     
   4646 FFFC4504 FF FF FF FF FF FF FF FF     
   4647 FFFC450C FF FF FF FF FF FF FF FF     
   4648 FFFC4514 FF FF FF FF FF FF FF FF     
   4649 FFFC451C FF FF FF FF FF FF FF FF     
   4650 FFFC4524 FF FF FF FF FF FF FF FF     
   4651 FFFC452C FF FF FF FF FF FF FF FF     
   4652 FFFC4534 FF FF FF FF FF FF FF FF     
   4653 FFFC453C FF FF FF FF FF FF FF FF     
   4654 FFFC4544 FF FF FF FF FF FF FF FF     
   4655 FFFC454C FF FF FF FF FF FF FF FF     
   4656 FFFC4554 FF FF FF FF FF FF FF FF     
   4657 FFFC455C FF FF FF FF FF FF FF FF     
   4658 FFFC4564 FF FF FF FF FF FF FF FF     
   4659 FFFC456C FF FF FF FF FF FF FF FF     
   4660 FFFC4574 FF FF FF FF FF FF FF FF     
   4661 FFFC457C FF FF FF FF FF FF FF FF     
   4662 FFFC4584 FF FF FF FF FF FF FF FF     
   4663 FFFC458C FF FF FF FF FF FF FF FF     
   4664 FFFC4594 FF FF FF FF FF FF FF FF     
   4665 FFFC459C FF FF FF FF FF FF FF FF     
   4666 FFFC45A4 FF FF FF FF FF FF FF FF     
   4667 FFFC45AC FF FF FF FF FF FF FF FF     
   4668 FFFC45B4 FF FF FF FF FF FF FF FF     
   4669 FFFC45BC FF FF FF FF FF FF FF FF     
   4670 FFFC45C4 FF FF FF FF FF FF FF FF     
   4671 FFFC45CC FF FF FF FF FF FF FF FF     
   4672 FFFC45D4 FF FF FF FF FF FF FF FF     
   4673 FFFC45DC FF FF FF FF FF FF FF FF     
   4674 FFFC45E4 FF FF FF FF FF FF FF FF     
   4675 FFFC45EC FF FF FF FF FF FF FF FF     
   4676 FFFC45F4 FF FF FF FF FF FF FF FF     
   4677 FFFC45FC FF FF FF FF FF FF FF FF     
   4678 FFFC4604 FF FF FF FF FF FF FF FF     
   4679 FFFC460C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 21
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4680 FFFC4614 FF FF FF FF FF FF FF FF     
   4681 FFFC461C FF FF FF FF FF FF FF FF     
   4682 FFFC4624 FF FF FF FF FF FF FF FF     
   4683 FFFC462C FF FF FF FF FF FF FF FF     
   4684 FFFC4634 FF FF FF FF FF FF FF FF     
   4685 FFFC463C FF FF FF FF FF FF FF FF     
   4686 FFFC4644 FF FF FF FF FF FF FF FF     
   4687 FFFC464C FF FF FF FF FF FF FF FF     
   4688 FFFC4654 FF FF FF FF FF FF FF FF     
   4689 FFFC465C FF FF FF FF FF FF FF FF     
   4690 FFFC4664 FF FF FF FF FF FF FF FF     
   4691 FFFC466C FF FF FF FF FF FF FF FF     
   4692 FFFC4674 FF FF FF FF FF FF FF FF     
   4693 FFFC467C FF FF FF FF FF FF FF FF     
   4694 FFFC4684 FF FF FF FF FF FF FF FF     
   4695 FFFC468C FF FF FF FF FF FF FF FF     
   4696 FFFC4694 FF FF FF FF FF FF FF FF     
   4697 FFFC469C FF FF FF FF FF FF FF FF     
   4698 FFFC46A4 FF FF FF FF FF FF FF FF     
   4699 FFFC46AC FF FF FF FF FF FF FF FF     
   4700 FFFC46B4 FF FF FF FF FF FF FF FF     
   4701 FFFC46BC FF FF FF FF FF FF FF FF     
   4702 FFFC46C4 FF FF FF FF FF FF FF FF     
   4703 FFFC46CC FF FF FF FF FF FF FF FF     
   4704 FFFC46D4 FF FF FF FF FF FF FF FF     
   4705 FFFC46DC FF FF FF FF FF FF FF FF     
   4706 FFFC46E4 FF FF FF FF FF FF FF FF     
   4707 FFFC46EC FF FF FF FF FF FF FF FF     
   4708 FFFC46F4 FF FF FF FF FF FF FF FF     
   4709 FFFC46FC FF FF FF FF FF FF FF FF     
   4710 FFFC4704 FF FF FF FF FF FF FF FF     
   4711 FFFC470C FF FF FF FF FF FF FF FF     
   4712 FFFC4714 FF FF FF FF FF FF FF FF     
   4713 FFFC471C FF FF FF FF FF FF FF FF     
   4714 FFFC4724 FF FF FF FF FF FF FF FF     
   4715 FFFC472C FF FF FF FF FF FF FF FF     
   4716 FFFC4734 FF FF FF FF FF FF FF FF     
   4717 FFFC473C FF FF FF FF FF FF FF FF     
   4718 FFFC4744 FF FF FF FF FF FF FF FF     
   4719 FFFC474C FF FF FF FF FF FF FF FF     
   4720 FFFC4754 FF FF FF FF FF FF FF FF     
   4721 FFFC475C FF FF FF FF FF FF FF FF     
   4722 FFFC4764 FF FF FF FF FF FF FF FF     
   4723 FFFC476C FF FF FF FF FF FF FF FF     
   4724 FFFC4774 FF FF FF FF FF FF FF FF     
   4725 FFFC477C FF FF FF FF FF FF FF FF     
   4726 FFFC4784 FF FF FF FF FF FF FF FF     
   4727 FFFC478C FF FF FF FF FF FF FF FF     
   4728 FFFC4794 FF FF FF FF FF FF FF FF     
   4729 FFFC479C FF FF FF FF FF FF FF FF     
   4730 FFFC47A4 FF FF FF FF FF FF FF FF     
   4731 FFFC47AC FF FF FF FF FF FF FF FF     
   4732 FFFC47B4 FF FF FF FF FF FF FF FF     
   4733 FFFC47BC FF FF FF FF FF FF FF FF     
   4734 FFFC47C4 FF FF FF FF FF FF FF FF     
   4735 FFFC47CC FF FF FF FF FF FF FF FF     
   4736 FFFC47D4 FF FF FF FF FF FF FF FF     
   4737 FFFC47DC FF FF FF FF FF FF FF FF     
   4738 FFFC47E4 FF FF FF FF FF FF FF FF     
   4739 FFFC47EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 22
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4740 FFFC47F4 FF FF FF FF FF FF FF FF     
   4741 FFFC47FC FF FF FF FF FF FF FF FF     
   4742 FFFC4804 FF FF FF FF FF FF FF FF     
   4743 FFFC480C FF FF FF FF FF FF FF FF     
   4744 FFFC4814 FF FF FF FF FF FF FF FF     
   4745 FFFC481C FF FF FF FF FF FF FF FF     
   4746 FFFC4824 FF FF FF FF FF FF FF FF     
   4747 FFFC482C FF FF FF FF FF FF FF FF     
   4748 FFFC4834 FF FF FF FF FF FF FF FF     
   4749 FFFC483C FF FF FF FF FF FF FF FF     
   4750 FFFC4844 FF FF FF FF FF FF FF FF     
   4751 FFFC484C FF FF FF FF FF FF FF FF     
   4752 FFFC4854 FF FF FF FF FF FF FF FF     
   4753 FFFC485C FF FF FF FF FF FF FF FF     
   4754 FFFC4864 FF FF FF FF FF FF FF FF     
   4755 FFFC486C FF FF FF FF FF FF FF FF     
   4756 FFFC4874 FF FF FF FF FF FF FF FF     
   4757 FFFC487C FF FF FF FF FF FF FF FF     
   4758 FFFC4884 FF FF FF FF FF FF FF FF     
   4759 FFFC488C FF FF FF FF FF FF FF FF     
   4760 FFFC4894 FF FF FF FF FF FF FF FF     
   4761 FFFC489C FF FF FF FF FF FF FF FF     
   4762 FFFC48A4 FF FF FF FF FF FF FF FF     
   4763 FFFC48AC FF FF FF FF FF FF FF FF     
   4764 FFFC48B4 FF FF FF FF FF FF FF FF     
   4765 FFFC48BC FF FF FF FF FF FF FF FF     
   4766 FFFC48C4 FF FF FF FF FF FF FF FF     
   4767 FFFC48CC FF FF FF FF FF FF FF FF     
   4768 FFFC48D4 FF FF FF FF FF FF FF FF     
   4769 FFFC48DC FF FF FF FF FF FF FF FF     
   4770 FFFC48E4 FF FF FF FF FF FF FF FF     
   4771 FFFC48EC FF FF FF FF FF FF FF FF     
   4772 FFFC48F4 FF FF FF FF FF FF FF FF     
   4773 FFFC48FC FF FF FF FF FF FF FF FF     
   4774 FFFC4904 FF FF FF FF FF FF FF FF     
   4775 FFFC490C FF FF FF FF FF FF FF FF     
   4776 FFFC4914 FF FF FF FF FF FF FF FF     
   4777 FFFC491C FF FF FF FF FF FF FF FF     
   4778 FFFC4924 FF FF FF FF FF FF FF FF     
   4779 FFFC492C FF FF FF FF FF FF FF FF     
   4780 FFFC4934 FF FF FF FF FF FF FF FF     
   4781 FFFC493C FF FF FF FF FF FF FF FF     
   4782 FFFC4944 FF FF FF FF FF FF FF FF     
   4783 FFFC494C FF FF FF FF FF FF FF FF     
   4784 FFFC4954 FF FF FF FF FF FF FF FF     
   4785 FFFC495C FF FF FF FF FF FF FF FF     
   4786 FFFC4964 FF FF FF FF FF FF FF FF     
   4787 FFFC496C FF FF FF FF FF FF FF FF     
   4788 FFFC4974 FF FF FF FF FF FF FF FF     
   4789 FFFC497C FF FF FF FF FF FF FF FF     
   4790 FFFC4984 FF FF FF FF FF FF FF FF     
   4791 FFFC498C FF FF FF FF FF FF FF FF     
   4792 FFFC4994 FF FF FF FF FF FF FF FF     
   4793 FFFC499C FF FF FF FF FF FF FF FF     
   4794 FFFC49A4 FF FF FF FF FF FF FF FF     
   4795 FFFC49AC FF FF FF FF FF FF FF FF     
   4796 FFFC49B4 FF FF FF FF FF FF FF FF     
   4797 FFFC49BC FF FF FF FF FF FF FF FF     
   4798 FFFC49C4 FF FF FF FF FF FF FF FF     
   4799 FFFC49CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 23
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4800 FFFC49D4 FF FF FF FF FF FF FF FF     
   4801 FFFC49DC FF FF FF FF FF FF FF FF     
   4802 FFFC49E4 FF FF FF FF FF FF FF FF     
   4803 FFFC49EC FF FF FF FF FF FF FF FF     
   4804 FFFC49F4 FF FF FF FF FF FF FF FF     
   4805 FFFC49FC FF FF FF FF FF FF FF FF     
   4806 FFFC4A04 FF FF FF FF FF FF FF FF     
   4807 FFFC4A0C FF FF FF FF FF FF FF FF     
   4808 FFFC4A14 FF FF FF FF FF FF FF FF     
   4809 FFFC4A1C FF FF FF FF FF FF FF FF     
   4810 FFFC4A24 FF FF FF FF FF FF FF FF     
   4811 FFFC4A2C FF FF FF FF FF FF FF FF     
   4812 FFFC4A34 FF FF FF FF FF FF FF FF     
   4813 FFFC4A3C FF FF FF FF FF FF FF FF     
   4814 FFFC4A44 FF FF FF FF FF FF FF FF     
   4815 FFFC4A4C FF FF FF FF FF FF FF FF     
   4816 FFFC4A54 FF FF FF FF FF FF FF FF     
   4817 FFFC4A5C FF FF FF FF FF FF FF FF     
   4818 FFFC4A64 FF FF FF FF FF FF FF FF     
   4819 FFFC4A6C FF FF FF FF FF FF FF FF     
   4820 FFFC4A74 FF FF FF FF FF FF FF FF     
   4821 FFFC4A7C FF FF FF FF FF FF FF FF     
   4822 FFFC4A84 FF FF FF FF FF FF FF FF     
   4823 FFFC4A8C FF FF FF FF FF FF FF FF     
   4824 FFFC4A94 FF FF FF FF FF FF FF FF     
   4825 FFFC4A9C FF FF FF FF FF FF FF FF     
   4826 FFFC4AA4 FF FF FF FF FF FF FF FF     
   4827 FFFC4AAC FF FF FF FF FF FF FF FF     
   4828 FFFC4AB4 FF FF FF FF FF FF FF FF     
   4829 FFFC4ABC FF FF FF FF FF FF FF FF     
   4830 FFFC4AC4 FF FF FF FF FF FF FF FF     
   4831 FFFC4ACC FF FF FF FF FF FF FF FF     
   4832 FFFC4AD4 FF FF FF FF FF FF FF FF     
   4833 FFFC4ADC FF FF FF FF FF FF FF FF     
   4834 FFFC4AE4 FF FF FF FF FF FF FF FF     
   4835 FFFC4AEC FF FF FF FF FF FF FF FF     
   4836 FFFC4AF4 FF FF FF FF FF FF FF FF     
   4837 FFFC4AFC FF FF FF FF FF FF FF FF     
   4838 FFFC4B04 FF FF FF FF FF FF FF FF     
   4839 FFFC4B0C FF FF FF FF FF FF FF FF     
   4840 FFFC4B14 FF FF FF FF FF FF FF FF     
   4841 FFFC4B1C FF FF FF FF FF FF FF FF     
   4842 FFFC4B24 FF FF FF FF FF FF FF FF     
   4843 FFFC4B2C FF FF FF FF FF FF FF FF     
   4844 FFFC4B34 FF FF FF FF FF FF FF FF     
   4845 FFFC4B3C FF FF FF FF FF FF FF FF     
   4846 FFFC4B44 FF FF FF FF FF FF FF FF     
   4847 FFFC4B4C FF FF FF FF FF FF FF FF     
   4848 FFFC4B54 FF FF FF FF FF FF FF FF     
   4849 FFFC4B5C FF FF FF FF FF FF FF FF     
   4850 FFFC4B64 FF FF FF FF FF FF FF FF     
   4851 FFFC4B6C FF FF FF FF FF FF FF FF     
   4852 FFFC4B74 FF FF FF FF FF FF FF FF     
   4853 FFFC4B7C FF FF FF FF FF FF FF FF     
   4854 FFFC4B84 FF FF FF FF FF FF FF FF     
   4855 FFFC4B8C FF FF FF FF FF FF FF FF     
   4856 FFFC4B94 FF FF FF FF FF FF FF FF     
   4857 FFFC4B9C FF FF FF FF FF FF FF FF     
   4858 FFFC4BA4 FF FF FF FF FF FF FF FF     
   4859 FFFC4BAC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 24
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4860 FFFC4BB4 FF FF FF FF FF FF FF FF     
   4861 FFFC4BBC FF FF FF FF FF FF FF FF     
   4862 FFFC4BC4 FF FF FF FF FF FF FF FF     
   4863 FFFC4BCC FF FF FF FF FF FF FF FF     
   4864 FFFC4BD4 FF FF FF FF FF FF FF FF     
   4865 FFFC4BDC FF FF FF FF FF FF FF FF     
   4866 FFFC4BE4 FF FF FF FF FF FF FF FF     
   4867 FFFC4BEC FF FF FF FF FF FF FF FF     
   4868 FFFC4BF4 FF FF FF FF FF FF FF FF     
   4869 FFFC4BFC FF FF FF FF FF FF FF FF     
   4870 FFFC4C04 FF FF FF FF FF FF FF FF     
   4871 FFFC4C0C FF FF FF FF FF FF FF FF     
   4872 FFFC4C14 FF FF FF FF FF FF FF FF     
   4873 FFFC4C1C FF FF FF FF FF FF FF FF     
   4874 FFFC4C24 FF FF FF FF FF FF FF FF     
   4875 FFFC4C2C FF FF FF FF FF FF FF FF     
   4876 FFFC4C34 FF FF FF FF FF FF FF FF     
   4877 FFFC4C3C FF FF FF FF FF FF FF FF     
   4878 FFFC4C44 FF FF FF FF FF FF FF FF     
   4879 FFFC4C4C FF FF FF FF FF FF FF FF     
   4880 FFFC4C54 FF FF FF FF FF FF FF FF     
   4881 FFFC4C5C FF FF FF FF FF FF FF FF     
   4882 FFFC4C64 FF FF FF FF FF FF FF FF     
   4883 FFFC4C6C FF FF FF FF FF FF FF FF     
   4884 FFFC4C74 FF FF FF FF FF FF FF FF     
   4885 FFFC4C7C FF FF FF FF FF FF FF FF     
   4886 FFFC4C84 FF FF FF FF FF FF FF FF     
   4887 FFFC4C8C FF FF FF FF FF FF FF FF     
   4888 FFFC4C94 FF FF FF FF FF FF FF FF     
   4889 FFFC4C9C FF FF FF FF FF FF FF FF     
   4890 FFFC4CA4 FF FF FF FF FF FF FF FF     
   4891 FFFC4CAC FF FF FF FF FF FF FF FF     
   4892 FFFC4CB4 FF FF FF FF FF FF FF FF     
   4893 FFFC4CBC FF FF FF FF FF FF FF FF     
   4894 FFFC4CC4 FF FF FF FF FF FF FF FF     
   4895 FFFC4CCC FF FF FF FF FF FF FF FF     
   4896 FFFC4CD4 FF FF FF FF FF FF FF FF     
   4897 FFFC4CDC FF FF FF FF FF FF FF FF     
   4898 FFFC4CE4 FF FF FF FF FF FF FF FF     
   4899 FFFC4CEC FF FF FF FF FF FF FF FF     
   4900 FFFC4CF4 FF FF FF FF FF FF FF FF     
   4901 FFFC4CFC FF FF FF FF FF FF FF FF     
   4902 FFFC4D04 FF FF FF FF FF FF FF FF     
   4903 FFFC4D0C FF FF FF FF FF FF FF FF     
   4904 FFFC4D14 FF FF FF FF FF FF FF FF     
   4905 FFFC4D1C FF FF FF FF FF FF FF FF     
   4906 FFFC4D24 FF FF FF FF FF FF FF FF     
   4907 FFFC4D2C FF FF FF FF FF FF FF FF     
   4908 FFFC4D34 FF FF FF FF FF FF FF FF     
   4909 FFFC4D3C FF FF FF FF FF FF FF FF     
   4910 FFFC4D44 FF FF FF FF FF FF FF FF     
   4911 FFFC4D4C FF FF FF FF FF FF FF FF     
   4912 FFFC4D54 FF FF FF FF FF FF FF FF     
   4913 FFFC4D5C FF FF FF FF FF FF FF FF     
   4914 FFFC4D64 FF FF FF FF FF FF FF FF     
   4915 FFFC4D6C FF FF FF FF FF FF FF FF     
   4916 FFFC4D74 FF FF FF FF FF FF FF FF     
   4917 FFFC4D7C FF FF FF FF FF FF FF FF     
   4918 FFFC4D84 FF FF FF FF FF FF FF FF     
   4919 FFFC4D8C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 25
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4920 FFFC4D94 FF FF FF FF FF FF FF FF     
   4921 FFFC4D9C FF FF FF FF FF FF FF FF     
   4922 FFFC4DA4 FF FF FF FF FF FF FF FF     
   4923 FFFC4DAC FF FF FF FF FF FF FF FF     
   4924 FFFC4DB4 FF FF FF FF FF FF FF FF     
   4925 FFFC4DBC FF FF FF FF FF FF FF FF     
   4926 FFFC4DC4 FF FF FF FF FF FF FF FF     
   4927 FFFC4DCC FF FF FF FF FF FF FF FF     
   4928 FFFC4DD4 FF FF FF FF FF FF FF FF     
   4929 FFFC4DDC FF FF FF FF FF FF FF FF     
   4930 FFFC4DE4 FF FF FF FF FF FF FF FF     
   4931 FFFC4DEC FF FF FF FF FF FF FF FF     
   4932 FFFC4DF4 FF FF FF FF FF FF FF FF     
   4933 FFFC4DFC FF FF FF FF FF FF FF FF     
   4934 FFFC4E04 FF FF FF FF FF FF FF FF     
   4935 FFFC4E0C FF FF FF FF FF FF FF FF     
   4936 FFFC4E14 FF FF FF FF FF FF FF FF     
   4937 FFFC4E1C FF FF FF FF FF FF FF FF     
   4938 FFFC4E24 FF FF FF FF FF FF FF FF     
   4939 FFFC4E2C FF FF FF FF FF FF FF FF     
   4940 FFFC4E34 FF FF FF FF FF FF FF FF     
   4941 FFFC4E3C FF FF FF FF FF FF FF FF     
   4942 FFFC4E44 FF FF FF FF FF FF FF FF     
   4943 FFFC4E4C FF FF FF FF FF FF FF FF     
   4944 FFFC4E54 FF FF FF FF FF FF FF FF     
   4945 FFFC4E5C FF FF FF FF FF FF FF FF     
   4946 FFFC4E64 FF FF FF FF FF FF FF FF     
   4947 FFFC4E6C FF FF FF FF FF FF FF FF     
   4948 FFFC4E74 FF FF FF FF FF FF FF FF     
   4949 FFFC4E7C FF FF FF FF FF FF FF FF     
   4950 FFFC4E84 FF FF FF FF FF FF FF FF     
   4951 FFFC4E8C FF FF FF FF FF FF FF FF     
   4952 FFFC4E94 FF FF FF FF FF FF FF FF     
   4953 FFFC4E9C FF FF FF FF FF FF FF FF     
   4954 FFFC4EA4 FF FF FF FF FF FF FF FF     
   4955 FFFC4EAC FF FF FF FF FF FF FF FF     
   4956 FFFC4EB4 FF FF FF FF FF FF FF FF     
   4957 FFFC4EBC FF FF FF FF FF FF FF FF     
   4958 FFFC4EC4 FF FF FF FF FF FF FF FF     
   4959 FFFC4ECC FF FF FF FF FF FF FF FF     
   4960 FFFC4ED4 FF FF FF FF FF FF FF FF     
   4961 FFFC4EDC FF FF FF FF FF FF FF FF     
   4962 FFFC4EE4 FF FF FF FF FF FF FF FF     
   4963 FFFC4EEC FF FF FF FF FF FF FF FF     
   4964 FFFC4EF4 FF FF FF FF FF FF FF FF     
   4965 FFFC4EFC FF FF FF FF FF FF FF FF     
   4966 FFFC4F04 FF FF FF FF FF FF FF FF     
   4967 FFFC4F0C FF FF FF FF FF FF FF FF     
   4968 FFFC4F14 FF FF FF FF FF FF FF FF     
   4969 FFFC4F1C FF FF FF FF FF FF FF FF     
   4970 FFFC4F24 FF FF FF FF FF FF FF FF     
   4971 FFFC4F2C FF FF FF FF FF FF FF FF     
   4972 FFFC4F34 FF FF FF FF FF FF FF FF     
   4973 FFFC4F3C FF FF FF FF FF FF FF FF     
   4974 FFFC4F44 FF FF FF FF FF FF FF FF     
   4975 FFFC4F4C FF FF FF FF FF FF FF FF     
   4976 FFFC4F54 FF FF FF FF FF FF FF FF     
   4977 FFFC4F5C FF FF FF FF FF FF FF FF     
   4978 FFFC4F64 FF FF FF FF FF FF FF FF     
   4979 FFFC4F6C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 26
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4980 FFFC4F74 FF FF FF FF FF FF FF FF     
   4981 FFFC4F7C FF FF FF FF FF FF FF FF     
   4982 FFFC4F84 FF FF FF FF FF FF FF FF     
   4983 FFFC4F8C FF FF FF FF FF FF FF FF     
   4984 FFFC4F94 FF FF FF FF FF FF FF FF     
   4985 FFFC4F9C FF FF FF FF FF FF FF FF     
   4986 FFFC4FA4 FF FF FF FF FF FF FF FF     
   4987 FFFC4FAC FF FF FF FF FF FF FF FF     
   4988 FFFC4FB4 FF FF FF FF FF FF FF FF     
   4989 FFFC4FBC FF FF FF FF FF FF FF FF     
   4990 FFFC4FC4 FF FF FF FF FF FF FF FF     
   4991 FFFC4FCC FF FF FF FF FF FF FF FF     
   4992 FFFC4FD4 FF FF FF FF FF FF FF FF     
   4993 FFFC4FDC FF FF FF FF FF FF FF FF     
   4994 FFFC4FE4 FF FF FF FF FF FF FF FF     
   4995 FFFC4FEC FF FF FF FF FF FF FF FF     
   4996 FFFC4FF4 FF FF FF FF FF FF FF FF     
   4997 FFFC4FFC FF FF FF FF FF FF FF FF     
   4998 FFFC5004 FF FF FF FF FF FF FF FF     
   4999 FFFC500C FF FF FF FF FF FF FF FF     
   5000 FFFC5014 FF FF FF FF FF FF FF FF     
   5001 FFFC501C FF FF FF FF FF FF FF FF     
   5002 FFFC5024 FF FF FF FF FF FF FF FF     
   5003 FFFC502C FF FF FF FF FF FF FF FF     
   5004 FFFC5034 FF FF FF FF FF FF FF FF     
   5005 FFFC503C FF FF FF FF FF FF FF FF     
   5006 FFFC5044 FF FF FF FF FF FF FF FF     
   5007 FFFC504C FF FF FF FF FF FF FF FF     
   5008 FFFC5054 FF FF FF FF FF FF FF FF     
   5009 FFFC505C FF FF FF FF FF FF FF FF     
   5010 FFFC5064 FF FF FF FF FF FF FF FF     
   5011 FFFC506C FF FF FF FF FF FF FF FF     
   5012 FFFC5074 FF FF FF FF FF FF FF FF     
   5013 FFFC507C FF FF FF FF FF FF FF FF     
   5014 FFFC5084 FF FF FF FF FF FF FF FF     
   5015 FFFC508C FF FF FF FF FF FF FF FF     
   5016 FFFC5094 FF FF FF FF FF FF FF FF     
   5017 FFFC509C FF FF FF FF FF FF FF FF     
   5018 FFFC50A4 FF FF FF FF FF FF FF FF     
   5019 FFFC50AC FF FF FF FF FF FF FF FF     
   5020 FFFC50B4 FF FF FF FF FF FF FF FF     
   5021 FFFC50BC FF FF FF FF FF FF FF FF     
   5022 FFFC50C4 FF FF FF FF FF FF FF FF     
   5023 FFFC50CC FF FF FF FF FF FF FF FF     
   5024 FFFC50D4 FF FF FF FF FF FF FF FF     
   5025 FFFC50DC FF FF FF FF FF FF FF FF     
   5026 FFFC50E4 FF FF FF FF FF FF FF FF     
   5027 FFFC50EC FF FF FF FF FF FF FF FF     
   5028 FFFC50F4 FF FF FF FF FF FF FF FF     
   5029 FFFC50FC FF FF FF FF FF FF FF FF     
   5030 FFFC5104 FF FF FF FF FF FF FF FF     
   5031 FFFC510C FF FF FF FF FF FF FF FF     
   5032 FFFC5114 FF FF FF FF FF FF FF FF     
   5033 FFFC511C FF FF FF FF FF FF FF FF     
   5034 FFFC5124 FF FF FF FF FF FF FF FF     
   5035 FFFC512C FF FF FF FF FF FF FF FF     
   5036 FFFC5134 FF FF FF FF FF FF FF FF     
   5037 FFFC513C FF FF FF FF FF FF FF FF     
   5038 FFFC5144 FF FF FF FF FF FF FF FF     
   5039 FFFC514C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 27
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5040 FFFC5154 FF FF FF FF FF FF FF FF     
   5041 FFFC515C FF FF FF FF FF FF FF FF     
   5042 FFFC5164 FF FF FF FF FF FF FF FF     
   5043 FFFC516C FF FF FF FF FF FF FF FF     
   5044 FFFC5174 FF FF FF FF FF FF FF FF     
   5045 FFFC517C FF FF FF FF FF FF FF FF     
   5046 FFFC5184 FF FF FF FF FF FF FF FF     
   5047 FFFC518C FF FF FF FF FF FF FF FF     
   5048 FFFC5194 FF FF FF FF FF FF FF FF     
   5049 FFFC519C FF FF FF FF FF FF FF FF     
   5050 FFFC51A4 FF FF FF FF FF FF FF FF     
   5051 FFFC51AC FF FF FF FF FF FF FF FF     
   5052 FFFC51B4 FF FF FF FF FF FF FF FF     
   5053 FFFC51BC FF FF FF FF FF FF FF FF     
   5054 FFFC51C4 FF FF FF FF FF FF FF FF     
   5055 FFFC51CC FF FF FF FF FF FF FF FF     
   5056 FFFC51D4 FF FF FF FF FF FF FF FF     
   5057 FFFC51DC FF FF FF FF FF FF FF FF     
   5058 FFFC51E4 FF FF FF FF FF FF FF FF     
   5059 FFFC51EC FF FF FF FF FF FF FF FF     
   5060 FFFC51F4 FF FF FF FF FF FF FF FF     
   5061 FFFC51FC FF FF FF FF FF FF FF FF     
   5062 FFFC5204 FF FF FF FF FF FF FF FF     
   5063 FFFC520C FF FF FF FF FF FF FF FF     
   5064 FFFC5214 FF FF FF FF FF FF FF FF     
   5065 FFFC521C FF FF FF FF FF FF FF FF     
   5066 FFFC5224 FF FF FF FF FF FF FF FF     
   5067 FFFC522C FF FF FF FF FF FF FF FF     
   5068 FFFC5234 FF FF FF FF FF FF FF FF     
   5069 FFFC523C FF FF FF FF FF FF FF FF     
   5070 FFFC5244 FF FF FF FF FF FF FF FF     
   5071 FFFC524C FF FF FF FF FF FF FF FF     
   5072 FFFC5254 FF FF FF FF FF FF FF FF     
   5073 FFFC525C FF FF FF FF FF FF FF FF     
   5074 FFFC5264 FF FF FF FF FF FF FF FF     
   5075 FFFC526C FF FF FF FF FF FF FF FF     
   5076 FFFC5274 FF FF FF FF FF FF FF FF     
   5077 FFFC527C FF FF FF FF FF FF FF FF     
   5078 FFFC5284 FF FF FF FF FF FF FF FF     
   5079 FFFC528C FF FF FF FF FF FF FF FF     
   5080 FFFC5294 FF FF FF FF FF FF FF FF     
   5081 FFFC529C FF FF FF FF FF FF FF FF     
   5082 FFFC52A4 FF FF FF FF FF FF FF FF     
   5083 FFFC52AC FF FF FF FF FF FF FF FF     
   5084 FFFC52B4 FF FF FF FF FF FF FF FF     
   5085 FFFC52BC FF FF FF FF FF FF FF FF     
   5086 FFFC52C4 FF FF FF FF FF FF FF FF     
   5087 FFFC52CC FF FF FF FF FF FF FF FF     
   5088 FFFC52D4 FF FF FF FF FF FF FF FF     
   5089 FFFC52DC FF FF FF FF FF FF FF FF     
   5090 FFFC52E4 FF FF FF FF FF FF FF FF     
   5091 FFFC52EC FF FF FF FF FF FF FF FF     
   5092 FFFC52F4 FF FF FF FF FF FF FF FF     
   5093 FFFC52FC FF FF FF FF FF FF FF FF     
   5094 FFFC5304 FF FF FF FF FF FF FF FF     
   5095 FFFC530C FF FF FF FF FF FF FF FF     
   5096 FFFC5314 FF FF FF FF FF FF FF FF     
   5097 FFFC531C FF FF FF FF FF FF FF FF     
   5098 FFFC5324 FF FF FF FF FF FF FF FF     
   5099 FFFC532C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 28
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5100 FFFC5334 FF FF FF FF FF FF FF FF     
   5101 FFFC533C FF FF FF FF FF FF FF FF     
   5102 FFFC5344 FF FF FF FF FF FF FF FF     
   5103 FFFC534C FF FF FF FF FF FF FF FF     
   5104 FFFC5354 FF FF FF FF FF FF FF FF     
   5105 FFFC535C FF FF FF FF FF FF FF FF     
   5106 FFFC5364 FF FF FF FF FF FF FF FF     
   5107 FFFC536C FF FF FF FF FF FF FF FF     
   5108 FFFC5374 FF FF FF FF FF FF FF FF     
   5109 FFFC537C FF FF FF FF FF FF FF FF     
   5110 FFFC5384 FF FF FF FF FF FF FF FF     
   5111 FFFC538C FF FF FF FF FF FF FF FF     
   5112 FFFC5394 FF FF FF FF FF FF FF FF     
   5113 FFFC539C FF FF FF FF FF FF FF FF     
   5114 FFFC53A4 FF FF FF FF FF FF FF FF     
   5115 FFFC53AC FF FF FF FF FF FF FF FF     
   5116 FFFC53B4 FF FF FF FF FF FF FF FF     
   5117 FFFC53BC FF FF FF FF FF FF FF FF     
   5118 FFFC53C4 FF FF FF FF FF FF FF FF     
   5119 FFFC53CC FF FF FF FF FF FF FF FF     
   5120 FFFC53D4 FF FF FF FF FF FF FF FF     
   5121 FFFC53DC FF FF FF FF FF FF FF FF     
   5122 FFFC53E4 FF FF FF FF FF FF FF FF     
   5123 FFFC53EC FF FF FF FF FF FF FF FF     
   5124 FFFC53F4 FF FF FF FF FF FF FF FF     
   5125 FFFC53FC FF FF FF FF FF FF FF FF     
   5126 FFFC5404 FF FF FF FF FF FF FF FF     
   5127 FFFC540C FF FF FF FF FF FF FF FF     
   5128 FFFC5414 FF FF FF FF FF FF FF FF     
   5129 FFFC541C FF FF FF FF FF FF FF FF     
   5130 FFFC5424 FF FF FF FF FF FF FF FF     
   5131 FFFC542C FF FF FF FF FF FF FF FF     
   5132 FFFC5434 FF FF FF FF FF FF FF FF     
   5133 FFFC543C FF FF FF FF FF FF FF FF     
   5134 FFFC5444 FF FF FF FF FF FF FF FF     
   5135 FFFC544C FF FF FF FF FF FF FF FF     
   5136 FFFC5454 FF FF FF FF FF FF FF FF     
   5137 FFFC545C FF FF FF FF FF FF FF FF     
   5138 FFFC5464 FF FF FF FF FF FF FF FF     
   5139 FFFC546C FF FF FF FF FF FF FF FF     
   5140 FFFC5474 FF FF FF FF FF FF FF FF     
   5141 FFFC547C FF FF FF FF FF FF FF FF     
   5142 FFFC5484 FF FF FF FF FF FF FF FF     
   5143 FFFC548C FF FF FF FF FF FF FF FF     
   5144 FFFC5494 FF FF FF FF FF FF FF FF     
   5145 FFFC549C FF FF FF FF FF FF FF FF     
   5146 FFFC54A4 FF FF FF FF FF FF FF FF     
   5147 FFFC54AC FF FF FF FF FF FF FF FF     
   5148 FFFC54B4 FF FF FF FF FF FF FF FF     
   5149 FFFC54BC FF FF FF FF FF FF FF FF     
   5150 FFFC54C4 FF FF FF FF FF FF FF FF     
   5151 FFFC54CC FF FF FF FF FF FF FF FF     
   5152 FFFC54D4 FF FF FF FF FF FF FF FF     
   5153 FFFC54DC FF FF FF FF FF FF FF FF     
   5154 FFFC54E4 FF FF FF FF FF FF FF FF     
   5155 FFFC54EC FF FF FF FF FF FF FF FF     
   5156 FFFC54F4 FF FF FF FF FF FF FF FF     
   5157 FFFC54FC FF FF FF FF FF FF FF FF     
   5158 FFFC5504 FF FF FF FF FF FF FF FF     
   5159 FFFC550C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 29
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5160 FFFC5514 FF FF FF FF FF FF FF FF     
   5161 FFFC551C FF FF FF FF FF FF FF FF     
   5162 FFFC5524 FF FF FF FF FF FF FF FF     
   5163 FFFC552C FF FF FF FF FF FF FF FF     
   5164 FFFC5534 FF FF FF FF FF FF FF FF     
   5165 FFFC553C FF FF FF FF FF FF FF FF     
   5166 FFFC5544 FF FF FF FF FF FF FF FF     
   5167 FFFC554C FF FF FF FF FF FF FF FF     
   5168 FFFC5554 FF FF FF FF FF FF FF FF     
   5169 FFFC555C FF FF FF FF FF FF FF FF     
   5170 FFFC5564 FF FF FF FF FF FF FF FF     
   5171 FFFC556C FF FF FF FF FF FF FF FF     
   5172 FFFC5574 FF FF FF FF FF FF FF FF     
   5173 FFFC557C FF FF FF FF FF FF FF FF     
   5174 FFFC5584 FF FF FF FF FF FF FF FF     
   5175 FFFC558C FF FF FF FF FF FF FF FF     
   5176 FFFC5594 FF FF FF FF FF FF FF FF     
   5177 FFFC559C FF FF FF FF FF FF FF FF     
   5178 FFFC55A4 FF FF FF FF FF FF FF FF     
   5179 FFFC55AC FF FF FF FF FF FF FF FF     
   5180 FFFC55B4 FF FF FF FF FF FF FF FF     
   5181 FFFC55BC FF FF FF FF FF FF FF FF     
   5182 FFFC55C4 FF FF FF FF FF FF FF FF     
   5183 FFFC55CC FF FF FF FF FF FF FF FF     
   5184 FFFC55D4 FF FF FF FF FF FF FF FF     
   5185 FFFC55DC FF FF FF FF FF FF FF FF     
   5186 FFFC55E4 FF FF FF FF FF FF FF FF     
   5187 FFFC55EC FF FF FF FF FF FF FF FF     
   5188 FFFC55F4 FF FF FF FF FF FF FF FF     
   5189 FFFC55FC FF FF FF FF FF FF FF FF     
   5190 FFFC5604 FF FF FF FF FF FF FF FF     
   5191 FFFC560C FF FF FF FF FF FF FF FF     
   5192 FFFC5614 FF FF FF FF FF FF FF FF     
   5193 FFFC561C FF FF FF FF FF FF FF FF     
   5194 FFFC5624 FF FF FF FF FF FF FF FF     
   5195 FFFC562C FF FF FF FF FF FF FF FF     
   5196 FFFC5634 FF FF FF FF FF FF FF FF     
   5197 FFFC563C FF FF FF FF FF FF FF FF     
   5198 FFFC5644 FF FF FF FF FF FF FF FF     
   5199 FFFC564C FF FF FF FF FF FF FF FF     
   5200 FFFC5654 FF FF FF FF FF FF FF FF     
   5201 FFFC565C FF FF FF FF FF FF FF FF     
   5202 FFFC5664 FF FF FF FF FF FF FF FF     
   5203 FFFC566C FF FF FF FF FF FF FF FF     
   5204 FFFC5674 FF FF FF FF FF FF FF FF     
   5205 FFFC567C FF FF FF FF FF FF FF FF     
   5206 FFFC5684 FF FF FF FF FF FF FF FF     
   5207 FFFC568C FF FF FF FF FF FF FF FF     
   5208 FFFC5694 FF FF FF FF FF FF FF FF     
   5209 FFFC569C FF FF FF FF FF FF FF FF     
   5210 FFFC56A4 FF FF FF FF FF FF FF FF     
   5211 FFFC56AC FF FF FF FF FF FF FF FF     
   5212 FFFC56B4 FF FF FF FF FF FF FF FF     
   5213 FFFC56BC FF FF FF FF FF FF FF FF     
   5214 FFFC56C4 FF FF FF FF FF FF FF FF     
   5215 FFFC56CC FF FF FF FF FF FF FF FF     
   5216 FFFC56D4 FF FF FF FF FF FF FF FF     
   5217 FFFC56DC FF FF FF FF FF FF FF FF     
   5218 FFFC56E4 FF FF FF FF FF FF FF FF     
   5219 FFFC56EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 30
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5220 FFFC56F4 FF FF FF FF FF FF FF FF     
   5221 FFFC56FC FF FF FF FF FF FF FF FF     
   5222 FFFC5704 FF FF FF FF FF FF FF FF     
   5223 FFFC570C FF FF FF FF FF FF FF FF     
   5224 FFFC5714 FF FF FF FF FF FF FF FF     
   5225 FFFC571C FF FF FF FF FF FF FF FF     
   5226 FFFC5724 FF FF FF FF FF FF FF FF     
   5227 FFFC572C FF FF FF FF FF FF FF FF     
   5228 FFFC5734 FF FF FF FF FF FF FF FF     
   5229 FFFC573C FF FF FF FF FF FF FF FF     
   5230 FFFC5744 FF FF FF FF FF FF FF FF     
   5231 FFFC574C FF FF FF FF FF FF FF FF     
   5232 FFFC5754 FF FF FF FF FF FF FF FF     
   5233 FFFC575C FF FF FF FF FF FF FF FF     
   5234 FFFC5764 FF FF FF FF FF FF FF FF     
   5235 FFFC576C FF FF FF FF FF FF FF FF     
   5236 FFFC5774 FF FF FF FF FF FF FF FF     
   5237 FFFC577C FF FF FF FF FF FF FF FF     
   5238 FFFC5784 FF FF FF FF FF FF FF FF     
   5239 FFFC578C FF FF FF FF FF FF FF FF     
   5240 FFFC5794 FF FF FF FF FF FF FF FF     
   5241 FFFC579C FF FF FF FF FF FF FF FF     
   5242 FFFC57A4 FF FF FF FF FF FF FF FF     
   5243 FFFC57AC FF FF FF FF FF FF FF FF     
   5244 FFFC57B4 FF FF FF FF FF FF FF FF     
   5245 FFFC57BC FF FF FF FF FF FF FF FF     
   5246 FFFC57C4 FF FF FF FF FF FF FF FF     
   5247 FFFC57CC FF FF FF FF FF FF FF FF     
   5248 FFFC57D4 FF FF FF FF FF FF FF FF     
   5249 FFFC57DC FF FF FF FF FF FF FF FF     
   5250 FFFC57E4 FF FF FF FF FF FF FF FF     
   5251 FFFC57EC FF FF FF FF FF FF FF FF     
   5252 FFFC57F4 FF FF FF FF FF FF FF FF     
   5253 FFFC57FC FF FF FF FF FF FF FF FF     
   5254 FFFC5804 FF FF FF FF FF FF FF FF     
   5255 FFFC580C FF FF FF FF FF FF FF FF     
   5256 FFFC5814 FF FF FF FF FF FF FF FF     
   5257 FFFC581C FF FF FF FF FF FF FF FF     
   5258 FFFC5824 FF FF FF FF FF FF FF FF     
   5259 FFFC582C FF FF FF FF FF FF FF FF     
   5260 FFFC5834 FF FF FF FF FF FF FF FF     
   5261 FFFC583C FF FF FF FF FF FF FF FF     
   5262 FFFC5844 FF FF FF FF FF FF FF FF     
   5263 FFFC584C FF FF FF FF FF FF FF FF     
   5264 FFFC5854 FF FF FF FF FF FF FF FF     
   5265 FFFC585C FF FF FF FF FF FF FF FF     
   5266 FFFC5864 FF FF FF FF FF FF FF FF     
   5267 FFFC586C FF FF FF FF FF FF FF FF     
   5268 FFFC5874 FF FF FF FF FF FF FF FF     
   5269 FFFC587C FF FF FF FF FF FF FF FF     
   5270 FFFC5884 FF FF FF FF FF FF FF FF     
   5271 FFFC588C FF FF FF FF FF FF FF FF     
   5272 FFFC5894 FF FF FF FF FF FF FF FF     
   5273 FFFC589C FF FF FF FF FF FF FF FF     
   5274 FFFC58A4 FF FF FF FF FF FF FF FF     
   5275 FFFC58AC FF FF FF FF FF FF FF FF     
   5276 FFFC58B4 FF FF FF FF FF FF FF FF     
   5277 FFFC58BC FF FF FF FF FF FF FF FF     
   5278 FFFC58C4 FF FF FF FF FF FF FF FF     
   5279 FFFC58CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 31
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5280 FFFC58D4 FF FF FF FF FF FF FF FF     
   5281 FFFC58DC FF FF FF FF FF FF FF FF     
   5282 FFFC58E4 FF FF FF FF FF FF FF FF     
   5283 FFFC58EC FF FF FF FF FF FF FF FF     
   5284 FFFC58F4 FF FF FF FF FF FF FF FF     
   5285 FFFC58FC FF FF FF FF FF FF FF FF     
   5286 FFFC5904 FF FF FF FF FF FF FF FF     
   5287 FFFC590C FF FF FF FF FF FF FF FF     
   5288 FFFC5914 FF FF FF FF FF FF FF FF     
   5289 FFFC591C FF FF FF FF FF FF FF FF     
   5290 FFFC5924 FF FF FF FF FF FF FF FF     
   5291 FFFC592C FF FF FF FF FF FF FF FF     
   5292 FFFC5934 FF FF FF FF FF FF FF FF     
   5293 FFFC593C FF FF FF FF FF FF FF FF     
   5294 FFFC5944 FF FF FF FF FF FF FF FF     
   5295 FFFC594C FF FF FF FF FF FF FF FF     
   5296 FFFC5954 FF FF FF FF FF FF FF FF     
   5297 FFFC595C FF FF FF FF FF FF FF FF     
   5298 FFFC5964 FF FF FF FF FF FF FF FF     
   5299 FFFC596C FF FF FF FF FF FF FF FF     
   5300 FFFC5974 FF FF FF FF FF FF FF FF     
   5301 FFFC597C FF FF FF FF FF FF FF FF     
   5302 FFFC5984 FF FF FF FF FF FF FF FF     
   5303 FFFC598C FF FF FF FF FF FF FF FF     
   5304 FFFC5994 FF FF FF FF FF FF FF FF     
   5305 FFFC599C FF FF FF FF FF FF FF FF     
   5306 FFFC59A4 FF FF FF FF FF FF FF FF     
   5307 FFFC59AC FF FF FF FF FF FF FF FF     
   5308 FFFC59B4 FF FF FF FF FF FF FF FF     
   5309 FFFC59BC FF FF FF FF FF FF FF FF     
   5310 FFFC59C4 FF FF FF FF FF FF FF FF     
   5311 FFFC59CC FF FF FF FF FF FF FF FF     
   5312 FFFC59D4 FF FF FF FF FF FF FF FF     
   5313 FFFC59DC FF FF FF FF FF FF FF FF     
   5314 FFFC59E4 FF FF FF FF FF FF FF FF     
   5315 FFFC59EC FF FF FF FF FF FF FF FF     
   5316 FFFC59F4 FF FF FF FF FF FF FF FF     
   5317 FFFC59FC FF FF FF FF FF FF FF FF     
   5318 FFFC5A04 FF FF FF FF FF FF FF FF     
   5319 FFFC5A0C FF FF FF FF FF FF FF FF     
   5320 FFFC5A14 FF FF FF FF FF FF FF FF     
   5321 FFFC5A1C FF FF FF FF FF FF FF FF     
   5322 FFFC5A24 FF FF FF FF FF FF FF FF     
   5323 FFFC5A2C FF FF FF FF FF FF FF FF     
   5324 FFFC5A34 FF FF FF FF FF FF FF FF     
   5325 FFFC5A3C FF FF FF FF FF FF FF FF     
   5326 FFFC5A44 FF FF FF FF FF FF FF FF     
   5327 FFFC5A4C FF FF FF FF FF FF FF FF     
   5328 FFFC5A54 FF FF FF FF FF FF FF FF     
   5329 FFFC5A5C FF FF FF FF FF FF FF FF     
   5330 FFFC5A64 FF FF FF FF FF FF FF FF     
   5331 FFFC5A6C FF FF FF FF FF FF FF FF     
   5332 FFFC5A74 FF FF FF FF FF FF FF FF     
   5333 FFFC5A7C FF FF FF FF FF FF FF FF     
   5334 FFFC5A84 FF FF FF FF FF FF FF FF     
   5335 FFFC5A8C FF FF FF FF FF FF FF FF     
   5336 FFFC5A94 FF FF FF FF FF FF FF FF     
   5337 FFFC5A9C FF FF FF FF FF FF FF FF     
   5338 FFFC5AA4 FF FF FF FF FF FF FF FF     
   5339 FFFC5AAC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 32
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5340 FFFC5AB4 FF FF FF FF FF FF FF FF     
   5341 FFFC5ABC FF FF FF FF FF FF FF FF     
   5342 FFFC5AC4 FF FF FF FF FF FF FF FF     
   5343 FFFC5ACC FF FF FF FF FF FF FF FF     
   5344 FFFC5AD4 FF FF FF FF FF FF FF FF     
   5345 FFFC5ADC FF FF FF FF FF FF FF FF     
   5346 FFFC5AE4 FF FF FF FF FF FF FF FF     
   5347 FFFC5AEC FF FF FF FF FF FF FF FF     
   5348 FFFC5AF4 FF FF FF FF FF FF FF FF     
   5349 FFFC5AFC FF FF FF FF FF FF FF FF     
   5350 FFFC5B04 FF FF FF FF FF FF FF FF     
   5351 FFFC5B0C FF FF FF FF FF FF FF FF     
   5352 FFFC5B14 FF FF FF FF FF FF FF FF     
   5353 FFFC5B1C FF FF FF FF FF FF FF FF     
   5354 FFFC5B24 FF FF FF FF FF FF FF FF     
   5355 FFFC5B2C FF FF FF FF FF FF FF FF     
   5356 FFFC5B34 FF FF FF FF FF FF FF FF     
   5357 FFFC5B3C FF FF FF FF FF FF FF FF     
   5358 FFFC5B44 FF FF FF FF FF FF FF FF     
   5359 FFFC5B4C FF FF FF FF FF FF FF FF     
   5360 FFFC5B54 FF FF FF FF FF FF FF FF     
   5361 FFFC5B5C FF FF FF FF FF FF FF FF     
   5362 FFFC5B64 FF FF FF FF FF FF FF FF     
   5363 FFFC5B6C FF FF FF FF FF FF FF FF     
   5364 FFFC5B74 FF FF FF FF FF FF FF FF     
   5365 FFFC5B7C FF FF FF FF FF FF FF FF     
   5366 FFFC5B84 FF FF FF FF FF FF FF FF     
   5367 FFFC5B8C FF FF FF FF FF FF FF FF     
   5368 FFFC5B94 FF FF FF FF FF FF FF FF     
   5369 FFFC5B9C FF FF FF FF FF FF FF FF     
   5370 FFFC5BA4 FF FF FF FF FF FF FF FF     
   5371 FFFC5BAC FF FF FF FF FF FF FF FF     
   5372 FFFC5BB4 FF FF FF FF FF FF FF FF     
   5373 FFFC5BBC FF FF FF FF FF FF FF FF     
   5374 FFFC5BC4 FF FF FF FF FF FF FF FF     
   5375 FFFC5BCC FF FF FF FF FF FF FF FF     
   5376 FFFC5BD4 FF FF FF FF FF FF FF FF     
   5377 FFFC5BDC FF FF FF FF FF FF FF FF     
   5378 FFFC5BE4 FF FF FF FF FF FF FF FF     
   5379 FFFC5BEC FF FF FF FF FF FF FF FF     
   5380 FFFC5BF4 FF FF FF FF FF FF FF FF     
   5381 FFFC5BFC FF FF FF FF FF FF FF FF     
   5382 FFFC5C04 FF FF FF FF FF FF FF FF     
   5383 FFFC5C0C FF FF FF FF FF FF FF FF     
   5384 FFFC5C14 FF FF FF FF FF FF FF FF     
   5385 FFFC5C1C FF FF FF FF FF FF FF FF     
   5386 FFFC5C24 FF FF FF FF FF FF FF FF     
   5387 FFFC5C2C FF FF FF FF FF FF FF FF     
   5388 FFFC5C34 FF FF FF FF FF FF FF FF     
   5389 FFFC5C3C FF FF FF FF FF FF FF FF     
   5390 FFFC5C44 FF FF FF FF FF FF FF FF     
   5391 FFFC5C4C FF FF FF FF FF FF FF FF     
   5392 FFFC5C54 FF FF FF FF FF FF FF FF     
   5393 FFFC5C5C FF FF FF FF FF FF FF FF     
   5394 FFFC5C64 FF FF FF FF FF FF FF FF     
   5395 FFFC5C6C FF FF FF FF FF FF FF FF     
   5396 FFFC5C74 FF FF FF FF FF FF FF FF     
   5397 FFFC5C7C FF FF FF FF FF FF FF FF     
   5398 FFFC5C84 FF FF FF FF FF FF FF FF     
   5399 FFFC5C8C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 33
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5400 FFFC5C94 FF FF FF FF FF FF FF FF     
   5401 FFFC5C9C FF FF FF FF FF FF FF FF     
   5402 FFFC5CA4 FF FF FF FF FF FF FF FF     
   5403 FFFC5CAC FF FF FF FF FF FF FF FF     
   5404 FFFC5CB4 FF FF FF FF FF FF FF FF     
   5405 FFFC5CBC FF FF FF FF FF FF FF FF     
   5406 FFFC5CC4 FF FF FF FF FF FF FF FF     
   5407 FFFC5CCC FF FF FF FF FF FF FF FF     
   5408 FFFC5CD4 FF FF FF FF FF FF FF FF     
   5409 FFFC5CDC FF FF FF FF FF FF FF FF     
   5410 FFFC5CE4 FF FF FF FF FF FF FF FF     
   5411 FFFC5CEC FF FF FF FF FF FF FF FF     
   5412 FFFC5CF4 FF FF FF FF FF FF FF FF     
   5413 FFFC5CFC FF FF FF FF FF FF FF FF     
   5414 FFFC5D04 FF FF FF FF FF FF FF FF     
   5415 FFFC5D0C FF FF FF FF FF FF FF FF     
   5416 FFFC5D14 FF FF FF FF FF FF FF FF     
   5417 FFFC5D1C FF FF FF FF FF FF FF FF     
   5418 FFFC5D24 FF FF FF FF FF FF FF FF     
   5419 FFFC5D2C FF FF FF FF FF FF FF FF     
   5420 FFFC5D34 FF FF FF FF FF FF FF FF     
   5421 FFFC5D3C FF FF FF FF FF FF FF FF     
   5422 FFFC5D44 FF FF FF FF FF FF FF FF     
   5423 FFFC5D4C FF FF FF FF FF FF FF FF     
   5424 FFFC5D54 FF FF FF FF FF FF FF FF     
   5425 FFFC5D5C FF FF FF FF FF FF FF FF     
   5426 FFFC5D64 FF FF FF FF FF FF FF FF     
   5427 FFFC5D6C FF FF FF FF FF FF FF FF     
   5428 FFFC5D74 FF FF FF FF FF FF FF FF     
   5429 FFFC5D7C FF FF FF FF FF FF FF FF     
   5430 FFFC5D84 FF FF FF FF FF FF FF FF     
   5431 FFFC5D8C FF FF FF FF FF FF FF FF     
   5432 FFFC5D94 FF FF FF FF FF FF FF FF     
   5433 FFFC5D9C FF FF FF FF FF FF FF FF     
   5434 FFFC5DA4 FF FF FF FF FF FF FF FF     
   5435 FFFC5DAC FF FF FF FF FF FF FF FF     
   5436 FFFC5DB4 FF FF FF FF FF FF FF FF     
   5437 FFFC5DBC FF FF FF FF FF FF FF FF     
   5438 FFFC5DC4 FF FF FF FF FF FF FF FF     
   5439 FFFC5DCC FF FF FF FF FF FF FF FF     
   5440 FFFC5DD4 FF FF FF FF FF FF FF FF     
   5441 FFFC5DDC FF FF FF FF FF FF FF FF     
   5442 FFFC5DE4 FF FF FF FF FF FF FF FF     
   5443 FFFC5DEC FF FF FF FF FF FF FF FF     
   5444 FFFC5DF4 FF FF FF FF FF FF FF FF     
   5445 FFFC5DFC FF FF FF FF FF FF FF FF     
   5446 FFFC5E04 FF FF FF FF FF FF FF FF     
   5447 FFFC5E0C FF FF FF FF FF FF FF FF     
   5448 FFFC5E14 FF FF FF FF FF FF FF FF     
   5449 FFFC5E1C FF FF FF FF FF FF FF FF     
   5450 FFFC5E24 FF FF FF FF FF FF FF FF     
   5451 FFFC5E2C FF FF FF FF FF FF FF FF     
   5452 FFFC5E34 FF FF FF FF FF FF FF FF     
   5453 FFFC5E3C FF FF FF FF FF FF FF FF     
   5454 FFFC5E44 FF FF FF FF FF FF FF FF     
   5455 FFFC5E4C FF FF FF FF FF FF FF FF     
   5456 FFFC5E54 FF FF FF FF FF FF FF FF     
   5457 FFFC5E5C FF FF FF FF FF FF FF FF     
   5458 FFFC5E64 FF FF FF FF FF FF FF FF     
   5459 FFFC5E6C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 34
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5460 FFFC5E74 FF FF FF FF FF FF FF FF     
   5461 FFFC5E7C FF FF FF FF FF FF FF FF     
   5462 FFFC5E84 FF FF FF FF FF FF FF FF     
   5463 FFFC5E8C FF FF FF FF FF FF FF FF     
   5464 FFFC5E94 FF FF FF FF FF FF FF FF     
   5465 FFFC5E9C FF FF FF FF FF FF FF FF     
   5466 FFFC5EA4 FF FF FF FF FF FF FF FF     
   5467 FFFC5EAC FF FF FF FF FF FF FF FF     
   5468 FFFC5EB4 FF FF FF FF FF FF FF FF     
   5469 FFFC5EBC FF FF FF FF FF FF FF FF     
   5470 FFFC5EC4 FF FF FF FF FF FF FF FF     
   5471 FFFC5ECC FF FF FF FF FF FF FF FF     
   5472 FFFC5ED4 FF FF FF FF FF FF FF FF     
   5473 FFFC5EDC FF FF FF FF FF FF FF FF     
   5474 FFFC5EE4 FF FF FF FF FF FF FF FF     
   5475 FFFC5EEC FF FF FF FF FF FF FF FF     
   5476 FFFC5EF4 FF FF FF FF FF FF FF FF     
   5477 FFFC5EFC FF FF FF FF FF FF FF FF     
   5478 FFFC5F04 FF FF FF FF FF FF FF FF     
   5479 FFFC5F0C FF FF FF FF FF FF FF FF     
   5480 FFFC5F14 FF FF FF FF FF FF FF FF     
   5481 FFFC5F1C FF FF FF FF FF FF FF FF     
   5482 FFFC5F24 FF FF FF FF FF FF FF FF     
   5483 FFFC5F2C FF FF FF FF FF FF FF FF     
   5484 FFFC5F34 FF FF FF FF FF FF FF FF     
   5485 FFFC5F3C FF FF FF FF FF FF FF FF     
   5486 FFFC5F44 FF FF FF FF FF FF FF FF     
   5487 FFFC5F4C FF FF FF FF FF FF FF FF     
   5488 FFFC5F54 FF FF FF FF FF FF FF FF     
   5489 FFFC5F5C FF FF FF FF FF FF FF FF     
   5490 FFFC5F64 FF FF FF FF FF FF FF FF     
   5491 FFFC5F6C FF FF FF FF FF FF FF FF     
   5492 FFFC5F74 FF FF FF FF FF FF FF FF     
   5493 FFFC5F7C FF FF FF FF FF FF FF FF     
   5494 FFFC5F84 FF FF FF FF FF FF FF FF     
   5495 FFFC5F8C FF FF FF FF FF FF FF FF     
   5496 FFFC5F94 FF FF FF FF FF FF FF FF     
   5497 FFFC5F9C FF FF FF FF FF FF FF FF     
   5498 FFFC5FA4 FF FF FF FF FF FF FF FF     
   5499 FFFC5FAC FF FF FF FF FF FF FF FF     
   5500 FFFC5FB4 FF FF FF FF FF FF FF FF     
   5501 FFFC5FBC FF FF FF FF FF FF FF FF     
   5502 FFFC5FC4 FF FF FF FF FF FF FF FF     
   5503 FFFC5FCC FF FF FF FF FF FF FF FF     
   5504 FFFC5FD4 FF FF FF FF FF FF FF FF     
   5505 FFFC5FDC FF FF FF FF FF FF FF FF     
   5506 FFFC5FE4 FF FF FF FF FF FF FF FF     
   5507 FFFC5FEC FF FF FF FF FF FF FF FF     
   5508 FFFC5FF4 FF FF FF FF FF FF FF FF     
   5509 FFFC5FFC FF FF FF FF FF FF FF FF     
   5510 FFFC6004 FF FF FF FF FF FF FF FF     
   5511 FFFC600C FF FF FF FF FF FF FF FF     
   5512 FFFC6014 FF FF FF FF FF FF FF FF     
   5513 FFFC601C FF FF FF FF FF FF FF FF     
   5514 FFFC6024 FF FF FF FF FF FF FF FF     
   5515 FFFC602C FF FF FF FF FF FF FF FF     
   5516 FFFC6034 FF FF FF FF FF FF FF FF     
   5517 FFFC603C FF FF FF FF FF FF FF FF     
   5518 FFFC6044 FF FF FF FF FF FF FF FF     
   5519 FFFC604C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 35
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5520 FFFC6054 FF FF FF FF FF FF FF FF     
   5521 FFFC605C FF FF FF FF FF FF FF FF     
   5522 FFFC6064 FF FF FF FF FF FF FF FF     
   5523 FFFC606C FF FF FF FF FF FF FF FF     
   5524 FFFC6074 FF FF FF FF FF FF FF FF     
   5525 FFFC607C FF FF FF FF FF FF FF FF     
   5526 FFFC6084 FF FF FF FF FF FF FF FF     
   5527 FFFC608C FF FF FF FF FF FF FF FF     
   5528 FFFC6094 FF FF FF FF FF FF FF FF     
   5529 FFFC609C FF FF FF FF FF FF FF FF     
   5530 FFFC60A4 FF FF FF FF FF FF FF FF     
   5531 FFFC60AC FF FF FF FF FF FF FF FF     
   5532 FFFC60B4 FF FF FF FF FF FF FF FF     
   5533 FFFC60BC FF FF FF FF FF FF FF FF     
   5534 FFFC60C4 FF FF FF FF FF FF FF FF     
   5535 FFFC60CC FF FF FF FF FF FF FF FF     
   5536 FFFC60D4 FF FF FF FF FF FF FF FF     
   5537 FFFC60DC FF FF FF FF FF FF FF FF     
   5538 FFFC60E4 FF FF FF FF FF FF FF FF     
   5539 FFFC60EC FF FF FF FF FF FF FF FF     
   5540 FFFC60F4 FF FF FF FF FF FF FF FF     
   5541 FFFC60FC FF FF FF FF FF FF FF FF     
   5542 FFFC6104 FF FF FF FF FF FF FF FF     
   5543 FFFC610C FF FF FF FF FF FF FF FF     
   5544 FFFC6114 FF FF FF FF FF FF FF FF     
   5545 FFFC611C FF FF FF FF FF FF FF FF     
   5546 FFFC6124 FF FF FF FF FF FF FF FF     
   5547 FFFC612C FF FF FF FF FF FF FF FF     
   5548 FFFC6134 FF FF FF FF FF FF FF FF     
   5549 FFFC613C FF FF FF FF FF FF FF FF     
   5550 FFFC6144 FF FF FF FF FF FF FF FF     
   5551 FFFC614C FF FF FF FF FF FF FF FF     
   5552 FFFC6154 FF FF FF FF FF FF FF FF     
   5553 FFFC615C FF FF FF FF FF FF FF FF     
   5554 FFFC6164 FF FF FF FF FF FF FF FF     
   5555 FFFC616C FF FF FF FF FF FF FF FF     
   5556 FFFC6174 FF FF FF FF FF FF FF FF     
   5557 FFFC617C FF FF FF FF FF FF FF FF     
   5558 FFFC6184 FF FF FF FF FF FF FF FF     
   5559 FFFC618C FF FF FF FF FF FF FF FF     
   5560 FFFC6194 FF FF FF FF FF FF FF FF     
   5561 FFFC619C FF FF FF FF FF FF FF FF     
   5562 FFFC61A4 FF FF FF FF FF FF FF FF     
   5563 FFFC61AC FF FF FF FF FF FF FF FF     
   5564 FFFC61B4 FF FF FF FF FF FF FF FF     
   5565 FFFC61BC FF FF FF FF FF FF FF FF     
   5566 FFFC61C4 FF FF FF FF FF FF FF FF     
   5567 FFFC61CC FF FF FF FF FF FF FF FF     
   5568 FFFC61D4 FF FF FF FF FF FF FF FF     
   5569 FFFC61DC FF FF FF FF FF FF FF FF     
   5570 FFFC61E4 FF FF FF FF FF FF FF FF     
   5571 FFFC61EC FF FF FF FF FF FF FF FF     
   5572 FFFC61F4 FF FF FF FF FF FF FF FF     
   5573 FFFC61FC FF FF FF FF FF FF FF FF     
   5574 FFFC6204 FF FF FF FF FF FF FF FF     
   5575 FFFC620C FF FF FF FF FF FF FF FF     
   5576 FFFC6214 FF FF FF FF FF FF FF FF     
   5577 FFFC621C FF FF FF FF FF FF FF FF     
   5578 FFFC6224 FF FF FF FF FF FF FF FF     
   5579 FFFC622C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 36
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5580 FFFC6234 FF FF FF FF FF FF FF FF     
   5581 FFFC623C FF FF FF FF FF FF FF FF     
   5582 FFFC6244 FF FF FF FF FF FF FF FF     
   5583 FFFC624C FF FF FF FF FF FF FF FF     
   5584 FFFC6254 FF FF FF FF FF FF FF FF     
   5585 FFFC625C FF FF FF FF FF FF FF FF     
   5586 FFFC6264 FF FF FF FF FF FF FF FF     
   5587 FFFC626C FF FF FF FF FF FF FF FF     
   5588 FFFC6274 FF FF FF FF FF FF FF FF     
   5589 FFFC627C FF FF FF FF FF FF FF FF     
   5590 FFFC6284 FF FF FF FF FF FF FF FF     
   5591 FFFC628C FF FF FF FF FF FF FF FF     
   5592 FFFC6294 FF FF FF FF FF FF FF FF     
   5593 FFFC629C FF FF FF FF FF FF FF FF     
   5594 FFFC62A4 FF FF FF FF FF FF FF FF     
   5595 FFFC62AC FF FF FF FF FF FF FF FF     
   5596 FFFC62B4 FF FF FF FF FF FF FF FF     
   5597 FFFC62BC FF FF FF FF FF FF FF FF     
   5598 FFFC62C4 FF FF FF FF FF FF FF FF     
   5599 FFFC62CC FF FF FF FF FF FF FF FF     
   5600 FFFC62D4 FF FF FF FF FF FF FF FF     
   5601 FFFC62DC FF FF FF FF FF FF FF FF     
   5602 FFFC62E4 FF FF FF FF FF FF FF FF     
   5603 FFFC62EC FF FF FF FF FF FF FF FF     
   5604 FFFC62F4 FF FF FF FF FF FF FF FF     
   5605 FFFC62FC FF FF FF FF FF FF FF FF     
   5606 FFFC6304 FF FF FF FF FF FF FF FF     
   5607 FFFC630C FF FF FF FF FF FF FF FF     
   5608 FFFC6314 FF FF FF FF FF FF FF FF     
   5609 FFFC631C FF FF FF FF FF FF FF FF     
   5610 FFFC6324 FF FF FF FF FF FF FF FF     
   5611 FFFC632C FF FF FF FF FF FF FF FF     
   5612 FFFC6334 FF FF FF FF FF FF FF FF     
   5613 FFFC633C FF FF FF FF FF FF FF FF     
   5614 FFFC6344 FF FF FF FF FF FF FF FF     
   5615 FFFC634C FF FF FF FF FF FF FF FF     
   5616 FFFC6354 FF FF FF FF FF FF FF FF     
   5617 FFFC635C FF FF FF FF FF FF FF FF     
   5618 FFFC6364 FF FF FF FF FF FF FF FF     
   5619 FFFC636C FF FF FF FF FF FF FF FF     
   5620 FFFC6374 FF FF FF FF FF FF FF FF     
   5621 FFFC637C FF FF FF FF FF FF FF FF     
   5622 FFFC6384 FF FF FF FF FF FF FF FF     
   5623 FFFC638C FF FF FF FF FF FF FF FF     
   5624 FFFC6394 FF FF FF FF FF FF FF FF     
   5625 FFFC639C FF FF FF FF FF FF FF FF     
   5626 FFFC63A4 FF FF FF FF FF FF FF FF     
   5627 FFFC63AC FF FF FF FF FF FF FF FF     
   5628 FFFC63B4 FF FF FF FF FF FF FF FF     
   5629 FFFC63BC FF FF FF FF FF FF FF FF     
   5630 FFFC63C4 FF FF FF FF FF FF FF FF     
   5631 FFFC63CC FF FF FF FF FF FF FF FF     
   5632 FFFC63D4 FF FF FF FF FF FF FF FF     
   5633 FFFC63DC FF FF FF FF FF FF FF FF     
   5634 FFFC63E4 FF FF FF FF FF FF FF FF     
   5635 FFFC63EC FF FF FF FF FF FF FF FF     
   5636 FFFC63F4 FF FF FF FF FF FF FF FF     
   5637 FFFC63FC FF FF FF FF FF FF FF FF     
   5638 FFFC6404 FF FF FF FF FF FF FF FF     
   5639 FFFC640C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 37
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5640 FFFC6414 FF FF FF FF FF FF FF FF     
   5641 FFFC641C FF FF FF FF FF FF FF FF     
   5642 FFFC6424 FF FF FF FF FF FF FF FF     
   5643 FFFC642C FF FF FF FF FF FF FF FF     
   5644 FFFC6434 FF FF FF FF FF FF FF FF     
   5645 FFFC643C FF FF FF FF FF FF FF FF     
   5646 FFFC6444 FF FF FF FF FF FF FF FF     
   5647 FFFC644C FF FF FF FF FF FF FF FF     
   5648 FFFC6454 FF FF FF FF FF FF FF FF     
   5649 FFFC645C FF FF FF FF FF FF FF FF     
   5650 FFFC6464 FF FF FF FF FF FF FF FF     
   5651 FFFC646C FF FF FF FF FF FF FF FF     
   5652 FFFC6474 FF FF FF FF FF FF FF FF     
   5653 FFFC647C FF FF FF FF FF FF FF FF     
   5654 FFFC6484 FF FF FF FF FF FF FF FF     
   5655 FFFC648C FF FF FF FF FF FF FF FF     
   5656 FFFC6494 FF FF FF FF FF FF FF FF     
   5657 FFFC649C FF FF FF FF FF FF FF FF     
   5658 FFFC64A4 FF FF FF FF FF FF FF FF     
   5659 FFFC64AC FF FF FF FF FF FF FF FF     
   5660 FFFC64B4 FF FF FF FF FF FF FF FF     
   5661 FFFC64BC FF FF FF FF FF FF FF FF     
   5662 FFFC64C4 FF FF FF FF FF FF FF FF     
   5663 FFFC64CC FF FF FF FF FF FF FF FF     
   5664 FFFC64D4 FF FF FF FF FF FF FF FF     
   5665 FFFC64DC FF FF FF FF FF FF FF FF     
   5666 FFFC64E4 FF FF FF FF FF FF FF FF     
   5667 FFFC64EC FF FF FF FF FF FF FF FF     
   5668 FFFC64F4 FF FF FF FF FF FF FF FF     
   5669 FFFC64FC FF FF FF FF FF FF FF FF     
   5670 FFFC6504 FF FF FF FF FF FF FF FF     
   5671 FFFC650C FF FF FF FF FF FF FF FF     
   5672 FFFC6514 FF FF FF FF FF FF FF FF     
   5673 FFFC651C FF FF FF FF FF FF FF FF     
   5674 FFFC6524 FF FF FF FF FF FF FF FF     
   5675 FFFC652C FF FF FF FF FF FF FF FF     
   5676 FFFC6534 FF FF FF FF FF FF FF FF     
   5677 FFFC653C FF FF FF FF FF FF FF FF     
   5678 FFFC6544 FF FF FF FF FF FF FF FF     
   5679 FFFC654C FF FF FF FF FF FF FF FF     
   5680 FFFC6554 FF FF FF FF FF FF FF FF     
   5681 FFFC655C FF FF FF FF FF FF FF FF     
   5682 FFFC6564 FF FF FF FF FF FF FF FF     
   5683 FFFC656C FF FF FF FF FF FF FF FF     
   5684 FFFC6574 FF FF FF FF FF FF FF FF     
   5685 FFFC657C FF FF FF FF FF FF FF FF     
   5686 FFFC6584 FF FF FF FF FF FF FF FF     
   5687 FFFC658C FF FF FF FF FF FF FF FF     
   5688 FFFC6594 FF FF FF FF FF FF FF FF     
   5689 FFFC659C FF FF FF FF FF FF FF FF     
   5690 FFFC65A4 FF FF FF FF FF FF FF FF     
   5691 FFFC65AC FF FF FF FF FF FF FF FF     
   5692 FFFC65B4 FF FF FF FF FF FF FF FF     
   5693 FFFC65BC FF FF FF FF FF FF FF FF     
   5694 FFFC65C4 FF FF FF FF FF FF FF FF     
   5695 FFFC65CC FF FF FF FF FF FF FF FF     
   5696 FFFC65D4 FF FF FF FF FF FF FF FF     
   5697 FFFC65DC FF FF FF FF FF FF FF FF     
   5698 FFFC65E4 FF FF FF FF FF FF FF FF     
   5699 FFFC65EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 38
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5700 FFFC65F4 FF FF FF FF FF FF FF FF     
   5701 FFFC65FC FF FF FF FF FF FF FF FF     
   5702 FFFC6604 FF FF FF FF FF FF FF FF     
   5703 FFFC660C FF FF FF FF FF FF FF FF     
   5704 FFFC6614 FF FF FF FF FF FF FF FF     
   5705 FFFC661C FF FF FF FF FF FF FF FF     
   5706 FFFC6624 FF FF FF FF FF FF FF FF     
   5707 FFFC662C FF FF FF FF FF FF FF FF     
   5708 FFFC6634 FF FF FF FF FF FF FF FF     
   5709 FFFC663C FF FF FF FF FF FF FF FF     
   5710 FFFC6644 FF FF FF FF FF FF FF FF     
   5711 FFFC664C FF FF FF FF FF FF FF FF     
   5712 FFFC6654 FF FF FF FF FF FF FF FF     
   5713 FFFC665C FF FF FF FF FF FF FF FF     
   5714 FFFC6664 FF FF FF FF FF FF FF FF     
   5715 FFFC666C FF FF FF FF FF FF FF FF     
   5716 FFFC6674 FF FF FF FF FF FF FF FF     
   5717 FFFC667C FF FF FF FF FF FF FF FF     
   5718 FFFC6684 FF FF FF FF FF FF FF FF     
   5719 FFFC668C FF FF FF FF FF FF FF FF     
   5720 FFFC6694 FF FF FF FF FF FF FF FF     
   5721 FFFC669C FF FF FF FF FF FF FF FF     
   5722 FFFC66A4 FF FF FF FF FF FF FF FF     
   5723 FFFC66AC FF FF FF FF FF FF FF FF     
   5724 FFFC66B4 FF FF FF FF FF FF FF FF     
   5725 FFFC66BC FF FF FF FF FF FF FF FF     
   5726 FFFC66C4 FF FF FF FF FF FF FF FF     
   5727 FFFC66CC FF FF FF FF FF FF FF FF     
   5728 FFFC66D4 FF FF FF FF FF FF FF FF     
   5729 FFFC66DC FF FF FF FF FF FF FF FF     
   5730 FFFC66E4 FF FF FF FF FF FF FF FF     
   5731 FFFC66EC FF FF FF FF FF FF FF FF     
   5732 FFFC66F4 FF FF FF FF FF FF FF FF     
   5733 FFFC66FC FF FF FF FF FF FF FF FF     
   5734 FFFC6704 FF FF FF FF FF FF FF FF     
   5735 FFFC670C FF FF FF FF FF FF FF FF     
   5736 FFFC6714 FF FF FF FF FF FF FF FF     
   5737 FFFC671C FF FF FF FF FF FF FF FF     
   5738 FFFC6724 FF FF FF FF FF FF FF FF     
   5739 FFFC672C FF FF FF FF FF FF FF FF     
   5740 FFFC6734 FF FF FF FF FF FF FF FF     
   5741 FFFC673C FF FF FF FF FF FF FF FF     
   5742 FFFC6744 FF FF FF FF FF FF FF FF     
   5743 FFFC674C FF FF FF FF FF FF FF FF     
   5744 FFFC6754 FF FF FF FF FF FF FF FF     
   5745 FFFC675C FF FF FF FF FF FF FF FF     
   5746 FFFC6764 FF FF FF FF FF FF FF FF     
   5747 FFFC676C FF FF FF FF FF FF FF FF     
   5748 FFFC6774 FF FF FF FF FF FF FF FF     
   5749 FFFC677C FF FF FF FF FF FF FF FF     
   5750 FFFC6784 FF FF FF FF FF FF FF FF     
   5751 FFFC678C FF FF FF FF FF FF FF FF     
   5752 FFFC6794 FF FF FF FF FF FF FF FF     
   5753 FFFC679C FF FF FF FF FF FF FF FF     
   5754 FFFC67A4 FF FF FF FF FF FF FF FF     
   5755 FFFC67AC FF FF FF FF FF FF FF FF     
   5756 FFFC67B4 FF FF FF FF FF FF FF FF     
   5757 FFFC67BC FF FF FF FF FF FF FF FF     
   5758 FFFC67C4 FF FF FF FF FF FF FF FF     
   5759 FFFC67CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 39
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5760 FFFC67D4 FF FF FF FF FF FF FF FF     
   5761 FFFC67DC FF FF FF FF FF FF FF FF     
   5762 FFFC67E4 FF FF FF FF FF FF FF FF     
   5763 FFFC67EC FF FF FF FF FF FF FF FF     
   5764 FFFC67F4 FF FF FF FF FF FF FF FF     
   5765 FFFC67FC FF FF FF FF FF FF FF FF     
   5766 FFFC6804 FF FF FF FF FF FF FF FF     
   5767 FFFC680C FF FF FF FF FF FF FF FF     
   5768 FFFC6814 FF FF FF FF FF FF FF FF     
   5769 FFFC681C FF FF FF FF FF FF FF FF     
   5770 FFFC6824 FF FF FF FF FF FF FF FF     
   5771 FFFC682C FF FF FF FF FF FF FF FF     
   5772 FFFC6834 FF FF FF FF FF FF FF FF     
   5773 FFFC683C FF FF FF FF FF FF FF FF     
   5774 FFFC6844 FF FF FF FF FF FF FF FF     
   5775 FFFC684C FF FF FF FF FF FF FF FF     
   5776 FFFC6854 FF FF FF FF FF FF FF FF     
   5777 FFFC685C FF FF FF FF FF FF FF FF     
   5778 FFFC6864 FF FF FF FF FF FF FF FF     
   5779 FFFC686C FF FF FF FF FF FF FF FF     
   5780 FFFC6874 FF FF FF FF FF FF FF FF     
   5781 FFFC687C FF FF FF FF FF FF FF FF     
   5782 FFFC6884 FF FF FF FF FF FF FF FF     
   5783 FFFC688C FF FF FF FF FF FF FF FF     
   5784 FFFC6894 FF FF FF FF FF FF FF FF     
   5785 FFFC689C FF FF FF FF FF FF FF FF     
   5786 FFFC68A4 FF FF FF FF FF FF FF FF     
   5787 FFFC68AC FF FF FF FF FF FF FF FF     
   5788 FFFC68B4 FF FF FF FF FF FF FF FF     
   5789 FFFC68BC FF FF FF FF FF FF FF FF     
   5790 FFFC68C4 FF FF FF FF FF FF FF FF     
   5791 FFFC68CC FF FF FF FF FF FF FF FF     
   5792 FFFC68D4 FF FF FF FF FF FF FF FF     
   5793 FFFC68DC FF FF FF FF FF FF FF FF     
   5794 FFFC68E4 FF FF FF FF FF FF FF FF     
   5795 FFFC68EC FF FF FF FF FF FF FF FF     
   5796 FFFC68F4 FF FF FF FF FF FF FF FF     
   5797 FFFC68FC FF FF FF FF FF FF FF FF     
   5798 FFFC6904 FF FF FF FF FF FF FF FF     
   5799 FFFC690C FF FF FF FF FF FF FF FF     
   5800 FFFC6914 FF FF FF FF FF FF FF FF     
   5801 FFFC691C FF FF FF FF FF FF FF FF     
   5802 FFFC6924 FF FF FF FF FF FF FF FF     
   5803 FFFC692C FF FF FF FF FF FF FF FF     
   5804 FFFC6934 FF FF FF FF FF FF FF FF     
   5805 FFFC693C FF FF FF FF FF FF FF FF     
   5806 FFFC6944 FF FF FF FF FF FF FF FF     
   5807 FFFC694C FF FF FF FF FF FF FF FF     
   5808 FFFC6954 FF FF FF FF FF FF FF FF     
   5809 FFFC695C FF FF FF FF FF FF FF FF     
   5810 FFFC6964 FF FF FF FF FF FF FF FF     
   5811 FFFC696C FF FF FF FF FF FF FF FF     
   5812 FFFC6974 FF FF FF FF FF FF FF FF     
   5813 FFFC697C FF FF FF FF FF FF FF FF     
   5814 FFFC6984 FF FF FF FF FF FF FF FF     
   5815 FFFC698C FF FF FF FF FF FF FF FF     
   5816 FFFC6994 FF FF FF FF FF FF FF FF     
   5817 FFFC699C FF FF FF FF FF FF FF FF     
   5818 FFFC69A4 FF FF FF FF FF FF FF FF     
   5819 FFFC69AC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 40
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5820 FFFC69B4 FF FF FF FF FF FF FF FF     
   5821 FFFC69BC FF FF FF FF FF FF FF FF     
   5822 FFFC69C4 FF FF FF FF FF FF FF FF     
   5823 FFFC69CC FF FF FF FF FF FF FF FF     
   5824 FFFC69D4 FF FF FF FF FF FF FF FF     
   5825 FFFC69DC FF FF FF FF FF FF FF FF     
   5826 FFFC69E4 FF FF FF FF FF FF FF FF     
   5827 FFFC69EC FF FF FF FF FF FF FF FF     
   5828 FFFC69F4 FF FF FF FF FF FF FF FF     
   5829 FFFC69FC FF FF FF FF FF FF FF FF     
   5830 FFFC6A04 FF FF FF FF FF FF FF FF     
   5831 FFFC6A0C FF FF FF FF FF FF FF FF     
   5832 FFFC6A14 FF FF FF FF FF FF FF FF     
   5833 FFFC6A1C FF FF FF FF FF FF FF FF     
   5834 FFFC6A24 FF FF FF FF FF FF FF FF     
   5835 FFFC6A2C FF FF FF FF FF FF FF FF     
   5836 FFFC6A34 FF FF FF FF FF FF FF FF     
   5837 FFFC6A3C FF FF FF FF FF FF FF FF     
   5838 FFFC6A44 FF FF FF FF FF FF FF FF     
   5839 FFFC6A4C FF FF FF FF FF FF FF FF     
   5840 FFFC6A54 FF FF FF FF FF FF FF FF     
   5841 FFFC6A5C FF FF FF FF FF FF FF FF     
   5842 FFFC6A64 FF FF FF FF FF FF FF FF     
   5843 FFFC6A6C FF FF FF FF FF FF FF FF     
   5844 FFFC6A74 FF FF FF FF FF FF FF FF     
   5845 FFFC6A7C FF FF FF FF FF FF FF FF     
   5846 FFFC6A84 FF FF FF FF FF FF FF FF     
   5847 FFFC6A8C FF FF FF FF FF FF FF FF     
   5848 FFFC6A94 FF FF FF FF FF FF FF FF     
   5849 FFFC6A9C FF FF FF FF FF FF FF FF     
   5850 FFFC6AA4 FF FF FF FF FF FF FF FF     
   5851 FFFC6AAC FF FF FF FF FF FF FF FF     
   5852 FFFC6AB4 FF FF FF FF FF FF FF FF     
   5853 FFFC6ABC FF FF FF FF FF FF FF FF     
   5854 FFFC6AC4 FF FF FF FF FF FF FF FF     
   5855 FFFC6ACC FF FF FF FF FF FF FF FF     
   5856 FFFC6AD4 FF FF FF FF FF FF FF FF     
   5857 FFFC6ADC FF FF FF FF FF FF FF FF     
   5858 FFFC6AE4 FF FF FF FF FF FF FF FF     
   5859 FFFC6AEC FF FF FF FF FF FF FF FF     
   5860 FFFC6AF4 FF FF FF FF FF FF FF FF     
   5861 FFFC6AFC FF FF FF FF FF FF FF FF     
   5862 FFFC6B04 FF FF FF FF FF FF FF FF     
   5863 FFFC6B0C FF FF FF FF FF FF FF FF     
   5864 FFFC6B14 FF FF FF FF FF FF FF FF     
   5865 FFFC6B1C FF FF FF FF FF FF FF FF     
   5866 FFFC6B24 FF FF FF FF FF FF FF FF     
   5867 FFFC6B2C FF FF FF FF FF FF FF FF     
   5868 FFFC6B34 FF FF FF FF FF FF FF FF     
   5869 FFFC6B3C FF FF FF FF FF FF FF FF     
   5870 FFFC6B44 FF FF FF FF FF FF FF FF     
   5871 FFFC6B4C FF FF FF FF FF FF FF FF     
   5872 FFFC6B54 FF FF FF FF FF FF FF FF     
   5873 FFFC6B5C FF FF FF FF FF FF FF FF     
   5874 FFFC6B64 FF FF FF FF FF FF FF FF     
   5875 FFFC6B6C FF FF FF FF FF FF FF FF     
   5876 FFFC6B74 FF FF FF FF FF FF FF FF     
   5877 FFFC6B7C FF FF FF FF FF FF FF FF     
   5878 FFFC6B84 FF FF FF FF FF FF FF FF     
   5879 FFFC6B8C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 41
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5880 FFFC6B94 FF FF FF FF FF FF FF FF     
   5881 FFFC6B9C FF FF FF FF FF FF FF FF     
   5882 FFFC6BA4 FF FF FF FF FF FF FF FF     
   5883 FFFC6BAC FF FF FF FF FF FF FF FF     
   5884 FFFC6BB4 FF FF FF FF FF FF FF FF     
   5885 FFFC6BBC FF FF FF FF FF FF FF FF     
   5886 FFFC6BC4 FF FF FF FF FF FF FF FF     
   5887 FFFC6BCC FF FF FF FF FF FF FF FF     
   5888 FFFC6BD4 FF FF FF FF FF FF FF FF     
   5889 FFFC6BDC FF FF FF FF FF FF FF FF     
   5890 FFFC6BE4 FF FF FF FF FF FF FF FF     
   5891 FFFC6BEC FF FF FF FF FF FF FF FF     
   5892 FFFC6BF4 FF FF FF FF FF FF FF FF     
   5893 FFFC6BFC FF FF FF FF FF FF FF FF     
   5894 FFFC6C04 FF FF FF FF FF FF FF FF     
   5895 FFFC6C0C FF FF FF FF FF FF FF FF     
   5896 FFFC6C14 FF FF FF FF FF FF FF FF     
   5897 FFFC6C1C FF FF FF FF FF FF FF FF     
   5898 FFFC6C24 FF FF FF FF FF FF FF FF     
   5899 FFFC6C2C FF FF FF FF FF FF FF FF     
   5900 FFFC6C34 FF FF FF FF FF FF FF FF     
   5901 FFFC6C3C FF FF FF FF FF FF FF FF     
   5902 FFFC6C44 FF FF FF FF FF FF FF FF     
   5903 FFFC6C4C FF FF FF FF FF FF FF FF     
   5904 FFFC6C54 FF FF FF FF FF FF FF FF     
   5905 FFFC6C5C FF FF FF FF FF FF FF FF     
   5906 FFFC6C64 FF FF FF FF FF FF FF FF     
   5907 FFFC6C6C FF FF FF FF FF FF FF FF     
   5908 FFFC6C74 FF FF FF FF FF FF FF FF     
   5909 FFFC6C7C FF FF FF FF FF FF FF FF     
   5910 FFFC6C84 FF FF FF FF FF FF FF FF     
   5911 FFFC6C8C FF FF FF FF FF FF FF FF     
   5912 FFFC6C94 FF FF FF FF FF FF FF FF     
   5913 FFFC6C9C FF FF FF FF FF FF FF FF     
   5914 FFFC6CA4 FF FF FF FF FF FF FF FF     
   5915 FFFC6CAC FF FF FF FF FF FF FF FF     
   5916 FFFC6CB4 FF FF FF FF FF FF FF FF     
   5917 FFFC6CBC FF FF FF FF FF FF FF FF     
   5918 FFFC6CC4 FF FF FF FF FF FF FF FF     
   5919 FFFC6CCC FF FF FF FF FF FF FF FF     
   5920 FFFC6CD4 FF FF FF FF FF FF FF FF     
   5921 FFFC6CDC FF FF FF FF FF FF FF FF     
   5922 FFFC6CE4 FF FF FF FF FF FF FF FF     
   5923 FFFC6CEC FF FF FF FF FF FF FF FF     
   5924 FFFC6CF4 FF FF FF FF FF FF FF FF     
   5925 FFFC6CFC FF FF FF FF FF FF FF FF     
   5926 FFFC6D04 FF FF FF FF FF FF FF FF     
   5927 FFFC6D0C FF FF FF FF FF FF FF FF     
   5928 FFFC6D14 FF FF FF FF FF FF FF FF     
   5929 FFFC6D1C FF FF FF FF FF FF FF FF     
   5930 FFFC6D24 FF FF FF FF FF FF FF FF     
   5931 FFFC6D2C FF FF FF FF FF FF FF FF     
   5932 FFFC6D34 FF FF FF FF FF FF FF FF     
   5933 FFFC6D3C FF FF FF FF FF FF FF FF     
   5934 FFFC6D44 FF FF FF FF FF FF FF FF     
   5935 FFFC6D4C FF FF FF FF FF FF FF FF     
   5936 FFFC6D54 FF FF FF FF FF FF FF FF     
   5937 FFFC6D5C FF FF FF FF FF FF FF FF     
   5938 FFFC6D64 FF FF FF FF FF FF FF FF     
   5939 FFFC6D6C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 42
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5940 FFFC6D74 FF FF FF FF FF FF FF FF     
   5941 FFFC6D7C FF FF FF FF FF FF FF FF     
   5942 FFFC6D84 FF FF FF FF FF FF FF FF     
   5943 FFFC6D8C FF FF FF FF FF FF FF FF     
   5944 FFFC6D94 FF FF FF FF FF FF FF FF     
   5945 FFFC6D9C FF FF FF FF FF FF FF FF     
   5946 FFFC6DA4 FF FF FF FF FF FF FF FF     
   5947 FFFC6DAC FF FF FF FF FF FF FF FF     
   5948 FFFC6DB4 FF FF FF FF FF FF FF FF     
   5949 FFFC6DBC FF FF FF FF FF FF FF FF     
   5950 FFFC6DC4 FF FF FF FF FF FF FF FF     
   5951 FFFC6DCC FF FF FF FF FF FF FF FF     
   5952 FFFC6DD4 FF FF FF FF FF FF FF FF     
   5953 FFFC6DDC FF FF FF FF FF FF FF FF     
   5954 FFFC6DE4 FF FF FF FF FF FF FF FF     
   5955 FFFC6DEC FF FF FF FF FF FF FF FF     
   5956 FFFC6DF4 FF FF FF FF FF FF FF FF     
   5957 FFFC6DFC FF FF FF FF FF FF FF FF     
   5958 FFFC6E04 FF FF FF FF FF FF FF FF     
   5959 FFFC6E0C FF FF FF FF FF FF FF FF     
   5960 FFFC6E14 FF FF FF FF FF FF FF FF     
   5961 FFFC6E1C FF FF FF FF FF FF FF FF     
   5962 FFFC6E24 FF FF FF FF FF FF FF FF     
   5963 FFFC6E2C FF FF FF FF FF FF FF FF     
   5964 FFFC6E34 FF FF FF FF FF FF FF FF     
   5965 FFFC6E3C FF FF FF FF FF FF FF FF     
   5966 FFFC6E44 FF FF FF FF FF FF FF FF     
   5967 FFFC6E4C FF FF FF FF FF FF FF FF     
   5968 FFFC6E54 FF FF FF FF FF FF FF FF     
   5969 FFFC6E5C FF FF FF FF FF FF FF FF     
   5970 FFFC6E64 FF FF FF FF FF FF FF FF     
   5971 FFFC6E6C FF FF FF FF FF FF FF FF     
   5972 FFFC6E74 FF FF FF FF FF FF FF FF     
   5973 FFFC6E7C FF FF FF FF FF FF FF FF     
   5974 FFFC6E84 FF FF FF FF FF FF FF FF     
   5975 FFFC6E8C FF FF FF FF FF FF FF FF     
   5976 FFFC6E94 FF FF FF FF FF FF FF FF     
   5977 FFFC6E9C FF FF FF FF FF FF FF FF     
   5978 FFFC6EA4 FF FF FF FF FF FF FF FF     
   5979 FFFC6EAC FF FF FF FF FF FF FF FF     
   5980 FFFC6EB4 FF FF FF FF FF FF FF FF     
   5981 FFFC6EBC FF FF FF FF FF FF FF FF     
   5982 FFFC6EC4 FF FF FF FF FF FF FF FF     
   5983 FFFC6ECC FF FF FF FF FF FF FF FF     
   5984 FFFC6ED4 FF FF FF FF FF FF FF FF     
   5985 FFFC6EDC FF FF FF FF FF FF FF FF     
   5986 FFFC6EE4 FF FF FF FF FF FF FF FF     
   5987 FFFC6EEC FF FF FF FF FF FF FF FF     
   5988 FFFC6EF4 FF FF FF FF FF FF FF FF     
   5989 FFFC6EFC FF FF FF FF FF FF FF FF     
   5990 FFFC6F04 FF FF FF FF FF FF FF FF     
   5991 FFFC6F0C FF FF FF FF FF FF FF FF     
   5992 FFFC6F14 FF FF FF FF FF FF FF FF     
   5993 FFFC6F1C FF FF FF FF FF FF FF FF     
   5994 FFFC6F24 FF FF FF FF FF FF FF FF     
   5995 FFFC6F2C FF FF FF FF FF FF FF FF     
   5996 FFFC6F34 FF FF FF FF FF FF FF FF     
   5997 FFFC6F3C FF FF FF FF FF FF FF FF     
   5998 FFFC6F44 FF FF FF FF FF FF FF FF     
   5999 FFFC6F4C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 43
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6000 FFFC6F54 FF FF FF FF FF FF FF FF     
   6001 FFFC6F5C FF FF FF FF FF FF FF FF     
   6002 FFFC6F64 FF FF FF FF FF FF FF FF     
   6003 FFFC6F6C FF FF FF FF FF FF FF FF     
   6004 FFFC6F74 FF FF FF FF FF FF FF FF     
   6005 FFFC6F7C FF FF FF FF FF FF FF FF     
   6006 FFFC6F84 FF FF FF FF FF FF FF FF     
   6007 FFFC6F8C FF FF FF FF FF FF FF FF     
   6008 FFFC6F94 FF FF FF FF FF FF FF FF     
   6009 FFFC6F9C FF FF FF FF FF FF FF FF     
   6010 FFFC6FA4 FF FF FF FF FF FF FF FF     
   6011 FFFC6FAC FF FF FF FF FF FF FF FF     
   6012 FFFC6FB4 FF FF FF FF FF FF FF FF     
   6013 FFFC6FBC FF FF FF FF FF FF FF FF     
   6014 FFFC6FC4 FF FF FF FF FF FF FF FF     
   6015 FFFC6FCC FF FF FF FF FF FF FF FF     
   6016 FFFC6FD4 FF FF FF FF FF FF FF FF     
   6017 FFFC6FDC FF FF FF FF FF FF FF FF     
   6018 FFFC6FE4 FF FF FF FF FF FF FF FF     
   6019 FFFC6FEC FF FF FF FF FF FF FF FF     
   6020 FFFC6FF4 FF FF FF FF FF FF FF FF     
   6021 FFFC6FFC FF FF FF FF FF FF FF FF     
   6022 FFFC7004 FF FF FF FF FF FF FF FF     
   6023 FFFC700C FF FF FF FF FF FF FF FF     
   6024 FFFC7014 FF FF FF FF FF FF FF FF     
   6025 FFFC701C FF FF FF FF FF FF FF FF     
   6026 FFFC7024 FF FF FF FF FF FF FF FF     
   6027 FFFC702C FF FF FF FF FF FF FF FF     
   6028 FFFC7034 FF FF FF FF FF FF FF FF     
   6029 FFFC703C FF FF FF FF FF FF FF FF     
   6030 FFFC7044 FF FF FF FF FF FF FF FF     
   6031 FFFC704C FF FF FF FF FF FF FF FF     
   6032 FFFC7054 FF FF FF FF FF FF FF FF     
   6033 FFFC705C FF FF FF FF FF FF FF FF     
   6034 FFFC7064 FF FF FF FF FF FF FF FF     
   6035 FFFC706C FF FF FF FF FF FF FF FF     
   6036 FFFC7074 FF FF FF FF FF FF FF FF     
   6037 FFFC707C FF FF FF FF FF FF FF FF     
   6038 FFFC7084 FF FF FF FF FF FF FF FF     
   6039 FFFC708C FF FF FF FF FF FF FF FF     
   6040 FFFC7094 FF FF FF FF FF FF FF FF     
   6041 FFFC709C FF FF FF FF FF FF FF FF     
   6042 FFFC70A4 FF FF FF FF FF FF FF FF     
   6043 FFFC70AC FF FF FF FF FF FF FF FF     
   6044 FFFC70B4 FF FF FF FF FF FF FF FF     
   6045 FFFC70BC FF FF FF FF FF FF FF FF     
   6046 FFFC70C4 FF FF FF FF FF FF FF FF     
   6047 FFFC70CC FF FF FF FF FF FF FF FF     
   6048 FFFC70D4 FF FF FF FF FF FF FF FF     
   6049 FFFC70DC FF FF FF FF FF FF FF FF     
   6050 FFFC70E4 FF FF FF FF FF FF FF FF     
   6051 FFFC70EC FF FF FF FF FF FF FF FF     
   6052 FFFC70F4 FF FF FF FF FF FF FF FF     
   6053 FFFC70FC FF FF FF FF FF FF FF FF     
   6054 FFFC7104 FF FF FF FF FF FF FF FF     
   6055 FFFC710C FF FF FF FF FF FF FF FF     
   6056 FFFC7114 FF FF FF FF FF FF FF FF     
   6057 FFFC711C FF FF FF FF FF FF FF FF     
   6058 FFFC7124 FF FF FF FF FF FF FF FF     
   6059 FFFC712C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 44
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6060 FFFC7134 FF FF FF FF FF FF FF FF     
   6061 FFFC713C FF FF FF FF FF FF FF FF     
   6062 FFFC7144 FF FF FF FF FF FF FF FF     
   6063 FFFC714C FF FF FF FF FF FF FF FF     
   6064 FFFC7154 FF FF FF FF FF FF FF FF     
   6065 FFFC715C FF FF FF FF FF FF FF FF     
   6066 FFFC7164 FF FF FF FF FF FF FF FF     
   6067 FFFC716C FF FF FF FF FF FF FF FF     
   6068 FFFC7174 FF FF FF FF FF FF FF FF     
   6069 FFFC717C FF FF FF FF FF FF FF FF     
   6070 FFFC7184 FF FF FF FF FF FF FF FF     
   6071 FFFC718C FF FF FF FF FF FF FF FF     
   6072 FFFC7194 FF FF FF FF FF FF FF FF     
   6073 FFFC719C FF FF FF FF FF FF FF FF     
   6074 FFFC71A4 FF FF FF FF FF FF FF FF     
   6075 FFFC71AC FF FF FF FF FF FF FF FF     
   6076 FFFC71B4 FF FF FF FF FF FF FF FF     
   6077 FFFC71BC FF FF FF FF FF FF FF FF     
   6078 FFFC71C4 FF FF FF FF FF FF FF FF     
   6079 FFFC71CC FF FF FF FF FF FF FF FF     
   6080 FFFC71D4 FF FF FF FF FF FF FF FF     
   6081 FFFC71DC FF FF FF FF FF FF FF FF     
   6082 FFFC71E4 FF FF FF FF FF FF FF FF     
   6083 FFFC71EC FF FF FF FF FF FF FF FF     
   6084 FFFC71F4 FF FF FF FF FF FF FF FF     
   6085 FFFC71FC FF FF FF FF FF FF FF FF     
   6086 FFFC7204 FF FF FF FF FF FF FF FF     
   6087 FFFC720C FF FF FF FF FF FF FF FF     
   6088 FFFC7214 FF FF FF FF FF FF FF FF     
   6089 FFFC721C FF FF FF FF FF FF FF FF     
   6090 FFFC7224 FF FF FF FF FF FF FF FF     
   6091 FFFC722C FF FF FF FF FF FF FF FF     
   6092 FFFC7234 FF FF FF FF FF FF FF FF     
   6093 FFFC723C FF FF FF FF FF FF FF FF     
   6094 FFFC7244 FF FF FF FF FF FF FF FF     
   6095 FFFC724C FF FF FF FF FF FF FF FF     
   6096 FFFC7254 FF FF FF FF FF FF FF FF     
   6097 FFFC725C FF FF FF FF FF FF FF FF     
   6098 FFFC7264 FF FF FF FF FF FF FF FF     
   6099 FFFC726C FF FF FF FF FF FF FF FF     
   6100 FFFC7274 FF FF FF FF FF FF FF FF     
   6101 FFFC727C FF FF FF FF FF FF FF FF     
   6102 FFFC7284 FF FF FF FF FF FF FF FF     
   6103 FFFC728C FF FF FF FF FF FF FF FF     
   6104 FFFC7294 FF FF FF FF FF FF FF FF     
   6105 FFFC729C FF FF FF FF FF FF FF FF     
   6106 FFFC72A4 FF FF FF FF FF FF FF FF     
   6107 FFFC72AC FF FF FF FF FF FF FF FF     
   6108 FFFC72B4 FF FF FF FF FF FF FF FF     
   6109 FFFC72BC FF FF FF FF FF FF FF FF     
   6110 FFFC72C4 FF FF FF FF FF FF FF FF     
   6111 FFFC72CC FF FF FF FF FF FF FF FF     
   6112 FFFC72D4 FF FF FF FF FF FF FF FF     
   6113 FFFC72DC FF FF FF FF FF FF FF FF     
   6114 FFFC72E4 FF FF FF FF FF FF FF FF     
   6115 FFFC72EC FF FF FF FF FF FF FF FF     
   6116 FFFC72F4 FF FF FF FF FF FF FF FF     
   6117 FFFC72FC FF FF FF FF FF FF FF FF     
   6118 FFFC7304 FF FF FF FF FF FF FF FF     
   6119 FFFC730C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 45
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6120 FFFC7314 FF FF FF FF FF FF FF FF     
   6121 FFFC731C FF FF FF FF FF FF FF FF     
   6122 FFFC7324 FF FF FF FF FF FF FF FF     
   6123 FFFC732C FF FF FF FF FF FF FF FF     
   6124 FFFC7334 FF FF FF FF FF FF FF FF     
   6125 FFFC733C FF FF FF FF FF FF FF FF     
   6126 FFFC7344 FF FF FF FF FF FF FF FF     
   6127 FFFC734C FF FF FF FF FF FF FF FF     
   6128 FFFC7354 FF FF FF FF FF FF FF FF     
   6129 FFFC735C FF FF FF FF FF FF FF FF     
   6130 FFFC7364 FF FF FF FF FF FF FF FF     
   6131 FFFC736C FF FF FF FF FF FF FF FF     
   6132 FFFC7374 FF FF FF FF FF FF FF FF     
   6133 FFFC737C FF FF FF FF FF FF FF FF     
   6134 FFFC7384 FF FF FF FF FF FF FF FF     
   6135 FFFC738C FF FF FF FF FF FF FF FF     
   6136 FFFC7394 FF FF FF FF FF FF FF FF     
   6137 FFFC739C FF FF FF FF FF FF FF FF     
   6138 FFFC73A4 FF FF FF FF FF FF FF FF     
   6139 FFFC73AC FF FF FF FF FF FF FF FF     
   6140 FFFC73B4 FF FF FF FF FF FF FF FF     
   6141 FFFC73BC FF FF FF FF FF FF FF FF     
   6142 FFFC73C4 FF FF FF FF FF FF FF FF     
   6143 FFFC73CC FF FF FF FF FF FF FF FF     
   6144 FFFC73D4 FF FF FF FF FF FF FF FF     
   6145 FFFC73DC FF FF FF FF FF FF FF FF     
   6146 FFFC73E4 FF FF FF FF FF FF FF FF     
   6147 FFFC73EC FF FF FF FF FF FF FF FF     
   6148 FFFC73F4 FF FF FF FF FF FF FF FF     
   6149 FFFC73FC FF FF FF FF FF FF FF FF     
   6150 FFFC7404 FF FF FF FF FF FF FF FF     
   6151 FFFC740C FF FF FF FF FF FF FF FF     
   6152 FFFC7414 FF FF FF FF FF FF FF FF     
   6153 FFFC741C FF FF FF FF FF FF FF FF     
   6154 FFFC7424 FF FF FF FF FF FF FF FF     
   6155 FFFC742C FF FF FF FF FF FF FF FF     
   6156 FFFC7434 FF FF FF FF FF FF FF FF     
   6157 FFFC743C FF FF FF FF FF FF FF FF     
   6158 FFFC7444 FF FF FF FF FF FF FF FF     
   6159 FFFC744C FF FF FF FF FF FF FF FF     
   6160 FFFC7454 FF FF FF FF FF FF FF FF     
   6161 FFFC745C FF FF FF FF FF FF FF FF     
   6162 FFFC7464 FF FF FF FF FF FF FF FF     
   6163 FFFC746C FF FF FF FF FF FF FF FF     
   6164 FFFC7474 FF FF FF FF FF FF FF FF     
   6165 FFFC747C FF FF FF FF FF FF FF FF     
   6166 FFFC7484 FF FF FF FF FF FF FF FF     
   6167 FFFC748C FF FF FF FF FF FF FF FF     
   6168 FFFC7494 FF FF FF FF FF FF FF FF     
   6169 FFFC749C FF FF FF FF FF FF FF FF     
   6170 FFFC74A4 FF FF FF FF FF FF FF FF     
   6171 FFFC74AC FF FF FF FF FF FF FF FF     
   6172 FFFC74B4 FF FF FF FF FF FF FF FF     
   6173 FFFC74BC FF FF FF FF FF FF FF FF     
   6174 FFFC74C4 FF FF FF FF FF FF FF FF     
   6175 FFFC74CC FF FF FF FF FF FF FF FF     
   6176 FFFC74D4 FF FF FF FF FF FF FF FF     
   6177 FFFC74DC FF FF FF FF FF FF FF FF     
   6178 FFFC74E4 FF FF FF FF FF FF FF FF     
   6179 FFFC74EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 46
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6180 FFFC74F4 FF FF FF FF FF FF FF FF     
   6181 FFFC74FC FF FF FF FF FF FF FF FF     
   6182 FFFC7504 FF FF FF FF FF FF FF FF     
   6183 FFFC750C FF FF FF FF FF FF FF FF     
   6184 FFFC7514 FF FF FF FF FF FF FF FF     
   6185 FFFC751C FF FF FF FF FF FF FF FF     
   6186 FFFC7524 FF FF FF FF FF FF FF FF     
   6187 FFFC752C FF FF FF FF FF FF FF FF     
   6188 FFFC7534 FF FF FF FF FF FF FF FF     
   6189 FFFC753C FF FF FF FF FF FF FF FF     
   6190 FFFC7544 FF FF FF FF FF FF FF FF     
   6191 FFFC754C FF FF FF FF FF FF FF FF     
   6192 FFFC7554 FF FF FF FF FF FF FF FF     
   6193 FFFC755C FF FF FF FF FF FF FF FF     
   6194 FFFC7564 FF FF FF FF FF FF FF FF     
   6195 FFFC756C FF FF FF FF FF FF FF FF     
   6196 FFFC7574 FF FF FF FF FF FF FF FF     
   6197 FFFC757C FF FF FF FF FF FF FF FF     
   6198 FFFC7584 FF FF FF FF FF FF FF FF     
   6199 FFFC758C FF FF FF FF FF FF FF FF     
   6200 FFFC7594 FF FF FF FF FF FF FF FF     
   6201 FFFC759C FF FF FF FF FF FF FF FF     
   6202 FFFC75A4 FF FF FF FF FF FF FF FF     
   6203 FFFC75AC FF FF FF FF FF FF FF FF     
   6204 FFFC75B4 FF FF FF FF FF FF FF FF     
   6205 FFFC75BC FF FF FF FF FF FF FF FF     
   6206 FFFC75C4 FF FF FF FF FF FF FF FF     
   6207 FFFC75CC FF FF FF FF FF FF FF FF     
   6208 FFFC75D4 FF FF FF FF FF FF FF FF     
   6209 FFFC75DC FF FF FF FF FF FF FF FF     
   6210 FFFC75E4 FF FF FF FF FF FF FF FF     
   6211 FFFC75EC FF FF FF FF FF FF FF FF     
   6212 FFFC75F4 FF FF FF FF FF FF FF FF     
   6213 FFFC75FC FF FF FF FF FF FF FF FF     
   6214 FFFC7604 FF FF FF FF FF FF FF FF     
   6215 FFFC760C FF FF FF FF FF FF FF FF     
   6216 FFFC7614 FF FF FF FF FF FF FF FF     
   6217 FFFC761C FF FF FF FF FF FF FF FF     
   6218 FFFC7624 FF FF FF FF FF FF FF FF     
   6219 FFFC762C FF FF FF FF FF FF FF FF     
   6220 FFFC7634 FF FF FF FF FF FF FF FF     
   6221 FFFC763C FF FF FF FF FF FF FF FF     
   6222 FFFC7644 FF FF FF FF FF FF FF FF     
   6223 FFFC764C FF FF FF FF FF FF FF FF     
   6224 FFFC7654 FF FF FF FF FF FF FF FF     
   6225 FFFC765C FF FF FF FF FF FF FF FF     
   6226 FFFC7664 FF FF FF FF FF FF FF FF     
   6227 FFFC766C FF FF FF FF FF FF FF FF     
   6228 FFFC7674 FF FF FF FF FF FF FF FF     
   6229 FFFC767C FF FF FF FF FF FF FF FF     
   6230 FFFC7684 FF FF FF FF FF FF FF FF     
   6231 FFFC768C FF FF FF FF FF FF FF FF     
   6232 FFFC7694 FF FF FF FF FF FF FF FF     
   6233 FFFC769C FF FF FF FF FF FF FF FF     
   6234 FFFC76A4 FF FF FF FF FF FF FF FF     
   6235 FFFC76AC FF FF FF FF FF FF FF FF     
   6236 FFFC76B4 FF FF FF FF FF FF FF FF     
   6237 FFFC76BC FF FF FF FF FF FF FF FF     
   6238 FFFC76C4 FF FF FF FF FF FF FF FF     
   6239 FFFC76CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 47
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6240 FFFC76D4 FF FF FF FF FF FF FF FF     
   6241 FFFC76DC FF FF FF FF FF FF FF FF     
   6242 FFFC76E4 FF FF FF FF FF FF FF FF     
   6243 FFFC76EC FF FF FF FF FF FF FF FF     
   6244 FFFC76F4 FF FF FF FF FF FF FF FF     
   6245 FFFC76FC FF FF FF FF FF FF FF FF     
   6246 FFFC7704 FF FF FF FF FF FF FF FF     
   6247 FFFC770C FF FF FF FF FF FF FF FF     
   6248 FFFC7714 FF FF FF FF FF FF FF FF     
   6249 FFFC771C FF FF FF FF FF FF FF FF     
   6250 FFFC7724 FF FF FF FF FF FF FF FF     
   6251 FFFC772C FF FF FF FF FF FF FF FF     
   6252 FFFC7734 FF FF FF FF FF FF FF FF     
   6253 FFFC773C FF FF FF FF FF FF FF FF     
   6254 FFFC7744 FF FF FF FF FF FF FF FF     
   6255 FFFC774C FF FF FF FF FF FF FF FF     
   6256 FFFC7754 FF FF FF FF FF FF FF FF     
   6257 FFFC775C FF FF FF FF FF FF FF FF     
   6258 FFFC7764 FF FF FF FF FF FF FF FF     
   6259 FFFC776C FF FF FF FF FF FF FF FF     
   6260 FFFC7774 FF FF FF FF FF FF FF FF     
   6261 FFFC777C FF FF FF FF FF FF FF FF     
   6262 FFFC7784 FF FF FF FF FF FF FF FF     
   6263 FFFC778C FF FF FF FF FF FF FF FF     
   6264 FFFC7794 FF FF FF FF FF FF FF FF     
   6265 FFFC779C FF FF FF FF FF FF FF FF     
   6266 FFFC77A4 FF FF FF FF FF FF FF FF     
   6267 FFFC77AC FF FF FF FF FF FF FF FF     
   6268 FFFC77B4 FF FF FF FF FF FF FF FF     
   6269 FFFC77BC FF FF FF FF FF FF FF FF     
   6270 FFFC77C4 FF FF FF FF FF FF FF FF     
   6271 FFFC77CC FF FF FF FF FF FF FF FF     
   6272 FFFC77D4 FF FF FF FF FF FF FF FF     
   6273 FFFC77DC FF FF FF FF FF FF FF FF     
   6274 FFFC77E4 FF FF FF FF FF FF FF FF     
   6275 FFFC77EC FF FF FF FF FF FF FF FF     
   6276 FFFC77F4 FF FF FF FF FF FF FF FF     
   6277 FFFC77FC FF FF FF FF FF FF FF FF     
   6278 FFFC7804 FF FF FF FF FF FF FF FF     
   6279 FFFC780C FF FF FF FF FF FF FF FF     
   6280 FFFC7814 FF FF FF FF FF FF FF FF     
   6281 FFFC781C FF FF FF FF FF FF FF FF     
   6282 FFFC7824 FF FF FF FF FF FF FF FF     
   6283 FFFC782C FF FF FF FF FF FF FF FF     
   6284 FFFC7834 FF FF FF FF FF FF FF FF     
   6285 FFFC783C FF FF FF FF FF FF FF FF     
   6286 FFFC7844 FF FF FF FF FF FF FF FF     
   6287 FFFC784C FF FF FF FF FF FF FF FF     
   6288 FFFC7854 FF FF FF FF FF FF FF FF     
   6289 FFFC785C FF FF FF FF FF FF FF FF     
   6290 FFFC7864 FF FF FF FF FF FF FF FF     
   6291 FFFC786C FF FF FF FF FF FF FF FF     
   6292 FFFC7874 FF FF FF FF FF FF FF FF     
   6293 FFFC787C FF FF FF FF FF FF FF FF     
   6294 FFFC7884 FF FF FF FF FF FF FF FF     
   6295 FFFC788C FF FF FF FF FF FF FF FF     
   6296 FFFC7894 FF FF FF FF FF FF FF FF     
   6297 FFFC789C FF FF FF FF FF FF FF FF     
   6298 FFFC78A4 FF FF FF FF FF FF FF FF     
   6299 FFFC78AC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 48
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6300 FFFC78B4 FF FF FF FF FF FF FF FF     
   6301 FFFC78BC FF FF FF FF FF FF FF FF     
   6302 FFFC78C4 FF FF FF FF FF FF FF FF     
   6303 FFFC78CC FF FF FF FF FF FF FF FF     
   6304 FFFC78D4 FF FF FF FF FF FF FF FF     
   6305 FFFC78DC FF FF FF FF FF FF FF FF     
   6306 FFFC78E4 FF FF FF FF FF FF FF FF     
   6307 FFFC78EC FF FF FF FF FF FF FF FF     
   6308 FFFC78F4 FF FF FF FF FF FF FF FF     
   6309 FFFC78FC FF FF FF FF FF FF FF FF     
   6310 FFFC7904 FF FF FF FF FF FF FF FF     
   6311 FFFC790C FF FF FF FF FF FF FF FF     
   6312 FFFC7914 FF FF FF FF FF FF FF FF     
   6313 FFFC791C FF FF FF FF FF FF FF FF     
   6314 FFFC7924 FF FF FF FF FF FF FF FF     
   6315 FFFC792C FF FF FF FF FF FF FF FF     
   6316 FFFC7934 FF FF FF FF FF FF FF FF     
   6317 FFFC793C FF FF FF FF FF FF FF FF     
   6318 FFFC7944 FF FF FF FF FF FF FF FF     
   6319 FFFC794C FF FF FF FF FF FF FF FF     
   6320 FFFC7954 FF FF FF FF FF FF FF FF     
   6321 FFFC795C FF FF FF FF FF FF FF FF     
   6322 FFFC7964 FF FF FF FF FF FF FF FF     
   6323 FFFC796C FF FF FF FF FF FF FF FF     
   6324 FFFC7974 FF FF FF FF FF FF FF FF     
   6325 FFFC797C FF FF FF FF FF FF FF FF     
   6326 FFFC7984 FF FF FF FF FF FF FF FF     
   6327 FFFC798C FF FF FF FF FF FF FF FF     
   6328 FFFC7994 FF FF FF FF FF FF FF FF     
   6329 FFFC799C FF FF FF FF FF FF FF FF     
   6330 FFFC79A4 FF FF FF FF FF FF FF FF     
   6331 FFFC79AC FF FF FF FF FF FF FF FF     
   6332 FFFC79B4 FF FF FF FF FF FF FF FF     
   6333 FFFC79BC FF FF FF FF FF FF FF FF     
   6334 FFFC79C4 FF FF FF FF FF FF FF FF     
   6335 FFFC79CC FF FF FF FF FF FF FF FF     
   6336 FFFC79D4 FF FF FF FF FF FF FF FF     
   6337 FFFC79DC FF FF FF FF FF FF FF FF     
   6338 FFFC79E4 FF FF FF FF FF FF FF FF     
   6339 FFFC79EC FF FF FF FF FF FF FF FF     
   6340 FFFC79F4 FF FF FF FF FF FF FF FF     
   6341 FFFC79FC FF FF FF FF FF FF FF FF     
   6342 FFFC7A04 FF FF FF FF FF FF FF FF     
   6343 FFFC7A0C FF FF FF FF FF FF FF FF     
   6344 FFFC7A14 FF FF FF FF FF FF FF FF     
   6345 FFFC7A1C FF FF FF FF FF FF FF FF     
   6346 FFFC7A24 FF FF FF FF FF FF FF FF     
   6347 FFFC7A2C FF FF FF FF FF FF FF FF     
   6348 FFFC7A34 FF FF FF FF FF FF FF FF     
   6349 FFFC7A3C FF FF FF FF FF FF FF FF     
   6350 FFFC7A44 FF FF FF FF FF FF FF FF     
   6351 FFFC7A4C FF FF FF FF FF FF FF FF     
   6352 FFFC7A54 FF FF FF FF FF FF FF FF     
   6353 FFFC7A5C FF FF FF FF FF FF FF FF     
   6354 FFFC7A64 FF FF FF FF FF FF FF FF     
   6355 FFFC7A6C FF FF FF FF FF FF FF FF     
   6356 FFFC7A74 FF FF FF FF FF FF FF FF     
   6357 FFFC7A7C FF FF FF FF FF FF FF FF     
   6358 FFFC7A84 FF FF FF FF FF FF FF FF     
   6359 FFFC7A8C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 49
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6360 FFFC7A94 FF FF FF FF FF FF FF FF     
   6361 FFFC7A9C FF FF FF FF FF FF FF FF     
   6362 FFFC7AA4 FF FF FF FF FF FF FF FF     
   6363 FFFC7AAC FF FF FF FF FF FF FF FF     
   6364 FFFC7AB4 FF FF FF FF FF FF FF FF     
   6365 FFFC7ABC FF FF FF FF FF FF FF FF     
   6366 FFFC7AC4 FF FF FF FF FF FF FF FF     
   6367 FFFC7ACC FF FF FF FF FF FF FF FF     
   6368 FFFC7AD4 FF FF FF FF FF FF FF FF     
   6369 FFFC7ADC FF FF FF FF FF FF FF FF     
   6370 FFFC7AE4 FF FF FF FF FF FF FF FF     
   6371 FFFC7AEC FF FF FF FF FF FF FF FF     
   6372 FFFC7AF4 FF FF FF FF FF FF FF FF     
   6373 FFFC7AFC FF FF FF FF FF FF FF FF     
   6374 FFFC7B04 FF FF FF FF FF FF FF FF     
   6375 FFFC7B0C FF FF FF FF FF FF FF FF     
   6376 FFFC7B14 FF FF FF FF FF FF FF FF     
   6377 FFFC7B1C FF FF FF FF FF FF FF FF     
   6378 FFFC7B24 FF FF FF FF FF FF FF FF     
   6379 FFFC7B2C FF FF FF FF FF FF FF FF     
   6380 FFFC7B34 FF FF FF FF FF FF FF FF     
   6381 FFFC7B3C FF FF FF FF FF FF FF FF     
   6382 FFFC7B44 FF FF FF FF FF FF FF FF     
   6383 FFFC7B4C FF FF FF FF FF FF FF FF     
   6384 FFFC7B54 FF FF FF FF FF FF FF FF     
   6385 FFFC7B5C FF FF FF FF FF FF FF FF     
   6386 FFFC7B64 FF FF FF FF FF FF FF FF     
   6387 FFFC7B6C FF FF FF FF FF FF FF FF     
   6388 FFFC7B74 FF FF FF FF FF FF FF FF     
   6389 FFFC7B7C FF FF FF FF FF FF FF FF     
   6390 FFFC7B84 FF FF FF FF FF FF FF FF     
   6391 FFFC7B8C FF FF FF FF FF FF FF FF     
   6392 FFFC7B94 FF FF FF FF FF FF FF FF     
   6393 FFFC7B9C FF FF FF FF FF FF FF FF     
   6394 FFFC7BA4 FF FF FF FF FF FF FF FF     
   6395 FFFC7BAC FF FF FF FF FF FF FF FF     
   6396 FFFC7BB4 FF FF FF FF FF FF FF FF     
   6397 FFFC7BBC FF FF FF FF FF FF FF FF     
   6398 FFFC7BC4 FF FF FF FF FF FF FF FF     
   6399 FFFC7BCC FF FF FF FF FF FF FF FF     
   6400 FFFC7BD4 FF FF FF FF FF FF FF FF     
   6401 FFFC7BDC FF FF FF FF FF FF FF FF     
   6402 FFFC7BE4 FF FF FF FF FF FF FF FF     
   6403 FFFC7BEC FF FF FF FF FF FF FF FF     
   6404 FFFC7BF4 FF FF FF FF FF FF FF FF     
   6405 FFFC7BFC FF FF FF FF FF FF FF FF     
   6406 FFFC7C04 FF FF FF FF FF FF FF FF     
   6407 FFFC7C0C FF FF FF FF FF FF FF FF     
   6408 FFFC7C14 FF FF FF FF FF FF FF FF     
   6409 FFFC7C1C FF FF FF FF FF FF FF FF     
   6410 FFFC7C24 FF FF FF FF FF FF FF FF     
   6411 FFFC7C2C FF FF FF FF FF FF FF FF     
   6412 FFFC7C34 FF FF FF FF FF FF FF FF     
   6413 FFFC7C3C FF FF FF FF FF FF FF FF     
   6414 FFFC7C44 FF FF FF FF FF FF FF FF     
   6415 FFFC7C4C FF FF FF FF FF FF FF FF     
   6416 FFFC7C54 FF FF FF FF FF FF FF FF     
   6417 FFFC7C5C FF FF FF FF FF FF FF FF     
   6418 FFFC7C64 FF FF FF FF FF FF FF FF     
   6419 FFFC7C6C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 50
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6420 FFFC7C74 FF FF FF FF FF FF FF FF     
   6421 FFFC7C7C FF FF FF FF FF FF FF FF     
   6422 FFFC7C84 FF FF FF FF FF FF FF FF     
   6423 FFFC7C8C FF FF FF FF FF FF FF FF     
   6424 FFFC7C94 FF FF FF FF FF FF FF FF     
   6425 FFFC7C9C FF FF FF FF FF FF FF FF     
   6426 FFFC7CA4 FF FF FF FF FF FF FF FF     
   6427 FFFC7CAC FF FF FF FF FF FF FF FF     
   6428 FFFC7CB4 FF FF FF FF FF FF FF FF     
   6429 FFFC7CBC FF FF FF FF FF FF FF FF     
   6430 FFFC7CC4 FF FF FF FF FF FF FF FF     
   6431 FFFC7CCC FF FF FF FF FF FF FF FF     
   6432 FFFC7CD4 FF FF FF FF FF FF FF FF     
   6433 FFFC7CDC FF FF FF FF FF FF FF FF     
   6434 FFFC7CE4 FF FF FF FF FF FF FF FF     
   6435 FFFC7CEC FF FF FF FF FF FF FF FF     
   6436 FFFC7CF4 FF FF FF FF FF FF FF FF     
   6437 FFFC7CFC FF FF FF FF FF FF FF FF     
   6438 FFFC7D04 FF FF FF FF FF FF FF FF     
   6439 FFFC7D0C FF FF FF FF FF FF FF FF     
   6440 FFFC7D14 FF FF FF FF FF FF FF FF     
   6441 FFFC7D1C FF FF FF FF FF FF FF FF     
   6442 FFFC7D24 FF FF FF FF FF FF FF FF     
   6443 FFFC7D2C FF FF FF FF FF FF FF FF     
   6444 FFFC7D34 FF FF FF FF FF FF FF FF     
   6445 FFFC7D3C FF FF FF FF FF FF FF FF     
   6446 FFFC7D44 FF FF FF FF FF FF FF FF     
   6447 FFFC7D4C FF FF FF FF FF FF FF FF     
   6448 FFFC7D54 FF FF FF FF FF FF FF FF     
   6449 FFFC7D5C FF FF FF FF FF FF FF FF     
   6450 FFFC7D64 FF FF FF FF FF FF FF FF     
   6451 FFFC7D6C FF FF FF FF FF FF FF FF     
   6452 FFFC7D74 FF FF FF FF FF FF FF FF     
   6453 FFFC7D7C FF FF FF FF FF FF FF FF     
   6454 FFFC7D84 FF FF FF FF FF FF FF FF     
   6455 FFFC7D8C FF FF FF FF FF FF FF FF     
   6456 FFFC7D94 FF FF FF FF FF FF FF FF     
   6457 FFFC7D9C FF FF FF FF FF FF FF FF     
   6458 FFFC7DA4 FF FF FF FF FF FF FF FF     
   6459 FFFC7DAC FF FF FF FF FF FF FF FF     
   6460 FFFC7DB4 FF FF FF FF FF FF FF FF     
   6461 FFFC7DBC FF FF FF FF FF FF FF FF     
   6462 FFFC7DC4 FF FF FF FF FF FF FF FF     
   6463 FFFC7DCC FF FF FF FF FF FF FF FF     
   6464 FFFC7DD4 FF FF FF FF FF FF FF FF     
   6465 FFFC7DDC FF FF FF FF FF FF FF FF     
   6466 FFFC7DE4 FF FF FF FF FF FF FF FF     
   6467 FFFC7DEC FF FF FF FF FF FF FF FF     
   6468 FFFC7DF4 FF FF FF FF FF FF FF FF     
   6469 FFFC7DFC FF FF FF FF FF FF FF FF     
   6470 FFFC7E04 FF FF FF FF FF FF FF FF     
   6471 FFFC7E0C FF FF FF FF FF FF FF FF     
   6472 FFFC7E14 FF FF FF FF FF FF FF FF     
   6473 FFFC7E1C FF FF FF FF FF FF FF FF     
   6474 FFFC7E24 FF FF FF FF FF FF FF FF     
   6475 FFFC7E2C FF FF FF FF FF FF FF FF     
   6476 FFFC7E34 FF FF FF FF FF FF FF FF     
   6477 FFFC7E3C FF FF FF FF FF FF FF FF     
   6478 FFFC7E44 FF FF FF FF FF FF FF FF     
   6479 FFFC7E4C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 51
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6480 FFFC7E54 FF FF FF FF FF FF FF FF     
   6481 FFFC7E5C FF FF FF FF FF FF FF FF     
   6482 FFFC7E64 FF FF FF FF FF FF FF FF     
   6483 FFFC7E6C FF FF FF FF FF FF FF FF     
   6484 FFFC7E74 FF FF FF FF FF FF FF FF     
   6485 FFFC7E7C FF FF FF FF FF FF FF FF     
   6486 FFFC7E84 FF FF FF FF FF FF FF FF     
   6487 FFFC7E8C FF FF FF FF FF FF FF FF     
   6488 FFFC7E94 FF FF FF FF FF FF FF FF     
   6489 FFFC7E9C FF FF FF FF FF FF FF FF     
   6490 FFFC7EA4 FF FF FF FF FF FF FF FF     
   6491 FFFC7EAC FF FF FF FF FF FF FF FF     
   6492 FFFC7EB4 FF FF FF FF FF FF FF FF     
   6493 FFFC7EBC FF FF FF FF FF FF FF FF     
   6494 FFFC7EC4 FF FF FF FF FF FF FF FF     
   6495 FFFC7ECC FF FF FF FF FF FF FF FF     
   6496 FFFC7ED4 FF FF FF FF FF FF FF FF     
   6497 FFFC7EDC FF FF FF FF FF FF FF FF     
   6498 FFFC7EE4 FF FF FF FF FF FF FF FF     
   6499 FFFC7EEC FF FF FF FF FF FF FF FF     
   6500 FFFC7EF4 FF FF FF FF FF FF FF FF     
   6501 FFFC7EFC FF FF FF FF FF FF FF FF     
   6502 FFFC7F04 FF FF FF FF FF FF FF FF     
   6503 FFFC7F0C FF FF FF FF FF FF FF FF     
   6504 FFFC7F14 FF FF FF FF FF FF FF FF     
   6505 FFFC7F1C FF FF FF FF FF FF FF FF     
   6506 FFFC7F24 FF FF FF FF FF FF FF FF     
   6507 FFFC7F2C FF FF FF FF FF FF FF FF     
   6508 FFFC7F34 FF FF FF FF FF FF FF FF     
   6509 FFFC7F3C FF FF FF FF FF FF FF FF     
   6510 FFFC7F44 FF FF FF FF FF FF FF FF     
   6511 FFFC7F4C FF FF FF FF FF FF FF FF     
   6512 FFFC7F54 FF FF FF FF FF FF FF FF     
   6513 FFFC7F5C FF FF FF FF FF FF FF FF     
   6514 FFFC7F64 FF FF FF FF FF FF FF FF     
   6515 FFFC7F6C FF FF FF FF FF FF FF FF     
   6516 FFFC7F74 FF FF FF FF FF FF FF FF     
   6517 FFFC7F7C FF FF FF FF FF FF FF FF     
   6518 FFFC7F84 FF FF FF FF FF FF FF FF     
   6519 FFFC7F8C FF FF FF FF FF FF FF FF     
   6520 FFFC7F94 FF FF FF FF FF FF FF FF     
   6521 FFFC7F9C FF FF FF FF FF FF FF FF     
   6522 FFFC7FA4 FF FF FF FF FF FF FF FF     
   6523 FFFC7FAC FF FF FF FF FF FF FF FF     
   6524 FFFC7FB4 FF FF FF FF FF FF FF FF     
   6525 FFFC7FBC FF FF FF FF FF FF FF FF     
   6526 FFFC7FC4 FF FF FF FF FF FF FF FF     
   6527 FFFC7FCC FF FF FF FF FF FF FF FF     
   6528 FFFC7FD4 FF FF FF FF FF FF FF FF     
   6529 FFFC7FDC FF FF FF FF FF FF FF FF     
   6530 FFFC7FE4 FF FF FF FF FF FF FF FF     
   6531 FFFC7FEC FF FF FF FF FF FF FF FF     
   6532 FFFC7FF4 FF FF FF FF FF FF FF FF     
   6533 FFFC7FFC FF FF FF FF FF FF FF FF     
   6534 FFFC8004 FF FF FF FF FF FF FF FF     
   6535 FFFC800C FF FF FF FF FF FF FF FF     
   6536 FFFC8014 FF FF FF FF FF FF FF FF     
   6537 FFFC801C FF FF FF FF FF FF FF FF     
   6538 FFFC8024 FF FF FF FF FF FF FF FF     
   6539 FFFC802C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 52
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6540 FFFC8034 FF FF FF FF FF FF FF FF     
   6541 FFFC803C FF FF FF FF FF FF FF FF     
   6542 FFFC8044 FF FF FF FF FF FF FF FF     
   6543 FFFC804C FF FF FF FF FF FF FF FF     
   6544 FFFC8054 FF FF FF FF FF FF FF FF     
   6545 FFFC805C FF FF FF FF FF FF FF FF     
   6546 FFFC8064 FF FF FF FF FF FF FF FF     
   6547 FFFC806C FF FF FF FF FF FF FF FF     
   6548 FFFC8074 FF FF FF FF FF FF FF FF     
   6549 FFFC807C FF FF FF FF FF FF FF FF     
   6550 FFFC8084 FF FF FF FF FF FF FF FF     
   6551 FFFC808C FF FF FF FF FF FF FF FF     
   6552 FFFC8094 FF FF FF FF FF FF FF FF     
   6553 FFFC809C FF FF FF FF FF FF FF FF     
   6554 FFFC80A4 FF FF FF FF FF FF FF FF     
   6555 FFFC80AC FF FF FF FF FF FF FF FF     
   6556 FFFC80B4 FF FF FF FF FF FF FF FF     
   6557 FFFC80BC FF FF FF FF FF FF FF FF     
   6558 FFFC80C4 FF FF FF FF FF FF FF FF     
   6559 FFFC80CC FF FF FF FF FF FF FF FF     
   6560 FFFC80D4 FF FF FF FF FF FF FF FF     
   6561 FFFC80DC FF FF FF FF FF FF FF FF     
   6562 FFFC80E4 FF FF FF FF FF FF FF FF     
   6563 FFFC80EC FF FF FF FF FF FF FF FF     
   6564 FFFC80F4 FF FF FF FF FF FF FF FF     
   6565 FFFC80FC FF FF FF FF FF FF FF FF     
   6566 FFFC8104 FF FF FF FF FF FF FF FF     
   6567 FFFC810C FF FF FF FF FF FF FF FF     
   6568 FFFC8114 FF FF FF FF FF FF FF FF     
   6569 FFFC811C FF FF FF FF FF FF FF FF     
   6570 FFFC8124 FF FF FF FF FF FF FF FF     
   6571 FFFC812C FF FF FF FF FF FF FF FF     
   6572 FFFC8134 FF FF FF FF FF FF FF FF     
   6573 FFFC813C FF FF FF FF FF FF FF FF     
   6574 FFFC8144 FF FF FF FF FF FF FF FF     
   6575 FFFC814C FF FF FF FF FF FF FF FF     
   6576 FFFC8154 FF FF FF FF FF FF FF FF     
   6577 FFFC815C FF FF FF FF FF FF FF FF     
   6578 FFFC8164 FF FF FF FF FF FF FF FF     
   6579 FFFC816C FF FF FF FF FF FF FF FF     
   6580 FFFC8174 FF FF FF FF FF FF FF FF     
   6581 FFFC817C FF FF FF FF FF FF FF FF     
   6582 FFFC8184 FF FF FF FF FF FF FF FF     
   6583 FFFC818C FF FF FF FF FF FF FF FF     
   6584 FFFC8194 FF FF FF FF FF FF FF FF     
   6585 FFFC819C FF FF FF FF FF FF FF FF     
   6586 FFFC81A4 FF FF FF FF FF FF FF FF     
   6587 FFFC81AC FF FF FF FF FF FF FF FF     
   6588 FFFC81B4 FF FF FF FF FF FF FF FF     
   6589 FFFC81BC FF FF FF FF FF FF FF FF     
   6590 FFFC81C4 FF FF FF FF FF FF FF FF     
   6591 FFFC81CC FF FF FF FF FF FF FF FF     
   6592 FFFC81D4 FF FF FF FF FF FF FF FF     
   6593 FFFC81DC FF FF FF FF FF FF FF FF     
   6594 FFFC81E4 FF FF FF FF FF FF FF FF     
   6595 FFFC81EC FF FF FF FF FF FF FF FF     
   6596 FFFC81F4 FF FF FF FF FF FF FF FF     
   6597 FFFC81FC FF FF FF FF FF FF FF FF     
   6598 FFFC8204 FF FF FF FF FF FF FF FF     
   6599 FFFC820C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 53
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6600 FFFC8214 FF FF FF FF FF FF FF FF     
   6601 FFFC821C FF FF FF FF FF FF FF FF     
   6602 FFFC8224 FF FF FF FF FF FF FF FF     
   6603 FFFC822C FF FF FF FF FF FF FF FF     
   6604 FFFC8234 FF FF FF FF FF FF FF FF     
   6605 FFFC823C FF FF FF FF FF FF FF FF     
   6606 FFFC8244 FF FF FF FF FF FF FF FF     
   6607 FFFC824C FF FF FF FF FF FF FF FF     
   6608 FFFC8254 FF FF FF FF FF FF FF FF     
   6609 FFFC825C FF FF FF FF FF FF FF FF     
   6610 FFFC8264 FF FF FF FF FF FF FF FF     
   6611 FFFC826C FF FF FF FF FF FF FF FF     
   6612 FFFC8274 FF FF FF FF FF FF FF FF     
   6613 FFFC827C FF FF FF FF FF FF FF FF     
   6614 FFFC8284 FF FF FF FF FF FF FF FF     
   6615 FFFC828C FF FF FF FF FF FF FF FF     
   6616 FFFC8294 FF FF FF FF FF FF FF FF     
   6617 FFFC829C FF FF FF FF FF FF FF FF     
   6618 FFFC82A4 FF FF FF FF FF FF FF FF     
   6619 FFFC82AC FF FF FF FF FF FF FF FF     
   6620 FFFC82B4 FF FF FF FF FF FF FF FF     
   6621 FFFC82BC FF FF FF FF FF FF FF FF     
   6622 FFFC82C4 FF FF FF FF FF FF FF FF     
   6623 FFFC82CC FF FF FF FF FF FF FF FF     
   6624 FFFC82D4 FF FF FF FF FF FF FF FF     
   6625 FFFC82DC FF FF FF FF FF FF FF FF     
   6626 FFFC82E4 FF FF FF FF FF FF FF FF     
   6627 FFFC82EC FF FF FF FF FF FF FF FF     
   6628 FFFC82F4 FF FF FF FF FF FF FF FF     
   6629 FFFC82FC FF FF FF FF FF FF FF FF     
   6630 FFFC8304 FF FF FF FF FF FF FF FF     
   6631 FFFC830C FF FF FF FF FF FF FF FF     
   6632 FFFC8314 FF FF FF FF FF FF FF FF     
   6633 FFFC831C FF FF FF FF FF FF FF FF     
   6634 FFFC8324 FF FF FF FF FF FF FF FF     
   6635 FFFC832C FF FF FF FF FF FF FF FF     
   6636 FFFC8334 FF FF FF FF FF FF FF FF     
   6637 FFFC833C FF FF FF FF FF FF FF FF     
   6638 FFFC8344 FF FF FF FF FF FF FF FF     
   6639 FFFC834C FF FF FF FF FF FF FF FF     
   6640 FFFC8354 FF FF FF FF FF FF FF FF     
   6641 FFFC835C FF FF FF FF FF FF FF FF     
   6642 FFFC8364 FF FF FF FF FF FF FF FF     
   6643 FFFC836C FF FF FF FF FF FF FF FF     
   6644 FFFC8374 FF FF FF FF FF FF FF FF     
   6645 FFFC837C FF FF FF FF FF FF FF FF     
   6646 FFFC8384 FF FF FF FF FF FF FF FF     
   6647 FFFC838C FF FF FF FF FF FF FF FF     
   6648 FFFC8394 FF FF FF FF FF FF FF FF     
   6649 FFFC839C FF FF FF FF FF FF FF FF     
   6650 FFFC83A4 FF FF FF FF FF FF FF FF     
   6651 FFFC83AC FF FF FF FF FF FF FF FF     
   6652 FFFC83B4 FF FF FF FF FF FF FF FF     
   6653 FFFC83BC FF FF FF FF FF FF FF FF     
   6654 FFFC83C4 FF FF FF FF FF FF FF FF     
   6655 FFFC83CC FF FF FF FF FF FF FF FF     
   6656 FFFC83D4 FF FF FF FF FF FF FF FF     
   6657 FFFC83DC FF FF FF FF FF FF FF FF     
   6658 FFFC83E4 FF FF FF FF FF FF FF FF     
   6659 FFFC83EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 54
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6660 FFFC83F4 FF FF FF FF FF FF FF FF     
   6661 FFFC83FC FF FF FF FF FF FF FF FF     
   6662 FFFC8404 FF FF FF FF FF FF FF FF     
   6663 FFFC840C FF FF FF FF FF FF FF FF     
   6664 FFFC8414 FF FF FF FF FF FF FF FF     
   6665 FFFC841C FF FF FF FF FF FF FF FF     
   6666 FFFC8424 FF FF FF FF FF FF FF FF     
   6667 FFFC842C FF FF FF FF FF FF FF FF     
   6668 FFFC8434 FF FF FF FF FF FF FF FF     
   6669 FFFC843C FF FF FF FF FF FF FF FF     
   6670 FFFC8444 FF FF FF FF FF FF FF FF     
   6671 FFFC844C FF FF FF FF FF FF FF FF     
   6672 FFFC8454 FF FF FF FF FF FF FF FF     
   6673 FFFC845C FF FF FF FF FF FF FF FF     
   6674 FFFC8464 FF FF FF FF FF FF FF FF     
   6675 FFFC846C FF FF FF FF FF FF FF FF     
   6676 FFFC8474 FF FF FF FF FF FF FF FF     
   6677 FFFC847C FF FF FF FF FF FF FF FF     
   6678 FFFC8484 FF FF FF FF FF FF FF FF     
   6679 FFFC848C FF FF FF FF FF FF FF FF     
   6680 FFFC8494 FF FF FF FF FF FF FF FF     
   6681 FFFC849C FF FF FF FF FF FF FF FF     
   6682 FFFC84A4 FF FF FF FF FF FF FF FF     
   6683 FFFC84AC FF FF FF FF FF FF FF FF     
   6684 FFFC84B4 FF FF FF FF FF FF FF FF     
   6685 FFFC84BC FF FF FF FF FF FF FF FF     
   6686 FFFC84C4 FF FF FF FF FF FF FF FF     
   6687 FFFC84CC FF FF FF FF FF FF FF FF     
   6688 FFFC84D4 FF FF FF FF FF FF FF FF     
   6689 FFFC84DC FF FF FF FF FF FF FF FF     
   6690 FFFC84E4 FF FF FF FF FF FF FF FF     
   6691 FFFC84EC FF FF FF FF FF FF FF FF     
   6692 FFFC84F4 FF FF FF FF FF FF FF FF     
   6693 FFFC84FC FF FF FF FF FF FF FF FF     
   6694 FFFC8504 FF FF FF FF FF FF FF FF     
   6695 FFFC850C FF FF FF FF FF FF FF FF     
   6696 FFFC8514 FF FF FF FF FF FF FF FF     
   6697 FFFC851C FF FF FF FF FF FF FF FF     
   6698 FFFC8524 FF FF FF FF FF FF FF FF     
   6699 FFFC852C FF FF FF FF FF FF FF FF     
   6700 FFFC8534 FF FF FF FF FF FF FF FF     
   6701 FFFC853C FF FF FF FF FF FF FF FF     
   6702 FFFC8544 FF FF FF FF FF FF FF FF     
   6703 FFFC854C FF FF FF FF FF FF FF FF     
   6704 FFFC8554 FF FF FF FF FF FF FF FF     
   6705 FFFC855C FF FF FF FF FF FF FF FF     
   6706 FFFC8564 FF FF FF FF FF FF FF FF     
   6707 FFFC856C FF FF FF FF FF FF FF FF     
   6708 FFFC8574 FF FF FF FF FF FF FF FF     
   6709 FFFC857C FF FF FF FF FF FF FF FF     
   6710 FFFC8584 FF FF FF FF FF FF FF FF     
   6711 FFFC858C FF FF FF FF FF FF FF FF     
   6712 FFFC8594 FF FF FF FF FF FF FF FF     
   6713 FFFC859C FF FF FF FF FF FF FF FF     
   6714 FFFC85A4 FF FF FF FF FF FF FF FF     
   6715 FFFC85AC FF FF FF FF FF FF FF FF     
   6716 FFFC85B4 FF FF FF FF FF FF FF FF     
   6717 FFFC85BC FF FF FF FF FF FF FF FF     
   6718 FFFC85C4 FF FF FF FF FF FF FF FF     
   6719 FFFC85CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 55
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6720 FFFC85D4 FF FF FF FF FF FF FF FF     
   6721 FFFC85DC FF FF FF FF FF FF FF FF     
   6722 FFFC85E4 FF FF FF FF FF FF FF FF     
   6723 FFFC85EC FF FF FF FF FF FF FF FF     
   6724 FFFC85F4 FF FF FF FF FF FF FF FF     
   6725 FFFC85FC FF FF FF FF FF FF FF FF     
   6726 FFFC8604 FF FF FF FF FF FF FF FF     
   6727 FFFC860C FF FF FF FF FF FF FF FF     
   6728 FFFC8614 FF FF FF FF FF FF FF FF     
   6729 FFFC861C FF FF FF FF FF FF FF FF     
   6730 FFFC8624 FF FF FF FF FF FF FF FF     
   6731 FFFC862C FF FF FF FF FF FF FF FF     
   6732 FFFC8634 FF FF FF FF FF FF FF FF     
   6733 FFFC863C FF FF FF FF FF FF FF FF     
   6734 FFFC8644 FF FF FF FF FF FF FF FF     
   6735 FFFC864C FF FF FF FF FF FF FF FF     
   6736 FFFC8654 FF FF FF FF FF FF FF FF     
   6737 FFFC865C FF FF FF FF FF FF FF FF     
   6738 FFFC8664 FF FF FF FF FF FF FF FF     
   6739 FFFC866C FF FF FF FF FF FF FF FF     
   6740 FFFC8674 FF FF FF FF FF FF FF FF     
   6741 FFFC867C FF FF FF FF FF FF FF FF     
   6742 FFFC8684 FF FF FF FF FF FF FF FF     
   6743 FFFC868C FF FF FF FF FF FF FF FF     
   6744 FFFC8694 FF FF FF FF FF FF FF FF     
   6745 FFFC869C FF FF FF FF FF FF FF FF     
   6746 FFFC86A4 FF FF FF FF FF FF FF FF     
   6747 FFFC86AC FF FF FF FF FF FF FF FF     
   6748 FFFC86B4 FF FF FF FF FF FF FF FF     
   6749 FFFC86BC FF FF FF FF FF FF FF FF     
   6750 FFFC86C4 FF FF FF FF FF FF FF FF     
   6751 FFFC86CC FF FF FF FF FF FF FF FF     
   6752 FFFC86D4 FF FF FF FF FF FF FF FF     
   6753 FFFC86DC FF FF FF FF FF FF FF FF     
   6754 FFFC86E4 FF FF FF FF FF FF FF FF     
   6755 FFFC86EC FF FF FF FF FF FF FF FF     
   6756 FFFC86F4 FF FF FF FF FF FF FF FF     
   6757 FFFC86FC FF FF FF FF FF FF FF FF     
   6758 FFFC8704 FF FF FF FF FF FF FF FF     
   6759 FFFC870C FF FF FF FF FF FF FF FF     
   6760 FFFC8714 FF FF FF FF FF FF FF FF     
   6761 FFFC871C FF FF FF FF FF FF FF FF     
   6762 FFFC8724 FF FF FF FF FF FF FF FF     
   6763 FFFC872C FF FF FF FF FF FF FF FF     
   6764 FFFC8734 FF FF FF FF FF FF FF FF     
   6765 FFFC873C FF FF FF FF FF FF FF FF     
   6766 FFFC8744 FF FF FF FF FF FF FF FF     
   6767 FFFC874C FF FF FF FF FF FF FF FF     
   6768 FFFC8754 FF FF FF FF FF FF FF FF     
   6769 FFFC875C FF FF FF FF FF FF FF FF     
   6770 FFFC8764 FF FF FF FF FF FF FF FF     
   6771 FFFC876C FF FF FF FF FF FF FF FF     
   6772 FFFC8774 FF FF FF FF FF FF FF FF     
   6773 FFFC877C FF FF FF FF FF FF FF FF     
   6774 FFFC8784 FF FF FF FF FF FF FF FF     
   6775 FFFC878C FF FF FF FF FF FF FF FF     
   6776 FFFC8794 FF FF FF FF FF FF FF FF     
   6777 FFFC879C FF FF FF FF FF FF FF FF     
   6778 FFFC87A4 FF FF FF FF FF FF FF FF     
   6779 FFFC87AC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 56
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6780 FFFC87B4 FF FF FF FF FF FF FF FF     
   6781 FFFC87BC FF FF FF FF FF FF FF FF     
   6782 FFFC87C4 FF FF FF FF FF FF FF FF     
   6783 FFFC87CC FF FF FF FF FF FF FF FF     
   6784 FFFC87D4 FF FF FF FF FF FF FF FF     
   6785 FFFC87DC FF FF FF FF FF FF FF FF     
   6786 FFFC87E4 FF FF FF FF FF FF FF FF     
   6787 FFFC87EC FF FF FF FF FF FF FF FF     
   6788 FFFC87F4 FF FF FF FF FF FF FF FF     
   6789 FFFC87FC FF FF FF FF FF FF FF FF     
   6790 FFFC8804 FF FF FF FF FF FF FF FF     
   6791 FFFC880C FF FF FF FF FF FF FF FF     
   6792 FFFC8814 FF FF FF FF FF FF FF FF     
   6793 FFFC881C FF FF FF FF FF FF FF FF     
   6794 FFFC8824 FF FF FF FF FF FF FF FF     
   6795 FFFC882C FF FF FF FF FF FF FF FF     
   6796 FFFC8834 FF FF FF FF FF FF FF FF     
   6797 FFFC883C FF FF FF FF FF FF FF FF     
   6798 FFFC8844 FF FF FF FF FF FF FF FF     
   6799 FFFC884C FF FF FF FF FF FF FF FF     
   6800 FFFC8854 FF FF FF FF FF FF FF FF     
   6801 FFFC885C FF FF FF FF FF FF FF FF     
   6802 FFFC8864 FF FF FF FF FF FF FF FF     
   6803 FFFC886C FF FF FF FF FF FF FF FF     
   6804 FFFC8874 FF FF FF FF FF FF FF FF     
   6805 FFFC887C FF FF FF FF FF FF FF FF     
   6806 FFFC8884 FF FF FF FF FF FF FF FF     
   6807 FFFC888C FF FF FF FF FF FF FF FF     
   6808 FFFC8894 FF FF FF FF FF FF FF FF     
   6809 FFFC889C FF FF FF FF FF FF FF FF     
   6810 FFFC88A4 FF FF FF FF FF FF FF FF     
   6811 FFFC88AC FF FF FF FF FF FF FF FF     
   6812 FFFC88B4 FF FF FF FF FF FF FF FF     
   6813 FFFC88BC FF FF FF FF FF FF FF FF     
   6814 FFFC88C4 FF FF FF FF FF FF FF FF     
   6815 FFFC88CC FF FF FF FF FF FF FF FF     
   6816 FFFC88D4 FF FF FF FF FF FF FF FF     
   6817 FFFC88DC FF FF FF FF FF FF FF FF     
   6818 FFFC88E4 FF FF FF FF FF FF FF FF     
   6819 FFFC88EC FF FF FF FF FF FF FF FF     
   6820 FFFC88F4 FF FF FF FF FF FF FF FF     
   6821 FFFC88FC FF FF FF FF FF FF FF FF     
   6822 FFFC8904 FF FF FF FF FF FF FF FF     
   6823 FFFC890C FF FF FF FF FF FF FF FF     
   6824 FFFC8914 FF FF FF FF FF FF FF FF     
   6825 FFFC891C FF FF FF FF FF FF FF FF     
   6826 FFFC8924 FF FF FF FF FF FF FF FF     
   6827 FFFC892C FF FF FF FF FF FF FF FF     
   6828 FFFC8934 FF FF FF FF FF FF FF FF     
   6829 FFFC893C FF FF FF FF FF FF FF FF     
   6830 FFFC8944 FF FF FF FF FF FF FF FF     
   6831 FFFC894C FF FF FF FF FF FF FF FF     
   6832 FFFC8954 FF FF FF FF FF FF FF FF     
   6833 FFFC895C FF FF FF FF FF FF FF FF     
   6834 FFFC8964 FF FF FF FF FF FF FF FF     
   6835 FFFC896C FF FF FF FF FF FF FF FF     
   6836 FFFC8974 FF FF FF FF FF FF FF FF     
   6837 FFFC897C FF FF FF FF FF FF FF FF     
   6838 FFFC8984 FF FF FF FF FF FF FF FF     
   6839 FFFC898C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 57
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6840 FFFC8994 FF FF FF FF FF FF FF FF     
   6841 FFFC899C FF FF FF FF FF FF FF FF     
   6842 FFFC89A4 FF FF FF FF FF FF FF FF     
   6843 FFFC89AC FF FF FF FF FF FF FF FF     
   6844 FFFC89B4 FF FF FF FF FF FF FF FF     
   6845 FFFC89BC FF FF FF FF FF FF FF FF     
   6846 FFFC89C4 FF FF FF FF FF FF FF FF     
   6847 FFFC89CC FF FF FF FF FF FF FF FF     
   6848 FFFC89D4 FF FF FF FF FF FF FF FF     
   6849 FFFC89DC FF FF FF FF FF FF FF FF     
   6850 FFFC89E4 FF FF FF FF FF FF FF FF     
   6851 FFFC89EC FF FF FF FF FF FF FF FF     
   6852 FFFC89F4 FF FF FF FF FF FF FF FF     
   6853 FFFC89FC FF FF FF FF FF FF FF FF     
   6854 FFFC8A04 FF FF FF FF FF FF FF FF     
   6855 FFFC8A0C FF FF FF FF FF FF FF FF     
   6856 FFFC8A14 FF FF FF FF FF FF FF FF     
   6857 FFFC8A1C FF FF FF FF FF FF FF FF     
   6858 FFFC8A24 FF FF FF FF FF FF FF FF     
   6859 FFFC8A2C FF FF FF FF FF FF FF FF     
   6860 FFFC8A34 FF FF FF FF FF FF FF FF     
   6861 FFFC8A3C FF FF FF FF FF FF FF FF     
   6862 FFFC8A44 FF FF FF FF FF FF FF FF     
   6863 FFFC8A4C FF FF FF FF FF FF FF FF     
   6864 FFFC8A54 FF FF FF FF FF FF FF FF     
   6865 FFFC8A5C FF FF FF FF FF FF FF FF     
   6866 FFFC8A64 FF FF FF FF FF FF FF FF     
   6867 FFFC8A6C FF FF FF FF FF FF FF FF     
   6868 FFFC8A74 FF FF FF FF FF FF FF FF     
   6869 FFFC8A7C FF FF FF FF FF FF FF FF     
   6870 FFFC8A84 FF FF FF FF FF FF FF FF     
   6871 FFFC8A8C FF FF FF FF FF FF FF FF     
   6872 FFFC8A94 FF FF FF FF FF FF FF FF     
   6873 FFFC8A9C FF FF FF FF FF FF FF FF     
   6874 FFFC8AA4 FF FF FF FF FF FF FF FF     
   6875 FFFC8AAC FF FF FF FF FF FF FF FF     
   6876 FFFC8AB4 FF FF FF FF FF FF FF FF     
   6877 FFFC8ABC FF FF FF FF FF FF FF FF     
   6878 FFFC8AC4 FF FF FF FF FF FF FF FF     
   6879 FFFC8ACC FF FF FF FF FF FF FF FF     
   6880 FFFC8AD4 FF FF FF FF FF FF FF FF     
   6881 FFFC8ADC FF FF FF FF FF FF FF FF     
   6882 FFFC8AE4 FF FF FF FF FF FF FF FF     
   6883 FFFC8AEC FF FF FF FF FF FF FF FF     
   6884 FFFC8AF4 FF FF FF FF FF FF FF FF     
   6885 FFFC8AFC FF FF FF FF FF FF FF FF     
   6886 FFFC8B04 FF FF FF FF FF FF FF FF     
   6887 FFFC8B0C FF FF FF FF FF FF FF FF     
   6888 FFFC8B14 FF FF FF FF FF FF FF FF     
   6889 FFFC8B1C FF FF FF FF FF FF FF FF     
   6890 FFFC8B24 FF FF FF FF FF FF FF FF     
   6891 FFFC8B2C FF FF FF FF FF FF FF FF     
   6892 FFFC8B34 FF FF FF FF FF FF FF FF     
   6893 FFFC8B3C FF FF FF FF FF FF FF FF     
   6894 FFFC8B44 FF FF FF FF FF FF FF FF     
   6895 FFFC8B4C FF FF FF FF FF FF FF FF     
   6896 FFFC8B54 FF FF FF FF FF FF FF FF     
   6897 FFFC8B5C FF FF FF FF FF FF FF FF     
   6898 FFFC8B64 FF FF FF FF FF FF FF FF     
   6899 FFFC8B6C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 58
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6900 FFFC8B74 FF FF FF FF FF FF FF FF     
   6901 FFFC8B7C FF FF FF FF FF FF FF FF     
   6902 FFFC8B84 FF FF FF FF FF FF FF FF     
   6903 FFFC8B8C FF FF FF FF FF FF FF FF     
   6904 FFFC8B94 FF FF FF FF FF FF FF FF     
   6905 FFFC8B9C FF FF FF FF FF FF FF FF     
   6906 FFFC8BA4 FF FF FF FF FF FF FF FF     
   6907 FFFC8BAC FF FF FF FF FF FF FF FF     
   6908 FFFC8BB4 FF FF FF FF FF FF FF FF     
   6909 FFFC8BBC FF FF FF FF FF FF FF FF     
   6910 FFFC8BC4 FF FF FF FF FF FF FF FF     
   6911 FFFC8BCC FF FF FF FF FF FF FF FF     
   6912 FFFC8BD4 FF FF FF FF FF FF FF FF     
   6913 FFFC8BDC FF FF FF FF FF FF FF FF     
   6914 FFFC8BE4 FF FF FF FF FF FF FF FF     
   6915 FFFC8BEC FF FF FF FF FF FF FF FF     
   6916 FFFC8BF4 FF FF FF FF FF FF FF FF     
   6917 FFFC8BFC FF FF FF FF FF FF FF FF     
   6918 FFFC8C04 FF FF FF FF FF FF FF FF     
   6919 FFFC8C0C FF FF FF FF FF FF FF FF     
   6920 FFFC8C14 FF FF FF FF FF FF FF FF     
   6921 FFFC8C1C FF FF FF FF FF FF FF FF     
   6922 FFFC8C24 FF FF FF FF FF FF FF FF     
   6923 FFFC8C2C FF FF FF FF FF FF FF FF     
   6924 FFFC8C34 FF FF FF FF FF FF FF FF     
   6925 FFFC8C3C FF FF FF FF FF FF FF FF     
   6926 FFFC8C44 FF FF FF FF FF FF FF FF     
   6927 FFFC8C4C FF FF FF FF FF FF FF FF     
   6928 FFFC8C54 FF FF FF FF FF FF FF FF     
   6929 FFFC8C5C FF FF FF FF FF FF FF FF     
   6930 FFFC8C64 FF FF FF FF FF FF FF FF     
   6931 FFFC8C6C FF FF FF FF FF FF FF FF     
   6932 FFFC8C74 FF FF FF FF FF FF FF FF     
   6933 FFFC8C7C FF FF FF FF FF FF FF FF     
   6934 FFFC8C84 FF FF FF FF FF FF FF FF     
   6935 FFFC8C8C FF FF FF FF FF FF FF FF     
   6936 FFFC8C94 FF FF FF FF FF FF FF FF     
   6937 FFFC8C9C FF FF FF FF FF FF FF FF     
   6938 FFFC8CA4 FF FF FF FF FF FF FF FF     
   6939 FFFC8CAC FF FF FF FF FF FF FF FF     
   6940 FFFC8CB4 FF FF FF FF FF FF FF FF     
   6941 FFFC8CBC FF FF FF FF FF FF FF FF     
   6942 FFFC8CC4 FF FF FF FF FF FF FF FF     
   6943 FFFC8CCC FF FF FF FF FF FF FF FF     
   6944 FFFC8CD4 FF FF FF FF FF FF FF FF     
   6945 FFFC8CDC FF FF FF FF FF FF FF FF     
   6946 FFFC8CE4 FF FF FF FF FF FF FF FF     
   6947 FFFC8CEC FF FF FF FF FF FF FF FF     
   6948 FFFC8CF4 FF FF FF FF FF FF FF FF     
   6949 FFFC8CFC FF FF FF FF FF FF FF FF     
   6950 FFFC8D04 FF FF FF FF FF FF FF FF     
   6951 FFFC8D0C FF FF FF FF FF FF FF FF     
   6952 FFFC8D14 FF FF FF FF FF FF FF FF     
   6953 FFFC8D1C FF FF FF FF FF FF FF FF     
   6954 FFFC8D24 FF FF FF FF FF FF FF FF     
   6955 FFFC8D2C FF FF FF FF FF FF FF FF     
   6956 FFFC8D34 FF FF FF FF FF FF FF FF     
   6957 FFFC8D3C FF FF FF FF FF FF FF FF     
   6958 FFFC8D44 FF FF FF FF FF FF FF FF     
   6959 FFFC8D4C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 59
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6960 FFFC8D54 FF FF FF FF FF FF FF FF     
   6961 FFFC8D5C FF FF FF FF FF FF FF FF     
   6962 FFFC8D64 FF FF FF FF FF FF FF FF     
   6963 FFFC8D6C FF FF FF FF FF FF FF FF     
   6964 FFFC8D74 FF FF FF FF FF FF FF FF     
   6965 FFFC8D7C FF FF FF FF FF FF FF FF     
   6966 FFFC8D84 FF FF FF FF FF FF FF FF     
   6967 FFFC8D8C FF FF FF FF FF FF FF FF     
   6968 FFFC8D94 FF FF FF FF FF FF FF FF     
   6969 FFFC8D9C FF FF FF FF FF FF FF FF     
   6970 FFFC8DA4 FF FF FF FF FF FF FF FF     
   6971 FFFC8DAC FF FF FF FF FF FF FF FF     
   6972 FFFC8DB4 FF FF FF FF FF FF FF FF     
   6973 FFFC8DBC FF FF FF FF FF FF FF FF     
   6974 FFFC8DC4 FF FF FF FF FF FF FF FF     
   6975 FFFC8DCC FF FF FF FF FF FF FF FF     
   6976 FFFC8DD4 FF FF FF FF FF FF FF FF     
   6977 FFFC8DDC FF FF FF FF FF FF FF FF     
   6978 FFFC8DE4 FF FF FF FF FF FF FF FF     
   6979 FFFC8DEC FF FF FF FF FF FF FF FF     
   6980 FFFC8DF4 FF FF FF FF FF FF FF FF     
   6981 FFFC8DFC FF FF FF FF FF FF FF FF     
   6982 FFFC8E04 FF FF FF FF FF FF FF FF     
   6983 FFFC8E0C FF FF FF FF FF FF FF FF     
   6984 FFFC8E14 FF FF FF FF FF FF FF FF     
   6985 FFFC8E1C FF FF FF FF FF FF FF FF     
   6986 FFFC8E24 FF FF FF FF FF FF FF FF     
   6987 FFFC8E2C FF FF FF FF FF FF FF FF     
   6988 FFFC8E34 FF FF FF FF FF FF FF FF     
   6989 FFFC8E3C FF FF FF FF FF FF FF FF     
   6990 FFFC8E44 FF FF FF FF FF FF FF FF     
   6991 FFFC8E4C FF FF FF FF FF FF FF FF     
   6992 FFFC8E54 FF FF FF FF FF FF FF FF     
   6993 FFFC8E5C FF FF FF FF FF FF FF FF     
   6994 FFFC8E64 FF FF FF FF FF FF FF FF     
   6995 FFFC8E6C FF FF FF FF FF FF FF FF     
   6996 FFFC8E74 FF FF FF FF FF FF FF FF     
   6997 FFFC8E7C FF FF FF FF FF FF FF FF     
   6998 FFFC8E84 FF FF FF FF FF FF FF FF     
   6999 FFFC8E8C FF FF FF FF FF FF FF FF     
   7000 FFFC8E94 FF FF FF FF FF FF FF FF     
   7001 FFFC8E9C FF FF FF FF FF FF FF FF     
   7002 FFFC8EA4 FF FF FF FF FF FF FF FF     
   7003 FFFC8EAC FF FF FF FF FF FF FF FF     
   7004 FFFC8EB4 FF FF FF FF FF FF FF FF     
   7005 FFFC8EBC FF FF FF FF FF FF FF FF     
   7006 FFFC8EC4 FF FF FF FF FF FF FF FF     
   7007 FFFC8ECC FF FF FF FF FF FF FF FF     
   7008 FFFC8ED4 FF FF FF FF FF FF FF FF     
   7009 FFFC8EDC FF FF FF FF FF FF FF FF     
   7010 FFFC8EE4 FF FF FF FF FF FF FF FF     
   7011 FFFC8EEC FF FF FF FF FF FF FF FF     
   7012 FFFC8EF4 FF FF FF FF FF FF FF FF     
   7013 FFFC8EFC FF FF FF FF FF FF FF FF     
   7014 FFFC8F04 FF FF FF FF FF FF FF FF     
   7015 FFFC8F0C FF FF FF FF FF FF FF FF     
   7016 FFFC8F14 FF FF FF FF FF FF FF FF     
   7017 FFFC8F1C FF FF FF FF FF FF FF FF     
   7018 FFFC8F24 FF FF FF FF FF FF FF FF     
   7019 FFFC8F2C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 60
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7020 FFFC8F34 FF FF FF FF FF FF FF FF     
   7021 FFFC8F3C FF FF FF FF FF FF FF FF     
   7022 FFFC8F44 FF FF FF FF FF FF FF FF     
   7023 FFFC8F4C FF FF FF FF FF FF FF FF     
   7024 FFFC8F54 FF FF FF FF FF FF FF FF     
   7025 FFFC8F5C FF FF FF FF FF FF FF FF     
   7026 FFFC8F64 FF FF FF FF FF FF FF FF     
   7027 FFFC8F6C FF FF FF FF FF FF FF FF     
   7028 FFFC8F74 FF FF FF FF FF FF FF FF     
   7029 FFFC8F7C FF FF FF FF FF FF FF FF     
   7030 FFFC8F84 FF FF FF FF FF FF FF FF     
   7031 FFFC8F8C FF FF FF FF FF FF FF FF     
   7032 FFFC8F94 FF FF FF FF FF FF FF FF     
   7033 FFFC8F9C FF FF FF FF FF FF FF FF     
   7034 FFFC8FA4 FF FF FF FF FF FF FF FF     
   7035 FFFC8FAC FF FF FF FF FF FF FF FF     
   7036 FFFC8FB4 FF FF FF FF FF FF FF FF     
   7037 FFFC8FBC FF FF FF FF FF FF FF FF     
   7038 FFFC8FC4 FF FF FF FF FF FF FF FF     
   7039 FFFC8FCC FF FF FF FF FF FF FF FF     
   7040 FFFC8FD4 FF FF FF FF FF FF FF FF     
   7041 FFFC8FDC FF FF FF FF FF FF FF FF     
   7042 FFFC8FE4 FF FF FF FF FF FF FF FF     
   7043 FFFC8FEC FF FF FF FF FF FF FF FF     
   7044 FFFC8FF4 FF FF FF FF FF FF FF FF     
   7045 FFFC8FFC FF FF FF FF FF FF FF FF     
   7046 FFFC9004 FF FF FF FF FF FF FF FF     
   7047 FFFC900C FF FF FF FF FF FF FF FF     
   7048 FFFC9014 FF FF FF FF FF FF FF FF     
   7049 FFFC901C FF FF FF FF FF FF FF FF     
   7050 FFFC9024 FF FF FF FF FF FF FF FF     
   7051 FFFC902C FF FF FF FF FF FF FF FF     
   7052 FFFC9034 FF FF FF FF FF FF FF FF     
   7053 FFFC903C FF FF FF FF FF FF FF FF     
   7054 FFFC9044 FF FF FF FF FF FF FF FF     
   7055 FFFC904C FF FF FF FF FF FF FF FF     
   7056 FFFC9054 FF FF FF FF FF FF FF FF     
   7057 FFFC905C FF FF FF FF FF FF FF FF     
   7058 FFFC9064 FF FF FF FF FF FF FF FF     
   7059 FFFC906C FF FF FF FF FF FF FF FF     
   7060 FFFC9074 FF FF FF FF FF FF FF FF     
   7061 FFFC907C FF FF FF FF FF FF FF FF     
   7062 FFFC9084 FF FF FF FF FF FF FF FF     
   7063 FFFC908C FF FF FF FF FF FF FF FF     
   7064 FFFC9094 FF FF FF FF FF FF FF FF     
   7065 FFFC909C FF FF FF FF FF FF FF FF     
   7066 FFFC90A4 FF FF FF FF FF FF FF FF     
   7067 FFFC90AC FF FF FF FF FF FF FF FF     
   7068 FFFC90B4 FF FF FF FF FF FF FF FF     
   7069 FFFC90BC FF FF FF FF FF FF FF FF     
   7070 FFFC90C4 FF FF FF FF FF FF FF FF     
   7071 FFFC90CC FF FF FF FF FF FF FF FF     
   7072 FFFC90D4 FF FF FF FF FF FF FF FF     
   7073 FFFC90DC FF FF FF FF FF FF FF FF     
   7074 FFFC90E4 FF FF FF FF FF FF FF FF     
   7075 FFFC90EC FF FF FF FF FF FF FF FF     
   7076 FFFC90F4 FF FF FF FF FF FF FF FF     
   7077 FFFC90FC FF FF FF FF FF FF FF FF     
   7078 FFFC9104 FF FF FF FF FF FF FF FF     
   7079 FFFC910C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 61
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7080 FFFC9114 FF FF FF FF FF FF FF FF     
   7081 FFFC911C FF FF FF FF FF FF FF FF     
   7082 FFFC9124 FF FF FF FF FF FF FF FF     
   7083 FFFC912C FF FF FF FF FF FF FF FF     
   7084 FFFC9134 FF FF FF FF FF FF FF FF     
   7085 FFFC913C FF FF FF FF FF FF FF FF     
   7086 FFFC9144 FF FF FF FF FF FF FF FF     
   7087 FFFC914C FF FF FF FF FF FF FF FF     
   7088 FFFC9154 FF FF FF FF FF FF FF FF     
   7089 FFFC915C FF FF FF FF FF FF FF FF     
   7090 FFFC9164 FF FF FF FF FF FF FF FF     
   7091 FFFC916C FF FF FF FF FF FF FF FF     
   7092 FFFC9174 FF FF FF FF FF FF FF FF     
   7093 FFFC917C FF FF FF FF FF FF FF FF     
   7094 FFFC9184 FF FF FF FF FF FF FF FF     
   7095 FFFC918C FF FF FF FF FF FF FF FF     
   7096 FFFC9194 FF FF FF FF FF FF FF FF     
   7097 FFFC919C FF FF FF FF FF FF FF FF     
   7098 FFFC91A4 FF FF FF FF FF FF FF FF     
   7099 FFFC91AC FF FF FF FF FF FF FF FF     
   7100 FFFC91B4 FF FF FF FF FF FF FF FF     
   7101 FFFC91BC FF FF FF FF FF FF FF FF     
   7102 FFFC91C4 FF FF FF FF FF FF FF FF     
   7103 FFFC91CC FF FF FF FF FF FF FF FF     
   7104 FFFC91D4 FF FF FF FF FF FF FF FF     
   7105 FFFC91DC FF FF FF FF FF FF FF FF     
   7106 FFFC91E4 FF FF FF FF FF FF FF FF     
   7107 FFFC91EC FF FF FF FF FF FF FF FF     
   7108 FFFC91F4 FF FF FF FF FF FF FF FF     
   7109 FFFC91FC FF FF FF FF FF FF FF FF     
   7110 FFFC9204 FF FF FF FF FF FF FF FF     
   7111 FFFC920C FF FF FF FF FF FF FF FF     
   7112 FFFC9214 FF FF FF FF FF FF FF FF     
   7113 FFFC921C FF FF FF FF FF FF FF FF     
   7114 FFFC9224 FF FF FF FF FF FF FF FF     
   7115 FFFC922C FF FF FF FF FF FF FF FF     
   7116 FFFC9234 FF FF FF FF FF FF FF FF     
   7117 FFFC923C FF FF FF FF FF FF FF FF     
   7118 FFFC9244 FF FF FF FF FF FF FF FF     
   7119 FFFC924C FF FF FF FF FF FF FF FF     
   7120 FFFC9254 FF FF FF FF FF FF FF FF     
   7121 FFFC925C FF FF FF FF FF FF FF FF     
   7122 FFFC9264 FF FF FF FF FF FF FF FF     
   7123 FFFC926C FF FF FF FF FF FF FF FF     
   7124 FFFC9274 FF FF FF FF FF FF FF FF     
   7125 FFFC927C FF FF FF FF FF FF FF FF     
   7126 FFFC9284 FF FF FF FF FF FF FF FF     
   7127 FFFC928C FF FF FF FF FF FF FF FF     
   7128 FFFC9294 FF FF FF FF FF FF FF FF     
   7129 FFFC929C FF FF FF FF FF FF FF FF     
   7130 FFFC92A4 FF FF FF FF FF FF FF FF     
   7131 FFFC92AC FF FF FF FF FF FF FF FF     
   7132 FFFC92B4 FF FF FF FF FF FF FF FF     
   7133 FFFC92BC FF FF FF FF FF FF FF FF     
   7134 FFFC92C4 FF FF FF FF FF FF FF FF     
   7135 FFFC92CC FF FF FF FF FF FF FF FF     
   7136 FFFC92D4 FF FF FF FF FF FF FF FF     
   7137 FFFC92DC FF FF FF FF FF FF FF FF     
   7138 FFFC92E4 FF FF FF FF FF FF FF FF     
   7139 FFFC92EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 62
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7140 FFFC92F4 FF FF FF FF FF FF FF FF     
   7141 FFFC92FC FF FF FF FF FF FF FF FF     
   7142 FFFC9304 FF FF FF FF FF FF FF FF     
   7143 FFFC930C FF FF FF FF FF FF FF FF     
   7144 FFFC9314 FF FF FF FF FF FF FF FF     
   7145 FFFC931C FF FF FF FF FF FF FF FF     
   7146 FFFC9324 FF FF FF FF FF FF FF FF     
   7147 FFFC932C FF FF FF FF FF FF FF FF     
   7148 FFFC9334 FF FF FF FF FF FF FF FF     
   7149 FFFC933C FF FF FF FF FF FF FF FF     
   7150 FFFC9344 FF FF FF FF FF FF FF FF     
   7151 FFFC934C FF FF FF FF FF FF FF FF     
   7152 FFFC9354 FF FF FF FF FF FF FF FF     
   7153 FFFC935C FF FF FF FF FF FF FF FF     
   7154 FFFC9364 FF FF FF FF FF FF FF FF     
   7155 FFFC936C FF FF FF FF FF FF FF FF     
   7156 FFFC9374 FF FF FF FF FF FF FF FF     
   7157 FFFC937C FF FF FF FF FF FF FF FF     
   7158 FFFC9384 FF FF FF FF FF FF FF FF     
   7159 FFFC938C FF FF FF FF FF FF FF FF     
   7160 FFFC9394 FF FF FF FF FF FF FF FF     
   7161 FFFC939C FF FF FF FF FF FF FF FF     
   7162 FFFC93A4 FF FF FF FF FF FF FF FF     
   7163 FFFC93AC FF FF FF FF FF FF FF FF     
   7164 FFFC93B4 FF FF FF FF FF FF FF FF     
   7165 FFFC93BC FF FF FF FF FF FF FF FF     
   7166 FFFC93C4 FF FF FF FF FF FF FF FF     
   7167 FFFC93CC FF FF FF FF FF FF FF FF     
   7168 FFFC93D4 FF FF FF FF FF FF FF FF     
   7169 FFFC93DC FF FF FF FF FF FF FF FF     
   7170 FFFC93E4 FF FF FF FF FF FF FF FF     
   7171 FFFC93EC FF FF FF FF FF FF FF FF     
   7172 FFFC93F4 FF FF FF FF FF FF FF FF     
   7173 FFFC93FC FF FF FF FF FF FF FF FF     
   7174 FFFC9404 FF FF FF FF FF FF FF FF     
   7175 FFFC940C FF FF FF FF FF FF FF FF     
   7176 FFFC9414 FF FF FF FF FF FF FF FF     
   7177 FFFC941C FF FF FF FF FF FF FF FF     
   7178 FFFC9424 FF FF FF FF FF FF FF FF     
   7179 FFFC942C FF FF FF FF FF FF FF FF     
   7180 FFFC9434 FF FF FF FF FF FF FF FF     
   7181 FFFC943C FF FF FF FF FF FF FF FF     
   7182 FFFC9444 FF FF FF FF FF FF FF FF     
   7183 FFFC944C FF FF FF FF FF FF FF FF     
   7184 FFFC9454 FF FF FF FF FF FF FF FF     
   7185 FFFC945C FF FF FF FF FF FF FF FF     
   7186 FFFC9464 FF FF FF FF FF FF FF FF     
   7187 FFFC946C FF FF FF FF FF FF FF FF     
   7188 FFFC9474 FF FF FF FF FF FF FF FF     
   7189 FFFC947C FF FF FF FF FF FF FF FF     
   7190 FFFC9484 FF FF FF FF FF FF FF FF     
   7191 FFFC948C FF FF FF FF FF FF FF FF     
   7192 FFFC9494 FF FF FF FF FF FF FF FF     
   7193 FFFC949C FF FF FF FF FF FF FF FF     
   7194 FFFC94A4 FF FF FF FF FF FF FF FF     
   7195 FFFC94AC FF FF FF FF FF FF FF FF     
   7196 FFFC94B4 FF FF FF FF FF FF FF FF     
   7197 FFFC94BC FF FF FF FF FF FF FF FF     
   7198 FFFC94C4 FF FF FF FF FF FF FF FF     
   7199 FFFC94CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 63
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7200 FFFC94D4 FF FF FF FF FF FF FF FF     
   7201 FFFC94DC FF FF FF FF FF FF FF FF     
   7202 FFFC94E4 FF FF FF FF FF FF FF FF     
   7203 FFFC94EC FF FF FF FF FF FF FF FF     
   7204 FFFC94F4 FF FF FF FF FF FF FF FF     
   7205 FFFC94FC FF FF FF FF FF FF FF FF     
   7206 FFFC9504 FF FF FF FF FF FF FF FF     
   7207 FFFC950C FF FF FF FF FF FF FF FF     
   7208 FFFC9514 FF FF FF FF FF FF FF FF     
   7209 FFFC951C FF FF FF FF FF FF FF FF     
   7210 FFFC9524 FF FF FF FF FF FF FF FF     
   7211 FFFC952C FF FF FF FF FF FF FF FF     
   7212 FFFC9534 FF FF FF FF FF FF FF FF     
   7213 FFFC953C FF FF FF FF FF FF FF FF     
   7214 FFFC9544 FF FF FF FF FF FF FF FF     
   7215 FFFC954C FF FF FF FF FF FF FF FF     
   7216 FFFC9554 FF FF FF FF FF FF FF FF     
   7217 FFFC955C FF FF FF FF FF FF FF FF     
   7218 FFFC9564 FF FF FF FF FF FF FF FF     
   7219 FFFC956C FF FF FF FF FF FF FF FF     
   7220 FFFC9574 FF FF FF FF FF FF FF FF     
   7221 FFFC957C FF FF FF FF FF FF FF FF     
   7222 FFFC9584 FF FF FF FF FF FF FF FF     
   7223 FFFC958C FF FF FF FF FF FF FF FF     
   7224 FFFC9594 FF FF FF FF FF FF FF FF     
   7225 FFFC959C FF FF FF FF FF FF FF FF     
   7226 FFFC95A4 FF FF FF FF FF FF FF FF     
   7227 FFFC95AC FF FF FF FF FF FF FF FF     
   7228 FFFC95B4 FF FF FF FF FF FF FF FF     
   7229 FFFC95BC FF FF FF FF FF FF FF FF     
   7230 FFFC95C4 FF FF FF FF FF FF FF FF     
   7231 FFFC95CC FF FF FF FF FF FF FF FF     
   7232 FFFC95D4 FF FF FF FF FF FF FF FF     
   7233 FFFC95DC FF FF FF FF FF FF FF FF     
   7234 FFFC95E4 FF FF FF FF FF FF FF FF     
   7235 FFFC95EC FF FF FF FF FF FF FF FF     
   7236 FFFC95F4 FF FF FF FF FF FF FF FF     
   7237 FFFC95FC FF FF FF FF FF FF FF FF     
   7238 FFFC9604 FF FF FF FF FF FF FF FF     
   7239 FFFC960C FF FF FF FF FF FF FF FF     
   7240 FFFC9614 FF FF FF FF FF FF FF FF     
   7241 FFFC961C FF FF FF FF FF FF FF FF     
   7242 FFFC9624 FF FF FF FF FF FF FF FF     
   7243 FFFC962C FF FF FF FF FF FF FF FF     
   7244 FFFC9634 FF FF FF FF FF FF FF FF     
   7245 FFFC963C FF FF FF FF FF FF FF FF     
   7246 FFFC9644 FF FF FF FF FF FF FF FF     
   7247 FFFC964C FF FF FF FF FF FF FF FF     
   7248 FFFC9654 FF FF FF FF FF FF FF FF     
   7249 FFFC965C FF FF FF FF FF FF FF FF     
   7250 FFFC9664 FF FF FF FF FF FF FF FF     
   7251 FFFC966C FF FF FF FF FF FF FF FF     
   7252 FFFC9674 FF FF FF FF FF FF FF FF     
   7253 FFFC967C FF FF FF FF FF FF FF FF     
   7254 FFFC9684 FF FF FF FF FF FF FF FF     
   7255 FFFC968C FF FF FF FF FF FF FF FF     
   7256 FFFC9694 FF FF FF FF FF FF FF FF     
   7257 FFFC969C FF FF FF FF FF FF FF FF     
   7258 FFFC96A4 FF FF FF FF FF FF FF FF     
   7259 FFFC96AC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 64
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7260 FFFC96B4 FF FF FF FF FF FF FF FF     
   7261 FFFC96BC FF FF FF FF FF FF FF FF     
   7262 FFFC96C4 FF FF FF FF FF FF FF FF     
   7263 FFFC96CC FF FF FF FF FF FF FF FF     
   7264 FFFC96D4 FF FF FF FF FF FF FF FF     
   7265 FFFC96DC FF FF FF FF FF FF FF FF     
   7266 FFFC96E4 FF FF FF FF FF FF FF FF     
   7267 FFFC96EC FF FF FF FF FF FF FF FF     
   7268 FFFC96F4 FF FF FF FF FF FF FF FF     
   7269 FFFC96FC FF FF FF FF FF FF FF FF     
   7270 FFFC9704 FF FF FF FF FF FF FF FF     
   7271 FFFC970C FF FF FF FF FF FF FF FF     
   7272 FFFC9714 FF FF FF FF FF FF FF FF     
   7273 FFFC971C FF FF FF FF FF FF FF FF     
   7274 FFFC9724 FF FF FF FF FF FF FF FF     
   7275 FFFC972C FF FF FF FF FF FF FF FF     
   7276 FFFC9734 FF FF FF FF FF FF FF FF     
   7277 FFFC973C FF FF FF FF FF FF FF FF     
   7278 FFFC9744 FF FF FF FF FF FF FF FF     
   7279 FFFC974C FF FF FF FF FF FF FF FF     
   7280 FFFC9754 FF FF FF FF FF FF FF FF     
   7281 FFFC975C FF FF FF FF FF FF FF FF     
   7282 FFFC9764 FF FF FF FF FF FF FF FF     
   7283 FFFC976C FF FF FF FF FF FF FF FF     
   7284 FFFC9774 FF FF FF FF FF FF FF FF     
   7285 FFFC977C FF FF FF FF FF FF FF FF     
   7286 FFFC9784 FF FF FF FF FF FF FF FF     
   7287 FFFC978C FF FF FF FF FF FF FF FF     
   7288 FFFC9794 FF FF FF FF FF FF FF FF     
   7289 FFFC979C FF FF FF FF FF FF FF FF     
   7290 FFFC97A4 FF FF FF FF FF FF FF FF     
   7291 FFFC97AC FF FF FF FF FF FF FF FF     
   7292 FFFC97B4 FF FF FF FF FF FF FF FF     
   7293 FFFC97BC FF FF FF FF FF FF FF FF     
   7294 FFFC97C4 FF FF FF FF FF FF FF FF     
   7295 FFFC97CC FF FF FF FF FF FF FF FF     
   7296 FFFC97D4 FF FF FF FF FF FF FF FF     
   7297 FFFC97DC FF FF FF FF FF FF FF FF     
   7298 FFFC97E4 FF FF FF FF FF FF FF FF     
   7299 FFFC97EC FF FF FF FF FF FF FF FF     
   7300 FFFC97F4 FF FF FF FF FF FF FF FF     
   7301 FFFC97FC FF FF FF FF FF FF FF FF     
   7302 FFFC9804 FF FF FF FF FF FF FF FF     
   7303 FFFC980C FF FF FF FF FF FF FF FF     
   7304 FFFC9814 FF FF FF FF FF FF FF FF     
   7305 FFFC981C FF FF FF FF FF FF FF FF     
   7306 FFFC9824 FF FF FF FF FF FF FF FF     
   7307 FFFC982C FF FF FF FF FF FF FF FF     
   7308 FFFC9834 FF FF FF FF FF FF FF FF     
   7309 FFFC983C FF FF FF FF FF FF FF FF     
   7310 FFFC9844 FF FF FF FF FF FF FF FF     
   7311 FFFC984C FF FF FF FF FF FF FF FF     
   7312 FFFC9854 FF FF FF FF FF FF FF FF     
   7313 FFFC985C FF FF FF FF FF FF FF FF     
   7314 FFFC9864 FF FF FF FF FF FF FF FF     
   7315 FFFC986C FF FF FF FF FF FF FF FF     
   7316 FFFC9874 FF FF FF FF FF FF FF FF     
   7317 FFFC987C FF FF FF FF FF FF FF FF     
   7318 FFFC9884 FF FF FF FF FF FF FF FF     
   7319 FFFC988C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 65
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7320 FFFC9894 FF FF FF FF FF FF FF FF     
   7321 FFFC989C FF FF FF FF FF FF FF FF     
   7322 FFFC98A4 FF FF FF FF FF FF FF FF     
   7323 FFFC98AC FF FF FF FF FF FF FF FF     
   7324 FFFC98B4 FF FF FF FF FF FF FF FF     
   7325 FFFC98BC FF FF FF FF FF FF FF FF     
   7326 FFFC98C4 FF FF FF FF FF FF FF FF     
   7327 FFFC98CC FF FF FF FF FF FF FF FF     
   7328 FFFC98D4 FF FF FF FF FF FF FF FF     
   7329 FFFC98DC FF FF FF FF FF FF FF FF     
   7330 FFFC98E4 FF FF FF FF FF FF FF FF     
   7331 FFFC98EC FF FF FF FF FF FF FF FF     
   7332 FFFC98F4 FF FF FF FF FF FF FF FF     
   7333 FFFC98FC FF FF FF FF FF FF FF FF     
   7334 FFFC9904 FF FF FF FF FF FF FF FF     
   7335 FFFC990C FF FF FF FF FF FF FF FF     
   7336 FFFC9914 FF FF FF FF FF FF FF FF     
   7337 FFFC991C FF FF FF FF FF FF FF FF     
   7338 FFFC9924 FF FF FF FF FF FF FF FF     
   7339 FFFC992C FF FF FF FF FF FF FF FF     
   7340 FFFC9934 FF FF FF FF FF FF FF FF     
   7341 FFFC993C FF FF FF FF FF FF FF FF     
   7342 FFFC9944 FF FF FF FF FF FF FF FF     
   7343 FFFC994C FF FF FF FF FF FF FF FF     
   7344 FFFC9954 FF FF FF FF FF FF FF FF     
   7345 FFFC995C FF FF FF FF FF FF FF FF     
   7346 FFFC9964 FF FF FF FF FF FF FF FF     
   7347 FFFC996C FF FF FF FF FF FF FF FF     
   7348 FFFC9974 FF FF FF FF FF FF FF FF     
   7349 FFFC997C FF FF FF FF FF FF FF FF     
   7350 FFFC9984 FF FF FF FF FF FF FF FF     
   7351 FFFC998C FF FF FF FF FF FF FF FF     
   7352 FFFC9994 FF FF FF FF FF FF FF FF     
   7353 FFFC999C FF FF FF FF FF FF FF FF     
   7354 FFFC99A4 FF FF FF FF FF FF FF FF     
   7355 FFFC99AC FF FF FF FF FF FF FF FF     
   7356 FFFC99B4 FF FF FF FF FF FF FF FF     
   7357 FFFC99BC FF FF FF FF FF FF FF FF     
   7358 FFFC99C4 FF FF FF FF FF FF FF FF     
   7359 FFFC99CC FF FF FF FF FF FF FF FF     
   7360 FFFC99D4 FF FF FF FF FF FF FF FF     
   7361 FFFC99DC FF FF FF FF FF FF FF FF     
   7362 FFFC99E4 FF FF FF FF FF FF FF FF     
   7363 FFFC99EC FF FF FF FF FF FF FF FF     
   7364 FFFC99F4 FF FF FF FF FF FF FF FF     
   7365 FFFC99FC FF FF FF FF FF FF FF FF     
   7366 FFFC9A04 FF FF FF FF FF FF FF FF     
   7367 FFFC9A0C FF FF FF FF FF FF FF FF     
   7368 FFFC9A14 FF FF FF FF FF FF FF FF     
   7369 FFFC9A1C FF FF FF FF FF FF FF FF     
   7370 FFFC9A24 FF FF FF FF FF FF FF FF     
   7371 FFFC9A2C FF FF FF FF FF FF FF FF     
   7372 FFFC9A34 FF FF FF FF FF FF FF FF     
   7373 FFFC9A3C FF FF FF FF FF FF FF FF     
   7374 FFFC9A44 FF FF FF FF FF FF FF FF     
   7375 FFFC9A4C FF FF FF FF FF FF FF FF     
   7376 FFFC9A54 FF FF FF FF FF FF FF FF     
   7377 FFFC9A5C FF FF FF FF FF FF FF FF     
   7378 FFFC9A64 FF FF FF FF FF FF FF FF     
   7379 FFFC9A6C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 66
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7380 FFFC9A74 FF FF FF FF FF FF FF FF     
   7381 FFFC9A7C FF FF FF FF FF FF FF FF     
   7382 FFFC9A84 FF FF FF FF FF FF FF FF     
   7383 FFFC9A8C FF FF FF FF FF FF FF FF     
   7384 FFFC9A94 FF FF FF FF FF FF FF FF     
   7385 FFFC9A9C FF FF FF FF FF FF FF FF     
   7386 FFFC9AA4 FF FF FF FF FF FF FF FF     
   7387 FFFC9AAC FF FF FF FF FF FF FF FF     
   7388 FFFC9AB4 FF FF FF FF FF FF FF FF     
   7389 FFFC9ABC FF FF FF FF FF FF FF FF     
   7390 FFFC9AC4 FF FF FF FF FF FF FF FF     
   7391 FFFC9ACC FF FF FF FF FF FF FF FF     
   7392 FFFC9AD4 FF FF FF FF FF FF FF FF     
   7393 FFFC9ADC FF FF FF FF FF FF FF FF     
   7394 FFFC9AE4 FF FF FF FF FF FF FF FF     
   7395 FFFC9AEC FF FF FF FF FF FF FF FF     
   7396 FFFC9AF4 FF FF FF FF FF FF FF FF     
   7397 FFFC9AFC FF FF FF FF FF FF FF FF     
   7398 FFFC9B04 FF FF FF FF FF FF FF FF     
   7399 FFFC9B0C FF FF FF FF FF FF FF FF     
   7400 FFFC9B14 FF FF FF FF FF FF FF FF     
   7401 FFFC9B1C FF FF FF FF FF FF FF FF     
   7402 FFFC9B24 FF FF FF FF FF FF FF FF     
   7403 FFFC9B2C FF FF FF FF FF FF FF FF     
   7404 FFFC9B34 FF FF FF FF FF FF FF FF     
   7405 FFFC9B3C FF FF FF FF FF FF FF FF     
   7406 FFFC9B44 FF FF FF FF FF FF FF FF     
   7407 FFFC9B4C FF FF FF FF FF FF FF FF     
   7408 FFFC9B54 FF FF FF FF FF FF FF FF     
   7409 FFFC9B5C FF FF FF FF FF FF FF FF     
   7410 FFFC9B64 FF FF FF FF FF FF FF FF     
   7411 FFFC9B6C FF FF FF FF FF FF FF FF     
   7412 FFFC9B74 FF FF FF FF FF FF FF FF     
   7413 FFFC9B7C FF FF FF FF FF FF FF FF     
   7414 FFFC9B84 FF FF FF FF FF FF FF FF     
   7415 FFFC9B8C FF FF FF FF FF FF FF FF     
   7416 FFFC9B94 FF FF FF FF FF FF FF FF     
   7417 FFFC9B9C FF FF FF FF FF FF FF FF     
   7418 FFFC9BA4 FF FF FF FF FF FF FF FF     
   7419 FFFC9BAC FF FF FF FF FF FF FF FF     
   7420 FFFC9BB4 FF FF FF FF FF FF FF FF     
   7421 FFFC9BBC FF FF FF FF FF FF FF FF     
   7422 FFFC9BC4 FF FF FF FF FF FF FF FF     
   7423 FFFC9BCC FF FF FF FF FF FF FF FF     
   7424 FFFC9BD4 FF FF FF FF FF FF FF FF     
   7425 FFFC9BDC FF FF FF FF FF FF FF FF     
   7426 FFFC9BE4 FF FF FF FF FF FF FF FF     
   7427 FFFC9BEC FF FF FF FF FF FF FF FF     
   7428 FFFC9BF4 FF FF FF FF FF FF FF FF     
   7429 FFFC9BFC FF FF FF FF FF FF FF FF     
   7430 FFFC9C04 FF FF FF FF FF FF FF FF     
   7431 FFFC9C0C FF FF FF FF FF FF FF FF     
   7432 FFFC9C14 FF FF FF FF FF FF FF FF     
   7433 FFFC9C1C FF FF FF FF FF FF FF FF     
   7434 FFFC9C24 FF FF FF FF FF FF FF FF     
   7435 FFFC9C2C FF FF FF FF FF FF FF FF     
   7436 FFFC9C34 FF FF FF FF FF FF FF FF     
   7437 FFFC9C3C FF FF FF FF FF FF FF FF     
   7438 FFFC9C44 FF FF FF FF FF FF FF FF     
   7439 FFFC9C4C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 67
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7440 FFFC9C54 FF FF FF FF FF FF FF FF     
   7441 FFFC9C5C FF FF FF FF FF FF FF FF     
   7442 FFFC9C64 FF FF FF FF FF FF FF FF     
   7443 FFFC9C6C FF FF FF FF FF FF FF FF     
   7444 FFFC9C74 FF FF FF FF FF FF FF FF     
   7445 FFFC9C7C FF FF FF FF FF FF FF FF     
   7446 FFFC9C84 FF FF FF FF FF FF FF FF     
   7447 FFFC9C8C FF FF FF FF FF FF FF FF     
   7448 FFFC9C94 FF FF FF FF FF FF FF FF     
   7449 FFFC9C9C FF FF FF FF FF FF FF FF     
   7450 FFFC9CA4 FF FF FF FF FF FF FF FF     
   7451 FFFC9CAC FF FF FF FF FF FF FF FF     
   7452 FFFC9CB4 FF FF FF FF FF FF FF FF     
   7453 FFFC9CBC FF FF FF FF FF FF FF FF     
   7454 FFFC9CC4 FF FF FF FF FF FF FF FF     
   7455 FFFC9CCC FF FF FF FF FF FF FF FF     
   7456 FFFC9CD4 FF FF FF FF FF FF FF FF     
   7457 FFFC9CDC FF FF FF FF FF FF FF FF     
   7458 FFFC9CE4 FF FF FF FF FF FF FF FF     
   7459 FFFC9CEC FF FF FF FF FF FF FF FF     
   7460 FFFC9CF4 FF FF FF FF FF FF FF FF     
   7461 FFFC9CFC FF FF FF FF FF FF FF FF     
   7462 FFFC9D04 FF FF FF FF FF FF FF FF     
   7463 FFFC9D0C FF FF FF FF FF FF FF FF     
   7464 FFFC9D14 FF FF FF FF FF FF FF FF     
   7465 FFFC9D1C FF FF FF FF FF FF FF FF     
   7466 FFFC9D24 FF FF FF FF FF FF FF FF     
   7467 FFFC9D2C FF FF FF FF FF FF FF FF     
   7468 FFFC9D34 FF FF FF FF FF FF FF FF     
   7469 FFFC9D3C FF FF FF FF FF FF FF FF     
   7470 FFFC9D44 FF FF FF FF FF FF FF FF     
   7471 FFFC9D4C FF FF FF FF FF FF FF FF     
   7472 FFFC9D54 FF FF FF FF FF FF FF FF     
   7473 FFFC9D5C FF FF FF FF FF FF FF FF     
   7474 FFFC9D64 FF FF FF FF FF FF FF FF     
   7475 FFFC9D6C FF FF FF FF FF FF FF FF     
   7476 FFFC9D74 FF FF FF FF FF FF FF FF     
   7477 FFFC9D7C FF FF FF FF FF FF FF FF     
   7478 FFFC9D84 FF FF FF FF FF FF FF FF     
   7479 FFFC9D8C FF FF FF FF FF FF FF FF     
   7480 FFFC9D94 FF FF FF FF FF FF FF FF     
   7481 FFFC9D9C FF FF FF FF FF FF FF FF     
   7482 FFFC9DA4 FF FF FF FF FF FF FF FF     
   7483 FFFC9DAC FF FF FF FF FF FF FF FF     
   7484 FFFC9DB4 FF FF FF FF FF FF FF FF     
   7485 FFFC9DBC FF FF FF FF FF FF FF FF     
   7486 FFFC9DC4 FF FF FF FF FF FF FF FF     
   7487 FFFC9DCC FF FF FF FF FF FF FF FF     
   7488 FFFC9DD4 FF FF FF FF FF FF FF FF     
   7489 FFFC9DDC FF FF FF FF FF FF FF FF     
   7490 FFFC9DE4 FF FF FF FF FF FF FF FF     
   7491 FFFC9DEC FF FF FF FF FF FF FF FF     
   7492 FFFC9DF4 FF FF FF FF FF FF FF FF     
   7493 FFFC9DFC FF FF FF FF FF FF FF FF     
   7494 FFFC9E04 FF FF FF FF FF FF FF FF     
   7495 FFFC9E0C FF FF FF FF FF FF FF FF     
   7496 FFFC9E14 FF FF FF FF FF FF FF FF     
   7497 FFFC9E1C FF FF FF FF FF FF FF FF     
   7498 FFFC9E24 FF FF FF FF FF FF FF FF     
   7499 FFFC9E2C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 68
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7500 FFFC9E34 FF FF FF FF FF FF FF FF     
   7501 FFFC9E3C FF FF FF FF FF FF FF FF     
   7502 FFFC9E44 FF FF FF FF FF FF FF FF     
   7503 FFFC9E4C FF FF FF FF FF FF FF FF     
   7504 FFFC9E54 FF FF FF FF FF FF FF FF     
   7505 FFFC9E5C FF FF FF FF FF FF FF FF     
   7506 FFFC9E64 FF FF FF FF FF FF FF FF     
   7507 FFFC9E6C FF FF FF FF FF FF FF FF     
   7508 FFFC9E74 FF FF FF FF FF FF FF FF     
   7509 FFFC9E7C FF FF FF FF FF FF FF FF     
   7510 FFFC9E84 FF FF FF FF FF FF FF FF     
   7511 FFFC9E8C FF FF FF FF FF FF FF FF     
   7512 FFFC9E94 FF FF FF FF FF FF FF FF     
   7513 FFFC9E9C FF FF FF FF FF FF FF FF     
   7514 FFFC9EA4 FF FF FF FF FF FF FF FF     
   7515 FFFC9EAC FF FF FF FF FF FF FF FF     
   7516 FFFC9EB4 FF FF FF FF FF FF FF FF     
   7517 FFFC9EBC FF FF FF FF FF FF FF FF     
   7518 FFFC9EC4 FF FF FF FF FF FF FF FF     
   7519 FFFC9ECC FF FF FF FF FF FF FF FF     
   7520 FFFC9ED4 FF FF FF FF FF FF FF FF     
   7521 FFFC9EDC FF FF FF FF FF FF FF FF     
   7522 FFFC9EE4 FF FF FF FF FF FF FF FF     
   7523 FFFC9EEC FF FF FF FF FF FF FF FF     
   7524 FFFC9EF4 FF FF FF FF FF FF FF FF     
   7525 FFFC9EFC FF FF FF FF FF FF FF FF     
   7526 FFFC9F04 FF FF FF FF FF FF FF FF     
   7527 FFFC9F0C FF FF FF FF FF FF FF FF     
   7528 FFFC9F14 FF FF FF FF FF FF FF FF     
   7529 FFFC9F1C FF FF FF FF FF FF FF FF     
   7530 FFFC9F24 FF FF FF FF FF FF FF FF     
   7531 FFFC9F2C FF FF FF FF FF FF FF FF     
   7532 FFFC9F34 FF FF FF FF FF FF FF FF     
   7533 FFFC9F3C FF FF FF FF FF FF FF FF     
   7534 FFFC9F44 FF FF FF FF FF FF FF FF     
   7535 FFFC9F4C FF FF FF FF FF FF FF FF     
   7536 FFFC9F54 FF FF FF FF FF FF FF FF     
   7537 FFFC9F5C FF FF FF FF FF FF FF FF     
   7538 FFFC9F64 FF FF FF FF FF FF FF FF     
   7539 FFFC9F6C FF FF FF FF FF FF FF FF     
   7540 FFFC9F74 FF FF FF FF FF FF FF FF     
   7541 FFFC9F7C FF FF FF FF FF FF FF FF     
   7542 FFFC9F84 FF FF FF FF FF FF FF FF     
   7543 FFFC9F8C FF FF FF FF FF FF FF FF     
   7544 FFFC9F94 FF FF FF FF FF FF FF FF     
   7545 FFFC9F9C FF FF FF FF FF FF FF FF     
   7546 FFFC9FA4 FF FF FF FF FF FF FF FF     
   7547 FFFC9FAC FF FF FF FF FF FF FF FF     
   7548 FFFC9FB4 FF FF FF FF FF FF FF FF     
   7549 FFFC9FBC FF FF FF FF FF FF FF FF     
   7550 FFFC9FC4 FF FF FF FF FF FF FF FF     
   7551 FFFC9FCC FF FF FF FF FF FF FF FF     
   7552 FFFC9FD4 FF FF FF FF FF FF FF FF     
   7553 FFFC9FDC FF FF FF FF FF FF FF FF     
   7554 FFFC9FE4 FF FF FF FF FF FF FF FF     
   7555 FFFC9FEC FF FF FF FF FF FF FF FF     
   7556 FFFC9FF4 FF FF FF FF FF FF FF FF     
   7557 FFFC9FFC FF FF FF FF FF FF FF FF     
   7558 FFFCA004 FF FF FF FF FF FF FF FF     
   7559 FFFCA00C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 69
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7560 FFFCA014 FF FF FF FF FF FF FF FF     
   7561 FFFCA01C FF FF FF FF FF FF FF FF     
   7562 FFFCA024 FF FF FF FF FF FF FF FF     
   7563 FFFCA02C FF FF FF FF FF FF FF FF     
   7564 FFFCA034 FF FF FF FF FF FF FF FF     
   7565 FFFCA03C FF FF FF FF FF FF FF FF     
   7566 FFFCA044 FF FF FF FF FF FF FF FF     
   7567 FFFCA04C FF FF FF FF FF FF FF FF     
   7568 FFFCA054 FF FF FF FF FF FF FF FF     
   7569 FFFCA05C FF FF FF FF FF FF FF FF     
   7570 FFFCA064 FF FF FF FF FF FF FF FF     
   7571 FFFCA06C FF FF FF FF FF FF FF FF     
   7572 FFFCA074 FF FF FF FF FF FF FF FF     
   7573 FFFCA07C FF FF FF FF FF FF FF FF     
   7574 FFFCA084 FF FF FF FF FF FF FF FF     
   7575 FFFCA08C FF FF FF FF FF FF FF FF     
   7576 FFFCA094 FF FF FF FF FF FF FF FF     
   7577 FFFCA09C FF FF FF FF FF FF FF FF     
   7578 FFFCA0A4 FF FF FF FF FF FF FF FF     
   7579 FFFCA0AC FF FF FF FF FF FF FF FF     
   7580 FFFCA0B4 FF FF FF FF FF FF FF FF     
   7581 FFFCA0BC FF FF FF FF FF FF FF FF     
   7582 FFFCA0C4 FF FF FF FF FF FF FF FF     
   7583 FFFCA0CC FF FF FF FF FF FF FF FF     
   7584 FFFCA0D4 FF FF FF FF FF FF FF FF     
   7585 FFFCA0DC FF FF FF FF FF FF FF FF     
   7586 FFFCA0E4 FF FF FF FF FF FF FF FF     
   7587 FFFCA0EC FF FF FF FF FF FF FF FF     
   7588 FFFCA0F4 FF FF FF FF FF FF FF FF     
   7589 FFFCA0FC FF FF FF FF FF FF FF FF     
   7590 FFFCA104 FF FF FF FF FF FF FF FF     
   7591 FFFCA10C FF FF FF FF FF FF FF FF     
   7592 FFFCA114 FF FF FF FF FF FF FF FF     
   7593 FFFCA11C FF FF FF FF FF FF FF FF     
   7594 FFFCA124 FF FF FF FF FF FF FF FF     
   7595 FFFCA12C FF FF FF FF FF FF FF FF     
   7596 FFFCA134 FF FF FF FF FF FF FF FF     
   7597 FFFCA13C FF FF FF FF FF FF FF FF     
   7598 FFFCA144 FF FF FF FF FF FF FF FF     
   7599 FFFCA14C FF FF FF FF FF FF FF FF     
   7600 FFFCA154 FF FF FF FF FF FF FF FF     
   7601 FFFCA15C FF FF FF FF FF FF FF FF     
   7602 FFFCA164 FF FF FF FF FF FF FF FF     
   7603 FFFCA16C FF FF FF FF FF FF FF FF     
   7604 FFFCA174 FF FF FF FF FF FF FF FF     
   7605 FFFCA17C FF FF FF FF FF FF FF FF     
   7606 FFFCA184 FF FF FF FF FF FF FF FF     
   7607 FFFCA18C FF FF FF FF FF FF FF FF     
   7608 FFFCA194 FF FF FF FF FF FF FF FF     
   7609 FFFCA19C FF FF FF FF FF FF FF FF     
   7610 FFFCA1A4 FF FF FF FF FF FF FF FF     
   7611 FFFCA1AC FF FF FF FF FF FF FF FF     
   7612 FFFCA1B4 FF FF FF FF FF FF FF FF     
   7613 FFFCA1BC FF FF FF FF FF FF FF FF     
   7614 FFFCA1C4 FF FF FF FF FF FF FF FF     
   7615 FFFCA1CC FF FF FF FF FF FF FF FF     
   7616 FFFCA1D4 FF FF FF FF FF FF FF FF     
   7617 FFFCA1DC FF FF FF FF FF FF FF FF     
   7618 FFFCA1E4 FF FF FF FF FF FF FF FF     
   7619 FFFCA1EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 70
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7620 FFFCA1F4 FF FF FF FF FF FF FF FF     
   7621 FFFCA1FC FF FF FF FF FF FF FF FF     
   7622 FFFCA204 FF FF FF FF FF FF FF FF     
   7623 FFFCA20C FF FF FF FF FF FF FF FF     
   7624 FFFCA214 FF FF FF FF FF FF FF FF     
   7625 FFFCA21C FF FF FF FF FF FF FF FF     
   7626 FFFCA224 FF FF FF FF FF FF FF FF     
   7627 FFFCA22C FF FF FF FF FF FF FF FF     
   7628 FFFCA234 FF FF FF FF FF FF FF FF     
   7629 FFFCA23C FF FF FF FF FF FF FF FF     
   7630 FFFCA244 FF FF FF FF FF FF FF FF     
   7631 FFFCA24C FF FF FF FF FF FF FF FF     
   7632 FFFCA254 FF FF FF FF FF FF FF FF     
   7633 FFFCA25C FF FF FF FF FF FF FF FF     
   7634 FFFCA264 FF FF FF FF FF FF FF FF     
   7635 FFFCA26C FF FF FF FF FF FF FF FF     
   7636 FFFCA274 FF FF FF FF FF FF FF FF     
   7637 FFFCA27C FF FF FF FF FF FF FF FF     
   7638 FFFCA284 FF FF FF FF FF FF FF FF     
   7639 FFFCA28C FF FF FF FF FF FF FF FF     
   7640 FFFCA294 FF FF FF FF FF FF FF FF     
   7641 FFFCA29C FF FF FF FF FF FF FF FF     
   7642 FFFCA2A4 FF FF FF FF FF FF FF FF     
   7643 FFFCA2AC FF FF FF FF FF FF FF FF     
   7644 FFFCA2B4 FF FF FF FF FF FF FF FF     
   7645 FFFCA2BC FF FF FF FF FF FF FF FF     
   7646 FFFCA2C4 FF FF FF FF FF FF FF FF     
   7647 FFFCA2CC FF FF FF FF FF FF FF FF     
   7648 FFFCA2D4 FF FF FF FF FF FF FF FF     
   7649 FFFCA2DC FF FF FF FF FF FF FF FF     
   7650 FFFCA2E4 FF FF FF FF FF FF FF FF     
   7651 FFFCA2EC FF FF FF FF FF FF FF FF     
   7652 FFFCA2F4 FF FF FF FF FF FF FF FF     
   7653 FFFCA2FC FF FF FF FF FF FF FF FF     
   7654 FFFCA304 FF FF FF FF FF FF FF FF     
   7655 FFFCA30C FF FF FF FF FF FF FF FF     
   7656 FFFCA314 FF FF FF FF FF FF FF FF     
   7657 FFFCA31C FF FF FF FF FF FF FF FF     
   7658 FFFCA324 FF FF FF FF FF FF FF FF     
   7659 FFFCA32C FF FF FF FF FF FF FF FF     
   7660 FFFCA334 FF FF FF FF FF FF FF FF     
   7661 FFFCA33C FF FF FF FF FF FF FF FF     
   7662 FFFCA344 FF FF FF FF FF FF FF FF     
   7663 FFFCA34C FF FF FF FF FF FF FF FF     
   7664 FFFCA354 FF FF FF FF FF FF FF FF     
   7665 FFFCA35C FF FF FF FF FF FF FF FF     
   7666 FFFCA364 FF FF FF FF FF FF FF FF     
   7667 FFFCA36C FF FF FF FF FF FF FF FF     
   7668 FFFCA374 FF FF FF FF FF FF FF FF     
   7669 FFFCA37C FF FF FF FF FF FF FF FF     
   7670 FFFCA384 FF FF FF FF FF FF FF FF     
   7671 FFFCA38C FF FF FF FF FF FF FF FF     
   7672 FFFCA394 FF FF FF FF FF FF FF FF     
   7673 FFFCA39C FF FF FF FF FF FF FF FF     
   7674 FFFCA3A4 FF FF FF FF FF FF FF FF     
   7675 FFFCA3AC FF FF FF FF FF FF FF FF     
   7676 FFFCA3B4 FF FF FF FF FF FF FF FF     
   7677 FFFCA3BC FF FF FF FF FF FF FF FF     
   7678 FFFCA3C4 FF FF FF FF FF FF FF FF     
   7679 FFFCA3CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 71
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7680 FFFCA3D4 FF FF FF FF FF FF FF FF     
   7681 FFFCA3DC FF FF FF FF FF FF FF FF     
   7682 FFFCA3E4 FF FF FF FF FF FF FF FF     
   7683 FFFCA3EC FF FF FF FF FF FF FF FF     
   7684 FFFCA3F4 FF FF FF FF FF FF FF FF     
   7685 FFFCA3FC FF FF FF FF FF FF FF FF     
   7686 FFFCA404 FF FF FF FF FF FF FF FF     
   7687 FFFCA40C FF FF FF FF FF FF FF FF     
   7688 FFFCA414 FF FF FF FF FF FF FF FF     
   7689 FFFCA41C FF FF FF FF FF FF FF FF     
   7690 FFFCA424 FF FF FF FF FF FF FF FF     
   7691 FFFCA42C FF FF FF FF FF FF FF FF     
   7692 FFFCA434 FF FF FF FF FF FF FF FF     
   7693 FFFCA43C FF FF FF FF FF FF FF FF     
   7694 FFFCA444 FF FF FF FF FF FF FF FF     
   7695 FFFCA44C FF FF FF FF FF FF FF FF     
   7696 FFFCA454 FF FF FF FF FF FF FF FF     
   7697 FFFCA45C FF FF FF FF FF FF FF FF     
   7698 FFFCA464 FF FF FF FF FF FF FF FF     
   7699 FFFCA46C FF FF FF FF FF FF FF FF     
   7700 FFFCA474 FF FF FF FF FF FF FF FF     
   7701 FFFCA47C FF FF FF FF FF FF FF FF     
   7702 FFFCA484 FF FF FF FF FF FF FF FF     
   7703 FFFCA48C FF FF FF FF FF FF FF FF     
   7704 FFFCA494 FF FF FF FF FF FF FF FF     
   7705 FFFCA49C FF FF FF FF FF FF FF FF     
   7706 FFFCA4A4 FF FF FF FF FF FF FF FF     
   7707 FFFCA4AC FF FF FF FF FF FF FF FF     
   7708 FFFCA4B4 FF FF FF FF FF FF FF FF     
   7709 FFFCA4BC FF FF FF FF FF FF FF FF     
   7710 FFFCA4C4 FF FF FF FF FF FF FF FF     
   7711 FFFCA4CC FF FF FF FF FF FF FF FF     
   7712 FFFCA4D4 FF FF FF FF FF FF FF FF     
   7713 FFFCA4DC FF FF FF FF FF FF FF FF     
   7714 FFFCA4E4 FF FF FF FF FF FF FF FF     
   7715 FFFCA4EC FF FF FF FF FF FF FF FF     
   7716 FFFCA4F4 FF FF FF FF FF FF FF FF     
   7717 FFFCA4FC FF FF FF FF FF FF FF FF     
   7718 FFFCA504 FF FF FF FF FF FF FF FF     
   7719 FFFCA50C FF FF FF FF FF FF FF FF     
   7720 FFFCA514 FF FF FF FF FF FF FF FF     
   7721 FFFCA51C FF FF FF FF FF FF FF FF     
   7722 FFFCA524 FF FF FF FF FF FF FF FF     
   7723 FFFCA52C FF FF FF FF FF FF FF FF     
   7724 FFFCA534 FF FF FF FF FF FF FF FF     
   7725 FFFCA53C FF FF FF FF FF FF FF FF     
   7726 FFFCA544 FF FF FF FF FF FF FF FF     
   7727 FFFCA54C FF FF FF FF FF FF FF FF     
   7728 FFFCA554 FF FF FF FF FF FF FF FF     
   7729 FFFCA55C FF FF FF FF FF FF FF FF     
   7730 FFFCA564 FF FF FF FF FF FF FF FF     
   7731 FFFCA56C FF FF FF FF FF FF FF FF     
   7732 FFFCA574 FF FF FF FF FF FF FF FF     
   7733 FFFCA57C FF FF FF FF FF FF FF FF     
   7734 FFFCA584 FF FF FF FF FF FF FF FF     
   7735 FFFCA58C FF FF FF FF FF FF FF FF     
   7736 FFFCA594 FF FF FF FF FF FF FF FF     
   7737 FFFCA59C FF FF FF FF FF FF FF FF     
   7738 FFFCA5A4 FF FF FF FF FF FF FF FF     
   7739 FFFCA5AC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 72
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7740 FFFCA5B4 FF FF FF FF FF FF FF FF     
   7741 FFFCA5BC FF FF FF FF FF FF FF FF     
   7742 FFFCA5C4 FF FF FF FF FF FF FF FF     
   7743 FFFCA5CC FF FF FF FF FF FF FF FF     
   7744 FFFCA5D4 FF FF FF FF FF FF FF FF     
   7745 FFFCA5DC FF FF FF FF FF FF FF FF     
   7746 FFFCA5E4 FF FF FF FF FF FF FF FF     
   7747 FFFCA5EC FF FF FF FF FF FF FF FF     
   7748 FFFCA5F4 FF FF FF FF FF FF FF FF     
   7749 FFFCA5FC FF FF FF FF FF FF FF FF     
   7750 FFFCA604 FF FF FF FF FF FF FF FF     
   7751 FFFCA60C FF FF FF FF FF FF FF FF     
   7752 FFFCA614 FF FF FF FF FF FF FF FF     
   7753 FFFCA61C FF FF FF FF FF FF FF FF     
   7754 FFFCA624 FF FF FF FF FF FF FF FF     
   7755 FFFCA62C FF FF FF FF FF FF FF FF     
   7756 FFFCA634 FF FF FF FF FF FF FF FF     
   7757 FFFCA63C FF FF FF FF FF FF FF FF     
   7758 FFFCA644 FF FF FF FF FF FF FF FF     
   7759 FFFCA64C FF FF FF FF FF FF FF FF     
   7760 FFFCA654 FF FF FF FF FF FF FF FF     
   7761 FFFCA65C FF FF FF FF FF FF FF FF     
   7762 FFFCA664 FF FF FF FF FF FF FF FF     
   7763 FFFCA66C FF FF FF FF FF FF FF FF     
   7764 FFFCA674 FF FF FF FF FF FF FF FF     
   7765 FFFCA67C FF FF FF FF FF FF FF FF     
   7766 FFFCA684 FF FF FF FF FF FF FF FF     
   7767 FFFCA68C FF FF FF FF FF FF FF FF     
   7768 FFFCA694 FF FF FF FF FF FF FF FF     
   7769 FFFCA69C FF FF FF FF FF FF FF FF     
   7770 FFFCA6A4 FF FF FF FF FF FF FF FF     
   7771 FFFCA6AC FF FF FF FF FF FF FF FF     
   7772 FFFCA6B4 FF FF FF FF FF FF FF FF     
   7773 FFFCA6BC FF FF FF FF FF FF FF FF     
   7774 FFFCA6C4 FF FF FF FF FF FF FF FF     
   7775 FFFCA6CC FF FF FF FF FF FF FF FF     
   7776 FFFCA6D4 FF FF FF FF FF FF FF FF     
   7777 FFFCA6DC FF FF FF FF FF FF FF FF     
   7778 FFFCA6E4 FF FF FF FF FF FF FF FF     
   7779 FFFCA6EC FF FF FF FF FF FF FF FF     
   7780 FFFCA6F4 FF FF FF FF FF FF FF FF     
   7781 FFFCA6FC FF FF FF FF FF FF FF FF     
   7782 FFFCA704 FF FF FF FF FF FF FF FF     
   7783 FFFCA70C FF FF FF FF FF FF FF FF     
   7784 FFFCA714 FF FF FF FF FF FF FF FF     
   7785 FFFCA71C FF FF FF FF FF FF FF FF     
   7786 FFFCA724 FF FF FF FF FF FF FF FF     
   7787 FFFCA72C FF FF FF FF FF FF FF FF     
   7788 FFFCA734 FF FF FF FF FF FF FF FF     
   7789 FFFCA73C FF FF FF FF FF FF FF FF     
   7790 FFFCA744 FF FF FF FF FF FF FF FF     
   7791 FFFCA74C FF FF FF FF FF FF FF FF     
   7792 FFFCA754 FF FF FF FF FF FF FF FF     
   7793 FFFCA75C FF FF FF FF FF FF FF FF     
   7794 FFFCA764 FF FF FF FF FF FF FF FF     
   7795 FFFCA76C FF FF FF FF FF FF FF FF     
   7796 FFFCA774 FF FF FF FF FF FF FF FF     
   7797 FFFCA77C FF FF FF FF FF FF FF FF     
   7798 FFFCA784 FF FF FF FF FF FF FF FF     
   7799 FFFCA78C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 73
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7800 FFFCA794 FF FF FF FF FF FF FF FF     
   7801 FFFCA79C FF FF FF FF FF FF FF FF     
   7802 FFFCA7A4 FF FF FF FF FF FF FF FF     
   7803 FFFCA7AC FF FF FF FF FF FF FF FF     
   7804 FFFCA7B4 FF FF FF FF FF FF FF FF     
   7805 FFFCA7BC FF FF FF FF FF FF FF FF     
   7806 FFFCA7C4 FF FF FF FF FF FF FF FF     
   7807 FFFCA7CC FF FF FF FF FF FF FF FF     
   7808 FFFCA7D4 FF FF FF FF FF FF FF FF     
   7809 FFFCA7DC FF FF FF FF FF FF FF FF     
   7810 FFFCA7E4 FF FF FF FF FF FF FF FF     
   7811 FFFCA7EC FF FF FF FF FF FF FF FF     
   7812 FFFCA7F4 FF FF FF FF FF FF FF FF     
   7813 FFFCA7FC FF FF FF FF FF FF FF FF     
   7814 FFFCA804 FF FF FF FF FF FF FF FF     
   7815 FFFCA80C FF FF FF FF FF FF FF FF     
   7816 FFFCA814 FF FF FF FF FF FF FF FF     
   7817 FFFCA81C FF FF FF FF FF FF FF FF     
   7818 FFFCA824 FF FF FF FF FF FF FF FF     
   7819 FFFCA82C FF FF FF FF FF FF FF FF     
   7820 FFFCA834 FF FF FF FF FF FF FF FF     
   7821 FFFCA83C FF FF FF FF FF FF FF FF     
   7822 FFFCA844 FF FF FF FF FF FF FF FF     
   7823 FFFCA84C FF FF FF FF FF FF FF FF     
   7824 FFFCA854 FF FF FF FF FF FF FF FF     
   7825 FFFCA85C FF FF FF FF FF FF FF FF     
   7826 FFFCA864 FF FF FF FF FF FF FF FF     
   7827 FFFCA86C FF FF FF FF FF FF FF FF     
   7828 FFFCA874 FF FF FF FF FF FF FF FF     
   7829 FFFCA87C FF FF FF FF FF FF FF FF     
   7830 FFFCA884 FF FF FF FF FF FF FF FF     
   7831 FFFCA88C FF FF FF FF FF FF FF FF     
   7832 FFFCA894 FF FF FF FF FF FF FF FF     
   7833 FFFCA89C FF FF FF FF FF FF FF FF     
   7834 FFFCA8A4 FF FF FF FF FF FF FF FF     
   7835 FFFCA8AC FF FF FF FF FF FF FF FF     
   7836 FFFCA8B4 FF FF FF FF FF FF FF FF     
   7837 FFFCA8BC FF FF FF FF FF FF FF FF     
   7838 FFFCA8C4 FF FF FF FF FF FF FF FF     
   7839 FFFCA8CC FF FF FF FF FF FF FF FF     
   7840 FFFCA8D4 FF FF FF FF FF FF FF FF     
   7841 FFFCA8DC FF FF FF FF FF FF FF FF     
   7842 FFFCA8E4 FF FF FF FF FF FF FF FF     
   7843 FFFCA8EC FF FF FF FF FF FF FF FF     
   7844 FFFCA8F4 FF FF FF FF FF FF FF FF     
   7845 FFFCA8FC FF FF FF FF FF FF FF FF     
   7846 FFFCA904 FF FF FF FF FF FF FF FF     
   7847 FFFCA90C FF FF FF FF FF FF FF FF     
   7848 FFFCA914 FF FF FF FF FF FF FF FF     
   7849 FFFCA91C FF FF FF FF FF FF FF FF     
   7850 FFFCA924 FF FF FF FF FF FF FF FF     
   7851 FFFCA92C FF FF FF FF FF FF FF FF     
   7852 FFFCA934 FF FF FF FF FF FF FF FF     
   7853 FFFCA93C FF FF FF FF FF FF FF FF     
   7854 FFFCA944 FF FF FF FF FF FF FF FF     
   7855 FFFCA94C FF FF FF FF FF FF FF FF     
   7856 FFFCA954 FF FF FF FF FF FF FF FF     
   7857 FFFCA95C FF FF FF FF FF FF FF FF     
   7858 FFFCA964 FF FF FF FF FF FF FF FF     
   7859 FFFCA96C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 74
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7860 FFFCA974 FF FF FF FF FF FF FF FF     
   7861 FFFCA97C FF FF FF FF FF FF FF FF     
   7862 FFFCA984 FF FF FF FF FF FF FF FF     
   7863 FFFCA98C FF FF FF FF FF FF FF FF     
   7864 FFFCA994 FF FF FF FF FF FF FF FF     
   7865 FFFCA99C FF FF FF FF FF FF FF FF     
   7866 FFFCA9A4 FF FF FF FF FF FF FF FF     
   7867 FFFCA9AC FF FF FF FF FF FF FF FF     
   7868 FFFCA9B4 FF FF FF FF FF FF FF FF     
   7869 FFFCA9BC FF FF FF FF FF FF FF FF     
   7870 FFFCA9C4 FF FF FF FF FF FF FF FF     
   7871 FFFCA9CC FF FF FF FF FF FF FF FF     
   7872 FFFCA9D4 FF FF FF FF FF FF FF FF     
   7873 FFFCA9DC FF FF FF FF FF FF FF FF     
   7874 FFFCA9E4 FF FF FF FF FF FF FF FF     
   7875 FFFCA9EC FF FF FF FF FF FF FF FF     
   7876 FFFCA9F4 FF FF FF FF FF FF FF FF     
   7877 FFFCA9FC FF FF FF FF FF FF FF FF     
   7878 FFFCAA04 FF FF FF FF FF FF FF FF     
   7879 FFFCAA0C FF FF FF FF FF FF FF FF     
   7880 FFFCAA14 FF FF FF FF FF FF FF FF     
   7881 FFFCAA1C FF FF FF FF FF FF FF FF     
   7882 FFFCAA24 FF FF FF FF FF FF FF FF     
   7883 FFFCAA2C FF FF FF FF FF FF FF FF     
   7884 FFFCAA34 FF FF FF FF FF FF FF FF     
   7885 FFFCAA3C FF FF FF FF FF FF FF FF     
   7886 FFFCAA44 FF FF FF FF FF FF FF FF     
   7887 FFFCAA4C FF FF FF FF FF FF FF FF     
   7888 FFFCAA54 FF FF FF FF FF FF FF FF     
   7889 FFFCAA5C FF FF FF FF FF FF FF FF     
   7890 FFFCAA64 FF FF FF FF FF FF FF FF     
   7891 FFFCAA6C FF FF FF FF FF FF FF FF     
   7892 FFFCAA74 FF FF FF FF FF FF FF FF     
   7893 FFFCAA7C FF FF FF FF FF FF FF FF     
   7894 FFFCAA84 FF FF FF FF FF FF FF FF     
   7895 FFFCAA8C FF FF FF FF FF FF FF FF     
   7896 FFFCAA94 FF FF FF FF FF FF FF FF     
   7897 FFFCAA9C FF FF FF FF FF FF FF FF     
   7898 FFFCAAA4 FF FF FF FF FF FF FF FF     
   7899 FFFCAAAC FF FF FF FF FF FF FF FF     
   7900 FFFCAAB4 FF FF FF FF FF FF FF FF     
   7901 FFFCAABC FF FF FF FF FF FF FF FF     
   7902 FFFCAAC4 FF FF FF FF FF FF FF FF     
   7903 FFFCAACC FF FF FF FF FF FF FF FF     
   7904 FFFCAAD4 FF FF FF FF FF FF FF FF     
   7905 FFFCAADC FF FF FF FF FF FF FF FF     
   7906 FFFCAAE4 FF FF FF FF FF FF FF FF     
   7907 FFFCAAEC FF FF FF FF FF FF FF FF     
   7908 FFFCAAF4 FF FF FF FF FF FF FF FF     
   7909 FFFCAAFC FF FF FF FF FF FF FF FF     
   7910 FFFCAB04 FF FF FF FF FF FF FF FF     
   7911 FFFCAB0C FF FF FF FF FF FF FF FF     
   7912 FFFCAB14 FF FF FF FF FF FF FF FF     
   7913 FFFCAB1C FF FF FF FF FF FF FF FF     
   7914 FFFCAB24 FF FF FF FF FF FF FF FF     
   7915 FFFCAB2C FF FF FF FF FF FF FF FF     
   7916 FFFCAB34 FF FF FF FF FF FF FF FF     
   7917 FFFCAB3C FF FF FF FF FF FF FF FF     
   7918 FFFCAB44 FF FF FF FF FF FF FF FF     
   7919 FFFCAB4C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 75
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7920 FFFCAB54 FF FF FF FF FF FF FF FF     
   7921 FFFCAB5C FF FF FF FF FF FF FF FF     
   7922 FFFCAB64 FF FF FF FF FF FF FF FF     
   7923 FFFCAB6C FF FF FF FF FF FF FF FF     
   7924 FFFCAB74 FF FF FF FF FF FF FF FF     
   7925 FFFCAB7C FF FF FF FF FF FF FF FF     
   7926 FFFCAB84 FF FF FF FF FF FF FF FF     
   7927 FFFCAB8C FF FF FF FF FF FF FF FF     
   7928 FFFCAB94 FF FF FF FF FF FF FF FF     
   7929 FFFCAB9C FF FF FF FF FF FF FF FF     
   7930 FFFCABA4 FF FF FF FF FF FF FF FF     
   7931 FFFCABAC FF FF FF FF FF FF FF FF     
   7932 FFFCABB4 FF FF FF FF FF FF FF FF     
   7933 FFFCABBC FF FF FF FF FF FF FF FF     
   7934 FFFCABC4 FF FF FF FF FF FF FF FF     
   7935 FFFCABCC FF FF FF FF FF FF FF FF     
   7936 FFFCABD4 FF FF FF FF FF FF FF FF     
   7937 FFFCABDC FF FF FF FF FF FF FF FF     
   7938 FFFCABE4 FF FF FF FF FF FF FF FF     
   7939 FFFCABEC FF FF FF FF FF FF FF FF     
   7940 FFFCABF4 FF FF FF FF FF FF FF FF     
   7941 FFFCABFC FF FF FF FF FF FF FF FF     
   7942 FFFCAC04 FF FF FF FF FF FF FF FF     
   7943 FFFCAC0C FF FF FF FF FF FF FF FF     
   7944 FFFCAC14 FF FF FF FF FF FF FF FF     
   7945 FFFCAC1C FF FF FF FF FF FF FF FF     
   7946 FFFCAC24 FF FF FF FF FF FF FF FF     
   7947 FFFCAC2C FF FF FF FF FF FF FF FF     
   7948 FFFCAC34 FF FF FF FF FF FF FF FF     
   7949 FFFCAC3C FF FF FF FF FF FF FF FF     
   7950 FFFCAC44 FF FF FF FF FF FF FF FF     
   7951 FFFCAC4C FF FF FF FF FF FF FF FF     
   7952 FFFCAC54 FF FF FF FF FF FF FF FF     
   7953 FFFCAC5C FF FF FF FF FF FF FF FF     
   7954 FFFCAC64 FF FF FF FF FF FF FF FF     
   7955 FFFCAC6C FF FF FF FF FF FF FF FF     
   7956 FFFCAC74 FF FF FF FF FF FF FF FF     
   7957 FFFCAC7C FF FF FF FF FF FF FF FF     
   7958 FFFCAC84 FF FF FF FF FF FF FF FF     
   7959 FFFCAC8C FF FF FF FF FF FF FF FF     
   7960 FFFCAC94 FF FF FF FF FF FF FF FF     
   7961 FFFCAC9C FF FF FF FF FF FF FF FF     
   7962 FFFCACA4 FF FF FF FF FF FF FF FF     
   7963 FFFCACAC FF FF FF FF FF FF FF FF     
   7964 FFFCACB4 FF FF FF FF FF FF FF FF     
   7965 FFFCACBC FF FF FF FF FF FF FF FF     
   7966 FFFCACC4 FF FF FF FF FF FF FF FF     
   7967 FFFCACCC FF FF FF FF FF FF FF FF     
   7968 FFFCACD4 FF FF FF FF FF FF FF FF     
   7969 FFFCACDC FF FF FF FF FF FF FF FF     
   7970 FFFCACE4 FF FF FF FF FF FF FF FF     
   7971 FFFCACEC FF FF FF FF FF FF FF FF     
   7972 FFFCACF4 FF FF FF FF FF FF FF FF     
   7973 FFFCACFC FF FF FF FF FF FF FF FF     
   7974 FFFCAD04 FF FF FF FF FF FF FF FF     
   7975 FFFCAD0C FF FF FF FF FF FF FF FF     
   7976 FFFCAD14 FF FF FF FF FF FF FF FF     
   7977 FFFCAD1C FF FF FF FF FF FF FF FF     
   7978 FFFCAD24 FF FF FF FF FF FF FF FF     
   7979 FFFCAD2C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 76
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7980 FFFCAD34 FF FF FF FF FF FF FF FF     
   7981 FFFCAD3C FF FF FF FF FF FF FF FF     
   7982 FFFCAD44 FF FF FF FF FF FF FF FF     
   7983 FFFCAD4C FF FF FF FF FF FF FF FF     
   7984 FFFCAD54 FF FF FF FF FF FF FF FF     
   7985 FFFCAD5C FF FF FF FF FF FF FF FF     
   7986 FFFCAD64 FF FF FF FF FF FF FF FF     
   7987 FFFCAD6C FF FF FF FF FF FF FF FF     
   7988 FFFCAD74 FF FF FF FF FF FF FF FF     
   7989 FFFCAD7C FF FF FF FF FF FF FF FF     
   7990 FFFCAD84 FF FF FF FF FF FF FF FF     
   7991 FFFCAD8C FF FF FF FF FF FF FF FF     
   7992 FFFCAD94 FF FF FF FF FF FF FF FF     
   7993 FFFCAD9C FF FF FF FF FF FF FF FF     
   7994 FFFCADA4 FF FF FF FF FF FF FF FF     
   7995 FFFCADAC FF FF FF FF FF FF FF FF     
   7996 FFFCADB4 FF FF FF FF FF FF FF FF     
   7997 FFFCADBC FF FF FF FF FF FF FF FF     
   7998 FFFCADC4 FF FF FF FF FF FF FF FF     
   7999 FFFCADCC FF FF FF FF FF FF FF FF     
   8000 FFFCADD4 FF FF FF FF FF FF FF FF     
   8001 FFFCADDC FF FF FF FF FF FF FF FF     
   8002 FFFCADE4 FF FF FF FF FF FF FF FF     
   8003 FFFCADEC FF FF FF FF FF FF FF FF     
   8004 FFFCADF4 FF FF FF FF FF FF FF FF     
   8005 FFFCADFC FF FF FF FF FF FF FF FF     
   8006 FFFCAE04 FF FF FF FF FF FF FF FF     
   8007 FFFCAE0C FF FF FF FF FF FF FF FF     
   8008 FFFCAE14 FF FF FF FF FF FF FF FF     
   8009 FFFCAE1C FF FF FF FF FF FF FF FF     
   8010 FFFCAE24 FF FF FF FF FF FF FF FF     
   8011 FFFCAE2C FF FF FF FF FF FF FF FF     
   8012 FFFCAE34 FF FF FF FF FF FF FF FF     
   8013 FFFCAE3C FF FF FF FF FF FF FF FF     
   8014 FFFCAE44 FF FF FF FF FF FF FF FF     
   8015 FFFCAE4C FF FF FF FF FF FF FF FF     
   8016 FFFCAE54 FF FF FF FF FF FF FF FF     
   8017 FFFCAE5C FF FF FF FF FF FF FF FF     
   8018 FFFCAE64 FF FF FF FF FF FF FF FF     
   8019 FFFCAE6C FF FF FF FF FF FF FF FF     
   8020 FFFCAE74 FF FF FF FF FF FF FF FF     
   8021 FFFCAE7C FF FF FF FF FF FF FF FF     
   8022 FFFCAE84 FF FF FF FF FF FF FF FF     
   8023 FFFCAE8C FF FF FF FF FF FF FF FF     
   8024 FFFCAE94 FF FF FF FF FF FF FF FF     
   8025 FFFCAE9C FF FF FF FF FF FF FF FF     
   8026 FFFCAEA4 FF FF FF FF FF FF FF FF     
   8027 FFFCAEAC FF FF FF FF FF FF FF FF     
   8028 FFFCAEB4 FF FF FF FF FF FF FF FF     
   8029 FFFCAEBC FF FF FF FF FF FF FF FF     
   8030 FFFCAEC4 FF FF FF FF FF FF FF FF     
   8031 FFFCAECC FF FF FF FF FF FF FF FF     
   8032 FFFCAED4 FF FF FF FF FF FF FF FF     
   8033 FFFCAEDC FF FF FF FF FF FF FF FF     
   8034 FFFCAEE4 FF FF FF FF FF FF FF FF     
   8035 FFFCAEEC FF FF FF FF FF FF FF FF     
   8036 FFFCAEF4 FF FF FF FF FF FF FF FF     
   8037 FFFCAEFC FF FF FF FF FF FF FF FF     
   8038 FFFCAF04 FF FF FF FF FF FF FF FF     
   8039 FFFCAF0C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 77
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8040 FFFCAF14 FF FF FF FF FF FF FF FF     
   8041 FFFCAF1C FF FF FF FF FF FF FF FF     
   8042 FFFCAF24 FF FF FF FF FF FF FF FF     
   8043 FFFCAF2C FF FF FF FF FF FF FF FF     
   8044 FFFCAF34 FF FF FF FF FF FF FF FF     
   8045 FFFCAF3C FF FF FF FF FF FF FF FF     
   8046 FFFCAF44 FF FF FF FF FF FF FF FF     
   8047 FFFCAF4C FF FF FF FF FF FF FF FF     
   8048 FFFCAF54 FF FF FF FF FF FF FF FF     
   8049 FFFCAF5C FF FF FF FF FF FF FF FF     
   8050 FFFCAF64 FF FF FF FF FF FF FF FF     
   8051 FFFCAF6C FF FF FF FF FF FF FF FF     
   8052 FFFCAF74 FF FF FF FF FF FF FF FF     
   8053 FFFCAF7C FF FF FF FF FF FF FF FF     
   8054 FFFCAF84 FF FF FF FF FF FF FF FF     
   8055 FFFCAF8C FF FF FF FF FF FF FF FF     
   8056 FFFCAF94 FF FF FF FF FF FF FF FF     
   8057 FFFCAF9C FF FF FF FF FF FF FF FF     
   8058 FFFCAFA4 FF FF FF FF FF FF FF FF     
   8059 FFFCAFAC FF FF FF FF FF FF FF FF     
   8060 FFFCAFB4 FF FF FF FF FF FF FF FF     
   8061 FFFCAFBC FF FF FF FF FF FF FF FF     
   8062 FFFCAFC4 FF FF FF FF FF FF FF FF     
   8063 FFFCAFCC FF FF FF FF FF FF FF FF     
   8064 FFFCAFD4 FF FF FF FF FF FF FF FF     
   8065 FFFCAFDC FF FF FF FF FF FF FF FF     
   8066 FFFCAFE4 FF FF FF FF FF FF FF FF     
   8067 FFFCAFEC FF FF FF FF FF FF FF FF     
   8068 FFFCAFF4 FF FF FF FF FF FF FF FF     
   8069 FFFCAFFC FF FF FF FF FF FF FF FF     
   8070 FFFCB004 FF FF FF FF FF FF FF FF     
   8071 FFFCB00C FF FF FF FF FF FF FF FF     
   8072 FFFCB014 FF FF FF FF FF FF FF FF     
   8073 FFFCB01C FF FF FF FF FF FF FF FF     
   8074 FFFCB024 FF FF FF FF FF FF FF FF     
   8075 FFFCB02C FF FF FF FF FF FF FF FF     
   8076 FFFCB034 FF FF FF FF FF FF FF FF     
   8077 FFFCB03C FF FF FF FF FF FF FF FF     
   8078 FFFCB044 FF FF FF FF FF FF FF FF     
   8079 FFFCB04C FF FF FF FF FF FF FF FF     
   8080 FFFCB054 FF FF FF FF FF FF FF FF     
   8081 FFFCB05C FF FF FF FF FF FF FF FF     
   8082 FFFCB064 FF FF FF FF FF FF FF FF     
   8083 FFFCB06C FF FF FF FF FF FF FF FF     
   8084 FFFCB074 FF FF FF FF FF FF FF FF     
   8085 FFFCB07C FF FF FF FF FF FF FF FF     
   8086 FFFCB084 FF FF FF FF FF FF FF FF     
   8087 FFFCB08C FF FF FF FF FF FF FF FF     
   8088 FFFCB094 FF FF FF FF FF FF FF FF     
   8089 FFFCB09C FF FF FF FF FF FF FF FF     
   8090 FFFCB0A4 FF FF FF FF FF FF FF FF     
   8091 FFFCB0AC FF FF FF FF FF FF FF FF     
   8092 FFFCB0B4 FF FF FF FF FF FF FF FF     
   8093 FFFCB0BC FF FF FF FF FF FF FF FF     
   8094 FFFCB0C4 FF FF FF FF FF FF FF FF     
   8095 FFFCB0CC FF FF FF FF FF FF FF FF     
   8096 FFFCB0D4 FF FF FF FF FF FF FF FF     
   8097 FFFCB0DC FF FF FF FF FF FF FF FF     
   8098 FFFCB0E4 FF FF FF FF FF FF FF FF     
   8099 FFFCB0EC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 78
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8100 FFFCB0F4 FF FF FF FF FF FF FF FF     
   8101 FFFCB0FC FF FF FF FF FF FF FF FF     
   8102 FFFCB104 FF FF FF FF FF FF FF FF     
   8103 FFFCB10C FF FF FF FF FF FF FF FF     
   8104 FFFCB114 FF FF FF FF FF FF FF FF     
   8105 FFFCB11C FF FF FF FF FF FF FF FF     
   8106 FFFCB124 FF FF FF FF FF FF FF FF     
   8107 FFFCB12C FF FF FF FF FF FF FF FF     
   8108 FFFCB134 FF FF FF FF FF FF FF FF     
   8109 FFFCB13C FF FF FF FF FF FF FF FF     
   8110 FFFCB144 FF FF FF FF FF FF FF FF     
   8111 FFFCB14C FF FF FF FF FF FF FF FF     
   8112 FFFCB154 FF FF FF FF FF FF FF FF     
   8113 FFFCB15C FF FF FF FF FF FF FF FF     
   8114 FFFCB164 FF FF FF FF FF FF FF FF     
   8115 FFFCB16C FF FF FF FF FF FF FF FF     
   8116 FFFCB174 FF FF FF FF FF FF FF FF     
   8117 FFFCB17C FF FF FF FF FF FF FF FF     
   8118 FFFCB184 FF FF FF FF FF FF FF FF     
   8119 FFFCB18C FF FF FF FF FF FF FF FF     
   8120 FFFCB194 FF FF FF FF FF FF FF FF     
   8121 FFFCB19C FF FF FF FF FF FF FF FF     
   8122 FFFCB1A4 FF FF FF FF FF FF FF FF     
   8123 FFFCB1AC FF FF FF FF FF FF FF FF     
   8124 FFFCB1B4 FF FF FF FF FF FF FF FF     
   8125 FFFCB1BC FF FF FF FF FF FF FF FF     
   8126 FFFCB1C4 FF FF FF FF FF FF FF FF     
   8127 FFFCB1CC FF FF FF FF FF FF FF FF     
   8128 FFFCB1D4 FF FF FF FF FF FF FF FF     
   8129 FFFCB1DC FF FF FF FF FF FF FF FF     
   8130 FFFCB1E4 FF FF FF FF FF FF FF FF     
   8131 FFFCB1EC FF FF FF FF FF FF FF FF     
   8132 FFFCB1F4 FF FF FF FF FF FF FF FF     
   8133 FFFCB1FC FF FF FF FF FF FF FF FF     
   8134 FFFCB204 FF FF FF FF FF FF FF FF     
   8135 FFFCB20C FF FF FF FF FF FF FF FF     
   8136 FFFCB214 FF FF FF FF FF FF FF FF     
   8137 FFFCB21C FF FF FF FF FF FF FF FF     
   8138 FFFCB224 FF FF FF FF FF FF FF FF     
   8139 FFFCB22C FF FF FF FF FF FF FF FF     
   8140 FFFCB234 FF FF FF FF FF FF FF FF     
   8141 FFFCB23C FF FF FF FF FF FF FF FF     
   8142 FFFCB244 FF FF FF FF FF FF FF FF     
   8143 FFFCB24C FF FF FF FF FF FF FF FF     
   8144 FFFCB254 FF FF FF FF FF FF FF FF     
   8145 FFFCB25C FF FF FF FF FF FF FF FF     
   8146 FFFCB264 FF FF FF FF FF FF FF FF     
   8147 FFFCB26C FF FF FF FF FF FF FF FF     
   8148 FFFCB274 FF FF FF FF FF FF FF FF     
   8149 FFFCB27C FF FF FF FF FF FF FF FF     
   8150 FFFCB284 FF FF FF FF FF FF FF FF     
   8151 FFFCB28C FF FF FF FF FF FF FF FF     
   8152 FFFCB294 FF FF FF FF FF FF FF FF     
   8153 FFFCB29C FF FF FF FF FF FF FF FF     
   8154 FFFCB2A4 FF FF FF FF FF FF FF FF     
   8155 FFFCB2AC FF FF FF FF FF FF FF FF     
   8156 FFFCB2B4 FF FF FF FF FF FF FF FF     
   8157 FFFCB2BC FF FF FF FF FF FF FF FF     
   8158 FFFCB2C4 FF FF FF FF FF FF FF FF     
   8159 FFFCB2CC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 79
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8160 FFFCB2D4 FF FF FF FF FF FF FF FF     
   8161 FFFCB2DC FF FF FF FF FF FF FF FF     
   8162 FFFCB2E4 FF FF FF FF FF FF FF FF     
   8163 FFFCB2EC FF FF FF FF FF FF FF FF     
   8164 FFFCB2F4 FF FF FF FF FF FF FF FF     
   8165 FFFCB2FC FF FF FF FF FF FF FF FF     
   8166 FFFCB304 FF FF FF FF FF FF FF FF     
   8167 FFFCB30C FF FF FF FF FF FF FF FF     
   8168 FFFCB314 FF FF FF FF FF FF FF FF     
   8169 FFFCB31C FF FF FF FF FF FF FF FF     
   8170 FFFCB324 FF FF FF FF FF FF FF FF     
   8171 FFFCB32C FF FF FF FF FF FF FF FF     
   8172 FFFCB334 FF FF FF FF FF FF FF FF     
   8173 FFFCB33C FF FF FF FF FF FF FF FF     
   8174 FFFCB344 FF FF FF FF FF FF FF FF     
   8175 FFFCB34C FF FF FF FF FF FF FF FF     
   8176 FFFCB354 FF FF FF FF FF FF FF FF     
   8177 FFFCB35C FF FF FF FF FF FF FF FF     
   8178 FFFCB364 FF FF FF FF FF FF FF FF     
   8179 FFFCB36C FF FF FF FF FF FF FF FF     
   8180 FFFCB374 FF FF FF FF FF FF FF FF     
   8181 FFFCB37C FF FF FF FF FF FF FF FF     
   8182 FFFCB384 FF FF FF FF FF FF FF FF     
   8183 FFFCB38C FF FF FF FF FF FF FF FF     
   8184 FFFCB394 FF FF FF FF FF FF FF FF     
   8185 FFFCB39C FF FF FF FF FF FF FF FF     
   8186 FFFCB3A4 FF FF FF FF FF FF FF FF     
   8187 FFFCB3AC FF FF FF FF FF FF FF FF     
   8188 FFFCB3B4 FF FF FF FF FF FF FF FF     
   8189 FFFCB3BC FF FF FF FF FF FF FF FF     
   8190 FFFCB3C4 FF FF FF FF FF FF FF FF     
   8191 FFFCB3CC FF FF FF FF FF FF FF FF     
   8192 FFFCB3D4 FF FF FF FF FF FF FF FF     
   8193 FFFCB3DC FF FF FF FF FF FF FF FF     
   8194 FFFCB3E4 FF FF FF FF FF FF FF FF     
   8195 FFFCB3EC FF FF FF FF FF FF FF FF     
   8196 FFFCB3F4 FF FF FF FF FF FF FF FF     
   8197 FFFCB3FC FF FF FF FF FF FF FF FF     
   8198 FFFCB404 FF FF FF FF FF FF FF FF     
   8199 FFFCB40C FF FF FF FF FF FF FF FF     
   8200 FFFCB414 FF FF FF FF FF FF FF FF     
   8201 FFFCB41C FF FF FF FF FF FF FF FF     
   8202 FFFCB424 FF FF FF FF FF FF FF FF     
   8203 FFFCB42C FF FF FF FF FF FF FF FF     
   8204 FFFCB434 FF FF FF FF FF FF FF FF     
   8205 FFFCB43C FF FF FF FF FF FF FF FF     
   8206 FFFCB444 FF FF FF FF FF FF FF FF     
   8207 FFFCB44C FF FF FF FF FF FF FF FF     
   8208 FFFCB454 FF FF FF FF FF FF FF FF     
   8209 FFFCB45C FF FF FF FF FF FF FF FF     
   8210 FFFCB464 FF FF FF FF FF FF FF FF     
   8211 FFFCB46C FF FF FF FF FF FF FF FF     
   8212 FFFCB474 FF FF FF FF FF FF FF FF     
   8213 FFFCB47C FF FF FF FF FF FF FF FF     
   8214 FFFCB484 FF FF FF FF FF FF FF FF     
   8215 FFFCB48C FF FF FF FF FF FF FF FF     
   8216 FFFCB494 FF FF FF FF FF FF FF FF     
   8217 FFFCB49C FF FF FF FF FF FF FF FF     
   8218 FFFCB4A4 FF FF FF FF FF FF FF FF     
   8219 FFFCB4AC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 80
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8220 FFFCB4B4 FF FF FF FF FF FF FF FF     
   8221 FFFCB4BC FF FF FF FF FF FF FF FF     
   8222 FFFCB4C4 FF FF FF FF FF FF FF FF     
   8223 FFFCB4CC FF FF FF FF FF FF FF FF     
   8224 FFFCB4D4 FF FF FF FF FF FF FF FF     
   8225 FFFCB4DC FF FF FF FF FF FF FF FF     
   8226 FFFCB4E4 FF FF FF FF FF FF FF FF     
   8227 FFFCB4EC FF FF FF FF FF FF FF FF     
   8228 FFFCB4F4 FF FF FF FF FF FF FF FF     
   8229 FFFCB4FC FF FF FF FF FF FF FF FF     
   8230 FFFCB504 FF FF FF FF FF FF FF FF     
   8231 FFFCB50C FF FF FF FF FF FF FF FF     
   8232 FFFCB514 FF FF FF FF FF FF FF FF     
   8233 FFFCB51C FF FF FF FF FF FF FF FF     
   8234 FFFCB524 FF FF FF FF FF FF FF FF     
   8235 FFFCB52C FF FF FF FF FF FF FF FF     
   8236 FFFCB534 FF FF FF FF FF FF FF FF     
   8237 FFFCB53C FF FF FF FF FF FF FF FF     
   8238 FFFCB544 FF FF FF FF FF FF FF FF     
   8239 FFFCB54C FF FF FF FF FF FF FF FF     
   8240 FFFCB554 FF FF FF FF FF FF FF FF     
   8241 FFFCB55C FF FF FF FF FF FF FF FF     
   8242 FFFCB564 FF FF FF FF FF FF FF FF     
   8243 FFFCB56C FF FF FF FF FF FF FF FF     
   8244 FFFCB574 FF FF FF FF FF FF FF FF     
   8245 FFFCB57C FF FF FF FF FF FF FF FF     
   8246 FFFCB584 FF FF FF FF FF FF FF FF     
   8247 FFFCB58C FF FF FF FF FF FF FF FF     
   8248 FFFCB594 FF FF FF FF FF FF FF FF     
   8249 FFFCB59C FF FF FF FF FF FF FF FF     
   8250 FFFCB5A4 FF FF FF FF FF FF FF FF     
   8251 FFFCB5AC FF FF FF FF FF FF FF FF     
   8252 FFFCB5B4 FF FF FF FF FF FF FF FF     
   8253 FFFCB5BC FF FF FF FF FF FF FF FF     
   8254 FFFCB5C4 FF FF FF FF FF FF FF FF     
   8255 FFFCB5CC FF FF FF FF FF FF FF FF     
   8256 FFFCB5D4 FF FF FF FF FF FF FF FF     
   8257 FFFCB5DC FF FF FF FF FF FF FF FF     
   8258 FFFCB5E4 FF FF FF FF FF FF FF FF     
   8259 FFFCB5EC FF FF FF FF FF FF FF FF     
   8260 FFFCB5F4 FF FF FF FF FF FF FF FF     
   8261 FFFCB5FC FF FF FF FF FF FF FF FF     
   8262 FFFCB604 FF FF FF FF FF FF FF FF     
   8263 FFFCB60C FF FF FF FF FF FF FF FF     
   8264 FFFCB614 FF FF FF FF FF FF FF FF     
   8265 FFFCB61C FF FF FF FF FF FF FF FF     
   8266 FFFCB624 FF FF FF FF FF FF FF FF     
   8267 FFFCB62C FF FF FF FF FF FF FF FF     
   8268 FFFCB634 FF FF FF FF FF FF FF FF     
   8269 FFFCB63C FF FF FF FF FF FF FF FF     
   8270 FFFCB644 FF FF FF FF FF FF FF FF     
   8271 FFFCB64C FF FF FF FF FF FF FF FF     
   8272 FFFCB654 FF FF FF FF FF FF FF FF     
   8273 FFFCB65C FF FF FF FF FF FF FF FF     
   8274 FFFCB664 FF FF FF FF FF FF FF FF     
   8275 FFFCB66C FF FF FF FF FF FF FF FF     
   8276 FFFCB674 FF FF FF FF FF FF FF FF     
   8277 FFFCB67C FF FF FF FF FF FF FF FF     
   8278 FFFCB684 FF FF FF FF FF FF FF FF     
   8279 FFFCB68C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 81
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8280 FFFCB694 FF FF FF FF FF FF FF FF     
   8281 FFFCB69C FF FF FF FF FF FF FF FF     
   8282 FFFCB6A4 FF FF FF FF FF FF FF FF     
   8283 FFFCB6AC FF FF FF FF FF FF FF FF     
   8284 FFFCB6B4 FF FF FF FF FF FF FF FF     
   8285 FFFCB6BC FF FF FF FF FF FF FF FF     
   8286 FFFCB6C4 FF FF FF FF FF FF FF FF     
   8287 FFFCB6CC FF FF FF FF FF FF FF FF     
   8288 FFFCB6D4 FF FF FF FF FF FF FF FF     
   8289 FFFCB6DC FF FF FF FF FF FF FF FF     
   8290 FFFCB6E4 FF FF FF FF FF FF FF FF     
   8291 FFFCB6EC FF FF FF FF FF FF FF FF     
   8292 FFFCB6F4 FF FF FF FF FF FF FF FF     
   8293 FFFCB6FC FF FF FF FF FF FF FF FF     
   8294 FFFCB704 FF FF FF FF FF FF FF FF     
   8295 FFFCB70C FF FF FF FF FF FF FF FF     
   8296 FFFCB714 FF FF FF FF FF FF FF FF     
   8297 FFFCB71C FF FF FF FF FF FF FF FF     
   8298 FFFCB724 FF FF FF FF FF FF FF FF     
   8299 FFFCB72C FF FF FF FF FF FF FF FF     
   8300 FFFCB734 FF FF FF FF FF FF FF FF     
   8301 FFFCB73C FF FF FF FF FF FF FF FF     
   8302 FFFCB744 FF FF FF FF FF FF FF FF     
   8303 FFFCB74C FF FF FF FF FF FF FF FF     
   8304 FFFCB754 FF FF FF FF FF FF FF FF     
   8305 FFFCB75C FF FF FF FF FF FF FF FF     
   8306 FFFCB764 FF FF FF FF FF FF FF FF     
   8307 FFFCB76C FF FF FF FF FF FF FF FF     
   8308 FFFCB774 FF FF FF FF FF FF FF FF     
   8309 FFFCB77C FF FF FF FF FF FF FF FF     
   8310 FFFCB784 FF FF FF FF FF FF FF FF     
   8311 FFFCB78C FF FF FF FF FF FF FF FF     
   8312 FFFCB794 FF FF FF FF FF FF FF FF     
   8313 FFFCB79C FF FF FF FF FF FF FF FF     
   8314 FFFCB7A4 FF FF FF FF FF FF FF FF     
   8315 FFFCB7AC FF FF FF FF FF FF FF FF     
   8316 FFFCB7B4 FF FF FF FF FF FF FF FF     
   8317 FFFCB7BC FF FF FF FF FF FF FF FF     
   8318 FFFCB7C4 FF FF FF FF FF FF FF FF     
   8319 FFFCB7CC FF FF FF FF FF FF FF FF     
   8320 FFFCB7D4 FF FF FF FF FF FF FF FF     
   8321 FFFCB7DC FF FF FF FF FF FF FF FF     
   8322 FFFCB7E4 FF FF FF FF FF FF FF FF     
   8323 FFFCB7EC FF FF FF FF FF FF FF FF     
   8324 FFFCB7F4 FF FF FF FF FF FF FF FF     
   8325 FFFCB7FC FF FF FF FF FF FF FF FF     
   8326 FFFCB804 FF FF FF FF FF FF FF FF     
   8327 FFFCB80C FF FF FF FF FF FF FF FF     
   8328 FFFCB814 FF FF FF FF FF FF FF FF     
   8329 FFFCB81C FF FF FF FF FF FF FF FF     
   8330 FFFCB824 FF FF FF FF FF FF FF FF     
   8331 FFFCB82C FF FF FF FF FF FF FF FF     
   8332 FFFCB834 FF FF FF FF FF FF FF FF     
   8333 FFFCB83C FF FF FF FF FF FF FF FF     
   8334 FFFCB844 FF FF FF FF FF FF FF FF     
   8335 FFFCB84C FF FF FF FF FF FF FF FF     
   8336 FFFCB854 FF FF FF FF FF FF FF FF     
   8337 FFFCB85C FF FF FF FF FF FF FF FF     
   8338 FFFCB864 FF FF FF FF FF FF FF FF     
   8339 FFFCB86C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 82
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8340 FFFCB874 FF FF FF FF FF FF FF FF     
   8341 FFFCB87C FF FF FF FF FF FF FF FF     
   8342 FFFCB884 FF FF FF FF FF FF FF FF     
   8343 FFFCB88C FF FF FF FF FF FF FF FF     
   8344 FFFCB894 FF FF FF FF FF FF FF FF     
   8345 FFFCB89C FF FF FF FF FF FF FF FF     
   8346 FFFCB8A4 FF FF FF FF FF FF FF FF     
   8347 FFFCB8AC FF FF FF FF FF FF FF FF     
   8348 FFFCB8B4 FF FF FF FF FF FF FF FF     
   8349 FFFCB8BC FF FF FF FF FF FF FF FF     
   8350 FFFCB8C4 FF FF FF FF FF FF FF FF     
   8351 FFFCB8CC FF FF FF FF FF FF FF FF     
   8352 FFFCB8D4 FF FF FF FF FF FF FF FF     
   8353 FFFCB8DC FF FF FF FF FF FF FF FF     
   8354 FFFCB8E4 FF FF FF FF FF FF FF FF     
   8355 FFFCB8EC FF FF FF FF FF FF FF FF     
   8356 FFFCB8F4 FF FF FF FF FF FF FF FF     
   8357 FFFCB8FC FF FF FF FF FF FF FF FF     
   8358 FFFCB904 FF FF FF FF FF FF FF FF     
   8359 FFFCB90C FF FF FF FF FF FF FF FF     
   8360 FFFCB914 FF FF FF FF FF FF FF FF     
   8361 FFFCB91C FF FF FF FF FF FF FF FF     
   8362 FFFCB924 FF FF FF FF FF FF FF FF     
   8363 FFFCB92C FF FF FF FF FF FF FF FF     
   8364 FFFCB934 FF FF FF FF FF FF FF FF     
   8365 FFFCB93C FF FF FF FF FF FF FF FF     
   8366 FFFCB944 FF FF FF FF FF FF FF FF     
   8367 FFFCB94C FF FF FF FF FF FF FF FF     
   8368 FFFCB954 FF FF FF FF FF FF FF FF     
   8369 FFFCB95C FF FF FF FF FF FF FF FF     
   8370 FFFCB964 FF FF FF FF FF FF FF FF     
   8371 FFFCB96C FF FF FF FF FF FF FF FF     
   8372 FFFCB974 FF FF FF FF FF FF FF FF     
   8373 FFFCB97C FF FF FF FF FF FF FF FF     
   8374 FFFCB984 FF FF FF FF FF FF FF FF     
   8375 FFFCB98C FF FF FF FF FF FF FF FF     
   8376 FFFCB994 FF FF FF FF FF FF FF FF     
   8377 FFFCB99C FF FF FF FF FF FF FF FF     
   8378 FFFCB9A4 FF FF FF FF FF FF FF FF     
   8379 FFFCB9AC FF FF FF FF FF FF FF FF     
   8380 FFFCB9B4 FF FF FF FF FF FF FF FF     
   8381 FFFCB9BC FF FF FF FF FF FF FF FF     
   8382 FFFCB9C4 FF FF FF FF FF FF FF FF     
   8383 FFFCB9CC FF FF FF FF FF FF FF FF     
   8384 FFFCB9D4 FF FF FF FF FF FF FF FF     
   8385 FFFCB9DC FF FF FF FF FF FF FF FF     
   8386 FFFCB9E4 FF FF FF FF FF FF FF FF     
   8387 FFFCB9EC FF FF FF FF FF FF FF FF     
   8388 FFFCB9F4 FF FF FF FF FF FF FF FF     
   8389 FFFCB9FC FF FF FF FF FF FF FF FF     
   8390 FFFCBA04 FF FF FF FF FF FF FF FF     
   8391 FFFCBA0C FF FF FF FF FF FF FF FF     
   8392 FFFCBA14 FF FF FF FF FF FF FF FF     
   8393 FFFCBA1C FF FF FF FF FF FF FF FF     
   8394 FFFCBA24 FF FF FF FF FF FF FF FF     
   8395 FFFCBA2C FF FF FF FF FF FF FF FF     
   8396 FFFCBA34 FF FF FF FF FF FF FF FF     
   8397 FFFCBA3C FF FF FF FF FF FF FF FF     
   8398 FFFCBA44 FF FF FF FF FF FF FF FF     
   8399 FFFCBA4C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 83
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8400 FFFCBA54 FF FF FF FF FF FF FF FF     
   8401 FFFCBA5C FF FF FF FF FF FF FF FF     
   8402 FFFCBA64 FF FF FF FF FF FF FF FF     
   8403 FFFCBA6C FF FF FF FF FF FF FF FF     
   8404 FFFCBA74 FF FF FF FF FF FF FF FF     
   8405 FFFCBA7C FF FF FF FF FF FF FF FF     
   8406 FFFCBA84 FF FF FF FF FF FF FF FF     
   8407 FFFCBA8C FF FF FF FF FF FF FF FF     
   8408 FFFCBA94 FF FF FF FF FF FF FF FF     
   8409 FFFCBA9C FF FF FF FF FF FF FF FF     
   8410 FFFCBAA4 FF FF FF FF FF FF FF FF     
   8411 FFFCBAAC FF FF FF FF FF FF FF FF     
   8412 FFFCBAB4 FF FF FF FF FF FF FF FF     
   8413 FFFCBABC FF FF FF FF FF FF FF FF     
   8414 FFFCBAC4 FF FF FF FF FF FF FF FF     
   8415 FFFCBACC FF FF FF FF FF FF FF FF     
   8416 FFFCBAD4 FF FF FF FF FF FF FF FF     
   8417 FFFCBADC FF FF FF FF FF FF FF FF     
   8418 FFFCBAE4 FF FF FF FF FF FF FF FF     
   8419 FFFCBAEC FF FF FF FF FF FF FF FF     
   8420 FFFCBAF4 FF FF FF FF FF FF FF FF     
   8421 FFFCBAFC FF FF FF FF FF FF FF FF     
   8422 FFFCBB04 FF FF FF FF FF FF FF FF     
   8423 FFFCBB0C FF FF FF FF FF FF FF FF     
   8424 FFFCBB14 FF FF FF FF FF FF FF FF     
   8425 FFFCBB1C FF FF FF FF FF FF FF FF     
   8426 FFFCBB24 FF FF FF FF FF FF FF FF     
   8427 FFFCBB2C FF FF FF FF FF FF FF FF     
   8428 FFFCBB34 FF FF FF FF FF FF FF FF     
   8429 FFFCBB3C FF FF FF FF FF FF FF FF     
   8430 FFFCBB44 FF FF FF FF FF FF FF FF     
   8431 FFFCBB4C FF FF FF FF FF FF FF FF     
   8432 FFFCBB54 FF FF FF FF FF FF FF FF     
   8433 FFFCBB5C FF FF FF FF FF FF FF FF     
   8434 FFFCBB64 FF FF FF FF FF FF FF FF     
   8435 FFFCBB6C FF FF FF FF FF FF FF FF     
   8436 FFFCBB74 FF FF FF FF FF FF FF FF     
   8437 FFFCBB7C FF FF FF FF FF FF FF FF     
   8438 FFFCBB84 FF FF FF FF FF FF FF FF     
   8439 FFFCBB8C FF FF FF FF FF FF FF FF     
   8440 FFFCBB94 FF FF FF FF FF FF FF FF     
   8441 FFFCBB9C FF FF FF FF FF FF FF FF     
   8442 FFFCBBA4 FF FF FF FF FF FF FF FF     
   8443 FFFCBBAC FF FF FF FF FF FF FF FF     
   8444 FFFCBBB4 FF FF FF FF FF FF FF FF     
   8445 FFFCBBBC FF FF FF FF FF FF FF FF     
   8446 FFFCBBC4 FF FF FF FF FF FF FF FF     
   8447 FFFCBBCC FF FF FF FF FF FF FF FF     
   8448 FFFCBBD4 FF FF FF FF FF FF FF FF     
   8449 FFFCBBDC FF FF FF FF FF FF FF FF     
   8450 FFFCBBE4 FF FF FF FF FF FF FF FF     
   8451 FFFCBBEC FF FF FF FF FF FF FF FF     
   8452 FFFCBBF4 FF FF FF FF FF FF FF FF     
   8453 FFFCBBFC FF FF FF FF FF FF FF FF     
   8454 FFFCBC04 FF FF FF FF FF FF FF FF     
   8455 FFFCBC0C FF FF FF FF FF FF FF FF     
   8456 FFFCBC14 FF FF FF FF FF FF FF FF     
   8457 FFFCBC1C FF FF FF FF FF FF FF FF     
   8458 FFFCBC24 FF FF FF FF FF FF FF FF     
   8459 FFFCBC2C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 84
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8460 FFFCBC34 FF FF FF FF FF FF FF FF     
   8461 FFFCBC3C FF FF FF FF FF FF FF FF     
   8462 FFFCBC44 FF FF FF FF FF FF FF FF     
   8463 FFFCBC4C FF FF FF FF FF FF FF FF     
   8464 FFFCBC54 FF FF FF FF FF FF FF FF     
   8465 FFFCBC5C FF FF FF FF FF FF FF FF     
   8466 FFFCBC64 FF FF FF FF FF FF FF FF     
   8467 FFFCBC6C FF FF FF FF FF FF FF FF     
   8468 FFFCBC74 FF FF FF FF FF FF FF FF     
   8469 FFFCBC7C FF FF FF FF FF FF FF FF     
   8470 FFFCBC84 FF FF FF FF FF FF FF FF     
   8471 FFFCBC8C FF FF FF FF FF FF FF FF     
   8472 FFFCBC94 FF FF FF FF FF FF FF FF     
   8473 FFFCBC9C FF FF FF FF FF FF FF FF     
   8474 FFFCBCA4 FF FF FF FF FF FF FF FF     
   8475 FFFCBCAC FF FF FF FF FF FF FF FF     
   8476 FFFCBCB4 FF FF FF FF FF FF FF FF     
   8477 FFFCBCBC FF FF FF FF FF FF FF FF     
   8478 FFFCBCC4 FF FF FF FF FF FF FF FF     
   8479 FFFCBCCC FF FF FF FF FF FF FF FF     
   8480 FFFCBCD4 FF FF FF FF FF FF FF FF     
   8481 FFFCBCDC FF FF FF FF FF FF FF FF     
   8482 FFFCBCE4 FF FF FF FF FF FF FF FF     
   8483 FFFCBCEC FF FF FF FF FF FF FF FF     
   8484 FFFCBCF4 FF FF FF FF FF FF FF FF     
   8485 FFFCBCFC FF FF FF FF FF FF FF FF     
   8486 FFFCBD04 FF FF FF FF FF FF FF FF     
   8487 FFFCBD0C FF FF FF FF FF FF FF FF     
   8488 FFFCBD14 FF FF FF FF FF FF FF FF     
   8489 FFFCBD1C FF FF FF FF FF FF FF FF     
   8490 FFFCBD24 FF FF FF FF FF FF FF FF     
   8491 FFFCBD2C FF FF FF FF FF FF FF FF     
   8492 FFFCBD34 FF FF FF FF FF FF FF FF     
   8493 FFFCBD3C FF FF FF FF FF FF FF FF     
   8494 FFFCBD44 FF FF FF FF FF FF FF FF     
   8495 FFFCBD4C FF FF FF FF FF FF FF FF     
   8496 FFFCBD54 FF FF FF FF FF FF FF FF     
   8497 FFFCBD5C FF FF FF FF FF FF FF FF     
   8498 FFFCBD64 FF FF FF FF FF FF FF FF     
   8499 FFFCBD6C FF FF FF FF FF FF FF FF     
   8500 FFFCBD74 FF FF FF FF FF FF FF FF     
   8501 FFFCBD7C FF FF FF FF FF FF FF FF     
   8502 FFFCBD84 FF FF FF FF FF FF FF FF     
   8503 FFFCBD8C FF FF FF FF FF FF FF FF     
   8504 FFFCBD94 FF FF FF FF FF FF FF FF     
   8505 FFFCBD9C FF FF FF FF FF FF FF FF     
   8506 FFFCBDA4 FF FF FF FF FF FF FF FF     
   8507 FFFCBDAC FF FF FF FF FF FF FF FF     
   8508 FFFCBDB4 FF FF FF FF FF FF FF FF     
   8509 FFFCBDBC FF FF FF FF FF FF FF FF     
   8510 FFFCBDC4 FF FF FF FF FF FF FF FF     
   8511 FFFCBDCC FF FF FF FF FF FF FF FF     
   8512 FFFCBDD4 FF FF FF FF FF FF FF FF     
   8513 FFFCBDDC FF FF FF FF FF FF FF FF     
   8514 FFFCBDE4 FF FF FF FF FF FF FF FF     
   8515 FFFCBDEC FF FF FF FF FF FF FF FF     
   8516 FFFCBDF4 FF FF FF FF FF FF FF FF     
   8517 FFFCBDFC FF FF FF FF FF FF FF FF     
   8518 FFFCBE04 FF FF FF FF FF FF FF FF     
   8519 FFFCBE0C FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 85
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8520 FFFCBE14 FF FF FF FF FF FF FF FF     
   8521 FFFCBE1C FF FF FF FF FF FF FF FF     
   8522 FFFCBE24 FF FF FF FF FF FF FF FF     
   8523 FFFCBE2C FF FF FF FF FF FF FF FF     
   8524 FFFCBE34 FF FF FF FF FF FF FF FF     
   8525 FFFCBE3C FF FF FF FF FF FF FF FF     
   8526 FFFCBE44 FF FF FF FF FF FF FF FF     
   8527 FFFCBE4C FF FF FF FF FF FF FF FF     
   8528 FFFCBE54 FF FF FF FF FF FF FF FF     
   8529 FFFCBE5C FF FF FF FF FF FF FF FF     
   8530 FFFCBE64 FF FF FF FF FF FF FF FF     
   8531 FFFCBE6C FF FF FF FF FF FF FF FF     
   8532 FFFCBE74 FF FF FF FF FF FF FF FF     
   8533 FFFCBE7C FF FF FF FF FF FF FF FF     
   8534 FFFCBE84 FF FF FF FF FF FF FF FF     
   8535 FFFCBE8C FF FF FF FF FF FF FF FF     
   8536 FFFCBE94 FF FF FF FF FF FF FF FF     
   8537 FFFCBE9C FF FF FF FF FF FF FF FF     
   8538 FFFCBEA4 FF FF FF FF FF FF FF FF     
   8539 FFFCBEAC FF FF FF FF FF FF FF FF     
   8540 FFFCBEB4 FF FF FF FF FF FF FF FF     
   8541 FFFCBEBC FF FF FF FF FF FF FF FF     
   8542 FFFCBEC4 FF FF FF FF FF FF FF FF     
   8543 FFFCBECC FF FF FF FF FF FF FF FF     
   8544 FFFCBED4 FF FF FF FF FF FF FF FF     
   8545 FFFCBEDC FF FF FF FF FF FF FF FF     
   8546 FFFCBEE4 FF FF FF FF FF FF FF FF     
   8547 FFFCBEEC FF FF FF FF FF FF FF FF     
   8548 FFFCBEF4 FF FF FF FF FF FF FF FF     
   8549 FFFCBEFC FF FF FF FF FF FF FF FF     
   8550 FFFCBF04 FF FF FF FF FF FF FF FF     
   8551 FFFCBF0C FF FF FF FF FF FF FF FF     
   8552 FFFCBF14 FF FF FF FF FF FF FF FF     
   8553 FFFCBF1C FF FF FF FF FF FF FF FF     
   8554 FFFCBF24 FF FF FF FF FF FF FF FF     
   8555 FFFCBF2C FF FF FF FF FF FF FF FF     
   8556 FFFCBF34 FF FF FF FF FF FF FF FF     
   8557 FFFCBF3C FF FF FF FF FF FF FF FF     
   8558 FFFCBF44 FF FF FF FF FF FF FF FF     
   8559 FFFCBF4C FF FF FF FF FF FF FF FF     
   8560 FFFCBF54 FF FF FF FF FF FF FF FF     
   8561 FFFCBF5C FF FF FF FF FF FF FF FF     
   8562 FFFCBF64 FF FF FF FF FF FF FF FF     
   8563 FFFCBF6C FF FF FF FF FF FF FF FF     
   8564 FFFCBF74 FF FF FF FF FF FF FF FF     
   8565 FFFCBF7C FF FF FF FF FF FF FF FF     
   8566 FFFCBF84 FF FF FF FF FF FF FF FF     
   8567 FFFCBF8C FF FF FF FF FF FF FF FF     
   8568 FFFCBF94 FF FF FF FF FF FF FF FF     
   8569 FFFCBF9C FF FF FF FF FF FF FF FF     
   8570 FFFCBFA4 FF FF FF FF FF FF FF FF     
   8571 FFFCBFAC FF FF FF FF FF FF FF FF     
   8572 FFFCBFB4 FF FF FF FF FF FF FF FF     
   8573 FFFCBFBC FF FF FF FF FF FF FF FF     
   8574 FFFCBFC4 FF FF FF FF FF FF FF FF     
   8575 FFFCBFCC FF FF FF FF FF FF FF FF     
   8576 FFFCBFD4 FF FF FF FF FF FF FF FF     
   8577 FFFCBFDC FF FF FF FF FF FF FF FF     
   8578 FFFCBFE4 FF FF FF FF FF FF FF FF     
   8579 FFFCBFEC FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 86
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8580 FFFCBFF4 FF FF FF FF FF FF FF FF     
   8581 FFFCBFFC FF FF FF FF                 
                                             ;*
                                             ;* Standard jump table. You can change these addresses if you are
                                             ;* customizing this interpreter for a different environment.
                                             ;*
   8586 FFFCC000 6000 0022                   START	BRA.L	CSTART		;Cold Start entry point
   8587 FFFCC004 6000 005A                   GOWARM	BRA.L	WSTART		;Warm Start entry point
   8588 FFFCC008 6000 0B68                   GOOUT	BRA.L	OUTC		;Jump to character-out routine
   8589 FFFCC00C 6000 0B74                   GOIN	BRA.L	INC		;Jump to character-in routine
   8590 FFFCC010 6000 0B86                   GOAUXO	BRA.L	AUXOUT		;Jump to auxiliary-out routine
   8591 FFFCC014 6000 0B94                   GOAUXI	BRA.L	AUXIN		;Jump to auxiliary-in routine
   8592 FFFCC018 6000 0BA6                   GOBYE	BRA.L	BYEBYE		;Jump to monitor, DOS, etc.
                                             ;*
                                             ;* Modifiable system constants:
                                             ;*
   8596 FFFCC01C 00200000                    TXTBGN	DC.L	0x200000	;beginning of program memory
   8597 FFFCC020 1F000000                    ENDMEM	DC.L	0x1F000000	;	end of available memory
                                             ;*
                                             ;* The main interpreter starts here:
                                             ;*
   8601 FFFCC024                             CSTART:
   8602 FFFCC024 41F9 FFFC C000              	LEA		START,A0
   8603 FFFCC02A 21C8 0600                   	MOVE.L	A0,RANPNT
   8604 FFFCC02E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;initialize stack pointer
   8605 FFFCC034 4DF9 FFFC CBC6              	LEA		INITMSG,A6	;tell who we are
   8606 FFFCC03A 6100 0B2A                   	BSR.L	PRMESG
   8607 FFFCC03E 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;init. end-of-program pointer
   8608 FFFCC046 2039 FFFC C020              	MOVE.L	ENDMEM,D0	;get address of end of memory
   8609 FFFCC04C 0480 0000 0800              	SUB.L	#2048,D0	;reserve 2K for the stack
   8610 FFFCC052 21C0 062C                   	MOVE.L	D0,STKLMT
   8611 FFFCC056 0480 0000 006C              	SUB.L	#108,D0 	;reserve variable area (27 long words)
   8612 FFFCC05C 21C0 0628                   	MOVE.L	D0,VARBGN
   8613 FFFCC060                             WSTART:
   8614 FFFCC060 4280                        	CLR.L	D0		;initialize internal variables
   8615 FFFCC062 21C0 0610                   	MOVE.L	D0,LOPVAR
   8616 FFFCC066 21C0 0608                   	MOVE.L	D0,STKGOS
   8617 FFFCC06A 21C0 0604                   	MOVE.L	D0,CURRNT	;current line number pointer = 0
   8618 FFFCC06E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;init S.P. again, just in case
   8619 FFFCC074 4DF9 FFFC CBD1              	LEA	OKMSG,A6	;display "OK"
   8620 FFFCC07A 6100 0AEA                   	BSR.L	PRMESG
   8621 FFFCC07E                             ST3:
   8622 FFFCC07E 103C 003E                   	MOVE.B	#'>',D0  ;       Prompt with a '>' and
   8623 FFFCC082 6100 0810                   	BSR.L	GETLN	;	read a line.
   8624 FFFCC086 6100 0A7A                   	BSR.L	TOUPBUF ;	convert to upper case
   8625 FFFCC08A 2848                        	MOVE.L	A0,A4	;	save pointer to end of line
   8626 FFFCC08C 41F8 0630                   	LEA	BUFFER,A0	;point to the beginning of line
   8627 FFFCC090 6100 0A2C                   	BSR.L	TSTNUM	;	is there a number there?
   8628 FFFCC094 6100 0A60                   	BSR.L	IGNBLK	;	skip trailing blanks
   8629 FFFCC098 4A81                        	TST	D1		;does line no. exist? (or nonzero?)
   8630 FFFCC09A 6700 011A                   	BEQ.L	DIRECT	;	if not, it's a direct statement
   8631 FFFCC09E B2BC 0000 FFFF              	CMP.L	#$FFFF,D1	;see if line no. is <= 16 bits
   8632 FFFCC0A4 6400 07E4                   	BCC.L	QHOW		;if not, we've overflowed
   8633 FFFCC0A8 1101                        	MOVE.B	D1,-(A0)	;store the binary line no.
   8634 FFFCC0AA E099                        	ROR	#8,D1		;(Kludge to store a word on a
   8635 FFFCC0AC 1101                        	MOVE.B	D1,-(A0)	;possible byte boundary)
   8636 FFFCC0AE E199                        	ROL	#8,D1
   8637 FFFCC0B0 6100 0882                   	BSR.L	FNDLN	;	find this line in save area
   8638 FFFCC0B4 2A49                        	MOVE.L	A1,A5	;	save possible line pointer
   8639 FFFCC0B6 6612                        	BNE	ST4				;	if not found, insert
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 87
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8640 FFFCC0B8 6100 08A2                   	BSR.L	FNDNXT		;find the next line (into A1)
   8641 FFFCC0BC 244D                        	MOVE.L	A5,A2		;pointer to line to be deleted
   8642 FFFCC0BE 2678 0624                   	MOVE.L	TXTUNF,A3	;points to top of save area
   8643 FFFCC0C2 6100 08A2                   	BSR.L	MVUP		;move up to delete
   8644 FFFCC0C6 21CA 0624                   	MOVE.L	A2,TXTUNF	;update the end pointer
   8645 FFFCC0CA                             ST4:
   8646 FFFCC0CA 200C                        	MOVE.L	A4,D0		;calculate the length of new line
   8647 FFFCC0CC 9088                        	SUB.L	A0,D0
   8648 FFFCC0CE B0BC 0000 0003              	CMP.L	#3,D0		;is it just a line no. & CR?
   8649 FFFCC0D4 67A8                        	BEQ	ST3				;if so, it was just a delete
   8650 FFFCC0D6 2678 0624                   	MOVE.L	TXTUNF,A3	;compute new end
   8651 FFFCC0DA 2C4B                        	MOVE.L	A3,A6
   8652 FFFCC0DC D7C0                        	ADD.L	D0,A3
   8653 FFFCC0DE 2038 0628                   	MOVE.L	VARBGN,D0	;see if there's enough room
   8654 FFFCC0E2 B08B                        	CMP.L	A3,D0
   8655 FFFCC0E4 6300 079A                   	BLS.L	QSORRY		;if not, say so
   8656 FFFCC0E8 21CB 0624                   	MOVE.L	A3,TXTUNF	;if so, store new end position
   8657 FFFCC0EC 224E                        	MOVE.L	A6,A1		;points to old unfilled area
   8658 FFFCC0EE 244D                        	MOVE.L	A5,A2		;points to beginning of move area
   8659 FFFCC0F0 6100 087E                   	BSR.L	MVDOWN		;move things out of the way
   8660 FFFCC0F4 2248                        	MOVE.L	A0,A1		;set up to do the insertion
   8661 FFFCC0F6 244D                        	MOVE.L	A5,A2
   8662 FFFCC0F8 264C                        	MOVE.L	A4,A3
   8663 FFFCC0FA 6100 086A                   	BSR.L	MVUP		;do it
   8664 FFFCC0FE 6000 FF7E                   	BRA	ST3		;go back and get another line
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** Tables *** DIRECT *** EXEC ***
                                             ;*
                                             ;* This section of the code tests a string against a table. When
                                             ;* a match is found, control is transferred to the section of
                                             ;* code according to the table.
                                             ;*
                                             ;* At 'EXEC', A0 should point to the string, A1 should point to
                                             ;* the character table, and A2 should point to the execution
                                             ;* table. At 'DIRECT', A0 should point to the string, A1 and
                                             ;* A2 will be set up to point to TAB1 and TAB1.1, which are
                                             ;* the tables of all direct and statement commands.
                                             ;*
                                             ;* A '.' in the string will terminate the test and the partial
                                             ;* match will be considered as a match, e.g. 'P.', 'PR.','PRI.',
                                             ;* 'PRIN.', or 'PRINT' will all match 'PRINT'.
                                             ;*
                                             ;* There are two tables: the character table and the execution
                                             ;* table. The character table consists of any number of text items.
                                             ;* Each item is a string of characters with the last character's
                                             ;* high bit set to one. The execution table holds a 16-bit
                                             ;* execution addresses that correspond to each entry in the
                                             ;* character table.
                                             ;*
                                             ;* The end of the character table is a 0 byte which corresponds
                                             ;* to the default routine in the execution table, which is
                                             ;* executed if none of the other table items are matched.
                                             ;*
                                             ;* Character-matching tables:
   8697 FFFCC102                             TAB1:
   8698 FFFCC102 4C 49 53 D4                 	DC.B	'LIS',('T'+0x80) ;        Direct commands
   8699 FFFCC106 4C 4F 41 C4                 	DC.B	'LOA',('D'+0x80)
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 88
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8700 FFFCC10A 4E 45 D7                    	DC.B	'NE',('W'+0x80)
   8701 FFFCC10D 52 55 CE                    	DC.B	'RU',('N'+0x80)
   8702 FFFCC110 53 41 56 C5                 	DC.B	'SAV',('E'+0x80)
   8703 FFFCC114                             TAB2:
   8704 FFFCC114 4E 45 58 D4                 	DC.B	'NEX',('T'+0x80)  ;       Direct / statement
   8705 FFFCC118 4C 45 D4                    	DC.B	'LE',('T'+0x80)
   8706 FFFCC11B 49 C6                       	DC.B	'I',('F'+0x80)
   8707 FFFCC11D 47 4F 54 CF                 	DC.B	'GOT',('O'+0x80)
   8708 FFFCC121 47 4F 53 55 C2              	DC.B	'GOSU',('B'+0x80)
   8709 FFFCC126 52 45 54 55 52 CE           	DC.B	'RETUR',('N'+0x80)
   8710 FFFCC12C 52 45 CD                    	DC.B	'RE',('M'+0x80)
   8711 FFFCC12F 46 4F D2                    	DC.B	'FO',('R'+0x80)
   8712 FFFCC132 49 4E 50 55 D4              	DC.B	'INPU',('T'+0x80)
   8713 FFFCC137 50 52 49 4E D4              	DC.B	'PRIN',('T'+0x80)
   8714 FFFCC13C 50 4F 4B C5                 	DC.B	'POK',('E'+0x80)
   8715 FFFCC140 53 54 4F D0                 	DC.B	'STO',('P'+0x80)
   8716 FFFCC144 42 59 C5                    	DC.B	'BY',('E'+0x80)
   8717 FFFCC147 43 41 4C CC                 	DC.B	'CAL',('L'+0x80)
   8718 FFFCC14B 00                          	DC.B	0
   8719 FFFCC14C                             TAB4:
   8720 FFFCC14C 50 45 45 CB                 	DC.B	'PEE',('K'+0x80)   ;      Functions
   8721 FFFCC150 52 4E C4                    	DC.B	'RN',('D'+0x80)
   8722 FFFCC153 41 42 D3                    	DC.B	'AB',('S'+0x80)
   8723 FFFCC156 53 49 5A C5                 	DC.B	'SIZ',('E'+0x80)
   8724 FFFCC15A 00                          	DC.B	0
   8725 FFFCC15B                             TAB5:
   8726 FFFCC15B 54 CF                       	DC.B	'T',('O'+0x80)      ;     "TO" in "FOR"
   8727 FFFCC15D 00                          	DC.B	0
   8728 FFFCC15E                             TAB6:
   8729 FFFCC15E 53 54 45 D0                 	DC.B	'STE',('P'+0x80)     ;    "STEP" in "FOR"
   8730 FFFCC162 00                          	DC.B	0
   8731 FFFCC163                             TAB8:
   8732 FFFCC163 3E BD                       	DC.B	'>',('='+0x80)        ;   Relational operators
   8733 FFFCC165 3C BE                       	DC.B	'<',('>'+0x80)
   8734 FFFCC167 BE                          	DC.B	('>'+0x80)
   8735 FFFCC168 BD                          	DC.B	('='+0x80)
   8736 FFFCC169 3C BD                       	DC.B	'<',('='+0x80)
   8737 FFFCC16B BC                          	DC.B	('<'+0x80)
   8738 FFFCC16C 00                          	DC.B	0
   8739 FFFCC16D 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             ;* Execution address tables:
   8742 FFFCC16E                             TAB1_1:
   8743 FFFCC16E C266                        	DC.W	LIST_			;Direct commands
   8744 FFFCC170 C4A8                        	DC.W	LOAD
   8745 FFFCC172 C200                        	DC.W	NEW
   8746 FFFCC174 C214                        	DC.W	RUN
   8747 FFFCC176 C50C                        	DC.W	SAVE
   8748 FFFCC178                             TAB2_1:
   8749 FFFCC178 C3B4                        	DC.W	NEXT			;Direct / statement
   8750 FFFCC17A C498                        	DC.W	LET
   8751 FFFCC17C C404                        	DC.W	IF
   8752 FFFCC17E C252                        	DC.W	GOTO
   8753 FFFCC180 C2FC                        	DC.W	GOSUB
   8754 FFFCC182 C324                        	DC.W	RETURN
   8755 FFFCC184 C402                        	DC.W	REM
   8756 FFFCC186 C342                        	DC.W	FOR
   8757 FFFCC188 C42A                        	DC.W	INPUT
   8758 FFFCC18A C292                        	DC.W	PRINT
   8759 FFFCC18C C590                        	DC.W	POKE
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 89
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8760 FFFCC18E C20C                        	DC.W	STOP_
   8761 FFFCC190 C018                        	DC.W	GOBYE
   8762 FFFCC192 C5AC                        	DC.W	CALL
   8763 FFFCC194 C492                        	DC.W	DEFLT
   8764 FFFCC196                             TAB4_1:
   8765 FFFCC196 C7A2                        	DC.W	PEEK			;Functions
   8766 FFFCC198 C7AE                        	DC.W	RND
   8767 FFFCC19A C7E4                        	DC.W	ABS
   8768 FFFCC19C C7F4                        	DC.W	SIZE_
   8769 FFFCC19E C6A6                        	DC.W	XP40
   8770 FFFCC1A0                             TAB5_1:
   8771 FFFCC1A0 C35E                        	DC.W	FR1		;	"TO" in "FOR"
   8772 FFFCC1A2 C83E                        	DC.W	QWHAT
   8773 FFFCC1A4                             TAB6_1:
   8774 FFFCC1A4 C376                        	DC.W	FR2		;	"STEP" in "FOR"
   8775 FFFCC1A6 C37C                        	DC.W	FR3
   8776 FFFCC1A8                             TAB8_1:
   8777 FFFCC1A8 C5D8                        	DC.W	XP11;	>=		Relational operators
   8778 FFFCC1AA C5E0                        	DC.W	XP12	;<>
   8779 FFFCC1AC C5E8                        	DC.W	XP13	;>
   8780 FFFCC1AE C5F8                        	DC.W	XP15	;=
   8781 FFFCC1B0 C5F0                        	DC.W	XP14	;<=
   8782 FFFCC1B2 C602                        	DC.W	XP16	;<
   8783 FFFCC1B4 C614                        	DC.W	XP17
                                             ;*
   8785 FFFCC1B6                             DIRECT:
   8786 FFFCC1B6 43F9 FFFC C102              	LEA	TAB1,A1
   8787 FFFCC1BC 45F9 FFFC C16E              	LEA	TAB1_1,A2
   8788 FFFCC1C2                             EXEC:
   8789 FFFCC1C2 6100 0932                   	BSR.L	IGNBLK;		ignore leading blanks
   8790 FFFCC1C6 2648                        	MOVE.L	A0,A3		;save the pointer
   8791 FFFCC1C8 4202                        	CLR.B	D2		;clear match flag
   8792 FFFCC1CA                             EXLP:
   8793 FFFCC1CA 1018                        	MOVE.B	(A0)+,D0;	get the program character
   8794 FFFCC1CC 1211                        	MOVE.B	(A1),D1 	;get the table character
   8795 FFFCC1CE 6604                        	BNE	EXNGO		;If end of table,
   8796 FFFCC1D0 204B                        	MOVE.L	A3,A0	;;	restore the text pointer and...
   8797 FFFCC1D2 6024                        	BRA	EXGO		;execute the default.
   8798 FFFCC1D4                             EXNGO:
   8799 FFFCC1D4 1600                        	MOVE.B	D0,D3	;	Else check for period...
   8800 FFFCC1D6 C602                        	AND.B	D2,D3		;and a match.
   8801 FFFCC1D8 B63C 002E                   	CMP.B	#'.',D3
   8802 FFFCC1DC 671A                        	BEQ	EXGO		;if so, execute
   8803 FFFCC1DE 0201 007F                   	AND.B	#0x7F,D1 ;	ignore the table's high bit
   8804 FFFCC1E2 B200                        	CMP.B	D0,D1	;	is there a match?
   8805 FFFCC1E4 670C                        	BEQ	EXMAT
   8806 FFFCC1E6 548A                        	ADDQ.L	#2,A2	;	if not, try the next entry
   8807 FFFCC1E8 204B                        	MOVE.L	A3,A0	;	reset the program pointer
   8808 FFFCC1EA 4202                        	CLR.B	D2		;sorry, no match
   8809 FFFCC1EC                             EX1:
   8810 FFFCC1EC 4A19                        	TST.B	(A1)+	;	get to the end of the entry
   8811 FFFCC1EE 6AFC                        	BPL	EX1
   8812 FFFCC1F0 60D8                        	BRA	EXLP		;back for more matching
   8813 FFFCC1F2                             EXMAT:
   8814 FFFCC1F2 74FF                        	MOVEQ	#-1,D2;		we've got a match so far
   8815 FFFCC1F4 4A19                        	TST.B	(A1)+	;	end of table entry?
   8816 FFFCC1F6 6AD2                        	BPL	EXLP		;if not, go back for more
   8817 FFFCC1F8                             EXGO:
   8818 FFFCC1F8 47F8 0000                   	LEA	0,A3	;	execute the appropriate routine
   8819 FFFCC1FC 2652                        	MOVE	(A2),A3
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 90
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8820 FFFCC1FE 4ED3                        	JMP	(A3)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* What follows is the code to execute direct and statement
                                             ;* commands. Control is transferred to these points via the command
                                             ;* table lookup code of 'DIRECT' and 'EXEC' in the last section.
                                             ;* After the command is executed, control is transferred to other
                                             ;* sections as follows:
                                             ;*
                                             ;* For 'LIST', 'NEW', and 'STOP': go back to the warm start point.
                                             ;* For 'RUN': go execute the first stored line if any; else go
                                             ;* back to the warm start point.
                                             ;* For 'GOTO' and 'GOSUB': go execute the target line.
                                             ;* For 'RETURN' and 'NEXT'; go back to saved return line.
                                             ;* For all others: if 'CURRNT' is 0, go to warm start; else go;
                                             ;* execute next command. (This is done in 'FINISH'.)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** NEW *** STOP *** RUN (& friends) *** GOTO ***
                                             ;*
                                             ;* 'NEW<CR>' sets TXTUNF to point to TXTBGN
                                             ;*
                                             ;* 'STOP<CR>' goes back to WSTART
                                             ;*
                                             ;* 'RUN<CR>' finds the first stored line, stores its address
                                             ;* in CURRNT, and starts executing it. Note that only those
                                             ;* commands in TAB2 are legal for a stored program.
                                             ;*
                                             ;* There are 3 more entries in 'RUN':
                                             ;* 'RUNNXL' finds next line, stores it's address and executes it.
                                             ;* 'RUNTSL' stores the address of this line and executes it.
                                             ;* 'RUNSML' continues the execution on same line.
                                             ;*
                                             ;* 'GOTO expr<CR>' evaluates the expression, finds the target
                                             ;* line, and jumps to 'RUNTSL' to do it.
                                             ;*
   8858 FFFCC200                             NEW:
   8859 FFFCC200 6100 0630                   	BSR.L	ENDCHK
   8860 FFFCC204 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;set the end pointer
                                             
   8862 FFFCC20C                             STOP_:
   8863 FFFCC20C 6100 0624                   	BSR.L	ENDCHK
   8864 FFFCC210 6000 FE4E                   	BRA	WSTART
                                             
   8866 FFFCC214                             RUN:
   8867 FFFCC214 6100 061C                   	BSR.L	ENDCHK
   8868 FFFCC218 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to beginning
   8869 FFFCC21E 21C8 0604                   	MOVE.L	A0,CURRNT
                                             
   8871 FFFCC222                             RUNNXL:
   8872 FFFCC222 4AB8 0604                   	TST.L	CURRNT	;	executing a program?
   8873 FFFCC226 6700 FE38                   	BEQ.L	WSTART		;if not, we've finished a direct stat.
   8874 FFFCC22A 4281                        	CLR.L	D1		;else find the next line number
   8875 FFFCC22C 2248                        	MOVE.L	A0,A1
   8876 FFFCC22E 6100 0714                   	BSR.L	FNDLNP
   8877 FFFCC232 6500 FE2C                   	BCS	WSTART		;if we've fallen off the end, stop
                                             
   8879 FFFCC236                             RUNTSL:
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 91
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8880 FFFCC236 21C9 0604                   	MOVE.L	A1,CURRNT	;set CURRNT to point to the line no.
   8881 FFFCC23A 2049                        	MOVE.L	A1,A0		;set the text pointer to
   8882 FFFCC23C 5488                        	ADDQ.L	#2,A0		;the start of the line text
                                             
   8884 FFFCC23E                             RUNSML:
   8885 FFFCC23E 6100 090E                   	BSR.L	CHKIO	;	see if a control-C was pressed
   8886 FFFCC242 43F9 FFFC C114              	LEA	TAB2,A1 	;find command in TAB2
   8887 FFFCC248 45F9 FFFC C178              	LEA	TAB2_1,A2
   8888 FFFCC24E 6000 FF72                   	BRA	EXEC		;and execute it
                                             
   8890 FFFCC252                             GOTO:
   8891 FFFCC252 6100 036E                   	BSR.L	EXPR	;	evaluate the following expression
   8892 FFFCC256 6100 05DA                   	BSR.L	ENDCHK		;must find end of line
   8893 FFFCC25A 2200                        	MOVE.L	D0,D1
   8894 FFFCC25C 6100 06D6                   	BSR.L	FNDLN		;find the target line
   8895 FFFCC260 6600 0628                   	BNE.L	QHOW		;no such line no.
   8896 FFFCC264 60D0                        	BRA	RUNTSL		;go do it
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LIST *** PRINT ***
                                             ;*
                                             ;* LIST has two forms:
                                             ;* 'LIST<CR>' lists all saved lines
                                             ;* 'LIST #<CR>' starts listing at the line #
                                             ;* Control-S pauses the listing, control-C stops it.
                                             ;*
                                             ;* PRINT command is 'PRINT ....:' or 'PRINT ....<CR>'
                                             ;* where '....' is a list of expressions, formats, back-arrows,
                                             ;* and strings.	These items a separated by commas.
                                             ;*
                                             ;* A format is a pound sign followed by a number.  It controls
                                             ;* the number of spaces the value of an expression is going to
                                             ;* be printed in.  It stays effective for the rest of the print
                                             ;* command unless changed by another format.  If no format is
                                             ;* specified, 11 positions will be used.
                                             ;*
                                             ;* A string is quoted in a pair of single- or double-quotes.
                                             ;*
                                             ;* An underline (back-arrow) means generate a <CR> without a <LF>
                                             ;*
                                             ;* A <CR LF> is generated after the entire list has been printed
                                             ;* or if the list is empty.  If the list ends with a semicolon,
                                             ;* however, no <CR LF> is generated.
                                             ;*
                                             
   8927 FFFCC266                             LIST_:
   8928 FFFCC266 6100 0856                   	BSR.L	TSTNUM	;	see if there's a line no.
   8929 FFFCC26A 6100 05C6                   	BSR.L	ENDCHK		;if not, we get a zero
   8930 FFFCC26E 6100 06C4                   	BSR.L	FNDLN		;find this or next line
   8931 FFFCC272                             LS1:
   8932 FFFCC272 6500 FDEC                   	BCS	WSTART		;warm start if we passed the end
   8933 FFFCC276 6100 0810                   	BSR.L	PRTLN	;	print the line
   8934 FFFCC27A 6100 08D2                   	BSR.L	CHKIO	;	check for listing halt request
   8935 FFFCC27E 670C                        	BEQ	LS3
   8936 FFFCC280 B03C 0013                   	CMP.B	#CTRLS,D0	;pause the listing?
   8937 FFFCC284 6606                        	BNE	LS3
   8938 FFFCC286                             LS2:
   8939 FFFCC286 6100 08C6                   	BSR.L	CHKIO		;if so, wait for another keypress
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 92
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8940 FFFCC28A 67FA                        	BEQ	LS2
   8941 FFFCC28C                             LS3:
   8942 FFFCC28C 6100 06B6                   	BSR.L	FNDLNP		;find the next line
   8943 FFFCC290 60E0                        	BRA	LS1
                                             
   8945 FFFCC292                             PRINT:
   8946 FFFCC292 780B                        	MOVE	#11,D4	;	D4 = number of print spaces
   8947 FFFCC294 6100 080E                   	BSR.L	TSTC		;if null list and ":"
   8948 FFFCC298 3A 07                       	DC.B	':',PR2-$
   8949 FFFCC29A 6100 08C4                   	BSR.L	CRLF		;give CR-LF and continue
   8950 FFFCC29E 609E                        	BRA	RUNSML		;execution on the same line
   8951 FFFCC2A0                             PR2:
   8952 FFFCC2A0 6100 0802                   	BSR.L	TSTC		;if null list and <CR>
   8953 FFFCC2A4 0D 09                       	DC.B	CR,PR0-$
   8954 FFFCC2A6 6100 08B8                   	BSR.L	CRLF		;also give CR-LF and
   8955 FFFCC2AA 6000 FF76                   	BRA	RUNNXL		;execute the next line
   8956 FFFCC2AE                             PR0:
   8957 FFFCC2AE 6100 07F4                   	BSR.L	TSTC		;else is it a format?
   8958 FFFCC2B2 23 09                       	DC.B	'#',PR1-$
   8959 FFFCC2B4 6100 030C                   	BSR.L	EXPR		;yes, evaluate expression
   8960 FFFCC2B8 2800                        	MOVE	D0,D4		;and save it as print width
   8961 FFFCC2BA 6016                        	BRA	PR3		;look for more to print
   8962 FFFCC2BC                             PR1:
   8963 FFFCC2BC 6100 07E6                   	BSR.L	TSTC		;is character expression? (MRL)
   8964 FFFCC2C0 24 0B                       	DC.B	'$',PR4-$
   8965 FFFCC2C2 6100 02FE                   	BSR.L	EXPR		;yep. Evaluate expression (MRL)
   8966 FFFCC2C6 6100 FD40                   	BSR	GOOUT		;print low byte (MRL)
   8967 FFFCC2CA 6006                        	BRA	PR3		;look for more. (MRL)
   8968 FFFCC2CC                             PR4:
   8969 FFFCC2CC 6100 0706                   	BSR.L	QTSTG	;	is it a string?
   8970 FFFCC2D0 6012                        	BRA.S	PR8		;if not, must be an expression
   8971 FFFCC2D2                             PR3:
   8972 FFFCC2D2 6100 07D0                   	BSR.L	TSTC	;	if ",", go find next
   8973 FFFCC2D6 2C 07                       	DC.B	',',PR6-$
   8974 FFFCC2D8 6100 053E                   	BSR.L	FIN		;in the list.
   8975 FFFCC2DC 60D0                        	BRA	PR0
   8976 FFFCC2DE                             PR6:
   8977 FFFCC2DE 6100 0880                   	BSR.L	CRLF	;	list ends here
   8978 FFFCC2E2 6010                        	BRA	FINISH
   8979 FFFCC2E4                             PR8:
   8980 FFFCC2E4 2F04                        	MOVE	D4,-(SP)	;save the width value
   8981 FFFCC2E6 6100 02DA                   	BSR.L	EXPR		;evaluate the expression
   8982 FFFCC2EA 281F                        	MOVE	(SP)+,D4	;restore the width
   8983 FFFCC2EC 2200                        	MOVE.L	D0,D1
   8984 FFFCC2EE 6100 0724                   	BSR.L	PRTNUM		;print its value
   8985 FFFCC2F2 60DE                        	BRA	PR3		;more to print?
                                             
   8987 FFFCC2F4                             FINISH:
   8988 FFFCC2F4 6100 0522                   	BSR.L	FIN	;	Check end of command
   8989 FFFCC2F8 6000 0544                   	BRA.L	QWHAT	;	print "What?" if wrong
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GOSUB *** & RETURN ***
                                             ;*
                                             ;* 'GOSUB expr:' or 'GOSUB expr<CR>' is like the 'GOTO' command,
                                             ;* except that the current text pointer, stack pointer, etc. are
                                             ;* saved so that execution can be continued after the subroutine
                                             ;* 'RETURN's.  In order that 'GOSUB' can be nested (and even
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 93
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* recursive), the save area must be stacked.  The stack pointer
                                             ;* is saved in 'STKGOS'.  The old 'STKGOS' is saved on the stack.
                                             ;* If we are in the main routine, 'STKGOS' is zero (this was done
                                             ;* in the initialization section of the interpreter), but we still
                                             ;* save it as a flag for no further 'RETURN's.
                                             ;*
                                             ;* 'RETURN<CR>' undoes everything that 'GOSUB' did, and thus
                                             ;* returns the execution to the command after the most recent
                                             ;* 'GOSUB'.  If 'STKGOS' is zero, it indicates that we never had
                                             ;* a 'GOSUB' and is thus an error.
                                             ;*
   9011 FFFCC2FC                             GOSUB:
   9012 FFFCC2FC 6100 0694                   	BSR.L	PUSHA	;	save the current 'FOR' parameters
   9013 FFFCC300 6100 02C0                   	BSR.L	EXPR		;get line number
   9014 FFFCC304 2F08                        	MOVE.L	A0,-(SP)	;save text pointer
   9015 FFFCC306 2200                        	MOVE.L	D0,D1
   9016 FFFCC308 6100 062A                   	BSR.L	FNDLN		;find the target line
   9017 FFFCC30C 6600 057E                   	BNE.L	AHOW		;if not there, say "How?"
   9018 FFFCC310 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;found it, save old 'CURRNT'...
   9019 FFFCC314 2F38 0608                   	MOVE.L	STKGOS,-(SP)	;and 'STKGOS'
   9020 FFFCC318 42B8 0610                   	CLR.L	LOPVAR		;load new values
   9021 FFFCC31C 21CF 0608                   	MOVE.L	SP,STKGOS
   9022 FFFCC320 6000 FF14                   	BRA	RUNTSL
                                             
   9024 FFFCC324                             RETURN:
   9025 FFFCC324 6100 050C                   	BSR.L	ENDCHK	;	there should be just a <CR>
   9026 FFFCC328 2238 0608                   	MOVE.L	STKGOS,D1	;get old stack pointer
   9027 FFFCC32C 6700 0510                   	BEQ.L	QWHAT		;if zero, it doesn't exist
   9028 FFFCC330 2E41                        	MOVE.L	D1,SP		;else restore it
   9029 FFFCC332 21DF 0608                   	MOVE.L	(SP)+,STKGOS	;and the old 'STKGOS'
   9030 FFFCC336 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;and the old 'CURRNT'
   9031 FFFCC33A 205F                        	MOVE.L	(SP)+,A0	;and the old text pointer
   9032 FFFCC33C 6100 063A                   	BSR.L	POPA		;and the old 'FOR' parameters
   9033 FFFCC340 60B2                        	BRA	FINISH		;and we are back home
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** FOR *** & NEXT ***
                                             ;*
                                             ;* 'FOR' has two forms:
                                             ;* 'FOR var=exp1 TO exp2 STEP exp1' and 'FOR var=exp1 TO exp2'
                                             ;* The second form means the same thing as the first form with a
                                             ;* STEP of positive 1.  The interpreter will find the variable 'var'
                                             ;* and set its value to the current value of 'exp1'.  It also
                                             ;* evaluates 'exp2' and 'exp1' and saves all these together with
                                             ;* the text pointer, etc. in the 'FOR' save area, which consisits of
                                             ;* 'LOPVAR', 'LOPINC', 'LOPLMT', 'LOPLN', and 'LOPPT'.  If there is
                                             ;* already something in the save area (indicated by a non-zero
                                             ;* 'LOPVAR'), then the old save area is saved on the stack before
                                             ;* the new values are stored.  The interpreter will then dig in the
                                             ;* stack and find out if this same variable was used in another
                                             ;* currently active 'FOR' loop.  If that is the case, then the old
                                             ;* 'FOR' loop is deactivated. (i.e. purged from the stack)
                                             ;*
                                             ;* 'NEXT var' serves as the logical (not necessarily physical) end
                                             ;* of the 'FOR' loop.  The control variable 'var' is checked with
                                             ;* the 'LOPVAR'.  If they are not the same, the interpreter digs in
                                             ;* the stack to find the right one and purges all those that didn't
                                             ;* match.  Either way, it then adds the 'STEP' to that variable and
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 94
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* checks the result with against the limit value.  If it is within
                                             ;* the limit, control loops back to the command following the
                                             ;* 'FOR'.  If it's outside the limit, the save area is purged and
                                             ;* execution continues.
                                             ;*
   9065 FFFCC342                             FOR:
   9066 FFFCC342 6100 064E                   	BSR.L	PUSHA		;save the old 'FOR' save area
   9067 FFFCC346 6100 04B6                   	BSR.L	SETVAL		;set the control variable
   9068 FFFCC34A 21CE 0610                   	MOVE.L	A6,LOPVAR	;save its address
   9069 FFFCC34E 43F9 FFFC C15B              	LEA	TAB5,A1 	;use 'EXEC' to test for 'TO'
   9070 FFFCC354 45F9 FFFC C1A0              	LEA	TAB5_1,A2
   9071 FFFCC35A 6000 FE66                   	BRA	EXEC
   9072 FFFCC35E                             FR1:
   9073 FFFCC35E 6100 0262                   	BSR.L	EXPR		;evaluate the limit
   9074 FFFCC362 21C0 0618                   	MOVE.L	D0,LOPLMT	;save that
   9075 FFFCC366 43F9 FFFC C15E              	LEA	TAB6,A1 	;use 'EXEC' to look for the
   9076 FFFCC36C 45F9 FFFC C1A4              	LEA	TAB6_1,A2	;word 'STEP'
   9077 FFFCC372 6000 FE4E                   	BRA	EXEC
   9078 FFFCC376                             FR2:
   9079 FFFCC376 6100 024A                   	BSR.L	EXPR	;	found it, get the step value
   9080 FFFCC37A 6002                        	BRA	FR4
   9081 FFFCC37C                             FR3:
   9082 FFFCC37C 7001                        	MOVEQ	#1,D0	;	not found, step defaults to 1
   9083 FFFCC37E                             FR4:
   9084 FFFCC37E 21C0 0614                   	MOVE.L	D0,LOPINC	;save that too
   9085 FFFCC382                             FR5:
   9086 FFFCC382 21F8 0604 061C              	MOVE.L	CURRNT,LOPLN	;save address of current line number
   9087 FFFCC388 21C8 0620                   	MOVE.L	A0,LOPPT	;and text pointer
   9088 FFFCC38C 2C4F                        	MOVE.L	SP,A6		;dig into the stack to find 'LOPVAR'
   9089 FFFCC38E 6006                        	BRA	FR7
   9090 FFFCC390                             FR6:
   9091 FFFCC390 DDFC 0000 0014              	ADD.L	#20,A6		;look at next stack frame
   9092 FFFCC396                             FR7:
   9093 FFFCC396 2016                        	MOVE.L	(A6),D0 	;is it zero?
   9094 FFFCC398 6716                        	BEQ	FR8		;if so, we're done
   9095 FFFCC39A B0B8 0610                   	CMP.L	LOPVAR,D0	;same as current LOPVAR?
   9096 FFFCC39E 66F0                        	BNE	FR6		;nope, look some more
   9097 FFFCC3A0 244F                        	MOVE.L	SP,A2	;	Else remove 5 long words from...
   9098 FFFCC3A2 224E                        	MOVE.L	A6,A1	;	inside the stack.
   9099 FFFCC3A4 47F8 0014                   	LEA	20,A3
   9100 FFFCC3A8 D7C9                        	ADD.L	A1,A3
   9101 FFFCC3AA 6100 05C4                   	BSR.L	MVDOWN
   9102 FFFCC3AE 2E4B                        	MOVE.L	A3,SP	;	set the SP 5 long words up
   9103 FFFCC3B0                             FR8:
   9104 FFFCC3B0 6000 FF42                   	BRA	FINISH		;and continue execution
                                             
   9106 FFFCC3B4                             NEXT:
   9107 FFFCC3B4 6100 031E                   	BSR.L	TSTV;		get address of variable
   9108 FFFCC3B8 6500 0484                   	BCS.L	QWHAT	;	if no variable, say "What?"
   9109 FFFCC3BC 2240                        	MOVE.L	D0,A1	;	save variable's address
   9110 FFFCC3BE                             NX0:
   9111 FFFCC3BE 2038 0610                   	MOVE.L	LOPVAR,D0;	If 'LOPVAR' is zero, we never...
   9112 FFFCC3C2 6700 047A                   	BEQ.L	QWHAT	;	had a FOR loop, so say "What?"
   9113 FFFCC3C6 B3C0                        	CMP.L	D0,A1	;;	else we check them
   9114 FFFCC3C8 6706                        	BEQ	NX3	;	OK, they agree
   9115 FFFCC3CA 6100 05AC                   	BSR.L	POPA	;	nope, let's see the next frame
   9116 FFFCC3CE 60EE                        	BRA	NX0
   9117 FFFCC3D0                             NX3:
   9118 FFFCC3D0 2011                        	MOVE.L	(A1),D0 ;	get control variable's value
   9119 FFFCC3D2 D0B8 0614                   	ADD.L	LOPINC,D0;	add in loop increment
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 95
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9120 FFFCC3D6 6900 04B2                   	BVS.L	QHOW	;	say "How?" for 32-bit overflow
   9121 FFFCC3DA 2280                        	MOVE.L	D0,(A1) ;	save control variable's new value
   9122 FFFCC3DC 2238 0618                   	MOVE.L	LOPLMT,D1;	get loop's limit value
   9123 FFFCC3E0 4AB8 0614                   	TST.L	LOPINC
   9124 FFFCC3E4 6A02                        	BPL	NX1	;	branch if loop increment is positive
   9125 FFFCC3E6 C141                        	EXG	D0,D1
   9126 FFFCC3E8                             NX1:
   9127 FFFCC3E8 B280                        	CMP.L	D0,D1;		test against limit
   9128 FFFCC3EA 6D0E                        	BLT	NX2;		branch if outside limit
   9129 FFFCC3EC 21F8 061C 0604              	MOVE.L	LOPLN,CURRNT	;Within limit, go back to the...
   9130 FFFCC3F2 2078 0620                   	MOVE.L	LOPPT,A0	;saved 'CURRNT' and text pointer.
   9131 FFFCC3F6 6000 FEFC                   	BRA	FINISH
   9132 FFFCC3FA                             NX2:
   9133 FFFCC3FA 6100 057C                   	BSR.L	POPA		;purge this loop
   9134 FFFCC3FE 6000 FEF4                   	BRA	FINISH
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** REM *** IF *** INPUT *** LET (& DEFLT) ***
                                             ;*
                                             ;* 'REM' can be followed by anything and is ignored by the
                                             ;* interpreter.
                                             ;*
                                             ;* 'IF' is followed by an expression, as a condition and one or
                                             ;* more commands (including other 'IF's) separated by colons.
                                             ;* Note that the word 'THEN' is not used.  The interpreter evaluates
                                             ;* the expression.  If it is non-zero, execution continues.  If it
                                             ;* is zero, the commands that follow are ignored and execution
                                             ;* continues on the next line.
                                             ;*
                                             ;* 'INPUT' is like the 'PRINT' command, and is followed by a list
                                             ;* of items.  If the item is a string in single or double quotes,
                                             ;* or is an underline (back arrow), it has the same effect as in
                                             ;* 'PRINT'.  If an item is a variable, this variable name is
                                             ;* printed out followed by a colon, then the interpreter waits for
                                             ;* an expression to be typed in.  The variable is then set to the
                                             ;* value of this expression.  If the variable is preceeded by a
                                             ;* string (again in single or double quotes), the string will be
                                             ;* displayed followed by a colon.  The interpreter the waits for an
                                             ;* expression to be entered and sets the variable equal to the
                                             ;* expression's value.  If the input expression is invalid, the
                                             ;* interpreter will print "What?", "How?", or "Sorry" and reprint
                                             ;* the prompt and redo the input.  The execution will not terminate
                                             ;* unless you press control-C.  This is handled in 'INPERR'.
                                             ;*
                                             ;* 'LET' is followed by a list of items separated by commas.
                                             ;* Each item consists of a variable, an equals sign, and an
                                             ;* expression.  The interpreter evaluates the expression and sets
                                             ;* the variable to that value.  The interpreter will also handle
                                             ;* 'LET' commands without the word 'LET'.  This is done by 'DEFLT'.
                                             ;*
   9172 FFFCC402                             REM:
   9173 FFFCC402 600A                        	BRA	IF2		;skip the rest of the line
                                             
   9175 FFFCC404                             IF:	
   9176 FFFCC404 6100 01BC                   	BSR.L	EXPR	;	evaluate the expression
   9177 FFFCC408                             IF1:
   9178 FFFCC408 4A80                        	TST.L	D0		;is it zero?
   9179 FFFCC40A 6600 FE32                   	BNE	RUNSML		;if not, continue
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 96
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9180 FFFCC40E                             IF2:
   9181 FFFCC40E 2248                        	MOVE.L	A0,A1
   9182 FFFCC410 4281                        	CLR.L	D1
   9183 FFFCC412 6100 054A                   	BSR.L	FNDSKP	;	if so, skip the rest of the line
   9184 FFFCC416 6400 FE1E                   	BCC	RUNTSL		;and run the next line
   9185 FFFCC41A 6000 FC44                   	BRA.L	WSTART	;	if no next line, do a warm start
                                             
   9187 FFFCC41E                             INPERR:
   9188 FFFCC41E 2E78 060C                   	MOVE.L	STKINP,SP;	restore the old stack pointer
   9189 FFFCC422 21DF 0604                   	MOVE.L	(SP)+,CURRNT;	and old 'CURRNT'
   9190 FFFCC426 588F                        	ADDQ.L	#4,SP
   9191 FFFCC428 205F                        	MOVE.L	(SP)+,A0	;and old text pointer
                                             
   9193 FFFCC42A                             INPUT:
   9194 FFFCC42A 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   9195 FFFCC42C 6100 05A6                   	BSR.L	QTSTG		;is next item a string?
   9196 FFFCC430 600A                        	BRA.S	IP2		;nope
   9197 FFFCC432 6100 02A0                   	BSR.L	TSTV	;	yes, but is it followed by a variable?
   9198 FFFCC436 654C                        	BCS	IP4		;if not, branch
   9199 FFFCC438 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   9200 FFFCC43A 601A                        	BRA	IP3		;if so, input to variable
   9201 FFFCC43C                             IP2:
   9202 FFFCC43C 2F08                        	MOVE.L	A0,-(SP);	save for 'PRTSTG'
   9203 FFFCC43E 6100 0294                   	BSR.L	TSTV	;	must be a variable now
   9204 FFFCC442 6500 03FA                   	BCS.L	QWHAT	;	"What?" it isn't?
   9205 FFFCC446 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   9206 FFFCC448 1410                        	MOVE.B	(A0),D2 ;	get ready for 'PRTSTG'
   9207 FFFCC44A 4200                        	CLR.B	D0
   9208 FFFCC44C 1080                        	MOVE.B	D0,(A0)
   9209 FFFCC44E 225F                        	MOVE.L	(SP)+,A1
   9210 FFFCC450 6100 0566                   	BSR.L	PRTSTG	;	print string as prompt
   9211 FFFCC454 1082                        	MOVE.B	D2,(A0) ;	restore text
   9212 FFFCC456                             IP3:
   9213 FFFCC456 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   9214 FFFCC458 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;also save 'CURRNT'
   9215 FFFCC45C 21FC FFFF FFFF 0604         	MOVE.L	#-1,CURRNT	;flag that we are in INPUT
   9216 FFFCC464 21CF 060C                   	MOVE.L	SP,STKINP	;save the stack pointer too
   9217 FFFCC468 2F0A                        	MOVE.L	A2,-(SP)	;save the variable address
   9218 FFFCC46A 103C 003A                   	MOVE.B	#':',D0     ;    print a colon first
   9219 FFFCC46E 6100 0424                   	BSR.L	GETLN		;then get an input line
   9220 FFFCC472 41F8 0630                   	LEA	BUFFER,A0	;point to the buffer
   9221 FFFCC476 6100 014A                   	BSR.L	EXPR	;	evaluate the input
   9222 FFFCC47A 245F                        	MOVE.L	(SP)+,A2	;restore the variable address
   9223 FFFCC47C 2480                        	MOVE.L	D0,(A2) 	;save value in variable
   9224 FFFCC47E 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;restore old 'CURRNT'
   9225 FFFCC482 205F                        	MOVE.L	(SP)+,A0;	and the old text pointer
   9226 FFFCC484                             IP4:
   9227 FFFCC484 588F                        	ADDQ.L	#4,SP	;	clean up the stack
   9228 FFFCC486 6100 061C                   	BSR.L	TSTC	;	is the next thing a comma?
   9229 FFFCC48A 2C 03                       	DC.B	',',IP5-$
   9230 FFFCC48C 609C                        	BRA	INPUT	;	yes, more items
   9231 FFFCC48E                             IP5:
   9232 FFFCC48E 6000 FE64                   	BRA	FINISH
                                             
   9234 FFFCC492                             DEFLT:
   9235 FFFCC492 0C10 000D                   	CMP.B	#CR,(A0);	empty line is OK
   9236 FFFCC496 670C                        	BEQ	LT1		;else it is 'LET'
                                             
   9238 FFFCC498                             LET:
   9239 FFFCC498 6100 0364                   	BSR.L	SETVAL		;do the assignment
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 97
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9240 FFFCC49C 6100 0606                   	BSR.L	TSTC		;check for more 'LET' items
   9241 FFFCC4A0 2C 03                       	DC.B	',',LT1-$
   9242 FFFCC4A2 60F4                        	BRA	LET
   9243 FFFCC4A4                             LT1:
   9244 FFFCC4A4 6000 FE4E                   	BRA	FINISH		;until we are finished.
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LOAD *** & SAVE ***
                                             ;*
                                             ;* These two commands transfer a program to/from an auxiliary
                                             ;* device such as a cassette, another computer, etc.  The program
                                             ;* is converted to an easily-stored format: each line starts with
                                             ;* a colon, the line no. as 4 hex digits, and the rest of the line.
                                             ;* At the end, a line starting with an '@' sign is sent.  This
                                             ;* format can be read back with a minimum of processing time by
                                             ;* the 68000.
                                             ;*
   9259 FFFCC4A8                             LOAD:
   9260 FFFCC4A8 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to start of prog. area
   9261 FFFCC4AE 103C 000D                   	MOVE.B	#CR,D0		;For a CP/M host, tell it we're ready...
   9262 FFFCC4B2 6100 FB5C                   	BSR	GOAUXO		;by sending a CR to finish PIP command.
   9263 FFFCC4B6                             LOD1:
   9264 FFFCC4B6 6100 FB5C                   	BSR	GOAUXI	;	look for start of line
   9265 FFFCC4BA 67FA                        	BEQ	LOD1
   9266 FFFCC4BC B03C 0040                   	CMP.B	#'@',D0  ;       end of program?
   9267 FFFCC4C0 6722                        	BEQ	LODEND
   9268 FFFCC4C2 B03C 003A                   	CMP.B	#':',D0   ;      if not, is it start of line?
   9269 FFFCC4C6 66EE                        	BNE	LOD1		;if not, wait for it
   9270 FFFCC4C8 6100 0022                   	BSR	GBYTE		;get first byte of line no.
   9271 FFFCC4CC 10C1                        	MOVE.B	D1,(A0)+	;store it
   9272 FFFCC4CE 6100 001C                   	BSR	GBYTE		;get 2nd bye of line no.
   9273 FFFCC4D2 10C1                        	MOVE.B	D1,(A0)+;	store that, too
   9274 FFFCC4D4                             LOD2:
   9275 FFFCC4D4 6100 FB3E                   	BSR	GOAUXI	;	get another text char.
   9276 FFFCC4D8 67FA                        	BEQ	LOD2
   9277 FFFCC4DA 10C0                        	MOVE.B	D0,(A0)+	;store it
   9278 FFFCC4DC B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9279 FFFCC4E0 66F2                        	BNE	LOD2		;if not, go back for more
   9280 FFFCC4E2 60D2                        	BRA	LOD1		;if so, start a new line
   9281 FFFCC4E4                             LODEND:
   9282 FFFCC4E4 21C8 0624                   	MOVE.L	A0,TXTUNF	;set end-of program pointer
   9283 FFFCC4E8 6000 FB76                   	BRA	WSTART		;back to direct mode
                                             
   9285 FFFCC4EC                             GBYTE:
   9286 FFFCC4EC 7401                        	MOVEQ	#1,D2;		get two hex characters from auxiliary
   9287 FFFCC4EE 4281                        	CLR	D1		;and store them as a byte in D1
   9288 FFFCC4F0                             GBYTE1:
   9289 FFFCC4F0 6100 FB22                   	BSR	GOAUXI	;	get a char.
   9290 FFFCC4F4 67FA                        	BEQ	GBYTE1
   9291 FFFCC4F6 B03C 0041                   	CMP.B	#'A',D0
   9292 FFFCC4FA 6502                        	BCS	GBYTE2
   9293 FFFCC4FC 5F00                        	SUBQ.B	#7,D0	;	if greater than 9, adjust
   9294 FFFCC4FE                             GBYTE2:
   9295 FFFCC4FE 0200 000F                   	AND.B	#0xF,D0		;strip ASCII
   9296 FFFCC502 E909                        	LSL.B	#4,D1		;put nybble into the result
   9297 FFFCC504 8200                        	OR.B	D0,D1
   9298 FFFCC506 51CA FFE8                   	DBRA	D2,GBYTE1	;get another char.
   9299 FFFCC50A 4E75                        	RTS
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 98
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
   9301 FFFCC50C                             SAVE:
   9302 FFFCC50C 2079 FFFC C01C              	MOVE.L	TXTBGN,A0;	set pointer to start of prog. area
   9303 FFFCC512 2278 0624                   	MOVE.L	TXTUNF,A1	;set pointer to end of prog. area
   9304 FFFCC516                             SAVE1:
   9305 FFFCC516 103C 000D                   	MOVE.B	#CR,D0	;	send out a CR & LF (CP/M likes this)
   9306 FFFCC51A 6100 FAF4                   	BSR	GOAUXO
   9307 FFFCC51E 103C 000A                   	MOVE.B	#LF,D0
   9308 FFFCC522 6100 FAEC                   	BSR	GOAUXO
   9309 FFFCC526 B3C8                        	CMP.L	A0,A1		;are we finished?
   9310 FFFCC528 6322                        	BLS	SAVEND
   9311 FFFCC52A 103C 003A                   	MOVE.B	#':',D0      ;   if not, start a line
   9312 FFFCC52E 6100 FAE0                   	BSR	GOAUXO
   9313 FFFCC532 1218                        	MOVE.B	(A0)+,D1	;send first half of line no.
   9314 FFFCC534 6100 003A                   	BSR	PBYTE
   9315 FFFCC538 1218                        	MOVE.B	(A0)+,D1	;and send 2nd half
   9316 FFFCC53A 6100 0034                   	BSR	PBYTE
   9317 FFFCC53E                             SAVE2:
   9318 FFFCC53E 1018                        	MOVE.B	(A0)+,D0;	get a text char.
   9319 FFFCC540 B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9320 FFFCC544 67D0                        	BEQ	SAVE1		;if so, send CR & LF and start new line
   9321 FFFCC546 6100 FAC8                   	BSR	GOAUXO		;send it out
   9322 FFFCC54A 60F2                        	BRA	SAVE2		;go back for more text
   9323 FFFCC54C                             SAVEND:
   9324 FFFCC54C 103C 0040                   	MOVE.B	#'@',D0 ;        send end-of-program indicator
   9325 FFFCC550 6100 FABE                   	BSR	GOAUXO
   9326 FFFCC554 103C 000D                   	MOVE.B	#CR,D0	;	followed by a CR & LF
   9327 FFFCC558 6100 FAB6                   	BSR	GOAUXO
   9328 FFFCC55C 103C 000A                   	MOVE.B	#LF,D0
   9329 FFFCC560 6100 FAAE                   	BSR	GOAUXO
   9330 FFFCC564 103C 001A                   	MOVE.B	#0x1A,D0 	;and a control-Z to end the CP/M file
   9331 FFFCC568 6100 FAA6                   	BSR	GOAUXO
   9332 FFFCC56C 6000 FAF2                   	BRA	WSTART		;then go do a warm start
                                             
   9334 FFFCC570                             PBYTE:
   9335 FFFCC570 7401                        	MOVEQ	#1,D2	;	send two hex characters from D1's low byte
   9336 FFFCC572                             PBYTE1:
   9337 FFFCC572 E919                        	ROL.B	#4,D1	;	get the next nybble
   9338 FFFCC574 1001                        	MOVE.B	D1,D0
   9339 FFFCC576 0200 000F                   	AND.B	#0xF,D0	;	strip off garbage
   9340 FFFCC57A 0600 0030                   	ADD.B	#'0',D0   ;      make it into ASCII
   9341 FFFCC57E B03C 0039                   	CMP.B	#'9',D0
   9342 FFFCC582 6302                        	BLS	PBYTE2
   9343 FFFCC584 5E00                        	ADDQ.B	#7,D0		;adjust if greater than 9
   9344 FFFCC586                             PBYTE2:
   9345 FFFCC586 6100 FA88                   	BSR	GOAUXO		;send it out
   9346 FFFCC58A 51CA FFE6                   	DBRA	D2,PBYTE1	;then send the next nybble
   9347 FFFCC58E 4E75                        	RTS
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** POKE *** & CALL ***
                                             ;*
                                             ;* 'POKE expr1,expr2' stores the byte from 'expr2' into the memory
                                             ;* address specified by 'expr1'.
                                             ;*
                                             ;* 'CALL expr' jumps to the machine language subroutine whose
                                             ;* starting address is specified by 'expr'.  The subroutine can use
                                             ;* all registers but must leave the stack the way it found it.
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 99
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* The subroutine returns to the interpreter by executing an RTS.
                                             ;*
   9362 FFFCC590                             POKE:
   9363 FFFCC590 6100 0030                   	BSR	EXPR		;get the memory address
   9364 FFFCC594 6100 050E                   	BSR.L	TSTC		;it must be followed by a comma
   9365 FFFCC598 2C 0F                       	DC.B	',',PKER-$
   9366 FFFCC59A 2F00                        	MOVE.L	D0,-(SP)	;save the address
   9367 FFFCC59C 6100 0024                   	BSR	EXPR		;get the byte to be POKE'd
   9368 FFFCC5A0 225F                        	MOVE.L	(SP)+,A1	;get the address back
   9369 FFFCC5A2 1280                        	MOVE.B	D0,(A1) 	;store the byte in memory
   9370 FFFCC5A4 6000 FD4E                   	BRA	FINISH
   9371 FFFCC5A8                             PKER:
   9372 FFFCC5A8 6000 0294                   	BRA.L	QWHAT	;	if no comma, say "What?"
                                             
   9374 FFFCC5AC                             CALL:
   9375 FFFCC5AC 6100 0014                   	BSR	EXPR		;get the subroutine's address
   9376 FFFCC5B0 4A80                        	TST.L	D0		;make sure we got a valid address
   9377 FFFCC5B2 6700 02D6                   	BEQ.L	QHOW	;	if not, say "How?"
   9378 FFFCC5B6 2F08                        	MOVE.L	A0,-(SP);	save the text pointer
   9379 FFFCC5B8 2240                        	MOVE.L	D0,A1
   9380 FFFCC5BA 4E91                        	JSR	(A1)		;jump to the subroutine
   9381 FFFCC5BC 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9382 FFFCC5BE 6000 FD34                   	BRA	FINISH
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** EXPR ***
                                             ;*
                                             ;* 'EXPR' evaluates arithmetical or logical expressions.
                                             ;* <EXPR>::=<EXPR2>
                                             ;*	   <EXPR2><rel.op.><EXPR2>
                                             ;* where <rel.op.> is one of the operators in TAB8 and the result
                                             ;* of these operations is 1 if true and 0 if false.
                                             ;* <EXPR2>::=(+ or -)<EXPR3>(+ or -)<EXPR3>(...
                                             ;* where () are optional and (... are optional repeats.
                                             ;* <EXPR3>::=<EXPR4>( <* or /><EXPR4> )(...
                                             ;* <EXPR4>::=<variable>
                                             ;*	    <function>
                                             ;*	    (<EXPR>)
                                             ;* <EXPR> is recursive so that the variable '@' can have an <EXPR>
                                             ;* as an index, functions can have an <EXPR> as arguments, and
                                             ;* <EXPR4> can be an <EXPR> in parenthesis.
                                             ;*
   9403 FFFCC5C2                             EXPR:
   9404 FFFCC5C2 6100 0066                   	BSR	EXPR2
   9405 FFFCC5C6 2F00                        	MOVE.L	D0,-(SP);	save <EXPR2> value
   9406 FFFCC5C8 43F9 FFFC C163              	LEA	TAB8,A1 	;look up a relational operator
   9407 FFFCC5CE 45F9 FFFC C1A8              	LEA	TAB8_1,A2
   9408 FFFCC5D4 6000 FBEC                   	BRA	EXEC		;go do it
                                             
   9410 FFFCC5D8                             XP11:
   9411 FFFCC5D8 6100 003E                   	BSR	XP18	;	is it ">="?
   9412 FFFCC5DC 6D2E                        	BLT	XPRT0		;no, return D0=0
   9413 FFFCC5DE 6030                        	BRA	XPRT1		;else return D0=1
                                             
   9415 FFFCC5E0                             XP12:
   9416 FFFCC5E0 6100 0036                   	BSR	XP18	;	is it "<>"?
   9417 FFFCC5E4 6726                        	BEQ	XPRT0		;no, return D0=0
   9418 FFFCC5E6 6028                        	BRA	XPRT1		;else return D0=1
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 100
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9420 FFFCC5E8                             XP13:
   9421 FFFCC5E8 6100 002E                   	BSR	XP18	;	is it ">"?
   9422 FFFCC5EC 6F1E                        	BLE	XPRT0		;no, return D0=0
   9423 FFFCC5EE 6020                        	BRA	XPRT1		;else return D0=1
                                             
   9425 FFFCC5F0                             XP14:
   9426 FFFCC5F0 6100 0026                   	BSR	XP18	;	is it "<="?
   9427 FFFCC5F4 6E16                        	BGT	XPRT0		;no, return D0=0
   9428 FFFCC5F6 6018                        	BRA	XPRT1		;else return D0=1
                                             
   9430 FFFCC5F8                             XP15:
   9431 FFFCC5F8 6100 001E                   	BSR	XP18	;	is it "="?
   9432 FFFCC5FC 660E                        	BNE	XPRT0		;if not, return D0=0
   9433 FFFCC5FE 6010                        	BRA	XPRT1		;else return D0=1
   9434 FFFCC600                             XP15RT:
   9435 FFFCC600 4E75                        	RTS
                                             
   9437 FFFCC602                             XP16:
   9438 FFFCC602 6100 0014                   	BSR	XP18	;	is it "<"?
   9439 FFFCC606 6C04                        	BGE	XPRT0		;if not, return D0=0
   9440 FFFCC608 6006                        	BRA	XPRT1		;else return D0=1
   9441 FFFCC60A                             XP16RT:
   9442 FFFCC60A 4E75                        	RTS
                                             
   9444 FFFCC60C                             XPRT0:
   9445 FFFCC60C 4280                        	CLR.L	D0	;	return D0=0 (false)
   9446 FFFCC60E 4E75                        	RTS
                                             
   9448 FFFCC610                             XPRT1:
   9449 FFFCC610 7001                        	MOVEQ	#1,D0;		return D0=1 (true)
   9450 FFFCC612 4E75                        	RTS
                                             
   9452 FFFCC614                             XP17:
   9453 FFFCC614 201F                        	MOVE.L	(SP)+,D0	;it's not a rel. operator
   9454 FFFCC616 4E75                        	RTS			;return D0=<EXPR2>
                                             
   9456 FFFCC618                             XP18:
   9457 FFFCC618 201F                        	MOVE.L	(SP)+,D0	;reverse the top two stack items
   9458 FFFCC61A 221F                        	MOVE.L	(SP)+,D1
   9459 FFFCC61C 2F00                        	MOVE.L	D0,-(SP)
   9460 FFFCC61E 2F01                        	MOVE.L	D1,-(SP)
   9461 FFFCC620 6100 0008                   	BSR	EXPR2		;do second <EXPR2>
   9462 FFFCC624 221F                        	MOVE.L	(SP)+,D1
   9463 FFFCC626 B280                        	CMP.L	D0,D1	;	compare with the first result
   9464 FFFCC628 4E75                        	RTS			;return the result
                                             
   9466 FFFCC62A                             EXPR2:
   9467 FFFCC62A 6100 0478                   	BSR.L	TSTC		;negative sign?
   9468 FFFCC62E 2D 05                       	DC.B	'-',XP21-$
   9469 FFFCC630 4280                        	CLR.L	D0	;	yes, fake '0-'
   9470 FFFCC632 6026                        	BRA	XP26
   9471 FFFCC634                             XP21:
   9472 FFFCC634 6100 046E                   	BSR.L	TSTC	;	positive sign? ignore it
   9473 FFFCC638 2B 01                       	DC.B	'+',XP22-$
   9474 FFFCC63A                             XP22:
   9475 FFFCC63A 6100 002C                   	BSR	EXPR3		;first <EXPR3>
   9476 FFFCC63E                             XP23:
   9477 FFFCC63E 6100 0464                   	BSR.L	TSTC	;	add?
   9478 FFFCC642 2B 11                       	DC.B	'+',XP25-$
   9479 FFFCC644 2F00                        	MOVE.L	D0,-(SP)	;yes, save the value
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 101
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9480 FFFCC646 6100 0020                   	BSR	EXPR3		;get the second <EXPR3>
   9481 FFFCC64A                             XP24:
   9482 FFFCC64A 221F                        	MOVE.L	(SP)+,D1
   9483 FFFCC64C D081                        	ADD.L	D1,D0	;	add it to the first <EXPR3>
   9484 FFFCC64E 6900 023A                   	BVS.L	QHOW	;	branch if there's an overflow
   9485 FFFCC652 60EA                        	BRA	XP23	;	else go back for more operations
   9486 FFFCC654                             XP25:
   9487 FFFCC654 6100 044E                   	BSR.L	TSTC		;subtract?
   9488 FFFCC658 2D 75                       	DC.B	'-',XP42-$
   9489 FFFCC65A                             XP26:
   9490 FFFCC65A 2F00                        	MOVE.L	D0,-(SP)	;yes, save the result of 1st <EXPR3>
   9491 FFFCC65C 6100 000A                   	BSR	EXPR3		;get second <EXPR3>
   9492 FFFCC660 4480                        	NEG.L	D0		;change its sign
   9493 FFFCC662 4EF9 FFFC C64A              	JMP	XP24		;and do an addition
                                             
   9495 FFFCC668                             EXPR3:
   9496 FFFCC668 6100 002C                   	BSR	EXPR4		;get first <EXPR4>
   9497 FFFCC66C                             XP31:
   9498 FFFCC66C 6100 0436                   	BSR.L	TSTC	;	multiply?
   9499 FFFCC670 2A 0F                       	DC.B	'*',XP34-$
   9500 FFFCC672 2F00                        	MOVE.L	D0,-(SP);	yes, save that first result
   9501 FFFCC674 6100 0020                   	BSR	EXPR4		;get second <EXPR4>
   9502 FFFCC678 221F                        	MOVE.L	(SP)+,D1
   9503 FFFCC67A 6100 00A8                   	BSR.L	MULT32	;	multiply the two
   9504 FFFCC67E 60EC                        	BRA	XP31		;then look for more terms
   9505 FFFCC680                             XP34:
   9506 FFFCC680 6100 0422                   	BSR.L	TSTC;		divide?
   9507 FFFCC684 2F 49                       	DC.B	'/',XP42-$
   9508 FFFCC686 2F00                        	MOVE.L	D0,-(SP);	save result of 1st <EXPR4>
   9509 FFFCC688 6100 000C                   	BSR	EXPR4		;get second <EXPR4>
   9510 FFFCC68C 221F                        	MOVE.L	(SP)+,D1
   9511 FFFCC68E C141                        	EXG	D0,D1
   9512 FFFCC690 6100 00D4                   	BSR.L	DIV32	;	do the division
   9513 FFFCC694 60D6                        	BRA	XP31		;go back for any more terms
                                             
   9515 FFFCC696                             EXPR4:
   9516 FFFCC696 43F9 FFFC C14C              	LEA	TAB4,A1 ;	find possible function
   9517 FFFCC69C 45F9 FFFC C196              	LEA	TAB4_1,A2
   9518 FFFCC6A2 6000 FB1E                   	BRA	EXEC
   9519 FFFCC6A6                             XP40:
   9520 FFFCC6A6 6100 002C                   	BSR	TSTV	;	nope, not a function
   9521 FFFCC6AA 6508                        	BCS	XP41		;nor a variable
   9522 FFFCC6AC 2240                        	MOVE.L	D0,A1
   9523 FFFCC6AE 4280                        	CLR.L	D0
   9524 FFFCC6B0 2011                        	MOVE.L	(A1),D0 ;	if a variable, return its value in D0
   9525 FFFCC6B2                             EXP4RT:
   9526 FFFCC6B2 4E75                        	RTS
   9527 FFFCC6B4                             XP41:
   9528 FFFCC6B4 6100 0408                   	BSR.L	TSTNUM	;	or is it a number?
   9529 FFFCC6B8 2001                        	MOVE.L	D1,D0
   9530 FFFCC6BA 4A82                        	TST	D2		;(if not, # of digits will be zero)
   9531 FFFCC6BC 66F4                        	BNE	EXP4RT	;	if so, return it in D0
   9532 FFFCC6BE                             PARN:
   9533 FFFCC6BE 6100 03E4                   	BSR.L	TSTC	;	else look for ( EXPR )
   9534 FFFCC6C2 28 0D                       	DC.B	'(',XP43-$
   9535 FFFCC6C4 6100 FEFC                   	BSR	EXPR
   9536 FFFCC6C8 6100 03DA                   	BSR.L	TSTC
   9537 FFFCC6CC 29 03                       	DC.B	')',XP43-$
   9538 FFFCC6CE                             XP42:
   9539 FFFCC6CE 4E75                        	RTS
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 102
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9540 FFFCC6D0                             XP43:
   9541 FFFCC6D0 6000 016C                   	BRA.L	QWHAT	;	else say "What?"
                                             
                                             ;*
                                             ;* ===== Test for a valid variable name.  Returns Carry=1 if not
                                             ;*	found, else returns Carry=0 and the address of the
                                             ;*	variable in D0.
                                             
   9548 FFFCC6D4                             TSTV:
   9549 FFFCC6D4 6100 0420                   	BSR.L	IGNBLK
   9550 FFFCC6D8 4280                        	CLR.L	D0
   9551 FFFCC6DA 1010                        	MOVE.B	(A0),D0 ;	look at the program text
   9552 FFFCC6DC 0400 0040                   	SUB.B	#'@',D0
   9553 FFFCC6E0 6540                        	BCS	TSTVRT	;	C=1: not a variable
   9554 FFFCC6E2 6628                        	BNE	TV1		;branch if not "@" array
   9555 FFFCC6E4 5288                        	ADDQ	#1,A0	;	If it is, it should be
   9556 FFFCC6E6 6100 FFD6                   	BSR	PARN		;followed by (EXPR) as its index.
   9557 FFFCC6EA D080                        	ADD.L	D0,D0
   9558 FFFCC6EC 6500 019C                   	BCS.L	QHOW	;	say "How?" if index is too big
   9559 FFFCC6F0 D080                        	ADD.L	D0,D0
   9560 FFFCC6F2 6500 0196                   	BCS.L	QHOW
   9561 FFFCC6F6 2F00                        	MOVE.L	D0,-(SP)	;save the index
   9562 FFFCC6F8 6100 00FA                   	BSR.L	SIZE_		;get amount of free memory
   9563 FFFCC6FC 221F                        	MOVE.L	(SP)+,D1	;get back the index
   9564 FFFCC6FE B081                        	CMP.L	D1,D0		;see if there's enough memory
   9565 FFFCC700 6300 017E                   	BLS.L	QSORRY		;if not, say "Sorry"
   9566 FFFCC704 2038 0628                   	MOVE.L	VARBGN,D0	;put address of array element...
   9567 FFFCC708 9081                        	SUB.L	D1,D0		;into D0
   9568 FFFCC70A 4E75                        	RTS
   9569 FFFCC70C                             TV1:
   9570 FFFCC70C B03C 001B                   	CMP.B	#27,D0		;if not @, is it A through Z?
   9571 FFFCC710 0A3C 0001                   	EOR	#1,CCR
   9572 FFFCC714 650C                        	BCS	TSTVRT		;if not, set Carry and return
   9573 FFFCC716 5288                        	ADDQ	#1,A0	;	else bump the text pointer
   9574 FFFCC718 D080                        	ADD	D0,D0		;compute the variable's address
   9575 FFFCC71A D080                        	ADD	D0,D0
   9576 FFFCC71C 2238 0628                   	MOVE.L	VARBGN,D1
   9577 FFFCC720 D081                        	ADD	D1,D0		;and return it in D0 with Carry=0
   9578 FFFCC722                             TSTVRT:
   9579 FFFCC722 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Multiplies the 32 bit values in D0 and D1, returning
                                             ;*	the 32 bit result in D0.
                                             ;*
   9585 FFFCC724                             MULT32:
   9586 FFFCC724 2801                        	MOVE.L	D1,D4
   9587 FFFCC726 B184                        	EOR.L	D0,D4	;	see if the signs are the same
   9588 FFFCC728 4A80                        	TST.L	D0		;take absolute value of D0
   9589 FFFCC72A 6A02                        	BPL	MLT1
   9590 FFFCC72C 4480                        	NEG.L	D0
   9591 FFFCC72E                             MLT1:
   9592 FFFCC72E 4A81                        	TST.L	D1	;	take absolute value of D1
   9593 FFFCC730 6A02                        	BPL	MLT2
   9594 FFFCC732 4481                        	NEG.L	D1
   9595 FFFCC734                             MLT2:
   9596 FFFCC734 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;is second argument <= 16 bits?
   9597 FFFCC73A 630C                        	BLS	MLT3	;	OK, let it through
   9598 FFFCC73C C141                        	EXG	D0,D1	;	else swap the two arguments
   9599 FFFCC73E B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;and check 2nd argument again
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 103
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9600 FFFCC744 6200 0144                   	BHI.L	QHOW		;one of them MUST be 16 bits
   9601 FFFCC748                             MLT3:
   9602 FFFCC748 2400                        	MOVE	D0,D2	;	prepare for 32 bit X 16 bit multiply
   9603 FFFCC74A C4C1                        	MULU	D1,D2		;multiply low word
   9604 FFFCC74C 4840                        	SWAP	D0
   9605 FFFCC74E C0C1                        	MULU	D1,D0		;multiply high word
   9606 FFFCC750 4840                        	SWAP	D0
                                             ;*** Rick Murray's bug correction follows:
   9608 FFFCC752 4A80                        	TST	D0		;if lower word not 0, then overflow
   9609 FFFCC754 6600 0134                   	BNE.L	QHOW	;	if overflow, say "How?"
   9610 FFFCC758 D082                        	ADD.L	D2,D0	;	D0 now holds the product
   9611 FFFCC75A 6B00 012E                   	BMI.L	QHOW	;	if sign bit set, it's an overflow
   9612 FFFCC75E 4A84                        	TST.L	D4		;were the signs the same?
   9613 FFFCC760 6A02                        	BPL	MLTRET
   9614 FFFCC762 4480                        	NEG.L	D0		;if not, make the result negative
   9615 FFFCC764                             MLTRET:
   9616 FFFCC764 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Divide the 32 bit value in D0 by the 32 bit value in D1.
                                             ;*	Returns the 32 bit quotient in D0, remainder in D1.
                                             ;*
   9622 FFFCC766                             DIV32:
   9623 FFFCC766 4A81                        	TST.L	D1		;check for divide-by-zero
   9624 FFFCC768 6700 0120                   	BEQ.L	QHOW		;if so, say "How?"
   9625 FFFCC76C 2401                        	MOVE.L	D1,D2
   9626 FFFCC76E 2801                        	MOVE.L	D1,D4
   9627 FFFCC770 B184                        	EOR.L	D0,D4		;see if the signs are the same
   9628 FFFCC772 4A80                        	TST.L	D0		;take absolute value of D0
   9629 FFFCC774 6A02                        	BPL	DIV1
   9630 FFFCC776 4480                        	NEG.L	D0
   9631 FFFCC778                             DIV1:
   9632 FFFCC778 4A81                        	TST.L	D1	;	take absolute value of D1
   9633 FFFCC77A 6A02                        	BPL	DIV2
   9634 FFFCC77C 4481                        	NEG.L	D1
   9635 FFFCC77E                             DIV2:
   9636 FFFCC77E 761F                        	MOVEQ	#31,D3	;	iteration count for 32 bits
   9637 FFFCC780 2200                        	MOVE.L	D0,D1
   9638 FFFCC782 4280                        	CLR.L	D0
   9639 FFFCC784                             DIV3:
   9640 FFFCC784 D281                        	ADD.L	D1,D1	;	(This algorithm was translated from
   9641 FFFCC786 D180                        	ADDX.L	D0,D0		;the divide routine in Ron Cain's
   9642 FFFCC788 6708                        	BEQ	DIV4		;Small-C run time library.)
   9643 FFFCC78A B082                        	CMP.L	D2,D0
   9644 FFFCC78C 6B04                        	BMI	DIV4
   9645 FFFCC78E 5281                        	ADDQ.L	#1,D1
   9646 FFFCC790 9082                        	SUB.L	D2,D0
   9647 FFFCC792                             DIV4:
   9648 FFFCC792 51CB FFF0                   	DBRA	D3,DIV3
   9649 FFFCC796 C141                        	EXG	D0,D1	;	put rem. & quot. in proper registers
   9650 FFFCC798 4A84                        	TST.L	D4	;	were the signs the same?
   9651 FFFCC79A 6A04                        	BPL	DIVRT
   9652 FFFCC79C 4480                        	NEG.L	D0	;	if not, results are negative
   9653 FFFCC79E 4481                        	NEG.L	D1
   9654 FFFCC7A0                             DIVRT:
   9655 FFFCC7A0 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The PEEK function returns the byte stored at the address
                                             ;*	contained in the following expression.
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 104
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
   9661 FFFCC7A2                             PEEK:
   9662 FFFCC7A2 6100 FF1A                   	BSR	PARN	;	get the memory address
   9663 FFFCC7A6 2240                        	MOVE.L	D0,A1
   9664 FFFCC7A8 4280                        	CLR.L	D0		;upper 3 bytes will be zero
   9665 FFFCC7AA 1011                        	MOVE.B	(A1),D0 ;	get the addressed byte
   9666 FFFCC7AC 4E75                        	RTS			;and return it
                                             
                                             ;*
                                             ;* ===== The RND function returns a random number from 1 to
                                             ;*	the value of the following expression in D0.
                                             ;*
   9672 FFFCC7AE                             RND:
   9673 FFFCC7AE 6100 FF0E                   	BSR	PARN	;	get the upper limit
   9674 FFFCC7B2 4A80                        	TST.L	D0	;	it must be positive and non-zero
   9675 FFFCC7B4 6700 00D4                   	BEQ.L	QHOW
   9676 FFFCC7B8 6B00 00D0                   	BMI.L	QHOW
   9677 FFFCC7BC 2200                        	MOVE.L	D0,D1
   9678 FFFCC7BE 2278 0600                   	MOVE.L	RANPNT,A1	;get memory as a random number
   9679 FFFCC7C2 B3FC FFFC CC5D              	CMP.L	#LSTROM,A1
   9680 FFFCC7C8 6506                        	BCS	RA1
   9681 FFFCC7CA 43F9 FFFC C000              	LEA	START,A1	;wrap around if end of program
   9682 FFFCC7D0                             RA1:
   9683 FFFCC7D0 2019                        	MOVE.L	(A1)+,D0;	get the slightly random number
   9684 FFFCC7D2 0880 001F                   	BCLR	#31,D0	;	make sure it's positive
   9685 FFFCC7D6 21C9 0600                   	MOVE.L	A1,RANPNT	;(even I can do better than this!)
   9686 FFFCC7DA 6100 FF8A                   	BSR	DIV32		;RND(n)=MOD(number,n)+1
   9687 FFFCC7DE 2001                        	MOVE.L	D1,D0	;	MOD is the remainder of the div.
   9688 FFFCC7E0 5280                        	ADDQ.L	#1,D0
   9689 FFFCC7E2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The ABS function returns an absolute value in D0.
                                             ;*
   9694 FFFCC7E4                             ABS:
   9695 FFFCC7E4 6100 FED8                   	BSR	PARN		;get the following expr.'s value
   9696 FFFCC7E8 4A80                        	TST.L	D0
   9697 FFFCC7EA 6A06                        	BPL	ABSRT
   9698 FFFCC7EC 4480                        	NEG.L	D0		;if negative, complement it
   9699 FFFCC7EE 6B00 009A                   	BMI.L	QHOW	;	if still negative, it was too big
   9700 FFFCC7F2                             ABSRT:
   9701 FFFCC7F2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The SIZE function returns the size of free memory in D0.
                                             ;*
   9706 FFFCC7F4                             SIZE_:
   9707 FFFCC7F4 2038 0628                   	MOVE.L	VARBGN,D0	;get the number of free bytes...
   9708 FFFCC7F8 90B8 0624                   	SUB.L	TXTUNF,D0	;between 'TXTUNF' and 'VARBGN'
   9709 FFFCC7FC 4E75                        	RTS			;return the number in D0
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** SETVAL *** FIN *** ENDCHK *** ERROR (& friends) ***
                                             ;*
                                             ;* 'SETVAL' expects a variable, followed by an equal sign and then
                                             ;* an expression.  It evaluates the expression and sets the variable
                                             ;* to that value.
                                             ;*
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 105
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* 'FIN' checks the end of a command.  If it ended with ":",
                                             ;* execution continues.	If it ended with a CR, it finds the
                                             ;* the next line and continues from there.
                                             ;*
                                             ;* 'ENDCHK' checks if a command is ended with a CR. This is
                                             ;* required in certain commands, such as GOTO, RETURN, STOP, etc.
                                             ;*
                                             ;* 'ERROR' prints the string pointed to by A0. It then prints the
                                             ;* line pointed to by CURRNT with a "?" inserted at where the
                                             ;* old text pointer (should be on top of the stack) points to.
                                             ;* Execution of Tiny BASIC is stopped and a warm start is done.
                                             ;* If CURRNT is zero (indicating a direct command), the direct
                                             ;* command is not printed. If CURRNT is -1 (indicating
                                             ;* 'INPUT' command in progress), the input line is not printed
                                             ;* and execution is not terminated but continues at 'INPERR'.
                                             ;*
                                             ;* Related to 'ERROR' are the following:
                                             ;* 'QWHAT' saves text pointer on stack and gets "What?" message.
                                             ;* 'AWHAT' just gets the "What?" message and jumps to 'ERROR'.
                                             ;* 'QSORRY' and 'ASORRY' do the same kind of thing.
                                             ;* 'QHOW' and 'AHOW' also do this for "How?".
                                             ;*
   9742 FFFCC7FE                             SETVAL:
   9743 FFFCC7FE 6100 FED4                   	BSR	TSTV	;	variable name?
   9744 FFFCC802 653A                        	BCS	QWHAT		;if not, say "What?"
   9745 FFFCC804 2F00                        	MOVE.L	D0,-(SP);	save the variable's address
   9746 FFFCC806 6100 029C                   	BSR.L	TSTC	;	get past the "=" sign
   9747 FFFCC80A 3D 0B                       	DC.B	'=',SV1-$
   9748 FFFCC80C 6100 FDB4                   	BSR	EXPR	;	evaluate the expression
   9749 FFFCC810 2C5F                        	MOVE.L	(SP)+,A6
   9750 FFFCC812 2C80                        	MOVE.L	D0,(A6) ;	and save its value in the variable
   9751 FFFCC814 4E75                        	RTS
   9752 FFFCC816                             SV1:
   9753 FFFCC816 6026                        	BRA	QWHAT	;	if no "=" sign
                                             
   9755 FFFCC818                             FIN:
   9756 FFFCC818 6100 028A                   	BSR.L	TSTC	;	*** FIN ***
   9757 FFFCC81C 3A 07                       	DC.B	':',FI1-$
   9758 FFFCC81E 588F                        	ADDQ.L	#4,SP	;	if ":", discard return address
   9759 FFFCC820 6000 FA1C                   	BRA	RUNSML	;	continue on the same line
   9760 FFFCC824                             FI1:
   9761 FFFCC824 6100 027E                   	BSR.L	TSTC	;	not ":", is it a CR?
   9762 FFFCC828 0D 07                       	DC.B	CR,FI2-$
   9763 FFFCC82A 588F                        	ADDQ.L	#4,SP	;	yes, purge return address
   9764 FFFCC82C 6000 F9F4                   	BRA	RUNNXL		;execute the next line
   9765 FFFCC830                             FI2:
   9766 FFFCC830 4E75                        	RTS			;else return to the caller
                                             
   9768 FFFCC832                             ENDCHK:
   9769 FFFCC832 6100 02C2                   	BSR.L	IGNBLK
   9770 FFFCC836 0C10 000D                   	CMP.B	#CR,(A0);	does it end with a CR?
   9771 FFFCC83A 6602                        	BNE	QWHAT	;	if not, say "WHAT?"
   9772 FFFCC83C 4E75                        	RTS
                                             
   9774 FFFCC83E                             QWHAT:
   9775 FFFCC83E 2F08                        	MOVE.L	A0,-(SP)
   9776 FFFCC840                             AWHAT:
   9777 FFFCC840 4DF9 FFFC CBDF              	LEA	WHTMSG,A6
   9778 FFFCC846                             ERROR:
   9779 FFFCC846 6100 031E                   	BSR.L	PRMESG	;	display the error message
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 106
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9780 FFFCC84A 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9781 FFFCC84C 2038 0604                   	MOVE.L	CURRNT,D0	;get the current line number
   9782 FFFCC850 6700 F80E                   	BEQ	WSTART		;if zero, do a warm start
   9783 FFFCC854 B0BC FFFF FFFF              	CMP.L	#-1,D0		;is the line no. pointer = -1?
   9784 FFFCC85A 6700 FBC2                   	BEQ	INPERR		;if so, redo input
   9785 FFFCC85E 1F10                        	MOVE.B	(A0),-(SP)	;save the char. pointed to
   9786 FFFCC860 4210                        	CLR.B	(A0)		;put a zero where the error is
   9787 FFFCC862 2278 0604                   	MOVE.L	CURRNT,A1	;point to start of current line
   9788 FFFCC866 6100 0220                   	BSR.L	PRTLN		;display the line in error up to the 0
   9789 FFFCC86A 109F                        	MOVE.B	(SP)+,(A0)	;restore the character
   9790 FFFCC86C 103C 003F                   	MOVE.B	#'?',D0     ;    display a "?"
   9791 FFFCC870 6100 F796                   	BSR	GOOUT
   9792 FFFCC874 4280                        	CLR	D0
   9793 FFFCC876 5389                        	SUBQ.L	#1,A1		;point back to the error char.
   9794 FFFCC878 6100 013E                   	BSR.L	PRTSTG		;display the rest of the line
   9795 FFFCC87C 6000 F7E2                   	BRA	WSTART		;and do a warm start
   9796 FFFCC880                             QSORRY:
   9797 FFFCC880 2F08                        	MOVE.L	A0,-(SP)
   9798 FFFCC882                             ASORRY:
   9799 FFFCC882 4DF9 FFFC CBE7              	LEA	SRYMSG,A6
   9800 FFFCC888 60BC                        	BRA	ERROR
   9801 FFFCC88A                             QHOW:
   9802 FFFCC88A 2F08                        	MOVE.L	A0,-(SP)	;Error: "How?"
   9803 FFFCC88C                             AHOW:
   9804 FFFCC88C 4DF9 FFFC CBD8              	LEA	HOWMSG,A6
   9805 FFFCC892 60B2                        	BRA	ERROR
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GETLN *** FNDLN (& friends) ***
                                             ;*
                                             ;* 'GETLN' reads in input line into 'BUFFER'. It first prompts with
                                             ;* the character in D0 (given by the caller), then it fills the
                                             ;* buffer and echos. It ignores LF's but still echos
                                             ;* them back. Control-H is used to delete the last character
                                             ;* entered (if there is one), and control-X is used to delete the
                                             ;* whole line and start over again. CR signals the end of a line,
                                             ;* and causes 'GETLN' to return.
                                             ;*
                                             ;* 'FNDLN' finds a line with a given line no. (in D1) in the
                                             ;* text save area.  A1 is used as the text pointer. If the line
                                             ;* is found, A1 will point to the beginning of that line
                                             ;* (i.e. the high byte of the line no.), and flags are NC & Z.
                                             ;* If that line is not there and a line with a higher line no.
                                             ;* is found, A1 points there and flags are NC & NZ. If we reached
                                             ;* the end of the text save area and cannot find the line, flags
                                             ;* are C & NZ.
                                             ;* 'FNDLN' will initialize A1 to the beginning of the text save
                                             ;* area to start the search. Some other entries of this routine
                                             ;* will not initialize A1 and do the search.
                                             ;* 'FNDLNP' will start with A1 and search for the line no.
                                             ;* 'FNDNXT' will bump A1 by 2, find a CR and then start search.
                                             ;* 'FNDSKP' uses A1 to find a CR, and then starts the search.
                                             ;*
   9834 FFFCC894                             GETLN:
   9835 FFFCC894 6100 F772                   	BSR	GOOUT		;display the prompt
   9836 FFFCC898 103C 0020                   	MOVE.B	#' ',D0      ;   and a space
   9837 FFFCC89C 6100 F76A                   	BSR	GOOUT
   9838 FFFCC8A0 41F8 0630                   	LEA	BUFFER,A0;	A0 is the buffer pointer
   9839 FFFCC8A4                             GL1:
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 107
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9840 FFFCC8A4 6100 02A8                   	BSR.L	CHKIO;		check keyboard
   9841 FFFCC8A8 67FA                        	BEQ	GL1	;	wait for a char. to come in
   9842 FFFCC8AA B03C 0008                   	CMP.B	#CTRLH,D0	;delete last character?
   9843 FFFCC8AE 6726                        	BEQ	GL3	;	if so
   9844 FFFCC8B0 B03C 0018                   	CMP.B	#CTRLX,D0;	delete the whole line?
   9845 FFFCC8B4 6744                        	BEQ	GL4	;	if so
   9846 FFFCC8B6 B03C 000D                   	CMP.B	#CR,D0	;	accept a CR
   9847 FFFCC8BA 6706                        	BEQ	GL2
   9848 FFFCC8BC B03C 0020                   	CMP.B	#' ',D0  ;       if other control char., discard it
   9849 FFFCC8C0 65E2                        	BCS	GL1
   9850 FFFCC8C2                             GL2:
   9851 FFFCC8C2 10C0                        	MOVE.B	D0,(A0)+;	save the char.
   9852 FFFCC8C4 6100 F742                   	BSR	GOOUT		;echo the char back out
   9853 FFFCC8C8 B03C 000D                   	CMP.B	#CR,D0	;	if it's a CR, end the line
   9854 FFFCC8CC 675C                        	BEQ	GL7
   9855 FFFCC8CE B1FC 0000 067F              	CMP.L	#(BUFFER+BUFLEN-1),A0	;any more room?
   9856 FFFCC8D4 65CE                        	BCS	GL1	;	yes: get some more, else delete last char.
   9857 FFFCC8D6                             GL3:
   9858 FFFCC8D6 103C 0008                   	MOVE.B	#CTRLH,D0	;delete a char. if possible
   9859 FFFCC8DA 6100 F72C                   	BSR	GOOUT
   9860 FFFCC8DE 103C 0020                   	MOVE.B	#' ',D0
   9861 FFFCC8E2 6100 F724                   	BSR	GOOUT
   9862 FFFCC8E6 B1FC 0000 0630              	CMP.L	#BUFFER,A0	;any char.'s left?
   9863 FFFCC8EC 63B6                        	BLS	GL1		;if not
   9864 FFFCC8EE 103C 0008                   	MOVE.B	#CTRLH,D0;	if so, finish the BS-space-BS sequence
   9865 FFFCC8F2 6100 F714                   	BSR	GOOUT
   9866 FFFCC8F6 5388                        	SUBQ.L	#1,A0	;	decrement the text pointer
   9867 FFFCC8F8 60AA                        	BRA	GL1		;back for more
   9868 FFFCC8FA                             GL4:
   9869 FFFCC8FA 2208                        	MOVE.L	A0,D1	;	delete the whole line
   9870 FFFCC8FC 0481 0000 0630              	SUB.L	#BUFFER,D1;	figure out how many backspaces we need
   9871 FFFCC902 671E                        	BEQ	GL6		;if none needed, branch
   9872 FFFCC904 5381                        	SUBQ	#1,D1	;	adjust for DBRA
   9873 FFFCC906                             GL5:
   9874 FFFCC906 103C 0008                   	MOVE.B	#CTRLH,D0	;and display BS-space-BS sequences
   9875 FFFCC90A 6100 F6FC                   	BSR	GOOUT
   9876 FFFCC90E 103C 0020                   	MOVE.B	#' ',D0
   9877 FFFCC912 6100 F6F4                   	BSR	GOOUT
   9878 FFFCC916 103C 0008                   	MOVE.B	#CTRLH,D0
   9879 FFFCC91A 6100 F6EC                   	BSR	GOOUT
   9880 FFFCC91E 51C9 FFE6                   	DBRA	D1,GL5
   9881 FFFCC922                             GL6:
   9882 FFFCC922 41F8 0630                   	LEA	BUFFER,A0	;reinitialize the text pointer
   9883 FFFCC926 6000 FF7C                   	BRA	GL1		;and go back for more
   9884 FFFCC92A                             GL7:
   9885 FFFCC92A 103C 000A                   	MOVE.B	#LF,D0	;	echo a LF for the CR
   9886 FFFCC92E 6100 F6D8                   	BSR	GOOUT
   9887 FFFCC932 4E75                        	RTS
                                             
   9889 FFFCC934                             FNDLN:
   9890 FFFCC934 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;line no. must be < 65535
   9891 FFFCC93A 6400 FF4E                   	BCC	QHOW
   9892 FFFCC93E 2279 FFFC C01C              	MOVE.L	TXTBGN,A1	;init. the text save pointer
                                             
   9894 FFFCC944                             FNDLNP:
   9895 FFFCC944 2478 0624                   	MOVE.L	TXTUNF,A2	;check if we passed the end
   9896 FFFCC948 538A                        	SUBQ.L	#1,A2
   9897 FFFCC94A B5C9                        	CMP	A1,A2
   9898 FFFCC94C 650C                        	BCS	FNDRET	;	if so, return with Z=0 & C=1
   9899 FFFCC94E 1419                        	MOVE.B	(A1)+,D2	;if not, get a line no.
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 108
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9900 FFFCC950 E18A                        	LSL	#8,D2
   9901 FFFCC952 1411                        	MOVE.B	(A1),D2
   9902 FFFCC954 5389                        	SUBQ.L	#1,A1
   9903 FFFCC956 B481                        	CMP	D1,D2		;is this the line we want?
   9904 FFFCC958 6502                        	BCS	FNDNXT		;no, not there yet
   9905 FFFCC95A                             FNDRET:
   9906 FFFCC95A 4E75                        	RTS			;return the cond. codes
                                             
   9908 FFFCC95C                             FNDNXT:
   9909 FFFCC95C 5489                        	ADDQ.L	#2,A1;		find the next line
                                             
   9911 FFFCC95E                             FNDSKP:
   9912 FFFCC95E 0C19 000D                   	CMP.B	#CR,(A1)+	;try to find a CR
   9913 FFFCC962 66FA                        	BNE	FNDSKP		;keep looking
   9914 FFFCC964 60DE                        	BRA	FNDLNP		;check if end of text
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** MVUP *** MVDOWN *** POPA *** PUSHA ***
                                             ;*
                                             ;* 'MVUP' moves a block up from where A1 points to where A2 points
                                             ;* until A1=A3
                                             ;*
                                             ;* 'MVDOWN' moves a block down from where A1 points to where A3
                                             ;* points until A1=A2
                                             ;*
                                             ;* 'POPA' restores the 'FOR' loop variable save area from the stack
                                             ;*
                                             ;* 'PUSHA' stacks for 'FOR' loop variable save area onto the stack
                                             ;*
   9931 FFFCC966                             MVUP:
   9932 FFFCC966 B7C9                        	CMP.L	A1,A3	;	see the above description
   9933 FFFCC968 6704                        	BEQ	MVRET
   9934 FFFCC96A 14D9                        	MOVE.B	(A1)+,(A2)+
   9935 FFFCC96C 60F8                        	BRA	MVUP
   9936 FFFCC96E                             MVRET:
   9937 FFFCC96E 4E75                        	RTS
                                             
   9939 FFFCC970                             MVDOWN:
   9940 FFFCC970 B5C9                        	CMP.L	A1,A2	;	see the above description
   9941 FFFCC972 67FA                        	BEQ	MVRET
   9942 FFFCC974 1721                        	MOVE.B	-(A1),-(A3)
   9943 FFFCC976 60F8                        	BRA	MVDOWN
                                             
   9945 FFFCC978                             POPA:
   9946 FFFCC978 2C5F                        	MOVE.L	(SP)+,A6	;A6 = return address
   9947 FFFCC97A 21DF 0610                   	MOVE.L	(SP)+,LOPVAR	;restore LOPVAR, but zero means no more
   9948 FFFCC97E 6710                        	BEQ	PP1
   9949 FFFCC980 21DF 0614                   	MOVE.L	(SP)+,LOPINC	;if not zero, restore the rest
   9950 FFFCC984 21DF 0618                   	MOVE.L	(SP)+,LOPLMT
   9951 FFFCC988 21DF 061C                   	MOVE.L	(SP)+,LOPLN
   9952 FFFCC98C 21DF 0620                   	MOVE.L	(SP)+,LOPPT
   9953 FFFCC990                             PP1:
   9954 FFFCC990 4ED6                        	JMP	(A6)	;	return
                                             
   9956 FFFCC992                             PUSHA:
   9957 FFFCC992 2238 062C                   	MOVE.L	STKLMT,D1	;Are we running out of stack room?
   9958 FFFCC996 928F                        	SUB.L	SP,D1
   9959 FFFCC998 6400 FEE6                   	BCC	QSORRY		;if so, say we're sorry
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 109
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9960 FFFCC99C 2C5F                        	MOVE.L	(SP)+,A6	;else get the return address
   9961 FFFCC99E 2238 0610                   	MOVE.L	LOPVAR,D1	;save loop variables
   9962 FFFCC9A2 6710                        	BEQ	PU1		;if LOPVAR is zero, that's all
   9963 FFFCC9A4 2F38 0620                   	MOVE.L	LOPPT,-(SP)	;else save all the others
   9964 FFFCC9A8 2F38 061C                   	MOVE.L	LOPLN,-(SP)
   9965 FFFCC9AC 2F38 0618                   	MOVE.L	LOPLMT,-(SP)
   9966 FFFCC9B0 2F38 0614                   	MOVE.L	LOPINC,-(SP)
   9967 FFFCC9B4                             PU1:
   9968 FFFCC9B4 2F01                        	MOVE.L	D1,-(SP)
   9969 FFFCC9B6 4ED6                        	JMP	(A6)		;return
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** PRTSTG *** QTSTG *** PRTNUM *** PRTLN ***
                                             ;*
                                             ;* 'PRTSTG' prints a string pointed to by A1. It stops printing
                                             ;* and returns to the caller when either a CR is printed or when
                                             ;* the next byte is the same as what was passed in D0 by the
                                             ;* caller.
                                             ;*
                                             ;* 'QTSTG' looks for an underline (back-arrow on some systems),
                                             ;* single-quote, or double-quote.  If none of these are found, returns
                                             ;* to the caller.  If underline, outputs a CR without a LF.  If single
                                             ;* or double quote, prints the quoted string and demands a matching
                                             ;* end quote.  After the printing, the next 2 bytes of the caller are
                                             ;* skipped over (usually a short branch instruction).
                                             ;*
                                             ;* 'PRTNUM' prints the 32 bit number in D1, leading blanks are added if
                                             ;* needed to pad the number of spaces to the number in D4.
                                             ;* However, if the number of digits is larger than the no. in
                                             ;* D4, all digits are printed anyway. Negative sign is also
                                             ;* printed and counted in, positive sign is not.
                                             ;*
                                             ;* 'PRTLN' prints the saved text line pointed to by A1
                                             ;* with line no. and all.
                                             ;*
   9997 FFFCC9B8                             PRTSTG:
   9998 FFFCC9B8 1200                        	MOVE.B	D0,D1	;	save the stop character
   9999 FFFCC9BA                             PS1:
  10000 FFFCC9BA 1019                        	MOVE.B	(A1)+,D0	;get a text character
  10001 FFFCC9BC B200                        	CMP.B	D0,D1		;same as stop character?
  10002 FFFCC9BE 6712                        	BEQ	PRTRET		;if so, return
  10003 FFFCC9C0 6100 F646                   	BSR	GOOUT		;display the char.
  10004 FFFCC9C4 B03C 000D                   	CMP.B	#CR,D0		;;is it a C.R.?
  10005 FFFCC9C8 66F0                        	BNE	PS1		;no, go back for more
  10006 FFFCC9CA 103C 000A                   	MOVE.B	#LF,D0	;	yes, add a L.F.
  10007 FFFCC9CE 6100 F638                   	BSR	GOOUT
  10008 FFFCC9D2                             PRTRET:
  10009 FFFCC9D2 4E75                        	RTS			;then return
                                             
  10011 FFFCC9D4                             QTSTG:
  10012 FFFCC9D4 6100 00CE                   	BSR.L	TSTC;		*** QTSTG ***
  10013 FFFCC9D8 22 1B                       	DC.B	'"',QT3-$
  10014 FFFCC9DA 103C 0022                   	MOVE.B	#'"',D0  ;       it is a "
  10015 FFFCC9DE                             QT1:
  10016 FFFCC9DE 2248                        	MOVE.L	A0,A1
  10017 FFFCC9E0 6100 FFD6                   	BSR	PRTSTG		;print until another
  10018 FFFCC9E4 2049                        	MOVE.L	A1,A0
  10019 FFFCC9E6 225F                        	MOVE.L	(SP)+,A1;	pop return address
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 110
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10020 FFFCC9E8 B03C 000A                   	CMP.B	#LF,D0	;	was last one a CR?
  10021 FFFCC9EC 6700 F834                   	BEQ	RUNNXL		;if so, run next line
  10022 FFFCC9F0                             QT2:
  10023 FFFCC9F0 5489                        	ADDQ.L	#2,A1	;	skip 2 bytes on return
  10024 FFFCC9F2 4ED1                        	JMP	(A1)		;return
  10025 FFFCC9F4                             QT3:
  10026 FFFCC9F4 6100 00AE                   	BSR.L	TSTC	;	is it a single quote?
  10027 FFFCC9F8 27 07                       	DC.B	'\'',QT4-$
  10028 FFFCC9FA 103C 0027                   	MOVE.B	#'''',D0  ;      if so, do same as above
  10029 FFFCC9FE 60DE                        	BRA	QT1
  10030 FFFCCA00                             QT4:
  10031 FFFCCA00 6100 00A2                   	BSR.L	TSTC		;is it an underline?
  10032 FFFCCA04 5F 0D                       	DC.B	'_',QT5-$
  10033 FFFCCA06 103C 000D                   	MOVE.B	#CR,D0		;if so, output a CR without LF
  10034 FFFCCA0A 6100 F5FC                   	BSR.L	GOOUT
  10035 FFFCCA0E 225F                        	MOVE.L	(SP)+,A1	;pop return address
  10036 FFFCCA10 60DE                        	BRA	QT2
  10037 FFFCCA12                             QT5:
  10038 FFFCCA12 4E75                        	RTS			;none of the above
                                             
  10040 FFFCCA14                             PRTNUM:
  10041 FFFCCA14 2601                        	MOVE.L	D1,D3	;	save the number for later
  10042 FFFCCA16 2F04                        	MOVE	D4,-(SP)	;save the width value
  10043 FFFCCA18 1F3C 00FF                   	MOVE.B	#0xFF,-(SP)	;flag for end of digit string
  10044 FFFCCA1C 4A81                        	TST.L	D1		;is it negative?
  10045 FFFCCA1E 6A04                        	BPL	PN1		;if not
  10046 FFFCCA20 4481                        	NEG.L	D1	;	else make it positive
  10047 FFFCCA22 5384                        	SUBQ	#1,D4	;	one less for width count
  10048 FFFCCA24                             PN1:
  10049 FFFCCA24 82FC 000A                   	DIVU	#10,D1	;	get the next digit
  10050 FFFCCA28 690A                        	BVS	PNOV	;	overflow flag set?
  10051 FFFCCA2A 2001                        	MOVE.L	D1,D0	;	if not, save remainder
  10052 FFFCCA2C 0281 0000 FFFF              	AND.L	#0xFFFF,D1	;strip the remainder
  10053 FFFCCA32 601A                        	BRA	TOASCII 	;skip the overflow stuff
  10054 FFFCCA34                             PNOV:
  10055 FFFCCA34 2001                        	MOVE	D1,D0	;	prepare for long word division
  10056 FFFCCA36 4241                        	CLR.W	D1		;zero out low word
  10057 FFFCCA38 4841                        	SWAP	D1		;high word into low
  10058 FFFCCA3A 82FC 000A                   	DIVU	#10,D1	;	divide high word
  10059 FFFCCA3E 2401                        	MOVE	D1,D2	;	save quotient
  10060 FFFCCA40 2200                        	MOVE	D0,D1	;	low word into low
  10061 FFFCCA42 82FC 000A                   	DIVU	#10,D1	;	divide low word
  10062 FFFCCA46 2001                        	MOVE.L	D1,D0	;	D0 = remainder
  10063 FFFCCA48 4841                        	SWAP	D1	;	R/Q becomes Q/R
  10064 FFFCCA4A 2202                        	MOVE	D2,D1	;	D1 is low/high
  10065 FFFCCA4C 4841                        	SWAP	D1	;	D1 is finally high/low
  10066 FFFCCA4E                             TOASCII:
  10067 FFFCCA4E 4840                        	SWAP	D0	;	get remainder
  10068 FFFCCA50 1F00                        	MOVE.B	D0,-(SP);	stack it as a digit
  10069 FFFCCA52 4840                        	SWAP	D0
  10070 FFFCCA54 5384                        	SUBQ	#1,D4	;	decrement width count
  10071 FFFCCA56 4A81                        	TST.L	D1		;if quotient is zero, we're done
  10072 FFFCCA58 66CA                        	BNE	PN1
  10073 FFFCCA5A 5384                        	SUBQ	#1,D4	;	adjust padding count for DBRA
  10074 FFFCCA5C 6B0C                        	BMI	PN4		;skip padding if not needed
  10075 FFFCCA5E                             PN3:
  10076 FFFCCA5E 103C 0020                   	MOVE.B	#' ',D0  ;       display the required leading spaces
  10077 FFFCCA62 6100 F5A4                   	BSR	GOOUT
  10078 FFFCCA66 51CC FFF6                   	DBRA	D4,PN3
  10079 FFFCCA6A                             PN4:
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 111
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10080 FFFCCA6A 4A83                        	TST.L	D3		;is number negative?
  10081 FFFCCA6C 6A08                        	BPL	PN5
  10082 FFFCCA6E 103C 002D                   	MOVE.B	#'-',D0  ;       if so, display the sign
  10083 FFFCCA72 6100 F594                   	BSR	GOOUT
  10084 FFFCCA76                             PN5:
  10085 FFFCCA76 101F                        	MOVE.B	(SP)+,D0	;now unstack the digits and display
  10086 FFFCCA78 6B0A                        	BMI	PNRET		;until the flag code is reached
  10087 FFFCCA7A 0600 0030                   	ADD.B	#'0',D0   ;      make into ASCII
  10088 FFFCCA7E 6100 F588                   	BSR	GOOUT
  10089 FFFCCA82 60F2                        	BRA	PN5
  10090 FFFCCA84                             PNRET:
  10091 FFFCCA84 281F                        	MOVE	(SP)+,D4	;restore width value
  10092 FFFCCA86 4E75                        	RTS
                                             
  10094 FFFCCA88                             PRTLN:
  10095 FFFCCA88 4281                        	CLR.L	D1
  10096 FFFCCA8A 1219                        	MOVE.B	(A1)+,D1	;get the binary line number
  10097 FFFCCA8C E189                        	LSL	#8,D1
  10098 FFFCCA8E 1219                        	MOVE.B	(A1)+,D1
  10099 FFFCCA90 7805                        	MOVEQ	#5,D4		;display a 5 digit line no.
  10100 FFFCCA92 6100 FF80                   	BSR	PRTNUM
  10101 FFFCCA96 103C 0020                   	MOVE.B	#' ',D0      ;   followed by a blank
  10102 FFFCCA9A 6100 F56C                   	BSR	GOOUT
  10103 FFFCCA9E 4280                        	CLR	D0		;stop char. is a zero
  10104 FFFCCAA0 6000 FF16                   	BRA	PRTSTG	;	display the rest of the line
                                             
                                             ;*
                                             ;* ===== Test text byte following the call to this subroutine. If it
                                             ;*	equals the byte pointed to by A0, return to the code following
                                             ;*	the call. If they are not equal, branch to the point
                                             ;*	indicated by the offset byte following the text byte.
                                             ;*
  10112 FFFCCAA4                             TSTC:
  10113 FFFCCAA4 6100 0050                   	BSR	IGNBLK		;ignore leading blanks
  10114 FFFCCAA8 225F                        	MOVE.L	(SP)+,A1	;get the return address
  10115 FFFCCAAA 1219                        	MOVE.B	(A1)+,D1	;get the byte to compare
  10116 FFFCCAAC B210                        	CMP.B	(A0),D1 	;is it = to what A0 points to?
  10117 FFFCCAAE 6708                        	BEQ	TC1		;if so
  10118 FFFCCAB0 4281                        	CLR.L	D1		;If not, add the second
  10119 FFFCCAB2 1211                        	MOVE.B	(A1),D1 ;	byte following the call to
  10120 FFFCCAB4 D3C1                        	ADD.L	D1,A1	;	the return address.
  10121 FFFCCAB6 4ED1                        	JMP	(A1)		;jump to the routine
  10122 FFFCCAB8                             TC1:
  10123 FFFCCAB8 5288                        	ADDQ.L	#1,A0	;	if equal, bump text pointer
  10124 FFFCCABA 5289                        	ADDQ.L	#1,A1	;	Skip the 2 bytes following
  10125 FFFCCABC 4ED1                        	JMP	(A1)		;the call and continue.
                                             
                                             ;*
                                             ;* ===== See if the text pointed to by A0 is a number. If so,
                                             ;*	return the number in D1 and the number of digits in D2,
                                             ;*	else return zero in D1 and D2.
                                             ;*
  10132 FFFCCABE                             TSTNUM:
  10133 FFFCCABE 4281                        	CLR.L	D1		;initialize return parameters
  10134 FFFCCAC0 4282                        	CLR	D2
  10135 FFFCCAC2 6100 0032                   	BSR	IGNBLK		;skip over blanks
  10136 FFFCCAC6                             TN1:
  10137 FFFCCAC6 0C10 0030                   	CMP.B	#'0',(A0) ;      is it less than zero?
  10138 FFFCCACA 6528                        	BCS	TSNMRET 	;if so, that's all
  10139 FFFCCACC 0C10 0039                   	CMP.B	#'9',(A0) ;      is it greater than nine?
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 112
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10140 FFFCCAD0 6222                        	BHI	TSNMRET 	;if so, return
  10141 FFFCCAD2 B2BC 0CCC CCCC              	CMP.L	#214748364,D1	;see if there's room for new digit
  10142 FFFCCAD8 6400 FDB0                   	BCC	QHOW		;if not, we've overflowd
  10143 FFFCCADC 2001                        	MOVE.L	D1,D0	;	quickly multiply result by 10
  10144 FFFCCADE D281                        	ADD.L	D1,D1
  10145 FFFCCAE0 D281                        	ADD.L	D1,D1
  10146 FFFCCAE2 D280                        	ADD.L	D0,D1
  10147 FFFCCAE4 D281                        	ADD.L	D1,D1
  10148 FFFCCAE6 1018                        	MOVE.B	(A0)+,D0	;add in the new digit
  10149 FFFCCAE8 0280 0000 000F              	AND.L	#0xF,D0
  10150 FFFCCAEE D280                        	ADD.L	D0,D1
  10151 FFFCCAF0 5282                        	ADDQ	#1,D2		;increment the no. of digits
  10152 FFFCCAF2 60D2                        	BRA	TN1
  10153 FFFCCAF4                             TSNMRET:
  10154 FFFCCAF4 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Skip over blanks in the text pointed to by A0.
                                             ;*
  10159 FFFCCAF6                             IGNBLK:
  10160 FFFCCAF6 0C10 0020                   	CMP.B	#' ',(A0)   ;    see if it's a space
  10161 FFFCCAFA 6604                        	BNE	IGBRET		;if so, swallow it
  10162 FFFCCAFC                             IGB1:
  10163 FFFCCAFC 5288                        	ADDQ.L	#1,A0	;	increment the text pointer
  10164 FFFCCAFE 60F6                        	BRA	IGNBLK
  10165 FFFCCB00                             IGBRET:
  10166 FFFCCB00 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Convert the line of text in the input buffer to upper
                                             ;*	case (except for stuff between quotes).
                                             ;*
  10172 FFFCCB02                             TOUPBUF:
  10173 FFFCCB02 41F8 0630                   	LEA	BUFFER,A0	;set up text pointer
  10174 FFFCCB06 4201                        	CLR.B	D1		;clear quote flag
  10175 FFFCCB08                             TOUPB1:
  10176 FFFCCB08 1018                        	MOVE.B	(A0)+,D0	;get the next text char.
  10177 FFFCCB0A B03C 000D                   	CMP.B	#CR,D0		;is it end of line?
  10178 FFFCCB0E 671A                        	BEQ	TOUPBRT 	;if so, return
  10179 FFFCCB10 B03C 0022                   	CMP.B	#'"',D0  ;       a double quote?
  10180 FFFCCB14 6716                        	BEQ	DOQUO
  10181 FFFCCB16 B03C 0027                   	CMP.B	#'''',D0  ;      or a single quote?
  10182 FFFCCB1A 6710                        	BEQ	DOQUO
  10183 FFFCCB1C 4A01                        	TST.B	D1		;inside quotes?
  10184 FFFCCB1E 66E8                        	BNE	TOUPB1		;if so, do the next one
  10185 FFFCCB20 6100 001A                   	BSR	TOUPPER 	;convert to upper case
  10186 FFFCCB24 1100                        	MOVE.B	D0,-(A0);	store it
  10187 FFFCCB26 5288                        	ADDQ.L	#1,A0
  10188 FFFCCB28 60DE                        	BRA	TOUPB1		;and go back for more
  10189 FFFCCB2A                             TOUPBRT:
  10190 FFFCCB2A 4E75                        	RTS
                                             
  10192 FFFCCB2C                             DOQUO:
  10193 FFFCCB2C 4A01                        	TST.B	D1	;	are we inside quotes?
  10194 FFFCCB2E 6604                        	BNE	DOQUO1
  10195 FFFCCB30 1200                        	MOVE.B	D0,D1	;	if not, toggle inside-quotes flag
  10196 FFFCCB32 60D4                        	BRA	TOUPB1
  10197 FFFCCB34                             DOQUO1:
  10198 FFFCCB34 B200                        	CMP.B	D0,D1	;	make sure we're ending proper quote
  10199 FFFCCB36 66D0                        	BNE	TOUPB1		;if not, ignore it
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 113
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10200 FFFCCB38 4201                        	CLR.B	D1		;else clear quote flag
  10201 FFFCCB3A 60CC                        	BRA	TOUPB1
                                             
                                             ;*
                                             ;* ===== Convert the character in D0 to upper case
                                             ;*
  10206 FFFCCB3C                             TOUPPER:
  10207 FFFCCB3C B03C 0061                   	CMP.B	#'a',D0   ;      is it < 'a'?
  10208 FFFCCB40 650A                        	BCS	TOUPRET
  10209 FFFCCB42 B03C 007A                   	CMP.B	#'z',D0        ; or > 'z'?
  10210 FFFCCB46 6204                        	BHI	TOUPRET
  10211 FFFCCB48 0400 0020                   	SUB.B	#32,D0		;if not, make it upper case
  10212 FFFCCB4C                             TOUPRET:
  10213 FFFCCB4C 4E75                        	RTS
                                             
                                             ;*
                                             ;* 'CHKIO' checks the input. If there's no input, it will return
                                             ;* to the caller with the Z flag set. If there is input, the Z
                                             ;* flag is cleared and the input byte is in D0. However, if a
                                             ;* control-C is read, 'CHKIO' will warm-start BASIC and will not
                                             ;* return to the caller.
                                             ;*
  10222 FFFCCB4E                             CHKIO:
  10223 FFFCCB4E 6100 F4BC                   	BSR.L	GOIN	;	get input if possible
  10224 FFFCCB52 670A                        	BEQ	CHKRET		;if Zero, no input
  10225 FFFCCB54 B03C 0003                   	CMP.B	#CTRLC,D0	;is it control-C?
  10226 FFFCCB58 6604                        	BNE	CHKRET		;if not
  10227 FFFCCB5A 6000 F504                   	BRA.L	WSTART		;if so, do a warm start
  10228 FFFCCB5E                             CHKRET:
  10229 FFFCCB5E 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Display a CR-LF sequence
                                             ;*
  10234 FFFCCB60                             CRLF:
  10235 FFFCCB60 4DF9 FFFC CBED              	LEA	CLMSG,A6
                                             
                                             ;*
                                             ;* ===== Display a zero-ended string pointed to by register A6
                                             ;*
  10240 FFFCCB66                             PRMESG:
  10241 FFFCCB66 101E                        	MOVE.B	(A6)+,D0	;get the char.
  10242 FFFCCB68 6706                        	BEQ	PRMRET		;if it's zero, we're done
  10243 FFFCCB6A 6100 F49C                   	BSR	GOOUT		;else display it
  10244 FFFCCB6E 60F6                        	BRA	PRMESG
  10245 FFFCCB70                             PRMRET:
  10246 FFFCCB70 4E75                        	RTS
                                             
                                             ;******************************************************
                                             ;* The following routines are the only ones that need *
                                             ;* to be changed for a different I/O environment.     *
                                             ;******************************************************
                                             
                                             UART		EQU		0xFFDC0A00
                                             UART_LS		EQU		UART+1
                                             UART_CTRL	EQU		UART+7
                                             KEYBD		EQU		0xFFDC0000
                                             
                                             
                                             ;*
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 114
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* ===== Output character to the console (Port 1) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10263 FFFCCB72                             OUTC:
  10264 FFFCCB72 48E7 C000                   	MOVEM.L	D0/D1,-(SP)
  10265 FFFCCB76 2200                        	MOVE.L	D0,D1
  10266 FFFCCB78 7006                        	MOVEQ	#6,D0
  10267 FFFCCB7A 4E4F                        	TRAP	#15
  10268 FFFCCB7C 4CDF 0003                   	MOVEM.L	(SP)+,D0/D1
  10269 FFFCCB80 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the console into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10275 FFFCCB82                             INC:
  10276 FFFCCB82 2F01                        	move.l	d1,-(a7)
  10277 FFFCCB84 7007                        	moveq	#7,d0		; check for key
  10278 FFFCCB86 4E4F                        	trap	#15
  10279 FFFCCB88 4A00                        	tst.b	d0
  10280 FFFCCB8A 670A                        	beq.s	.0001
  10281 FFFCCB8C 7005                        	moveq	#5,d0
  10282 FFFCCB8E 4E4F                        	trap	#15
  10283 FFFCCB90 2001                        	move.l	d1,d0
  10284 FFFCCB92 221F                        	move.l	(a7)+,d1
  10285 FFFCCB94 4A00                        	tst.b	d0
  10286 FFFCCB96                             .0001:
  10287 FFFCCB96 4E75                        	rts
                                             
                                             ;*
                                             ;* ===== Output character to the host (Port 2) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10293 FFFCCB98                             AUXOUT:
  10294 FFFCCB98 0839 0005 FFDC 0A01         	BTST	#5,UART_LS	;is port ready for a character?
  10295 FFFCCBA0 67F6                        	BEQ		AUXOUT		;if not, wait for it
  10296 FFFCCBA2 13C0 FFDC 0A00              	MOVE.B	D0,UART		;out it goes.
  10297 FFFCCBA8 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the host into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10303 FFFCCBAA                             AUXIN:
  10304 FFFCCBAA 0839 0000 FFDC 0A01         	BTST	#0,UART_LS	;is character ready?
  10305 FFFCCBB2 670A                        	BEQ		AXIRET		;if not, return Zero status
  10306 FFFCCBB4 1039 FFDC 0A00              	MOVE.B	UART,D0		;else get the character
  10307 FFFCCBBA 0200 007F                   	AND.B	#0x7F,D0 	;zero out the high bit
  10308 FFFCCBBE                             AXIRET:
  10309 FFFCCBBE 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Return to the resident monitor, operating system, etc.
                                             ;*
  10314 FFFCCBC0                             BYEBYE:
  10315 FFFCCBC0 1E3C 00E4                   	MOVE.B	#228,D7 	;return to Tutor
  10316 FFFCCBC4 4E4E                        	TRAP	#14
                                             
  10318 FFFCCBC6                             INITMSG:
  10319 FFFCCBC6 0D 0A 47 6F 72 64 6F 0D     	DC.B	CR,LF,'Gordo''s MC68000 Tiny BASIC, v1.2',CR,LF,LF,0
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 115
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10320 FFFCCBCE 0A 0A 00                    
  10321 FFFCCBD1                             OKMSG:
  10322 FFFCCBD1 0D 0A 4F 4B 0D 0A 00        	DC.B	CR,LF,'OK',CR,LF,0
  10323 FFFCCBD8                             HOWMSG:
  10324 FFFCCBD8 48 6F 77 3F 0D 0A 00        	DC.B	'How?',CR,LF,0
  10325 FFFCCBDF                             WHTMSG:
  10326 FFFCCBDF 57 68 61 74 3F 0D 0A 00     	DC.B	'What?',CR,LF,0
                                             
  10328 FFFCCBE7                             SRYMSG:
  10329 FFFCCBE7 53 6F 72 72 79 2E           	DC.B	'Sorry.'
  10330 FFFCCBED                             CLMSG:
  10331 FFFCCBED 0D 0A 00                    	DC.B	CR,LF,0
  10332 FFFCCBF0 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             LSTROM	EQU		$
                                             	;	end of possible ROM area
                                             
Finitron asm68 assembler    version 5.6   Tue Dec 05 17:13:09 2017     Page 115
bootrom.asm


                                             .include C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             	;
                                             
                                             
