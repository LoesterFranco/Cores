Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 1
bootrom.asm

                                             ; N4V68kSys bootrom - (C) 2017 Robert Finch, Waterloo
                                             ;
                                             ; This file is part of N4V68kSys
                                             ;
                                             ; how to build:
                                             ; 1. assemble using "asm68 bootrom.asm /G00 /olyebvm"
                                             ; 2. copy bootrom.vh to the correct directory if not already there
                                             ;
                                             ;------------------------------------------------------------------------------
                                             ;
                                             ; system memory map
                                             ;
                                             ;
                                             ; 00000000 +----------------+
                                             ;          | startup sp,pc  | 8 B
                                             ; 00000008 +----------------+
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ;          :  dram memory   : 512 MB
                                             ;          |                |
                                             ;          |                |
                                             ;          |                |
                                             ; 20000000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FF800000 +----------------+
                                             ;          |                |
                                             ;          : display buffer : 1.0 MB
                                             ;          |                |
                                             ; FF900000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFD00000 +----------------+
                                             ;          |                |
                                             ;          :    I/O area    : 1.0 M
                                             ;          |                |
                                             ; FFE00000 +----------------+
                                             ;          |   VDG regs     |
                                             ; FFE01000 +----------------+
                                             ;          |                |
                                             ;          :     unused     :
                                             ;          |                |
                                             ; FFFC0000 +----------------+
                                             ;          |                |
                                             ;          :    boot rom    :
                                             ;          |                |
                                             ; FFFFFFFF +----------------+
                                             ;
                                             ;
                                             RGBMASK		EQU		%0111111111111111
                                             RED			EQU		%0111110000000000
                                             DARK_BLUE	EQU		%0000000000001111
                                             BLACK		EQU		%0000000000000000
                                             WHITE		EQU		%0111111111111111
                                             
                                             CTRLC	EQU		$03
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 2
bootrom.asm
                                             CTRLH	EQU		$08
                                             CTRLX	EQU		$18
                                             LF		EQU		$0A
                                             CR		EQU		$0D
                                             
                                             SC_F12  EQU    $07
                                             SC_C    EQU    $21
                                             SC_T    EQU    $2C
                                             SC_Z    EQU    $1A
                                             SC_KEYUP	EQU		$F0
                                             SC_EXTEND   EQU		$E0
                                             SC_CTRL		EQU		$14
                                             SC_RSHIFT	EQU		$59
                                             SC_NUMLOCK	EQU		$77
                                             SC_SCROLLLOCK	EQU	$7E
                                             SC_CAPSLOCK		EQU	$58
                                             SC_ALT		EQU		$11
                                             SC_LSHIFT	EQU		$12
                                             SC_DEL		EQU		$71		; extend
                                             SC_LCTRL	EQU		$58
                                             SC_TAB      EQU		$0D
                                             
                                             TEXTCOLS	EQU	50
                                             TEXTROWS	EQU	37
                                             BMP_WIDTH	EQU	400
                                             BMP_HEIGHT	EQU	300
                                             
                                             VDGBUF		EQU	$FF800000
                                             VDGREG		EQU	$FFE00000
                                             VDG_CURX	EQU	$0440
                                             VDG_CURY	EQU	$0442
                                             VDG_CURSZ	EQU	$0444
                                             VDG_CURFLSH	EQU	$0446
                                             VDG_CUR0X	EQU	$0204
                                             VDG_CUR0Y	EQU	$0206
                                             VDG_CURCLR0	EQU	$0448
                                             VDG_CURCLR1	EQU	$044A
                                             VDG_CURCLR2	EQU	$044C
                                             VDG_CURCLR3	EQU	$044E
                                             VDG_CURIMG	EQU	$0460
                                             I2C			EQU	$FFDC0E00
                                             I2C2		EQU	$FFDC0E10
                                             VirtScreen	EQU	$1FFF0000
                                             KEYBD		EQU	$FFDC0000
                                             leds		EQU	$FFDC0600
                                             rand		EQU	$FFDC0C00
                                             
                                             fgcolor		EQU	$10002
                                             bkcolor		EQU	$10004
                                             fntsz		EQU	$10006
                                             memend		EQU	$10008
                                             CursorRow	EQU	$10418
                                             CursorCol	EQU $10419
                                             TextRows	EQU	$1041A
                                             TextCols	EQU	$1041B
                                             TextCurpos	EQU	$1041C
                                             TextScr		EQU	$10420
                                             KeybdEcho		EQU	$10424
                                             KeybdWaitFlag	EQU	$10425
                                             _KeyState1		EQU	$10426
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 3
bootrom.asm
                                             _KeyState2		EQU	$10427
                                             KeybdLEDs		EQU	$10428
                                             gfx_control_reg_mem		EQU	$1042C
                                             milliseconds	EQU	$10430
                                             systick			EQU	$10434
                                             S19StartAddress	EQU	$10438
                                             
                                             ball_dx			EQU	$10500
                                             ball_dy			EQU	$10600
                                             
                                             GFX_CONTROL			EQU		$00
                                             GFX_STATUS			EQU		$04
                                             GFX_TARGET_BASE		EQU		$10
                                             GFX_TARGET_SIZE_X	EQU		$14
                                             GFX_TARGET_SIZE_Y	EQU		$18
                                             GFX_DEST_PIXEL_X	EQU		$38
                                             GFX_DEST_PIXEL_Y	EQU		$3C
                                             GFX_DEST_PIXEL_Z	EQU		$40
                                             GFX_COLOR0			EQU		$84
                                             
                                             GFX_ACTIVE_POINT0	EQU		0
                                             GFX_ACTIVE_POINT1	EQU		$10000
                                             GFX_LINE			EQU		$200
                                             
                                             reg_d0			EQU	$10500
                                             reg_d1			EQU	$10504
                                             reg_d2			EQU	$10508
                                             reg_d3			EQU	$1050C
                                             reg_d4			EQU $10510
                                             reg_d5			EQU $10514
                                             reg_d6			EQU	$10518
                                             reg_d7			EQU	$1051C
                                             reg_a0			EQU $10520
                                             reg_a1			EQU	$10524
                                             reg_a2			EQU	$10528
                                             reg_a3			EQU $1052C
                                             reg_a4			EQU $10530
                                             reg_a5			EQU $10534
                                             reg_a6			EQU $10538
                                             reg_ssp			EQU	$1053C
                                             reg_usp			EQU	$10540
                                             reg_pc			EQU $10544
                                             reg_sr			EQU	$10548
                                             
                                             RTCBuf			EQU	$10600
                                             RTFBufEnd		EQU	$10660
                                             CmdBuf			EQU	$10800
                                             CmdBufEnd		EQU	$10850
                                             
                                             
                                             	code
                                             	org		$FFFC0000
    172 FFFC0000 600E                        	bra.s	Start
    173 FFFC0002 FF FF                       	align	4
                                             
                                             ;------------------------------------------------------------------------------
                                             
                                             ;	dc.l	$FF401000	; initial SSP
    178 FFFC0004 FFFC0010                    	dc.l	Start		; initial PC
                                             	
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 4
bootrom.asm
                                             ;------------------------------------------------------------------------------
    181 FFFC0008                             fpga_version:
    182 FFFC0008 41 41 30 30 30 30 30 30     	dc.b	"AA000000"	; FPGA core version - 8 ASCII characters
                                             
                                             
                                             ;------------------------------------------------------------------------------
    186 FFFC0010                             	Start:
                                             ;------------------------------------------------------------------------------
    188 FFFC0010 33FC A1A1 FFDC 0600         		move.w	#$A1A1,leds		; diagnostics
    189 FFFC0018 2E7C FF40 1000              		move.l	#$FF401000,sp	; set stack pointer
    190 FFFC001E 003C 0080                   		ori.b	#$80,ccr		; select big endian mode for lword data access
                                             
                                             		; SIM croaked because the upper half of D1 was undefined. This caused
                                             		; problems with a dbra instruction. So the contents of all the registers
                                             		; are defined at startup. This is only needed for SIM.
    195 FFFC0022 7000                        		moveq	#0,D0
    196 FFFC0024 7200                        		moveq	#0,D1				; for SIM
    197 FFFC0026 7400                        		moveq	#0,D2
    198 FFFC0028 7600                        		moveq	#0,D3
    199 FFFC002A 7800                        		moveq	#0,D4
    200 FFFC002C 7A00                        		moveq	#0,D5
    201 FFFC002E 7C00                        		moveq	#0,D6
    202 FFFC0030 7E00                        		moveq	#0,D7
    203 FFFC0032 4288                        		clr.l	A0
    204 FFFC0034 4289                        		clr.l	A1
    205 FFFC0036 428A                        		clr.l	A2
    206 FFFC0038 428B                        		clr.l	A3
    207 FFFC003A 428C                        		clr.l	A4
    208 FFFC003C 428D                        		clr.l	A5
    209 FFFC003E 428E                        		clr.l	A6
                                             ;		move.l	A7,usp
                                             
                                             		; setup vector table
                                             		;
    214 FFFC0040 023C 007F                   		andi.b	#$7F,ccr
                                             ;		lea		BusError,a0
                                             ;		move.l	a0,0x008		; set bus error vector
    217 FFFC0044 41F9 FFFC 0138              		lea		IllegalInstruction,a0
    218 FFFC004A 21C8 0010                   		move.l	a0,0x010
    219 FFFC004E 41F9 FFFC 011E              		lea		Pulse1000,a0
    220 FFFC0054 21C8 0078                   		move.l	a0,0x078		; set autovector 6
                                             ;		lea		KeybdNMI,a0
                                             ;		move.l	a0,0x07C		; set autovector 7
    223 FFFC0058 41F9 FFFC 015A              		lea		TRAP15,a0
    224 FFFC005E 21C8 00BC                   		move.l	a0,188			; set trap 15 vector
    225 FFFC0062 003C 0080                   		ori.b	#$80,ccr
                                             
                                             ;		bsr		mmu_init
    228 FFFC0066 6100 1BCC                   		bsr		i2c_setup
                                             ;		bsr		rtc_read
    230 FFFC006A 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds		; diagnostics
                                             
    232 FFFC0072 4239 0001 0419              		clr.b	CursorCol
    233 FFFC0078 4239 0001 0418              		clr.b	CursorRow
    234 FFFC007E 4279 0001 041C              		clr.w	TextCurpos
    235 FFFC0084 23FC 0002 0000 0001 0420    		move.l	#$00020000,TextScr		; set virtual screen location
                                             
                                             
    238 FFFC008E 4DF9 FFDC 0000              		lea	$FFDC0000,A6	; I/O base
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 5
bootrom.asm
                                             		; Initialize random number generator
                                             
    242 FFFC0094 426E 0C06                   		clr.w	$0C06(a6)				; select stream #0
    243 FFFC0098 2D7C 8888 8888 0C08         		move.l	#$88888888,$0C08(a6)	; set initial m_z
    244 FFFC00A0 2D7C 0123 4567 0C0C         		move.l	#$01234567,$0C0C(a6)	; set initial m_w
                                             
    246 FFFC00A8 6100 0460                   		bsr		Set400x300
                                             ;		bsr		Set800x600
    248 FFFC00AC 6100 058C                   		bsr		ColorBandMemory
    249 FFFC00B0 6100 0520                   		bsr		BootSetZBuffer
    250 FFFC00B4 6100 073C                   		bsr		InitCursorColorPalette
                                             ;		bsr		SetCursorColor
                                             ;		bsr		SetCursorImage
    253 FFFC00B8 6100 076E                   		bsr		SetCursorImage64
    254 FFFC00BC 6100 0698                   		bsr		EnableCursor
                                             
    256 FFFC00C0 6100 053A                   		bsr		BootClearScreen		
    257 FFFC00C4 33FC A2A2 FFDC 0600         		move.w	#$A2A2,leds			; diagnostics
                                             		
                                             		; turn on audio test mode
    260 FFFC00CC 4DF9 FFDC 0000              		lea		$FFDC0000,A6		; set I/O base
    261 FFFC00D2 3D7C FFFF 0700              		move.w	#$FFFF,$0700(a6)	; turn on audio clocks
    262 FFFC00D8 2A7C FFE0 0000              		movea.l	#VDGREG,a5
    263 FFFC00DE 3B7C 4000 0650              		move.w	#%0100000000000000,$650(a5)
                                             
                                             ;		bsr		DrawLines
                                             ;		bsr		TestBlitter
                                             
    268 FFFC00E4 6100 058C                   		bsr		BootCopyFont
    269 FFFC00E8 33FC A3A3 FFDC 0600         		move.w	#$A3A3,leds			; diagnostics
                                             
    271 FFFC00F0 33FC 7FFF 0001 0002         		move.w	#WHITE,fgcolor		; set text colors
    272 FFFC00F8 33FC 000F 0001 0004         		move.w	#DARK_BLUE,bkcolor
                                             
                                             		; Write startup message to screen
                                             
    276 FFFC0100 43F9 FFFC 21A8              		lea		msg_start,a1
    277 FFFC0106 6100 032E                   		bsr		DisplayString
    278 FFFC010A 33FC A4A4 FFDC 0600         		move.w	#$A4A4,leds			; diagnostics
                                             
    280 FFFC0112 47F9 FFFC 011C              		lea		j1,a3
    281 FFFC0118 6000 1178                   		bra		DisplayHelp
    282 FFFC011C                             j1:
    283 FFFC011C 60FE                        		bra		j1
                                             
                                             ;------------------------------------------------------------------------------
                                             ; 1000 Hz interrupt
                                             ;------------------------------------------------------------------------------
                                             ;
    289 FFFC011E                             Pulse1000:
    290 FFFC011E 52B9 0001 0430              		add.l	#1,milliseconds
    291 FFFC0124 5279 0001 0434              		add.w	#1,systick
    292 FFFC012A 0279 001F 0001 0434         		and.w	#$1F,systick
    293 FFFC0132 6702                        		beq.s	Pulse31
    294 FFFC0134 4E73                        		rte
    295 FFFC0136                             Pulse31:
    296 FFFC0136 4E73                        		rte
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 6
bootrom.asm
                                             
    301 FFFC0138                             IllegalInstruction:
    302 FFFC0138 43F9 FFFC 0146              		lea		MSG_ILLEGAL_INSN,a1
    303 FFFC013E 4EB9 FFFC 0436              		jsr		DisplayString
    304 FFFC0144 4E73                        		rte
                                             
    306 FFFC0146                             MSG_ILLEGAL_INSN:
    307 FFFC0146 49 6C 6C 65 67 61 6C 20     		dc.b	"Illegal instruction",0
    308 FFFC014E 69 6E 73 74 72 75 63 74     
    309 FFFC0156 69 6F 6E 00                 
                                             
                                             		align	2
                                             
                                             ;------------------------------------------------------------------------------
                                             ; TRAP #15 handler
                                             ;------------------------------------------------------------------------------
                                             ;
    317 FFFC015A                             TRAP15:
    318 FFFC015A 48E7 8080                   		movem.l	d0/a0,-(a7)
    319 FFFC015E 41F9 FFFC 0174              		lea		T15DispatchTable,a0
    320 FFFC0164 E580                        		asl.l	#2,d0
    321 FFFC0166 2070 0000                   		move.l	(a0,d0.w),a0
    322 FFFC016A 4E90                        		jsr		(a0)
    323 FFFC016C 4CDF 0101                   		movem.l	(a7)+,d0/a0
    324 FFFC0170 4E73                        		rte
                                             
    326 FFFC0172 FF FF                       		align	4
    327 FFFC0174                             T15DispatchTable:
    328 FFFC0174 FFFC0214                    dc.l	StubRout
    329 FFFC0178 FFFC0214                    dc.l	StubRout
    330 FFFC017C FFFC0214                    dc.l	StubRout
    331 FFFC0180 FFFC0214                    dc.l	StubRout
    332 FFFC0184 FFFC0214                    dc.l	StubRout
    333 FFFC0188 FFFC0C5A                    dc.l	GetKey
    334 FFFC018C FFFC0264                    dc.l	DisplayChar
    335 FFFC0190 FFFC0C48                    dc.l	CheckForKey
    336 FFFC0194 FFFC0214                    dc.l	StubRout
    337 FFFC0198 FFFC0214                    dc.l	StubRout
    338 FFFC019C FFFC0214                    dc.l	StubRout
    339 FFFC01A0 FFFC0480                    dc.l	Cursor1
    340 FFFC01A4 FFFC0216                    dc.l	SetKeyboardEcho
    341 FFFC01A8 FFFC0450                    dc.l	DisplayStringCRLF
    342 FFFC01AC FFFC0436                    dc.l	DisplayString
    343 FFFC01B0 FFFC0214                    dc.l	StubRout
    344 FFFC01B4 FFFC0214                    dc.l	StubRout
    345 FFFC01B8 FFFC0214                    dc.l	StubRout
    346 FFFC01BC FFFC0214                    dc.l	StubRout
    347 FFFC01C0 FFFC0214                    dc.l	StubRout
    348 FFFC01C4 FFFC0214                    dc.l	StubRout
    349 FFFC01C8 FFFC0214                    dc.l	StubRout
    350 FFFC01CC FFFC0214                    dc.l	StubRout
    351 FFFC01D0 FFFC0214                    dc.l	StubRout
    352 FFFC01D4 FFFC0214                    dc.l	StubRout
    353 FFFC01D8 FFFC0214                    dc.l	StubRout
    354 FFFC01DC FFFC0214                    dc.l	StubRout
    355 FFFC01E0 FFFC0214                    dc.l	StubRout
    356 FFFC01E4 FFFC0214                    dc.l	StubRout
    357 FFFC01E8 FFFC0214                    dc.l	StubRout
    358 FFFC01EC FFFC0214                    dc.l	StubRout
    359 FFFC01F0 FFFC0214                    dc.l	StubRout
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 7
bootrom.asm
    360 FFFC01F4 FFFC0214                    dc.l	StubRout
    361 FFFC01F8 FFFC0214                    dc.l	StubRout
    362 FFFC01FC FFFC0214                    dc.l	StubRout
    363 FFFC0200 FFFC0214                    dc.l	StubRout
    364 FFFC0204 FFFC0214                    dc.l	StubRout
    365 FFFC0208 FFFC0214                    dc.l	StubRout
    366 FFFC020C FFFC0214                    dc.l	StubRout
    367 FFFC0210 FFFC0214                    dc.l	StubRout
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Stub routine for unimplemented functionality.
                                             ;------------------------------------------------------------------------------
                                             ;
    373 FFFC0214                             StubRout:
    374 FFFC0214 4E75                        	rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; d1.b 0=echo off, non-zero = echo on
                                             ;------------------------------------------------------------------------------
    379 FFFC0216                             SetKeyboardEcho:
    380 FFFC0216 13C1 0001 0424              	move.b	d1,KeybdEcho
    381 FFFC021C 4E75                        	rts
                                             
                                             
    384 FFFC021E                             CRLF:
    385 FFFC021E 2F01                        		move.l	d1,-(a7)
    386 FFFC0220 123C 000D                   		move.b	#'\r',d1
    387 FFFC0224 6100 003E                   		bsr		DisplayChar
    388 FFFC0228 123C 000A                   		move.b	#'\n',d1
    389 FFFC022C 6100 0036                   		bsr		DisplayChar
    390 FFFC0230 221F                        		move.l	(a7)+,d1
    391 FFFC0232 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Calculate screen memory location from CursorRow,CursorCol.
                                             ; Destroys d0,d2,a0
                                             ;------------------------------------------------------------------------------
                                             ;
    398 FFFC0234                             CalcScreenLoc:
    399 FFFC0234 1039 0001 0418              		move.b	CursorRow,d0		; compute screen location
    400 FFFC023A 0240 007F                   		andi.w	#0x7f,d0
    401 FFFC023E 1439 0001 041B              		move.b	TextCols,d2
    402 FFFC0244 4882                        		ext.w	d2
    403 FFFC0246 C0C2                        		mulu.w	d2,d0
    404 FFFC0248 1439 0001 0419              		move.b	CursorCol,d2
    405 FFFC024E 0242 00FF                   		andi.w	#0xff,d2
    406 FFFC0252 D042                        		add.w	d2,d0
    407 FFFC0254 33C0 0001 041C              		move.w	d0,TextCurpos
    408 FFFC025A D0B9 0001 0420              		add.l	TextScr,d0
    409 FFFC0260 2040                        		move.l	d0,a0				; a0 = screen location
    410 FFFC0262 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a character on the screen
                                             ; d1.b = char to display
                                             ;------------------------------------------------------------------------------
                                             ;
    417 FFFC0264                             DisplayChar:
    418 FFFC0264 48E7 3000                   		movem.l	d2/d3,-(a7)
    419 FFFC0268 0C01 000D                   		cmpi.b	#'\r',d1			; carriage return ?
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 8
bootrom.asm
    420 FFFC026C 660C                        		bne.s	dccr
    421 FFFC026E 4239 0001 0419              		clr.b	CursorCol			; just set cursor column to zero on a CR
    422 FFFC0274 4CDF 000C                   		movem.l	(a7)+,d2/d3
    423 FFFC0278 4E75                        		rts
    424 FFFC027A                             dccr:
    425 FFFC027A 0C01 0091                   		cmpi.b	#0x91,d1			; cursor right ?
    426 FFFC027E 6620                        		bne.s   dcx6
    427 FFFC0280 1439 0001 041B              		move.b	TextCols,d2
    428 FFFC0286 5302                        		sub.b	#1,d2
    429 FFFC0288 9439 0001 0419              		sub.b	CursorCol,d2
    430 FFFC028E 670A                        		beq.s	dcx7
    431 FFFC0290 5239 0001 0419              		addi.b	#1,CursorCol
    432 FFFC0296                             dcx14:
    433 FFFC0296 6100 04F6                   		bsr		SyncCursor
    434 FFFC029A                             dcx7:
    435 FFFC029A 4CDF 000C                   		movem.l	(a7)+,d2/d3
    436 FFFC029E 4E75                        		rts
    437 FFFC02A0                             dcx6:
    438 FFFC02A0 0C01 0090                   		cmpi.b	#0x90,d1			; cursor up ?
    439 FFFC02A4 6612                        		bne.s	dcx8
    440 FFFC02A6 0C39 0000 0001 0418         		cmpi.b	#0,CursorRow
    441 FFFC02AE 67EA                        		beq.s	dcx7
    442 FFFC02B0 5339 0001 0418              		subi.b	#1,CursorRow
    443 FFFC02B6 60DE                        		bra.s	dcx14
    444 FFFC02B8                             dcx8:
    445 FFFC02B8 0C01 0093                   		cmpi.b	#0x93,d1			; cursor left?
    446 FFFC02BC 6612                        		bne.s	dcx9
    447 FFFC02BE 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    448 FFFC02C6 67D2                        		beq.s	dcx7
    449 FFFC02C8 5339 0001 0419              		subi.b	#1,CursorCol
    450 FFFC02CE 60C6                        		bra.s	dcx14
    451 FFFC02D0                             dcx9:
    452 FFFC02D0 0C01 0092                   		cmpi.b	#0x92,d1			; cursor down ?
    453 FFFC02D4 6618                        		bne.s	dcx10
    454 FFFC02D6 1439 0001 041A              		move.b	TextRows,d2
    455 FFFC02DC 5302                        		sub.b	#1,d2
    456 FFFC02DE B439 0001 0418              		cmp.b	CursorRow,d2
    457 FFFC02E4 67B4                        		beq.s	dcx7
    458 FFFC02E6 5239 0001 0418              		addi.b	#1,CursorRow
    459 FFFC02EC 60A8                        		bra.s	dcx14
    460 FFFC02EE                             dcx10:
    461 FFFC02EE 0C01 0094                   		cmpi.b	#0x94,d1			; cursor home ?
    462 FFFC02F2 661A                        		bne.s	dcx11
    463 FFFC02F4 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol
    464 FFFC02FC 6708                        		beq.s	dcx12
    465 FFFC02FE 4239 0001 0419              		clr.b	CursorCol
    466 FFFC0304 6090                        		bra.s	dcx14
    467 FFFC0306                             dcx12:
    468 FFFC0306 4239 0001 0418              		clr.b	CursorRow
    469 FFFC030C 6088                        		bra.s	dcx14
    470 FFFC030E                             dcx11:
    471 FFFC030E 48E7 E080                   		movem.l	d0/d1/d2/a0,-(a7)
    472 FFFC0312 0C01 0099                   		cmpi.b	#0x99,d1			; delete ?
    473 FFFC0316 6756                        		beq.s	doDelete
    474 FFFC0318 0C01 0008                   		cmpi.b	#CTRLH,d1			; backspace ?
    475 FFFC031C 6740                        		beq.s   doBackspace
    476 FFFC031E 0C01 0018                   		cmpi.b	#CTRLX,d1			; delete line ?
    477 FFFC0322 6700 0096                   		beq.s	doCtrlX
    478 FFFC0326 0C01 000A                   		cmpi.b	#'\n',d1		; linefeed ?
    479 FFFC032A 6720                        		beq.s	dclf
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 9
bootrom.asm
                                             
                                             		; regular char
    482 FFFC032C 6100 FF06                   		bsr		CalcScreenLoc	; a0 = screen location
    483 FFFC0330 1081                        		move.b	d1,(a0)
    484 FFFC0332 1001                        		move.b	d1,d0
    485 FFFC0334 4880                        		ext.w	d0
    486 FFFC0336 6100 03C4                   		bsr		DispChar
    487 FFFC033A 6100 00A4                   		bsr		IncCursorPos
    488 FFFC033E 6100 044E                   		bsr		SyncCursor
    489 FFFC0342 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0
    490 FFFC0346 4CDF 000C                   		movem.l	(a7)+,d2/d3
    491 FFFC034A 4E75                        		rts
    492 FFFC034C                             dclf:
    493 FFFC034C 6100 00B2                   		bsr		IncCursorRow
    494 FFFC0350                             dcx16:
    495 FFFC0350 6100 043C                   		bsr		SyncCursor
    496 FFFC0354                             dcx4:
    497 FFFC0354 4CDF 0107                   		movem.l	(a7)+,d0/d1/d2/a0		; get back a0
    498 FFFC0358 4CDF 000C                   		movem.l	(a7)+,d2/d3
    499 FFFC035C 4E75                        		rts
                                             
                                             		;---------------------------
                                             		; CTRL-H: backspace
                                             		;---------------------------
    504 FFFC035E                             doBackspace:
    505 FFFC035E 0C39 0000 0001 0419         		cmpi.b	#0,CursorCol		; if already at start of line
    506 FFFC0366 67EC                        		beq.s   dcx4				; nothing to do
    507 FFFC0368 5339 0001 0419              		subi.b	#1,CursorCol		; decrement column
                                             
                                             		;---------------------------
                                             		; Delete key
                                             		;---------------------------
    512 FFFC036E                             doDelete:
    513 FFFC036E 6100 FEC4                   		bsr		CalcScreenLoc		; a0 = screen location
    514 FFFC0372 2F08                        		move.l	a0,-(a7)			; save off screen location
    515 FFFC0374 1039 0001 0419              		move.b	CursorCol,d0
    516 FFFC037A                             .0001:
    517 FFFC037A 10E8 0001                   		move.b	1(a0),(a0)+			; pull remaining characters on line over 1
    518 FFFC037E 5200                        		addi.b	#1,d0
    519 FFFC0380 B039 0001 041B              		cmp.b	TextCols,d0
    520 FFFC0386 65F2                        		blo.s	.0001
    521 FFFC0388 103C 0020                   		move.b	#' ',d0				; terminate line with a space
    522 FFFC038C 1140 FFFF                   		move.b	d0,-1(a0)
                                             		; now re-render the chars to the display
    524 FFFC0390 205F                        		move.l	(a7)+,a0			; get back screen location
    525 FFFC0392 1439 0001 0419              		move.b	CursorCol,d2		; save off cursor column
    526 FFFC0398                             .0002:
    527 FFFC0398 1018                        		move.b	(a0)+,d0			; get a char
    528 FFFC039A 6100 0360                   		bsr		DispChar			; render to screen
    529 FFFC039E 5239 0001 0419              		add.b	#1,CursorCol		; increment column
    530 FFFC03A4 1039 0001 0419              		move.b	CursorCol,d0		; check if end of line hit
    531 FFFC03AA 9039 0001 041B              		sub.b	TextCols,d0
    532 FFFC03B0 66E6                        		bne.s	.0002				; no, go back
    533 FFFC03B2 13C2 0001 0419              		move.b	d2,CursorCol		; restore cursor pos
    534 FFFC03B8 6096                        		bra.s	dcx16				; finished
                                             		;---------------------------
                                             		; CTRL-X: erase line
                                             		;---------------------------
    538 FFFC03BA                             doCtrlX:
    539 FFFC03BA 4239 0001 0419              		clr.b	CursorCol			; Reset cursor to start of line
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 10
bootrom.asm
    540 FFFC03C0 1039 0001 041B              		move.b	TextCols,d0			; and display TextCols number of spaces
    541 FFFC03C6 4880                        		ext.w	d0
    542 FFFC03C8 48C0                        		ext.l	d0
    543 FFFC03CA 123C 0020                   		move.b	#' ',d1				; d1 = space char
    544 FFFC03CE                             .0001:
                                             		; DisplayChar is called recursively here
                                             		; It's safe to do because we know it won't recurse again due to the
                                             		; fact we know the character being displayed is a space char
    548 FFFC03CE 6100 FE94                   		bsr		DisplayChar			
    549 FFFC03D2 5380                        		subq	#1,d0
    550 FFFC03D4 66F8                        		bne.s	.0001
    551 FFFC03D6 4239 0001 0419              		clr.b	CursorCol			; now really go back to start of line
    552 FFFC03DC 6000 FF72                   		bra.s	dcx16				; we're done
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Increment the cursor position, scroll the screen if needed.
                                             ;------------------------------------------------------------------------------
                                             ;
    558 FFFC03E0                             IncCursorPos:
    559 FFFC03E0 5279 0001 041C              		addi.w	#1,TextCurpos
    560 FFFC03E6 5239 0001 0419              		addi.b	#1,CursorCol
    561 FFFC03EC 1039 0001 041B              		move.b	TextCols,d0
    562 FFFC03F2 B039 0001 0419              		cmp.b	CursorCol,d0
    563 FFFC03F8 643A                        		bhs.s	icc1
    564 FFFC03FA 4239 0001 0419              		clr.b	CursorCol
    565 FFFC0400                             IncCursorRow:
    566 FFFC0400 5239 0001 0418              		addi.b	#1,CursorRow
    567 FFFC0406 1039 0001 041A              		move.b	TextRows,d0
    568 FFFC040C B039 0001 0418              		cmp.b	CursorRow,d0
    569 FFFC0412 6220                        		bhi.s	icc1
    570 FFFC0414 1039 0001 041A              		move.b	TextRows,d0
    571 FFFC041A 13C0 0001 0418              		move.b	d0,CursorRow		; in case CursorRow is way over
    572 FFFC0420 5339 0001 0418              		subi.b	#1,CursorRow
    573 FFFC0426 4880                        		ext.w	d0
    574 FFFC0428 E340                        		asl.w	#1,d0
    575 FFFC042A 9179 0001 041C              		sub.w	d0,TextCurpos
    576 FFFC0430 6100 11C8                   		bsr		ScrollUp
    577 FFFC0434                             icc1:
    578 FFFC0434 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen.
                                             ;------------------------------------------------------------------------------
                                             ;
    584 FFFC0436                             DisplayString:
    585 FFFC0436 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    586 FFFC043A                             dspj1:
    587 FFFC043A 4281                        		clr.l	d1				; clear upper bits of d1
    588 FFFC043C 1219                        		move.b	(a1)+,d1		; move string char into d1
    589 FFFC043E 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    590 FFFC0442 6706                        		beq.s	dsret			
    591 FFFC0444 6100 FE1E                   		bsr		DisplayChar		; display character
    592 FFFC0448 60F0                        		bra.s	dspj1			; go back for next character
    593 FFFC044A                             dsret:
    594 FFFC044A 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    595 FFFC044E 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen followed by carriage return / linefeed.
                                             ;------------------------------------------------------------------------------
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 11
bootrom.asm
                                             ;
    601 FFFC0450                             DisplayStringCRLF:
    602 FFFC0450 6100 FFE4                   		bsr		DisplayString
    603 FFFC0454 6000 FDC8                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ;------------------------------------------------------------------------------
                                             ;
    609 FFFC0458                             DisplayString1:
    610 FFFC0458 48E7 C040                   		movem.l	d0/d1/a1,-(a7)
    611 FFFC045C 0241 00FF                   		andi.w	#255,d1			; max 255 chars
    612 FFFC0460 2001                        		move.l	d1,d0
    613 FFFC0462                             dspj11:
    614 FFFC0462 1219                        		move.b	(a1)+,d1		; move string char into d1
    615 FFFC0464 0C01 0000                   		cmpi.b	#0,d1			; is it end of string ?
    616 FFFC0468 6708                        		beq		dsret1			
    617 FFFC046A 6100 FDF8                   		bsr		DisplayChar		; display character
    618 FFFC046E 57C8 FFF2                   		dbeq	d0,dspj11		; go back for next character
    619 FFFC0472                             dsret1:
    620 FFFC0472 4CDF 0203                   		movem.l	(a7)+,d0/d1/a1
    621 FFFC0476 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display a string on the screen. Stop at 255 chars, or NULL or D1.W
                                             ; end string with CR,LF
                                             ;------------------------------------------------------------------------------
                                             ;
    628 FFFC0478                             DisplayString0:
    629 FFFC0478 6100 FFDE                   		bsr		DisplayString1
    630 FFFC047C 6000 FDA0                   		bra		CRLF
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Dispatch cursor functions
                                             ;------------------------------------------------------------------------------
                                             ;
    636 FFFC0480                             Cursor1:
    637 FFFC0480 0C41 00FF                   		cmpi.w	#0x00ff,d1
    638 FFFC0484 670E                        		beq		GetCursorPos
    639 FFFC0486 0C41 FF00                   		cmpi.w	#0xFF00,d1
    640 FFFC048A 6718                        		beq		SetCursorPos
    641 FFFC048C 4EB9 FFFC 1568              		jsr		ClearScreen
    642 FFFC0492 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get the cursor position.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
                                             ;------------------------------------------------------------------------------
                                             ;
    650 FFFC0494                             GetCursorPos:
    651 FFFC0494 1239 0001 0419              		move.b	CursorCol,d1
    652 FFFC049A E141                        		asl.w	#8,d1
    653 FFFC049C 1239 0001 0418              		move.b	CursorRow,d1
    654 FFFC04A2 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Set the position of the cursor, update the linear screen pointer.
                                             ; d1.b0 = row
                                             ; d1.b1 = col
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 12
bootrom.asm
                                             ;------------------------------------------------------------------------------
                                             ;
    662 FFFC04A4                             SetCursorPos:
    663 FFFC04A4 48E7 6000                   		movem.l	d1/d2,-(a7)
    664 FFFC04A8 13C1 0001 0418              		move.b	d1,CursorRow
    665 FFFC04AE E049                        		lsr.w	#8,d1
    666 FFFC04B0 13C1 0001 0419              		move.b	d1,CursorCol
    667 FFFC04B6 1239 0001 0418              		move.b	CursorRow,d1
    668 FFFC04BC 4881                        		ext.w	d1
    669 FFFC04BE 1439 0001 041B              		move.b	TextCols,d2
    670 FFFC04C4 4882                        		ext.w	d2
    671 FFFC04C6 C2C2                        		mulu.w	d2,d1
    672 FFFC04C8 1439 0001 0419              		move.b	CursorCol,d2
    673 FFFC04CE D242                        		add.w	d2,d1
    674 FFFC04D0 33C1 0001 041C              		move.w	d1,TextCurpos
    675 FFFC04D6                             scp1:
    676 FFFC04D6 4CDF 0006                   		movem.l	(a7)+,d1/d2
    677 FFFC04DA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
    682 FFFC04DC                             Set320x192:
    683 FFFC04DC 4DF9 FFE0 0000              		lea		VDGREG,a6			; a6 = pointer to register set
    684 FFFC04E2 41F9 FFFC 05B0              		lea		tbl1280x768,a0
    685 FFFC04E8 43EE 07C0                   		lea		$7C0(a6),a1			; a1 points to timing registers
    686 FFFC04EC 3D7C A123 07F2              		move.w	#$A123,$7F2(a6)		; unlock timing regs
    687 FFFC04F2 700E                        		moveq	#14,d0
    688 FFFC04F4                             .0001:
    689 FFFC04F4 32D8                        		move.w	(a0)+,(a1)+
    690 FFFC04F6 51C8 FFFC                   		dbra	d0,.0001
    691 FFFC04FA 3D7C 0000 07F2              		move.w	#$0000,$7F2(a6)		; lock timing regs
    692 FFFC0500 4E75                        		rts
                                             
    694 FFFC0502                             Set320x240:
    695 FFFC0502 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    696 FFFC0508 4E75                        		rts
                                             
    698 FFFC050A                             Set400x300:
    699 FFFC050A 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    700 FFFC0510 3D7C 0001 07F0              		move.w	#1,$7F0(a6)			; 1 = divide by 2 mode
    701 FFFC0516 3D7C 0190 0406              		move.w	#400,$406(a6)		; bitmap width register
    702 FFFC051C 41F9 FFFC 058E              		lea		tbl800x600,a0
    703 FFFC0522 43EE 07C0                   		lea		$7C0(a6),a1			; a1 points to timing registers
    704 FFFC0526 3D7C A123 07F2              		move.w	#$A123,$7F2(a6)		; unlock timing regs
    705 FFFC052C 7010                        		moveq	#16,d0
    706 FFFC052E                             .0001:
    707 FFFC052E 32D8                        		move.w	(a0)+,(a1)+
    708 FFFC0530 51C8 FFFC                   		dbra	d0,.0001
    709 FFFC0534 3D7C 0000 07F2              		move.w	#$0000,$7F2(a6)		; lock timing regs
    710 FFFC053A 13FC 0032 0001 041B         		move.b	#50,TextCols
    711 FFFC0542 13FC 0025 0001 041A         		move.b	#37,TextRows
    712 FFFC054A 4E75                        		rts
                                             
    714 FFFC054C                             Set800x600:
    715 FFFC054C 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    716 FFFC0552 3D7C 0000 07F0              		move.w	#0,$7F0(a6)			; 0 = no divide
    717 FFFC0558 3D7C 0320 0406              		move.w	#800,$406(a6)		; bitmap width register
    718 FFFC055E 41F9 FFFC 058E              		lea		tbl800x600,a0
    719 FFFC0564 43EE 07C0                   		lea		$7C0(a6),a1			; a1 points to timing registers
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 13
bootrom.asm
    720 FFFC0568 3D7C A123 07F2              		move.w	#$A123,$7F2(a6)		; unlock timing regs
    721 FFFC056E 7010                        		moveq	#16,d0
    722 FFFC0570                             .0001:
    723 FFFC0570 32D8                        		move.w	(a0)+,(a1)+
    724 FFFC0572 51C8 FFFC                   		dbra	d0,.0001
    725 FFFC0576 3D7C 0000 07F2              		move.w	#$0000,$7F2(a6)		; lock timing regs
    726 FFFC057C 13FC 0064 0001 041B         		move.b	#100,TextCols
    727 FFFC0584 13FC 004B 0001 041A         		move.b	#75,TextRows
    728 FFFC058C 4E75                        		rts
                                             
                                             	align	2
                                             ;tbl640x480:
                                             ;	dc.w	800,525
    733 FFFC058E                             tbl800x600:
    734 FFFC058E 0420 0274 0028 00A8         	dc.w	1056,628,40,168,1,5,1056,256,628,28,1056,256,628,28,$EFE,$FE5,0
    735 FFFC0596 0001 0005 0420 0100         
    736 FFFC059E 0274 001C 0420 0100         
    737 FFFC05A6 0274 001C 0EFE 0FE5         
    738 FFFC05AE 0000                        
    739 FFFC05B0                             tbl1280x768:
    740 FFFC05B0 0690 031B 0043 00C9         	dc.w	1680,795,67,201,2,5,1680,400,795,27,1680,400,795,27,$EFD,$FD7,0
    741 FFFC05B8 0002 0005 0690 0190         
    742 FFFC05C0 031B 001B 0690 0190         
    743 FFFC05C8 031B 001B 0EFD 0FD7         
    744 FFFC05D0 0000                        
                                             
                                             ;------------------------------------------------------------------------------
                                             ; The z buffer is setup so that display has the lowest priority. This allows
                                             ; sprites to appear in front of graphics. At power on the buffer likely
                                             ; contains all zeros making graphics the highest priority.
                                             ;------------------------------------------------------------------------------
                                             
    752 FFFC05D2                             BootSetZBuffer:
    753 FFFC05D2 2C7C FFE0 0000              		movea.l	#VDGREG,a6			; a6 = pointer to register set
    754 FFFC05D8 207C FF80 0000              		move.l	#VDGBUF,A0			; a0 = pointer to display buffer
    755 FFFC05DE 3D7C 0001 043E              		move.w	#$1,$43E(a6)		; switch to z buffer
    756 FFFC05E4 223C 0000 3A98              		move.l	#BMP_WIDTH*BMP_HEIGHT/8,D1		; number of words to update
    757 FFFC05EA                             .0001:
    758 FFFC05EA 20FC FFFF FFFF              		move.l	#$FFFFFFFF,(a0)+	; set z layer to 3
    759 FFFC05F0 5381                        		sub.l	#1,d1
    760 FFFC05F2 66F6                        		bne.s	.0001
    761 FFFC05F4 3D7C 0000 043E              		move.w	#$0,$43E(a6)		; switch to regular buffer
    762 FFFC05FA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; clear screen	
                                             ;
                                             ; Trashes:
                                             ;	a0,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    771 FFFC05FC                             BootClearScreen:
    772 FFFC05FC 207C FF80 0000              		move.l	#VDGBUF,A0
    773 FFFC0602 700F                        		moveq	#DARK_BLUE,D0				; dark blue
    774 FFFC0604 223C 0001 D4C0              		move.l	#BMP_WIDTH*BMP_HEIGHT,D1	; number of pixels
    775 FFFC060A                             .loop1:
    776 FFFC060A 30C0                        		move.w	d0,(a0)+					; store it to the screen
    777 FFFC060C 5381                        		subq	#1,d1						; can't use dbra here
    778 FFFC060E 66FA                        		bne.s	.loop1
    779 FFFC0610 4DF9 FFE0 0000              		lea		VDGREG,a6
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 14
bootrom.asm
    780 FFFC0616 3D7C 0001 043E              		move.w	#1,$43E(a6)					; access z buffer
    781 FFFC061C 41F9 FF80 0000              		lea		VDGBUF,a0
    782 FFFC0622 70FF                        		move.l	#$FFFFFFFF,d0				; lowest priority
    783 FFFC0624 223C 0000 1D4C              		move.l	#BMP_WIDTH*BMP_HEIGHT/16,D1	; number of pixels
    784 FFFC062A                             .0002:
    785 FFFC062A 20C0                        		move.l	d0,(a0)+
    786 FFFC062C 5381                        		subq	#1,d1
    787 FFFC062E 66FA                        		bne.s	.0002
    788 FFFC0630 3D7C 0000 043E              		move.w	#0,$43E(a6)					; access normal buffer
    789 FFFC0636 6000 0FAE                   		bra		ClearVirtScreen				; clear the virtual screen too.
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Copy bands of color to the display controller's memory. These bands should
                                             ; show up if the bitmap address get toasted.
                                             ;------------------------------------------------------------------------------
                                             
    796 FFFC063A                             ColorBandMemory:
    797 FFFC063A 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
    798 FFFC0640 207C FF80 0000              		move.l	#$FF800000,a0
    799 FFFC0646 227C FF90 0000              		move.l	#$FF900000,a1
    800 FFFC064C 7200                        		move.l	#0,d1
    801 FFFC064E 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    802 FFFC0652 262E 0C00                   		move.l	$0C00(a6),d3		; get random value
    803 FFFC0656                             .0002:
    804 FFFC0656 30C3                        		move.w	d3,(a0)+			; move to z buffer
    805 FFFC0658 2801                        		move.l	d1,d4
    806 FFFC065A 0284 0000 03FF              		and.l	#$03FF,d4
    807 FFFC0660 6608                        		bne.s	.0001
    808 FFFC0662 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
    809 FFFC0666 262E 0C00                   		move.l	$0C00(a6),d3		; get random value
    810 FFFC066A                             .0001:
    811 FFFC066A 5281                        		addq	#1,d1
    812 FFFC066C B1C9                        		cmpa	a1,a0
    813 FFFC066E 65E6                        		blo.s	.0002	
    814 FFFC0670 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; copy font to VDG ram
                                             ;
                                             ; The font address is 1/2 of the memory address that the cpu sees because
                                             ; the AV controller only deals with word accesses.
                                             ;
                                             ; Trashes:
                                             ;	a0,a1,a6,d0,d1
                                             ;------------------------------------------------------------------------------
                                             
    826 FFFC0672                             BootCopyFont:
    827 FFFC0672 2C7C FFE0 0000              		movea.l	#VDGREG,a6
                                             		; Setup font table
    829 FFFC0678 2D7C 0005 C000 0410         		move.l	#$5C000,$410(a6)	; set font table address 1/2 B8000
    830 FFFC0680 203C 0005 C004              		move.l	#$5C004,d0			; set bitmap address (directly follows)
    831 FFFC0686 4840                        		swap	d0
    832 FFFC0688 0040 9CE0                   		or.w	#%1001110011100000,d0	; set font fixed, width, height
    833 FFFC068C 4840                        		swap	d0
    834 FFFC068E 23C0 FF8B 8000              		move.l	d0,$FF8B8000
    835 FFFC0694 42B9 FF8B 8004              		clr.l	$FF8B8004			; clear glyph width table address (not used)
    836 FFFC069A 227C FF8B 8008              		movea.l	#$FF8B8008,a1		; font table address
                                             
    838 FFFC06A0 41F9 FFFC 2262              		lea		font8,a0
    839 FFFC06A6 223C 0000 1000              		move.l	#8*512,d1			; 512 chars * 8 bytes per char
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 15
bootrom.asm
                                             
    841 FFFC06AC 3D7C 0000 0414              		move.w	#0,$414(a6)			; select font id (0)
                                             
    843 FFFC06B2 7000                        		moveq	#0,d0				; zero out high order bits
    844 FFFC06B4                             cpyfnt:
    845 FFFC06B4 1018                        		move.b	(a0)+,d0			; get a byte
    846 FFFC06B6 32C0                        		move.w	d0,(a1)+			; store in font table
    847 FFFC06B8 51C9 FFFA                   		dbra	d1,cpyfnt
    848 FFFC06BC 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Trashes:
                                             ;	a6
                                             ;------------------------------------------------------------------------------
                                             
    859 FFFC06BE                             DispCharAt:
    860 FFFC06BE 2C7C FFE0 0000              		move.l	#VDGREG,a6
    861 FFFC06C4 4840                        		swap	d0						; save off d0 low
    862 FFFC06C6                             .0001:									; wait for character que to empty
    863 FFFC06C6 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    864 FFFC06CA B07C 001C                   		cmp.w	#28,d0					; allow up 28 entries to be in progress
    865 FFFC06CE 64F6                        		bhs.s	.0001					; branch if too many chars queued
    866 FFFC06D0 4840                        		swap	d0						; get back d0 low
    867 FFFC06D2 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    868 FFFC06D6 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)		; set fg color
    869 FFFC06DE 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)		; set bk color
    870 FFFC06E6 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    871 FFFC06EA 3D42 0428                   		move.w	d2,$428(a6)			; set y pos
    872 FFFC06EE 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
    873 FFFC06F4 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    874 FFFC06FA 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	d0.w		character to display
                                             ;------------------------------------------------------------------------------
                                             
    881 FFFC06FC                             DispChar:
    882 FFFC06FC 48E7 4002                   		movem.l	d1/a6,-(a7)
    883 FFFC0700 2C7C FFE0 0000              		move.l	#VDGREG,a6
    884 FFFC0706 4840                        		swap	d0					; save off d0 low
    885 FFFC0708                             .0001:								; wait for character que to empty
    886 FFFC0708 302E 042C                   		move.w	$42C(a6),d0			; read character queue index into d0
    887 FFFC070C B07C 001C                   		cmp.w	#28,d0				; allow up 28 entries to be in progress
    888 FFFC0710 64F6                        		bhs.s	.0001				; branch if too many chars queued
    889 FFFC0712 4840                        		swap	d0					; get back d0 low
    890 FFFC0714 3D40 0420                   		move.w	d0,$420(a6)			; set char code
    891 FFFC0718 3D79 0001 0002 0422         		move.w	fgcolor,$422(a6)	; set fg color
    892 FFFC0720 3D79 0001 0004 0424         		move.w	bkcolor,$424(a6)	; set bk color
    893 FFFC0728 1239 0001 0419              		move.b	CursorCol,d1
    894 FFFC072E 4881                        		ext.w	d1
    895 FFFC0730 E741                        		asl.w	#3,d1
    896 FFFC0732 3D41 0426                   		move.w	d1,$426(a6)			; set x pos
    897 FFFC0736 1239 0001 0418              		move.b	CursorRow,d1
    898 FFFC073C 4881                        		ext.w	d1
    899 FFFC073E E741                        		asl.w	#3,d1
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 16
bootrom.asm
    900 FFFC0740 3D41 0428                   		move.w	d1,$428(a6)			; set y pos
    901 FFFC0744 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent (defunct - in font table)
    902 FFFC074A 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
    903 FFFC0750 4CDF 4002                   		movem.l	(a7)+,d1/a6
    904 FFFC0754 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Cursor Routines
                                             ;
                                             ; BIOS uses cursor #0. The BIOS cursor is 10 x 10
                                             ;==============================================================================
                                             
    912 FFFC0756                             EnableCursor:
    913 FFFC0756 48E7 8002                   		movem.l	d0/a6,-(a7)
    914 FFFC075A 4DF9 FFE0 0000              		lea		VDGREG,a6
    915 FFFC0760 202E 0108                   		move.l	$108(a6),d0
    916 FFFC0764 08C0 0000                   		bset	#0,d0
    917 FFFC0768 2D40 0108                   		move.l	d0,$108(a6)
    918 FFFC076C 4CDF 4001                   		movem.l	(a7)+,d0/a6
    919 FFFC0770 4E75                        		rts
                                             		
    921 FFFC0772                             DisableCursor:
    922 FFFC0772 48E7 8002                   		movem.l	d0/a6,-(a7)
    923 FFFC0776 4DF9 FFE0 0000              		lea		VDGREG,a6
    924 FFFC077C 202E 0108                   		move.l	$108(a6),d0
    925 FFFC0780 0880 0000                   		bclr	#0,d0
    926 FFFC0784 2D40 0108                   		move.l	d0,$108(a6)
    927 FFFC0788 4CDF 4001                   		movem.l	(a7)+,d0/a6
    928 FFFC078C 4E75                        		rts
                                             		
                                             ;------------------------------------------------------------------------------
                                             ; Sync the hardware cursor's position to the text cursor position.
                                             ;------------------------------------------------------------------------------
                                             
    934 FFFC078E                             SyncCursor:
    935 FFFC078E 48E7 4002                   		movem.l	d1/a6,-(a7)
    936 FFFC0792 2C7C FFE0 0000              		move.l	#VDGREG,a6
                                             ;		move.w	#$0A0A,VDG_CURSZ(a6)	; defunct size set in SetCursorImage64
    938 FFFC0798 1239 0001 0419              		move.b	CursorCol,d1
    939 FFFC079E 4881                        		ext.w	d1
    940 FFFC07A0 E741                        		asl.w	#3,d1
    941 FFFC07A2 5341                        		sub.w	#1,d1
    942 FFFC07A4 3D41 0204                   		move.w	d1,VDG_CUR0X(a6)
    943 FFFC07A8 1239 0001 0418              		move.b	CursorRow,d1
    944 FFFC07AE 4881                        		ext.w	d1
    945 FFFC07B0 E741                        		asl.w	#3,d1
    946 FFFC07B2 5341                        		sub.w	#1,d1
    947 FFFC07B4 3D41 0206                   		move.w	d1,VDG_CUR0Y(a6)
    948 FFFC07B8 4CDF 4002                   		movem.l	(a7)+,d1/a6
    949 FFFC07BC 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Cursor Color
                                             ; - cursor color is a 32 bit vector
                                             ;
                                             ;	aaaaaaaa--ifffff-rrrrrgggggbbbbb
                                             ;	    |     |  |     |    |    |
                                             ;       |     |  |     |    |    +-- blue
                                             ;     	|     |  |     |    +------- green
                                             ;       |     |  |     +------------ red
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 17
bootrom.asm
                                             ;       |     |  +------------------ flashrate 0xxxx = no flash
                                             ;       |     +--------------------- invert video (rgb ignored)
                                             ;       +--------------------------- alpha 0 = cursor color, 255 = background
                                             ;
                                             ;   flash rate
                                             ;		 0xxxx = no flash
                                             ;        00001 = 1/8 vsync (7.5 Hz)
                                             ;	     00010 = 1/16 vsync (3.75 Hz)
                                             ;        00100 = 1/32 vsync (1.875 Hz)
                                             ;------------------------------------------------------------------------------
                                             
    971 FFFC07BE                             SetCursorColor:
    972 FFFC07BE 2F02                        		move.l  d2/a5/a6,-(a7)
    973 FFFC07C0 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    974 FFFC07C6 2C7C FFE0 0000              		move.l	#VDGREG,a6
    975 FFFC07CC 3D7C 0004 0446              		move.w	#%00100,VDG_CURFLSH(a6)
    976 FFFC07D2 3D7C 7FFF 0448              		move.w	#%0111111111111111,VDG_CURCLR0(a6)
    977 FFFC07D8 743F                        		moveq	#63,d2
    978 FFFC07DA                             .0001:
    979 FFFC07DA 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    980 FFFC07DE 262D 0C00                   		move.l	$0C00(a5),d3
    981 FFFC07E2 0283 0000 FFFF              		and.l	#$FFFF,d3
    982 FFFC07E8 2CC3                        		move.l	d3,(a6)+
    983 FFFC07EA 51CA FFEE                   		dbra	d2,.0001
    984 FFFC07EE 241F                        		move.l	(a7)+,d2/a5/a6
    985 FFFC07F0 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Put some values in the cursors color palette so they will be visible.
                                             ; Otherwise they will all be black.
                                             ;------------------------------------------------------------------------------
                                             
    992 FFFC07F2                             InitCursorColorPalette:
    993 FFFC07F2 2F02                        		move.l  d2/d3/a5/a6,-(a7)
    994 FFFC07F4 2A7C FFDC 0000              		move.l	#$FFDC0000,a5
    995 FFFC07FA 2C7C FFE0 0000              		move.l	#VDGREG,a6
    996 FFFC0800 743F                        		moveq	#63,d2
    997 FFFC0802                             .0001:
    998 FFFC0802 426D 0C04                   		clr.w	$0C04(a5)			; gen next number
    999 FFFC0806 262D 0C00                   		move.l	$0C00(a5),d3		; move random number
   1000 FFFC080A 0283 FF00 7FFF              		and.l	#$FF007FFF,d3		; mask off other attributes
                                             		;or.l	#$FF000000,d3		; alpha blend to background color
   1002 FFFC0810 2CC3                        		move.l	d3,(a6)+
   1003 FFFC0812 51CA FFEE                   		dbra	d2,.0001
   1004 FFFC0816 2C7C FFE0 0000              		move.l	#VDGREG,a6
   1005 FFFC081C 2D7C 0000 7C00 0004         		move.l	#RED,4(a6)			; force cursor red
   1006 FFFC0824 241F                        		move.l	(a7)+,d2/d3/a5/a6
   1007 FFFC0826 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Setup an image for the cursor.
                                             ; Cursor may be up to 32h x 512v pixels.
                                             ; The BIOS cursor is 10 x 10
                                             ;------------------------------------------------------------------------------
                                             
   1015 FFFC0828                             SetCursorImage64:
   1016 FFFC0828 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
   1017 FFFC082C 41F9 FFFC 089C              		lea		CursorImage64,a0
   1018 FFFC0832 7214                        		moveq	#20,d1					; set count number of long words to move
   1019 FFFC0834 227C FF8B 7E00              		move.l	#$FF8B7E00,a1
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 18
bootrom.asm
   1020 FFFC083A                             .0001:
   1021 FFFC083A 22D8                        		move.l	(a0)+,(a1)+
   1022 FFFC083C 51C9 FFFC                   		dbra	d1,.0001
   1023 FFFC0840 343C 0200                   		move.w	#$200,d2
   1024 FFFC0844 207C FFE0 0000              		move.l	#VDGREG,a0
   1025 FFFC084A 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
   1026 FFFC0850                             .0002:
   1027 FFFC0850 21BC 0005 BF00 2000         		move.l	#$5BF00,(a0,d2.w)
   1028 FFFC0858 31BC 0249 2008              		move.w	#$0249,8(a0,d2.w)	; set cursor size 10x10
   1029 FFFC085E 31BC 0064 200C              		move.w	#100,12(a0,d2.w)	; set total pixel count (10*10)
   1030 FFFC0864 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1031 FFFC0868 262E 0C00                   		move.l	$0C00(a6),d3
   1032 FFFC086C 0243 00FF                   		and.w	#$FF,d3
   1033 FFFC0870 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
   1034 FFFC0874 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1035 FFFC0878 262E 0C00                   		move.l	$0C00(a6),d3
   1036 FFFC087C 0243 00FF                   		and.w	#$FF,d3
   1037 FFFC0880 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
   1038 FFFC0884 363C 0000                   		move.w	#$0,d3
   1039 FFFC0888 3183 200A                   		move.w	d3,10(a0,d2.w)		; set z pos
   1040 FFFC088C 0642 0010                   		add.w	#$10,d2
   1041 FFFC0890 B47C 0400                   		cmp.w	#$400,d2
   1042 FFFC0894 65BA                        		blo.s	.0002
   1043 FFFC0896 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6
   1044 FFFC089A 4E75                        		rts
                                             		
                                             	align	4
   1047 FFFC089C                             CursorImage64:
   1048 FFFC089C 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
   1049 FFFC08A4 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1050 FFFC08AC 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1051 FFFC08B4 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1052 FFFC08BC 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1053 FFFC08C4 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1054 FFFC08CC 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1055 FFFC08D4 40001000 00000000           	dc.l	%01000000000000000001000000000000,$00
   1056 FFFC08DC 40501000 00000000           	dc.l	%01000000010100000001000000000000,$00
   1057 FFFC08E4 55555000 00000000           	dc.l	%01010101010101010101000000000000,$00
   1058 FFFC08EC 00000000 00000000           	dc.l	$00,$00
   1059 FFFC08F4 00000000 00000000           	dc.l	$00,$00
                                             
   1061 FFFC08FC                             BouncingBalls:
   1062 FFFC08FC 48E7 70C2                   		movem.l	d1/d2/d3/a0/a1/a6,-(a7)
                                             
                                             		; Setup background depth
   1065 FFFC0900 227C FFE0 0000              		move.l	#VDGREG,a1
   1066 FFFC0906 2C7C FFDC 0000              		move.l	#$FFDC0000,a6		; set I/O address
   1067 FFFC090C 207C FF80 0000              		movea.l	#$FF800000,a0		; address of z buffer ram
   1068 FFFC0912 243C 0000 1D4C              		move.l	#BMP_WIDTH*BMP_HEIGHT/16,d2
                                             ;		move.w	#1,$43E(a1)			; select z buffer
   1070 FFFC0918                             .0003:
                                             ;		clr.w	$0C04(a6)			; gen next number
                                             ;		move.l	$0C00(a6),d3		; get random value
                                             ;		move.l	d3,(a0)+			; move to z buffer
                                             ;		sub.l	#1,d2
                                             ;		bne.s	.0003
                                             ;		move.w	#0,$43E(a1)			; deselect z buffer
                                             		
                                             		; Setup sprite image
   1079 FFFC0918 41F9 FFFC 0A6C              		lea		BallImage,a0
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 19
bootrom.asm
   1080 FFFC091E 721A                        		moveq	#26,d1					; set count number of long words to move
   1081 FFFC0920 227C FF8B 7D00              		move.l	#$FF8B7D00,a1
   1082 FFFC0926 45F9 0001 0500              		lea		ball_dx,a2
   1083 FFFC092C 47F9 0001 0600              		lea		ball_dy,a3
   1084 FFFC0932                             .0001:
   1085 FFFC0932 22D8                        		move.l	(a0)+,(a1)+
   1086 FFFC0934 51C9 FFFC                   		dbra	d1,.0001
   1087 FFFC0938 41F9 FFFC 0AE4              		lea		XImage,a0
   1088 FFFC093E 721A                        		moveq	#26,d1					; set count number of long words to move
   1089 FFFC0940 227C FF8B 7C00              		move.l	#$FF8B7C00,a1
   1090 FFFC0946                             .0012:
   1091 FFFC0946 22D8                        		move.l	(a0)+,(a1)+
   1092 FFFC0948 51C9 FFFC                   		dbra	d1,.0012
   1093 FFFC094C 343C 0210                   		move.w	#$210,d2
   1094 FFFC0950 207C FFE0 0000              		move.l	#VDGREG,a0
   1095 FFFC0956 217C FFFF FFFF 0108         		move.l	#$FFFFFFFF,$108(a0)		; enable sprites
   1096 FFFC095E 2C7C FFDC 0000              		move.l	#$FFDC0000,a6
   1097 FFFC0964                             .0002:
   1098 FFFC0964 B47C 0300                   		cmp.w	#$300,d2
   1099 FFFC0968 6408                        		bhs.s	.0014
   1100 FFFC096A 21BC 0005 BE80 2000         		move.l	#$5BE80,(a0,d2.w)	; set image = 'O'
   1101 FFFC0972                             .0014:
   1102 FFFC0972 31BC 0350 2008              		move.w	#$0350,8(a0,d2.w)	; set cursor size 16hx13v
   1103 FFFC0978 31BC 00D0 200C              		move.w	#208,12(a0,d2.w)	; set total pixel count (16*13)
   1104 FFFC097E 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1105 FFFC0982 262E 0C00                   		move.l	$0C00(a6),d3
   1106 FFFC0986 0243 00FF                   		and.w	#$FF,d3
   1107 FFFC098A 0643 0100                   		add.w	#256,d3
   1108 FFFC098E 3183 2004                   		move.w	d3,4(a0,d2.w)		; set h pos
   1109 FFFC0992 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1110 FFFC0996 262E 0C00                   		move.l	$0C00(a6),d3
   1111 FFFC099A 0243 00FF                   		and.w	#$FF,d3
   1112 FFFC099E 0643 001C                   		add.w	#28,d3
   1113 FFFC09A2 3183 2006                   		move.w	d3,6(a0,d2.w)		; set v pos
   1114 FFFC09A6 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1115 FFFC09AA 262E 0C00                   		move.l	$0C00(a6),d3
   1116 FFFC09AE 0243 0000                   		and.w	#$0,d3
   1117 FFFC09B2 3183 200A                   		move.w	d3,10(a0,d2.w)		; set z pos
   1118 FFFC09B6 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1119 FFFC09BA 262E 0C00                   		move.l	$0C00(a6),d3
   1120 FFFC09BE EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1121 FFFC09C0 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1122 FFFC09C2 3583 2000                   		move.w	d3,(a2,d2.w)		; set dx
   1123 FFFC09C6 426E 0C04                   		clr.w	$0C04(a6)			; gen next number
   1124 FFFC09CA 262E 0C00                   		move.l	$0C00(a6),d3
   1125 FFFC09CE EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1126 FFFC09D0 EC43                        		asr.w	#6,d3				; get dx -8 to +7
   1127 FFFC09D2 3783 2000                   		move.w	d3,(a3,d2.w)		; set dy
   1128 FFFC09D6 0642 0010                   		add.w	#$10,d2
   1129 FFFC09DA B47C 0300                   		cmp.w	#$300,d2
   1130 FFFC09DE 6508                        		blo.s	.0011
   1131 FFFC09E0 21BC 0005 BE00 2000         		move.l	#$5BE00,(a0,d2.w)
   1132 FFFC09E8                             .0011:
   1133 FFFC09E8 B47C 0400                   		cmp.w	#$400,d2
   1134 FFFC09EC 6500 FF76                   		blo.s	.0002
                                             ;
                                             ; Move balls around	
                                             ; Moves sprites 1-31 around on the screen (sprite 0 is the BIOS cursor)
                                             ;
                                             ; a0 = pointer to AV controller's register set
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 20
bootrom.asm
                                             ; a2 = pointer to sprite movement dx table
                                             ; a3 = pointer to sprite movement dy table
                                             ;
   1143 FFFC09F0                             .0010:	
   1144 FFFC09F0 3428 0582                   		move.w	$582(a0),d2			; get irq status
   1145 FFFC09F4 0802 0000                   		btst	#0,d2				; check vertical blank
   1146 FFFC09F8 67F6                        		beq.s	.0010				; not blank yet
   1147 FFFC09FA 317C 0001 0582              		move.w	#1,$582(a0)			; reset vert blank indicator
                                             
   1149 FFFC0A00 42A8 0400                   		clr.l	$400(a0)			; reset bitmap base and
   1150 FFFC0A04 317C 0190 0406              		move.w	#BMP_WIDTH,$406(a0)	; bitmap width register
                                             
   1152 FFFC0A0A 343C 0210                   		move.w	#$210,d2			; offset of sprite #1 regsiter
   1153 FFFC0A0E                             .0008:
   1154 FFFC0A0E 3632 2000                   		move.w	(a2,d2.w),d3		; get dx
   1155 FFFC0A12 D770 2004                   		add.w	d3,4(a0,d2.w)		; add to hpos
   1156 FFFC0A16 3633 2000                   		move.w	(a3,d2.w),d3		; get dy
   1157 FFFC0A1A D770 2006                   		add.w	d3,6(a0,d2.w)		; add to vpos
   1158 FFFC0A1E 0C70 0210 2004              		cmpi.w	#BMP_WIDTH+128,4(a0,d2.w)	; X hit limit ?
   1159 FFFC0A24 6504                        		blo.s	.0004
   1160 FFFC0A26 4472 2000                   		neg.w	(a2,d2.w)			; flip dx
   1161 FFFC0A2A                             .0004:
   1162 FFFC0A2A 0C70 0080 2004              		cmpi.w	#128,4(a0,d2.w)		; X hit limit ?
   1163 FFFC0A30 6404                        		bhs.s	.0005
   1164 FFFC0A32 4472 2000                   		neg.w	(a2,d2.w)			; flip dx
   1165 FFFC0A36                             .0005:
   1166 FFFC0A36 0C70 0148 2006              		cmpi.w	#BMP_HEIGHT+28,6(a0,d2.w)	; Y hit limit ?
   1167 FFFC0A3C 6504                        		blo.s	.0006
   1168 FFFC0A3E 4473 2000                   		neg.w	(a3,d2.w)			; flip dy
   1169 FFFC0A42                             .0006:
   1170 FFFC0A42 0C70 001C 2006              		cmpi.w	#28,6(a0,d2.w)		; Y hit limit ?
   1171 FFFC0A48 6404                        		bhs.s	.0007
   1172 FFFC0A4A 4473 2000                   		neg.w	(a3,d2.w)			; flip dy
   1173 FFFC0A4E                             .0007:
   1174 FFFC0A4E 0642 0010                   		addi.w	#$10,d2				; advance to next sprite register set
   1175 FFFC0A52 0C42 0400                   		cmpi.w	#$400,d2			; is end of register set hit ?
   1176 FFFC0A56 65B6                        		blo.s	.0008	
                                             		; delay a bit to allow display to persist
   1178 FFFC0A58 263C 0001 3880              		move.l	#80000,d3
   1179 FFFC0A5E                             .0009:
   1180 FFFC0A5E 5383                        		subi.l	#1,d3
   1181 FFFC0A60 66FC                        		bne.s	.0009
                                             ;		bsr		CheckForKey			; look for keypress to end. zf=0 if key
                                             ;		tst.b	d1
   1184 FFFC0A62 678C                        		beq.s	.0010
   1185 FFFC0A64 4CDF 430E                   		movem.l	(a7)+,d1/d2/d3/a0/a1/a6	; restore regs
   1186 FFFC0A68                             .0015:
   1187 FFFC0A68 4E75                        		rts
                                             
                                             
   1190 FFFC0A6A FF FF                       		align	4
   1191 FFFC0A6C                             BallImage:
   1192 FFFC0A6C 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1193 FFFC0A74 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
   1194 FFFC0A7C 15555554 00000000           	dc.l	%00010101010101010101010101010100,%00000000000000000000000000000000
   1195 FFFC0A84 55000055 00000000           	dc.l	%01010101000000000000000001010101,%00000000000000000000000000000000
   1196 FFFC0A8C 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1197 FFFC0A94 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1198 FFFC0A9C 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1199 FFFC0AA4 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 21
bootrom.asm
   1200 FFFC0AAC 54000015 00000000           	dc.l	%01010100000000000000000000010101,%00000000000000000000000000000000
   1201 FFFC0AB4 15000054 00000000           	dc.l	%00010101000000000000000001010100,%00000000000000000000000000000000
   1202 FFFC0ABC 05555550 00000000           	dc.l	%00000101010101010101010101010000,%00000000000000000000000000000000
   1203 FFFC0AC4 01555540 00000000           	dc.l	%00000001010101010101010101000000,%00000000000000000000000000000000
   1204 FFFC0ACC 00555500 00000000           	dc.l	%00000000010101010101010100000000,%00000000000000000000000000000000
   1205 FFFC0AD4 00000000 00000000           	dc.l	$00,$00
   1206 FFFC0ADC 00000000 00000000           	dc.l	$00,$00
   1207 FFFC0AE4                             XImage:
   1208 FFFC0AE4 50000050 00000000           	dc.l	%01010000000000000000000001010000,%00000000000000000000000000000000
   1209 FFFC0AEC 14000140 00000000           	dc.l	%00010100000000000000000101000000,%00000000000000000000000000000000
   1210 FFFC0AF4 05000500 00000000           	dc.l	%00000101000000000000010100000000,%00000000000000000000000000000000
   1211 FFFC0AFC 01401400 00000000           	dc.l	%00000001010000000001010000000000,%00000000000000000000000000000000
   1212 FFFC0B04 00505000 00000000           	dc.l	%00000000010100000101000000000000,%00000000000000000000000000000000
   1213 FFFC0B0C 00154000 00000000           	dc.l	%00000000000101010100000000000000,%00000000000000000000000000000000
   1214 FFFC0B14 00050000 00000000           	dc.l	%00000000000001010000000000000000,%00000000000000000000000000000000
   1215 FFFC0B1C 00154000 00000000           	dc.l	%00000000000101010100000000000000,%00000000000000000000000000000000
   1216 FFFC0B24 00505000 00000000           	dc.l	%00000000010100000101000000000000,%00000000000000000000000000000000
   1217 FFFC0B2C 01401400 00000000           	dc.l	%00000001010000000001010000000000,%00000000000000000000000000000000
   1218 FFFC0B34 05000500 00000000           	dc.l	%00000101000000000000010100000000,%00000000000000000000000000000000
   1219 FFFC0B3C 14000140 00000000           	dc.l	%00010100000000000000000101000000,%00000000000000000000000000000000
   1220 FFFC0B44 50000050 00000000           	dc.l	%01010000000000000000000001010000,%00000000000000000000000000000000
   1221 FFFC0B4C 00000000 00000000           	dc.l	$00,$00
   1222 FFFC0B54 00000000 00000000           	dc.l	$00,$00
                                             	
                                             ;------------------------------------------------------------------------------
                                             ; Parameters:
                                             ;	a0			pointer to string
                                             ;	d1.w		x position
                                             ;	d2.w		y position
                                             ; Returns:
                                             ;	a0			points to byte after NULL character
                                             ;	d1.w		updated x position
                                             ; Trashes:
                                             ;	d0,a6
                                             ;------------------------------------------------------------------------------
                                             
   1236 FFFC0B5C                             DispStringAt:
   1237 FFFC0B5C                             .0003:
   1238 FFFC0B5C 7000                        		moveq	#0,d0					; zero out high order bits
   1239 FFFC0B5E 1018                        		move.b	(a0)+,d0				; get character from string into d0
   1240 FFFC0B60 6708                        		beq.s	.0002					; end of string ?
   1241 FFFC0B62 6100 FB5A                   		bsr		DispCharAt
   1242 FFFC0B66 5041                        		add.w	#8,d1					; increment xpos
   1243 FFFC0B68 60F2                        		bra.s	.0003
   1244 FFFC0B6A                             .0002:
   1245 FFFC0B6A 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display nybble in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1251 FFFC0B6C                             DisplayNybble:
   1252 FFFC0B6C 3F01                        		move.w	d1,-(a7)
   1253 FFFC0B6E 0201 000F                   		andi.b	#0xF,d1
   1254 FFFC0B72 0601 0030                   		addi.b	#'0',d1
   1255 FFFC0B76 0C01 0039                   		cmpi.b	#'9',d1
   1256 FFFC0B7A 6302                        		bls.s	dispnyb1
   1257 FFFC0B7C 5E01                        		addi.b	#7,d1
   1258 FFFC0B7E                             dispnyb1:
   1259 FFFC0B7E 6100 F6E4                   		bsr		DisplayChar
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 22
bootrom.asm
   1260 FFFC0B82 321F                        		move.w	(a7)+,d1
   1261 FFFC0B84 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the byte in D1.B
                                             ;------------------------------------------------------------------------------
                                             ;
   1267 FFFC0B86                             DisplayByte:
   1268 FFFC0B86 3F01                        		move.w	d1,-(a7)
   1269 FFFC0B88 E819                        		ror.b	#4,d1
   1270 FFFC0B8A 6100 FFE0                   		bsr		DisplayNybble
   1271 FFFC0B8E E919                        		rol.b	#4,d1
   1272 FFFC0B90 6100 FFDA                   		bsr		DisplayNybble
   1273 FFFC0B94 321F                        		move.w	(a7)+,d1
   1274 FFFC0B96 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Display the 32 bit word in D1.L
                                             ;------------------------------------------------------------------------------
                                             ;
   1280 FFFC0B98                             DisplayWord:
   1281 FFFC0B98 E199                        		rol.l	#8,d1
   1282 FFFC0B9A 6100 FFEA                   		bsr		DisplayByte
   1283 FFFC0B9E E199                        		rol.l	#8,d1
   1284 FFFC0BA0 6100 FFE4                   		bsr		DisplayByte
   1285 FFFC0BA4 E199                        		rol.l	#8,d1
   1286 FFFC0BA6 6100 FFDE                   		bsr		DisplayByte
   1287 FFFC0BAA E199                        		rol.l	#8,d1
   1288 FFFC0BAC 6100 FFD8                   		bsr		DisplayByte
   1289 FFFC0BB0 4E75                        		rts
                                             
   1291 FFFC0BB2                             DisplayMem:
   1292 FFFC0BB2 123C 003A                   		move.b	#':',d1
   1293 FFFC0BB6 4EB9 FFFC 0264              		jsr		DisplayChar
   1294 FFFC0BBC 2208                        		move.l	a0,d1
   1295 FFFC0BBE 4EB9 FFFC 0B98              		jsr		DisplayWord
   1296 FFFC0BC4 7407                        		moveq	#7,d2
   1297 FFFC0BC6                             dspmem1:
   1298 FFFC0BC6 123C 0020                   		move.b	#' ',d1
   1299 FFFC0BCA 4EB9 FFFC 0264              		jsr		DisplayChar
   1300 FFFC0BD0 1218                        		move.b	(a0)+,d1
   1301 FFFC0BD2 4EB9 FFFC 0B86              		jsr		DisplayByte
   1302 FFFC0BD8 51CA FFEC                   		dbra	d2,dspmem1
   1303 FFFC0BDC 4EF9 FFFC 021E              		jmp		CRLF
                                             
                                             ;==============================================================================
                                             ; Keyboard stuff
                                             ;
                                             ; KeyState2_
                                             ; 876543210
                                             ; ||||||||+ = shift
                                             ; |||||||+- = alt
                                             ; ||||||+-- = control
                                             ; |||||+--- = numlock
                                             ; ||||+---- = capslock
                                             ; |||+----- = scrolllock
                                             ; ||+------ =
                                             ; |+------- = 
                                             ; +-------- = extended
                                             ;
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 23
bootrom.asm
                                             ;==============================================================================
                                             
   1322 FFFC0BE2                             _KeybdGetStatus:
   1323 FFFC0BE2 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1324 FFFC0BE8 4E75                        		rts
                                             
                                             ; Get the scancode from the keyboard port
                                             ;
   1328 FFFC0BEA                             _KeybdGetScancode:
   1329 FFFC0BEA 7200                        		moveq	#0,d1
   1330 FFFC0BEC 1239 FFDC 0000              		move.b	KEYBD,d1				; get the scan code
   1331 FFFC0BF2 13FC 0000 FFDC 0001         		move.b	#0,KEYBD+1				; clear receive register
   1332 FFFC0BFA 4E75                        		rts
                                             
                                             ; Recieve a byte from the keyboard, used after a command is sent to the
                                             ; keyboard in order to wait for a response.
                                             ;
   1337 FFFC0BFC                             KeybdRecvByte:
   1338 FFFC0BFC 2F03                        		move.l	d3,-(a7)
   1339 FFFC0BFE 363C 0064                   		move.w	#100,d3		; wait up to 1s
   1340 FFFC0C02                             .0003:
   1341 FFFC0C02 6100 FFDE                   		bsr		_KeybdGetStatus	; wait for response from keyboard
   1342 FFFC0C06 4A01                        		tst.b	d1
   1343 FFFC0C08 6B0E                        		bmi		.0004		; is input buffer full ? yes, branch
   1344 FFFC0C0A 6100 02C4                   		bsr		Wait10ms		; wait a bit
   1345 FFFC0C0E 51CB FFF2                   		dbra	d3,.0003	; go back and try again
   1346 FFFC0C12 261F                        		move.l	(a7)+,d3
   1347 FFFC0C14 72FF                        		moveq	#-1,d1			; return -1
   1348 FFFC0C16 4E75                        		rts
   1349 FFFC0C18                             .0004:
   1350 FFFC0C18 6100 FFD0                   		bsr		_KeybdGetScancode
   1351 FFFC0C1C 261F                        		move.l	(a7)+,d3
   1352 FFFC0C1E 4E75                        		rts
                                             
                                             
                                             ; Wait until the keyboard transmit is complete
                                             ; Returns .CF = 1 if successful, .CF=0 timeout
                                             ;
   1358 FFFC0C20                             KeybdWaitTx:
   1359 FFFC0C20 48E7 3000                   		movem.l	d2/d3,-(a7)
   1360 FFFC0C24 7664                        		moveq	#100,d3		; wait a max of 1s
   1361 FFFC0C26                             .0001:
   1362 FFFC0C26 6100 FFBA                   		bsr		_KeybdGetStatus
   1363 FFFC0C2A 0801 0006                   		btst	#6,d1		; check for transmit complete bit
   1364 FFFC0C2E 6610                        		bne	    .0002		; branch if bit set
   1365 FFFC0C30 6100 029E                   		bsr		Wait10ms		; delay a little bit
   1366 FFFC0C34 51CB FFF0                   		dbra	d3,.0001	; go back and try again
   1367 FFFC0C38 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1368 FFFC0C3C 72FF                        		moveq	#-1,d1		; return -1
   1369 FFFC0C3E 4E75                        		rts
   1370 FFFC0C40                             .0002:
   1371 FFFC0C40 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1372 FFFC0C44 7200                        		moveq	#0,d1		; return 0
   1373 FFFC0C46 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; get key pending status into d1.b
                                             ;------------------------------------------------------------------------------
                                             ;
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 24
bootrom.asm
   1380 FFFC0C48                             CheckForKey:
   1381 FFFC0C48 1239 FFDC 0001              		move.b	KEYBD+1,d1
   1382 FFFC0C4E 6A06                        		bpl.s	cfk1
   1383 FFFC0C50 123C 0001                   		move.b	#1,d1
   1384 FFFC0C54 4E75                        		rts
   1385 FFFC0C56                             cfk1:
   1386 FFFC0C56 4201                        		clr.b	d1
   1387 FFFC0C58 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1392 FFFC0C5A                             GetKey:
   1393 FFFC0C5A 6100 0022                   		bsr		KeybdGetCharWait
   1394 FFFC0C5E 0C39 0000 0001 0424         		cmpi.b	#0,KeybdEcho	; is keyboard echo on ?
   1395 FFFC0C66 670C                        		beq.s	gk1
   1396 FFFC0C68 0C01 000D                   		cmpi.b	#'\r',d1		; convert CR keystroke into CRLF
   1397 FFFC0C6C 6700 F5B0                   		beq		CRLF
   1398 FFFC0C70 6100 F5F2                   		bsr		DisplayChar
   1399 FFFC0C74                             gk1:
   1400 FFFC0C74 4E75                        		rts
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             
   1406 FFFC0C76                             KeybdGetCharNoWait:
   1407 FFFC0C76 4239 0001 0425              		clr.b	KeybdWaitFlag
   1408 FFFC0C7C 6008                        		bra		KeybdGetChar
                                             
   1410 FFFC0C7E                             KeybdGetCharWait:
   1411 FFFC0C7E 13FC FFFF 0001 0425         		move.b	#-1,KeybdWaitFlag
                                             
   1413 FFFC0C86                             KeybdGetChar:
   1414 FFFC0C86 48E7 3080                   		movem.l	d2/d3/a0,-(a7)
   1415 FFFC0C8A                             .0003:
   1416 FFFC0C8A 6100 FF56                   		bsr		_KeybdGetStatus			; check keyboard status for key available
   1417 FFFC0C8E 6B10                        		bmi		.0006					; yes, go process
   1418 FFFC0C90 4A39 0001 0425              		tst.b	KeybdWaitFlag			; are we willing to wait for a key ?
   1419 FFFC0C96 6BF2                        		bmi		.0003					; yes, branch back
   1420 FFFC0C98 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1421 FFFC0C9C 72FF                        		moveq	#-1,d1					; flag no char available
   1422 FFFC0C9E 4E75                        		rts
   1423 FFFC0CA0                             .0006:
   1424 FFFC0CA0 6100 FF48                   		bsr		_KeybdGetScancode
   1425 FFFC0CA4                             .0001:
   1426 FFFC0CA4 33FC 0001 FFDC 0600         		move.w	#1,leds
   1427 FFFC0CAC B23C 00F0                   		cmp.b	#SC_KEYUP,d1
   1428 FFFC0CB0 6700 00CA                   		beq		.doKeyup
   1429 FFFC0CB4 B23C 00E0                   		cmp.b	#SC_EXTEND,d1
   1430 FFFC0CB8 6700 00CE                   		beq		.doExtend
   1431 FFFC0CBC B23C 0014                   		cmp.b	#SC_CTRL,d1
   1432 FFFC0CC0 6700 00D2                   		beq		.doCtrl
   1433 FFFC0CC4 B23C 0012                   		cmp.b	#SC_LSHIFT,d1
   1434 FFFC0CC8 6700 0134                   		beq		.doShift
   1435 FFFC0CCC B23C 0059                   		cmp.b	#SC_RSHIFT,d1
   1436 FFFC0CD0 6700 012C                   		beq		.doShift
   1437 FFFC0CD4 B23C 0077                   		cmp.b	#SC_NUMLOCK,d1
   1438 FFFC0CD8 6700 014C                   		beq		.doNumLock
   1439 FFFC0CDC B23C 0058                   		cmp.b	#SC_CAPSLOCK,d1
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 25
bootrom.asm
   1440 FFFC0CE0 6700 0154                   		beq		.doCapsLock
   1441 FFFC0CE4 B23C 007E                   		cmp.b	#SC_SCROLLLOCK,d1
   1442 FFFC0CE8 6700 015C                   		beq		.doScrollLock
   1443 FFFC0CEC B23C 0011                   		cmp.b   #SC_ALT,d1
   1444 FFFC0CF0 6700 00CA                   		beq     .doAlt
   1445 FFFC0CF4 1439 0001 0426              		move.b	_KeyState1,d2			; check key up/down
   1446 FFFC0CFA 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup status
   1447 FFFC0D02 4A02                        		tst.b	d2
   1448 FFFC0D04 6684                        		bne	    .0003					; ignore key up
   1449 FFFC0D06 B23C 000D                   		cmp.b   #SC_TAB,d1
   1450 FFFC0D0A 6700 00D8                   		beq     .doTab
   1451 FFFC0D0E                             .0013:
   1452 FFFC0D0E 1439 0001 0427              		move.b	_KeyState2,d2
   1453 FFFC0D14 6A1E                        		bpl		.0010					; is it extended code ?
   1454 FFFC0D16 0202 007F                   		and.b	#$7F,d2					; clear extended bit
   1455 FFFC0D1A 13C2 0001 0427              		move.b	d2,_KeyState2
   1456 FFFC0D20 13FC 0000 0001 0426         		move.b	#0,_KeyState1			; clear keyup
   1457 FFFC0D28 41F9 FFFC 1160              		lea		_keybdExtendedCodes,a0
   1458 FFFC0D2E 1230 1000                   		move.b	(a0,d1.w),d1
   1459 FFFC0D32 603A                        		bra		.0008
   1460 FFFC0D34                             .0010:
   1461 FFFC0D34 0802 0002                   		btst	#2,d2					; is it CTRL code ?
   1462 FFFC0D38 6710                        		beq		.0009
   1463 FFFC0D3A 0241 007F                   		and.w	#$7F,d1
   1464 FFFC0D3E 41F9 FFFC 10E0              		lea		_keybdControlCodes,a0
   1465 FFFC0D44 1230 1000                   		move.b	(a0,d1.w),d1
   1466 FFFC0D48 6024                        		bra		.0008
   1467 FFFC0D4A                             .0009:
   1468 FFFC0D4A 0802 0000                   		btst	#0,d2					; is it shift down ?
   1469 FFFC0D4E 670C                        		beq  	.0007
   1470 FFFC0D50 41F9 FFFC 0FE0              		lea		_shiftedScanCodes,a0
   1471 FFFC0D56 1230 1000                   		move.b	(a0,d1.w),d1
   1472 FFFC0D5A 6012                        		bra		.0008
   1473 FFFC0D5C                             .0007:
   1474 FFFC0D5C 41F9 FFFC 0EE0              		lea		_unshiftedScanCodes,a0
   1475 FFFC0D62 1230 1000                   		move.b	(a0,d1.w),d1
   1476 FFFC0D66 33FC 0202 FFDC 0600         		move.w	#$0202,leds
   1477 FFFC0D6E                             .0008:
   1478 FFFC0D6E 33FC 0303 FFDC 0600         		move.w	#$0303,leds
   1479 FFFC0D76 4CDF 010C                   		movem.l	(a7)+,d2/d3/a0
   1480 FFFC0D7A 4E75                        		rts
   1481 FFFC0D7C                             .doKeyup:
   1482 FFFC0D7C 13FC FFFF 0001 0426         		move.b	#-1,_KeyState1
   1483 FFFC0D84 6000 FF04                   		bra		.0003
   1484 FFFC0D88                             .doExtend:
   1485 FFFC0D88 0039 0080 0001 0427         		or.b	#$80,_KeyState2
   1486 FFFC0D90 6000 FEF8                   		bra		.0003
   1487 FFFC0D94                             .doCtrl:
   1488 FFFC0D94 1239 0001 0426              		move.b	_KeyState1,d1
   1489 FFFC0D9A 4239 0001 0426              		clr.b	_KeyState1
   1490 FFFC0DA0 4A01                        		tst.b	d1
   1491 FFFC0DA2 6A0C                        		bpl.s	.0004
   1492 FFFC0DA4 08B9 0002 0001 0427         		bclr	#2,_KeyState2
   1493 FFFC0DAC 6000 FEDC                   		bra		.0003
   1494 FFFC0DB0                             .0004:
   1495 FFFC0DB0 08F9 0002 0001 0427         		bset	#2,_KeyState2
   1496 FFFC0DB8 6000 FED0                   		bra		.0003
   1497 FFFC0DBC                             .doAlt:
   1498 FFFC0DBC 1239 0001 0426              		move.b	_KeyState1,d1
   1499 FFFC0DC2 4239 0001 0426              		clr.b	_KeyState1
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 26
bootrom.asm
   1500 FFFC0DC8 4A01                        		tst.b	d1
   1501 FFFC0DCA 6A0C                        		bpl		.0011
   1502 FFFC0DCC 08B9 0001 0001 0427         		bclr	#1,_KeyState2
   1503 FFFC0DD4 6000 FEB4                   		bra		.0003
   1504 FFFC0DD8                             .0011:
   1505 FFFC0DD8 08F9 0001 0001 0427         		bset	#1,_KeyState2
   1506 FFFC0DE0 6000 FEA8                   		bra		.0003
   1507 FFFC0DE4                             .doTab:
   1508 FFFC0DE4 2F01                        		move.l	d1,-(a7)
   1509 FFFC0DE6 1239 0001 0427              	    move.b  _KeyState2,d1
   1510 FFFC0DEC 0801 0000                   	    btst	#0,d1                 ; is ALT down ?
   1511 FFFC0DF0 6706                        	    beq     .0012
                                             ;    	inc     _iof_switch
   1513 FFFC0DF2 221F                        	    move.l	(a7)+,d1
   1514 FFFC0DF4 6000 FE94                   	    bra     .0003
   1515 FFFC0DF8                             .0012:
   1516 FFFC0DF8 221F                        	    move.l	(a7)+,d1
   1517 FFFC0DFA 6000 FF12                   	    bra     .0013
   1518 FFFC0DFE                             .doShift:
   1519 FFFC0DFE 1239 0001 0426              		move.b	_KeyState1,d1
   1520 FFFC0E04 4239 0001 0426              		clr.b	_KeyState1
   1521 FFFC0E0A 4A01                        		tst.b	d1
   1522 FFFC0E0C 6A0C                        		bpl.s	.0005
   1523 FFFC0E0E 08B9 0000 0001 0427         		bclr	#0,_KeyState2
   1524 FFFC0E16 6000 FE72                   		bra		.0003
   1525 FFFC0E1A                             .0005:
   1526 FFFC0E1A 08F9 0000 0001 0427         		bset	#0,_KeyState2
   1527 FFFC0E22 6000 FE66                   		bra		.0003
   1528 FFFC0E26                             .doNumLock:
   1529 FFFC0E26 0879 0004 0001 0427         		bchg	#4,_KeyState2
   1530 FFFC0E2E 6100 0026                   		bsr		KeybdSetLEDStatus
   1531 FFFC0E32 6000 FE56                   		bra		.0003
   1532 FFFC0E36                             .doCapsLock:
   1533 FFFC0E36 0879 0005 0001 0427         		bchg	#5,_KeyState2
   1534 FFFC0E3E 6100 0016                   		bsr		KeybdSetLEDStatus
   1535 FFFC0E42 6000 FE46                   		bra		.0003
   1536 FFFC0E46                             .doScrollLock:
   1537 FFFC0E46 0879 0006 0001 0427         		bchg	#6,_KeyState2
   1538 FFFC0E4E 6100 0006                   		bsr		KeybdSetLEDStatus
   1539 FFFC0E52 6000 FE36                   		bra		.0003
                                             
   1541 FFFC0E56                             KeybdSetLEDStatus:
   1542 FFFC0E56 48E7 3000                   		movem.l	d2/d3,-(a7)
   1543 FFFC0E5A 4239 0001 0428              		clr.b	KeybdLEDs
   1544 FFFC0E60 0839 0004 0001 0427         		btst	#4,_KeyState2
   1545 FFFC0E68 6708                        		beq.s	.0002
   1546 FFFC0E6A 13FC 0002 0001 0428         		move.b	#2,KeybdLEDs
   1547 FFFC0E72                             .0002:
   1548 FFFC0E72 0839 0005 0001 0427         		btst	#5,_KeyState2
   1549 FFFC0E7A 6708                        		beq.s	.0003
   1550 FFFC0E7C 08F9 0002 0001 0428         		bset	#2,KeybdLEDs
   1551 FFFC0E84                             .0003:
   1552 FFFC0E84 0839 0006 0001 0427         		btst	#6,_KeyState2
   1553 FFFC0E8C 6708                        		beq.s	.0004
   1554 FFFC0E8E 08F9 0000 0001 0428         		bset	#0,KeybdLEDs
   1555 FFFC0E96                             .0004:
   1556 FFFC0E96 123C 00ED                   		move.b	#$ED,d1
   1557 FFFC0E9A 6100 002C                   		bsr		KeybdSendByte
   1558 FFFC0E9E 6100 FD80                   		bsr		KeybdWaitTx
   1559 FFFC0EA2 6100 FD58                   		bsr		KeybdRecvByte
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 27
bootrom.asm
   1560 FFFC0EA6 4A01                        		tst.b	d1
   1561 FFFC0EA8 6B18                        		bmi		.0001
   1562 FFFC0EAA B2BC 0000 00FA              		cmp		#$FA,d1
   1563 FFFC0EB0 1239 0001 0428              		move.b	KeybdLEDs,d1
   1564 FFFC0EB6 6100 0010                   		bsr		KeybdSendByte
   1565 FFFC0EBA 6100 FD64                   		bsr		KeybdWaitTx
   1566 FFFC0EBE 6100 FD3C                   		bsr		KeybdRecvByte
   1567 FFFC0EC2                             .0001:
   1568 FFFC0EC2 4CDF 000C                   		movem.l	(a7)+,d2/d3
   1569 FFFC0EC6 4E75                        		rts
                                             
   1571 FFFC0EC8                             KeybdSendByte:
   1572 FFFC0EC8 13C1 FFDC 0000              		move.b	d1,KEYBD
   1573 FFFC0ECE 4E75                        		rts
                                             	
   1575 FFFC0ED0                             Wait10ms:
   1576 FFFC0ED0 2F03                        		move.l	d3,-(a7)
   1577 FFFC0ED2 263C 0000 03E8              		move.l	#1000,d3
   1578 FFFC0ED8                             .0001:
   1579 FFFC0ED8 51CB FFFE                   		dbra	d3,.0001
   1580 FFFC0EDC 261F                        		move.l	(a7)+,d3
   1581 FFFC0EDE 4E75                        		rts
                                             
                                             
                                             ;--------------------------------------------------------------------------
                                             ; PS2 scan codes to ascii conversion tables.
                                             ;--------------------------------------------------------------------------
                                             ;
   1588 FFFC0EE0                             _unshiftedScanCodes:
   1589 FFFC0EE0 2E A9 2E A5 A3 A1 A2 AC     	dc.b	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
                                             
   1591 FFFC0EE8 2E AA A8 A6 A4 09 60 2E     	dc.b	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
                                             
   1593 FFFC0EF0 2E 2E 2E 2E 2E 71 31 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
                                             
   1595 FFFC0EF8 2E 2E 7A 73 61 77 32 2E     	dc.b	$2e,$2e,$7a,$73,$61,$77,$32,$2e
                                             
   1597 FFFC0F00 2E 63 78 64 65 34 33 2E     	dc.b	$2e,$63,$78,$64,$65,$34,$33,$2e
                                             
   1599 FFFC0F08 2E 20 76 66 74 72 35 2E     	dc.b	$2e,$20,$76,$66,$74,$72,$35,$2e
                                             
   1601 FFFC0F10 2E 6E 62 68 67 79 36 2E     	dc.b	$2e,$6e,$62,$68,$67,$79,$36,$2e
                                             
   1603 FFFC0F18 2E 2E 6D 6A 75 37 38 2E     	dc.b	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
                                             
   1605 FFFC0F20 2E 2C 6B 69 6F 30 39 2E     	dc.b	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
                                             
   1607 FFFC0F28 2E 2E 2F 6C 3B 70 2D 2E     	dc.b	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
                                             
   1609 FFFC0F30 2E 2E 27 2E 5B 3D 2E 2E     	dc.b	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
                                             
   1611 FFFC0F38 AD 2E 0D 5D 2E 5C 2E 2E     	dc.b	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
                                             
   1613 FFFC0F40 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1615 FFFC0F48 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1617 FFFC0F50 98 7F 92 2E 91 90 1B AF     	dc.b	$98,$7f,$92,$2e,$91,$90,$1b,$af
                                             
   1619 FFFC0F58 AB 2E 97 2E 2E 96 AE 2E     	dc.b	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 28
bootrom.asm
                                             
                                             
   1622 FFFC0F60 2E 2E 2E A7 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
                                             
   1624 FFFC0F68 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1626 FFFC0F70 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1628 FFFC0F78 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1630 FFFC0F80 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1632 FFFC0F88 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1634 FFFC0F90 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1636 FFFC0F98 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1638 FFFC0FA0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1640 FFFC0FA8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1642 FFFC0FB0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1644 FFFC0FB8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1646 FFFC0FC0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1648 FFFC0FC8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1650 FFFC0FD0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1652 FFFC0FD8 2E 2E FA 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1655 FFFC0FE0                             _shiftedScanCodes:
   1656 FFFC0FE0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1658 FFFC0FE8 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1660 FFFC0FF0 2E 2E 2E 2E 2E 51 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
                                             
   1662 FFFC0FF8 2E 2E 5A 53 41 57 40 2E     	dc.b	$2e,$2e,$5a,$53,$41,$57,$40,$2e
                                             
   1664 FFFC1000 2E 43 58 44 45 24 23 2E     	dc.b	$2e,$43,$58,$44,$45,$24,$23,$2e
                                             
   1666 FFFC1008 2E 20 56 46 54 52 25 2E     	dc.b	$2e,$20,$56,$46,$54,$52,$25,$2e
                                             
   1668 FFFC1010 2E 4E 42 48 47 59 5E 2E     	dc.b	$2e,$4e,$42,$48,$47,$59,$5e,$2e
                                             
   1670 FFFC1018 2E 2E 4D 4A 55 26 2A 2E     	dc.b	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
                                             
   1672 FFFC1020 2E 3C 4B 49 4F 29 28 2E     	dc.b	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
                                             
   1674 FFFC1028 2E 3E 3F 4C 3A 50 5F 2E     	dc.b	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
                                             
   1676 FFFC1030 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1678 FFFC1038 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 29
bootrom.asm
   1680 FFFC1040 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1682 FFFC1048 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1684 FFFC1050 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1686 FFFC1058 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1689 FFFC1060 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1691 FFFC1068 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1693 FFFC1070 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1695 FFFC1078 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1697 FFFC1080 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1699 FFFC1088 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1701 FFFC1090 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1703 FFFC1098 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1705 FFFC10A0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1707 FFFC10A8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1709 FFFC10B0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1711 FFFC10B8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1713 FFFC10C0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1715 FFFC10C8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1717 FFFC10D0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1719 FFFC10D8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
                                             ; control
   1723 FFFC10E0                             _keybdControlCodes:
   1724 FFFC10E0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1726 FFFC10E8 2E 2E 2E 2E 2E 09 7E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
                                             
   1728 FFFC10F0 2E 2E 2E 2E 2E 11 21 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
                                             
   1730 FFFC10F8 2E 2E 1A 13 01 17 40 2E     	dc.b	$2e,$2e,$1a,$13,$01,$17,$40,$2e
                                             
   1732 FFFC1100 2E 03 18 04 05 24 23 2E     	dc.b	$2e,$03,$18,$04,$05,$24,$23,$2e
                                             
   1734 FFFC1108 2E 20 16 06 14 12 25 2E     	dc.b	$2e,$20,$16,$06,$14,$12,$25,$2e
                                             
   1736 FFFC1110 2E 0E 02 08 07 19 5E 2E     	dc.b	$2e,$0e,$02,$08,$07,$19,$5e,$2e
                                             
   1738 FFFC1118 2E 2E 0D 0A 15 26 2A 2E     	dc.b	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 30
bootrom.asm
   1740 FFFC1120 2E 3C 0B 09 0F 29 28 2E     	dc.b	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
                                             
   1742 FFFC1128 2E 3E 3F 0C 3A 10 5F 2E     	dc.b	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
                                             
   1744 FFFC1130 2E 2E 22 2E 7B 2B 2E 2E     	dc.b	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
                                             
   1746 FFFC1138 2E 2E 0D 7D 2E 7C 2E 2E     	dc.b	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
                                             
   1748 FFFC1140 2E 2E 2E 2E 2E 2E 08 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
                                             
   1750 FFFC1148 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1752 FFFC1150 2E 7F 2E 2E 2E 2E 1B 2E     	dc.b	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
                                             
   1754 FFFC1158 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
                                             
   1757 FFFC1160                             _keybdExtendedCodes:
   1758 FFFC1160 2E 2E 2E 2E A3 A1 A2 2E     	dc.b	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
                                             
   1760 FFFC1168 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1762 FFFC1170 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1764 FFFC1178 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1766 FFFC1180 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1768 FFFC1188 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1770 FFFC1190 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1772 FFFC1198 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1774 FFFC11A0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1776 FFFC11A8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1778 FFFC11B0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1780 FFFC11B8 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1782 FFFC11C0 2E 2E 2E 2E 2E 2E 2E 2E     	dc.b	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
                                             
   1784 FFFC11C8 2E 95 2E 93 94 2E 2E 2E     	dc.b	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
                                             
   1786 FFFC11D0 98 99 92 2E 91 90 2E 2E     	dc.b	$98,$99,$92,$2e,$91,$90,$2e,$2e
                                             
   1788 FFFC11D8 2E 2E 97 2E 2E 96 2E 2E     	dc.b	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
                                             
                                             
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             ; Monitor
                                             ;==============================================================================
                                             ;==============================================================================
                                             ;
   1798 FFFC11E0                             StartMon:
   1799 FFFC11E0                             Monitor:
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 31
bootrom.asm
                                             ;	lea		STACK,a7		; reset the stack pointer
   1801 FFFC11E0 4239 0001 0424              		clr.b	KeybdEcho		; turn off keyboard echo
   1802 FFFC11E6                             PromptLn:
   1803 FFFC11E6 6100 F036                   		bsr		CRLF
   1804 FFFC11EA 123C 0024                   		move.b	#'$',d1
   1805 FFFC11EE 6100 F074                   		bsr		DisplayChar
                                             
                                             ; Get characters until a CR is keyed
                                             ;
   1809 FFFC11F2                             Prompt3:
   1810 FFFC11F2 6100 FA66                   		bsr		GetKey
   1811 FFFC11F6 0C01 000D                   		cmpi.b	#CR,d1
   1812 FFFC11FA 6706                        		beq.s	Prompt1
   1813 FFFC11FC 6100 F066                   		bsr		DisplayChar
   1814 FFFC1200 60F0                        		bra.s	Prompt3
                                             
                                             ; Process the screen line that the CR was keyed on
                                             ;
   1818 FFFC1202                             Prompt1:
   1819 FFFC1202 4239 0001 0419              		clr.b	CursorCol		; go back to the start of the line
   1820 FFFC1208 6100 F02A                   		bsr		CalcScreenLoc	; a0 = screen memory location
   1821 FFFC120C 1218                        		move.b	(a0)+,d1
   1822 FFFC120E 0C01 0024                   		cmpi.b	#'$',d1			; skip over '$' prompt character
   1823 FFFC1212 6602                        		bne.s	Prompt2
   1824 FFFC1214 1218                        		move.b	(a0)+,d1
                                             	
                                             ; Dispatch based on command character
                                             ;
   1828 FFFC1216                             Prompt2:
   1829 FFFC1216 0C01 0061                   		cmpi.b	#'a',d1
   1830 FFFC121A 6700 0A90                   		beq		AudioInputTest
   1831 FFFC121E 0C01 0062                   		cmpi.b	#'b',d1
   1832 FFFC1222 6700 F6D8                   		beq		BouncingBalls
   1833 FFFC1226 0C01 0067                   		cmpi.b	#'g',d1
   1834 FFFC122A 6700 078E                   		beq		GraphicsDemo
   1835 FFFC122E 0C01 003A                   		cmpi.b	#':',d1			; $: - edit memory
   1836 FFFC1232 6700 0206                   		beq		EditMem
   1837 FFFC1236 0C01 0044                   		cmpi.b	#'D',d1			; $D - dump memory
   1838 FFFC123A 6700 026C                   		beq		DumpMem
   1839 FFFC123E 0C01 0046                   		cmpi.b	#'F',d1
   1840 FFFC1242 6700 019C                   		beq		FillMem
   1841 FFFC1246 0C01 0042                   		cmpi.b	#'B',d1			; $B - start tiny basic
   1842 FFFC124A 6606                        		bne.s	.0001
   1843 FFFC124C 4EF9 FFFC C000              		jmp		$FFFCC000
   1844 FFFC1252                             .0001:
   1845 FFFC1252 0C01 004A                   		cmpi.b	#'J',d1			; $J - execute code
   1846 FFFC1256 6700 0240                   		beq		ExecuteCode
   1847 FFFC125A 0C01 004C                   		cmpi.b	#'L',d1			; $L - load S19 file
   1848 FFFC125E 6700 0472                   		beq		LoadS19
   1849 FFFC1262 0C01 003F                   		cmpi.b	#'?',d1			; $? - display help
   1850 FFFC1266 672A                        		beq		DisplayHelp
   1851 FFFC1268 0C01 0043                   		cmpi.b	#'C',d1			; $C - clear screen
   1852 FFFC126C 6704                        		beq		TestCLS
   1853 FFFC126E 6000 FF70                   		bra		Monitor
                                             
   1855 FFFC1272                             TestCLS:
   1856 FFFC1272 1218                        		move.b	(a0)+,d1
   1857 FFFC1274 5282                        		addq	#1,d2
   1858 FFFC1276 0C01 004C                   		cmpi.b	#'L',d1
   1859 FFFC127A 6600 FF64                   		bne		Monitor
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 32
bootrom.asm
   1860 FFFC127E 1218                        		move.b	(a0)+,d1
   1861 FFFC1280 5282                        		addq	#1,d2
   1862 FFFC1282 0C01 0053                   		cmpi.b	#'S',d1
   1863 FFFC1286 6600 FF58                   		bne		Monitor
   1864 FFFC128A 6100 02DC                   		bsr		ClearScreen
   1865 FFFC128E 6000 FF50                   		bra		Monitor
                                             	
   1867 FFFC1292                             DisplayHelp:
   1868 FFFC1292 43F9 FFFC 12A2              		lea		HelpMsg,a1
   1869 FFFC1298 4EB9 FFFC 0436              		jsr		DisplayString
   1870 FFFC129E 6000 FF40                   		bra		Monitor
                                             
   1872 FFFC12A2                             HelpMsg:
   1873 FFFC12A2 3F 20 3D 20 44 69 73 70     		dc.b	"? = Display help",CR,LF
   1874 FFFC12AA 6C 61 79 20 68 65 6C 70     
   1875 FFFC12B2 0D 0A                       
   1876 FFFC12B4 43 4C 53 20 3D 20 63 6C     		dc.b	"CLS = clear screen",CR,LF
   1877 FFFC12BC 65 61 72 20 73 63 72 65     
   1878 FFFC12C4 65 6E 0D 0A                 
   1879 FFFC12C8 3A 20 3D 20 45 64 69 74     		dc.b	": = Edit memory bytes",CR,LF
   1880 FFFC12D0 20 6D 65 6D 6F 72 79 20     
   1881 FFFC12D8 62 79 74 65 73 0D 0A        
   1882 FFFC12DF 46 20 3D 20 46 69 6C 6C     		dc.b	"F = Fill memory",CR,LF
   1883 FFFC12E7 20 6D 65 6D 6F 72 79 0D     
   1884 FFFC12EF 0A                          
   1885 FFFC12F0 4C 20 3D 20 4C 6F 61 64     		dc.b	"L = Load S19 file",CR,LF
   1886 FFFC12F8 20 53 31 39 20 66 69 6C     
   1887 FFFC1300 65 0D 0A                    
   1888 FFFC1303 44 20 3D 20 44 75 6D 70     		dc.b	"D = Dump memory",CR,LF
   1889 FFFC130B 20 6D 65 6D 6F 72 79 0D     
   1890 FFFC1313 0A                          
   1891 FFFC1314 42 20 3D 20 73 74 61 72     		dc.b	"B = start tiny basic",CR,LF
   1892 FFFC131C 74 20 74 69 6E 79 20 62     
   1893 FFFC1324 61 73 69 63 0D 0A           
   1894 FFFC132A 4A 20 3D 20 4A 75 6D 70     		dc.b	"J = Jump to code",CR,LF,0
   1895 FFFC1332 20 74 6F 20 63 6F 64 65     
   1896 FFFC133A 0D 0A 00                    
   1897 FFFC133D FF                         		even
                                             
                                             ;------------------------------------------------------------------------------
                                             ; This routine borrowed from Gordo's Tiny Basic interpreter.
                                             ; Used to fetch a command line. (Not currently used).
                                             ;
                                             ; d0.b	- command prompt
                                             ;------------------------------------------------------------------------------
                                             
   1906 FFFC133E                             GetCmdLine:
   1907 FFFC133E 6100 EF24                   		bsr		DisplayChar		; display prompt
   1908 FFFC1342 103C 0020                   		move.b	#' ',d0
   1909 FFFC1346 6100 EF1C                   		bsr		DisplayChar
   1910 FFFC134A 41F9 0001 0800              		lea		CmdBuf,a0
   1911 FFFC1350                             .0001:
   1912 FFFC1350 6100 F908                   		bsr		GetKey
   1913 FFFC1354 B03C 0008                   		cmp.b	#CTRLH,d0
   1914 FFFC1358 6726                        		beq.s	.0003
   1915 FFFC135A B03C 0018                   		cmp.b	#CTRLX,d0
   1916 FFFC135E 6744                        		beq.s	.0004
   1917 FFFC1360 B03C 000D                   		cmp.b	#CR,d0
   1918 FFFC1364 6706                        		beq.s	.0002
   1919 FFFC1366 B03C 0020                   		cmp.b	#' ',d0
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 33
bootrom.asm
   1920 FFFC136A 65E4                        		bcs.s	.0001
   1921 FFFC136C                             .0002:
   1922 FFFC136C 10C0                        		move.b	d0,(a0)+
   1923 FFFC136E 6100 EEF4                   		bsr		DisplayChar
   1924 FFFC1372 B03C 000D                   		cmp.b	#CR,d0
   1925 FFFC1376 675E                        		beq		.0007
   1926 FFFC1378 B1FC 0001 084F              		cmp.l	#CmdBufEnd-1,a0
   1927 FFFC137E 65D0                        		bcs.s	.0001
   1928 FFFC1380                             .0003:
   1929 FFFC1380 103C 0008                   		move.b	#CTRLH,d0
   1930 FFFC1384 6100 EEDE                   		bsr		DisplayChar
   1931 FFFC1388 103C 0020                   		move.b	#' ',d0
   1932 FFFC138C 6100 EED6                   		bsr		DisplayChar
   1933 FFFC1390 B1FC 0001 0800              		cmp.l	#CmdBuf,a0
   1934 FFFC1396 63B8                        		bls.s	.0001
   1935 FFFC1398 103C 0008                   		move.b	#CTRLH,d0
   1936 FFFC139C 6100 EEC6                   		bsr		DisplayChar
   1937 FFFC13A0 5388                        		subq.l	#1,a0
   1938 FFFC13A2 60AC                        		bra.s	.0001
   1939 FFFC13A4                             .0004:
   1940 FFFC13A4 2208                        		move.l	a0,d1
   1941 FFFC13A6 0481 0001 0800              		sub.l	#CmdBuf,d1
   1942 FFFC13AC 671E                        		beq.s	.0006
   1943 FFFC13AE 5381                        		subq	#1,d1
   1944 FFFC13B0                             .0005:
   1945 FFFC13B0 103C 0008                   		move.b	#CTRLH,d0
   1946 FFFC13B4 6100 EEAE                   		bsr		DisplayChar
   1947 FFFC13B8 103C 0020                   		move.b	#' ',d0
   1948 FFFC13BC 6100 EEA6                   		bsr		DisplayChar
   1949 FFFC13C0 103C 0008                   		move.b	#CTRLH,d0
   1950 FFFC13C4 6100 EE9E                   		bsr		DisplayChar
   1951 FFFC13C8 51C9 FFE6                   		dbra	d1,.0005
   1952 FFFC13CC                             .0006:
   1953 FFFC13CC 41F9 0001 0800              		lea		CmdBuf,a0
   1954 FFFC13D2 6000 FF7C                   		bra		.0001
   1955 FFFC13D6                             .0007:
   1956 FFFC13D6 103C 000A                   		move.b	#LF,d0
   1957 FFFC13DA 6100 EE88                   		bsr		DisplayChar
   1958 FFFC13DE 4E75                        		rts
                                             
                                             		
                                             ;------------------------------------------------------------------------------
                                             ; Fill memory
                                             ; FB = fill bytes		FB 00000010 100 FF	; fill starting at 10 for 256 bytes
                                             ; FW = fill words
                                             ; FL = fill longs
                                             ; F = fill bytes
                                             ;------------------------------------------------------------------------------
                                             ;
   1969 FFFC13E0                             FillMem:
   1970 FFFC13E0 1218                        		move.b	(a0)+,d1
                                             		;bsr		ScreenToAscii
   1972 FFFC13E2 1801                        		move.b	d1,d4			; d4 = fill size
   1973 FFFC13E4 6100 0044                   		bsr		ignBlanks
   1974 FFFC13E8 6100 00F8                   		bsr		GetHexNumber
   1975 FFFC13EC 2241                        		move.l	d1,a1			; a1 = start
   1976 FFFC13EE 6100 003A                   		bsr		ignBlanks
   1977 FFFC13F2 6100 00EE                   		bsr		GetHexNumber
   1978 FFFC13F6 2601                        		move.l	d1,d3			; d3 = count
   1979 FFFC13F8 6100 0030                   		bsr		ignBlanks
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 34
bootrom.asm
   1980 FFFC13FC 6100 00E4                   		bsr		GetHexNumber	; fill value
   1981 FFFC1400 0C04 004C                   		cmpi.b	#'L',d4
   1982 FFFC1404 660A                        		bne		fmem1
   1983 FFFC1406                             fmemL:
   1984 FFFC1406 22C1                        		move.l	d1,(a1)+
   1985 FFFC1408 5383                        		sub.l	#1,d3
   1986 FFFC140A 66FA                        		bne.s	fmemL
   1987 FFFC140C 6000 FDD2                   		bra		Monitor
   1988 FFFC1410                             fmem1
   1989 FFFC1410 0C04 0057                   		cmpi.b	#'W',d4
   1990 FFFC1414 660A                        		bne		fmemB
   1991 FFFC1416                             fmemW:
   1992 FFFC1416 32C1                        		move.w	d1,(a1)+
   1993 FFFC1418 5383                        		sub.l	#1,d3
   1994 FFFC141A 66FA                        		bne.s	fmemW
   1995 FFFC141C 6000 FDC2                   		bra		Monitor
   1996 FFFC1420                             fmemB:
   1997 FFFC1420 12C1                        		move.b	d1,(a1)+
   1998 FFFC1422 5383                        		sub.l	#1,d3
   1999 FFFC1424 66FA                        		bne.s	fmemB
   2000 FFFC1426 6000 FDB8                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Modifies:
                                             ;	a0	- text pointer
                                             ;------------------------------------------------------------------------------
                                             ;
   2007 FFFC142A                             ignBlanks:
   2008 FFFC142A 3F01                        		move.w	d1,-(a7)
   2009 FFFC142C 1218                        		move.b	(a0)+,d1
   2010 FFFC142E 0C01 0020                   		cmpi.b	#' ',d1
   2011 FFFC1432 67F6                        		beq.s	ignBlanks
   2012 FFFC1434 5388                        		subq	#1,a0
   2013 FFFC1436 321F                        		move.w	(a7)+,d1
   2014 FFFC1438 4E75                        		rts
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Edit memory byte.
                                             ;------------------------------------------------------------------------------
                                             ;
   2020 FFFC143A                             EditMem:
   2021 FFFC143A 6100 FFEE                   		bsr		ignBlanks
   2022 FFFC143E 6100 00A2                   		bsr		GetHexNumber
   2023 FFFC1442 2241                        		move.l	d1,a1
   2024 FFFC1444                             edtmem1:
   2025 FFFC1444 6100 FFE4                   		bsr		ignBlanks
   2026 FFFC1448 6100 0098                   		bsr		GetHexNumber
   2027 FFFC144C 12C1                        		move.b	d1,(a1)+
   2028 FFFC144E 6100 FFDA                   		bsr		ignBlanks
   2029 FFFC1452 6100 008E                   		bsr		GetHexNumber
   2030 FFFC1456 12C1                        		move.b	d1,(a1)+
   2031 FFFC1458 6100 FFD0                   		bsr		ignBlanks
   2032 FFFC145C 6100 0084                   		bsr		GetHexNumber
   2033 FFFC1460 12C1                        		move.b	d1,(a1)+
   2034 FFFC1462 6100 FFC6                   		bsr		ignBlanks
   2035 FFFC1466 6100 007A                   		bsr		GetHexNumber
   2036 FFFC146A 12C1                        		move.b	d1,(a1)+
   2037 FFFC146C 6100 FFBC                   		bsr		ignBlanks
   2038 FFFC1470 6100 0070                   		bsr		GetHexNumber
   2039 FFFC1474 12C1                        		move.b	d1,(a1)+
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 35
bootrom.asm
   2040 FFFC1476 6100 FFB2                   		bsr		ignBlanks
   2041 FFFC147A 6100 0066                   		bsr		GetHexNumber
   2042 FFFC147E 12C1                        		move.b	d1,(a1)+
   2043 FFFC1480 6100 FFA8                   		bsr		ignBlanks
   2044 FFFC1484 6100 005C                   		bsr		GetHexNumber
   2045 FFFC1488 12C1                        		move.b	d1,(a1)+
   2046 FFFC148A 6100 FF9E                   		bsr		ignBlanks
   2047 FFFC148E 6100 0052                   		bsr		GetHexNumber
   2048 FFFC1492 12C1                        		move.b	d1,(a1)+
   2049 FFFC1494 6000 FD4A                   		bra		Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Execute code at the specified address.
                                             ;------------------------------------------------------------------------------
                                             ;
   2055 FFFC1498                             ExecuteCode:
   2056 FFFC1498 6100 FF90                   		bsr		ignBlanks
   2057 FFFC149C 6100 0044                   		bsr		GetHexNumber
   2058 FFFC14A0 2041                        		move.l	d1,a0
   2059 FFFC14A2 4E90                        		jsr		(a0)
   2060 FFFC14A4 6000 FD3A                   		bra     Monitor
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Do a memory dump of the requested location.
                                             ;------------------------------------------------------------------------------
                                             ;
   2066 FFFC14A8                             DumpMem:
   2067 FFFC14A8 6100 FF80                   		bsr		ignBlanks
   2068 FFFC14AC 6100 0034                   		bsr		GetHexNumber
   2069 FFFC14B0 4A00                        		tst.b	d0				; was there a number ?
   2070 FFFC14B2 6700 FD2C                   		beq		Monitor			; no, other garbage, just ignore
   2071 FFFC14B6 2601                        		move.l	d1,d3			; save off start of range
   2072 FFFC14B8 6100 FF70                   		bsr		ignBlanks
   2073 FFFC14BC 6100 0024                   		bsr		GetHexNumber
   2074 FFFC14C0 4A00                        		tst.b	d0
   2075 FFFC14C2 6608                        		bne.s	DumpMem1
   2076 FFFC14C4 2203                        		move	d3,d1
   2077 FFFC14C6 0681 0000 0040              		addi.l	#64,d1			; no end specified, just dump 64 bytes
   2078 FFFC14CC                             DumpMem1:
   2079 FFFC14CC 2043                        		move.l	d3,a0
   2080 FFFC14CE 2241                        		move.l	d1,a1
   2081 FFFC14D0 4EB9 FFFC 021E              		jsr		CRLF
   2082 FFFC14D6                             .0001:
   2083 FFFC14D6 B3C8                        		cmpa.l	a0,a1
   2084 FFFC14D8 6200 FD06                   		bhi		Monitor
   2085 FFFC14DC 6100 F6D4                   		bsr		DisplayMem
   2086 FFFC14E0 60F4                        		bra.s	.0001
                                             
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Get a hexidecimal number. Maximum of eight digits.
                                             ;
                                             ; Returns:
                                             ;	d0 = number of digits
                                             ;	d1 = value of number
                                             ;------------------------------------------------------------------------------
                                             ;
   2097 FFFC14E2                             GetHexNumber:
   2098 FFFC14E2 2F02                        		move.l	d2,-(a7)
   2099 FFFC14E4 4282                        		clr.l	d2
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 36
bootrom.asm
   2100 FFFC14E6 7000                        		moveq	#0,d0
   2101 FFFC14E8                             .0002:
   2102 FFFC14E8 1218                        		move.b	(a0)+,d1
   2103 FFFC14EA 6100 0020                   		bsr		AsciiToHexNybble
   2104 FFFC14EE B23C 00FF                   		cmp.b	#0xff,d1
   2105 FFFC14F2 6712                        		beq.s	.0001
   2106 FFFC14F4 E98A                        		lsl.l	#4,d2
   2107 FFFC14F6 0281 0000 000F              		andi.l	#0x0f,d1
   2108 FFFC14FC 8481                        		or.l	d1,d2
   2109 FFFC14FE 5280                        		addq	#1,d0
   2110 FFFC1500 0C00 0008                   		cmpi.b	#8,d0
   2111 FFFC1504 65E2                        		blo.s	.0002
   2112 FFFC1506                             .0001:
   2113 FFFC1506 2202                        		move.l	d2,d1
   2114 FFFC1508 241F                        		move.l	(a7)+,d2
   2115 FFFC150A 4E75                        		rts	
                                             
                                             ;------------------------------------------------------------------------------
                                             ; Convert ASCII character in the range '0' to '9', 'a' tr 'f' or 'A' to 'F'
                                             ; to a hex nybble.
                                             ;------------------------------------------------------------------------------
                                             ;
   2122 FFFC150C                             AsciiToHexNybble:
   2123 FFFC150C 0C01 0030                   		cmpi.b	#'0',d1
   2124 FFFC1510 6538                        		blo.s	gthx3
   2125 FFFC1512 0C01 0039                   		cmpi.b	#'9',d1
   2126 FFFC1516 6206                        		bhi.s	gthx5
   2127 FFFC1518 0401 0030                   		subi.b	#'0',d1
   2128 FFFC151C 4E75                        		rts
   2129 FFFC151E                             gthx5:
   2130 FFFC151E 0C01 0041                   		cmpi.b	#'A',d1
   2131 FFFC1522 6526                        		blo.s	gthx3
   2132 FFFC1524 0C01 0046                   		cmpi.b	#'F',d1
   2133 FFFC1528 620A                        		bhi.s	gthx6
   2134 FFFC152A 0401 0041                   		subi.b	#'A',d1
   2135 FFFC152E 0601 000A                   		addi.b	#10,d1
   2136 FFFC1532 4E75                        		rts
   2137 FFFC1534                             gthx6:
   2138 FFFC1534 0C01 0061                   		cmpi.b	#'a',d1
   2139 FFFC1538 6510                        		blo.s	gthx3
   2140 FFFC153A 0C01 0066                   		cmpi.b	#'f',d1
   2141 FFFC153E 620A                        		bhi.s	gthx3
   2142 FFFC1540 0401 0061                   		subi.b	#'a',d1
   2143 FFFC1544 0601 000A                   		addi.b	#10,d1
   2144 FFFC1548 4E75                        		rts
   2145 FFFC154A                             gthx3:
   2146 FFFC154A 72FF                        		moveq	#-1,d1		; not a hex number
   2147 FFFC154C 4E75                        		rts
                                             
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             ; The fast way to clear the screen. Uses the blitter.
                                             ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                             
   2153 FFFC154E                             WaitBlit:
   2154 FFFC154E 48E7 8004                   		movem.l	d0/a5,-(a7)
   2155 FFFC1552 4BF9 FFE0 0000              		lea		VDGREG,a5
   2156 FFFC1558                             .0003:
   2157 FFFC1558 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2158 FFFC155C 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2159 FFFC1560 67F6                        		beq.s	.0003				; branch if not done
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 37
bootrom.asm
   2160 FFFC1562 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2161 FFFC1566 4E75                        		rts
                                             
   2163 FFFC1568                             ClearScreen:
   2164 FFFC1568 4BF9 FFE0 0000              		lea		VDGREG,a5
   2165 FFFC156E 6100 FFDE                   		bsr		WaitBlit
   2166 FFFC1572 2B7C 0001 D4C0 04BC         		move.l	#BMP_WIDTH*BMP_HEIGHT,$4BC(a5)		; set transfer count  pixels
   2167 FFFC157A 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   2168 FFFC1582 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2169 FFFC158A 2B7C 0000 0190 04A4         		move.l	#BMP_WIDTH,$4A4(a5)		; set destination width
   2170 FFFC1592 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2171 FFFC159A 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   2172 FFFC15A0 6100 FFAC                   		bsr		WaitBlit
   2173 FFFC15A4 3B7C 0001 043E              		move.w	#1,$43E(a5)			; access z buffer
   2174 FFFC15AA 2B7C 0000 1D4C 04BC         		move.l	#BMP_WIDTH*BMP_HEIGHT/16,$4BC(a5)		; set transfer count  pixels
   2175 FFFC15B2 3B7C FFFF 04A8              		move.w	#$FFFF,$4A8(a5)		; set lowest priority
   2176 FFFC15B8 3B7C FFFF 043C              		move.w	#$FFFF,$43C(a5)		; z layer = 3
   2177 FFFC15BE 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2178 FFFC15C6 2B7C 0000 0190 04A4         		move.l	#BMP_WIDTH,$4A4(a5)		; set destination width
   2179 FFFC15CE 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2180 FFFC15D6 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   2181 FFFC15DC 6100 FF70                   		bsr		WaitBlit
   2182 FFFC15E0 3B7C 0000 043E              		move.w	#0,$43E(a5)			; access normal buffer again
                                             
                                             		; clear virtual screen too
   2185 FFFC15E6                             ClearVirtScreen:
   2186 FFFC15E6 7020                        		moveq	#$20,d0				; d0 = space character
   2187 FFFC15E8 323C 073A                   		move.w	#50*37,d1
   2188 FFFC15EC 4BF9 1FFF 0000              		lea		VirtScreen,a5
   2189 FFFC15F2                             .0001:
   2190 FFFC15F2 1AC0                        		move.b	d0,(a5)+
   2191 FFFC15F4 51C9 FFFC                   		dbra	d1,.0001
   2192 FFFC15F8 4E75                        		rts
                                             
   2194 FFFC15FA                             ScrollUp:
   2195 FFFC15FA 48E7 8084                   		movem.l	d0/a0/a5,-(a7)
   2196 FFFC15FE 4BF9 FFE0 0000              		lea		VDGREG,a5
   2197 FFFC1604                             .0003:								
   2198 FFFC1604 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2199 FFFC1608 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2200 FFFC160C 67F6                        		beq.s	.0003				; branch if not done
                                             		; Channel A
   2202 FFFC160E 2B7C 0001 C840 04B0         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$4B0(a5)	; set source transfer count pixels
   2203 FFFC1616 2B7C 0000 0C80 0480         		move.l	#BMP_WIDTH*8,$480(a5)		; set source bitmap address (address in graphics mem)
   2204 FFFC161E 2B7C 0000 0000 0484         		move.l	#0,$484(a5)			; set src modulo
                                             		; Channel D
   2206 FFFC1626 2B7C 0001 C840 04BC         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$4BC(a5)	; set destination transfer count pixels
   2207 FFFC162E 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2208 FFFC1636 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
                                             
   2210 FFFC163E 2B7C FFFF FFFF 04A0         		move.l	#-1,$4A0(a5)		; set source width
   2211 FFFC1646 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   2212 FFFC164E 3B7C 0011 04AE              		move.w	#$11,$4AE(a5)		; set op A ($11 = copy A)
   2213 FFFC1654 3B7C 8082 04AC              		move.w	#%1000000010000010,$4AC(a5)		; enable channel A,D, start transfer
                                             
                                             		; Scroll virtual screen
   2216 FFFC165A 4BF9 1FFF 0000              		lea		VirtScreen,a5
   2217 FFFC1660 204D                        		movea.l	a5,a0
   2218 FFFC1662 1039 0001 041B              		move.b	TextCols,d0
   2219 FFFC1668 4880                        		ext.w	d0
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 38
bootrom.asm
   2220 FFFC166A D1C0                        		add.l	d0,a0
   2221 FFFC166C C0FC 0025                   		mulu	#37,d0
   2222 FFFC1670                             .0001:
   2223 FFFC1670 1AD8                        		move.b	(a0)+,(a5)+
   2224 FFFC1672 51C8 FFFC                   		dbra	d0,.0001
   2225 FFFC1676 4CDF 2101                   		movem.l	(a7)+,d0/a0/a5
                                             
   2227 FFFC167A                             BlankLastLine:
   2228 FFFC167A 48E7 8004                   		movem.l	d0/a5,-(a7)
                                             		; Channel D
   2230 FFFC167E 4BF9 FFE0 0000              		lea		VDGREG,a5
   2231 FFFC1684                             .0003:								
   2232 FFFC1684 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2233 FFFC1688 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2234 FFFC168C 67F6                        		beq.s	.0003				; branch if not done
   2235 FFFC168E 2B7C 0000 0C80 04BC         		move.l	#BMP_WIDTH*8,$4BC(a5)		; set destination transfer count pixels
   2236 FFFC1696 2B7C 0001 C840 0498         		move.l	#BMP_WIDTH*(BMP_HEIGHT-8),$498(a5)	; set destination address
   2237 FFFC169E 2B7C 0000 0000 049C         		move.l	#0,$49C(a5)			; set dst modulo
   2238 FFFC16A6 2B7C FFFF FFFF 04A4         		move.l	#-1,$4A4(a5)		; set destination width
   2239 FFFC16AE 3B79 0001 0004 04A8         		move.w	bkcolor,$4A8(a5)	; set color dark blue
   2240 FFFC16B6 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
   2241 FFFC16BC 4BF9 1FFF 073A              		lea		VirtScreen+50*37,a5
   2242 FFFC16C2 7028                        		moveq	#40,d0
   2243 FFFC16C4                             .0001:
   2244 FFFC16C4 1AFC 0020                   		move.b	#$20,(a5)+
   2245 FFFC16C8 51C8 FFFA                   		dbra	d0,.0001
   2246 FFFC16CC 4CDF 2001                   		movem.l	(a7)+,d0/a5
   2247 FFFC16D0 4E75                        		rts
                                             
                                             ;==============================================================================
                                             ; Load an S19 format file
                                             ;==============================================================================
                                             ;
   2253 FFFC16D2                             LoadS19:
   2254 FFFC16D2 600A                        	bra		ProcessRec
   2255 FFFC16D4                             NextRec:
   2256 FFFC16D4 6100 017A                   	bsr		sGetChar
   2257 FFFC16D8 0C00 000A                   	cmpi.b	#LF,d0
   2258 FFFC16DC 66F6                        	bne		NextRec
   2259 FFFC16DE                             ProcessRec
   2260 FFFC16DE 6100 0170                   	bsr		sGetChar
   2261 FFFC16E2 1800                        	move.b	d0,d4
   2262 FFFC16E4 0C04 001A                   	cmpi.b	#26,d4		; CTRL-Z ?
   2263 FFFC16E8 6700 FAF6                   	beq		Monitor
   2264 FFFC16EC 0C04 0053                   	cmpi.b	#'S',d4
   2265 FFFC16F0 66E2                        	bne		NextRec
   2266 FFFC16F2 6100 015C                   	bsr		sGetChar
   2267 FFFC16F6 1800                        	move.b	d0,d4
   2268 FFFC16F8 0C04 0030                   	cmpi.b	#'0',d4
   2269 FFFC16FC 65D6                        	blo		NextRec
   2270 FFFC16FE 0C04 0039                   	cmpi.b	#'9',d4		; d4 = record type
   2271 FFFC1702 62D0                        	bhi		NextRec
   2272 FFFC1704 6100 014A                   	bsr		sGetChar
   2273 FFFC1708 6100 FE02                   	bsr		AsciiToHexNybble
   2274 FFFC170C 1401                        	move.b	d1,d2
   2275 FFFC170E 6100 0140                   	bsr		sGetChar
   2276 FFFC1712 6100 FDF8                   	bsr		AsciiToHexNybble
   2277 FFFC1716 E90A                        	lsl.b	#4,d2
   2278 FFFC1718 8202                        	or.b	d2,d1		; d1 = byte count
   2279 FFFC171A 1601                        	move.b	d1,d3		; d3 = byte count
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 39
bootrom.asm
   2280 FFFC171C 0C04 0030                   	cmpi.b	#'0',d4		; manufacturer ID record, ignore
   2281 FFFC1720 67B2                        	beq		NextRec
   2282 FFFC1722 0C04 0031                   	cmpi.b	#'1',d4
   2283 FFFC1726 676A                        	beq		ProcessS1
   2284 FFFC1728 0C04 0032                   	cmpi.b	#'2',d4
   2285 FFFC172C 676A                        	beq		ProcessS2
   2286 FFFC172E 0C04 0033                   	cmpi.b	#'3',d4
   2287 FFFC1732 676A                        	beq		ProcessS3
   2288 FFFC1734 0C04 0035                   	cmpi.b	#'5',d4		; record count record, ignore
   2289 FFFC1738 679A                        	beq		NextRec
   2290 FFFC173A 0C04 0037                   	cmpi.b	#'7',d4
   2291 FFFC173E 6764                        	beq		ProcessS7
   2292 FFFC1740 0C04 0038                   	cmpi.b	#'8',d4
   2293 FFFC1744 676C                        	beq		ProcessS8
   2294 FFFC1746 0C04 0039                   	cmpi.b	#'9',d4
   2295 FFFC174A 6774                        	beq		ProcessS9
   2296 FFFC174C 6086                        	bra		NextRec
                                             
   2298 FFFC174E                             pcssxa
   2299 FFFC174E 0243 00FF                   	andi.w	#0xff,d3
   2300 FFFC1752 5343                        	subi.w	#1,d3			; one less for dbra
   2301 FFFC1754                             pcss1a
   2302 FFFC1754 4282                        	clr.l	d2
   2303 FFFC1756 6100 00F8                   	bsr		sGetChar
   2304 FFFC175A 6100 FDB0                   	bsr		AsciiToHexNybble
   2305 FFFC175E E98A                        	lsl.l	#4,d2
   2306 FFFC1760 8401                        	or.b	d1,d2
   2307 FFFC1762 6100 00EC                   	bsr		sGetChar
   2308 FFFC1766 6100 FDA4                   	bsr		AsciiToHexNybble
   2309 FFFC176A E98A                        	lsl.l	#4,d2
   2310 FFFC176C 8401                        	or.b	d1,d2
   2311 FFFC176E 12C2                        	move.b	d2,(a1)+
   2312 FFFC1770 51CB FFE2                   	dbra	d3,pcss1a
                                             ; Get the checksum byte
   2314 FFFC1774 4282                        	clr.l	d2
   2315 FFFC1776 6100 00D8                   	bsr		sGetChar
   2316 FFFC177A 6100 FD90                   	bsr		AsciiToHexNybble
   2317 FFFC177E E98A                        	lsl.l	#4,d2
   2318 FFFC1780 8401                        	or.b	d1,d2
   2319 FFFC1782 6100 00CC                   	bsr		sGetChar
   2320 FFFC1786 6100 FD84                   	bsr		AsciiToHexNybble
   2321 FFFC178A E98A                        	lsl.l	#4,d2
   2322 FFFC178C 8401                        	or.b	d1,d2
   2323 FFFC178E 6000 FF44                   	bra		NextRec
                                             
   2325 FFFC1792                             ProcessS1:
   2326 FFFC1792 6100 003A                   	bsr		S19Get16BitAddress
   2327 FFFC1796 60B6                        	bra		pcssxa
   2328 FFFC1798                             ProcessS2:
   2329 FFFC1798 6100 0042                   	bsr		S19Get24BitAddress
   2330 FFFC179C 60B0                        	bra		pcssxa
   2331 FFFC179E                             ProcessS3:
   2332 FFFC179E 6100 004A                   	bsr		S19Get32BitAddress
   2333 FFFC17A2 60AA                        	bra		pcssxa
   2334 FFFC17A4                             ProcessS7:
   2335 FFFC17A4 6100 0044                   	bsr		S19Get32BitAddress
   2336 FFFC17A8 23C9 0001 0438              	move.l	a1,S19StartAddress
   2337 FFFC17AE 6000 FA30                   	bra		Monitor
   2338 FFFC17B2                             ProcessS8:
   2339 FFFC17B2 6100 0028                   	bsr		S19Get24BitAddress
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 40
bootrom.asm
   2340 FFFC17B6 23C9 0001 0438              	move.l	a1,S19StartAddress
   2341 FFFC17BC 6000 FA22                   	bra		Monitor
   2342 FFFC17C0                             ProcessS9:
   2343 FFFC17C0 6100 000C                   	bsr		S19Get16BitAddress
   2344 FFFC17C4 23C9 0001 0438              	move.l	a1,S19StartAddress
   2345 FFFC17CA 6000 FA14                   	bra		Monitor
                                             
   2347 FFFC17CE                             S19Get16BitAddress:
   2348 FFFC17CE 4282                        	clr.l	d2
   2349 FFFC17D0 6100 007E                   	bsr		sGetChar
   2350 FFFC17D4 6100 FD36                   	bsr		AsciiToHexNybble
   2351 FFFC17D8 1401                        	move.b	d1,d2
   2352 FFFC17DA 604A                        	bra		S1932b
                                             
   2354 FFFC17DC                             S19Get24BitAddress:
   2355 FFFC17DC 4282                        	clr.l	d2
   2356 FFFC17DE 6100 0070                   	bsr		sGetChar
   2357 FFFC17E2 6100 FD28                   	bsr		AsciiToHexNybble
   2358 FFFC17E6 1401                        	move.b	d1,d2
   2359 FFFC17E8 6024                        	bra		S1932a
                                             
   2361 FFFC17EA                             S19Get32BitAddress:
   2362 FFFC17EA 4282                        	clr.l	d2
   2363 FFFC17EC 6100 0062                   	bsr		sGetChar
   2364 FFFC17F0 6100 FD1A                   	bsr		AsciiToHexNybble
   2365 FFFC17F4 1401                        	move.b	d1,d2
   2366 FFFC17F6 6100 0058                   	bsr		sGetChar
   2367 FFFC17FA 6100 FD10                   	bsr		AsciiToHexNybble
   2368 FFFC17FE E98A                        	lsl.l	#4,d2
   2369 FFFC1800 8401                        	or.b	d1,d2
   2370 FFFC1802 6100 004C                   	bsr		sGetChar
   2371 FFFC1806 6100 FD04                   	bsr		AsciiToHexNybble
   2372 FFFC180A E98A                        	lsl.l	#4,d2
   2373 FFFC180C 8401                        	or.b	d1,d2
   2374 FFFC180E                             S1932a:
   2375 FFFC180E 6100 0040                   	bsr		sGetChar
   2376 FFFC1812 6100 FCF8                   	bsr		AsciiToHexNybble
   2377 FFFC1816 E98A                        	lsl.l	#4,d2
   2378 FFFC1818 8401                        	or.b	d1,d2
   2379 FFFC181A 6100 0034                   	bsr		sGetChar
   2380 FFFC181E 6100 FCEC                   	bsr		AsciiToHexNybble
   2381 FFFC1822 E98A                        	lsl.l	#4,d2
   2382 FFFC1824 8401                        	or.b	d1,d2
   2383 FFFC1826                             S1932b:
   2384 FFFC1826 6100 0028                   	bsr		sGetChar
   2385 FFFC182A 6100 FCE0                   	bsr		AsciiToHexNybble
   2386 FFFC182E E98A                        	lsl.l	#4,d2
   2387 FFFC1830 8401                        	or.b	d1,d2
   2388 FFFC1832 6100 001C                   	bsr		sGetChar
   2389 FFFC1836 6100 FCD4                   	bsr		AsciiToHexNybble
   2390 FFFC183A E98A                        	lsl.l	#4,d2
   2391 FFFC183C 8401                        	or.b	d1,d2
   2392 FFFC183E 6100 0010                   	bsr		sGetChar
   2393 FFFC1842 6100 FCC8                   	bsr		AsciiToHexNybble
   2394 FFFC1846 E98A                        	lsl.l	#4,d2
   2395 FFFC1848 8401                        	or.b	d1,d2
   2396 FFFC184A 4284                        	clr.l	d4
   2397 FFFC184C 2242                        	move.l	d2,a1
   2398 FFFC184E 4E75                        	rts
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 41
bootrom.asm
                                             ;------------------------------------------------------------------------------
                                             ; Get a character from auxillary input, checking the keyboard status for a
                                             ; CTRL-C
                                             ;------------------------------------------------------------------------------
                                             ;
   2405 FFFC1850                             sGetChar:
   2406 FFFC1850 6100 F3F6                   	bsr		CheckForKey
   2407 FFFC1854 670C                        	beq		sgc1
   2408 FFFC1856 6100 F402                   	bsr		GetKey
   2409 FFFC185A 0C01 0003                   	cmpi.b	#CTRLC,d1
   2410 FFFC185E 6700 F980                   	beq		Monitor
   2411 FFFC1862                             sgc1:
   2412 FFFC1862 6100 FFFF                   	bsr		AUXIN
   2413 FFFC1866 67E8                        	beq		sGetChar
   2414 FFFC1868 1200                        	move.b	d0,d1
   2415 FFFC186A 4E75                        	rts
                                             
                                             ;==============================================================================
                                             ;==============================================================================
                                             
                                             ;------------------------------------------------------------------------------
                                             ;------------------------------------------------------------------------------
                                             ;
   2423 FFFC186C                             DisplayHexNumber:
   2424 FFFC186C 33FC A6A6 FFDC 0600         		move.w	#$A6A6,leds		; diagnostics
   2425 FFFC1874 2C7C FFE0 0000              		move.l	#VDGREG,a6
   2426 FFFC187A 343C 0007                   		move.w	#7,d2		; number-1 of digits to display
   2427 FFFC187E                             disphnum1:
   2428 FFFC187E 1001                        		move.b	d1,d0		; get digit into d0.b
   2429 FFFC1880 0240 000F                   		andi.w	#$0f,d0
   2430 FFFC1884 0C40 0009                   		cmpi.w	#$09,d0
   2431 FFFC1888 6302                        		bls.s	disphnum2
   2432 FFFC188A 5E40                        		addi.w	#7,d0
   2433 FFFC188C                             disphnum2:
   2434 FFFC188C 0640 0030                   		addi.w	#$30,d0	; convert to display char
   2435 FFFC1890 3602                        		move.w	d2,d3		; char count into d3
   2436 FFFC1892 E743                        		asl.w	#3,d3		; scale * 8
   2437 FFFC1894                             disphnum3:
   2438 FFFC1894 382E 042C                   		move.w	$42C(a6),d4			; read character queue index into d4
   2439 FFFC1898 B87C 001C                   		cmp.w	#28,d4					; allow up 28 entries to be in progress
   2440 FFFC189C 64F6                        		bhs.s	disphnum3				; branch if too many chars queued
   2441 FFFC189E 4880                        		ext.w	d0						; zero out high order bits
   2442 FFFC18A0 3D40 0420                   		move.w	d0,$420(a6)			; set char code
   2443 FFFC18A4 3D7C 7FFF 0422              		move.w	#WHITE,$422(a6)		; set fg color
   2444 FFFC18AA 3D7C 000F 0424              		move.w	#DARK_BLUE,$424(a6)	; set bk color
   2445 FFFC18B0 3D43 0426                   		move.w	d3,$426(a6)			; set x pos
   2446 FFFC18B4 3D7C 0008 0428              		move.w	#8,$428(a6)			; set y pos
   2447 FFFC18BA 3D7C 0707 042A              		move.w	#$0707,$42A(a6)		; set font x,y extent
   2448 FFFC18C0 3D7C 0000 042E              		move.w	#0,$42E(a6)			; pulse character queue write signal
   2449 FFFC18C6 E899                        		ror.l	#4,d1					; rot to next digit
   2450 FFFC18C8 57CA FFB4                   		dbeq	d2,disphnum1
   2451 FFFC18CC 4ED5                        		jmp		(a5)
                                             
                                             ;===============================================================================
                                             ;    Perform ram test. (Uses checkerboard testing).
                                             ; 
                                             ;    Return address must be stored in a3 since the stack cannot be used (it
                                             ; would get overwritten in test). Note this routine uses no ram at all.
                                             ;===============================================================================
   2459 FFFC18CE                             ramtest:
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 42
bootrom.asm
   2460 FFFC18CE 33FC A5A5 FFDC 0600         		move.w	#$A5A5,leds		; diagnostics
   2461 FFFC18D6 207C 0003 0000                      movea.l #$30000,a0
   2462 FFFC18DC 203C AAAA 5555                      move.l #$aaaa5555,d0
                                             ;-----------------------------------------------------------
                                             ;   Write checkerboard pattern to ram then read it back to
                                             ; find the highest usable ram address (maybe). This address
                                             ; must be lower than the start of the rom (0xe00000).
                                             ;-----------------------------------------------------------
   2468 FFFC18E2                             ramtest1:
   2469 FFFC18E2 20C0                                move.l 	d0,(a0)+
   2470 FFFC18E4 2208                                move.l	a0,d1
   2471 FFFC18E6 4A41                                tst.w	d1
   2472 FFFC18E8 660A                                bne.s	rmtst1
   2473 FFFC18EA 4BF9 FFFC 18F4                      lea		rmtst1,a5
   2474 FFFC18F0 6000 FF7A                           bra		DisplayHexNumber
   2475 FFFC18F4                             rmtst1:
   2476 FFFC18F4 33FC A9A9 FFDC 0600         		move.w	#$A9A9,leds		; diagnostics
   2477 FFFC18FC B1FC 0005 FFFC                      cmpa.l 	#$5FFFC,a0
   2478 FFFC1902 66DE                                bne.s 	ramtest1
   2479 FFFC1904 7200                                move.l	#0,d1
   2480 FFFC1906 6100 E92C                           bsr		CalcScreenLoc
   2481 FFFC190A 6000 FBC0                           bra		DumpMem1
                                             
                                             ;------------------------------------------------------
                                             ;   Save maximum useable address for later comparison.
                                             ;------------------------------------------------------
   2486 FFFC190E                             ramtest6:
   2487 FFFC190E 33FC A7A7 FFDC 0600         		move.w	#$A7A7,leds		; diagnostics
   2488 FFFC1916 2448                                movea.l a0,a2
   2489 FFFC1918 207C 0003 0000                      movea.l #$30000,a0
                                             ;--------------------------------------------
                                             ;   Read back checkerboard pattern from ram.
                                             ;--------------------------------------------
   2493 FFFC191E                             ramtest2:
   2494 FFFC191E 2A18                                move.l  (a0)+,d5
   2495 FFFC1920 B5C8                                cmpa.l	a0,a2
   2496 FFFC1922 671A                                beq.s	ramtest3
   2497 FFFC1924 2208                                move.l	a0,d1
   2498 FFFC1926 4A41                                tst.w	d1
   2499 FFFC1928 660A                                bne.s	rmtst2
   2500 FFFC192A 4BF9 FFFC 1934                      lea		rmtst2,a5
   2501 FFFC1930 6000 FF3A                           bra		DisplayHexNumber
   2502 FFFC1934                             rmtst2:
   2503 FFFC1934 0C85 AAAA 5555                      cmpi.l 	#$aaaa5555,d5
   2504 FFFC193A 67E2                                beq.s 	ramtest2
   2505 FFFC193C 6678                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   The following section does the same test except
                                             ; with the checkerboard order switched around.
                                             ;---------------------------------------------------
   2510 FFFC193E                             ramtest3:                
   2511 FFFC193E 33FC A8A8 FFDC 0600         		move.w	#$A8A8,leds		; diagnostics
   2512 FFFC1946 207C 0003 0000                      movea.l #$30000,a0
   2513 FFFC194C 203C 5555 AAAA                      move.l 	#$5555aaaa,d0
   2514 FFFC1952                             ramtest4:
   2515 FFFC1952 20C0                                move.l 	d0,(a0)+
   2516 FFFC1954 2208                                move.l 	a0,d1
   2517 FFFC1956 4A41                                tst.w	d1
   2518 FFFC1958 660A                                bne.s   rmtst3
   2519 FFFC195A 4BF9 FFFC 1964                      lea		rmtst3,a5
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 43
bootrom.asm
   2520 FFFC1960 6000 FF0A                           bra		DisplayHexNumber
   2521 FFFC1964                             rmtst3:
   2522 FFFC1964 B1FC 1FFF FFFC                      cmpa.l 	#$1FFFFFFC,a0
   2523 FFFC196A 66E6                                bne.s 	ramtest4
   2524 FFFC196C                             ramtest8:
   2525 FFFC196C 2448                                movea.l a0,a2
   2526 FFFC196E 207C 0003 0000                      movea.l #$30000,a0
   2527 FFFC1974                             ramtest5:
   2528 FFFC1974 2018                                move.l 	(a0)+,d0
   2529 FFFC1976 B5C8                                cmpa.l	a0,a2
   2530 FFFC1978 671A                                beq.s	rmtst5
   2531 FFFC197A 2208                                move.l 	a0,d1
   2532 FFFC197C 4A41                                tst.w	d1
   2533 FFFC197E 660A                                bne.s	rmtst4
   2534 FFFC1980 4BF9 FFFC 198A                      lea		rmtst4,a5
   2535 FFFC1986 6000 FEE4                           bra		DisplayHexNumber
   2536 FFFC198A                             rmtst4:
   2537 FFFC198A 0C80 5555 AAAA                      cmpi.l 	#$5555aaaa,d0
   2538 FFFC1990 67E2                                beq.s 	ramtest5
   2539 FFFC1992 6622                                bne.s 	ramtest7
                                             ;---------------------------------------------------
                                             ;   Save last ram address in end of memory pointer.
                                             ;---------------------------------------------------
   2543 FFFC1994                             rmtst5:
   2544 FFFC1994 23C8 0001 0008                      move.l a0,memend
                                             ;-----------------------------------
                                             ;   Create very first memory block.
                                             ;-----------------------------------
   2548 FFFC199A 91FC 0000 000C                      suba.l 	#12,a0
   2549 FFFC19A0 21C8 0404                           move.l 	a0,$0404
   2550 FFFC19A4 21FC 4652 4545 0400                 move.l 	#$46524545,$0400
   2551 FFFC19AC 21FC 0000 0408 0408                 move.l 	#$408,$408			; point back-link to self
   2552 FFFC19B4 4ED3                                jmp 	(a3)
                                             ;----------------------------------
                                             ; Error in ram - go no farther.
                                             ;----------------------------------
   2556 FFFC19B6                             ramtest7:
   2557 FFFC19B6 4ED3                        		jmp 	(a3)
   2558 FFFC19B8 60FC                                bra.s 	ramtest7
                                             
                                             
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   2566 FFFC19BA                             GraphicsDemo:
   2567 FFFC19BA 6100 0084                   		bsr		DrawLines
   2568 FFFC19BE 6100 000A                   		bsr		DrawRects
   2569 FFFC19C2 6100 011C                   		bsr		DrawTriangles
   2570 FFFC19C6 6000 F818                   		bra		Monitor
                                             
   2572 FFFC19CA                             DrawRects:
   2573 FFFC19CA 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2574 FFFC19D0 4BF9 FFE0 0000              		lea		VDGREG,a5
   2575 FFFC19D6 2C3C 0000 4E20              		move.l	#20000,d6		; repeat a few times
   2576 FFFC19DC                             .0001:
   2577 FFFC19DC 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2578 FFFC19E0 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2579 FFFC19E2 4840                        		swap	d0				; and bits 16 to 24 for x0
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 44
bootrom.asm
   2580 FFFC19E4 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2581 FFFC19E8 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2582 FFFC19EC 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2583 FFFC19F0 242E 0C00                   		move.l	$0C00(a6),d2
   2584 FFFC19F4 3602                        		move.w	d2,d3
   2585 FFFC19F6 4842                        		swap	d2
   2586 FFFC19F8 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2587 FFFC19FC 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2588 FFFC1A00 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2589 FFFC1A04 282E 0C00                   		move.l	$0C00(a6),d4
   2590 FFFC1A08 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2591 FFFC1A0C 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2592 FFFC1A10                             .0002:
   2593 FFFC1A10 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2594 FFFC1A14 BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2595 FFFC1A18 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2596 FFFC1A1A 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2597 FFFC1A20 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2598 FFFC1A24 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2599 FFFC1A28 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2600 FFFC1A2C 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2601 FFFC1A30 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2602 FFFC1A34 3B7C 0003 042E              		move.w	#3,$42E(a5)		; pulse command queue (3 = draw rect)
   2603 FFFC1A3A 5386                        		sub.l	#1,d6
   2604 FFFC1A3C 669E                        		bne		.0001			; go back and do more lines
   2605 FFFC1A3E 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Draw lines randomly on the screen.
                                             ;===============================================================================
                                             
   2611 FFFC1A40                             DrawLines:
   2612 FFFC1A40 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2613 FFFC1A46 4BF9 FFE0 0000              		lea		VDGREG,a5
   2614 FFFC1A4C 2C3C 0003 0D40              		move.l	#200000,d6		; repeat a few times
   2615 FFFC1A52                             .0001:
                                             		; Wait for blitter to be done
   2617 FFFC1A52                             .0003:								
   2618 FFFC1A52 33FC 000A FFDC 0600         		move.w	#10,leds
   2619 FFFC1A5A 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2620 FFFC1A5E 0800 000E                   		btst	#14,d0
   2621 FFFC1A62 6706                        		beq.s	.0004
   2622 FFFC1A64 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2623 FFFC1A68 67E8                        		beq.s	.0003				; branch if not done
   2624 FFFC1A6A                             .0004:
   2625 FFFC1A6A 33FC 000B FFDC 0600         		move.w	#11,leds
   2626 FFFC1A72 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2627 FFFC1A76 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   2628 FFFC1A78 4840                        		swap	d0				; and bits 16 to 24 for x0
   2629 FFFC1A7A 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   2630 FFFC1A7E 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   2631 FFFC1A82 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2632 FFFC1A86 242E 0C00                   		move.l	$0C00(a6),d2
   2633 FFFC1A8A 3602                        		move.w	d2,d3
   2634 FFFC1A8C 4842                        		swap	d2
   2635 FFFC1A8E 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   2636 FFFC1A92 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   2637 FFFC1A96 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2638 FFFC1A9A 282E 0C00                   		move.l	$0C00(a6),d4
   2639 FFFC1A9E 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 45
bootrom.asm
   2640 FFFC1AA2 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2641 FFFC1AA6                             .0002:
   2642 FFFC1AA6 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2643 FFFC1AAA BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2644 FFFC1AAE 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2645 FFFC1AB0 33FC 000C FFDC 0600         		move.w	#12,leds
   2646 FFFC1AB8 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2647 FFFC1ABE 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2648 FFFC1AC2 3B40 0426                   		move.w	d0,$426(a5)		; set x0
   2649 FFFC1AC6 3B41 0428                   		move.w	d1,$428(a5)		; set y0
   2650 FFFC1ACA 3B42 0430                   		move.w	d2,$430(a5)		; set x1
   2651 FFFC1ACE 3B43 0432                   		move.w	d3,$432(a5)		; set y1
   2652 FFFC1AD2 3B7C 0002 042E              		move.w	#2,$42E(a5)		; pulse command queue (2 = draw line)
   2653 FFFC1AD8 5386                        		sub.l	#1,d6
   2654 FFFC1ADA 6600 FF76                   		bne		.0001			; go back and do more lines
   2655 FFFC1ADE 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Draw triangles randomly on the screen.
                                             ;===============================================================================
                                             
   2661 FFFC1AE0                             DrawTriangles:
   2662 FFFC1AE0 4DF9 FFDC 0000              		lea		$FFDC0000,A6	; I/O base
   2663 FFFC1AE6 4BF9 FFE0 0000              		lea		VDGREG,a5
   2664 FFFC1AEC 2C3C 0000 2710              		move.l	#10000,d6		; repeat a few times
   2665 FFFC1AF2                             .0001:
                                             		; Wait for blitter to be done
   2667 FFFC1AF2                             .0003:								
   2668 FFFC1AF2 33FC 000A FFDC 0600         		move.w	#10,leds
   2669 FFFC1AFA 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2670 FFFC1AFE 0800 000E                   		btst	#14,d0
   2671 FFFC1B02 6706                        		beq.s	.0004
   2672 FFFC1B04 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2673 FFFC1B08 67E8                        		beq.s	.0003				; branch if not done
   2674 FFFC1B0A                             .0004:
   2675 FFFC1B0A 33FC 000B FFDC 0600         		move.w	#11,leds
   2676 FFFC1B12 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   2677 FFFC1B16 0280 00FF 00FF              		and.l	#$FF00FF,d0		; 0 to 255
   2678 FFFC1B1C 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2679 FFFC1B20 222E 0C00                   		move.l	$0C00(a6),d1
   2680 FFFC1B24 0281 00FF 00FF              		and.l	#$FF00FF,d1		; 0 to 255
   2681 FFFC1B2A 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2682 FFFC1B2E 242E 0C00                   		move.l	$0C00(a6),d2
   2683 FFFC1B32 0282 00FF 00FF              		and.l	#$FF00FF,d2		; 0 to 255
   2684 FFFC1B38 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2685 FFFC1B3C 282E 0C00                   		move.l	$0C00(a6),d4
   2686 FFFC1B40 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   2687 FFFC1B44 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   2688 FFFC1B48                             .0002:
   2689 FFFC1B48 3E2D 042C                   		move.w	$42C(a5),d7		; check # queued
   2690 FFFC1B4C BE7C 001C                   		cmp.w	#28,d7			; more than 28 queued ?
   2691 FFFC1B50 64F6                        		bhs.s	.0002			; too many, wait for queue to empty
   2692 FFFC1B52 33FC 000C FFDC 0600         		move.w	#12,leds
   2693 FFFC1B5A 3B7C 0001 0422              		move.w	#1,$422(a5)		; raster op = COPY
   2694 FFFC1B60 3B44 0424                   		move.w	d4,$424(a5)		; set color
   2695 FFFC1B64 2B40 0426                   		move.l	d0,$426(a5)		; set x0,y0
   2696 FFFC1B68 2B41 0430                   		move.l	d1,$430(a5)		; set x1,y1
   2697 FFFC1B6C 2B42 0434                   		move.l	d2,$434(a5)		; set x2,y2
   2698 FFFC1B70 3B7C 0006 042E              		move.w	#6,$42E(a5)		; pulse command queue (6 = fill triangle)
   2699 FFFC1B76 5386                        		sub.l	#1,d6
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 46
bootrom.asm
   2700 FFFC1B78 6600 FF78                   		bne		.0001			; go back and do more triangles
   2701 FFFC1B7C 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Test Blitter
                                             ;===============================================================================
                                             
   2707 FFFC1B7E                             TestBlitter:
                                             		; puts a red rectangle on screen
   2709 FFFC1B7E 4BF9 FFE0 0000              		lea		VDGREG,a5
   2710 FFFC1B84                             .0003:								
   2711 FFFC1B84 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2712 FFFC1B88 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2713 FFFC1B8C 67F6                        		beq.s	.0003				; branch if not done
   2714 FFFC1B8E 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set transfer count 8000 pixels
   2715 FFFC1B96 3B7C 7C00 04A8              		move.w	#RED,$4A8(a5)		; set color red
   2716 FFFC1B9C 2B7C 0000 0168 0498         		move.l	#360,$498(a5)		; set destination address
   2717 FFFC1BA4 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2718 FFFC1BAC 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
   2719 FFFC1BB4 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; makes a copy of the upper left corner of the screen
   2722 FFFC1BBA                             .0001:								
   2723 FFFC1BBA 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2724 FFFC1BBE 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2725 FFFC1BC2 67F6                        		beq.s	.0001				; branch if not done
                                             		; Channel A
   2727 FFFC1BC4 2B7C 0000 03E8 04B0         		move.l	#1000,$4B0(a5)		; set source transfer count 8000 pixels
   2728 FFFC1BCC 2B7C 0000 0000 0480         		move.l	#0,$480(a5)			; set source bitmap address (address in graphics mem)
   2729 FFFC1BD4 2B7C 0000 0168 0484         		move.l	#360,$484(a5)		; set src modulo
                                             		; Channel C
   2731 FFFC1BDC 2B7C 0000 03E8 04B8         		move.l	#1000,$4B8(a5)		; set source transfer count 8000 pixels
   2732 FFFC1BE4 2B7C 0000 0000 0490         		move.l	#0,$490(a5)			; set source bitmap address (address in graphics mem)
   2733 FFFC1BEC 2B7C 0000 0168 0494         		move.l	#360,$494(a5)		; set src modulo
                                             		; Channel D
   2735 FFFC1BF4 2B7C 0000 1F40 04BC         		move.l	#8000,$4BC(a5)		; set destination transfer count 8000 pixels
   2736 FFFC1BFC 2B7C 0000 0140 0498         		move.l	#320,$498(a5)		; set destination address
   2737 FFFC1C04 2B7C 0000 0168 049C         		move.l	#360,$49C(a5)		; set dst modulo
                                             		
   2739 FFFC1C0C 2B7C 0000 0028 04A0         		move.l	#40,$4A0(a5)		; set source width
   2740 FFFC1C14 2B7C 0000 0028 04A4         		move.l	#40,$4A4(a5)		; set destination width
   2741 FFFC1C1C 3B7C 0091 04AE              		move.w	#$91,$4AE(a5)		; set op A|C	($11 = copy A)
   2742 FFFC1C22 3B7C 80A2 04AC              		move.w	#%1000000010100010,$4AC(a5)		; enable channel A,C,D, start transfer
   2743 FFFC1C28                             .0002:								
   2744 FFFC1C28 302D 04AC                   		move.w	$4AC(a5),d0			; get blit status
   2745 FFFC1C2C 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2746 FFFC1C30 67F6                        		beq.s	.0002				; branch if not done
   2747 FFFC1C32 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Generic I2C routines
                                             ;===============================================================================
                                             
                                             I2C_PREL	EQU		$0
                                             I2C_PREH	EQU		$2
                                             I2C_CTRL	EQU		$4
                                             I2C_RXR		EQU		$6
                                             I2C_TXR		EQU		$6
                                             I2C_CMD		EQU		$8
                                             I2C_STAT	EQU		$A
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 47
bootrom.asm
                                             
                                             ; i2c
   2762 FFFC1C34                             i2c_setup:
   2763 FFFC1C34 4DF9 FFDC 0E00              		lea		I2C,a6				
   2764 FFFC1C3A 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2765 FFFC1C3E 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2766 FFFC1C44 4DF9 FFDC 0E10              		lea		I2C2,a6				
   2767 FFFC1C4A 3CBC 0013                   		move.w	#19,I2C_PREL(a6)	; setup prescale for 400kHz clock
   2768 FFFC1C4E 3D7C 0000 0002              		move.w	#0,I2C_PREH(a6)
   2769 FFFC1C54 4E75                        		rts
                                             
                                             ; Wait for I2C transfer to complete
                                             ;
                                             ; Parameters
                                             ; 	a6 - I2C controller base address
                                             
   2776 FFFC1C56                             i2c_wait_tip:
   2777 FFFC1C56 3F00                        		move.w	d0,-(a7)
   2778 FFFC1C58                             .0001:					
   2779 FFFC1C58 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for tip to clear
   2780 FFFC1C5C 0800 0001                   		btst	#1,d0
   2781 FFFC1C60 66F6                        		bne.s	.0001
   2782 FFFC1C62 301F                        		move.w	(a7)+,d0
   2783 FFFC1C64 4E75                        		rts
                                             
                                             ; Parameters
                                             ;	d0.w - data to transmit
                                             ;	d1.w - command value
                                             ;	a6	 - I2C controller base address
                                             ;
   2790 FFFC1C66                             i2c_wr_cmd:
   2791 FFFC1C66 3D40 0006                   		move.w	d0,I2C_TXR(a6)
   2792 FFFC1C6A 3D41 0008                   		move.w	d1,I2C_CMD(a6)
   2793 FFFC1C6E 6100 FFE6                   		bsr		i2c_wait_tip
   2794 FFFC1C72 302E 000A                   		move.w	I2C_STAT(a6),d0
   2795 FFFC1C76 4E75                        		rts
                                             
   2797 FFFC1C78                             i2c_xmit1:
   2798 FFFC1C78 3F00                        		move.w	d0,-(a7)
   2799 FFFC1C7A 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2800 FFFC1C80 7076                        		moveq	#$76,d0				; set slave address = %0111011
   2801 FFFC1C82 323C 0090                   		move.w	#$90,d1				; set STA, WR
   2802 FFFC1C86 6100 FFDE                   		bsr		i2c_wr_cmd
   2803 FFFC1C8A 6100 0010                   		bsr		i2c_wait_rx_nack
   2804 FFFC1C8E 301F                        		move.w	(a7)+,d0
   2805 FFFC1C90 323C 0050                   		move.w	#$50,d1				; set STO, WR
   2806 FFFC1C94 6100 FFD0                   		bsr		i2c_wr_cmd
   2807 FFFC1C98 6100 0002                   		bsr		i2c_wait_rx_nack
                                             
   2809 FFFC1C9C                             i2c_wait_rx_nack:
   2810 FFFC1C9C 3F00                        		move.w	d0,-(a7)
   2811 FFFC1C9E                             .0001:							
   2812 FFFC1C9E 302E 000A                   		move.w	I2C_STAT(a6),d0		; wait for RXack = 0
   2813 FFFC1CA2 0800 0007                   		btst	#7,d0
   2814 FFFC1CA6 66F6                        		bne.s	.0001
   2815 FFFC1CA8 301F                        		move.w	(a7)+,d0
   2816 FFFC1CAA 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Audio
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 48
bootrom.asm
                                             ;===============================================================================
                                             
   2822 FFFC1CAC                             AudioInputTest:
   2823 FFFC1CAC 4BF9 FFE0 0000              		lea		VDGREG,a5
   2824 FFFC1CB2 2B7C 0005 8000 0640         		move.l	#$58000,$640(a5)	; set buffer address ($FF8B0000)
   2825 FFFC1CBA 3B7C 4000 0644              		move.w	#$4000,$644(a5)		; set buffer length
   2826 FFFC1CC0 3B7C 0716 0646              		move.w	#1814,$646(a5)		; set period = 22.05kHz
   2827 FFFC1CC6 3B7C 1090 0650              		move.w	#$1090,$650(a5)		; enable input channel, plot mode
   2828 FFFC1CCC 3B7C 0090 0650              		move.w	#$0090,$650(a5)		; turn off reset
                                             		; should have input now
                                             
                                             		; puts a dark blue rectangle on screen
   2832 FFFC1CD2                             .0003:								
   2833 FFFC1CD2 302D 04AC                   		move.w	$4AC(a5),d0			; get done status
   2834 FFFC1CD6 0800 000D                   		btst	#13,d0				; bit 13 = done bit
   2835 FFFC1CDA 67F6                        		beq.s	.0003				; branch if not done
   2836 FFFC1CDC 2B7C 0001 0000 04BC         		move.l	#256*256,$4BC(a5)		; set transfer count pixels
   2837 FFFC1CE4 3B7C 000F 04A8              		move.w	#DARK_BLUE,$4A8(a5)		; set color 
   2838 FFFC1CEA 2B7C 0000 0000 0498         		move.l	#0,$498(a5)			; set destination address
   2839 FFFC1CF2 2B7C 0000 0100 04A4         		move.l	#256,$4A4(a5)		; set destination width
   2840 FFFC1CFA 2B7C 0000 0090 049C         		move.l	#BMP_WIDTH-256,$49C(a5)		; set dst modulo
   2841 FFFC1D02 3B7C 8080 04AC              		move.w	#%1000000010000000,$4AC(a5)		; enable channel D, start transfer
                                             
                                             		; delay a bit
   2844 FFFC1D08 203C 0003 D090              		move.l	#250000,d0
   2845 FFFC1D0E                             .0004:
   2846 FFFC1D0E 5380                        		sub.l	#1,d0
   2847 FFFC1D10 66FC                        		bne.s	.0004
   2848 FFFC1D12 60BE                        		bra.s	.0003
                                             		
                                             
   2851 FFFC1D14                             audio_pll_config:
   2852 FFFC1D14 7000                        		moveq	#0,d0
   2853 FFFC1D16 720E                        		moveq	#$0E,d1
   2854 FFFC1D18 6100 001C                   		bsr		audio_write_reg
   2855 FFFC1D1C 7002                        		moveq	#2,d0
   2856 FFFC1D1E 41F9 FFFC 1D90              		lea		audio_tbl1,a0
   2857 FFFC1D24 6100 0076                   		bsr		audio_write_reg6
   2858 FFFC1D28 4E75                        		rts
                                             
   2860 FFFC1D2A                             audio_startup_config:
   2861 FFFC1D2A 4E75                        		rts
                                             
   2863 FFFC1D2C                             audio_init:
   2864 FFFC1D2C 6100 FFE6                   		bsr		audio_pll_config
   2865 FFFC1D30 6100 FFF8                   		bsr		audio_startup_config
   2866 FFFC1D34 4E75                        		rts
                                             
                                             ; d0.w = register number
                                             ; d1.w = data to write
                                             		
   2871 FFFC1D36                             audio_write_reg:
   2872 FFFC1D36 4DF9 FFDC 0E00              		lea		I2C,a6				
   2873 FFFC1D3C 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2874 FFFC1D42 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2875 FFFC1D48 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2876 FFFC1D4E 6100 FF06                   		bsr		i2c_wait_tip	; wait for tip to clear
   2877 FFFC1D52 6100 FF48                   		bsr		i2c_wait_rx_nack
   2878 FFFC1D56 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2879 FFFC1D5C 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 49
bootrom.asm
   2880 FFFC1D62 6100 FEF2                   		bsr		i2c_wait_tip	; wait for tip to clear
   2881 FFFC1D66 6100 FF34                   		bsr		i2c_wait_rx_nack
   2882 FFFC1D6A 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2883 FFFC1D6E 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2884 FFFC1D74 6100 FEE0                   		bsr		i2c_wait_tip	; wait for tip to clear
   2885 FFFC1D78 6100 FF22                   		bsr		i2c_wait_rx_nack
   2886 FFFC1D7C 3D41 0006                   		move.w	d1,I2C_TXR(a6)		; send data
   2887 FFFC1D80 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set STO, WR
   2888 FFFC1D86 6100 FECE                   		bsr		i2c_wait_tip	; wait for tip to clear
   2889 FFFC1D8A 6100 FF10                   		bsr		i2c_wait_rx_nack
   2890 FFFC1D8E 4E75                        		rts
                                             
   2892 FFFC1D90                             audio_tbl1:
   2893 FFFC1D90 0000 007D 0000 000C         		dc.w	$00,$7D,$00,$0C,$20,$01
   2894 FFFC1D98 0020 0001                   
                                             ; a0
                                             ;
   2897 FFFC1D9C                             audio_write_reg6:
   2898 FFFC1D9C 41F9 FFFC 1D90              		lea		audio_tbl1,a0
   2899 FFFC1DA2 4DF9 FFDC 0E00              		lea		I2C,a6				
   2900 FFFC1DA8 3D7C 0001 0004              		move.w	#1,I2C_CTRL(a6)		; enable the core
   2901 FFFC1DAE 3D7C 0076 0006              		move.w	#$76,I2C_TXR(a6)	; set slave address = %0111011
   2902 FFFC1DB4 3D7C 0090 0008              		move.w	#$90,I2C_CMD(a6)	; set STA, WR
   2903 FFFC1DBA 6100 FE9A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2904 FFFC1DBE 6100 FEDC                   		bsr		i2c_wait_rx_nack
   2905 FFFC1DC2 3D7C 0040 0006              		move.w	#$40,I2C_TXR(a6)	; all regsister are $40xx
   2906 FFFC1DC8 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2907 FFFC1DCE 6100 FE86                   		bsr		i2c_wait_tip	; wait for tip to clear
   2908 FFFC1DD2 6100 FEC8                   		bsr		i2c_wait_rx_nack
                                             
   2910 FFFC1DD6 3D40 0006                   		move.w	d0,I2C_TXR(a6)		; send register address
   2911 FFFC1DDA 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2912 FFFC1DE0 6100 FE74                   		bsr		i2c_wait_tip	; wait for tip to clear
   2913 FFFC1DE4 6100 FEB6                   		bsr		i2c_wait_rx_nack
                                             		
   2915 FFFC1DE8 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #0
   2916 FFFC1DEC 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2917 FFFC1DF2 6100 FE62                   		bsr		i2c_wait_tip	; wait for tip to clear
   2918 FFFC1DF6 6100 FEA4                   		bsr		i2c_wait_rx_nack
                                             
   2920 FFFC1DFA 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #1
   2921 FFFC1DFE 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2922 FFFC1E04 6100 FE50                   		bsr		i2c_wait_tip	; wait for tip to clear
   2923 FFFC1E08 6100 FE92                   		bsr		i2c_wait_rx_nack
                                             
   2925 FFFC1E0C 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #2
   2926 FFFC1E10 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2927 FFFC1E16 6100 FE3E                   		bsr		i2c_wait_tip	; wait for tip to clear
   2928 FFFC1E1A 6100 FE80                   		bsr		i2c_wait_rx_nack
                                             
   2930 FFFC1E1E 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #3
   2931 FFFC1E22 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2932 FFFC1E28 6100 FE2C                   		bsr		i2c_wait_tip	; wait for tip to clear
   2933 FFFC1E2C 6100 FE6E                   		bsr		i2c_wait_rx_nack
                                             
   2935 FFFC1E30 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #4
   2936 FFFC1E34 3D7C 0010 0008              		move.w	#$10,I2C_CMD(a6)	; set WR
   2937 FFFC1E3A 6100 FE1A                   		bsr		i2c_wait_tip	; wait for tip to clear
   2938 FFFC1E3E 6100 FE5C                   		bsr		i2c_wait_rx_nack
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 50
bootrom.asm
   2940 FFFC1E42 3D58 0006                   		move.w	(a0)+,I2C_TXR(a6)	; send data #5
   2941 FFFC1E46 3D7C 0050 0008              		move.w	#$50,I2C_CMD(a6)	; set WR, STO
   2942 FFFC1E4C 6100 FE08                   		bsr		i2c_wait_tip		; wait for tip to clear
   2943 FFFC1E50 6100 FE4A                   		bsr		i2c_wait_rx_nack
   2944 FFFC1E54 4E75                        		rts
                                             
   2946 FFFC1E56                             set_hp_output:
   2947 FFFC1E56 7021                        		moveq	#$21,d0				;
   2948 FFFC1E58 7200                        		moveq	#0,d1
   2949 FFFC1E5A 6100 FEDA                   		bsr		audio_write_reg
   2950 FFFC1E5E 7020                        		moveq	#$20,d0				;
   2951 FFFC1E60 6100 FED4                   		bsr		audio_write_reg
   2952 FFFC1E64 7023                        		moveq	#$23,d0
   2953 FFFC1E66 323C 00E7                   		move.w	#$E7,d1		
   2954 FFFC1E6A 6100 FECA                   		bsr		audio_write_reg
   2955 FFFC1E6E 7024                        		moveq	#$24,d0
   2956 FFFC1E70 323C 00E7                   		move.w	#$E7,d1		
   2957 FFFC1E74 6100 FEC0                   		bsr		audio_write_reg
   2958 FFFC1E78 4E75                        		rts
                                             
                                             ;===============================================================================
                                             ; Realtime clock routines
                                             ;===============================================================================
                                             
   2964 FFFC1E7A                             rtc_read:
   2965 FFFC1E7A 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   2966 FFFC1E80 4BF9 0001 0600              		lea		RTCBuf,a5
   2967 FFFC1E86 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   2968 FFFC1E8C 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   2969 FFFC1E90 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2970 FFFC1E94 6100 FDD0                   		bsr		i2c_wr_cmd
   2971 FFFC1E98 4A00                        		tst.b	d0
   2972 FFFC1E9A 6B72                        		bmi		.rxerr
   2973 FFFC1E9C 303C 0000                   		move.w	#$00,d0				; address zero
   2974 FFFC1EA0 323C 0010                   		move.w	#$10,d1				; wr bit
   2975 FFFC1EA4 6100 FDC0                   		bsr		i2c_wr_cmd
   2976 FFFC1EA8 4A00                        		tst.b	d0
   2977 FFFC1EAA 6B62                        		bmi		.rxerr
   2978 FFFC1EAC 303C 00DF                   		move.w	#$DF,d0				; read address, read op
   2979 FFFC1EB0 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   2980 FFFC1EB4 6100 FDB0                   		bsr		i2c_wr_cmd
   2981 FFFC1EB8 4A00                        		tst.b	d0
   2982 FFFC1EBA 6B52                        		bmi		.rxerr
                                             		
   2984 FFFC1EBC 343C 0020                   		move.w	#$20,d2
   2985 FFFC1EC0                             .0001:
   2986 FFFC1EC0 3D7C 0020 0008              		move.w	#$20,I2C_CMD(a6)	; rd bit
   2987 FFFC1EC6 6100 FD8E                   		bsr		i2c_wait_tip
   2988 FFFC1ECA 6100 FDD0                   		bsr		i2c_wait_rx_nack
   2989 FFFC1ECE 302E 000A                   		move.w	I2C_STAT(a6),d0
   2990 FFFC1ED2 4A00                        		tst.b	d0
   2991 FFFC1ED4 6B38                        		bmi		.rxerr
   2992 FFFC1ED6 302E 0006                   		move.w	I2C_RXR(a6),d0
   2993 FFFC1EDA 1B80 2000                   		move.b	d0,(a5,d2.w)
   2994 FFFC1EDE 5242                        		add.w	#1,d2
   2995 FFFC1EE0 B47C 005F                   		cmp.w	#$5F,d2
   2996 FFFC1EE4 66DA                        		bne		.0001
   2997 FFFC1EE6 3D7C 0068 0008              		move.w	#$68,I2C_CMD(a6)	; STO, rd bit + nack
   2998 FFFC1EEC 6100 FD68                   		bsr		i2c_wait_tip
   2999 FFFC1EF0 6100 FDAA                   		bsr		i2c_wait_rx_nack
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 51
bootrom.asm
   3000 FFFC1EF4 302E 000A                   		move.w	I2C_STAT(a6),d0
   3001 FFFC1EF8 4A00                        		tst.b	d0
   3002 FFFC1EFA 6B12                        		bmi		.rxerr
   3003 FFFC1EFC 302E 0006                   		move.w	I2C_RXR(a6),d0
   3004 FFFC1F00 1B80 2000                   		move.b	d0,(a5,d2.w)
   3005 FFFC1F04 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   3006 FFFC1F0A 7000                        		moveq	#0,d0
   3007 FFFC1F0C 4E75                        		rts
   3008 FFFC1F0E                             .rxerr:
   3009 FFFC1F0E 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   3010 FFFC1F14 4E75                        		rts
                                             
   3012 FFFC1F16                             rtc_write:
   3013 FFFC1F16 2C7C FFDC 0E10              		movea.l	#I2C2,a6
   3014 FFFC1F1C 4BF9 0001 0600              		lea		RTCBuf,a5
   3015 FFFC1F22 3D7C 0080 0004              		move.w	#$80,I2C_CTRL(a6)	; enable I2C
   3016 FFFC1F28 303C 00DE                   		move.w	#$DE,d0				; read address, write op
   3017 FFFC1F2C 323C 0090                   		move.w	#$90,d1				; STA + wr bit
   3018 FFFC1F30 6100 FD34                   		bsr		i2c_wr_cmd
   3019 FFFC1F34 4A00                        		tst.b	d0
   3020 FFFC1F36 6B46                        		bmi		.rxerr
   3021 FFFC1F38 303C 0000                   		move.w	#$00,d0				; address zero
   3022 FFFC1F3C 323C 0010                   		move.w	#$10,d1				; wr bit
   3023 FFFC1F40 6100 FD24                   		bsr		i2c_wr_cmd
   3024 FFFC1F44 4A00                        		tst.b	d0
   3025 FFFC1F46 6B36                        		bmi		.rxerr
   3026 FFFC1F48 343C 0020                   		move.w	#$20,d2
   3027 FFFC1F4C                             .0001:
   3028 FFFC1F4C 1035 2000                   		move.b	(a5,d2.w),d0
   3029 FFFC1F50 323C 0010                   		move.w	#$10,d1
   3030 FFFC1F54 6100 FD10                   		bsr		i2c_wr_cmd
   3031 FFFC1F58 4A00                        		tst.b	d0
   3032 FFFC1F5A 6B22                        		bmi		.rxerr
   3033 FFFC1F5C 5242                        		add.w	#1,d2
   3034 FFFC1F5E B47C 005F                   		cmp.w	#$5F,d2
   3035 FFFC1F62 66E8                        		bne.s	.0001
   3036 FFFC1F64 1035 2000                   		move.b	(a5,d2.w),d0
   3037 FFFC1F68 323C 0050                   		move.w	#$50,d1				; STO, wr bit
   3038 FFFC1F6C 6100 FCF8                   		bsr		i2c_wr_cmd
   3039 FFFC1F70 4A00                        		tst.b	d0
   3040 FFFC1F72 6B0A                        		bmi		.rxerr
   3041 FFFC1F74 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return 0
   3042 FFFC1F7A 7000                        		moveq	#0,d0
   3043 FFFC1F7C 4E75                        		rts
   3044 FFFC1F7E                             .rxerr:
   3045 FFFC1F7E 3D7C 0000 0004              		move.w	#0,I2C_CTRL(a6)		; disable I2C and return status
   3046 FFFC1F84 4E75                        		rts
                                             
   3048 FFFC1F86                             msgRtcReadFail:
   3049 FFFC1F86 52 54 43 20 72 65 61 64     		dc.b	"RTC read/write failed.",$0D,$0A,$00
   3050 FFFC1F8E 2F 77 72 69 74 65 20 66     
   3051 FFFC1F96 61 69 6C 65 64 2E 0D 0A     
   3052 FFFC1F9E 00                          
                                             
                                             
                                             ;===============================================================================
                                             ; ORGFX routines
                                             ;===============================================================================
                                             
   3059 FFFC1F9F FF                          		align	2
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 52
bootrom.asm
   3060 FFFC1FA0                             gfx_wait:
   3061 FFFC1FA0 48E7 8004                   		movem.l	d0/a5,-(a7)
   3062 FFFC1FA4 4BF9 FFE0 0000              		lea		VDGREG,a5
   3063 FFFC1FAA 2B7C 0000 0004 0700         		move.l	#GFX_STATUS,$700(a5)	; address status register
   3064 FFFC1FB2                             .0001:
   3065 FFFC1FB2 3B7C 00F3 0708              		move.w	#$F3,$708(a5)		; set control (generate bus access to gfx)
   3066 FFFC1FB8 202D 0704                   		move.l	$704(a5),d0			; get status value
   3067 FFFC1FBC 0800 0000                   		btst	#0,d0				; test bit 0
   3068 FFFC1FC0 66F0                        		bne.s	.0001
   3069 FFFC1FC2 4CDF 2001                   		movem.l	(a7)+,d0/a5
   3070 FFFC1FC6 4E75                        		rts
                                             
   3072 FFFC1FC8                             gfx_set_400x300:
   3073 FFFC1FC8 6100 FFD6                   		bsr		gfx_wait
   3074 FFFC1FCC 4BF9 FFE0 0000              		lea		VDGREG,a5
   3075 FFFC1FD2 2B7C 0000 0014 0700         		move.l	#GFX_TARGET_SIZE_X,$700(a5)	; address register
   3076 FFFC1FDA 2B7C 0000 0190 0704         		move.l	#400,$704(a5)				; set data
   3077 FFFC1FE2 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3078 FFFC1FE8 2B7C 0000 0018 0700         		move.l	#GFX_TARGET_SIZE_Y,$700(a5)	; address register
   3079 FFFC1FF0 2B7C 0000 012C 0704         		move.l	#300,$704(a5)				; set data
   3080 FFFC1FF8 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3081 FFFC1FFE 4E75                        		rts
                                             
   3083 FFFC2000                             gfx_init:
   3084 FFFC2000 6100 FF9E                   		bsr		gfx_wait
   3085 FFFC2004 4BF9 FFE0 0000              		lea		VDGREG,a5
   3086 FFFC200A 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   3087 FFFC2012 23FC 0000 0000 0001 042C    		move.l	#0,gfx_control_reg_mem
                                             
   3089 FFFC201C 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   3090 FFFC2024 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3091 FFFC202A 2B7C 0000 0010 0700         		move.l	#GFX_TARGET_BASE,$700(a5)	; address register
   3092 FFFC2032 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3093 FFFC2038 4E75                        		rts
                                             
   3095 FFFC203A                             gfx_set_color_depth:
   3096 FFFC203A 4BF9 FFE0 0000              		lea		VDGREG,a5
   3097 FFFC2040 02B9 FFFF FFFD 0001 042C    		and.l	#-3,gfx_control_reg_mem		; mask off 2 LSB (color depth field)
                                             
   3099 FFFC204A 00B9 0000 0001 0001 042C    		or.l	#1,gfx_control_reg_mem		; select 16 bpp
                                             
   3101 FFFC2054 6100 FF4A                   		bsr		gfx_wait
   3102 FFFC2058 2B7C 0000 0000 0700         		move.l	#GFX_CONTROL,$700(a5)		; address register
   3103 FFFC2060 2B79 0001 042C 0704         		move.l	gfx_control_reg_mem,$704(a5)
   3104 FFFC2068 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3105 FFFC206E 4E75                        		rts
                                             
   3107 FFFC2070                             gfx_set_color:
   3108 FFFC2070 6100 FF2E                   		bsr		gfx_wait
   3109 FFFC2074 4BF9 FFE0 0000              		lea		VDGREG,a5
   3110 FFFC207A 2B7C 0000 0084 0700         		move.l	#GFX_COLOR0,$700(a5)
   3111 FFFC2082 2B40 0704                   		move.l	d0,$704(a5)
   3112 FFFC2086 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3113 FFFC208C 4E75                        		rts
                                             
   3115 FFFC208E                             gfx_line:
   3116 FFFC208E 6100 FF10                   		bsr		gfx_wait
   3117 FFFC2092 4BF9 FFE0 0000              		lea		VDGREG,a5
   3118 FFFC2098 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   3119 FFFC20A0 2B40 0704                   		move.l	d0,$704(a5)
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 53
bootrom.asm
   3120 FFFC20A4 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3121 FFFC20AA 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   3122 FFFC20B2 2B41 0704                   		move.l	d1,$704(a5)
   3123 FFFC20B6 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3124 FFFC20BC 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   3125 FFFC20C4 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   3126 FFFC20CC 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3127 FFFC20D2 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   3128 FFFC20D8 0086 0000 0000              		or.l	#GFX_ACTIVE_POINT0,d6
   3129 FFFC20DE 2A86                        		move.l	d6,GFX_CONTROL(a5)
   3130 FFFC20E0 2B46 0704                   		move.l	d6,$704(a5)
   3131 FFFC20E4 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3132 FFFC20EA 2B7C 0000 0038 0700         		move.l	#GFX_DEST_PIXEL_X,$700(a5)
   3133 FFFC20F2 2B42 0704                   		move.l	d2,$704(a5)
   3134 FFFC20F6 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3135 FFFC20FC 2B7C 0000 003C 0700         		move.l	#GFX_DEST_PIXEL_Y,$700(a5)
   3136 FFFC2104 2B43 0704                   		move.l	d3,$704(a5)
   3137 FFFC2108 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3138 FFFC210E 2B7C 0000 0040 0700         		move.l	#GFX_DEST_PIXEL_Z,$700(a5)
   3139 FFFC2116 2B7C 0000 0000 0704         		move.l	#0,$704(a5)
   3140 FFFC211E 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3141 FFFC2124 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   3142 FFFC212A 0086 0001 0000              		or.l	#GFX_ACTIVE_POINT1,d6
   3143 FFFC2130 2A86                        		move.l	d6,GFX_CONTROL(a5)
   3144 FFFC2132 2B46 0704                   		move.l	d6,$704(a5)
   3145 FFFC2136 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3146 FFFC213C 2C39 0001 042C              		move.l	gfx_control_reg_mem,d6
   3147 FFFC2142 0086 0000 0200              		or.l	#GFX_LINE,d6
   3148 FFFC2148 2A86                        		move.l	d6,GFX_CONTROL(a5)
   3149 FFFC214A 2B46 0704                   		move.l	d6,$704(a5)
   3150 FFFC214E 3B7C 00F7 0708              		move.w	#$F7,$708(a5)				; set control (generate write bus access to gfx)
   3151 FFFC2154 4E75                        		rts
                                             
   3153 FFFC2156                             gfx_demo:
   3154 FFFC2156 6100 FEA8                   		bsr		gfx_init
   3155 FFFC215A 6100 FE6C                   		bsr		gfx_set_400x300
   3156 FFFC215E                             .0001:
   3157 FFFC215E 4DF9 FFDC 0000              		lea		$FFDC0000,a6	; set I/O base
   3158 FFFC2164 202E 0C00                   		move.l	$0C00(a6),d0	; get 32 bit number
   3159 FFFC2168 3200                        		move.w	d0,d1			; use bits 0 to 8 for y0
   3160 FFFC216A 4840                        		swap	d0				; and bits 16 to 24 for x0
   3161 FFFC216C 0240 00FF                   		and.w	#$FF,d0		; 0 to 511
   3162 FFFC2170 0241 00FF                   		and.w	#$FF,d1		; 0 to 511
   3163 FFFC2174 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   3164 FFFC2178 242E 0C00                   		move.l	$0C00(a6),d2
   3165 FFFC217C 3602                        		move.w	d2,d3
   3166 FFFC217E 4842                        		swap	d2
   3167 FFFC2180 0242 00FF                   		and.w	#$FF,d2		; 0 to 511
   3168 FFFC2184 0243 00FF                   		and.w	#$FF,d3		; 0 to 511
   3169 FFFC2188 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   3170 FFFC218C 282E 0C00                   		move.l	$0C00(a6),d4
   3171 FFFC2190 0244 7FFF                   		and.w	#RGBMASK,d4		; 9/15 bits color
   3172 FFFC2194 426E 0C04                   		clr.w	$0C04(a6)		; gen next number
   3173 FFFC2198 2C00                        		move.l	d0,d6
   3174 FFFC219A 2004                        		move.l	d4,d0
   3175 FFFC219C 6100 FED2                   		bsr		gfx_set_color
   3176 FFFC21A0 2006                        		move.l	d6,d0
   3177 FFFC21A2 6100 FEEA                   		bsr		gfx_line
   3178 FFFC21A6 60B6                        		bra		.0001
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 54
bootrom.asm
                                             		
                                             ; Randomize the screen	
                                             ;		move.l	#VDGBUF,A0
                                             ;		move.l	#%011011111,D0		; light blue
                                             ;		move.l	#640*512,D1
                                             ;clrscr_loop1:
                                             ;		move.l	$0C00(a6),d0			; get a random number
                                             ;		clr.w	$0C04(a6)				; generate next number
                                             ;		move.w	d0,(a0)+				; store it to the screen
                                             ;		sub.l	#1,d1
                                             ;		bne		clrscr_loop1
                                             
   3192 FFFC21A8                             msg_start:
   3193 FFFC21A8 4E 34 56 20 36 38 6B 20     	dc.b	"N4V 68k System Starting",CR,LF,0
   3194 FFFC21B0 53 79 73 74 65 6D 20 53     
   3195 FFFC21B8 74 61 72 74 69 6E 67 0D     
   3196 FFFC21C0 0A 00                       
                                             
                                             ;===============================================================================
                                             ; MMU
                                             ;===============================================================================
                                             		align	2
   3202 FFFC21C2                             mmu_init:
   3203 FFFC21C2 33FC 1010 FFDC 0600         		move.w	#$1010,leds
   3204 FFFC21CA 223C 0002 0000              		move.l	#131072,d1					; count of addresses to set map
   3205 FFFC21D0 207C 1FF4 0000              		movea.l	#$1FF40000,a0				; base of page tables
   3206 FFFC21D6 7007                        		moveq	#7,d0						; start at page zero, read,write,execute
   3207 FFFC21D8                             .0001:
   3208 FFFC21D8 20C0                        		move.l	d0,(a0)+					; update page table entry
   3209 FFFC21DA 0680 0000 1000              		add.l	#$1000,d0
   3210 FFFC21E0 5381                        		sub.l	#1,d1
   3211 FFFC21E2 66F4                        		bne.s	.0001
                                             	
                                             		; Setup the page directory
                                             		; There are only 128 entries to be set, but all entries must be
                                             		; setup because there's no page faulting on not present. All the
                                             		; entries must point to present pages. So the part of the address
                                             		; space that isn't present is setup to point to a dummy page
                                             		; table.
                                             
   3220 FFFC21E4 33FC 1111 FFDC 0600         		move.w	#$1111,leds
   3221 FFFC21EC 323C 0400                   		move.w	#1024,d1			; 1024 entries to setup
   3222 FFFC21F0 207C 1FFF E000              		move.l	#$1FFFE000,a0		; page table for not present entries
   3223 FFFC21F6 203C 1FFF D006              		move.l	#$1FFFD006,d0		; point all entries for not present pages to $1FFFD000
   3224 FFFC21FC                             .0003:
   3225 FFFC21FC 20C0                        		move.l	d0,(a0)+
   3226 FFFC21FE 51C9 FFFC                   		dbra	d1,.0003
                                             
   3228 FFFC2202 33FC 1212 FFDC 0600         		move.w	#$1212,leds
   3229 FFFC220A 747F                        		move.l	#127,d2
   3230 FFFC220C 207C 1FFF F000              		movea.l	#$1FFFF000,a0		; a0 = page directory address
   3231 FFFC2212 223C 1FFF E000              		move.l	#$1FFFE000,d1		; point to not present page table
   3232 FFFC2218 203C 1FF4 0007              		move.l	#$1FF40007,d0
   3233 FFFC221E                             .0002:
   3234 FFFC221E 2141 0200                   		move.l	d1,$0200(a0)		; 7/8 of memory isn't available
   3235 FFFC2222 2141 0400                   		move.l	d1,$0400(a0)
   3236 FFFC2226 2141 0600                   		move.l	d1,$0600(a0)
   3237 FFFC222A 2141 0800                   		move.l	d1,$0800(a0)
   3238 FFFC222E 2141 0A00                   		move.l	d1,$0A00(a0)
   3239 FFFC2232 2141 0C00                   		move.l	d1,$0C00(a0)
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 55
bootrom.asm
   3240 FFFC2236 2141 0E00                   		move.l	d1,$0E00(a0)
   3241 FFFC223A 20C0                        		move.l	d0,(a0)+
   3242 FFFC223C 0680 0000 1000              		add.l	#$1000,d0
   3243 FFFC2242 51CA FFDA                   		dbra	d2,.0002
   3244 FFFC2246 33FC 1919 FFDC 0600         		move.w	#$1919,leds
   3245 FFFC224E 33FC 0000 FFFF FFF6         		move.w	#$00,$FFFFFFF6				; set asid
   3246 FFFC2256 23F9 1FFF F000 FFFF FFF0    		move.l	$1FFFF000,$FFFFFFF0			; set page directory address, enable
                                             
   3248 FFFC2260 4E75                        		rts
                                             		
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             ;===============================================================================
                                             
   3255 FFFC2262                             font8:
   3256 FFFC2262 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $00
                                             
   3258 FFFC226A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3260 FFFC2272 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3262 FFFC227A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3264 FFFC2282 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $04
                                             
   3266 FFFC228A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3268 FFFC2292 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3270 FFFC229A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3272 FFFC22A2 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $08
                                             
   3274 FFFC22AA 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3276 FFFC22B2 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3278 FFFC22BA 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3280 FFFC22C2 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $0C
                                             
   3282 FFFC22CA 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3284 FFFC22D2 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3286 FFFC22DA 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3288 FFFC22E2 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $10
                                             
   3290 FFFC22EA 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3292 FFFC22F2 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3294 FFFC22FA 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3296 FFFC2302 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $14
                                             
   3298 FFFC230A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 56
bootrom.asm
   3300 FFFC2312 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3302 FFFC231A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3304 FFFC2322 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $18
                                             
   3306 FFFC232A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3308 FFFC2332 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3310 FFFC233A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3312 FFFC2342 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; $1C
                                             
   3314 FFFC234A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3316 FFFC2352 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3318 FFFC235A 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; 
                                             
   3320 FFFC2362 00 00 00 00 00 00 00 00     	dc.b	$00,$00,$00,$00,$00,$00,$00,$00	; SPACE
                                             
   3322 FFFC236A 18 18 18 18 18 00 18 00     	dc.b	$18,$18,$18,$18,$18,$00,$18,$00	; !
                                             
   3324 FFFC2372 6C 6C 00 00 00 00 00 00     	dc.b	$6C,$6C,$00,$00,$00,$00,$00,$00	; "
                                             
   3326 FFFC237A 6C 6C FE 6C FE 6C 6C 00     	dc.b	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00	; #
                                             
   3328 FFFC2382 18 3E 60 3C 06 7C 18 00     	dc.b	$18,$3E,$60,$3C,$06,$7C,$18,$00	; $
                                             
   3330 FFFC238A 00 66 AC D8 36 6A CC 00     	dc.b	$00,$66,$AC,$D8,$36,$6A,$CC,$00	; %
                                             
   3332 FFFC2392 38 6C 68 76 DC CE 7B 00     	dc.b	$38,$6C,$68,$76,$DC,$CE,$7B,$00	; &
                                             
   3334 FFFC239A 18 18 30 00 00 00 00 00     	dc.b	$18,$18,$30,$00,$00,$00,$00,$00	; '
                                             
   3336 FFFC23A2 0C 18 30 30 30 18 0C 00     	dc.b	$0C,$18,$30,$30,$30,$18,$0C,$00	; (
                                             
   3338 FFFC23AA 30 18 0C 0C 0C 18 30 00     	dc.b	$30,$18,$0C,$0C,$0C,$18,$30,$00	; )
                                             
   3340 FFFC23B2 00 66 3C FF 3C 66 00 00     	dc.b	$00,$66,$3C,$FF,$3C,$66,$00,$00	; *
                                             
   3342 FFFC23BA 00 18 18 7E 18 18 00 00     	dc.b	$00,$18,$18,$7E,$18,$18,$00,$00	; +
                                             
   3344 FFFC23C2 00 00 00 00 00 18 18 30     	dc.b	$00,$00,$00,$00,$00,$18,$18,$30	; ,
                                             
   3346 FFFC23CA 00 00 00 7E 00 00 00 00     	dc.b	$00,$00,$00,$7E,$00,$00,$00,$00	; -
                                             
   3348 FFFC23D2 00 00 00 00 00 18 18 00     	dc.b	$00,$00,$00,$00,$00,$18,$18,$00	; .
                                             
   3350 FFFC23DA 03 06 0C 18 30 60 C0 00     	dc.b	$03,$06,$0C,$18,$30,$60,$C0,$00	; /
                                             
   3352 FFFC23E2 3C 66 6E 7E 76 66 3C 00     	dc.b	$3C,$66,$6E,$7E,$76,$66,$3C,$00	; 0
                                             
   3354 FFFC23EA 18 38 78 18 18 18 18 00     	dc.b	$18,$38,$78,$18,$18,$18,$18,$00	; 1
                                             
   3356 FFFC23F2 3C 66 06 0C 18 30 7E 00     	dc.b	$3C,$66,$06,$0C,$18,$30,$7E,$00	; 2
                                             
   3358 FFFC23FA 3C 66 06 1C 06 66 3C 00     	dc.b	$3C,$66,$06,$1C,$06,$66,$3C,$00	; 3
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 57
bootrom.asm
   3360 FFFC2402 1C 3C 6C CC FE 0C 0C 00     	dc.b	$1C,$3C,$6C,$CC,$FE,$0C,$0C,$00	; 4
                                             
   3362 FFFC240A 7E 60 7C 06 06 66 3C 00     	dc.b	$7E,$60,$7C,$06,$06,$66,$3C,$00	; 5
                                             
   3364 FFFC2412 1C 30 60 7C 66 66 3C 00     	dc.b	$1C,$30,$60,$7C,$66,$66,$3C,$00	; 6
                                             
   3366 FFFC241A 7E 06 06 0C 18 18 18 00     	dc.b	$7E,$06,$06,$0C,$18,$18,$18,$00	; 7
                                             
   3368 FFFC2422 3C 66 66 3C 66 66 3C 00     	dc.b	$3C,$66,$66,$3C,$66,$66,$3C,$00	; 8
                                             
   3370 FFFC242A 3C 66 66 3E 06 0C 38 00     	dc.b	$3C,$66,$66,$3E,$06,$0C,$38,$00	; 9
                                             
   3372 FFFC2432 00 18 18 00 00 18 18 00     	dc.b	$00,$18,$18,$00,$00,$18,$18,$00	; :
                                             
   3374 FFFC243A 00 18 18 00 00 18 18 30     	dc.b	$00,$18,$18,$00,$00,$18,$18,$30	; ;
                                             
   3376 FFFC2442 00 06 18 60 18 06 00 00     	dc.b	$00,$06,$18,$60,$18,$06,$00,$00	; <
                                             
   3378 FFFC244A 00 00 7E 00 7E 00 00 00     	dc.b	$00,$00,$7E,$00,$7E,$00,$00,$00	; =
                                             
   3380 FFFC2452 00 60 18 06 18 60 00 00     	dc.b	$00,$60,$18,$06,$18,$60,$00,$00	; >
                                             
   3382 FFFC245A 3C 66 06 0C 18 00 18 00     	dc.b	$3C,$66,$06,$0C,$18,$00,$18,$00	; ?
                                             
   3384 FFFC2462 7C C6 DE D6 DE C0 78 00     	dc.b	$7C,$C6,$DE,$D6,$DE,$C0,$78,$00	; @
                                             
   3386 FFFC246A 3C 66 66 7E 66 66 66 00     	dc.b	$3C,$66,$66,$7E,$66,$66,$66,$00	; A
                                             
   3388 FFFC2472 7C 66 66 7C 66 66 7C 00     	dc.b	$7C,$66,$66,$7C,$66,$66,$7C,$00	; B
                                             
   3390 FFFC247A 1E 30 60 60 60 30 1E 00     	dc.b	$1E,$30,$60,$60,$60,$30,$1E,$00	; C
                                             
   3392 FFFC2482 78 6C 66 66 66 6C 78 00     	dc.b	$78,$6C,$66,$66,$66,$6C,$78,$00	; D
                                             
   3394 FFFC248A 7E 60 60 78 60 60 7E 00     	dc.b	$7E,$60,$60,$78,$60,$60,$7E,$00	; E
                                             
   3396 FFFC2492 7E 60 60 78 60 60 60 00     	dc.b	$7E,$60,$60,$78,$60,$60,$60,$00	; F
                                             
   3398 FFFC249A 3C 66 60 6E 66 66 3E 00     	dc.b	$3C,$66,$60,$6E,$66,$66,$3E,$00	; G
                                             
   3400 FFFC24A2 66 66 66 7E 66 66 66 00     	dc.b	$66,$66,$66,$7E,$66,$66,$66,$00	; H
                                             
   3402 FFFC24AA 3C 18 18 18 18 18 3C 00     	dc.b	$3C,$18,$18,$18,$18,$18,$3C,$00	; I
                                             
   3404 FFFC24B2 06 06 06 06 06 66 3C 00     	dc.b	$06,$06,$06,$06,$06,$66,$3C,$00	; J
                                             
   3406 FFFC24BA C6 CC D8 F0 D8 CC C6 00     	dc.b	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00	; K
                                             
   3408 FFFC24C2 60 60 60 60 60 60 7E 00     	dc.b	$60,$60,$60,$60,$60,$60,$7E,$00	; L
                                             
   3410 FFFC24CA C6 EE FE D6 C6 C6 C6 00     	dc.b	$C6,$EE,$FE,$D6,$C6,$C6,$C6,$00	; M
                                             
   3412 FFFC24D2 C6 E6 F6 DE CE C6 C6 00     	dc.b	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00	; N
                                             
   3414 FFFC24DA 3C 66 66 66 66 66 3C 00     	dc.b	$3C,$66,$66,$66,$66,$66,$3C,$00	; O
                                             
   3416 FFFC24E2 7C 66 66 7C 60 60 60 00     	dc.b	$7C,$66,$66,$7C,$60,$60,$60,$00	; P
                                             
   3418 FFFC24EA 78 CC CC CC CC DC 7E 00     	dc.b	$78,$CC,$CC,$CC,$CC,$DC,$7E,$00	; Q
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 58
bootrom.asm
   3420 FFFC24F2 7C 66 66 7C 6C 66 66 00     	dc.b	$7C,$66,$66,$7C,$6C,$66,$66,$00	; R
                                             
   3422 FFFC24FA 3C 66 70 3C 0E 66 3C 00     	dc.b	$3C,$66,$70,$3C,$0E,$66,$3C,$00	; S
                                             
   3424 FFFC2502 7E 18 18 18 18 18 18 00     	dc.b	$7E,$18,$18,$18,$18,$18,$18,$00	; T
                                             
   3426 FFFC250A 66 66 66 66 66 66 3C 00     	dc.b	$66,$66,$66,$66,$66,$66,$3C,$00	; U
                                             
   3428 FFFC2512 66 66 66 66 3C 3C 18 00     	dc.b	$66,$66,$66,$66,$3C,$3C,$18,$00	; V
                                             
   3430 FFFC251A C6 C6 C6 D6 FE EE C6 00     	dc.b	$C6,$C6,$C6,$D6,$FE,$EE,$C6,$00	; W
                                             
   3432 FFFC2522 C3 66 3C 18 3C 66 C3 00     	dc.b	$C3,$66,$3C,$18,$3C,$66,$C3,$00	; X
                                             
   3434 FFFC252A C3 66 3C 18 18 18 18 00     	dc.b	$C3,$66,$3C,$18,$18,$18,$18,$00	; Y
                                             
   3436 FFFC2532 FE 0C 18 30 60 C0 FE 00     	dc.b	$FE,$0C,$18,$30,$60,$C0,$FE,$00	; Z
                                             
   3438 FFFC253A 3C 30 30 30 30 30 3C 00     	dc.b	$3C,$30,$30,$30,$30,$30,$3C,$00	; [
                                             
   3440 FFFC2542 C0 60 30 18 0C 06 03 00     	dc.b	$C0,$60,$30,$18,$0C,$06,$03,$00	; \
                                             
   3442 FFFC254A 3C 0C 0C 0C 0C 0C 3C 00     	dc.b	$3C,$0C,$0C,$0C,$0C,$0C,$3C,$00	; ]
                                             
   3444 FFFC2552 10 38 6C C6 00 00 00 00     	dc.b	$10,$38,$6C,$C6,$00,$00,$00,$00	; ^
                                             
   3446 FFFC255A 00 00 00 00 00 00 00 FE     	dc.b	$00,$00,$00,$00,$00,$00,$00,$FE	; _
                                             
   3448 FFFC2562 18 18 0C 00 00 00 00 00     	dc.b	$18,$18,$0C,$00,$00,$00,$00,$00	; `
                                             
   3450 FFFC256A 00 00 3C 06 3E 66 3E 00     	dc.b	$00,$00,$3C,$06,$3E,$66,$3E,$00	; a
                                             
   3452 FFFC2572 60 60 7C 66 66 66 7C 00     	dc.b	$60,$60,$7C,$66,$66,$66,$7C,$00	; b
                                             
   3454 FFFC257A 00 00 3C 60 60 60 3C 00     	dc.b	$00,$00,$3C,$60,$60,$60,$3C,$00	; c
                                             
   3456 FFFC2582 06 06 3E 66 66 66 3E 00     	dc.b	$06,$06,$3E,$66,$66,$66,$3E,$00	; d
                                             
   3458 FFFC258A 00 00 3C 66 7E 60 3C 00     	dc.b	$00,$00,$3C,$66,$7E,$60,$3C,$00	; e
                                             
   3460 FFFC2592 1C 30 7C 30 30 30 30 00     	dc.b	$1C,$30,$7C,$30,$30,$30,$30,$00	; f
                                             
   3462 FFFC259A 00 00 3E 66 66 3E 06 3C     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$3C	; g
                                             
   3464 FFFC25A2 60 60 7C 66 66 66 66 00     	dc.b	$60,$60,$7C,$66,$66,$66,$66,$00	; h
                                             
   3466 FFFC25AA 18 00 18 18 18 18 0C 00     	dc.b	$18,$00,$18,$18,$18,$18,$0C,$00	; i
                                             
   3468 FFFC25B2 0C 00 0C 0C 0C 0C 0C 78     	dc.b	$0C,$00,$0C,$0C,$0C,$0C,$0C,$78	; j
                                             
   3470 FFFC25BA 60 60 66 6C 78 6C 66 00     	dc.b	$60,$60,$66,$6C,$78,$6C,$66,$00	; k
                                             
   3472 FFFC25C2 18 18 18 18 18 18 0C 00     	dc.b	$18,$18,$18,$18,$18,$18,$0C,$00	; l
                                             
   3474 FFFC25CA 00 00 EC FE D6 C6 C6 00     	dc.b	$00,$00,$EC,$FE,$D6,$C6,$C6,$00	; m
                                             
   3476 FFFC25D2 00 00 7C 66 66 66 66 00     	dc.b	$00,$00,$7C,$66,$66,$66,$66,$00	; n
                                             
   3478 FFFC25DA 00 00 3C 66 66 66 3C 00     	dc.b	$00,$00,$3C,$66,$66,$66,$3C,$00	; o
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 59
bootrom.asm
   3480 FFFC25E2 00 00 7C 66 66 7C 60 60     	dc.b	$00,$00,$7C,$66,$66,$7C,$60,$60	; p
                                             
   3482 FFFC25EA 00 00 3E 66 66 3E 06 06     	dc.b	$00,$00,$3E,$66,$66,$3E,$06,$06	; q
                                             
   3484 FFFC25F2 00 00 7C 66 60 60 60 00     	dc.b	$00,$00,$7C,$66,$60,$60,$60,$00	; r
                                             
   3486 FFFC25FA 00 00 3C 60 3C 06 7C 00     	dc.b	$00,$00,$3C,$60,$3C,$06,$7C,$00	; s
                                             
   3488 FFFC2602 30 30 7C 30 30 30 1C 00     	dc.b	$30,$30,$7C,$30,$30,$30,$1C,$00	; t
                                             
   3490 FFFC260A 00 00 66 66 66 66 3E 00     	dc.b	$00,$00,$66,$66,$66,$66,$3E,$00	; u
                                             
   3492 FFFC2612 00 00 66 66 66 3C 18 00     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$00	; v
                                             
   3494 FFFC261A 00 00 C6 C6 D6 FE 6C 00     	dc.b	$00,$00,$C6,$C6,$D6,$FE,$6C,$00	; w
                                             
   3496 FFFC2622 00 00 C6 6C 38 6C C6 00     	dc.b	$00,$00,$C6,$6C,$38,$6C,$C6,$00	; x
                                             
   3498 FFFC262A 00 00 66 66 66 3C 18 30     	dc.b	$00,$00,$66,$66,$66,$3C,$18,$30	; y
                                             
   3500 FFFC2632 00 00 7E 0C 18 30 7E 00     	dc.b	$00,$00,$7E,$0C,$18,$30,$7E,$00	; z
                                             
   3502 FFFC263A 0E 18 18 70 18 18 0E 00     	dc.b	$0E,$18,$18,$70,$18,$18,$0E,$00	; {
                                             
   3504 FFFC2642 18 18 18 18 18 18 18 00     	dc.b	$18,$18,$18,$18,$18,$18,$18,$00	; |
                                             
   3506 FFFC264A 70 18 18 0E 18 18 70 00     	dc.b	$70,$18,$18,$0E,$18,$18,$70,$00	; }
                                             
   3508 FFFC2652 72 9C 00 00 00 00 00 00     	dc.b	$72,$9C,$00,$00,$00,$00,$00,$00	; ~
                                             
   3510 FFFC265A FE FE FE FE FE FE FE 00     	dc.b	$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00	; 
                                             
                                             
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 1
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm

                                             ;*****************************************************************
                                             ;								 *
                                             ;		Tiny BASIC for the Motorola MC68000		 *
                                             ;								 *
                                             ; Derived from Palo Alto Tiny BASIC as published in the May 1976 *
                                             ; issue of Dr. Dobb's Journal.  Adapted to the 68000 by:         *
                                             ;	Gordon Brandly						 *
                                             ;	12147 - 51 Street					 *
                                             ;	Edmonton AB  T5W 3G8					 *
                                             ;	Canada							 *
                                             ;	(updated mailing address for 1996)			 *
                                             ;								 *
                                             ; This version is for MEX68KECB Educational Computer Board I/O.  *
                                             ;								 *
                                             ;*****************************************************************
                                             ;    Copyright (C) 1984 by Gordon Brandly. This program may be	 *
                                             ;    freely distributed for personal use only. All commercial	 *
                                             ;		       rights are reserved.			 *
                                             ;*****************************************************************
                                             
                                             ; Vers. 1.0  1984/7/17	- Original version by Gordon Brandly
                                             ;	1.1  1984/12/9	- Addition of '$' print term by Marvin Lipford
                                             ;	1.2  1985/4/9	- Bug fix in multiply routine by Rick Murray
                                             
                                             ;	OPT	FRS,BRS 	forward ref.'s & branches default to short
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 2
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             CR	EQU	0x0D		;ASCII equates
                                             LF	EQU	0x0A
                                             TAB	EQU	0x09
                                             CTRLC	EQU	0x03
                                             CTRLH	EQU	0x08
                                             CTRLS	EQU	0x13
                                             CTRLX	EQU	0x18
                                             
                                             BUFLEN	EQU	80	;	length of keyboard input buffer
                                             
                                             ;*
                                             ;* Internal variables follow:
                                             ;*
                                             	BSS
                                             	ORG		0x600
   3555 00000600                             RANPNT:
   3556 00000600                             	DC.L	START	;	random number pointer
   3557 00000604                             CURRNT:
   3558 00000604                             	DC.L	1		;Current line pointer
   3559 00000608                             STKGOS:
   3560 00000608                             	DC.L	1		;Saves stack pointer in 'GOSUB'
   3561 0000060C                             STKINP:
   3562 0000060C                             	DC.L	1		;Saves stack pointer during 'INPUT'
   3563 00000610                             LOPVAR:
   3564 00000610                             	DC.L	1		;'FOR' loop save area
   3565 00000614                             LOPINC:
   3566 00000614                             	DC.L	1		;increment
   3567 00000618                             LOPLMT:
   3568 00000618                             	DC.L	1		;limit
   3569 0000061C                             LOPLN:
   3570 0000061C                             	DC.L	1		;line number
   3571 00000620                             LOPPT:
   3572 00000620                             	DC.L	1		;text pointer
   3573 00000624                             TXTUNF:
   3574 00000624                             	DC.L	1		;points to unfilled text area
   3575 00000628                             VARBGN:
   3576 00000628                             	DC.L	1		;points to variable area
   3577 0000062C                             STKLMT:
   3578 0000062C                             	DC.L	1		;holds lower limit for stack growth
   3579 00000630                             BUFFER:
   3580 00000630                             	FILL.B	BUFLEN,0x00	;	Keyboard input buffer
                                             
                                             TXT	EQU	$		;Beginning of program area
                                             
                                             	CODE
   3585 FFFC2662 FF FF FF FF FF FF FF FF     	ORG	0xFFFCC000	;
   3586 FFFC266A FF FF FF FF FF FF FF FF     
   3587 FFFC2672 FF FF FF FF FF FF FF FF     
   3588 FFFC267A FF FF FF FF FF FF FF FF     
   3589 FFFC2682 FF FF FF FF FF FF FF FF     
   3590 FFFC268A FF FF FF FF FF FF FF FF     
   3591 FFFC2692 FF FF FF FF FF FF FF FF     
   3592 FFFC269A FF FF FF FF FF FF FF FF     
   3593 FFFC26A2 FF FF FF FF FF FF FF FF     
   3594 FFFC26AA FF FF FF FF FF FF FF FF     
   3595 FFFC26B2 FF FF FF FF FF FF FF FF     
   3596 FFFC26BA FF FF FF FF FF FF FF FF     
   3597 FFFC26C2 FF FF FF FF FF FF FF FF     
   3598 FFFC26CA FF FF FF FF FF FF FF FF     
   3599 FFFC26D2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 3
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3600 FFFC26DA FF FF FF FF FF FF FF FF     
   3601 FFFC26E2 FF FF FF FF FF FF FF FF     
   3602 FFFC26EA FF FF FF FF FF FF FF FF     
   3603 FFFC26F2 FF FF FF FF FF FF FF FF     
   3604 FFFC26FA FF FF FF FF FF FF FF FF     
   3605 FFFC2702 FF FF FF FF FF FF FF FF     
   3606 FFFC270A FF FF FF FF FF FF FF FF     
   3607 FFFC2712 FF FF FF FF FF FF FF FF     
   3608 FFFC271A FF FF FF FF FF FF FF FF     
   3609 FFFC2722 FF FF FF FF FF FF FF FF     
   3610 FFFC272A FF FF FF FF FF FF FF FF     
   3611 FFFC2732 FF FF FF FF FF FF FF FF     
   3612 FFFC273A FF FF FF FF FF FF FF FF     
   3613 FFFC2742 FF FF FF FF FF FF FF FF     
   3614 FFFC274A FF FF FF FF FF FF FF FF     
   3615 FFFC2752 FF FF FF FF FF FF FF FF     
   3616 FFFC275A FF FF FF FF FF FF FF FF     
   3617 FFFC2762 FF FF FF FF FF FF FF FF     
   3618 FFFC276A FF FF FF FF FF FF FF FF     
   3619 FFFC2772 FF FF FF FF FF FF FF FF     
   3620 FFFC277A FF FF FF FF FF FF FF FF     
   3621 FFFC2782 FF FF FF FF FF FF FF FF     
   3622 FFFC278A FF FF FF FF FF FF FF FF     
   3623 FFFC2792 FF FF FF FF FF FF FF FF     
   3624 FFFC279A FF FF FF FF FF FF FF FF     
   3625 FFFC27A2 FF FF FF FF FF FF FF FF     
   3626 FFFC27AA FF FF FF FF FF FF FF FF     
   3627 FFFC27B2 FF FF FF FF FF FF FF FF     
   3628 FFFC27BA FF FF FF FF FF FF FF FF     
   3629 FFFC27C2 FF FF FF FF FF FF FF FF     
   3630 FFFC27CA FF FF FF FF FF FF FF FF     
   3631 FFFC27D2 FF FF FF FF FF FF FF FF     
   3632 FFFC27DA FF FF FF FF FF FF FF FF     
   3633 FFFC27E2 FF FF FF FF FF FF FF FF     
   3634 FFFC27EA FF FF FF FF FF FF FF FF     
   3635 FFFC27F2 FF FF FF FF FF FF FF FF     
   3636 FFFC27FA FF FF FF FF FF FF FF FF     
   3637 FFFC2802 FF FF FF FF FF FF FF FF     
   3638 FFFC280A FF FF FF FF FF FF FF FF     
   3639 FFFC2812 FF FF FF FF FF FF FF FF     
   3640 FFFC281A FF FF FF FF FF FF FF FF     
   3641 FFFC2822 FF FF FF FF FF FF FF FF     
   3642 FFFC282A FF FF FF FF FF FF FF FF     
   3643 FFFC2832 FF FF FF FF FF FF FF FF     
   3644 FFFC283A FF FF FF FF FF FF FF FF     
   3645 FFFC2842 FF FF FF FF FF FF FF FF     
   3646 FFFC284A FF FF FF FF FF FF FF FF     
   3647 FFFC2852 FF FF FF FF FF FF FF FF     
   3648 FFFC285A FF FF FF FF FF FF FF FF     
   3649 FFFC2862 FF FF FF FF FF FF FF FF     
   3650 FFFC286A FF FF FF FF FF FF FF FF     
   3651 FFFC2872 FF FF FF FF FF FF FF FF     
   3652 FFFC287A FF FF FF FF FF FF FF FF     
   3653 FFFC2882 FF FF FF FF FF FF FF FF     
   3654 FFFC288A FF FF FF FF FF FF FF FF     
   3655 FFFC2892 FF FF FF FF FF FF FF FF     
   3656 FFFC289A FF FF FF FF FF FF FF FF     
   3657 FFFC28A2 FF FF FF FF FF FF FF FF     
   3658 FFFC28AA FF FF FF FF FF FF FF FF     
   3659 FFFC28B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 4
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3660 FFFC28BA FF FF FF FF FF FF FF FF     
   3661 FFFC28C2 FF FF FF FF FF FF FF FF     
   3662 FFFC28CA FF FF FF FF FF FF FF FF     
   3663 FFFC28D2 FF FF FF FF FF FF FF FF     
   3664 FFFC28DA FF FF FF FF FF FF FF FF     
   3665 FFFC28E2 FF FF FF FF FF FF FF FF     
   3666 FFFC28EA FF FF FF FF FF FF FF FF     
   3667 FFFC28F2 FF FF FF FF FF FF FF FF     
   3668 FFFC28FA FF FF FF FF FF FF FF FF     
   3669 FFFC2902 FF FF FF FF FF FF FF FF     
   3670 FFFC290A FF FF FF FF FF FF FF FF     
   3671 FFFC2912 FF FF FF FF FF FF FF FF     
   3672 FFFC291A FF FF FF FF FF FF FF FF     
   3673 FFFC2922 FF FF FF FF FF FF FF FF     
   3674 FFFC292A FF FF FF FF FF FF FF FF     
   3675 FFFC2932 FF FF FF FF FF FF FF FF     
   3676 FFFC293A FF FF FF FF FF FF FF FF     
   3677 FFFC2942 FF FF FF FF FF FF FF FF     
   3678 FFFC294A FF FF FF FF FF FF FF FF     
   3679 FFFC2952 FF FF FF FF FF FF FF FF     
   3680 FFFC295A FF FF FF FF FF FF FF FF     
   3681 FFFC2962 FF FF FF FF FF FF FF FF     
   3682 FFFC296A FF FF FF FF FF FF FF FF     
   3683 FFFC2972 FF FF FF FF FF FF FF FF     
   3684 FFFC297A FF FF FF FF FF FF FF FF     
   3685 FFFC2982 FF FF FF FF FF FF FF FF     
   3686 FFFC298A FF FF FF FF FF FF FF FF     
   3687 FFFC2992 FF FF FF FF FF FF FF FF     
   3688 FFFC299A FF FF FF FF FF FF FF FF     
   3689 FFFC29A2 FF FF FF FF FF FF FF FF     
   3690 FFFC29AA FF FF FF FF FF FF FF FF     
   3691 FFFC29B2 FF FF FF FF FF FF FF FF     
   3692 FFFC29BA FF FF FF FF FF FF FF FF     
   3693 FFFC29C2 FF FF FF FF FF FF FF FF     
   3694 FFFC29CA FF FF FF FF FF FF FF FF     
   3695 FFFC29D2 FF FF FF FF FF FF FF FF     
   3696 FFFC29DA FF FF FF FF FF FF FF FF     
   3697 FFFC29E2 FF FF FF FF FF FF FF FF     
   3698 FFFC29EA FF FF FF FF FF FF FF FF     
   3699 FFFC29F2 FF FF FF FF FF FF FF FF     
   3700 FFFC29FA FF FF FF FF FF FF FF FF     
   3701 FFFC2A02 FF FF FF FF FF FF FF FF     
   3702 FFFC2A0A FF FF FF FF FF FF FF FF     
   3703 FFFC2A12 FF FF FF FF FF FF FF FF     
   3704 FFFC2A1A FF FF FF FF FF FF FF FF     
   3705 FFFC2A22 FF FF FF FF FF FF FF FF     
   3706 FFFC2A2A FF FF FF FF FF FF FF FF     
   3707 FFFC2A32 FF FF FF FF FF FF FF FF     
   3708 FFFC2A3A FF FF FF FF FF FF FF FF     
   3709 FFFC2A42 FF FF FF FF FF FF FF FF     
   3710 FFFC2A4A FF FF FF FF FF FF FF FF     
   3711 FFFC2A52 FF FF FF FF FF FF FF FF     
   3712 FFFC2A5A FF FF FF FF FF FF FF FF     
   3713 FFFC2A62 FF FF FF FF FF FF FF FF     
   3714 FFFC2A6A FF FF FF FF FF FF FF FF     
   3715 FFFC2A72 FF FF FF FF FF FF FF FF     
   3716 FFFC2A7A FF FF FF FF FF FF FF FF     
   3717 FFFC2A82 FF FF FF FF FF FF FF FF     
   3718 FFFC2A8A FF FF FF FF FF FF FF FF     
   3719 FFFC2A92 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 5
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3720 FFFC2A9A FF FF FF FF FF FF FF FF     
   3721 FFFC2AA2 FF FF FF FF FF FF FF FF     
   3722 FFFC2AAA FF FF FF FF FF FF FF FF     
   3723 FFFC2AB2 FF FF FF FF FF FF FF FF     
   3724 FFFC2ABA FF FF FF FF FF FF FF FF     
   3725 FFFC2AC2 FF FF FF FF FF FF FF FF     
   3726 FFFC2ACA FF FF FF FF FF FF FF FF     
   3727 FFFC2AD2 FF FF FF FF FF FF FF FF     
   3728 FFFC2ADA FF FF FF FF FF FF FF FF     
   3729 FFFC2AE2 FF FF FF FF FF FF FF FF     
   3730 FFFC2AEA FF FF FF FF FF FF FF FF     
   3731 FFFC2AF2 FF FF FF FF FF FF FF FF     
   3732 FFFC2AFA FF FF FF FF FF FF FF FF     
   3733 FFFC2B02 FF FF FF FF FF FF FF FF     
   3734 FFFC2B0A FF FF FF FF FF FF FF FF     
   3735 FFFC2B12 FF FF FF FF FF FF FF FF     
   3736 FFFC2B1A FF FF FF FF FF FF FF FF     
   3737 FFFC2B22 FF FF FF FF FF FF FF FF     
   3738 FFFC2B2A FF FF FF FF FF FF FF FF     
   3739 FFFC2B32 FF FF FF FF FF FF FF FF     
   3740 FFFC2B3A FF FF FF FF FF FF FF FF     
   3741 FFFC2B42 FF FF FF FF FF FF FF FF     
   3742 FFFC2B4A FF FF FF FF FF FF FF FF     
   3743 FFFC2B52 FF FF FF FF FF FF FF FF     
   3744 FFFC2B5A FF FF FF FF FF FF FF FF     
   3745 FFFC2B62 FF FF FF FF FF FF FF FF     
   3746 FFFC2B6A FF FF FF FF FF FF FF FF     
   3747 FFFC2B72 FF FF FF FF FF FF FF FF     
   3748 FFFC2B7A FF FF FF FF FF FF FF FF     
   3749 FFFC2B82 FF FF FF FF FF FF FF FF     
   3750 FFFC2B8A FF FF FF FF FF FF FF FF     
   3751 FFFC2B92 FF FF FF FF FF FF FF FF     
   3752 FFFC2B9A FF FF FF FF FF FF FF FF     
   3753 FFFC2BA2 FF FF FF FF FF FF FF FF     
   3754 FFFC2BAA FF FF FF FF FF FF FF FF     
   3755 FFFC2BB2 FF FF FF FF FF FF FF FF     
   3756 FFFC2BBA FF FF FF FF FF FF FF FF     
   3757 FFFC2BC2 FF FF FF FF FF FF FF FF     
   3758 FFFC2BCA FF FF FF FF FF FF FF FF     
   3759 FFFC2BD2 FF FF FF FF FF FF FF FF     
   3760 FFFC2BDA FF FF FF FF FF FF FF FF     
   3761 FFFC2BE2 FF FF FF FF FF FF FF FF     
   3762 FFFC2BEA FF FF FF FF FF FF FF FF     
   3763 FFFC2BF2 FF FF FF FF FF FF FF FF     
   3764 FFFC2BFA FF FF FF FF FF FF FF FF     
   3765 FFFC2C02 FF FF FF FF FF FF FF FF     
   3766 FFFC2C0A FF FF FF FF FF FF FF FF     
   3767 FFFC2C12 FF FF FF FF FF FF FF FF     
   3768 FFFC2C1A FF FF FF FF FF FF FF FF     
   3769 FFFC2C22 FF FF FF FF FF FF FF FF     
   3770 FFFC2C2A FF FF FF FF FF FF FF FF     
   3771 FFFC2C32 FF FF FF FF FF FF FF FF     
   3772 FFFC2C3A FF FF FF FF FF FF FF FF     
   3773 FFFC2C42 FF FF FF FF FF FF FF FF     
   3774 FFFC2C4A FF FF FF FF FF FF FF FF     
   3775 FFFC2C52 FF FF FF FF FF FF FF FF     
   3776 FFFC2C5A FF FF FF FF FF FF FF FF     
   3777 FFFC2C62 FF FF FF FF FF FF FF FF     
   3778 FFFC2C6A FF FF FF FF FF FF FF FF     
   3779 FFFC2C72 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 6
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3780 FFFC2C7A FF FF FF FF FF FF FF FF     
   3781 FFFC2C82 FF FF FF FF FF FF FF FF     
   3782 FFFC2C8A FF FF FF FF FF FF FF FF     
   3783 FFFC2C92 FF FF FF FF FF FF FF FF     
   3784 FFFC2C9A FF FF FF FF FF FF FF FF     
   3785 FFFC2CA2 FF FF FF FF FF FF FF FF     
   3786 FFFC2CAA FF FF FF FF FF FF FF FF     
   3787 FFFC2CB2 FF FF FF FF FF FF FF FF     
   3788 FFFC2CBA FF FF FF FF FF FF FF FF     
   3789 FFFC2CC2 FF FF FF FF FF FF FF FF     
   3790 FFFC2CCA FF FF FF FF FF FF FF FF     
   3791 FFFC2CD2 FF FF FF FF FF FF FF FF     
   3792 FFFC2CDA FF FF FF FF FF FF FF FF     
   3793 FFFC2CE2 FF FF FF FF FF FF FF FF     
   3794 FFFC2CEA FF FF FF FF FF FF FF FF     
   3795 FFFC2CF2 FF FF FF FF FF FF FF FF     
   3796 FFFC2CFA FF FF FF FF FF FF FF FF     
   3797 FFFC2D02 FF FF FF FF FF FF FF FF     
   3798 FFFC2D0A FF FF FF FF FF FF FF FF     
   3799 FFFC2D12 FF FF FF FF FF FF FF FF     
   3800 FFFC2D1A FF FF FF FF FF FF FF FF     
   3801 FFFC2D22 FF FF FF FF FF FF FF FF     
   3802 FFFC2D2A FF FF FF FF FF FF FF FF     
   3803 FFFC2D32 FF FF FF FF FF FF FF FF     
   3804 FFFC2D3A FF FF FF FF FF FF FF FF     
   3805 FFFC2D42 FF FF FF FF FF FF FF FF     
   3806 FFFC2D4A FF FF FF FF FF FF FF FF     
   3807 FFFC2D52 FF FF FF FF FF FF FF FF     
   3808 FFFC2D5A FF FF FF FF FF FF FF FF     
   3809 FFFC2D62 FF FF FF FF FF FF FF FF     
   3810 FFFC2D6A FF FF FF FF FF FF FF FF     
   3811 FFFC2D72 FF FF FF FF FF FF FF FF     
   3812 FFFC2D7A FF FF FF FF FF FF FF FF     
   3813 FFFC2D82 FF FF FF FF FF FF FF FF     
   3814 FFFC2D8A FF FF FF FF FF FF FF FF     
   3815 FFFC2D92 FF FF FF FF FF FF FF FF     
   3816 FFFC2D9A FF FF FF FF FF FF FF FF     
   3817 FFFC2DA2 FF FF FF FF FF FF FF FF     
   3818 FFFC2DAA FF FF FF FF FF FF FF FF     
   3819 FFFC2DB2 FF FF FF FF FF FF FF FF     
   3820 FFFC2DBA FF FF FF FF FF FF FF FF     
   3821 FFFC2DC2 FF FF FF FF FF FF FF FF     
   3822 FFFC2DCA FF FF FF FF FF FF FF FF     
   3823 FFFC2DD2 FF FF FF FF FF FF FF FF     
   3824 FFFC2DDA FF FF FF FF FF FF FF FF     
   3825 FFFC2DE2 FF FF FF FF FF FF FF FF     
   3826 FFFC2DEA FF FF FF FF FF FF FF FF     
   3827 FFFC2DF2 FF FF FF FF FF FF FF FF     
   3828 FFFC2DFA FF FF FF FF FF FF FF FF     
   3829 FFFC2E02 FF FF FF FF FF FF FF FF     
   3830 FFFC2E0A FF FF FF FF FF FF FF FF     
   3831 FFFC2E12 FF FF FF FF FF FF FF FF     
   3832 FFFC2E1A FF FF FF FF FF FF FF FF     
   3833 FFFC2E22 FF FF FF FF FF FF FF FF     
   3834 FFFC2E2A FF FF FF FF FF FF FF FF     
   3835 FFFC2E32 FF FF FF FF FF FF FF FF     
   3836 FFFC2E3A FF FF FF FF FF FF FF FF     
   3837 FFFC2E42 FF FF FF FF FF FF FF FF     
   3838 FFFC2E4A FF FF FF FF FF FF FF FF     
   3839 FFFC2E52 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 7
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3840 FFFC2E5A FF FF FF FF FF FF FF FF     
   3841 FFFC2E62 FF FF FF FF FF FF FF FF     
   3842 FFFC2E6A FF FF FF FF FF FF FF FF     
   3843 FFFC2E72 FF FF FF FF FF FF FF FF     
   3844 FFFC2E7A FF FF FF FF FF FF FF FF     
   3845 FFFC2E82 FF FF FF FF FF FF FF FF     
   3846 FFFC2E8A FF FF FF FF FF FF FF FF     
   3847 FFFC2E92 FF FF FF FF FF FF FF FF     
   3848 FFFC2E9A FF FF FF FF FF FF FF FF     
   3849 FFFC2EA2 FF FF FF FF FF FF FF FF     
   3850 FFFC2EAA FF FF FF FF FF FF FF FF     
   3851 FFFC2EB2 FF FF FF FF FF FF FF FF     
   3852 FFFC2EBA FF FF FF FF FF FF FF FF     
   3853 FFFC2EC2 FF FF FF FF FF FF FF FF     
   3854 FFFC2ECA FF FF FF FF FF FF FF FF     
   3855 FFFC2ED2 FF FF FF FF FF FF FF FF     
   3856 FFFC2EDA FF FF FF FF FF FF FF FF     
   3857 FFFC2EE2 FF FF FF FF FF FF FF FF     
   3858 FFFC2EEA FF FF FF FF FF FF FF FF     
   3859 FFFC2EF2 FF FF FF FF FF FF FF FF     
   3860 FFFC2EFA FF FF FF FF FF FF FF FF     
   3861 FFFC2F02 FF FF FF FF FF FF FF FF     
   3862 FFFC2F0A FF FF FF FF FF FF FF FF     
   3863 FFFC2F12 FF FF FF FF FF FF FF FF     
   3864 FFFC2F1A FF FF FF FF FF FF FF FF     
   3865 FFFC2F22 FF FF FF FF FF FF FF FF     
   3866 FFFC2F2A FF FF FF FF FF FF FF FF     
   3867 FFFC2F32 FF FF FF FF FF FF FF FF     
   3868 FFFC2F3A FF FF FF FF FF FF FF FF     
   3869 FFFC2F42 FF FF FF FF FF FF FF FF     
   3870 FFFC2F4A FF FF FF FF FF FF FF FF     
   3871 FFFC2F52 FF FF FF FF FF FF FF FF     
   3872 FFFC2F5A FF FF FF FF FF FF FF FF     
   3873 FFFC2F62 FF FF FF FF FF FF FF FF     
   3874 FFFC2F6A FF FF FF FF FF FF FF FF     
   3875 FFFC2F72 FF FF FF FF FF FF FF FF     
   3876 FFFC2F7A FF FF FF FF FF FF FF FF     
   3877 FFFC2F82 FF FF FF FF FF FF FF FF     
   3878 FFFC2F8A FF FF FF FF FF FF FF FF     
   3879 FFFC2F92 FF FF FF FF FF FF FF FF     
   3880 FFFC2F9A FF FF FF FF FF FF FF FF     
   3881 FFFC2FA2 FF FF FF FF FF FF FF FF     
   3882 FFFC2FAA FF FF FF FF FF FF FF FF     
   3883 FFFC2FB2 FF FF FF FF FF FF FF FF     
   3884 FFFC2FBA FF FF FF FF FF FF FF FF     
   3885 FFFC2FC2 FF FF FF FF FF FF FF FF     
   3886 FFFC2FCA FF FF FF FF FF FF FF FF     
   3887 FFFC2FD2 FF FF FF FF FF FF FF FF     
   3888 FFFC2FDA FF FF FF FF FF FF FF FF     
   3889 FFFC2FE2 FF FF FF FF FF FF FF FF     
   3890 FFFC2FEA FF FF FF FF FF FF FF FF     
   3891 FFFC2FF2 FF FF FF FF FF FF FF FF     
   3892 FFFC2FFA FF FF FF FF FF FF FF FF     
   3893 FFFC3002 FF FF FF FF FF FF FF FF     
   3894 FFFC300A FF FF FF FF FF FF FF FF     
   3895 FFFC3012 FF FF FF FF FF FF FF FF     
   3896 FFFC301A FF FF FF FF FF FF FF FF     
   3897 FFFC3022 FF FF FF FF FF FF FF FF     
   3898 FFFC302A FF FF FF FF FF FF FF FF     
   3899 FFFC3032 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 8
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3900 FFFC303A FF FF FF FF FF FF FF FF     
   3901 FFFC3042 FF FF FF FF FF FF FF FF     
   3902 FFFC304A FF FF FF FF FF FF FF FF     
   3903 FFFC3052 FF FF FF FF FF FF FF FF     
   3904 FFFC305A FF FF FF FF FF FF FF FF     
   3905 FFFC3062 FF FF FF FF FF FF FF FF     
   3906 FFFC306A FF FF FF FF FF FF FF FF     
   3907 FFFC3072 FF FF FF FF FF FF FF FF     
   3908 FFFC307A FF FF FF FF FF FF FF FF     
   3909 FFFC3082 FF FF FF FF FF FF FF FF     
   3910 FFFC308A FF FF FF FF FF FF FF FF     
   3911 FFFC3092 FF FF FF FF FF FF FF FF     
   3912 FFFC309A FF FF FF FF FF FF FF FF     
   3913 FFFC30A2 FF FF FF FF FF FF FF FF     
   3914 FFFC30AA FF FF FF FF FF FF FF FF     
   3915 FFFC30B2 FF FF FF FF FF FF FF FF     
   3916 FFFC30BA FF FF FF FF FF FF FF FF     
   3917 FFFC30C2 FF FF FF FF FF FF FF FF     
   3918 FFFC30CA FF FF FF FF FF FF FF FF     
   3919 FFFC30D2 FF FF FF FF FF FF FF FF     
   3920 FFFC30DA FF FF FF FF FF FF FF FF     
   3921 FFFC30E2 FF FF FF FF FF FF FF FF     
   3922 FFFC30EA FF FF FF FF FF FF FF FF     
   3923 FFFC30F2 FF FF FF FF FF FF FF FF     
   3924 FFFC30FA FF FF FF FF FF FF FF FF     
   3925 FFFC3102 FF FF FF FF FF FF FF FF     
   3926 FFFC310A FF FF FF FF FF FF FF FF     
   3927 FFFC3112 FF FF FF FF FF FF FF FF     
   3928 FFFC311A FF FF FF FF FF FF FF FF     
   3929 FFFC3122 FF FF FF FF FF FF FF FF     
   3930 FFFC312A FF FF FF FF FF FF FF FF     
   3931 FFFC3132 FF FF FF FF FF FF FF FF     
   3932 FFFC313A FF FF FF FF FF FF FF FF     
   3933 FFFC3142 FF FF FF FF FF FF FF FF     
   3934 FFFC314A FF FF FF FF FF FF FF FF     
   3935 FFFC3152 FF FF FF FF FF FF FF FF     
   3936 FFFC315A FF FF FF FF FF FF FF FF     
   3937 FFFC3162 FF FF FF FF FF FF FF FF     
   3938 FFFC316A FF FF FF FF FF FF FF FF     
   3939 FFFC3172 FF FF FF FF FF FF FF FF     
   3940 FFFC317A FF FF FF FF FF FF FF FF     
   3941 FFFC3182 FF FF FF FF FF FF FF FF     
   3942 FFFC318A FF FF FF FF FF FF FF FF     
   3943 FFFC3192 FF FF FF FF FF FF FF FF     
   3944 FFFC319A FF FF FF FF FF FF FF FF     
   3945 FFFC31A2 FF FF FF FF FF FF FF FF     
   3946 FFFC31AA FF FF FF FF FF FF FF FF     
   3947 FFFC31B2 FF FF FF FF FF FF FF FF     
   3948 FFFC31BA FF FF FF FF FF FF FF FF     
   3949 FFFC31C2 FF FF FF FF FF FF FF FF     
   3950 FFFC31CA FF FF FF FF FF FF FF FF     
   3951 FFFC31D2 FF FF FF FF FF FF FF FF     
   3952 FFFC31DA FF FF FF FF FF FF FF FF     
   3953 FFFC31E2 FF FF FF FF FF FF FF FF     
   3954 FFFC31EA FF FF FF FF FF FF FF FF     
   3955 FFFC31F2 FF FF FF FF FF FF FF FF     
   3956 FFFC31FA FF FF FF FF FF FF FF FF     
   3957 FFFC3202 FF FF FF FF FF FF FF FF     
   3958 FFFC320A FF FF FF FF FF FF FF FF     
   3959 FFFC3212 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 9
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   3960 FFFC321A FF FF FF FF FF FF FF FF     
   3961 FFFC3222 FF FF FF FF FF FF FF FF     
   3962 FFFC322A FF FF FF FF FF FF FF FF     
   3963 FFFC3232 FF FF FF FF FF FF FF FF     
   3964 FFFC323A FF FF FF FF FF FF FF FF     
   3965 FFFC3242 FF FF FF FF FF FF FF FF     
   3966 FFFC324A FF FF FF FF FF FF FF FF     
   3967 FFFC3252 FF FF FF FF FF FF FF FF     
   3968 FFFC325A FF FF FF FF FF FF FF FF     
   3969 FFFC3262 FF FF FF FF FF FF FF FF     
   3970 FFFC326A FF FF FF FF FF FF FF FF     
   3971 FFFC3272 FF FF FF FF FF FF FF FF     
   3972 FFFC327A FF FF FF FF FF FF FF FF     
   3973 FFFC3282 FF FF FF FF FF FF FF FF     
   3974 FFFC328A FF FF FF FF FF FF FF FF     
   3975 FFFC3292 FF FF FF FF FF FF FF FF     
   3976 FFFC329A FF FF FF FF FF FF FF FF     
   3977 FFFC32A2 FF FF FF FF FF FF FF FF     
   3978 FFFC32AA FF FF FF FF FF FF FF FF     
   3979 FFFC32B2 FF FF FF FF FF FF FF FF     
   3980 FFFC32BA FF FF FF FF FF FF FF FF     
   3981 FFFC32C2 FF FF FF FF FF FF FF FF     
   3982 FFFC32CA FF FF FF FF FF FF FF FF     
   3983 FFFC32D2 FF FF FF FF FF FF FF FF     
   3984 FFFC32DA FF FF FF FF FF FF FF FF     
   3985 FFFC32E2 FF FF FF FF FF FF FF FF     
   3986 FFFC32EA FF FF FF FF FF FF FF FF     
   3987 FFFC32F2 FF FF FF FF FF FF FF FF     
   3988 FFFC32FA FF FF FF FF FF FF FF FF     
   3989 FFFC3302 FF FF FF FF FF FF FF FF     
   3990 FFFC330A FF FF FF FF FF FF FF FF     
   3991 FFFC3312 FF FF FF FF FF FF FF FF     
   3992 FFFC331A FF FF FF FF FF FF FF FF     
   3993 FFFC3322 FF FF FF FF FF FF FF FF     
   3994 FFFC332A FF FF FF FF FF FF FF FF     
   3995 FFFC3332 FF FF FF FF FF FF FF FF     
   3996 FFFC333A FF FF FF FF FF FF FF FF     
   3997 FFFC3342 FF FF FF FF FF FF FF FF     
   3998 FFFC334A FF FF FF FF FF FF FF FF     
   3999 FFFC3352 FF FF FF FF FF FF FF FF     
   4000 FFFC335A FF FF FF FF FF FF FF FF     
   4001 FFFC3362 FF FF FF FF FF FF FF FF     
   4002 FFFC336A FF FF FF FF FF FF FF FF     
   4003 FFFC3372 FF FF FF FF FF FF FF FF     
   4004 FFFC337A FF FF FF FF FF FF FF FF     
   4005 FFFC3382 FF FF FF FF FF FF FF FF     
   4006 FFFC338A FF FF FF FF FF FF FF FF     
   4007 FFFC3392 FF FF FF FF FF FF FF FF     
   4008 FFFC339A FF FF FF FF FF FF FF FF     
   4009 FFFC33A2 FF FF FF FF FF FF FF FF     
   4010 FFFC33AA FF FF FF FF FF FF FF FF     
   4011 FFFC33B2 FF FF FF FF FF FF FF FF     
   4012 FFFC33BA FF FF FF FF FF FF FF FF     
   4013 FFFC33C2 FF FF FF FF FF FF FF FF     
   4014 FFFC33CA FF FF FF FF FF FF FF FF     
   4015 FFFC33D2 FF FF FF FF FF FF FF FF     
   4016 FFFC33DA FF FF FF FF FF FF FF FF     
   4017 FFFC33E2 FF FF FF FF FF FF FF FF     
   4018 FFFC33EA FF FF FF FF FF FF FF FF     
   4019 FFFC33F2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 10
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4020 FFFC33FA FF FF FF FF FF FF FF FF     
   4021 FFFC3402 FF FF FF FF FF FF FF FF     
   4022 FFFC340A FF FF FF FF FF FF FF FF     
   4023 FFFC3412 FF FF FF FF FF FF FF FF     
   4024 FFFC341A FF FF FF FF FF FF FF FF     
   4025 FFFC3422 FF FF FF FF FF FF FF FF     
   4026 FFFC342A FF FF FF FF FF FF FF FF     
   4027 FFFC3432 FF FF FF FF FF FF FF FF     
   4028 FFFC343A FF FF FF FF FF FF FF FF     
   4029 FFFC3442 FF FF FF FF FF FF FF FF     
   4030 FFFC344A FF FF FF FF FF FF FF FF     
   4031 FFFC3452 FF FF FF FF FF FF FF FF     
   4032 FFFC345A FF FF FF FF FF FF FF FF     
   4033 FFFC3462 FF FF FF FF FF FF FF FF     
   4034 FFFC346A FF FF FF FF FF FF FF FF     
   4035 FFFC3472 FF FF FF FF FF FF FF FF     
   4036 FFFC347A FF FF FF FF FF FF FF FF     
   4037 FFFC3482 FF FF FF FF FF FF FF FF     
   4038 FFFC348A FF FF FF FF FF FF FF FF     
   4039 FFFC3492 FF FF FF FF FF FF FF FF     
   4040 FFFC349A FF FF FF FF FF FF FF FF     
   4041 FFFC34A2 FF FF FF FF FF FF FF FF     
   4042 FFFC34AA FF FF FF FF FF FF FF FF     
   4043 FFFC34B2 FF FF FF FF FF FF FF FF     
   4044 FFFC34BA FF FF FF FF FF FF FF FF     
   4045 FFFC34C2 FF FF FF FF FF FF FF FF     
   4046 FFFC34CA FF FF FF FF FF FF FF FF     
   4047 FFFC34D2 FF FF FF FF FF FF FF FF     
   4048 FFFC34DA FF FF FF FF FF FF FF FF     
   4049 FFFC34E2 FF FF FF FF FF FF FF FF     
   4050 FFFC34EA FF FF FF FF FF FF FF FF     
   4051 FFFC34F2 FF FF FF FF FF FF FF FF     
   4052 FFFC34FA FF FF FF FF FF FF FF FF     
   4053 FFFC3502 FF FF FF FF FF FF FF FF     
   4054 FFFC350A FF FF FF FF FF FF FF FF     
   4055 FFFC3512 FF FF FF FF FF FF FF FF     
   4056 FFFC351A FF FF FF FF FF FF FF FF     
   4057 FFFC3522 FF FF FF FF FF FF FF FF     
   4058 FFFC352A FF FF FF FF FF FF FF FF     
   4059 FFFC3532 FF FF FF FF FF FF FF FF     
   4060 FFFC353A FF FF FF FF FF FF FF FF     
   4061 FFFC3542 FF FF FF FF FF FF FF FF     
   4062 FFFC354A FF FF FF FF FF FF FF FF     
   4063 FFFC3552 FF FF FF FF FF FF FF FF     
   4064 FFFC355A FF FF FF FF FF FF FF FF     
   4065 FFFC3562 FF FF FF FF FF FF FF FF     
   4066 FFFC356A FF FF FF FF FF FF FF FF     
   4067 FFFC3572 FF FF FF FF FF FF FF FF     
   4068 FFFC357A FF FF FF FF FF FF FF FF     
   4069 FFFC3582 FF FF FF FF FF FF FF FF     
   4070 FFFC358A FF FF FF FF FF FF FF FF     
   4071 FFFC3592 FF FF FF FF FF FF FF FF     
   4072 FFFC359A FF FF FF FF FF FF FF FF     
   4073 FFFC35A2 FF FF FF FF FF FF FF FF     
   4074 FFFC35AA FF FF FF FF FF FF FF FF     
   4075 FFFC35B2 FF FF FF FF FF FF FF FF     
   4076 FFFC35BA FF FF FF FF FF FF FF FF     
   4077 FFFC35C2 FF FF FF FF FF FF FF FF     
   4078 FFFC35CA FF FF FF FF FF FF FF FF     
   4079 FFFC35D2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 11
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4080 FFFC35DA FF FF FF FF FF FF FF FF     
   4081 FFFC35E2 FF FF FF FF FF FF FF FF     
   4082 FFFC35EA FF FF FF FF FF FF FF FF     
   4083 FFFC35F2 FF FF FF FF FF FF FF FF     
   4084 FFFC35FA FF FF FF FF FF FF FF FF     
   4085 FFFC3602 FF FF FF FF FF FF FF FF     
   4086 FFFC360A FF FF FF FF FF FF FF FF     
   4087 FFFC3612 FF FF FF FF FF FF FF FF     
   4088 FFFC361A FF FF FF FF FF FF FF FF     
   4089 FFFC3622 FF FF FF FF FF FF FF FF     
   4090 FFFC362A FF FF FF FF FF FF FF FF     
   4091 FFFC3632 FF FF FF FF FF FF FF FF     
   4092 FFFC363A FF FF FF FF FF FF FF FF     
   4093 FFFC3642 FF FF FF FF FF FF FF FF     
   4094 FFFC364A FF FF FF FF FF FF FF FF     
   4095 FFFC3652 FF FF FF FF FF FF FF FF     
   4096 FFFC365A FF FF FF FF FF FF FF FF     
   4097 FFFC3662 FF FF FF FF FF FF FF FF     
   4098 FFFC366A FF FF FF FF FF FF FF FF     
   4099 FFFC3672 FF FF FF FF FF FF FF FF     
   4100 FFFC367A FF FF FF FF FF FF FF FF     
   4101 FFFC3682 FF FF FF FF FF FF FF FF     
   4102 FFFC368A FF FF FF FF FF FF FF FF     
   4103 FFFC3692 FF FF FF FF FF FF FF FF     
   4104 FFFC369A FF FF FF FF FF FF FF FF     
   4105 FFFC36A2 FF FF FF FF FF FF FF FF     
   4106 FFFC36AA FF FF FF FF FF FF FF FF     
   4107 FFFC36B2 FF FF FF FF FF FF FF FF     
   4108 FFFC36BA FF FF FF FF FF FF FF FF     
   4109 FFFC36C2 FF FF FF FF FF FF FF FF     
   4110 FFFC36CA FF FF FF FF FF FF FF FF     
   4111 FFFC36D2 FF FF FF FF FF FF FF FF     
   4112 FFFC36DA FF FF FF FF FF FF FF FF     
   4113 FFFC36E2 FF FF FF FF FF FF FF FF     
   4114 FFFC36EA FF FF FF FF FF FF FF FF     
   4115 FFFC36F2 FF FF FF FF FF FF FF FF     
   4116 FFFC36FA FF FF FF FF FF FF FF FF     
   4117 FFFC3702 FF FF FF FF FF FF FF FF     
   4118 FFFC370A FF FF FF FF FF FF FF FF     
   4119 FFFC3712 FF FF FF FF FF FF FF FF     
   4120 FFFC371A FF FF FF FF FF FF FF FF     
   4121 FFFC3722 FF FF FF FF FF FF FF FF     
   4122 FFFC372A FF FF FF FF FF FF FF FF     
   4123 FFFC3732 FF FF FF FF FF FF FF FF     
   4124 FFFC373A FF FF FF FF FF FF FF FF     
   4125 FFFC3742 FF FF FF FF FF FF FF FF     
   4126 FFFC374A FF FF FF FF FF FF FF FF     
   4127 FFFC3752 FF FF FF FF FF FF FF FF     
   4128 FFFC375A FF FF FF FF FF FF FF FF     
   4129 FFFC3762 FF FF FF FF FF FF FF FF     
   4130 FFFC376A FF FF FF FF FF FF FF FF     
   4131 FFFC3772 FF FF FF FF FF FF FF FF     
   4132 FFFC377A FF FF FF FF FF FF FF FF     
   4133 FFFC3782 FF FF FF FF FF FF FF FF     
   4134 FFFC378A FF FF FF FF FF FF FF FF     
   4135 FFFC3792 FF FF FF FF FF FF FF FF     
   4136 FFFC379A FF FF FF FF FF FF FF FF     
   4137 FFFC37A2 FF FF FF FF FF FF FF FF     
   4138 FFFC37AA FF FF FF FF FF FF FF FF     
   4139 FFFC37B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 12
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4140 FFFC37BA FF FF FF FF FF FF FF FF     
   4141 FFFC37C2 FF FF FF FF FF FF FF FF     
   4142 FFFC37CA FF FF FF FF FF FF FF FF     
   4143 FFFC37D2 FF FF FF FF FF FF FF FF     
   4144 FFFC37DA FF FF FF FF FF FF FF FF     
   4145 FFFC37E2 FF FF FF FF FF FF FF FF     
   4146 FFFC37EA FF FF FF FF FF FF FF FF     
   4147 FFFC37F2 FF FF FF FF FF FF FF FF     
   4148 FFFC37FA FF FF FF FF FF FF FF FF     
   4149 FFFC3802 FF FF FF FF FF FF FF FF     
   4150 FFFC380A FF FF FF FF FF FF FF FF     
   4151 FFFC3812 FF FF FF FF FF FF FF FF     
   4152 FFFC381A FF FF FF FF FF FF FF FF     
   4153 FFFC3822 FF FF FF FF FF FF FF FF     
   4154 FFFC382A FF FF FF FF FF FF FF FF     
   4155 FFFC3832 FF FF FF FF FF FF FF FF     
   4156 FFFC383A FF FF FF FF FF FF FF FF     
   4157 FFFC3842 FF FF FF FF FF FF FF FF     
   4158 FFFC384A FF FF FF FF FF FF FF FF     
   4159 FFFC3852 FF FF FF FF FF FF FF FF     
   4160 FFFC385A FF FF FF FF FF FF FF FF     
   4161 FFFC3862 FF FF FF FF FF FF FF FF     
   4162 FFFC386A FF FF FF FF FF FF FF FF     
   4163 FFFC3872 FF FF FF FF FF FF FF FF     
   4164 FFFC387A FF FF FF FF FF FF FF FF     
   4165 FFFC3882 FF FF FF FF FF FF FF FF     
   4166 FFFC388A FF FF FF FF FF FF FF FF     
   4167 FFFC3892 FF FF FF FF FF FF FF FF     
   4168 FFFC389A FF FF FF FF FF FF FF FF     
   4169 FFFC38A2 FF FF FF FF FF FF FF FF     
   4170 FFFC38AA FF FF FF FF FF FF FF FF     
   4171 FFFC38B2 FF FF FF FF FF FF FF FF     
   4172 FFFC38BA FF FF FF FF FF FF FF FF     
   4173 FFFC38C2 FF FF FF FF FF FF FF FF     
   4174 FFFC38CA FF FF FF FF FF FF FF FF     
   4175 FFFC38D2 FF FF FF FF FF FF FF FF     
   4176 FFFC38DA FF FF FF FF FF FF FF FF     
   4177 FFFC38E2 FF FF FF FF FF FF FF FF     
   4178 FFFC38EA FF FF FF FF FF FF FF FF     
   4179 FFFC38F2 FF FF FF FF FF FF FF FF     
   4180 FFFC38FA FF FF FF FF FF FF FF FF     
   4181 FFFC3902 FF FF FF FF FF FF FF FF     
   4182 FFFC390A FF FF FF FF FF FF FF FF     
   4183 FFFC3912 FF FF FF FF FF FF FF FF     
   4184 FFFC391A FF FF FF FF FF FF FF FF     
   4185 FFFC3922 FF FF FF FF FF FF FF FF     
   4186 FFFC392A FF FF FF FF FF FF FF FF     
   4187 FFFC3932 FF FF FF FF FF FF FF FF     
   4188 FFFC393A FF FF FF FF FF FF FF FF     
   4189 FFFC3942 FF FF FF FF FF FF FF FF     
   4190 FFFC394A FF FF FF FF FF FF FF FF     
   4191 FFFC3952 FF FF FF FF FF FF FF FF     
   4192 FFFC395A FF FF FF FF FF FF FF FF     
   4193 FFFC3962 FF FF FF FF FF FF FF FF     
   4194 FFFC396A FF FF FF FF FF FF FF FF     
   4195 FFFC3972 FF FF FF FF FF FF FF FF     
   4196 FFFC397A FF FF FF FF FF FF FF FF     
   4197 FFFC3982 FF FF FF FF FF FF FF FF     
   4198 FFFC398A FF FF FF FF FF FF FF FF     
   4199 FFFC3992 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 13
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4200 FFFC399A FF FF FF FF FF FF FF FF     
   4201 FFFC39A2 FF FF FF FF FF FF FF FF     
   4202 FFFC39AA FF FF FF FF FF FF FF FF     
   4203 FFFC39B2 FF FF FF FF FF FF FF FF     
   4204 FFFC39BA FF FF FF FF FF FF FF FF     
   4205 FFFC39C2 FF FF FF FF FF FF FF FF     
   4206 FFFC39CA FF FF FF FF FF FF FF FF     
   4207 FFFC39D2 FF FF FF FF FF FF FF FF     
   4208 FFFC39DA FF FF FF FF FF FF FF FF     
   4209 FFFC39E2 FF FF FF FF FF FF FF FF     
   4210 FFFC39EA FF FF FF FF FF FF FF FF     
   4211 FFFC39F2 FF FF FF FF FF FF FF FF     
   4212 FFFC39FA FF FF FF FF FF FF FF FF     
   4213 FFFC3A02 FF FF FF FF FF FF FF FF     
   4214 FFFC3A0A FF FF FF FF FF FF FF FF     
   4215 FFFC3A12 FF FF FF FF FF FF FF FF     
   4216 FFFC3A1A FF FF FF FF FF FF FF FF     
   4217 FFFC3A22 FF FF FF FF FF FF FF FF     
   4218 FFFC3A2A FF FF FF FF FF FF FF FF     
   4219 FFFC3A32 FF FF FF FF FF FF FF FF     
   4220 FFFC3A3A FF FF FF FF FF FF FF FF     
   4221 FFFC3A42 FF FF FF FF FF FF FF FF     
   4222 FFFC3A4A FF FF FF FF FF FF FF FF     
   4223 FFFC3A52 FF FF FF FF FF FF FF FF     
   4224 FFFC3A5A FF FF FF FF FF FF FF FF     
   4225 FFFC3A62 FF FF FF FF FF FF FF FF     
   4226 FFFC3A6A FF FF FF FF FF FF FF FF     
   4227 FFFC3A72 FF FF FF FF FF FF FF FF     
   4228 FFFC3A7A FF FF FF FF FF FF FF FF     
   4229 FFFC3A82 FF FF FF FF FF FF FF FF     
   4230 FFFC3A8A FF FF FF FF FF FF FF FF     
   4231 FFFC3A92 FF FF FF FF FF FF FF FF     
   4232 FFFC3A9A FF FF FF FF FF FF FF FF     
   4233 FFFC3AA2 FF FF FF FF FF FF FF FF     
   4234 FFFC3AAA FF FF FF FF FF FF FF FF     
   4235 FFFC3AB2 FF FF FF FF FF FF FF FF     
   4236 FFFC3ABA FF FF FF FF FF FF FF FF     
   4237 FFFC3AC2 FF FF FF FF FF FF FF FF     
   4238 FFFC3ACA FF FF FF FF FF FF FF FF     
   4239 FFFC3AD2 FF FF FF FF FF FF FF FF     
   4240 FFFC3ADA FF FF FF FF FF FF FF FF     
   4241 FFFC3AE2 FF FF FF FF FF FF FF FF     
   4242 FFFC3AEA FF FF FF FF FF FF FF FF     
   4243 FFFC3AF2 FF FF FF FF FF FF FF FF     
   4244 FFFC3AFA FF FF FF FF FF FF FF FF     
   4245 FFFC3B02 FF FF FF FF FF FF FF FF     
   4246 FFFC3B0A FF FF FF FF FF FF FF FF     
   4247 FFFC3B12 FF FF FF FF FF FF FF FF     
   4248 FFFC3B1A FF FF FF FF FF FF FF FF     
   4249 FFFC3B22 FF FF FF FF FF FF FF FF     
   4250 FFFC3B2A FF FF FF FF FF FF FF FF     
   4251 FFFC3B32 FF FF FF FF FF FF FF FF     
   4252 FFFC3B3A FF FF FF FF FF FF FF FF     
   4253 FFFC3B42 FF FF FF FF FF FF FF FF     
   4254 FFFC3B4A FF FF FF FF FF FF FF FF     
   4255 FFFC3B52 FF FF FF FF FF FF FF FF     
   4256 FFFC3B5A FF FF FF FF FF FF FF FF     
   4257 FFFC3B62 FF FF FF FF FF FF FF FF     
   4258 FFFC3B6A FF FF FF FF FF FF FF FF     
   4259 FFFC3B72 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 14
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4260 FFFC3B7A FF FF FF FF FF FF FF FF     
   4261 FFFC3B82 FF FF FF FF FF FF FF FF     
   4262 FFFC3B8A FF FF FF FF FF FF FF FF     
   4263 FFFC3B92 FF FF FF FF FF FF FF FF     
   4264 FFFC3B9A FF FF FF FF FF FF FF FF     
   4265 FFFC3BA2 FF FF FF FF FF FF FF FF     
   4266 FFFC3BAA FF FF FF FF FF FF FF FF     
   4267 FFFC3BB2 FF FF FF FF FF FF FF FF     
   4268 FFFC3BBA FF FF FF FF FF FF FF FF     
   4269 FFFC3BC2 FF FF FF FF FF FF FF FF     
   4270 FFFC3BCA FF FF FF FF FF FF FF FF     
   4271 FFFC3BD2 FF FF FF FF FF FF FF FF     
   4272 FFFC3BDA FF FF FF FF FF FF FF FF     
   4273 FFFC3BE2 FF FF FF FF FF FF FF FF     
   4274 FFFC3BEA FF FF FF FF FF FF FF FF     
   4275 FFFC3BF2 FF FF FF FF FF FF FF FF     
   4276 FFFC3BFA FF FF FF FF FF FF FF FF     
   4277 FFFC3C02 FF FF FF FF FF FF FF FF     
   4278 FFFC3C0A FF FF FF FF FF FF FF FF     
   4279 FFFC3C12 FF FF FF FF FF FF FF FF     
   4280 FFFC3C1A FF FF FF FF FF FF FF FF     
   4281 FFFC3C22 FF FF FF FF FF FF FF FF     
   4282 FFFC3C2A FF FF FF FF FF FF FF FF     
   4283 FFFC3C32 FF FF FF FF FF FF FF FF     
   4284 FFFC3C3A FF FF FF FF FF FF FF FF     
   4285 FFFC3C42 FF FF FF FF FF FF FF FF     
   4286 FFFC3C4A FF FF FF FF FF FF FF FF     
   4287 FFFC3C52 FF FF FF FF FF FF FF FF     
   4288 FFFC3C5A FF FF FF FF FF FF FF FF     
   4289 FFFC3C62 FF FF FF FF FF FF FF FF     
   4290 FFFC3C6A FF FF FF FF FF FF FF FF     
   4291 FFFC3C72 FF FF FF FF FF FF FF FF     
   4292 FFFC3C7A FF FF FF FF FF FF FF FF     
   4293 FFFC3C82 FF FF FF FF FF FF FF FF     
   4294 FFFC3C8A FF FF FF FF FF FF FF FF     
   4295 FFFC3C92 FF FF FF FF FF FF FF FF     
   4296 FFFC3C9A FF FF FF FF FF FF FF FF     
   4297 FFFC3CA2 FF FF FF FF FF FF FF FF     
   4298 FFFC3CAA FF FF FF FF FF FF FF FF     
   4299 FFFC3CB2 FF FF FF FF FF FF FF FF     
   4300 FFFC3CBA FF FF FF FF FF FF FF FF     
   4301 FFFC3CC2 FF FF FF FF FF FF FF FF     
   4302 FFFC3CCA FF FF FF FF FF FF FF FF     
   4303 FFFC3CD2 FF FF FF FF FF FF FF FF     
   4304 FFFC3CDA FF FF FF FF FF FF FF FF     
   4305 FFFC3CE2 FF FF FF FF FF FF FF FF     
   4306 FFFC3CEA FF FF FF FF FF FF FF FF     
   4307 FFFC3CF2 FF FF FF FF FF FF FF FF     
   4308 FFFC3CFA FF FF FF FF FF FF FF FF     
   4309 FFFC3D02 FF FF FF FF FF FF FF FF     
   4310 FFFC3D0A FF FF FF FF FF FF FF FF     
   4311 FFFC3D12 FF FF FF FF FF FF FF FF     
   4312 FFFC3D1A FF FF FF FF FF FF FF FF     
   4313 FFFC3D22 FF FF FF FF FF FF FF FF     
   4314 FFFC3D2A FF FF FF FF FF FF FF FF     
   4315 FFFC3D32 FF FF FF FF FF FF FF FF     
   4316 FFFC3D3A FF FF FF FF FF FF FF FF     
   4317 FFFC3D42 FF FF FF FF FF FF FF FF     
   4318 FFFC3D4A FF FF FF FF FF FF FF FF     
   4319 FFFC3D52 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 15
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4320 FFFC3D5A FF FF FF FF FF FF FF FF     
   4321 FFFC3D62 FF FF FF FF FF FF FF FF     
   4322 FFFC3D6A FF FF FF FF FF FF FF FF     
   4323 FFFC3D72 FF FF FF FF FF FF FF FF     
   4324 FFFC3D7A FF FF FF FF FF FF FF FF     
   4325 FFFC3D82 FF FF FF FF FF FF FF FF     
   4326 FFFC3D8A FF FF FF FF FF FF FF FF     
   4327 FFFC3D92 FF FF FF FF FF FF FF FF     
   4328 FFFC3D9A FF FF FF FF FF FF FF FF     
   4329 FFFC3DA2 FF FF FF FF FF FF FF FF     
   4330 FFFC3DAA FF FF FF FF FF FF FF FF     
   4331 FFFC3DB2 FF FF FF FF FF FF FF FF     
   4332 FFFC3DBA FF FF FF FF FF FF FF FF     
   4333 FFFC3DC2 FF FF FF FF FF FF FF FF     
   4334 FFFC3DCA FF FF FF FF FF FF FF FF     
   4335 FFFC3DD2 FF FF FF FF FF FF FF FF     
   4336 FFFC3DDA FF FF FF FF FF FF FF FF     
   4337 FFFC3DE2 FF FF FF FF FF FF FF FF     
   4338 FFFC3DEA FF FF FF FF FF FF FF FF     
   4339 FFFC3DF2 FF FF FF FF FF FF FF FF     
   4340 FFFC3DFA FF FF FF FF FF FF FF FF     
   4341 FFFC3E02 FF FF FF FF FF FF FF FF     
   4342 FFFC3E0A FF FF FF FF FF FF FF FF     
   4343 FFFC3E12 FF FF FF FF FF FF FF FF     
   4344 FFFC3E1A FF FF FF FF FF FF FF FF     
   4345 FFFC3E22 FF FF FF FF FF FF FF FF     
   4346 FFFC3E2A FF FF FF FF FF FF FF FF     
   4347 FFFC3E32 FF FF FF FF FF FF FF FF     
   4348 FFFC3E3A FF FF FF FF FF FF FF FF     
   4349 FFFC3E42 FF FF FF FF FF FF FF FF     
   4350 FFFC3E4A FF FF FF FF FF FF FF FF     
   4351 FFFC3E52 FF FF FF FF FF FF FF FF     
   4352 FFFC3E5A FF FF FF FF FF FF FF FF     
   4353 FFFC3E62 FF FF FF FF FF FF FF FF     
   4354 FFFC3E6A FF FF FF FF FF FF FF FF     
   4355 FFFC3E72 FF FF FF FF FF FF FF FF     
   4356 FFFC3E7A FF FF FF FF FF FF FF FF     
   4357 FFFC3E82 FF FF FF FF FF FF FF FF     
   4358 FFFC3E8A FF FF FF FF FF FF FF FF     
   4359 FFFC3E92 FF FF FF FF FF FF FF FF     
   4360 FFFC3E9A FF FF FF FF FF FF FF FF     
   4361 FFFC3EA2 FF FF FF FF FF FF FF FF     
   4362 FFFC3EAA FF FF FF FF FF FF FF FF     
   4363 FFFC3EB2 FF FF FF FF FF FF FF FF     
   4364 FFFC3EBA FF FF FF FF FF FF FF FF     
   4365 FFFC3EC2 FF FF FF FF FF FF FF FF     
   4366 FFFC3ECA FF FF FF FF FF FF FF FF     
   4367 FFFC3ED2 FF FF FF FF FF FF FF FF     
   4368 FFFC3EDA FF FF FF FF FF FF FF FF     
   4369 FFFC3EE2 FF FF FF FF FF FF FF FF     
   4370 FFFC3EEA FF FF FF FF FF FF FF FF     
   4371 FFFC3EF2 FF FF FF FF FF FF FF FF     
   4372 FFFC3EFA FF FF FF FF FF FF FF FF     
   4373 FFFC3F02 FF FF FF FF FF FF FF FF     
   4374 FFFC3F0A FF FF FF FF FF FF FF FF     
   4375 FFFC3F12 FF FF FF FF FF FF FF FF     
   4376 FFFC3F1A FF FF FF FF FF FF FF FF     
   4377 FFFC3F22 FF FF FF FF FF FF FF FF     
   4378 FFFC3F2A FF FF FF FF FF FF FF FF     
   4379 FFFC3F32 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 16
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4380 FFFC3F3A FF FF FF FF FF FF FF FF     
   4381 FFFC3F42 FF FF FF FF FF FF FF FF     
   4382 FFFC3F4A FF FF FF FF FF FF FF FF     
   4383 FFFC3F52 FF FF FF FF FF FF FF FF     
   4384 FFFC3F5A FF FF FF FF FF FF FF FF     
   4385 FFFC3F62 FF FF FF FF FF FF FF FF     
   4386 FFFC3F6A FF FF FF FF FF FF FF FF     
   4387 FFFC3F72 FF FF FF FF FF FF FF FF     
   4388 FFFC3F7A FF FF FF FF FF FF FF FF     
   4389 FFFC3F82 FF FF FF FF FF FF FF FF     
   4390 FFFC3F8A FF FF FF FF FF FF FF FF     
   4391 FFFC3F92 FF FF FF FF FF FF FF FF     
   4392 FFFC3F9A FF FF FF FF FF FF FF FF     
   4393 FFFC3FA2 FF FF FF FF FF FF FF FF     
   4394 FFFC3FAA FF FF FF FF FF FF FF FF     
   4395 FFFC3FB2 FF FF FF FF FF FF FF FF     
   4396 FFFC3FBA FF FF FF FF FF FF FF FF     
   4397 FFFC3FC2 FF FF FF FF FF FF FF FF     
   4398 FFFC3FCA FF FF FF FF FF FF FF FF     
   4399 FFFC3FD2 FF FF FF FF FF FF FF FF     
   4400 FFFC3FDA FF FF FF FF FF FF FF FF     
   4401 FFFC3FE2 FF FF FF FF FF FF FF FF     
   4402 FFFC3FEA FF FF FF FF FF FF FF FF     
   4403 FFFC3FF2 FF FF FF FF FF FF FF FF     
   4404 FFFC3FFA FF FF FF FF FF FF FF FF     
   4405 FFFC4002 FF FF FF FF FF FF FF FF     
   4406 FFFC400A FF FF FF FF FF FF FF FF     
   4407 FFFC4012 FF FF FF FF FF FF FF FF     
   4408 FFFC401A FF FF FF FF FF FF FF FF     
   4409 FFFC4022 FF FF FF FF FF FF FF FF     
   4410 FFFC402A FF FF FF FF FF FF FF FF     
   4411 FFFC4032 FF FF FF FF FF FF FF FF     
   4412 FFFC403A FF FF FF FF FF FF FF FF     
   4413 FFFC4042 FF FF FF FF FF FF FF FF     
   4414 FFFC404A FF FF FF FF FF FF FF FF     
   4415 FFFC4052 FF FF FF FF FF FF FF FF     
   4416 FFFC405A FF FF FF FF FF FF FF FF     
   4417 FFFC4062 FF FF FF FF FF FF FF FF     
   4418 FFFC406A FF FF FF FF FF FF FF FF     
   4419 FFFC4072 FF FF FF FF FF FF FF FF     
   4420 FFFC407A FF FF FF FF FF FF FF FF     
   4421 FFFC4082 FF FF FF FF FF FF FF FF     
   4422 FFFC408A FF FF FF FF FF FF FF FF     
   4423 FFFC4092 FF FF FF FF FF FF FF FF     
   4424 FFFC409A FF FF FF FF FF FF FF FF     
   4425 FFFC40A2 FF FF FF FF FF FF FF FF     
   4426 FFFC40AA FF FF FF FF FF FF FF FF     
   4427 FFFC40B2 FF FF FF FF FF FF FF FF     
   4428 FFFC40BA FF FF FF FF FF FF FF FF     
   4429 FFFC40C2 FF FF FF FF FF FF FF FF     
   4430 FFFC40CA FF FF FF FF FF FF FF FF     
   4431 FFFC40D2 FF FF FF FF FF FF FF FF     
   4432 FFFC40DA FF FF FF FF FF FF FF FF     
   4433 FFFC40E2 FF FF FF FF FF FF FF FF     
   4434 FFFC40EA FF FF FF FF FF FF FF FF     
   4435 FFFC40F2 FF FF FF FF FF FF FF FF     
   4436 FFFC40FA FF FF FF FF FF FF FF FF     
   4437 FFFC4102 FF FF FF FF FF FF FF FF     
   4438 FFFC410A FF FF FF FF FF FF FF FF     
   4439 FFFC4112 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 17
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4440 FFFC411A FF FF FF FF FF FF FF FF     
   4441 FFFC4122 FF FF FF FF FF FF FF FF     
   4442 FFFC412A FF FF FF FF FF FF FF FF     
   4443 FFFC4132 FF FF FF FF FF FF FF FF     
   4444 FFFC413A FF FF FF FF FF FF FF FF     
   4445 FFFC4142 FF FF FF FF FF FF FF FF     
   4446 FFFC414A FF FF FF FF FF FF FF FF     
   4447 FFFC4152 FF FF FF FF FF FF FF FF     
   4448 FFFC415A FF FF FF FF FF FF FF FF     
   4449 FFFC4162 FF FF FF FF FF FF FF FF     
   4450 FFFC416A FF FF FF FF FF FF FF FF     
   4451 FFFC4172 FF FF FF FF FF FF FF FF     
   4452 FFFC417A FF FF FF FF FF FF FF FF     
   4453 FFFC4182 FF FF FF FF FF FF FF FF     
   4454 FFFC418A FF FF FF FF FF FF FF FF     
   4455 FFFC4192 FF FF FF FF FF FF FF FF     
   4456 FFFC419A FF FF FF FF FF FF FF FF     
   4457 FFFC41A2 FF FF FF FF FF FF FF FF     
   4458 FFFC41AA FF FF FF FF FF FF FF FF     
   4459 FFFC41B2 FF FF FF FF FF FF FF FF     
   4460 FFFC41BA FF FF FF FF FF FF FF FF     
   4461 FFFC41C2 FF FF FF FF FF FF FF FF     
   4462 FFFC41CA FF FF FF FF FF FF FF FF     
   4463 FFFC41D2 FF FF FF FF FF FF FF FF     
   4464 FFFC41DA FF FF FF FF FF FF FF FF     
   4465 FFFC41E2 FF FF FF FF FF FF FF FF     
   4466 FFFC41EA FF FF FF FF FF FF FF FF     
   4467 FFFC41F2 FF FF FF FF FF FF FF FF     
   4468 FFFC41FA FF FF FF FF FF FF FF FF     
   4469 FFFC4202 FF FF FF FF FF FF FF FF     
   4470 FFFC420A FF FF FF FF FF FF FF FF     
   4471 FFFC4212 FF FF FF FF FF FF FF FF     
   4472 FFFC421A FF FF FF FF FF FF FF FF     
   4473 FFFC4222 FF FF FF FF FF FF FF FF     
   4474 FFFC422A FF FF FF FF FF FF FF FF     
   4475 FFFC4232 FF FF FF FF FF FF FF FF     
   4476 FFFC423A FF FF FF FF FF FF FF FF     
   4477 FFFC4242 FF FF FF FF FF FF FF FF     
   4478 FFFC424A FF FF FF FF FF FF FF FF     
   4479 FFFC4252 FF FF FF FF FF FF FF FF     
   4480 FFFC425A FF FF FF FF FF FF FF FF     
   4481 FFFC4262 FF FF FF FF FF FF FF FF     
   4482 FFFC426A FF FF FF FF FF FF FF FF     
   4483 FFFC4272 FF FF FF FF FF FF FF FF     
   4484 FFFC427A FF FF FF FF FF FF FF FF     
   4485 FFFC4282 FF FF FF FF FF FF FF FF     
   4486 FFFC428A FF FF FF FF FF FF FF FF     
   4487 FFFC4292 FF FF FF FF FF FF FF FF     
   4488 FFFC429A FF FF FF FF FF FF FF FF     
   4489 FFFC42A2 FF FF FF FF FF FF FF FF     
   4490 FFFC42AA FF FF FF FF FF FF FF FF     
   4491 FFFC42B2 FF FF FF FF FF FF FF FF     
   4492 FFFC42BA FF FF FF FF FF FF FF FF     
   4493 FFFC42C2 FF FF FF FF FF FF FF FF     
   4494 FFFC42CA FF FF FF FF FF FF FF FF     
   4495 FFFC42D2 FF FF FF FF FF FF FF FF     
   4496 FFFC42DA FF FF FF FF FF FF FF FF     
   4497 FFFC42E2 FF FF FF FF FF FF FF FF     
   4498 FFFC42EA FF FF FF FF FF FF FF FF     
   4499 FFFC42F2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 18
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4500 FFFC42FA FF FF FF FF FF FF FF FF     
   4501 FFFC4302 FF FF FF FF FF FF FF FF     
   4502 FFFC430A FF FF FF FF FF FF FF FF     
   4503 FFFC4312 FF FF FF FF FF FF FF FF     
   4504 FFFC431A FF FF FF FF FF FF FF FF     
   4505 FFFC4322 FF FF FF FF FF FF FF FF     
   4506 FFFC432A FF FF FF FF FF FF FF FF     
   4507 FFFC4332 FF FF FF FF FF FF FF FF     
   4508 FFFC433A FF FF FF FF FF FF FF FF     
   4509 FFFC4342 FF FF FF FF FF FF FF FF     
   4510 FFFC434A FF FF FF FF FF FF FF FF     
   4511 FFFC4352 FF FF FF FF FF FF FF FF     
   4512 FFFC435A FF FF FF FF FF FF FF FF     
   4513 FFFC4362 FF FF FF FF FF FF FF FF     
   4514 FFFC436A FF FF FF FF FF FF FF FF     
   4515 FFFC4372 FF FF FF FF FF FF FF FF     
   4516 FFFC437A FF FF FF FF FF FF FF FF     
   4517 FFFC4382 FF FF FF FF FF FF FF FF     
   4518 FFFC438A FF FF FF FF FF FF FF FF     
   4519 FFFC4392 FF FF FF FF FF FF FF FF     
   4520 FFFC439A FF FF FF FF FF FF FF FF     
   4521 FFFC43A2 FF FF FF FF FF FF FF FF     
   4522 FFFC43AA FF FF FF FF FF FF FF FF     
   4523 FFFC43B2 FF FF FF FF FF FF FF FF     
   4524 FFFC43BA FF FF FF FF FF FF FF FF     
   4525 FFFC43C2 FF FF FF FF FF FF FF FF     
   4526 FFFC43CA FF FF FF FF FF FF FF FF     
   4527 FFFC43D2 FF FF FF FF FF FF FF FF     
   4528 FFFC43DA FF FF FF FF FF FF FF FF     
   4529 FFFC43E2 FF FF FF FF FF FF FF FF     
   4530 FFFC43EA FF FF FF FF FF FF FF FF     
   4531 FFFC43F2 FF FF FF FF FF FF FF FF     
   4532 FFFC43FA FF FF FF FF FF FF FF FF     
   4533 FFFC4402 FF FF FF FF FF FF FF FF     
   4534 FFFC440A FF FF FF FF FF FF FF FF     
   4535 FFFC4412 FF FF FF FF FF FF FF FF     
   4536 FFFC441A FF FF FF FF FF FF FF FF     
   4537 FFFC4422 FF FF FF FF FF FF FF FF     
   4538 FFFC442A FF FF FF FF FF FF FF FF     
   4539 FFFC4432 FF FF FF FF FF FF FF FF     
   4540 FFFC443A FF FF FF FF FF FF FF FF     
   4541 FFFC4442 FF FF FF FF FF FF FF FF     
   4542 FFFC444A FF FF FF FF FF FF FF FF     
   4543 FFFC4452 FF FF FF FF FF FF FF FF     
   4544 FFFC445A FF FF FF FF FF FF FF FF     
   4545 FFFC4462 FF FF FF FF FF FF FF FF     
   4546 FFFC446A FF FF FF FF FF FF FF FF     
   4547 FFFC4472 FF FF FF FF FF FF FF FF     
   4548 FFFC447A FF FF FF FF FF FF FF FF     
   4549 FFFC4482 FF FF FF FF FF FF FF FF     
   4550 FFFC448A FF FF FF FF FF FF FF FF     
   4551 FFFC4492 FF FF FF FF FF FF FF FF     
   4552 FFFC449A FF FF FF FF FF FF FF FF     
   4553 FFFC44A2 FF FF FF FF FF FF FF FF     
   4554 FFFC44AA FF FF FF FF FF FF FF FF     
   4555 FFFC44B2 FF FF FF FF FF FF FF FF     
   4556 FFFC44BA FF FF FF FF FF FF FF FF     
   4557 FFFC44C2 FF FF FF FF FF FF FF FF     
   4558 FFFC44CA FF FF FF FF FF FF FF FF     
   4559 FFFC44D2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 19
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4560 FFFC44DA FF FF FF FF FF FF FF FF     
   4561 FFFC44E2 FF FF FF FF FF FF FF FF     
   4562 FFFC44EA FF FF FF FF FF FF FF FF     
   4563 FFFC44F2 FF FF FF FF FF FF FF FF     
   4564 FFFC44FA FF FF FF FF FF FF FF FF     
   4565 FFFC4502 FF FF FF FF FF FF FF FF     
   4566 FFFC450A FF FF FF FF FF FF FF FF     
   4567 FFFC4512 FF FF FF FF FF FF FF FF     
   4568 FFFC451A FF FF FF FF FF FF FF FF     
   4569 FFFC4522 FF FF FF FF FF FF FF FF     
   4570 FFFC452A FF FF FF FF FF FF FF FF     
   4571 FFFC4532 FF FF FF FF FF FF FF FF     
   4572 FFFC453A FF FF FF FF FF FF FF FF     
   4573 FFFC4542 FF FF FF FF FF FF FF FF     
   4574 FFFC454A FF FF FF FF FF FF FF FF     
   4575 FFFC4552 FF FF FF FF FF FF FF FF     
   4576 FFFC455A FF FF FF FF FF FF FF FF     
   4577 FFFC4562 FF FF FF FF FF FF FF FF     
   4578 FFFC456A FF FF FF FF FF FF FF FF     
   4579 FFFC4572 FF FF FF FF FF FF FF FF     
   4580 FFFC457A FF FF FF FF FF FF FF FF     
   4581 FFFC4582 FF FF FF FF FF FF FF FF     
   4582 FFFC458A FF FF FF FF FF FF FF FF     
   4583 FFFC4592 FF FF FF FF FF FF FF FF     
   4584 FFFC459A FF FF FF FF FF FF FF FF     
   4585 FFFC45A2 FF FF FF FF FF FF FF FF     
   4586 FFFC45AA FF FF FF FF FF FF FF FF     
   4587 FFFC45B2 FF FF FF FF FF FF FF FF     
   4588 FFFC45BA FF FF FF FF FF FF FF FF     
   4589 FFFC45C2 FF FF FF FF FF FF FF FF     
   4590 FFFC45CA FF FF FF FF FF FF FF FF     
   4591 FFFC45D2 FF FF FF FF FF FF FF FF     
   4592 FFFC45DA FF FF FF FF FF FF FF FF     
   4593 FFFC45E2 FF FF FF FF FF FF FF FF     
   4594 FFFC45EA FF FF FF FF FF FF FF FF     
   4595 FFFC45F2 FF FF FF FF FF FF FF FF     
   4596 FFFC45FA FF FF FF FF FF FF FF FF     
   4597 FFFC4602 FF FF FF FF FF FF FF FF     
   4598 FFFC460A FF FF FF FF FF FF FF FF     
   4599 FFFC4612 FF FF FF FF FF FF FF FF     
   4600 FFFC461A FF FF FF FF FF FF FF FF     
   4601 FFFC4622 FF FF FF FF FF FF FF FF     
   4602 FFFC462A FF FF FF FF FF FF FF FF     
   4603 FFFC4632 FF FF FF FF FF FF FF FF     
   4604 FFFC463A FF FF FF FF FF FF FF FF     
   4605 FFFC4642 FF FF FF FF FF FF FF FF     
   4606 FFFC464A FF FF FF FF FF FF FF FF     
   4607 FFFC4652 FF FF FF FF FF FF FF FF     
   4608 FFFC465A FF FF FF FF FF FF FF FF     
   4609 FFFC4662 FF FF FF FF FF FF FF FF     
   4610 FFFC466A FF FF FF FF FF FF FF FF     
   4611 FFFC4672 FF FF FF FF FF FF FF FF     
   4612 FFFC467A FF FF FF FF FF FF FF FF     
   4613 FFFC4682 FF FF FF FF FF FF FF FF     
   4614 FFFC468A FF FF FF FF FF FF FF FF     
   4615 FFFC4692 FF FF FF FF FF FF FF FF     
   4616 FFFC469A FF FF FF FF FF FF FF FF     
   4617 FFFC46A2 FF FF FF FF FF FF FF FF     
   4618 FFFC46AA FF FF FF FF FF FF FF FF     
   4619 FFFC46B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 20
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4620 FFFC46BA FF FF FF FF FF FF FF FF     
   4621 FFFC46C2 FF FF FF FF FF FF FF FF     
   4622 FFFC46CA FF FF FF FF FF FF FF FF     
   4623 FFFC46D2 FF FF FF FF FF FF FF FF     
   4624 FFFC46DA FF FF FF FF FF FF FF FF     
   4625 FFFC46E2 FF FF FF FF FF FF FF FF     
   4626 FFFC46EA FF FF FF FF FF FF FF FF     
   4627 FFFC46F2 FF FF FF FF FF FF FF FF     
   4628 FFFC46FA FF FF FF FF FF FF FF FF     
   4629 FFFC4702 FF FF FF FF FF FF FF FF     
   4630 FFFC470A FF FF FF FF FF FF FF FF     
   4631 FFFC4712 FF FF FF FF FF FF FF FF     
   4632 FFFC471A FF FF FF FF FF FF FF FF     
   4633 FFFC4722 FF FF FF FF FF FF FF FF     
   4634 FFFC472A FF FF FF FF FF FF FF FF     
   4635 FFFC4732 FF FF FF FF FF FF FF FF     
   4636 FFFC473A FF FF FF FF FF FF FF FF     
   4637 FFFC4742 FF FF FF FF FF FF FF FF     
   4638 FFFC474A FF FF FF FF FF FF FF FF     
   4639 FFFC4752 FF FF FF FF FF FF FF FF     
   4640 FFFC475A FF FF FF FF FF FF FF FF     
   4641 FFFC4762 FF FF FF FF FF FF FF FF     
   4642 FFFC476A FF FF FF FF FF FF FF FF     
   4643 FFFC4772 FF FF FF FF FF FF FF FF     
   4644 FFFC477A FF FF FF FF FF FF FF FF     
   4645 FFFC4782 FF FF FF FF FF FF FF FF     
   4646 FFFC478A FF FF FF FF FF FF FF FF     
   4647 FFFC4792 FF FF FF FF FF FF FF FF     
   4648 FFFC479A FF FF FF FF FF FF FF FF     
   4649 FFFC47A2 FF FF FF FF FF FF FF FF     
   4650 FFFC47AA FF FF FF FF FF FF FF FF     
   4651 FFFC47B2 FF FF FF FF FF FF FF FF     
   4652 FFFC47BA FF FF FF FF FF FF FF FF     
   4653 FFFC47C2 FF FF FF FF FF FF FF FF     
   4654 FFFC47CA FF FF FF FF FF FF FF FF     
   4655 FFFC47D2 FF FF FF FF FF FF FF FF     
   4656 FFFC47DA FF FF FF FF FF FF FF FF     
   4657 FFFC47E2 FF FF FF FF FF FF FF FF     
   4658 FFFC47EA FF FF FF FF FF FF FF FF     
   4659 FFFC47F2 FF FF FF FF FF FF FF FF     
   4660 FFFC47FA FF FF FF FF FF FF FF FF     
   4661 FFFC4802 FF FF FF FF FF FF FF FF     
   4662 FFFC480A FF FF FF FF FF FF FF FF     
   4663 FFFC4812 FF FF FF FF FF FF FF FF     
   4664 FFFC481A FF FF FF FF FF FF FF FF     
   4665 FFFC4822 FF FF FF FF FF FF FF FF     
   4666 FFFC482A FF FF FF FF FF FF FF FF     
   4667 FFFC4832 FF FF FF FF FF FF FF FF     
   4668 FFFC483A FF FF FF FF FF FF FF FF     
   4669 FFFC4842 FF FF FF FF FF FF FF FF     
   4670 FFFC484A FF FF FF FF FF FF FF FF     
   4671 FFFC4852 FF FF FF FF FF FF FF FF     
   4672 FFFC485A FF FF FF FF FF FF FF FF     
   4673 FFFC4862 FF FF FF FF FF FF FF FF     
   4674 FFFC486A FF FF FF FF FF FF FF FF     
   4675 FFFC4872 FF FF FF FF FF FF FF FF     
   4676 FFFC487A FF FF FF FF FF FF FF FF     
   4677 FFFC4882 FF FF FF FF FF FF FF FF     
   4678 FFFC488A FF FF FF FF FF FF FF FF     
   4679 FFFC4892 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 21
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4680 FFFC489A FF FF FF FF FF FF FF FF     
   4681 FFFC48A2 FF FF FF FF FF FF FF FF     
   4682 FFFC48AA FF FF FF FF FF FF FF FF     
   4683 FFFC48B2 FF FF FF FF FF FF FF FF     
   4684 FFFC48BA FF FF FF FF FF FF FF FF     
   4685 FFFC48C2 FF FF FF FF FF FF FF FF     
   4686 FFFC48CA FF FF FF FF FF FF FF FF     
   4687 FFFC48D2 FF FF FF FF FF FF FF FF     
   4688 FFFC48DA FF FF FF FF FF FF FF FF     
   4689 FFFC48E2 FF FF FF FF FF FF FF FF     
   4690 FFFC48EA FF FF FF FF FF FF FF FF     
   4691 FFFC48F2 FF FF FF FF FF FF FF FF     
   4692 FFFC48FA FF FF FF FF FF FF FF FF     
   4693 FFFC4902 FF FF FF FF FF FF FF FF     
   4694 FFFC490A FF FF FF FF FF FF FF FF     
   4695 FFFC4912 FF FF FF FF FF FF FF FF     
   4696 FFFC491A FF FF FF FF FF FF FF FF     
   4697 FFFC4922 FF FF FF FF FF FF FF FF     
   4698 FFFC492A FF FF FF FF FF FF FF FF     
   4699 FFFC4932 FF FF FF FF FF FF FF FF     
   4700 FFFC493A FF FF FF FF FF FF FF FF     
   4701 FFFC4942 FF FF FF FF FF FF FF FF     
   4702 FFFC494A FF FF FF FF FF FF FF FF     
   4703 FFFC4952 FF FF FF FF FF FF FF FF     
   4704 FFFC495A FF FF FF FF FF FF FF FF     
   4705 FFFC4962 FF FF FF FF FF FF FF FF     
   4706 FFFC496A FF FF FF FF FF FF FF FF     
   4707 FFFC4972 FF FF FF FF FF FF FF FF     
   4708 FFFC497A FF FF FF FF FF FF FF FF     
   4709 FFFC4982 FF FF FF FF FF FF FF FF     
   4710 FFFC498A FF FF FF FF FF FF FF FF     
   4711 FFFC4992 FF FF FF FF FF FF FF FF     
   4712 FFFC499A FF FF FF FF FF FF FF FF     
   4713 FFFC49A2 FF FF FF FF FF FF FF FF     
   4714 FFFC49AA FF FF FF FF FF FF FF FF     
   4715 FFFC49B2 FF FF FF FF FF FF FF FF     
   4716 FFFC49BA FF FF FF FF FF FF FF FF     
   4717 FFFC49C2 FF FF FF FF FF FF FF FF     
   4718 FFFC49CA FF FF FF FF FF FF FF FF     
   4719 FFFC49D2 FF FF FF FF FF FF FF FF     
   4720 FFFC49DA FF FF FF FF FF FF FF FF     
   4721 FFFC49E2 FF FF FF FF FF FF FF FF     
   4722 FFFC49EA FF FF FF FF FF FF FF FF     
   4723 FFFC49F2 FF FF FF FF FF FF FF FF     
   4724 FFFC49FA FF FF FF FF FF FF FF FF     
   4725 FFFC4A02 FF FF FF FF FF FF FF FF     
   4726 FFFC4A0A FF FF FF FF FF FF FF FF     
   4727 FFFC4A12 FF FF FF FF FF FF FF FF     
   4728 FFFC4A1A FF FF FF FF FF FF FF FF     
   4729 FFFC4A22 FF FF FF FF FF FF FF FF     
   4730 FFFC4A2A FF FF FF FF FF FF FF FF     
   4731 FFFC4A32 FF FF FF FF FF FF FF FF     
   4732 FFFC4A3A FF FF FF FF FF FF FF FF     
   4733 FFFC4A42 FF FF FF FF FF FF FF FF     
   4734 FFFC4A4A FF FF FF FF FF FF FF FF     
   4735 FFFC4A52 FF FF FF FF FF FF FF FF     
   4736 FFFC4A5A FF FF FF FF FF FF FF FF     
   4737 FFFC4A62 FF FF FF FF FF FF FF FF     
   4738 FFFC4A6A FF FF FF FF FF FF FF FF     
   4739 FFFC4A72 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 22
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4740 FFFC4A7A FF FF FF FF FF FF FF FF     
   4741 FFFC4A82 FF FF FF FF FF FF FF FF     
   4742 FFFC4A8A FF FF FF FF FF FF FF FF     
   4743 FFFC4A92 FF FF FF FF FF FF FF FF     
   4744 FFFC4A9A FF FF FF FF FF FF FF FF     
   4745 FFFC4AA2 FF FF FF FF FF FF FF FF     
   4746 FFFC4AAA FF FF FF FF FF FF FF FF     
   4747 FFFC4AB2 FF FF FF FF FF FF FF FF     
   4748 FFFC4ABA FF FF FF FF FF FF FF FF     
   4749 FFFC4AC2 FF FF FF FF FF FF FF FF     
   4750 FFFC4ACA FF FF FF FF FF FF FF FF     
   4751 FFFC4AD2 FF FF FF FF FF FF FF FF     
   4752 FFFC4ADA FF FF FF FF FF FF FF FF     
   4753 FFFC4AE2 FF FF FF FF FF FF FF FF     
   4754 FFFC4AEA FF FF FF FF FF FF FF FF     
   4755 FFFC4AF2 FF FF FF FF FF FF FF FF     
   4756 FFFC4AFA FF FF FF FF FF FF FF FF     
   4757 FFFC4B02 FF FF FF FF FF FF FF FF     
   4758 FFFC4B0A FF FF FF FF FF FF FF FF     
   4759 FFFC4B12 FF FF FF FF FF FF FF FF     
   4760 FFFC4B1A FF FF FF FF FF FF FF FF     
   4761 FFFC4B22 FF FF FF FF FF FF FF FF     
   4762 FFFC4B2A FF FF FF FF FF FF FF FF     
   4763 FFFC4B32 FF FF FF FF FF FF FF FF     
   4764 FFFC4B3A FF FF FF FF FF FF FF FF     
   4765 FFFC4B42 FF FF FF FF FF FF FF FF     
   4766 FFFC4B4A FF FF FF FF FF FF FF FF     
   4767 FFFC4B52 FF FF FF FF FF FF FF FF     
   4768 FFFC4B5A FF FF FF FF FF FF FF FF     
   4769 FFFC4B62 FF FF FF FF FF FF FF FF     
   4770 FFFC4B6A FF FF FF FF FF FF FF FF     
   4771 FFFC4B72 FF FF FF FF FF FF FF FF     
   4772 FFFC4B7A FF FF FF FF FF FF FF FF     
   4773 FFFC4B82 FF FF FF FF FF FF FF FF     
   4774 FFFC4B8A FF FF FF FF FF FF FF FF     
   4775 FFFC4B92 FF FF FF FF FF FF FF FF     
   4776 FFFC4B9A FF FF FF FF FF FF FF FF     
   4777 FFFC4BA2 FF FF FF FF FF FF FF FF     
   4778 FFFC4BAA FF FF FF FF FF FF FF FF     
   4779 FFFC4BB2 FF FF FF FF FF FF FF FF     
   4780 FFFC4BBA FF FF FF FF FF FF FF FF     
   4781 FFFC4BC2 FF FF FF FF FF FF FF FF     
   4782 FFFC4BCA FF FF FF FF FF FF FF FF     
   4783 FFFC4BD2 FF FF FF FF FF FF FF FF     
   4784 FFFC4BDA FF FF FF FF FF FF FF FF     
   4785 FFFC4BE2 FF FF FF FF FF FF FF FF     
   4786 FFFC4BEA FF FF FF FF FF FF FF FF     
   4787 FFFC4BF2 FF FF FF FF FF FF FF FF     
   4788 FFFC4BFA FF FF FF FF FF FF FF FF     
   4789 FFFC4C02 FF FF FF FF FF FF FF FF     
   4790 FFFC4C0A FF FF FF FF FF FF FF FF     
   4791 FFFC4C12 FF FF FF FF FF FF FF FF     
   4792 FFFC4C1A FF FF FF FF FF FF FF FF     
   4793 FFFC4C22 FF FF FF FF FF FF FF FF     
   4794 FFFC4C2A FF FF FF FF FF FF FF FF     
   4795 FFFC4C32 FF FF FF FF FF FF FF FF     
   4796 FFFC4C3A FF FF FF FF FF FF FF FF     
   4797 FFFC4C42 FF FF FF FF FF FF FF FF     
   4798 FFFC4C4A FF FF FF FF FF FF FF FF     
   4799 FFFC4C52 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 23
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4800 FFFC4C5A FF FF FF FF FF FF FF FF     
   4801 FFFC4C62 FF FF FF FF FF FF FF FF     
   4802 FFFC4C6A FF FF FF FF FF FF FF FF     
   4803 FFFC4C72 FF FF FF FF FF FF FF FF     
   4804 FFFC4C7A FF FF FF FF FF FF FF FF     
   4805 FFFC4C82 FF FF FF FF FF FF FF FF     
   4806 FFFC4C8A FF FF FF FF FF FF FF FF     
   4807 FFFC4C92 FF FF FF FF FF FF FF FF     
   4808 FFFC4C9A FF FF FF FF FF FF FF FF     
   4809 FFFC4CA2 FF FF FF FF FF FF FF FF     
   4810 FFFC4CAA FF FF FF FF FF FF FF FF     
   4811 FFFC4CB2 FF FF FF FF FF FF FF FF     
   4812 FFFC4CBA FF FF FF FF FF FF FF FF     
   4813 FFFC4CC2 FF FF FF FF FF FF FF FF     
   4814 FFFC4CCA FF FF FF FF FF FF FF FF     
   4815 FFFC4CD2 FF FF FF FF FF FF FF FF     
   4816 FFFC4CDA FF FF FF FF FF FF FF FF     
   4817 FFFC4CE2 FF FF FF FF FF FF FF FF     
   4818 FFFC4CEA FF FF FF FF FF FF FF FF     
   4819 FFFC4CF2 FF FF FF FF FF FF FF FF     
   4820 FFFC4CFA FF FF FF FF FF FF FF FF     
   4821 FFFC4D02 FF FF FF FF FF FF FF FF     
   4822 FFFC4D0A FF FF FF FF FF FF FF FF     
   4823 FFFC4D12 FF FF FF FF FF FF FF FF     
   4824 FFFC4D1A FF FF FF FF FF FF FF FF     
   4825 FFFC4D22 FF FF FF FF FF FF FF FF     
   4826 FFFC4D2A FF FF FF FF FF FF FF FF     
   4827 FFFC4D32 FF FF FF FF FF FF FF FF     
   4828 FFFC4D3A FF FF FF FF FF FF FF FF     
   4829 FFFC4D42 FF FF FF FF FF FF FF FF     
   4830 FFFC4D4A FF FF FF FF FF FF FF FF     
   4831 FFFC4D52 FF FF FF FF FF FF FF FF     
   4832 FFFC4D5A FF FF FF FF FF FF FF FF     
   4833 FFFC4D62 FF FF FF FF FF FF FF FF     
   4834 FFFC4D6A FF FF FF FF FF FF FF FF     
   4835 FFFC4D72 FF FF FF FF FF FF FF FF     
   4836 FFFC4D7A FF FF FF FF FF FF FF FF     
   4837 FFFC4D82 FF FF FF FF FF FF FF FF     
   4838 FFFC4D8A FF FF FF FF FF FF FF FF     
   4839 FFFC4D92 FF FF FF FF FF FF FF FF     
   4840 FFFC4D9A FF FF FF FF FF FF FF FF     
   4841 FFFC4DA2 FF FF FF FF FF FF FF FF     
   4842 FFFC4DAA FF FF FF FF FF FF FF FF     
   4843 FFFC4DB2 FF FF FF FF FF FF FF FF     
   4844 FFFC4DBA FF FF FF FF FF FF FF FF     
   4845 FFFC4DC2 FF FF FF FF FF FF FF FF     
   4846 FFFC4DCA FF FF FF FF FF FF FF FF     
   4847 FFFC4DD2 FF FF FF FF FF FF FF FF     
   4848 FFFC4DDA FF FF FF FF FF FF FF FF     
   4849 FFFC4DE2 FF FF FF FF FF FF FF FF     
   4850 FFFC4DEA FF FF FF FF FF FF FF FF     
   4851 FFFC4DF2 FF FF FF FF FF FF FF FF     
   4852 FFFC4DFA FF FF FF FF FF FF FF FF     
   4853 FFFC4E02 FF FF FF FF FF FF FF FF     
   4854 FFFC4E0A FF FF FF FF FF FF FF FF     
   4855 FFFC4E12 FF FF FF FF FF FF FF FF     
   4856 FFFC4E1A FF FF FF FF FF FF FF FF     
   4857 FFFC4E22 FF FF FF FF FF FF FF FF     
   4858 FFFC4E2A FF FF FF FF FF FF FF FF     
   4859 FFFC4E32 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 24
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4860 FFFC4E3A FF FF FF FF FF FF FF FF     
   4861 FFFC4E42 FF FF FF FF FF FF FF FF     
   4862 FFFC4E4A FF FF FF FF FF FF FF FF     
   4863 FFFC4E52 FF FF FF FF FF FF FF FF     
   4864 FFFC4E5A FF FF FF FF FF FF FF FF     
   4865 FFFC4E62 FF FF FF FF FF FF FF FF     
   4866 FFFC4E6A FF FF FF FF FF FF FF FF     
   4867 FFFC4E72 FF FF FF FF FF FF FF FF     
   4868 FFFC4E7A FF FF FF FF FF FF FF FF     
   4869 FFFC4E82 FF FF FF FF FF FF FF FF     
   4870 FFFC4E8A FF FF FF FF FF FF FF FF     
   4871 FFFC4E92 FF FF FF FF FF FF FF FF     
   4872 FFFC4E9A FF FF FF FF FF FF FF FF     
   4873 FFFC4EA2 FF FF FF FF FF FF FF FF     
   4874 FFFC4EAA FF FF FF FF FF FF FF FF     
   4875 FFFC4EB2 FF FF FF FF FF FF FF FF     
   4876 FFFC4EBA FF FF FF FF FF FF FF FF     
   4877 FFFC4EC2 FF FF FF FF FF FF FF FF     
   4878 FFFC4ECA FF FF FF FF FF FF FF FF     
   4879 FFFC4ED2 FF FF FF FF FF FF FF FF     
   4880 FFFC4EDA FF FF FF FF FF FF FF FF     
   4881 FFFC4EE2 FF FF FF FF FF FF FF FF     
   4882 FFFC4EEA FF FF FF FF FF FF FF FF     
   4883 FFFC4EF2 FF FF FF FF FF FF FF FF     
   4884 FFFC4EFA FF FF FF FF FF FF FF FF     
   4885 FFFC4F02 FF FF FF FF FF FF FF FF     
   4886 FFFC4F0A FF FF FF FF FF FF FF FF     
   4887 FFFC4F12 FF FF FF FF FF FF FF FF     
   4888 FFFC4F1A FF FF FF FF FF FF FF FF     
   4889 FFFC4F22 FF FF FF FF FF FF FF FF     
   4890 FFFC4F2A FF FF FF FF FF FF FF FF     
   4891 FFFC4F32 FF FF FF FF FF FF FF FF     
   4892 FFFC4F3A FF FF FF FF FF FF FF FF     
   4893 FFFC4F42 FF FF FF FF FF FF FF FF     
   4894 FFFC4F4A FF FF FF FF FF FF FF FF     
   4895 FFFC4F52 FF FF FF FF FF FF FF FF     
   4896 FFFC4F5A FF FF FF FF FF FF FF FF     
   4897 FFFC4F62 FF FF FF FF FF FF FF FF     
   4898 FFFC4F6A FF FF FF FF FF FF FF FF     
   4899 FFFC4F72 FF FF FF FF FF FF FF FF     
   4900 FFFC4F7A FF FF FF FF FF FF FF FF     
   4901 FFFC4F82 FF FF FF FF FF FF FF FF     
   4902 FFFC4F8A FF FF FF FF FF FF FF FF     
   4903 FFFC4F92 FF FF FF FF FF FF FF FF     
   4904 FFFC4F9A FF FF FF FF FF FF FF FF     
   4905 FFFC4FA2 FF FF FF FF FF FF FF FF     
   4906 FFFC4FAA FF FF FF FF FF FF FF FF     
   4907 FFFC4FB2 FF FF FF FF FF FF FF FF     
   4908 FFFC4FBA FF FF FF FF FF FF FF FF     
   4909 FFFC4FC2 FF FF FF FF FF FF FF FF     
   4910 FFFC4FCA FF FF FF FF FF FF FF FF     
   4911 FFFC4FD2 FF FF FF FF FF FF FF FF     
   4912 FFFC4FDA FF FF FF FF FF FF FF FF     
   4913 FFFC4FE2 FF FF FF FF FF FF FF FF     
   4914 FFFC4FEA FF FF FF FF FF FF FF FF     
   4915 FFFC4FF2 FF FF FF FF FF FF FF FF     
   4916 FFFC4FFA FF FF FF FF FF FF FF FF     
   4917 FFFC5002 FF FF FF FF FF FF FF FF     
   4918 FFFC500A FF FF FF FF FF FF FF FF     
   4919 FFFC5012 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 25
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4920 FFFC501A FF FF FF FF FF FF FF FF     
   4921 FFFC5022 FF FF FF FF FF FF FF FF     
   4922 FFFC502A FF FF FF FF FF FF FF FF     
   4923 FFFC5032 FF FF FF FF FF FF FF FF     
   4924 FFFC503A FF FF FF FF FF FF FF FF     
   4925 FFFC5042 FF FF FF FF FF FF FF FF     
   4926 FFFC504A FF FF FF FF FF FF FF FF     
   4927 FFFC5052 FF FF FF FF FF FF FF FF     
   4928 FFFC505A FF FF FF FF FF FF FF FF     
   4929 FFFC5062 FF FF FF FF FF FF FF FF     
   4930 FFFC506A FF FF FF FF FF FF FF FF     
   4931 FFFC5072 FF FF FF FF FF FF FF FF     
   4932 FFFC507A FF FF FF FF FF FF FF FF     
   4933 FFFC5082 FF FF FF FF FF FF FF FF     
   4934 FFFC508A FF FF FF FF FF FF FF FF     
   4935 FFFC5092 FF FF FF FF FF FF FF FF     
   4936 FFFC509A FF FF FF FF FF FF FF FF     
   4937 FFFC50A2 FF FF FF FF FF FF FF FF     
   4938 FFFC50AA FF FF FF FF FF FF FF FF     
   4939 FFFC50B2 FF FF FF FF FF FF FF FF     
   4940 FFFC50BA FF FF FF FF FF FF FF FF     
   4941 FFFC50C2 FF FF FF FF FF FF FF FF     
   4942 FFFC50CA FF FF FF FF FF FF FF FF     
   4943 FFFC50D2 FF FF FF FF FF FF FF FF     
   4944 FFFC50DA FF FF FF FF FF FF FF FF     
   4945 FFFC50E2 FF FF FF FF FF FF FF FF     
   4946 FFFC50EA FF FF FF FF FF FF FF FF     
   4947 FFFC50F2 FF FF FF FF FF FF FF FF     
   4948 FFFC50FA FF FF FF FF FF FF FF FF     
   4949 FFFC5102 FF FF FF FF FF FF FF FF     
   4950 FFFC510A FF FF FF FF FF FF FF FF     
   4951 FFFC5112 FF FF FF FF FF FF FF FF     
   4952 FFFC511A FF FF FF FF FF FF FF FF     
   4953 FFFC5122 FF FF FF FF FF FF FF FF     
   4954 FFFC512A FF FF FF FF FF FF FF FF     
   4955 FFFC5132 FF FF FF FF FF FF FF FF     
   4956 FFFC513A FF FF FF FF FF FF FF FF     
   4957 FFFC5142 FF FF FF FF FF FF FF FF     
   4958 FFFC514A FF FF FF FF FF FF FF FF     
   4959 FFFC5152 FF FF FF FF FF FF FF FF     
   4960 FFFC515A FF FF FF FF FF FF FF FF     
   4961 FFFC5162 FF FF FF FF FF FF FF FF     
   4962 FFFC516A FF FF FF FF FF FF FF FF     
   4963 FFFC5172 FF FF FF FF FF FF FF FF     
   4964 FFFC517A FF FF FF FF FF FF FF FF     
   4965 FFFC5182 FF FF FF FF FF FF FF FF     
   4966 FFFC518A FF FF FF FF FF FF FF FF     
   4967 FFFC5192 FF FF FF FF FF FF FF FF     
   4968 FFFC519A FF FF FF FF FF FF FF FF     
   4969 FFFC51A2 FF FF FF FF FF FF FF FF     
   4970 FFFC51AA FF FF FF FF FF FF FF FF     
   4971 FFFC51B2 FF FF FF FF FF FF FF FF     
   4972 FFFC51BA FF FF FF FF FF FF FF FF     
   4973 FFFC51C2 FF FF FF FF FF FF FF FF     
   4974 FFFC51CA FF FF FF FF FF FF FF FF     
   4975 FFFC51D2 FF FF FF FF FF FF FF FF     
   4976 FFFC51DA FF FF FF FF FF FF FF FF     
   4977 FFFC51E2 FF FF FF FF FF FF FF FF     
   4978 FFFC51EA FF FF FF FF FF FF FF FF     
   4979 FFFC51F2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 26
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   4980 FFFC51FA FF FF FF FF FF FF FF FF     
   4981 FFFC5202 FF FF FF FF FF FF FF FF     
   4982 FFFC520A FF FF FF FF FF FF FF FF     
   4983 FFFC5212 FF FF FF FF FF FF FF FF     
   4984 FFFC521A FF FF FF FF FF FF FF FF     
   4985 FFFC5222 FF FF FF FF FF FF FF FF     
   4986 FFFC522A FF FF FF FF FF FF FF FF     
   4987 FFFC5232 FF FF FF FF FF FF FF FF     
   4988 FFFC523A FF FF FF FF FF FF FF FF     
   4989 FFFC5242 FF FF FF FF FF FF FF FF     
   4990 FFFC524A FF FF FF FF FF FF FF FF     
   4991 FFFC5252 FF FF FF FF FF FF FF FF     
   4992 FFFC525A FF FF FF FF FF FF FF FF     
   4993 FFFC5262 FF FF FF FF FF FF FF FF     
   4994 FFFC526A FF FF FF FF FF FF FF FF     
   4995 FFFC5272 FF FF FF FF FF FF FF FF     
   4996 FFFC527A FF FF FF FF FF FF FF FF     
   4997 FFFC5282 FF FF FF FF FF FF FF FF     
   4998 FFFC528A FF FF FF FF FF FF FF FF     
   4999 FFFC5292 FF FF FF FF FF FF FF FF     
   5000 FFFC529A FF FF FF FF FF FF FF FF     
   5001 FFFC52A2 FF FF FF FF FF FF FF FF     
   5002 FFFC52AA FF FF FF FF FF FF FF FF     
   5003 FFFC52B2 FF FF FF FF FF FF FF FF     
   5004 FFFC52BA FF FF FF FF FF FF FF FF     
   5005 FFFC52C2 FF FF FF FF FF FF FF FF     
   5006 FFFC52CA FF FF FF FF FF FF FF FF     
   5007 FFFC52D2 FF FF FF FF FF FF FF FF     
   5008 FFFC52DA FF FF FF FF FF FF FF FF     
   5009 FFFC52E2 FF FF FF FF FF FF FF FF     
   5010 FFFC52EA FF FF FF FF FF FF FF FF     
   5011 FFFC52F2 FF FF FF FF FF FF FF FF     
   5012 FFFC52FA FF FF FF FF FF FF FF FF     
   5013 FFFC5302 FF FF FF FF FF FF FF FF     
   5014 FFFC530A FF FF FF FF FF FF FF FF     
   5015 FFFC5312 FF FF FF FF FF FF FF FF     
   5016 FFFC531A FF FF FF FF FF FF FF FF     
   5017 FFFC5322 FF FF FF FF FF FF FF FF     
   5018 FFFC532A FF FF FF FF FF FF FF FF     
   5019 FFFC5332 FF FF FF FF FF FF FF FF     
   5020 FFFC533A FF FF FF FF FF FF FF FF     
   5021 FFFC5342 FF FF FF FF FF FF FF FF     
   5022 FFFC534A FF FF FF FF FF FF FF FF     
   5023 FFFC5352 FF FF FF FF FF FF FF FF     
   5024 FFFC535A FF FF FF FF FF FF FF FF     
   5025 FFFC5362 FF FF FF FF FF FF FF FF     
   5026 FFFC536A FF FF FF FF FF FF FF FF     
   5027 FFFC5372 FF FF FF FF FF FF FF FF     
   5028 FFFC537A FF FF FF FF FF FF FF FF     
   5029 FFFC5382 FF FF FF FF FF FF FF FF     
   5030 FFFC538A FF FF FF FF FF FF FF FF     
   5031 FFFC5392 FF FF FF FF FF FF FF FF     
   5032 FFFC539A FF FF FF FF FF FF FF FF     
   5033 FFFC53A2 FF FF FF FF FF FF FF FF     
   5034 FFFC53AA FF FF FF FF FF FF FF FF     
   5035 FFFC53B2 FF FF FF FF FF FF FF FF     
   5036 FFFC53BA FF FF FF FF FF FF FF FF     
   5037 FFFC53C2 FF FF FF FF FF FF FF FF     
   5038 FFFC53CA FF FF FF FF FF FF FF FF     
   5039 FFFC53D2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 27
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5040 FFFC53DA FF FF FF FF FF FF FF FF     
   5041 FFFC53E2 FF FF FF FF FF FF FF FF     
   5042 FFFC53EA FF FF FF FF FF FF FF FF     
   5043 FFFC53F2 FF FF FF FF FF FF FF FF     
   5044 FFFC53FA FF FF FF FF FF FF FF FF     
   5045 FFFC5402 FF FF FF FF FF FF FF FF     
   5046 FFFC540A FF FF FF FF FF FF FF FF     
   5047 FFFC5412 FF FF FF FF FF FF FF FF     
   5048 FFFC541A FF FF FF FF FF FF FF FF     
   5049 FFFC5422 FF FF FF FF FF FF FF FF     
   5050 FFFC542A FF FF FF FF FF FF FF FF     
   5051 FFFC5432 FF FF FF FF FF FF FF FF     
   5052 FFFC543A FF FF FF FF FF FF FF FF     
   5053 FFFC5442 FF FF FF FF FF FF FF FF     
   5054 FFFC544A FF FF FF FF FF FF FF FF     
   5055 FFFC5452 FF FF FF FF FF FF FF FF     
   5056 FFFC545A FF FF FF FF FF FF FF FF     
   5057 FFFC5462 FF FF FF FF FF FF FF FF     
   5058 FFFC546A FF FF FF FF FF FF FF FF     
   5059 FFFC5472 FF FF FF FF FF FF FF FF     
   5060 FFFC547A FF FF FF FF FF FF FF FF     
   5061 FFFC5482 FF FF FF FF FF FF FF FF     
   5062 FFFC548A FF FF FF FF FF FF FF FF     
   5063 FFFC5492 FF FF FF FF FF FF FF FF     
   5064 FFFC549A FF FF FF FF FF FF FF FF     
   5065 FFFC54A2 FF FF FF FF FF FF FF FF     
   5066 FFFC54AA FF FF FF FF FF FF FF FF     
   5067 FFFC54B2 FF FF FF FF FF FF FF FF     
   5068 FFFC54BA FF FF FF FF FF FF FF FF     
   5069 FFFC54C2 FF FF FF FF FF FF FF FF     
   5070 FFFC54CA FF FF FF FF FF FF FF FF     
   5071 FFFC54D2 FF FF FF FF FF FF FF FF     
   5072 FFFC54DA FF FF FF FF FF FF FF FF     
   5073 FFFC54E2 FF FF FF FF FF FF FF FF     
   5074 FFFC54EA FF FF FF FF FF FF FF FF     
   5075 FFFC54F2 FF FF FF FF FF FF FF FF     
   5076 FFFC54FA FF FF FF FF FF FF FF FF     
   5077 FFFC5502 FF FF FF FF FF FF FF FF     
   5078 FFFC550A FF FF FF FF FF FF FF FF     
   5079 FFFC5512 FF FF FF FF FF FF FF FF     
   5080 FFFC551A FF FF FF FF FF FF FF FF     
   5081 FFFC5522 FF FF FF FF FF FF FF FF     
   5082 FFFC552A FF FF FF FF FF FF FF FF     
   5083 FFFC5532 FF FF FF FF FF FF FF FF     
   5084 FFFC553A FF FF FF FF FF FF FF FF     
   5085 FFFC5542 FF FF FF FF FF FF FF FF     
   5086 FFFC554A FF FF FF FF FF FF FF FF     
   5087 FFFC5552 FF FF FF FF FF FF FF FF     
   5088 FFFC555A FF FF FF FF FF FF FF FF     
   5089 FFFC5562 FF FF FF FF FF FF FF FF     
   5090 FFFC556A FF FF FF FF FF FF FF FF     
   5091 FFFC5572 FF FF FF FF FF FF FF FF     
   5092 FFFC557A FF FF FF FF FF FF FF FF     
   5093 FFFC5582 FF FF FF FF FF FF FF FF     
   5094 FFFC558A FF FF FF FF FF FF FF FF     
   5095 FFFC5592 FF FF FF FF FF FF FF FF     
   5096 FFFC559A FF FF FF FF FF FF FF FF     
   5097 FFFC55A2 FF FF FF FF FF FF FF FF     
   5098 FFFC55AA FF FF FF FF FF FF FF FF     
   5099 FFFC55B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 28
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5100 FFFC55BA FF FF FF FF FF FF FF FF     
   5101 FFFC55C2 FF FF FF FF FF FF FF FF     
   5102 FFFC55CA FF FF FF FF FF FF FF FF     
   5103 FFFC55D2 FF FF FF FF FF FF FF FF     
   5104 FFFC55DA FF FF FF FF FF FF FF FF     
   5105 FFFC55E2 FF FF FF FF FF FF FF FF     
   5106 FFFC55EA FF FF FF FF FF FF FF FF     
   5107 FFFC55F2 FF FF FF FF FF FF FF FF     
   5108 FFFC55FA FF FF FF FF FF FF FF FF     
   5109 FFFC5602 FF FF FF FF FF FF FF FF     
   5110 FFFC560A FF FF FF FF FF FF FF FF     
   5111 FFFC5612 FF FF FF FF FF FF FF FF     
   5112 FFFC561A FF FF FF FF FF FF FF FF     
   5113 FFFC5622 FF FF FF FF FF FF FF FF     
   5114 FFFC562A FF FF FF FF FF FF FF FF     
   5115 FFFC5632 FF FF FF FF FF FF FF FF     
   5116 FFFC563A FF FF FF FF FF FF FF FF     
   5117 FFFC5642 FF FF FF FF FF FF FF FF     
   5118 FFFC564A FF FF FF FF FF FF FF FF     
   5119 FFFC5652 FF FF FF FF FF FF FF FF     
   5120 FFFC565A FF FF FF FF FF FF FF FF     
   5121 FFFC5662 FF FF FF FF FF FF FF FF     
   5122 FFFC566A FF FF FF FF FF FF FF FF     
   5123 FFFC5672 FF FF FF FF FF FF FF FF     
   5124 FFFC567A FF FF FF FF FF FF FF FF     
   5125 FFFC5682 FF FF FF FF FF FF FF FF     
   5126 FFFC568A FF FF FF FF FF FF FF FF     
   5127 FFFC5692 FF FF FF FF FF FF FF FF     
   5128 FFFC569A FF FF FF FF FF FF FF FF     
   5129 FFFC56A2 FF FF FF FF FF FF FF FF     
   5130 FFFC56AA FF FF FF FF FF FF FF FF     
   5131 FFFC56B2 FF FF FF FF FF FF FF FF     
   5132 FFFC56BA FF FF FF FF FF FF FF FF     
   5133 FFFC56C2 FF FF FF FF FF FF FF FF     
   5134 FFFC56CA FF FF FF FF FF FF FF FF     
   5135 FFFC56D2 FF FF FF FF FF FF FF FF     
   5136 FFFC56DA FF FF FF FF FF FF FF FF     
   5137 FFFC56E2 FF FF FF FF FF FF FF FF     
   5138 FFFC56EA FF FF FF FF FF FF FF FF     
   5139 FFFC56F2 FF FF FF FF FF FF FF FF     
   5140 FFFC56FA FF FF FF FF FF FF FF FF     
   5141 FFFC5702 FF FF FF FF FF FF FF FF     
   5142 FFFC570A FF FF FF FF FF FF FF FF     
   5143 FFFC5712 FF FF FF FF FF FF FF FF     
   5144 FFFC571A FF FF FF FF FF FF FF FF     
   5145 FFFC5722 FF FF FF FF FF FF FF FF     
   5146 FFFC572A FF FF FF FF FF FF FF FF     
   5147 FFFC5732 FF FF FF FF FF FF FF FF     
   5148 FFFC573A FF FF FF FF FF FF FF FF     
   5149 FFFC5742 FF FF FF FF FF FF FF FF     
   5150 FFFC574A FF FF FF FF FF FF FF FF     
   5151 FFFC5752 FF FF FF FF FF FF FF FF     
   5152 FFFC575A FF FF FF FF FF FF FF FF     
   5153 FFFC5762 FF FF FF FF FF FF FF FF     
   5154 FFFC576A FF FF FF FF FF FF FF FF     
   5155 FFFC5772 FF FF FF FF FF FF FF FF     
   5156 FFFC577A FF FF FF FF FF FF FF FF     
   5157 FFFC5782 FF FF FF FF FF FF FF FF     
   5158 FFFC578A FF FF FF FF FF FF FF FF     
   5159 FFFC5792 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 29
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5160 FFFC579A FF FF FF FF FF FF FF FF     
   5161 FFFC57A2 FF FF FF FF FF FF FF FF     
   5162 FFFC57AA FF FF FF FF FF FF FF FF     
   5163 FFFC57B2 FF FF FF FF FF FF FF FF     
   5164 FFFC57BA FF FF FF FF FF FF FF FF     
   5165 FFFC57C2 FF FF FF FF FF FF FF FF     
   5166 FFFC57CA FF FF FF FF FF FF FF FF     
   5167 FFFC57D2 FF FF FF FF FF FF FF FF     
   5168 FFFC57DA FF FF FF FF FF FF FF FF     
   5169 FFFC57E2 FF FF FF FF FF FF FF FF     
   5170 FFFC57EA FF FF FF FF FF FF FF FF     
   5171 FFFC57F2 FF FF FF FF FF FF FF FF     
   5172 FFFC57FA FF FF FF FF FF FF FF FF     
   5173 FFFC5802 FF FF FF FF FF FF FF FF     
   5174 FFFC580A FF FF FF FF FF FF FF FF     
   5175 FFFC5812 FF FF FF FF FF FF FF FF     
   5176 FFFC581A FF FF FF FF FF FF FF FF     
   5177 FFFC5822 FF FF FF FF FF FF FF FF     
   5178 FFFC582A FF FF FF FF FF FF FF FF     
   5179 FFFC5832 FF FF FF FF FF FF FF FF     
   5180 FFFC583A FF FF FF FF FF FF FF FF     
   5181 FFFC5842 FF FF FF FF FF FF FF FF     
   5182 FFFC584A FF FF FF FF FF FF FF FF     
   5183 FFFC5852 FF FF FF FF FF FF FF FF     
   5184 FFFC585A FF FF FF FF FF FF FF FF     
   5185 FFFC5862 FF FF FF FF FF FF FF FF     
   5186 FFFC586A FF FF FF FF FF FF FF FF     
   5187 FFFC5872 FF FF FF FF FF FF FF FF     
   5188 FFFC587A FF FF FF FF FF FF FF FF     
   5189 FFFC5882 FF FF FF FF FF FF FF FF     
   5190 FFFC588A FF FF FF FF FF FF FF FF     
   5191 FFFC5892 FF FF FF FF FF FF FF FF     
   5192 FFFC589A FF FF FF FF FF FF FF FF     
   5193 FFFC58A2 FF FF FF FF FF FF FF FF     
   5194 FFFC58AA FF FF FF FF FF FF FF FF     
   5195 FFFC58B2 FF FF FF FF FF FF FF FF     
   5196 FFFC58BA FF FF FF FF FF FF FF FF     
   5197 FFFC58C2 FF FF FF FF FF FF FF FF     
   5198 FFFC58CA FF FF FF FF FF FF FF FF     
   5199 FFFC58D2 FF FF FF FF FF FF FF FF     
   5200 FFFC58DA FF FF FF FF FF FF FF FF     
   5201 FFFC58E2 FF FF FF FF FF FF FF FF     
   5202 FFFC58EA FF FF FF FF FF FF FF FF     
   5203 FFFC58F2 FF FF FF FF FF FF FF FF     
   5204 FFFC58FA FF FF FF FF FF FF FF FF     
   5205 FFFC5902 FF FF FF FF FF FF FF FF     
   5206 FFFC590A FF FF FF FF FF FF FF FF     
   5207 FFFC5912 FF FF FF FF FF FF FF FF     
   5208 FFFC591A FF FF FF FF FF FF FF FF     
   5209 FFFC5922 FF FF FF FF FF FF FF FF     
   5210 FFFC592A FF FF FF FF FF FF FF FF     
   5211 FFFC5932 FF FF FF FF FF FF FF FF     
   5212 FFFC593A FF FF FF FF FF FF FF FF     
   5213 FFFC5942 FF FF FF FF FF FF FF FF     
   5214 FFFC594A FF FF FF FF FF FF FF FF     
   5215 FFFC5952 FF FF FF FF FF FF FF FF     
   5216 FFFC595A FF FF FF FF FF FF FF FF     
   5217 FFFC5962 FF FF FF FF FF FF FF FF     
   5218 FFFC596A FF FF FF FF FF FF FF FF     
   5219 FFFC5972 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 30
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5220 FFFC597A FF FF FF FF FF FF FF FF     
   5221 FFFC5982 FF FF FF FF FF FF FF FF     
   5222 FFFC598A FF FF FF FF FF FF FF FF     
   5223 FFFC5992 FF FF FF FF FF FF FF FF     
   5224 FFFC599A FF FF FF FF FF FF FF FF     
   5225 FFFC59A2 FF FF FF FF FF FF FF FF     
   5226 FFFC59AA FF FF FF FF FF FF FF FF     
   5227 FFFC59B2 FF FF FF FF FF FF FF FF     
   5228 FFFC59BA FF FF FF FF FF FF FF FF     
   5229 FFFC59C2 FF FF FF FF FF FF FF FF     
   5230 FFFC59CA FF FF FF FF FF FF FF FF     
   5231 FFFC59D2 FF FF FF FF FF FF FF FF     
   5232 FFFC59DA FF FF FF FF FF FF FF FF     
   5233 FFFC59E2 FF FF FF FF FF FF FF FF     
   5234 FFFC59EA FF FF FF FF FF FF FF FF     
   5235 FFFC59F2 FF FF FF FF FF FF FF FF     
   5236 FFFC59FA FF FF FF FF FF FF FF FF     
   5237 FFFC5A02 FF FF FF FF FF FF FF FF     
   5238 FFFC5A0A FF FF FF FF FF FF FF FF     
   5239 FFFC5A12 FF FF FF FF FF FF FF FF     
   5240 FFFC5A1A FF FF FF FF FF FF FF FF     
   5241 FFFC5A22 FF FF FF FF FF FF FF FF     
   5242 FFFC5A2A FF FF FF FF FF FF FF FF     
   5243 FFFC5A32 FF FF FF FF FF FF FF FF     
   5244 FFFC5A3A FF FF FF FF FF FF FF FF     
   5245 FFFC5A42 FF FF FF FF FF FF FF FF     
   5246 FFFC5A4A FF FF FF FF FF FF FF FF     
   5247 FFFC5A52 FF FF FF FF FF FF FF FF     
   5248 FFFC5A5A FF FF FF FF FF FF FF FF     
   5249 FFFC5A62 FF FF FF FF FF FF FF FF     
   5250 FFFC5A6A FF FF FF FF FF FF FF FF     
   5251 FFFC5A72 FF FF FF FF FF FF FF FF     
   5252 FFFC5A7A FF FF FF FF FF FF FF FF     
   5253 FFFC5A82 FF FF FF FF FF FF FF FF     
   5254 FFFC5A8A FF FF FF FF FF FF FF FF     
   5255 FFFC5A92 FF FF FF FF FF FF FF FF     
   5256 FFFC5A9A FF FF FF FF FF FF FF FF     
   5257 FFFC5AA2 FF FF FF FF FF FF FF FF     
   5258 FFFC5AAA FF FF FF FF FF FF FF FF     
   5259 FFFC5AB2 FF FF FF FF FF FF FF FF     
   5260 FFFC5ABA FF FF FF FF FF FF FF FF     
   5261 FFFC5AC2 FF FF FF FF FF FF FF FF     
   5262 FFFC5ACA FF FF FF FF FF FF FF FF     
   5263 FFFC5AD2 FF FF FF FF FF FF FF FF     
   5264 FFFC5ADA FF FF FF FF FF FF FF FF     
   5265 FFFC5AE2 FF FF FF FF FF FF FF FF     
   5266 FFFC5AEA FF FF FF FF FF FF FF FF     
   5267 FFFC5AF2 FF FF FF FF FF FF FF FF     
   5268 FFFC5AFA FF FF FF FF FF FF FF FF     
   5269 FFFC5B02 FF FF FF FF FF FF FF FF     
   5270 FFFC5B0A FF FF FF FF FF FF FF FF     
   5271 FFFC5B12 FF FF FF FF FF FF FF FF     
   5272 FFFC5B1A FF FF FF FF FF FF FF FF     
   5273 FFFC5B22 FF FF FF FF FF FF FF FF     
   5274 FFFC5B2A FF FF FF FF FF FF FF FF     
   5275 FFFC5B32 FF FF FF FF FF FF FF FF     
   5276 FFFC5B3A FF FF FF FF FF FF FF FF     
   5277 FFFC5B42 FF FF FF FF FF FF FF FF     
   5278 FFFC5B4A FF FF FF FF FF FF FF FF     
   5279 FFFC5B52 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 31
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5280 FFFC5B5A FF FF FF FF FF FF FF FF     
   5281 FFFC5B62 FF FF FF FF FF FF FF FF     
   5282 FFFC5B6A FF FF FF FF FF FF FF FF     
   5283 FFFC5B72 FF FF FF FF FF FF FF FF     
   5284 FFFC5B7A FF FF FF FF FF FF FF FF     
   5285 FFFC5B82 FF FF FF FF FF FF FF FF     
   5286 FFFC5B8A FF FF FF FF FF FF FF FF     
   5287 FFFC5B92 FF FF FF FF FF FF FF FF     
   5288 FFFC5B9A FF FF FF FF FF FF FF FF     
   5289 FFFC5BA2 FF FF FF FF FF FF FF FF     
   5290 FFFC5BAA FF FF FF FF FF FF FF FF     
   5291 FFFC5BB2 FF FF FF FF FF FF FF FF     
   5292 FFFC5BBA FF FF FF FF FF FF FF FF     
   5293 FFFC5BC2 FF FF FF FF FF FF FF FF     
   5294 FFFC5BCA FF FF FF FF FF FF FF FF     
   5295 FFFC5BD2 FF FF FF FF FF FF FF FF     
   5296 FFFC5BDA FF FF FF FF FF FF FF FF     
   5297 FFFC5BE2 FF FF FF FF FF FF FF FF     
   5298 FFFC5BEA FF FF FF FF FF FF FF FF     
   5299 FFFC5BF2 FF FF FF FF FF FF FF FF     
   5300 FFFC5BFA FF FF FF FF FF FF FF FF     
   5301 FFFC5C02 FF FF FF FF FF FF FF FF     
   5302 FFFC5C0A FF FF FF FF FF FF FF FF     
   5303 FFFC5C12 FF FF FF FF FF FF FF FF     
   5304 FFFC5C1A FF FF FF FF FF FF FF FF     
   5305 FFFC5C22 FF FF FF FF FF FF FF FF     
   5306 FFFC5C2A FF FF FF FF FF FF FF FF     
   5307 FFFC5C32 FF FF FF FF FF FF FF FF     
   5308 FFFC5C3A FF FF FF FF FF FF FF FF     
   5309 FFFC5C42 FF FF FF FF FF FF FF FF     
   5310 FFFC5C4A FF FF FF FF FF FF FF FF     
   5311 FFFC5C52 FF FF FF FF FF FF FF FF     
   5312 FFFC5C5A FF FF FF FF FF FF FF FF     
   5313 FFFC5C62 FF FF FF FF FF FF FF FF     
   5314 FFFC5C6A FF FF FF FF FF FF FF FF     
   5315 FFFC5C72 FF FF FF FF FF FF FF FF     
   5316 FFFC5C7A FF FF FF FF FF FF FF FF     
   5317 FFFC5C82 FF FF FF FF FF FF FF FF     
   5318 FFFC5C8A FF FF FF FF FF FF FF FF     
   5319 FFFC5C92 FF FF FF FF FF FF FF FF     
   5320 FFFC5C9A FF FF FF FF FF FF FF FF     
   5321 FFFC5CA2 FF FF FF FF FF FF FF FF     
   5322 FFFC5CAA FF FF FF FF FF FF FF FF     
   5323 FFFC5CB2 FF FF FF FF FF FF FF FF     
   5324 FFFC5CBA FF FF FF FF FF FF FF FF     
   5325 FFFC5CC2 FF FF FF FF FF FF FF FF     
   5326 FFFC5CCA FF FF FF FF FF FF FF FF     
   5327 FFFC5CD2 FF FF FF FF FF FF FF FF     
   5328 FFFC5CDA FF FF FF FF FF FF FF FF     
   5329 FFFC5CE2 FF FF FF FF FF FF FF FF     
   5330 FFFC5CEA FF FF FF FF FF FF FF FF     
   5331 FFFC5CF2 FF FF FF FF FF FF FF FF     
   5332 FFFC5CFA FF FF FF FF FF FF FF FF     
   5333 FFFC5D02 FF FF FF FF FF FF FF FF     
   5334 FFFC5D0A FF FF FF FF FF FF FF FF     
   5335 FFFC5D12 FF FF FF FF FF FF FF FF     
   5336 FFFC5D1A FF FF FF FF FF FF FF FF     
   5337 FFFC5D22 FF FF FF FF FF FF FF FF     
   5338 FFFC5D2A FF FF FF FF FF FF FF FF     
   5339 FFFC5D32 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 32
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5340 FFFC5D3A FF FF FF FF FF FF FF FF     
   5341 FFFC5D42 FF FF FF FF FF FF FF FF     
   5342 FFFC5D4A FF FF FF FF FF FF FF FF     
   5343 FFFC5D52 FF FF FF FF FF FF FF FF     
   5344 FFFC5D5A FF FF FF FF FF FF FF FF     
   5345 FFFC5D62 FF FF FF FF FF FF FF FF     
   5346 FFFC5D6A FF FF FF FF FF FF FF FF     
   5347 FFFC5D72 FF FF FF FF FF FF FF FF     
   5348 FFFC5D7A FF FF FF FF FF FF FF FF     
   5349 FFFC5D82 FF FF FF FF FF FF FF FF     
   5350 FFFC5D8A FF FF FF FF FF FF FF FF     
   5351 FFFC5D92 FF FF FF FF FF FF FF FF     
   5352 FFFC5D9A FF FF FF FF FF FF FF FF     
   5353 FFFC5DA2 FF FF FF FF FF FF FF FF     
   5354 FFFC5DAA FF FF FF FF FF FF FF FF     
   5355 FFFC5DB2 FF FF FF FF FF FF FF FF     
   5356 FFFC5DBA FF FF FF FF FF FF FF FF     
   5357 FFFC5DC2 FF FF FF FF FF FF FF FF     
   5358 FFFC5DCA FF FF FF FF FF FF FF FF     
   5359 FFFC5DD2 FF FF FF FF FF FF FF FF     
   5360 FFFC5DDA FF FF FF FF FF FF FF FF     
   5361 FFFC5DE2 FF FF FF FF FF FF FF FF     
   5362 FFFC5DEA FF FF FF FF FF FF FF FF     
   5363 FFFC5DF2 FF FF FF FF FF FF FF FF     
   5364 FFFC5DFA FF FF FF FF FF FF FF FF     
   5365 FFFC5E02 FF FF FF FF FF FF FF FF     
   5366 FFFC5E0A FF FF FF FF FF FF FF FF     
   5367 FFFC5E12 FF FF FF FF FF FF FF FF     
   5368 FFFC5E1A FF FF FF FF FF FF FF FF     
   5369 FFFC5E22 FF FF FF FF FF FF FF FF     
   5370 FFFC5E2A FF FF FF FF FF FF FF FF     
   5371 FFFC5E32 FF FF FF FF FF FF FF FF     
   5372 FFFC5E3A FF FF FF FF FF FF FF FF     
   5373 FFFC5E42 FF FF FF FF FF FF FF FF     
   5374 FFFC5E4A FF FF FF FF FF FF FF FF     
   5375 FFFC5E52 FF FF FF FF FF FF FF FF     
   5376 FFFC5E5A FF FF FF FF FF FF FF FF     
   5377 FFFC5E62 FF FF FF FF FF FF FF FF     
   5378 FFFC5E6A FF FF FF FF FF FF FF FF     
   5379 FFFC5E72 FF FF FF FF FF FF FF FF     
   5380 FFFC5E7A FF FF FF FF FF FF FF FF     
   5381 FFFC5E82 FF FF FF FF FF FF FF FF     
   5382 FFFC5E8A FF FF FF FF FF FF FF FF     
   5383 FFFC5E92 FF FF FF FF FF FF FF FF     
   5384 FFFC5E9A FF FF FF FF FF FF FF FF     
   5385 FFFC5EA2 FF FF FF FF FF FF FF FF     
   5386 FFFC5EAA FF FF FF FF FF FF FF FF     
   5387 FFFC5EB2 FF FF FF FF FF FF FF FF     
   5388 FFFC5EBA FF FF FF FF FF FF FF FF     
   5389 FFFC5EC2 FF FF FF FF FF FF FF FF     
   5390 FFFC5ECA FF FF FF FF FF FF FF FF     
   5391 FFFC5ED2 FF FF FF FF FF FF FF FF     
   5392 FFFC5EDA FF FF FF FF FF FF FF FF     
   5393 FFFC5EE2 FF FF FF FF FF FF FF FF     
   5394 FFFC5EEA FF FF FF FF FF FF FF FF     
   5395 FFFC5EF2 FF FF FF FF FF FF FF FF     
   5396 FFFC5EFA FF FF FF FF FF FF FF FF     
   5397 FFFC5F02 FF FF FF FF FF FF FF FF     
   5398 FFFC5F0A FF FF FF FF FF FF FF FF     
   5399 FFFC5F12 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 33
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5400 FFFC5F1A FF FF FF FF FF FF FF FF     
   5401 FFFC5F22 FF FF FF FF FF FF FF FF     
   5402 FFFC5F2A FF FF FF FF FF FF FF FF     
   5403 FFFC5F32 FF FF FF FF FF FF FF FF     
   5404 FFFC5F3A FF FF FF FF FF FF FF FF     
   5405 FFFC5F42 FF FF FF FF FF FF FF FF     
   5406 FFFC5F4A FF FF FF FF FF FF FF FF     
   5407 FFFC5F52 FF FF FF FF FF FF FF FF     
   5408 FFFC5F5A FF FF FF FF FF FF FF FF     
   5409 FFFC5F62 FF FF FF FF FF FF FF FF     
   5410 FFFC5F6A FF FF FF FF FF FF FF FF     
   5411 FFFC5F72 FF FF FF FF FF FF FF FF     
   5412 FFFC5F7A FF FF FF FF FF FF FF FF     
   5413 FFFC5F82 FF FF FF FF FF FF FF FF     
   5414 FFFC5F8A FF FF FF FF FF FF FF FF     
   5415 FFFC5F92 FF FF FF FF FF FF FF FF     
   5416 FFFC5F9A FF FF FF FF FF FF FF FF     
   5417 FFFC5FA2 FF FF FF FF FF FF FF FF     
   5418 FFFC5FAA FF FF FF FF FF FF FF FF     
   5419 FFFC5FB2 FF FF FF FF FF FF FF FF     
   5420 FFFC5FBA FF FF FF FF FF FF FF FF     
   5421 FFFC5FC2 FF FF FF FF FF FF FF FF     
   5422 FFFC5FCA FF FF FF FF FF FF FF FF     
   5423 FFFC5FD2 FF FF FF FF FF FF FF FF     
   5424 FFFC5FDA FF FF FF FF FF FF FF FF     
   5425 FFFC5FE2 FF FF FF FF FF FF FF FF     
   5426 FFFC5FEA FF FF FF FF FF FF FF FF     
   5427 FFFC5FF2 FF FF FF FF FF FF FF FF     
   5428 FFFC5FFA FF FF FF FF FF FF FF FF     
   5429 FFFC6002 FF FF FF FF FF FF FF FF     
   5430 FFFC600A FF FF FF FF FF FF FF FF     
   5431 FFFC6012 FF FF FF FF FF FF FF FF     
   5432 FFFC601A FF FF FF FF FF FF FF FF     
   5433 FFFC6022 FF FF FF FF FF FF FF FF     
   5434 FFFC602A FF FF FF FF FF FF FF FF     
   5435 FFFC6032 FF FF FF FF FF FF FF FF     
   5436 FFFC603A FF FF FF FF FF FF FF FF     
   5437 FFFC6042 FF FF FF FF FF FF FF FF     
   5438 FFFC604A FF FF FF FF FF FF FF FF     
   5439 FFFC6052 FF FF FF FF FF FF FF FF     
   5440 FFFC605A FF FF FF FF FF FF FF FF     
   5441 FFFC6062 FF FF FF FF FF FF FF FF     
   5442 FFFC606A FF FF FF FF FF FF FF FF     
   5443 FFFC6072 FF FF FF FF FF FF FF FF     
   5444 FFFC607A FF FF FF FF FF FF FF FF     
   5445 FFFC6082 FF FF FF FF FF FF FF FF     
   5446 FFFC608A FF FF FF FF FF FF FF FF     
   5447 FFFC6092 FF FF FF FF FF FF FF FF     
   5448 FFFC609A FF FF FF FF FF FF FF FF     
   5449 FFFC60A2 FF FF FF FF FF FF FF FF     
   5450 FFFC60AA FF FF FF FF FF FF FF FF     
   5451 FFFC60B2 FF FF FF FF FF FF FF FF     
   5452 FFFC60BA FF FF FF FF FF FF FF FF     
   5453 FFFC60C2 FF FF FF FF FF FF FF FF     
   5454 FFFC60CA FF FF FF FF FF FF FF FF     
   5455 FFFC60D2 FF FF FF FF FF FF FF FF     
   5456 FFFC60DA FF FF FF FF FF FF FF FF     
   5457 FFFC60E2 FF FF FF FF FF FF FF FF     
   5458 FFFC60EA FF FF FF FF FF FF FF FF     
   5459 FFFC60F2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 34
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5460 FFFC60FA FF FF FF FF FF FF FF FF     
   5461 FFFC6102 FF FF FF FF FF FF FF FF     
   5462 FFFC610A FF FF FF FF FF FF FF FF     
   5463 FFFC6112 FF FF FF FF FF FF FF FF     
   5464 FFFC611A FF FF FF FF FF FF FF FF     
   5465 FFFC6122 FF FF FF FF FF FF FF FF     
   5466 FFFC612A FF FF FF FF FF FF FF FF     
   5467 FFFC6132 FF FF FF FF FF FF FF FF     
   5468 FFFC613A FF FF FF FF FF FF FF FF     
   5469 FFFC6142 FF FF FF FF FF FF FF FF     
   5470 FFFC614A FF FF FF FF FF FF FF FF     
   5471 FFFC6152 FF FF FF FF FF FF FF FF     
   5472 FFFC615A FF FF FF FF FF FF FF FF     
   5473 FFFC6162 FF FF FF FF FF FF FF FF     
   5474 FFFC616A FF FF FF FF FF FF FF FF     
   5475 FFFC6172 FF FF FF FF FF FF FF FF     
   5476 FFFC617A FF FF FF FF FF FF FF FF     
   5477 FFFC6182 FF FF FF FF FF FF FF FF     
   5478 FFFC618A FF FF FF FF FF FF FF FF     
   5479 FFFC6192 FF FF FF FF FF FF FF FF     
   5480 FFFC619A FF FF FF FF FF FF FF FF     
   5481 FFFC61A2 FF FF FF FF FF FF FF FF     
   5482 FFFC61AA FF FF FF FF FF FF FF FF     
   5483 FFFC61B2 FF FF FF FF FF FF FF FF     
   5484 FFFC61BA FF FF FF FF FF FF FF FF     
   5485 FFFC61C2 FF FF FF FF FF FF FF FF     
   5486 FFFC61CA FF FF FF FF FF FF FF FF     
   5487 FFFC61D2 FF FF FF FF FF FF FF FF     
   5488 FFFC61DA FF FF FF FF FF FF FF FF     
   5489 FFFC61E2 FF FF FF FF FF FF FF FF     
   5490 FFFC61EA FF FF FF FF FF FF FF FF     
   5491 FFFC61F2 FF FF FF FF FF FF FF FF     
   5492 FFFC61FA FF FF FF FF FF FF FF FF     
   5493 FFFC6202 FF FF FF FF FF FF FF FF     
   5494 FFFC620A FF FF FF FF FF FF FF FF     
   5495 FFFC6212 FF FF FF FF FF FF FF FF     
   5496 FFFC621A FF FF FF FF FF FF FF FF     
   5497 FFFC6222 FF FF FF FF FF FF FF FF     
   5498 FFFC622A FF FF FF FF FF FF FF FF     
   5499 FFFC6232 FF FF FF FF FF FF FF FF     
   5500 FFFC623A FF FF FF FF FF FF FF FF     
   5501 FFFC6242 FF FF FF FF FF FF FF FF     
   5502 FFFC624A FF FF FF FF FF FF FF FF     
   5503 FFFC6252 FF FF FF FF FF FF FF FF     
   5504 FFFC625A FF FF FF FF FF FF FF FF     
   5505 FFFC6262 FF FF FF FF FF FF FF FF     
   5506 FFFC626A FF FF FF FF FF FF FF FF     
   5507 FFFC6272 FF FF FF FF FF FF FF FF     
   5508 FFFC627A FF FF FF FF FF FF FF FF     
   5509 FFFC6282 FF FF FF FF FF FF FF FF     
   5510 FFFC628A FF FF FF FF FF FF FF FF     
   5511 FFFC6292 FF FF FF FF FF FF FF FF     
   5512 FFFC629A FF FF FF FF FF FF FF FF     
   5513 FFFC62A2 FF FF FF FF FF FF FF FF     
   5514 FFFC62AA FF FF FF FF FF FF FF FF     
   5515 FFFC62B2 FF FF FF FF FF FF FF FF     
   5516 FFFC62BA FF FF FF FF FF FF FF FF     
   5517 FFFC62C2 FF FF FF FF FF FF FF FF     
   5518 FFFC62CA FF FF FF FF FF FF FF FF     
   5519 FFFC62D2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 35
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5520 FFFC62DA FF FF FF FF FF FF FF FF     
   5521 FFFC62E2 FF FF FF FF FF FF FF FF     
   5522 FFFC62EA FF FF FF FF FF FF FF FF     
   5523 FFFC62F2 FF FF FF FF FF FF FF FF     
   5524 FFFC62FA FF FF FF FF FF FF FF FF     
   5525 FFFC6302 FF FF FF FF FF FF FF FF     
   5526 FFFC630A FF FF FF FF FF FF FF FF     
   5527 FFFC6312 FF FF FF FF FF FF FF FF     
   5528 FFFC631A FF FF FF FF FF FF FF FF     
   5529 FFFC6322 FF FF FF FF FF FF FF FF     
   5530 FFFC632A FF FF FF FF FF FF FF FF     
   5531 FFFC6332 FF FF FF FF FF FF FF FF     
   5532 FFFC633A FF FF FF FF FF FF FF FF     
   5533 FFFC6342 FF FF FF FF FF FF FF FF     
   5534 FFFC634A FF FF FF FF FF FF FF FF     
   5535 FFFC6352 FF FF FF FF FF FF FF FF     
   5536 FFFC635A FF FF FF FF FF FF FF FF     
   5537 FFFC6362 FF FF FF FF FF FF FF FF     
   5538 FFFC636A FF FF FF FF FF FF FF FF     
   5539 FFFC6372 FF FF FF FF FF FF FF FF     
   5540 FFFC637A FF FF FF FF FF FF FF FF     
   5541 FFFC6382 FF FF FF FF FF FF FF FF     
   5542 FFFC638A FF FF FF FF FF FF FF FF     
   5543 FFFC6392 FF FF FF FF FF FF FF FF     
   5544 FFFC639A FF FF FF FF FF FF FF FF     
   5545 FFFC63A2 FF FF FF FF FF FF FF FF     
   5546 FFFC63AA FF FF FF FF FF FF FF FF     
   5547 FFFC63B2 FF FF FF FF FF FF FF FF     
   5548 FFFC63BA FF FF FF FF FF FF FF FF     
   5549 FFFC63C2 FF FF FF FF FF FF FF FF     
   5550 FFFC63CA FF FF FF FF FF FF FF FF     
   5551 FFFC63D2 FF FF FF FF FF FF FF FF     
   5552 FFFC63DA FF FF FF FF FF FF FF FF     
   5553 FFFC63E2 FF FF FF FF FF FF FF FF     
   5554 FFFC63EA FF FF FF FF FF FF FF FF     
   5555 FFFC63F2 FF FF FF FF FF FF FF FF     
   5556 FFFC63FA FF FF FF FF FF FF FF FF     
   5557 FFFC6402 FF FF FF FF FF FF FF FF     
   5558 FFFC640A FF FF FF FF FF FF FF FF     
   5559 FFFC6412 FF FF FF FF FF FF FF FF     
   5560 FFFC641A FF FF FF FF FF FF FF FF     
   5561 FFFC6422 FF FF FF FF FF FF FF FF     
   5562 FFFC642A FF FF FF FF FF FF FF FF     
   5563 FFFC6432 FF FF FF FF FF FF FF FF     
   5564 FFFC643A FF FF FF FF FF FF FF FF     
   5565 FFFC6442 FF FF FF FF FF FF FF FF     
   5566 FFFC644A FF FF FF FF FF FF FF FF     
   5567 FFFC6452 FF FF FF FF FF FF FF FF     
   5568 FFFC645A FF FF FF FF FF FF FF FF     
   5569 FFFC6462 FF FF FF FF FF FF FF FF     
   5570 FFFC646A FF FF FF FF FF FF FF FF     
   5571 FFFC6472 FF FF FF FF FF FF FF FF     
   5572 FFFC647A FF FF FF FF FF FF FF FF     
   5573 FFFC6482 FF FF FF FF FF FF FF FF     
   5574 FFFC648A FF FF FF FF FF FF FF FF     
   5575 FFFC6492 FF FF FF FF FF FF FF FF     
   5576 FFFC649A FF FF FF FF FF FF FF FF     
   5577 FFFC64A2 FF FF FF FF FF FF FF FF     
   5578 FFFC64AA FF FF FF FF FF FF FF FF     
   5579 FFFC64B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 36
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5580 FFFC64BA FF FF FF FF FF FF FF FF     
   5581 FFFC64C2 FF FF FF FF FF FF FF FF     
   5582 FFFC64CA FF FF FF FF FF FF FF FF     
   5583 FFFC64D2 FF FF FF FF FF FF FF FF     
   5584 FFFC64DA FF FF FF FF FF FF FF FF     
   5585 FFFC64E2 FF FF FF FF FF FF FF FF     
   5586 FFFC64EA FF FF FF FF FF FF FF FF     
   5587 FFFC64F2 FF FF FF FF FF FF FF FF     
   5588 FFFC64FA FF FF FF FF FF FF FF FF     
   5589 FFFC6502 FF FF FF FF FF FF FF FF     
   5590 FFFC650A FF FF FF FF FF FF FF FF     
   5591 FFFC6512 FF FF FF FF FF FF FF FF     
   5592 FFFC651A FF FF FF FF FF FF FF FF     
   5593 FFFC6522 FF FF FF FF FF FF FF FF     
   5594 FFFC652A FF FF FF FF FF FF FF FF     
   5595 FFFC6532 FF FF FF FF FF FF FF FF     
   5596 FFFC653A FF FF FF FF FF FF FF FF     
   5597 FFFC6542 FF FF FF FF FF FF FF FF     
   5598 FFFC654A FF FF FF FF FF FF FF FF     
   5599 FFFC6552 FF FF FF FF FF FF FF FF     
   5600 FFFC655A FF FF FF FF FF FF FF FF     
   5601 FFFC6562 FF FF FF FF FF FF FF FF     
   5602 FFFC656A FF FF FF FF FF FF FF FF     
   5603 FFFC6572 FF FF FF FF FF FF FF FF     
   5604 FFFC657A FF FF FF FF FF FF FF FF     
   5605 FFFC6582 FF FF FF FF FF FF FF FF     
   5606 FFFC658A FF FF FF FF FF FF FF FF     
   5607 FFFC6592 FF FF FF FF FF FF FF FF     
   5608 FFFC659A FF FF FF FF FF FF FF FF     
   5609 FFFC65A2 FF FF FF FF FF FF FF FF     
   5610 FFFC65AA FF FF FF FF FF FF FF FF     
   5611 FFFC65B2 FF FF FF FF FF FF FF FF     
   5612 FFFC65BA FF FF FF FF FF FF FF FF     
   5613 FFFC65C2 FF FF FF FF FF FF FF FF     
   5614 FFFC65CA FF FF FF FF FF FF FF FF     
   5615 FFFC65D2 FF FF FF FF FF FF FF FF     
   5616 FFFC65DA FF FF FF FF FF FF FF FF     
   5617 FFFC65E2 FF FF FF FF FF FF FF FF     
   5618 FFFC65EA FF FF FF FF FF FF FF FF     
   5619 FFFC65F2 FF FF FF FF FF FF FF FF     
   5620 FFFC65FA FF FF FF FF FF FF FF FF     
   5621 FFFC6602 FF FF FF FF FF FF FF FF     
   5622 FFFC660A FF FF FF FF FF FF FF FF     
   5623 FFFC6612 FF FF FF FF FF FF FF FF     
   5624 FFFC661A FF FF FF FF FF FF FF FF     
   5625 FFFC6622 FF FF FF FF FF FF FF FF     
   5626 FFFC662A FF FF FF FF FF FF FF FF     
   5627 FFFC6632 FF FF FF FF FF FF FF FF     
   5628 FFFC663A FF FF FF FF FF FF FF FF     
   5629 FFFC6642 FF FF FF FF FF FF FF FF     
   5630 FFFC664A FF FF FF FF FF FF FF FF     
   5631 FFFC6652 FF FF FF FF FF FF FF FF     
   5632 FFFC665A FF FF FF FF FF FF FF FF     
   5633 FFFC6662 FF FF FF FF FF FF FF FF     
   5634 FFFC666A FF FF FF FF FF FF FF FF     
   5635 FFFC6672 FF FF FF FF FF FF FF FF     
   5636 FFFC667A FF FF FF FF FF FF FF FF     
   5637 FFFC6682 FF FF FF FF FF FF FF FF     
   5638 FFFC668A FF FF FF FF FF FF FF FF     
   5639 FFFC6692 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 37
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5640 FFFC669A FF FF FF FF FF FF FF FF     
   5641 FFFC66A2 FF FF FF FF FF FF FF FF     
   5642 FFFC66AA FF FF FF FF FF FF FF FF     
   5643 FFFC66B2 FF FF FF FF FF FF FF FF     
   5644 FFFC66BA FF FF FF FF FF FF FF FF     
   5645 FFFC66C2 FF FF FF FF FF FF FF FF     
   5646 FFFC66CA FF FF FF FF FF FF FF FF     
   5647 FFFC66D2 FF FF FF FF FF FF FF FF     
   5648 FFFC66DA FF FF FF FF FF FF FF FF     
   5649 FFFC66E2 FF FF FF FF FF FF FF FF     
   5650 FFFC66EA FF FF FF FF FF FF FF FF     
   5651 FFFC66F2 FF FF FF FF FF FF FF FF     
   5652 FFFC66FA FF FF FF FF FF FF FF FF     
   5653 FFFC6702 FF FF FF FF FF FF FF FF     
   5654 FFFC670A FF FF FF FF FF FF FF FF     
   5655 FFFC6712 FF FF FF FF FF FF FF FF     
   5656 FFFC671A FF FF FF FF FF FF FF FF     
   5657 FFFC6722 FF FF FF FF FF FF FF FF     
   5658 FFFC672A FF FF FF FF FF FF FF FF     
   5659 FFFC6732 FF FF FF FF FF FF FF FF     
   5660 FFFC673A FF FF FF FF FF FF FF FF     
   5661 FFFC6742 FF FF FF FF FF FF FF FF     
   5662 FFFC674A FF FF FF FF FF FF FF FF     
   5663 FFFC6752 FF FF FF FF FF FF FF FF     
   5664 FFFC675A FF FF FF FF FF FF FF FF     
   5665 FFFC6762 FF FF FF FF FF FF FF FF     
   5666 FFFC676A FF FF FF FF FF FF FF FF     
   5667 FFFC6772 FF FF FF FF FF FF FF FF     
   5668 FFFC677A FF FF FF FF FF FF FF FF     
   5669 FFFC6782 FF FF FF FF FF FF FF FF     
   5670 FFFC678A FF FF FF FF FF FF FF FF     
   5671 FFFC6792 FF FF FF FF FF FF FF FF     
   5672 FFFC679A FF FF FF FF FF FF FF FF     
   5673 FFFC67A2 FF FF FF FF FF FF FF FF     
   5674 FFFC67AA FF FF FF FF FF FF FF FF     
   5675 FFFC67B2 FF FF FF FF FF FF FF FF     
   5676 FFFC67BA FF FF FF FF FF FF FF FF     
   5677 FFFC67C2 FF FF FF FF FF FF FF FF     
   5678 FFFC67CA FF FF FF FF FF FF FF FF     
   5679 FFFC67D2 FF FF FF FF FF FF FF FF     
   5680 FFFC67DA FF FF FF FF FF FF FF FF     
   5681 FFFC67E2 FF FF FF FF FF FF FF FF     
   5682 FFFC67EA FF FF FF FF FF FF FF FF     
   5683 FFFC67F2 FF FF FF FF FF FF FF FF     
   5684 FFFC67FA FF FF FF FF FF FF FF FF     
   5685 FFFC6802 FF FF FF FF FF FF FF FF     
   5686 FFFC680A FF FF FF FF FF FF FF FF     
   5687 FFFC6812 FF FF FF FF FF FF FF FF     
   5688 FFFC681A FF FF FF FF FF FF FF FF     
   5689 FFFC6822 FF FF FF FF FF FF FF FF     
   5690 FFFC682A FF FF FF FF FF FF FF FF     
   5691 FFFC6832 FF FF FF FF FF FF FF FF     
   5692 FFFC683A FF FF FF FF FF FF FF FF     
   5693 FFFC6842 FF FF FF FF FF FF FF FF     
   5694 FFFC684A FF FF FF FF FF FF FF FF     
   5695 FFFC6852 FF FF FF FF FF FF FF FF     
   5696 FFFC685A FF FF FF FF FF FF FF FF     
   5697 FFFC6862 FF FF FF FF FF FF FF FF     
   5698 FFFC686A FF FF FF FF FF FF FF FF     
   5699 FFFC6872 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 38
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5700 FFFC687A FF FF FF FF FF FF FF FF     
   5701 FFFC6882 FF FF FF FF FF FF FF FF     
   5702 FFFC688A FF FF FF FF FF FF FF FF     
   5703 FFFC6892 FF FF FF FF FF FF FF FF     
   5704 FFFC689A FF FF FF FF FF FF FF FF     
   5705 FFFC68A2 FF FF FF FF FF FF FF FF     
   5706 FFFC68AA FF FF FF FF FF FF FF FF     
   5707 FFFC68B2 FF FF FF FF FF FF FF FF     
   5708 FFFC68BA FF FF FF FF FF FF FF FF     
   5709 FFFC68C2 FF FF FF FF FF FF FF FF     
   5710 FFFC68CA FF FF FF FF FF FF FF FF     
   5711 FFFC68D2 FF FF FF FF FF FF FF FF     
   5712 FFFC68DA FF FF FF FF FF FF FF FF     
   5713 FFFC68E2 FF FF FF FF FF FF FF FF     
   5714 FFFC68EA FF FF FF FF FF FF FF FF     
   5715 FFFC68F2 FF FF FF FF FF FF FF FF     
   5716 FFFC68FA FF FF FF FF FF FF FF FF     
   5717 FFFC6902 FF FF FF FF FF FF FF FF     
   5718 FFFC690A FF FF FF FF FF FF FF FF     
   5719 FFFC6912 FF FF FF FF FF FF FF FF     
   5720 FFFC691A FF FF FF FF FF FF FF FF     
   5721 FFFC6922 FF FF FF FF FF FF FF FF     
   5722 FFFC692A FF FF FF FF FF FF FF FF     
   5723 FFFC6932 FF FF FF FF FF FF FF FF     
   5724 FFFC693A FF FF FF FF FF FF FF FF     
   5725 FFFC6942 FF FF FF FF FF FF FF FF     
   5726 FFFC694A FF FF FF FF FF FF FF FF     
   5727 FFFC6952 FF FF FF FF FF FF FF FF     
   5728 FFFC695A FF FF FF FF FF FF FF FF     
   5729 FFFC6962 FF FF FF FF FF FF FF FF     
   5730 FFFC696A FF FF FF FF FF FF FF FF     
   5731 FFFC6972 FF FF FF FF FF FF FF FF     
   5732 FFFC697A FF FF FF FF FF FF FF FF     
   5733 FFFC6982 FF FF FF FF FF FF FF FF     
   5734 FFFC698A FF FF FF FF FF FF FF FF     
   5735 FFFC6992 FF FF FF FF FF FF FF FF     
   5736 FFFC699A FF FF FF FF FF FF FF FF     
   5737 FFFC69A2 FF FF FF FF FF FF FF FF     
   5738 FFFC69AA FF FF FF FF FF FF FF FF     
   5739 FFFC69B2 FF FF FF FF FF FF FF FF     
   5740 FFFC69BA FF FF FF FF FF FF FF FF     
   5741 FFFC69C2 FF FF FF FF FF FF FF FF     
   5742 FFFC69CA FF FF FF FF FF FF FF FF     
   5743 FFFC69D2 FF FF FF FF FF FF FF FF     
   5744 FFFC69DA FF FF FF FF FF FF FF FF     
   5745 FFFC69E2 FF FF FF FF FF FF FF FF     
   5746 FFFC69EA FF FF FF FF FF FF FF FF     
   5747 FFFC69F2 FF FF FF FF FF FF FF FF     
   5748 FFFC69FA FF FF FF FF FF FF FF FF     
   5749 FFFC6A02 FF FF FF FF FF FF FF FF     
   5750 FFFC6A0A FF FF FF FF FF FF FF FF     
   5751 FFFC6A12 FF FF FF FF FF FF FF FF     
   5752 FFFC6A1A FF FF FF FF FF FF FF FF     
   5753 FFFC6A22 FF FF FF FF FF FF FF FF     
   5754 FFFC6A2A FF FF FF FF FF FF FF FF     
   5755 FFFC6A32 FF FF FF FF FF FF FF FF     
   5756 FFFC6A3A FF FF FF FF FF FF FF FF     
   5757 FFFC6A42 FF FF FF FF FF FF FF FF     
   5758 FFFC6A4A FF FF FF FF FF FF FF FF     
   5759 FFFC6A52 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 39
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5760 FFFC6A5A FF FF FF FF FF FF FF FF     
   5761 FFFC6A62 FF FF FF FF FF FF FF FF     
   5762 FFFC6A6A FF FF FF FF FF FF FF FF     
   5763 FFFC6A72 FF FF FF FF FF FF FF FF     
   5764 FFFC6A7A FF FF FF FF FF FF FF FF     
   5765 FFFC6A82 FF FF FF FF FF FF FF FF     
   5766 FFFC6A8A FF FF FF FF FF FF FF FF     
   5767 FFFC6A92 FF FF FF FF FF FF FF FF     
   5768 FFFC6A9A FF FF FF FF FF FF FF FF     
   5769 FFFC6AA2 FF FF FF FF FF FF FF FF     
   5770 FFFC6AAA FF FF FF FF FF FF FF FF     
   5771 FFFC6AB2 FF FF FF FF FF FF FF FF     
   5772 FFFC6ABA FF FF FF FF FF FF FF FF     
   5773 FFFC6AC2 FF FF FF FF FF FF FF FF     
   5774 FFFC6ACA FF FF FF FF FF FF FF FF     
   5775 FFFC6AD2 FF FF FF FF FF FF FF FF     
   5776 FFFC6ADA FF FF FF FF FF FF FF FF     
   5777 FFFC6AE2 FF FF FF FF FF FF FF FF     
   5778 FFFC6AEA FF FF FF FF FF FF FF FF     
   5779 FFFC6AF2 FF FF FF FF FF FF FF FF     
   5780 FFFC6AFA FF FF FF FF FF FF FF FF     
   5781 FFFC6B02 FF FF FF FF FF FF FF FF     
   5782 FFFC6B0A FF FF FF FF FF FF FF FF     
   5783 FFFC6B12 FF FF FF FF FF FF FF FF     
   5784 FFFC6B1A FF FF FF FF FF FF FF FF     
   5785 FFFC6B22 FF FF FF FF FF FF FF FF     
   5786 FFFC6B2A FF FF FF FF FF FF FF FF     
   5787 FFFC6B32 FF FF FF FF FF FF FF FF     
   5788 FFFC6B3A FF FF FF FF FF FF FF FF     
   5789 FFFC6B42 FF FF FF FF FF FF FF FF     
   5790 FFFC6B4A FF FF FF FF FF FF FF FF     
   5791 FFFC6B52 FF FF FF FF FF FF FF FF     
   5792 FFFC6B5A FF FF FF FF FF FF FF FF     
   5793 FFFC6B62 FF FF FF FF FF FF FF FF     
   5794 FFFC6B6A FF FF FF FF FF FF FF FF     
   5795 FFFC6B72 FF FF FF FF FF FF FF FF     
   5796 FFFC6B7A FF FF FF FF FF FF FF FF     
   5797 FFFC6B82 FF FF FF FF FF FF FF FF     
   5798 FFFC6B8A FF FF FF FF FF FF FF FF     
   5799 FFFC6B92 FF FF FF FF FF FF FF FF     
   5800 FFFC6B9A FF FF FF FF FF FF FF FF     
   5801 FFFC6BA2 FF FF FF FF FF FF FF FF     
   5802 FFFC6BAA FF FF FF FF FF FF FF FF     
   5803 FFFC6BB2 FF FF FF FF FF FF FF FF     
   5804 FFFC6BBA FF FF FF FF FF FF FF FF     
   5805 FFFC6BC2 FF FF FF FF FF FF FF FF     
   5806 FFFC6BCA FF FF FF FF FF FF FF FF     
   5807 FFFC6BD2 FF FF FF FF FF FF FF FF     
   5808 FFFC6BDA FF FF FF FF FF FF FF FF     
   5809 FFFC6BE2 FF FF FF FF FF FF FF FF     
   5810 FFFC6BEA FF FF FF FF FF FF FF FF     
   5811 FFFC6BF2 FF FF FF FF FF FF FF FF     
   5812 FFFC6BFA FF FF FF FF FF FF FF FF     
   5813 FFFC6C02 FF FF FF FF FF FF FF FF     
   5814 FFFC6C0A FF FF FF FF FF FF FF FF     
   5815 FFFC6C12 FF FF FF FF FF FF FF FF     
   5816 FFFC6C1A FF FF FF FF FF FF FF FF     
   5817 FFFC6C22 FF FF FF FF FF FF FF FF     
   5818 FFFC6C2A FF FF FF FF FF FF FF FF     
   5819 FFFC6C32 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 40
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5820 FFFC6C3A FF FF FF FF FF FF FF FF     
   5821 FFFC6C42 FF FF FF FF FF FF FF FF     
   5822 FFFC6C4A FF FF FF FF FF FF FF FF     
   5823 FFFC6C52 FF FF FF FF FF FF FF FF     
   5824 FFFC6C5A FF FF FF FF FF FF FF FF     
   5825 FFFC6C62 FF FF FF FF FF FF FF FF     
   5826 FFFC6C6A FF FF FF FF FF FF FF FF     
   5827 FFFC6C72 FF FF FF FF FF FF FF FF     
   5828 FFFC6C7A FF FF FF FF FF FF FF FF     
   5829 FFFC6C82 FF FF FF FF FF FF FF FF     
   5830 FFFC6C8A FF FF FF FF FF FF FF FF     
   5831 FFFC6C92 FF FF FF FF FF FF FF FF     
   5832 FFFC6C9A FF FF FF FF FF FF FF FF     
   5833 FFFC6CA2 FF FF FF FF FF FF FF FF     
   5834 FFFC6CAA FF FF FF FF FF FF FF FF     
   5835 FFFC6CB2 FF FF FF FF FF FF FF FF     
   5836 FFFC6CBA FF FF FF FF FF FF FF FF     
   5837 FFFC6CC2 FF FF FF FF FF FF FF FF     
   5838 FFFC6CCA FF FF FF FF FF FF FF FF     
   5839 FFFC6CD2 FF FF FF FF FF FF FF FF     
   5840 FFFC6CDA FF FF FF FF FF FF FF FF     
   5841 FFFC6CE2 FF FF FF FF FF FF FF FF     
   5842 FFFC6CEA FF FF FF FF FF FF FF FF     
   5843 FFFC6CF2 FF FF FF FF FF FF FF FF     
   5844 FFFC6CFA FF FF FF FF FF FF FF FF     
   5845 FFFC6D02 FF FF FF FF FF FF FF FF     
   5846 FFFC6D0A FF FF FF FF FF FF FF FF     
   5847 FFFC6D12 FF FF FF FF FF FF FF FF     
   5848 FFFC6D1A FF FF FF FF FF FF FF FF     
   5849 FFFC6D22 FF FF FF FF FF FF FF FF     
   5850 FFFC6D2A FF FF FF FF FF FF FF FF     
   5851 FFFC6D32 FF FF FF FF FF FF FF FF     
   5852 FFFC6D3A FF FF FF FF FF FF FF FF     
   5853 FFFC6D42 FF FF FF FF FF FF FF FF     
   5854 FFFC6D4A FF FF FF FF FF FF FF FF     
   5855 FFFC6D52 FF FF FF FF FF FF FF FF     
   5856 FFFC6D5A FF FF FF FF FF FF FF FF     
   5857 FFFC6D62 FF FF FF FF FF FF FF FF     
   5858 FFFC6D6A FF FF FF FF FF FF FF FF     
   5859 FFFC6D72 FF FF FF FF FF FF FF FF     
   5860 FFFC6D7A FF FF FF FF FF FF FF FF     
   5861 FFFC6D82 FF FF FF FF FF FF FF FF     
   5862 FFFC6D8A FF FF FF FF FF FF FF FF     
   5863 FFFC6D92 FF FF FF FF FF FF FF FF     
   5864 FFFC6D9A FF FF FF FF FF FF FF FF     
   5865 FFFC6DA2 FF FF FF FF FF FF FF FF     
   5866 FFFC6DAA FF FF FF FF FF FF FF FF     
   5867 FFFC6DB2 FF FF FF FF FF FF FF FF     
   5868 FFFC6DBA FF FF FF FF FF FF FF FF     
   5869 FFFC6DC2 FF FF FF FF FF FF FF FF     
   5870 FFFC6DCA FF FF FF FF FF FF FF FF     
   5871 FFFC6DD2 FF FF FF FF FF FF FF FF     
   5872 FFFC6DDA FF FF FF FF FF FF FF FF     
   5873 FFFC6DE2 FF FF FF FF FF FF FF FF     
   5874 FFFC6DEA FF FF FF FF FF FF FF FF     
   5875 FFFC6DF2 FF FF FF FF FF FF FF FF     
   5876 FFFC6DFA FF FF FF FF FF FF FF FF     
   5877 FFFC6E02 FF FF FF FF FF FF FF FF     
   5878 FFFC6E0A FF FF FF FF FF FF FF FF     
   5879 FFFC6E12 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 41
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5880 FFFC6E1A FF FF FF FF FF FF FF FF     
   5881 FFFC6E22 FF FF FF FF FF FF FF FF     
   5882 FFFC6E2A FF FF FF FF FF FF FF FF     
   5883 FFFC6E32 FF FF FF FF FF FF FF FF     
   5884 FFFC6E3A FF FF FF FF FF FF FF FF     
   5885 FFFC6E42 FF FF FF FF FF FF FF FF     
   5886 FFFC6E4A FF FF FF FF FF FF FF FF     
   5887 FFFC6E52 FF FF FF FF FF FF FF FF     
   5888 FFFC6E5A FF FF FF FF FF FF FF FF     
   5889 FFFC6E62 FF FF FF FF FF FF FF FF     
   5890 FFFC6E6A FF FF FF FF FF FF FF FF     
   5891 FFFC6E72 FF FF FF FF FF FF FF FF     
   5892 FFFC6E7A FF FF FF FF FF FF FF FF     
   5893 FFFC6E82 FF FF FF FF FF FF FF FF     
   5894 FFFC6E8A FF FF FF FF FF FF FF FF     
   5895 FFFC6E92 FF FF FF FF FF FF FF FF     
   5896 FFFC6E9A FF FF FF FF FF FF FF FF     
   5897 FFFC6EA2 FF FF FF FF FF FF FF FF     
   5898 FFFC6EAA FF FF FF FF FF FF FF FF     
   5899 FFFC6EB2 FF FF FF FF FF FF FF FF     
   5900 FFFC6EBA FF FF FF FF FF FF FF FF     
   5901 FFFC6EC2 FF FF FF FF FF FF FF FF     
   5902 FFFC6ECA FF FF FF FF FF FF FF FF     
   5903 FFFC6ED2 FF FF FF FF FF FF FF FF     
   5904 FFFC6EDA FF FF FF FF FF FF FF FF     
   5905 FFFC6EE2 FF FF FF FF FF FF FF FF     
   5906 FFFC6EEA FF FF FF FF FF FF FF FF     
   5907 FFFC6EF2 FF FF FF FF FF FF FF FF     
   5908 FFFC6EFA FF FF FF FF FF FF FF FF     
   5909 FFFC6F02 FF FF FF FF FF FF FF FF     
   5910 FFFC6F0A FF FF FF FF FF FF FF FF     
   5911 FFFC6F12 FF FF FF FF FF FF FF FF     
   5912 FFFC6F1A FF FF FF FF FF FF FF FF     
   5913 FFFC6F22 FF FF FF FF FF FF FF FF     
   5914 FFFC6F2A FF FF FF FF FF FF FF FF     
   5915 FFFC6F32 FF FF FF FF FF FF FF FF     
   5916 FFFC6F3A FF FF FF FF FF FF FF FF     
   5917 FFFC6F42 FF FF FF FF FF FF FF FF     
   5918 FFFC6F4A FF FF FF FF FF FF FF FF     
   5919 FFFC6F52 FF FF FF FF FF FF FF FF     
   5920 FFFC6F5A FF FF FF FF FF FF FF FF     
   5921 FFFC6F62 FF FF FF FF FF FF FF FF     
   5922 FFFC6F6A FF FF FF FF FF FF FF FF     
   5923 FFFC6F72 FF FF FF FF FF FF FF FF     
   5924 FFFC6F7A FF FF FF FF FF FF FF FF     
   5925 FFFC6F82 FF FF FF FF FF FF FF FF     
   5926 FFFC6F8A FF FF FF FF FF FF FF FF     
   5927 FFFC6F92 FF FF FF FF FF FF FF FF     
   5928 FFFC6F9A FF FF FF FF FF FF FF FF     
   5929 FFFC6FA2 FF FF FF FF FF FF FF FF     
   5930 FFFC6FAA FF FF FF FF FF FF FF FF     
   5931 FFFC6FB2 FF FF FF FF FF FF FF FF     
   5932 FFFC6FBA FF FF FF FF FF FF FF FF     
   5933 FFFC6FC2 FF FF FF FF FF FF FF FF     
   5934 FFFC6FCA FF FF FF FF FF FF FF FF     
   5935 FFFC6FD2 FF FF FF FF FF FF FF FF     
   5936 FFFC6FDA FF FF FF FF FF FF FF FF     
   5937 FFFC6FE2 FF FF FF FF FF FF FF FF     
   5938 FFFC6FEA FF FF FF FF FF FF FF FF     
   5939 FFFC6FF2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 42
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   5940 FFFC6FFA FF FF FF FF FF FF FF FF     
   5941 FFFC7002 FF FF FF FF FF FF FF FF     
   5942 FFFC700A FF FF FF FF FF FF FF FF     
   5943 FFFC7012 FF FF FF FF FF FF FF FF     
   5944 FFFC701A FF FF FF FF FF FF FF FF     
   5945 FFFC7022 FF FF FF FF FF FF FF FF     
   5946 FFFC702A FF FF FF FF FF FF FF FF     
   5947 FFFC7032 FF FF FF FF FF FF FF FF     
   5948 FFFC703A FF FF FF FF FF FF FF FF     
   5949 FFFC7042 FF FF FF FF FF FF FF FF     
   5950 FFFC704A FF FF FF FF FF FF FF FF     
   5951 FFFC7052 FF FF FF FF FF FF FF FF     
   5952 FFFC705A FF FF FF FF FF FF FF FF     
   5953 FFFC7062 FF FF FF FF FF FF FF FF     
   5954 FFFC706A FF FF FF FF FF FF FF FF     
   5955 FFFC7072 FF FF FF FF FF FF FF FF     
   5956 FFFC707A FF FF FF FF FF FF FF FF     
   5957 FFFC7082 FF FF FF FF FF FF FF FF     
   5958 FFFC708A FF FF FF FF FF FF FF FF     
   5959 FFFC7092 FF FF FF FF FF FF FF FF     
   5960 FFFC709A FF FF FF FF FF FF FF FF     
   5961 FFFC70A2 FF FF FF FF FF FF FF FF     
   5962 FFFC70AA FF FF FF FF FF FF FF FF     
   5963 FFFC70B2 FF FF FF FF FF FF FF FF     
   5964 FFFC70BA FF FF FF FF FF FF FF FF     
   5965 FFFC70C2 FF FF FF FF FF FF FF FF     
   5966 FFFC70CA FF FF FF FF FF FF FF FF     
   5967 FFFC70D2 FF FF FF FF FF FF FF FF     
   5968 FFFC70DA FF FF FF FF FF FF FF FF     
   5969 FFFC70E2 FF FF FF FF FF FF FF FF     
   5970 FFFC70EA FF FF FF FF FF FF FF FF     
   5971 FFFC70F2 FF FF FF FF FF FF FF FF     
   5972 FFFC70FA FF FF FF FF FF FF FF FF     
   5973 FFFC7102 FF FF FF FF FF FF FF FF     
   5974 FFFC710A FF FF FF FF FF FF FF FF     
   5975 FFFC7112 FF FF FF FF FF FF FF FF     
   5976 FFFC711A FF FF FF FF FF FF FF FF     
   5977 FFFC7122 FF FF FF FF FF FF FF FF     
   5978 FFFC712A FF FF FF FF FF FF FF FF     
   5979 FFFC7132 FF FF FF FF FF FF FF FF     
   5980 FFFC713A FF FF FF FF FF FF FF FF     
   5981 FFFC7142 FF FF FF FF FF FF FF FF     
   5982 FFFC714A FF FF FF FF FF FF FF FF     
   5983 FFFC7152 FF FF FF FF FF FF FF FF     
   5984 FFFC715A FF FF FF FF FF FF FF FF     
   5985 FFFC7162 FF FF FF FF FF FF FF FF     
   5986 FFFC716A FF FF FF FF FF FF FF FF     
   5987 FFFC7172 FF FF FF FF FF FF FF FF     
   5988 FFFC717A FF FF FF FF FF FF FF FF     
   5989 FFFC7182 FF FF FF FF FF FF FF FF     
   5990 FFFC718A FF FF FF FF FF FF FF FF     
   5991 FFFC7192 FF FF FF FF FF FF FF FF     
   5992 FFFC719A FF FF FF FF FF FF FF FF     
   5993 FFFC71A2 FF FF FF FF FF FF FF FF     
   5994 FFFC71AA FF FF FF FF FF FF FF FF     
   5995 FFFC71B2 FF FF FF FF FF FF FF FF     
   5996 FFFC71BA FF FF FF FF FF FF FF FF     
   5997 FFFC71C2 FF FF FF FF FF FF FF FF     
   5998 FFFC71CA FF FF FF FF FF FF FF FF     
   5999 FFFC71D2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 43
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6000 FFFC71DA FF FF FF FF FF FF FF FF     
   6001 FFFC71E2 FF FF FF FF FF FF FF FF     
   6002 FFFC71EA FF FF FF FF FF FF FF FF     
   6003 FFFC71F2 FF FF FF FF FF FF FF FF     
   6004 FFFC71FA FF FF FF FF FF FF FF FF     
   6005 FFFC7202 FF FF FF FF FF FF FF FF     
   6006 FFFC720A FF FF FF FF FF FF FF FF     
   6007 FFFC7212 FF FF FF FF FF FF FF FF     
   6008 FFFC721A FF FF FF FF FF FF FF FF     
   6009 FFFC7222 FF FF FF FF FF FF FF FF     
   6010 FFFC722A FF FF FF FF FF FF FF FF     
   6011 FFFC7232 FF FF FF FF FF FF FF FF     
   6012 FFFC723A FF FF FF FF FF FF FF FF     
   6013 FFFC7242 FF FF FF FF FF FF FF FF     
   6014 FFFC724A FF FF FF FF FF FF FF FF     
   6015 FFFC7252 FF FF FF FF FF FF FF FF     
   6016 FFFC725A FF FF FF FF FF FF FF FF     
   6017 FFFC7262 FF FF FF FF FF FF FF FF     
   6018 FFFC726A FF FF FF FF FF FF FF FF     
   6019 FFFC7272 FF FF FF FF FF FF FF FF     
   6020 FFFC727A FF FF FF FF FF FF FF FF     
   6021 FFFC7282 FF FF FF FF FF FF FF FF     
   6022 FFFC728A FF FF FF FF FF FF FF FF     
   6023 FFFC7292 FF FF FF FF FF FF FF FF     
   6024 FFFC729A FF FF FF FF FF FF FF FF     
   6025 FFFC72A2 FF FF FF FF FF FF FF FF     
   6026 FFFC72AA FF FF FF FF FF FF FF FF     
   6027 FFFC72B2 FF FF FF FF FF FF FF FF     
   6028 FFFC72BA FF FF FF FF FF FF FF FF     
   6029 FFFC72C2 FF FF FF FF FF FF FF FF     
   6030 FFFC72CA FF FF FF FF FF FF FF FF     
   6031 FFFC72D2 FF FF FF FF FF FF FF FF     
   6032 FFFC72DA FF FF FF FF FF FF FF FF     
   6033 FFFC72E2 FF FF FF FF FF FF FF FF     
   6034 FFFC72EA FF FF FF FF FF FF FF FF     
   6035 FFFC72F2 FF FF FF FF FF FF FF FF     
   6036 FFFC72FA FF FF FF FF FF FF FF FF     
   6037 FFFC7302 FF FF FF FF FF FF FF FF     
   6038 FFFC730A FF FF FF FF FF FF FF FF     
   6039 FFFC7312 FF FF FF FF FF FF FF FF     
   6040 FFFC731A FF FF FF FF FF FF FF FF     
   6041 FFFC7322 FF FF FF FF FF FF FF FF     
   6042 FFFC732A FF FF FF FF FF FF FF FF     
   6043 FFFC7332 FF FF FF FF FF FF FF FF     
   6044 FFFC733A FF FF FF FF FF FF FF FF     
   6045 FFFC7342 FF FF FF FF FF FF FF FF     
   6046 FFFC734A FF FF FF FF FF FF FF FF     
   6047 FFFC7352 FF FF FF FF FF FF FF FF     
   6048 FFFC735A FF FF FF FF FF FF FF FF     
   6049 FFFC7362 FF FF FF FF FF FF FF FF     
   6050 FFFC736A FF FF FF FF FF FF FF FF     
   6051 FFFC7372 FF FF FF FF FF FF FF FF     
   6052 FFFC737A FF FF FF FF FF FF FF FF     
   6053 FFFC7382 FF FF FF FF FF FF FF FF     
   6054 FFFC738A FF FF FF FF FF FF FF FF     
   6055 FFFC7392 FF FF FF FF FF FF FF FF     
   6056 FFFC739A FF FF FF FF FF FF FF FF     
   6057 FFFC73A2 FF FF FF FF FF FF FF FF     
   6058 FFFC73AA FF FF FF FF FF FF FF FF     
   6059 FFFC73B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 44
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6060 FFFC73BA FF FF FF FF FF FF FF FF     
   6061 FFFC73C2 FF FF FF FF FF FF FF FF     
   6062 FFFC73CA FF FF FF FF FF FF FF FF     
   6063 FFFC73D2 FF FF FF FF FF FF FF FF     
   6064 FFFC73DA FF FF FF FF FF FF FF FF     
   6065 FFFC73E2 FF FF FF FF FF FF FF FF     
   6066 FFFC73EA FF FF FF FF FF FF FF FF     
   6067 FFFC73F2 FF FF FF FF FF FF FF FF     
   6068 FFFC73FA FF FF FF FF FF FF FF FF     
   6069 FFFC7402 FF FF FF FF FF FF FF FF     
   6070 FFFC740A FF FF FF FF FF FF FF FF     
   6071 FFFC7412 FF FF FF FF FF FF FF FF     
   6072 FFFC741A FF FF FF FF FF FF FF FF     
   6073 FFFC7422 FF FF FF FF FF FF FF FF     
   6074 FFFC742A FF FF FF FF FF FF FF FF     
   6075 FFFC7432 FF FF FF FF FF FF FF FF     
   6076 FFFC743A FF FF FF FF FF FF FF FF     
   6077 FFFC7442 FF FF FF FF FF FF FF FF     
   6078 FFFC744A FF FF FF FF FF FF FF FF     
   6079 FFFC7452 FF FF FF FF FF FF FF FF     
   6080 FFFC745A FF FF FF FF FF FF FF FF     
   6081 FFFC7462 FF FF FF FF FF FF FF FF     
   6082 FFFC746A FF FF FF FF FF FF FF FF     
   6083 FFFC7472 FF FF FF FF FF FF FF FF     
   6084 FFFC747A FF FF FF FF FF FF FF FF     
   6085 FFFC7482 FF FF FF FF FF FF FF FF     
   6086 FFFC748A FF FF FF FF FF FF FF FF     
   6087 FFFC7492 FF FF FF FF FF FF FF FF     
   6088 FFFC749A FF FF FF FF FF FF FF FF     
   6089 FFFC74A2 FF FF FF FF FF FF FF FF     
   6090 FFFC74AA FF FF FF FF FF FF FF FF     
   6091 FFFC74B2 FF FF FF FF FF FF FF FF     
   6092 FFFC74BA FF FF FF FF FF FF FF FF     
   6093 FFFC74C2 FF FF FF FF FF FF FF FF     
   6094 FFFC74CA FF FF FF FF FF FF FF FF     
   6095 FFFC74D2 FF FF FF FF FF FF FF FF     
   6096 FFFC74DA FF FF FF FF FF FF FF FF     
   6097 FFFC74E2 FF FF FF FF FF FF FF FF     
   6098 FFFC74EA FF FF FF FF FF FF FF FF     
   6099 FFFC74F2 FF FF FF FF FF FF FF FF     
   6100 FFFC74FA FF FF FF FF FF FF FF FF     
   6101 FFFC7502 FF FF FF FF FF FF FF FF     
   6102 FFFC750A FF FF FF FF FF FF FF FF     
   6103 FFFC7512 FF FF FF FF FF FF FF FF     
   6104 FFFC751A FF FF FF FF FF FF FF FF     
   6105 FFFC7522 FF FF FF FF FF FF FF FF     
   6106 FFFC752A FF FF FF FF FF FF FF FF     
   6107 FFFC7532 FF FF FF FF FF FF FF FF     
   6108 FFFC753A FF FF FF FF FF FF FF FF     
   6109 FFFC7542 FF FF FF FF FF FF FF FF     
   6110 FFFC754A FF FF FF FF FF FF FF FF     
   6111 FFFC7552 FF FF FF FF FF FF FF FF     
   6112 FFFC755A FF FF FF FF FF FF FF FF     
   6113 FFFC7562 FF FF FF FF FF FF FF FF     
   6114 FFFC756A FF FF FF FF FF FF FF FF     
   6115 FFFC7572 FF FF FF FF FF FF FF FF     
   6116 FFFC757A FF FF FF FF FF FF FF FF     
   6117 FFFC7582 FF FF FF FF FF FF FF FF     
   6118 FFFC758A FF FF FF FF FF FF FF FF     
   6119 FFFC7592 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 45
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6120 FFFC759A FF FF FF FF FF FF FF FF     
   6121 FFFC75A2 FF FF FF FF FF FF FF FF     
   6122 FFFC75AA FF FF FF FF FF FF FF FF     
   6123 FFFC75B2 FF FF FF FF FF FF FF FF     
   6124 FFFC75BA FF FF FF FF FF FF FF FF     
   6125 FFFC75C2 FF FF FF FF FF FF FF FF     
   6126 FFFC75CA FF FF FF FF FF FF FF FF     
   6127 FFFC75D2 FF FF FF FF FF FF FF FF     
   6128 FFFC75DA FF FF FF FF FF FF FF FF     
   6129 FFFC75E2 FF FF FF FF FF FF FF FF     
   6130 FFFC75EA FF FF FF FF FF FF FF FF     
   6131 FFFC75F2 FF FF FF FF FF FF FF FF     
   6132 FFFC75FA FF FF FF FF FF FF FF FF     
   6133 FFFC7602 FF FF FF FF FF FF FF FF     
   6134 FFFC760A FF FF FF FF FF FF FF FF     
   6135 FFFC7612 FF FF FF FF FF FF FF FF     
   6136 FFFC761A FF FF FF FF FF FF FF FF     
   6137 FFFC7622 FF FF FF FF FF FF FF FF     
   6138 FFFC762A FF FF FF FF FF FF FF FF     
   6139 FFFC7632 FF FF FF FF FF FF FF FF     
   6140 FFFC763A FF FF FF FF FF FF FF FF     
   6141 FFFC7642 FF FF FF FF FF FF FF FF     
   6142 FFFC764A FF FF FF FF FF FF FF FF     
   6143 FFFC7652 FF FF FF FF FF FF FF FF     
   6144 FFFC765A FF FF FF FF FF FF FF FF     
   6145 FFFC7662 FF FF FF FF FF FF FF FF     
   6146 FFFC766A FF FF FF FF FF FF FF FF     
   6147 FFFC7672 FF FF FF FF FF FF FF FF     
   6148 FFFC767A FF FF FF FF FF FF FF FF     
   6149 FFFC7682 FF FF FF FF FF FF FF FF     
   6150 FFFC768A FF FF FF FF FF FF FF FF     
   6151 FFFC7692 FF FF FF FF FF FF FF FF     
   6152 FFFC769A FF FF FF FF FF FF FF FF     
   6153 FFFC76A2 FF FF FF FF FF FF FF FF     
   6154 FFFC76AA FF FF FF FF FF FF FF FF     
   6155 FFFC76B2 FF FF FF FF FF FF FF FF     
   6156 FFFC76BA FF FF FF FF FF FF FF FF     
   6157 FFFC76C2 FF FF FF FF FF FF FF FF     
   6158 FFFC76CA FF FF FF FF FF FF FF FF     
   6159 FFFC76D2 FF FF FF FF FF FF FF FF     
   6160 FFFC76DA FF FF FF FF FF FF FF FF     
   6161 FFFC76E2 FF FF FF FF FF FF FF FF     
   6162 FFFC76EA FF FF FF FF FF FF FF FF     
   6163 FFFC76F2 FF FF FF FF FF FF FF FF     
   6164 FFFC76FA FF FF FF FF FF FF FF FF     
   6165 FFFC7702 FF FF FF FF FF FF FF FF     
   6166 FFFC770A FF FF FF FF FF FF FF FF     
   6167 FFFC7712 FF FF FF FF FF FF FF FF     
   6168 FFFC771A FF FF FF FF FF FF FF FF     
   6169 FFFC7722 FF FF FF FF FF FF FF FF     
   6170 FFFC772A FF FF FF FF FF FF FF FF     
   6171 FFFC7732 FF FF FF FF FF FF FF FF     
   6172 FFFC773A FF FF FF FF FF FF FF FF     
   6173 FFFC7742 FF FF FF FF FF FF FF FF     
   6174 FFFC774A FF FF FF FF FF FF FF FF     
   6175 FFFC7752 FF FF FF FF FF FF FF FF     
   6176 FFFC775A FF FF FF FF FF FF FF FF     
   6177 FFFC7762 FF FF FF FF FF FF FF FF     
   6178 FFFC776A FF FF FF FF FF FF FF FF     
   6179 FFFC7772 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 46
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6180 FFFC777A FF FF FF FF FF FF FF FF     
   6181 FFFC7782 FF FF FF FF FF FF FF FF     
   6182 FFFC778A FF FF FF FF FF FF FF FF     
   6183 FFFC7792 FF FF FF FF FF FF FF FF     
   6184 FFFC779A FF FF FF FF FF FF FF FF     
   6185 FFFC77A2 FF FF FF FF FF FF FF FF     
   6186 FFFC77AA FF FF FF FF FF FF FF FF     
   6187 FFFC77B2 FF FF FF FF FF FF FF FF     
   6188 FFFC77BA FF FF FF FF FF FF FF FF     
   6189 FFFC77C2 FF FF FF FF FF FF FF FF     
   6190 FFFC77CA FF FF FF FF FF FF FF FF     
   6191 FFFC77D2 FF FF FF FF FF FF FF FF     
   6192 FFFC77DA FF FF FF FF FF FF FF FF     
   6193 FFFC77E2 FF FF FF FF FF FF FF FF     
   6194 FFFC77EA FF FF FF FF FF FF FF FF     
   6195 FFFC77F2 FF FF FF FF FF FF FF FF     
   6196 FFFC77FA FF FF FF FF FF FF FF FF     
   6197 FFFC7802 FF FF FF FF FF FF FF FF     
   6198 FFFC780A FF FF FF FF FF FF FF FF     
   6199 FFFC7812 FF FF FF FF FF FF FF FF     
   6200 FFFC781A FF FF FF FF FF FF FF FF     
   6201 FFFC7822 FF FF FF FF FF FF FF FF     
   6202 FFFC782A FF FF FF FF FF FF FF FF     
   6203 FFFC7832 FF FF FF FF FF FF FF FF     
   6204 FFFC783A FF FF FF FF FF FF FF FF     
   6205 FFFC7842 FF FF FF FF FF FF FF FF     
   6206 FFFC784A FF FF FF FF FF FF FF FF     
   6207 FFFC7852 FF FF FF FF FF FF FF FF     
   6208 FFFC785A FF FF FF FF FF FF FF FF     
   6209 FFFC7862 FF FF FF FF FF FF FF FF     
   6210 FFFC786A FF FF FF FF FF FF FF FF     
   6211 FFFC7872 FF FF FF FF FF FF FF FF     
   6212 FFFC787A FF FF FF FF FF FF FF FF     
   6213 FFFC7882 FF FF FF FF FF FF FF FF     
   6214 FFFC788A FF FF FF FF FF FF FF FF     
   6215 FFFC7892 FF FF FF FF FF FF FF FF     
   6216 FFFC789A FF FF FF FF FF FF FF FF     
   6217 FFFC78A2 FF FF FF FF FF FF FF FF     
   6218 FFFC78AA FF FF FF FF FF FF FF FF     
   6219 FFFC78B2 FF FF FF FF FF FF FF FF     
   6220 FFFC78BA FF FF FF FF FF FF FF FF     
   6221 FFFC78C2 FF FF FF FF FF FF FF FF     
   6222 FFFC78CA FF FF FF FF FF FF FF FF     
   6223 FFFC78D2 FF FF FF FF FF FF FF FF     
   6224 FFFC78DA FF FF FF FF FF FF FF FF     
   6225 FFFC78E2 FF FF FF FF FF FF FF FF     
   6226 FFFC78EA FF FF FF FF FF FF FF FF     
   6227 FFFC78F2 FF FF FF FF FF FF FF FF     
   6228 FFFC78FA FF FF FF FF FF FF FF FF     
   6229 FFFC7902 FF FF FF FF FF FF FF FF     
   6230 FFFC790A FF FF FF FF FF FF FF FF     
   6231 FFFC7912 FF FF FF FF FF FF FF FF     
   6232 FFFC791A FF FF FF FF FF FF FF FF     
   6233 FFFC7922 FF FF FF FF FF FF FF FF     
   6234 FFFC792A FF FF FF FF FF FF FF FF     
   6235 FFFC7932 FF FF FF FF FF FF FF FF     
   6236 FFFC793A FF FF FF FF FF FF FF FF     
   6237 FFFC7942 FF FF FF FF FF FF FF FF     
   6238 FFFC794A FF FF FF FF FF FF FF FF     
   6239 FFFC7952 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 47
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6240 FFFC795A FF FF FF FF FF FF FF FF     
   6241 FFFC7962 FF FF FF FF FF FF FF FF     
   6242 FFFC796A FF FF FF FF FF FF FF FF     
   6243 FFFC7972 FF FF FF FF FF FF FF FF     
   6244 FFFC797A FF FF FF FF FF FF FF FF     
   6245 FFFC7982 FF FF FF FF FF FF FF FF     
   6246 FFFC798A FF FF FF FF FF FF FF FF     
   6247 FFFC7992 FF FF FF FF FF FF FF FF     
   6248 FFFC799A FF FF FF FF FF FF FF FF     
   6249 FFFC79A2 FF FF FF FF FF FF FF FF     
   6250 FFFC79AA FF FF FF FF FF FF FF FF     
   6251 FFFC79B2 FF FF FF FF FF FF FF FF     
   6252 FFFC79BA FF FF FF FF FF FF FF FF     
   6253 FFFC79C2 FF FF FF FF FF FF FF FF     
   6254 FFFC79CA FF FF FF FF FF FF FF FF     
   6255 FFFC79D2 FF FF FF FF FF FF FF FF     
   6256 FFFC79DA FF FF FF FF FF FF FF FF     
   6257 FFFC79E2 FF FF FF FF FF FF FF FF     
   6258 FFFC79EA FF FF FF FF FF FF FF FF     
   6259 FFFC79F2 FF FF FF FF FF FF FF FF     
   6260 FFFC79FA FF FF FF FF FF FF FF FF     
   6261 FFFC7A02 FF FF FF FF FF FF FF FF     
   6262 FFFC7A0A FF FF FF FF FF FF FF FF     
   6263 FFFC7A12 FF FF FF FF FF FF FF FF     
   6264 FFFC7A1A FF FF FF FF FF FF FF FF     
   6265 FFFC7A22 FF FF FF FF FF FF FF FF     
   6266 FFFC7A2A FF FF FF FF FF FF FF FF     
   6267 FFFC7A32 FF FF FF FF FF FF FF FF     
   6268 FFFC7A3A FF FF FF FF FF FF FF FF     
   6269 FFFC7A42 FF FF FF FF FF FF FF FF     
   6270 FFFC7A4A FF FF FF FF FF FF FF FF     
   6271 FFFC7A52 FF FF FF FF FF FF FF FF     
   6272 FFFC7A5A FF FF FF FF FF FF FF FF     
   6273 FFFC7A62 FF FF FF FF FF FF FF FF     
   6274 FFFC7A6A FF FF FF FF FF FF FF FF     
   6275 FFFC7A72 FF FF FF FF FF FF FF FF     
   6276 FFFC7A7A FF FF FF FF FF FF FF FF     
   6277 FFFC7A82 FF FF FF FF FF FF FF FF     
   6278 FFFC7A8A FF FF FF FF FF FF FF FF     
   6279 FFFC7A92 FF FF FF FF FF FF FF FF     
   6280 FFFC7A9A FF FF FF FF FF FF FF FF     
   6281 FFFC7AA2 FF FF FF FF FF FF FF FF     
   6282 FFFC7AAA FF FF FF FF FF FF FF FF     
   6283 FFFC7AB2 FF FF FF FF FF FF FF FF     
   6284 FFFC7ABA FF FF FF FF FF FF FF FF     
   6285 FFFC7AC2 FF FF FF FF FF FF FF FF     
   6286 FFFC7ACA FF FF FF FF FF FF FF FF     
   6287 FFFC7AD2 FF FF FF FF FF FF FF FF     
   6288 FFFC7ADA FF FF FF FF FF FF FF FF     
   6289 FFFC7AE2 FF FF FF FF FF FF FF FF     
   6290 FFFC7AEA FF FF FF FF FF FF FF FF     
   6291 FFFC7AF2 FF FF FF FF FF FF FF FF     
   6292 FFFC7AFA FF FF FF FF FF FF FF FF     
   6293 FFFC7B02 FF FF FF FF FF FF FF FF     
   6294 FFFC7B0A FF FF FF FF FF FF FF FF     
   6295 FFFC7B12 FF FF FF FF FF FF FF FF     
   6296 FFFC7B1A FF FF FF FF FF FF FF FF     
   6297 FFFC7B22 FF FF FF FF FF FF FF FF     
   6298 FFFC7B2A FF FF FF FF FF FF FF FF     
   6299 FFFC7B32 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 48
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6300 FFFC7B3A FF FF FF FF FF FF FF FF     
   6301 FFFC7B42 FF FF FF FF FF FF FF FF     
   6302 FFFC7B4A FF FF FF FF FF FF FF FF     
   6303 FFFC7B52 FF FF FF FF FF FF FF FF     
   6304 FFFC7B5A FF FF FF FF FF FF FF FF     
   6305 FFFC7B62 FF FF FF FF FF FF FF FF     
   6306 FFFC7B6A FF FF FF FF FF FF FF FF     
   6307 FFFC7B72 FF FF FF FF FF FF FF FF     
   6308 FFFC7B7A FF FF FF FF FF FF FF FF     
   6309 FFFC7B82 FF FF FF FF FF FF FF FF     
   6310 FFFC7B8A FF FF FF FF FF FF FF FF     
   6311 FFFC7B92 FF FF FF FF FF FF FF FF     
   6312 FFFC7B9A FF FF FF FF FF FF FF FF     
   6313 FFFC7BA2 FF FF FF FF FF FF FF FF     
   6314 FFFC7BAA FF FF FF FF FF FF FF FF     
   6315 FFFC7BB2 FF FF FF FF FF FF FF FF     
   6316 FFFC7BBA FF FF FF FF FF FF FF FF     
   6317 FFFC7BC2 FF FF FF FF FF FF FF FF     
   6318 FFFC7BCA FF FF FF FF FF FF FF FF     
   6319 FFFC7BD2 FF FF FF FF FF FF FF FF     
   6320 FFFC7BDA FF FF FF FF FF FF FF FF     
   6321 FFFC7BE2 FF FF FF FF FF FF FF FF     
   6322 FFFC7BEA FF FF FF FF FF FF FF FF     
   6323 FFFC7BF2 FF FF FF FF FF FF FF FF     
   6324 FFFC7BFA FF FF FF FF FF FF FF FF     
   6325 FFFC7C02 FF FF FF FF FF FF FF FF     
   6326 FFFC7C0A FF FF FF FF FF FF FF FF     
   6327 FFFC7C12 FF FF FF FF FF FF FF FF     
   6328 FFFC7C1A FF FF FF FF FF FF FF FF     
   6329 FFFC7C22 FF FF FF FF FF FF FF FF     
   6330 FFFC7C2A FF FF FF FF FF FF FF FF     
   6331 FFFC7C32 FF FF FF FF FF FF FF FF     
   6332 FFFC7C3A FF FF FF FF FF FF FF FF     
   6333 FFFC7C42 FF FF FF FF FF FF FF FF     
   6334 FFFC7C4A FF FF FF FF FF FF FF FF     
   6335 FFFC7C52 FF FF FF FF FF FF FF FF     
   6336 FFFC7C5A FF FF FF FF FF FF FF FF     
   6337 FFFC7C62 FF FF FF FF FF FF FF FF     
   6338 FFFC7C6A FF FF FF FF FF FF FF FF     
   6339 FFFC7C72 FF FF FF FF FF FF FF FF     
   6340 FFFC7C7A FF FF FF FF FF FF FF FF     
   6341 FFFC7C82 FF FF FF FF FF FF FF FF     
   6342 FFFC7C8A FF FF FF FF FF FF FF FF     
   6343 FFFC7C92 FF FF FF FF FF FF FF FF     
   6344 FFFC7C9A FF FF FF FF FF FF FF FF     
   6345 FFFC7CA2 FF FF FF FF FF FF FF FF     
   6346 FFFC7CAA FF FF FF FF FF FF FF FF     
   6347 FFFC7CB2 FF FF FF FF FF FF FF FF     
   6348 FFFC7CBA FF FF FF FF FF FF FF FF     
   6349 FFFC7CC2 FF FF FF FF FF FF FF FF     
   6350 FFFC7CCA FF FF FF FF FF FF FF FF     
   6351 FFFC7CD2 FF FF FF FF FF FF FF FF     
   6352 FFFC7CDA FF FF FF FF FF FF FF FF     
   6353 FFFC7CE2 FF FF FF FF FF FF FF FF     
   6354 FFFC7CEA FF FF FF FF FF FF FF FF     
   6355 FFFC7CF2 FF FF FF FF FF FF FF FF     
   6356 FFFC7CFA FF FF FF FF FF FF FF FF     
   6357 FFFC7D02 FF FF FF FF FF FF FF FF     
   6358 FFFC7D0A FF FF FF FF FF FF FF FF     
   6359 FFFC7D12 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 49
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6360 FFFC7D1A FF FF FF FF FF FF FF FF     
   6361 FFFC7D22 FF FF FF FF FF FF FF FF     
   6362 FFFC7D2A FF FF FF FF FF FF FF FF     
   6363 FFFC7D32 FF FF FF FF FF FF FF FF     
   6364 FFFC7D3A FF FF FF FF FF FF FF FF     
   6365 FFFC7D42 FF FF FF FF FF FF FF FF     
   6366 FFFC7D4A FF FF FF FF FF FF FF FF     
   6367 FFFC7D52 FF FF FF FF FF FF FF FF     
   6368 FFFC7D5A FF FF FF FF FF FF FF FF     
   6369 FFFC7D62 FF FF FF FF FF FF FF FF     
   6370 FFFC7D6A FF FF FF FF FF FF FF FF     
   6371 FFFC7D72 FF FF FF FF FF FF FF FF     
   6372 FFFC7D7A FF FF FF FF FF FF FF FF     
   6373 FFFC7D82 FF FF FF FF FF FF FF FF     
   6374 FFFC7D8A FF FF FF FF FF FF FF FF     
   6375 FFFC7D92 FF FF FF FF FF FF FF FF     
   6376 FFFC7D9A FF FF FF FF FF FF FF FF     
   6377 FFFC7DA2 FF FF FF FF FF FF FF FF     
   6378 FFFC7DAA FF FF FF FF FF FF FF FF     
   6379 FFFC7DB2 FF FF FF FF FF FF FF FF     
   6380 FFFC7DBA FF FF FF FF FF FF FF FF     
   6381 FFFC7DC2 FF FF FF FF FF FF FF FF     
   6382 FFFC7DCA FF FF FF FF FF FF FF FF     
   6383 FFFC7DD2 FF FF FF FF FF FF FF FF     
   6384 FFFC7DDA FF FF FF FF FF FF FF FF     
   6385 FFFC7DE2 FF FF FF FF FF FF FF FF     
   6386 FFFC7DEA FF FF FF FF FF FF FF FF     
   6387 FFFC7DF2 FF FF FF FF FF FF FF FF     
   6388 FFFC7DFA FF FF FF FF FF FF FF FF     
   6389 FFFC7E02 FF FF FF FF FF FF FF FF     
   6390 FFFC7E0A FF FF FF FF FF FF FF FF     
   6391 FFFC7E12 FF FF FF FF FF FF FF FF     
   6392 FFFC7E1A FF FF FF FF FF FF FF FF     
   6393 FFFC7E22 FF FF FF FF FF FF FF FF     
   6394 FFFC7E2A FF FF FF FF FF FF FF FF     
   6395 FFFC7E32 FF FF FF FF FF FF FF FF     
   6396 FFFC7E3A FF FF FF FF FF FF FF FF     
   6397 FFFC7E42 FF FF FF FF FF FF FF FF     
   6398 FFFC7E4A FF FF FF FF FF FF FF FF     
   6399 FFFC7E52 FF FF FF FF FF FF FF FF     
   6400 FFFC7E5A FF FF FF FF FF FF FF FF     
   6401 FFFC7E62 FF FF FF FF FF FF FF FF     
   6402 FFFC7E6A FF FF FF FF FF FF FF FF     
   6403 FFFC7E72 FF FF FF FF FF FF FF FF     
   6404 FFFC7E7A FF FF FF FF FF FF FF FF     
   6405 FFFC7E82 FF FF FF FF FF FF FF FF     
   6406 FFFC7E8A FF FF FF FF FF FF FF FF     
   6407 FFFC7E92 FF FF FF FF FF FF FF FF     
   6408 FFFC7E9A FF FF FF FF FF FF FF FF     
   6409 FFFC7EA2 FF FF FF FF FF FF FF FF     
   6410 FFFC7EAA FF FF FF FF FF FF FF FF     
   6411 FFFC7EB2 FF FF FF FF FF FF FF FF     
   6412 FFFC7EBA FF FF FF FF FF FF FF FF     
   6413 FFFC7EC2 FF FF FF FF FF FF FF FF     
   6414 FFFC7ECA FF FF FF FF FF FF FF FF     
   6415 FFFC7ED2 FF FF FF FF FF FF FF FF     
   6416 FFFC7EDA FF FF FF FF FF FF FF FF     
   6417 FFFC7EE2 FF FF FF FF FF FF FF FF     
   6418 FFFC7EEA FF FF FF FF FF FF FF FF     
   6419 FFFC7EF2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 50
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6420 FFFC7EFA FF FF FF FF FF FF FF FF     
   6421 FFFC7F02 FF FF FF FF FF FF FF FF     
   6422 FFFC7F0A FF FF FF FF FF FF FF FF     
   6423 FFFC7F12 FF FF FF FF FF FF FF FF     
   6424 FFFC7F1A FF FF FF FF FF FF FF FF     
   6425 FFFC7F22 FF FF FF FF FF FF FF FF     
   6426 FFFC7F2A FF FF FF FF FF FF FF FF     
   6427 FFFC7F32 FF FF FF FF FF FF FF FF     
   6428 FFFC7F3A FF FF FF FF FF FF FF FF     
   6429 FFFC7F42 FF FF FF FF FF FF FF FF     
   6430 FFFC7F4A FF FF FF FF FF FF FF FF     
   6431 FFFC7F52 FF FF FF FF FF FF FF FF     
   6432 FFFC7F5A FF FF FF FF FF FF FF FF     
   6433 FFFC7F62 FF FF FF FF FF FF FF FF     
   6434 FFFC7F6A FF FF FF FF FF FF FF FF     
   6435 FFFC7F72 FF FF FF FF FF FF FF FF     
   6436 FFFC7F7A FF FF FF FF FF FF FF FF     
   6437 FFFC7F82 FF FF FF FF FF FF FF FF     
   6438 FFFC7F8A FF FF FF FF FF FF FF FF     
   6439 FFFC7F92 FF FF FF FF FF FF FF FF     
   6440 FFFC7F9A FF FF FF FF FF FF FF FF     
   6441 FFFC7FA2 FF FF FF FF FF FF FF FF     
   6442 FFFC7FAA FF FF FF FF FF FF FF FF     
   6443 FFFC7FB2 FF FF FF FF FF FF FF FF     
   6444 FFFC7FBA FF FF FF FF FF FF FF FF     
   6445 FFFC7FC2 FF FF FF FF FF FF FF FF     
   6446 FFFC7FCA FF FF FF FF FF FF FF FF     
   6447 FFFC7FD2 FF FF FF FF FF FF FF FF     
   6448 FFFC7FDA FF FF FF FF FF FF FF FF     
   6449 FFFC7FE2 FF FF FF FF FF FF FF FF     
   6450 FFFC7FEA FF FF FF FF FF FF FF FF     
   6451 FFFC7FF2 FF FF FF FF FF FF FF FF     
   6452 FFFC7FFA FF FF FF FF FF FF FF FF     
   6453 FFFC8002 FF FF FF FF FF FF FF FF     
   6454 FFFC800A FF FF FF FF FF FF FF FF     
   6455 FFFC8012 FF FF FF FF FF FF FF FF     
   6456 FFFC801A FF FF FF FF FF FF FF FF     
   6457 FFFC8022 FF FF FF FF FF FF FF FF     
   6458 FFFC802A FF FF FF FF FF FF FF FF     
   6459 FFFC8032 FF FF FF FF FF FF FF FF     
   6460 FFFC803A FF FF FF FF FF FF FF FF     
   6461 FFFC8042 FF FF FF FF FF FF FF FF     
   6462 FFFC804A FF FF FF FF FF FF FF FF     
   6463 FFFC8052 FF FF FF FF FF FF FF FF     
   6464 FFFC805A FF FF FF FF FF FF FF FF     
   6465 FFFC8062 FF FF FF FF FF FF FF FF     
   6466 FFFC806A FF FF FF FF FF FF FF FF     
   6467 FFFC8072 FF FF FF FF FF FF FF FF     
   6468 FFFC807A FF FF FF FF FF FF FF FF     
   6469 FFFC8082 FF FF FF FF FF FF FF FF     
   6470 FFFC808A FF FF FF FF FF FF FF FF     
   6471 FFFC8092 FF FF FF FF FF FF FF FF     
   6472 FFFC809A FF FF FF FF FF FF FF FF     
   6473 FFFC80A2 FF FF FF FF FF FF FF FF     
   6474 FFFC80AA FF FF FF FF FF FF FF FF     
   6475 FFFC80B2 FF FF FF FF FF FF FF FF     
   6476 FFFC80BA FF FF FF FF FF FF FF FF     
   6477 FFFC80C2 FF FF FF FF FF FF FF FF     
   6478 FFFC80CA FF FF FF FF FF FF FF FF     
   6479 FFFC80D2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 51
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6480 FFFC80DA FF FF FF FF FF FF FF FF     
   6481 FFFC80E2 FF FF FF FF FF FF FF FF     
   6482 FFFC80EA FF FF FF FF FF FF FF FF     
   6483 FFFC80F2 FF FF FF FF FF FF FF FF     
   6484 FFFC80FA FF FF FF FF FF FF FF FF     
   6485 FFFC8102 FF FF FF FF FF FF FF FF     
   6486 FFFC810A FF FF FF FF FF FF FF FF     
   6487 FFFC8112 FF FF FF FF FF FF FF FF     
   6488 FFFC811A FF FF FF FF FF FF FF FF     
   6489 FFFC8122 FF FF FF FF FF FF FF FF     
   6490 FFFC812A FF FF FF FF FF FF FF FF     
   6491 FFFC8132 FF FF FF FF FF FF FF FF     
   6492 FFFC813A FF FF FF FF FF FF FF FF     
   6493 FFFC8142 FF FF FF FF FF FF FF FF     
   6494 FFFC814A FF FF FF FF FF FF FF FF     
   6495 FFFC8152 FF FF FF FF FF FF FF FF     
   6496 FFFC815A FF FF FF FF FF FF FF FF     
   6497 FFFC8162 FF FF FF FF FF FF FF FF     
   6498 FFFC816A FF FF FF FF FF FF FF FF     
   6499 FFFC8172 FF FF FF FF FF FF FF FF     
   6500 FFFC817A FF FF FF FF FF FF FF FF     
   6501 FFFC8182 FF FF FF FF FF FF FF FF     
   6502 FFFC818A FF FF FF FF FF FF FF FF     
   6503 FFFC8192 FF FF FF FF FF FF FF FF     
   6504 FFFC819A FF FF FF FF FF FF FF FF     
   6505 FFFC81A2 FF FF FF FF FF FF FF FF     
   6506 FFFC81AA FF FF FF FF FF FF FF FF     
   6507 FFFC81B2 FF FF FF FF FF FF FF FF     
   6508 FFFC81BA FF FF FF FF FF FF FF FF     
   6509 FFFC81C2 FF FF FF FF FF FF FF FF     
   6510 FFFC81CA FF FF FF FF FF FF FF FF     
   6511 FFFC81D2 FF FF FF FF FF FF FF FF     
   6512 FFFC81DA FF FF FF FF FF FF FF FF     
   6513 FFFC81E2 FF FF FF FF FF FF FF FF     
   6514 FFFC81EA FF FF FF FF FF FF FF FF     
   6515 FFFC81F2 FF FF FF FF FF FF FF FF     
   6516 FFFC81FA FF FF FF FF FF FF FF FF     
   6517 FFFC8202 FF FF FF FF FF FF FF FF     
   6518 FFFC820A FF FF FF FF FF FF FF FF     
   6519 FFFC8212 FF FF FF FF FF FF FF FF     
   6520 FFFC821A FF FF FF FF FF FF FF FF     
   6521 FFFC8222 FF FF FF FF FF FF FF FF     
   6522 FFFC822A FF FF FF FF FF FF FF FF     
   6523 FFFC8232 FF FF FF FF FF FF FF FF     
   6524 FFFC823A FF FF FF FF FF FF FF FF     
   6525 FFFC8242 FF FF FF FF FF FF FF FF     
   6526 FFFC824A FF FF FF FF FF FF FF FF     
   6527 FFFC8252 FF FF FF FF FF FF FF FF     
   6528 FFFC825A FF FF FF FF FF FF FF FF     
   6529 FFFC8262 FF FF FF FF FF FF FF FF     
   6530 FFFC826A FF FF FF FF FF FF FF FF     
   6531 FFFC8272 FF FF FF FF FF FF FF FF     
   6532 FFFC827A FF FF FF FF FF FF FF FF     
   6533 FFFC8282 FF FF FF FF FF FF FF FF     
   6534 FFFC828A FF FF FF FF FF FF FF FF     
   6535 FFFC8292 FF FF FF FF FF FF FF FF     
   6536 FFFC829A FF FF FF FF FF FF FF FF     
   6537 FFFC82A2 FF FF FF FF FF FF FF FF     
   6538 FFFC82AA FF FF FF FF FF FF FF FF     
   6539 FFFC82B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 52
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6540 FFFC82BA FF FF FF FF FF FF FF FF     
   6541 FFFC82C2 FF FF FF FF FF FF FF FF     
   6542 FFFC82CA FF FF FF FF FF FF FF FF     
   6543 FFFC82D2 FF FF FF FF FF FF FF FF     
   6544 FFFC82DA FF FF FF FF FF FF FF FF     
   6545 FFFC82E2 FF FF FF FF FF FF FF FF     
   6546 FFFC82EA FF FF FF FF FF FF FF FF     
   6547 FFFC82F2 FF FF FF FF FF FF FF FF     
   6548 FFFC82FA FF FF FF FF FF FF FF FF     
   6549 FFFC8302 FF FF FF FF FF FF FF FF     
   6550 FFFC830A FF FF FF FF FF FF FF FF     
   6551 FFFC8312 FF FF FF FF FF FF FF FF     
   6552 FFFC831A FF FF FF FF FF FF FF FF     
   6553 FFFC8322 FF FF FF FF FF FF FF FF     
   6554 FFFC832A FF FF FF FF FF FF FF FF     
   6555 FFFC8332 FF FF FF FF FF FF FF FF     
   6556 FFFC833A FF FF FF FF FF FF FF FF     
   6557 FFFC8342 FF FF FF FF FF FF FF FF     
   6558 FFFC834A FF FF FF FF FF FF FF FF     
   6559 FFFC8352 FF FF FF FF FF FF FF FF     
   6560 FFFC835A FF FF FF FF FF FF FF FF     
   6561 FFFC8362 FF FF FF FF FF FF FF FF     
   6562 FFFC836A FF FF FF FF FF FF FF FF     
   6563 FFFC8372 FF FF FF FF FF FF FF FF     
   6564 FFFC837A FF FF FF FF FF FF FF FF     
   6565 FFFC8382 FF FF FF FF FF FF FF FF     
   6566 FFFC838A FF FF FF FF FF FF FF FF     
   6567 FFFC8392 FF FF FF FF FF FF FF FF     
   6568 FFFC839A FF FF FF FF FF FF FF FF     
   6569 FFFC83A2 FF FF FF FF FF FF FF FF     
   6570 FFFC83AA FF FF FF FF FF FF FF FF     
   6571 FFFC83B2 FF FF FF FF FF FF FF FF     
   6572 FFFC83BA FF FF FF FF FF FF FF FF     
   6573 FFFC83C2 FF FF FF FF FF FF FF FF     
   6574 FFFC83CA FF FF FF FF FF FF FF FF     
   6575 FFFC83D2 FF FF FF FF FF FF FF FF     
   6576 FFFC83DA FF FF FF FF FF FF FF FF     
   6577 FFFC83E2 FF FF FF FF FF FF FF FF     
   6578 FFFC83EA FF FF FF FF FF FF FF FF     
   6579 FFFC83F2 FF FF FF FF FF FF FF FF     
   6580 FFFC83FA FF FF FF FF FF FF FF FF     
   6581 FFFC8402 FF FF FF FF FF FF FF FF     
   6582 FFFC840A FF FF FF FF FF FF FF FF     
   6583 FFFC8412 FF FF FF FF FF FF FF FF     
   6584 FFFC841A FF FF FF FF FF FF FF FF     
   6585 FFFC8422 FF FF FF FF FF FF FF FF     
   6586 FFFC842A FF FF FF FF FF FF FF FF     
   6587 FFFC8432 FF FF FF FF FF FF FF FF     
   6588 FFFC843A FF FF FF FF FF FF FF FF     
   6589 FFFC8442 FF FF FF FF FF FF FF FF     
   6590 FFFC844A FF FF FF FF FF FF FF FF     
   6591 FFFC8452 FF FF FF FF FF FF FF FF     
   6592 FFFC845A FF FF FF FF FF FF FF FF     
   6593 FFFC8462 FF FF FF FF FF FF FF FF     
   6594 FFFC846A FF FF FF FF FF FF FF FF     
   6595 FFFC8472 FF FF FF FF FF FF FF FF     
   6596 FFFC847A FF FF FF FF FF FF FF FF     
   6597 FFFC8482 FF FF FF FF FF FF FF FF     
   6598 FFFC848A FF FF FF FF FF FF FF FF     
   6599 FFFC8492 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 53
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6600 FFFC849A FF FF FF FF FF FF FF FF     
   6601 FFFC84A2 FF FF FF FF FF FF FF FF     
   6602 FFFC84AA FF FF FF FF FF FF FF FF     
   6603 FFFC84B2 FF FF FF FF FF FF FF FF     
   6604 FFFC84BA FF FF FF FF FF FF FF FF     
   6605 FFFC84C2 FF FF FF FF FF FF FF FF     
   6606 FFFC84CA FF FF FF FF FF FF FF FF     
   6607 FFFC84D2 FF FF FF FF FF FF FF FF     
   6608 FFFC84DA FF FF FF FF FF FF FF FF     
   6609 FFFC84E2 FF FF FF FF FF FF FF FF     
   6610 FFFC84EA FF FF FF FF FF FF FF FF     
   6611 FFFC84F2 FF FF FF FF FF FF FF FF     
   6612 FFFC84FA FF FF FF FF FF FF FF FF     
   6613 FFFC8502 FF FF FF FF FF FF FF FF     
   6614 FFFC850A FF FF FF FF FF FF FF FF     
   6615 FFFC8512 FF FF FF FF FF FF FF FF     
   6616 FFFC851A FF FF FF FF FF FF FF FF     
   6617 FFFC8522 FF FF FF FF FF FF FF FF     
   6618 FFFC852A FF FF FF FF FF FF FF FF     
   6619 FFFC8532 FF FF FF FF FF FF FF FF     
   6620 FFFC853A FF FF FF FF FF FF FF FF     
   6621 FFFC8542 FF FF FF FF FF FF FF FF     
   6622 FFFC854A FF FF FF FF FF FF FF FF     
   6623 FFFC8552 FF FF FF FF FF FF FF FF     
   6624 FFFC855A FF FF FF FF FF FF FF FF     
   6625 FFFC8562 FF FF FF FF FF FF FF FF     
   6626 FFFC856A FF FF FF FF FF FF FF FF     
   6627 FFFC8572 FF FF FF FF FF FF FF FF     
   6628 FFFC857A FF FF FF FF FF FF FF FF     
   6629 FFFC8582 FF FF FF FF FF FF FF FF     
   6630 FFFC858A FF FF FF FF FF FF FF FF     
   6631 FFFC8592 FF FF FF FF FF FF FF FF     
   6632 FFFC859A FF FF FF FF FF FF FF FF     
   6633 FFFC85A2 FF FF FF FF FF FF FF FF     
   6634 FFFC85AA FF FF FF FF FF FF FF FF     
   6635 FFFC85B2 FF FF FF FF FF FF FF FF     
   6636 FFFC85BA FF FF FF FF FF FF FF FF     
   6637 FFFC85C2 FF FF FF FF FF FF FF FF     
   6638 FFFC85CA FF FF FF FF FF FF FF FF     
   6639 FFFC85D2 FF FF FF FF FF FF FF FF     
   6640 FFFC85DA FF FF FF FF FF FF FF FF     
   6641 FFFC85E2 FF FF FF FF FF FF FF FF     
   6642 FFFC85EA FF FF FF FF FF FF FF FF     
   6643 FFFC85F2 FF FF FF FF FF FF FF FF     
   6644 FFFC85FA FF FF FF FF FF FF FF FF     
   6645 FFFC8602 FF FF FF FF FF FF FF FF     
   6646 FFFC860A FF FF FF FF FF FF FF FF     
   6647 FFFC8612 FF FF FF FF FF FF FF FF     
   6648 FFFC861A FF FF FF FF FF FF FF FF     
   6649 FFFC8622 FF FF FF FF FF FF FF FF     
   6650 FFFC862A FF FF FF FF FF FF FF FF     
   6651 FFFC8632 FF FF FF FF FF FF FF FF     
   6652 FFFC863A FF FF FF FF FF FF FF FF     
   6653 FFFC8642 FF FF FF FF FF FF FF FF     
   6654 FFFC864A FF FF FF FF FF FF FF FF     
   6655 FFFC8652 FF FF FF FF FF FF FF FF     
   6656 FFFC865A FF FF FF FF FF FF FF FF     
   6657 FFFC8662 FF FF FF FF FF FF FF FF     
   6658 FFFC866A FF FF FF FF FF FF FF FF     
   6659 FFFC8672 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 54
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6660 FFFC867A FF FF FF FF FF FF FF FF     
   6661 FFFC8682 FF FF FF FF FF FF FF FF     
   6662 FFFC868A FF FF FF FF FF FF FF FF     
   6663 FFFC8692 FF FF FF FF FF FF FF FF     
   6664 FFFC869A FF FF FF FF FF FF FF FF     
   6665 FFFC86A2 FF FF FF FF FF FF FF FF     
   6666 FFFC86AA FF FF FF FF FF FF FF FF     
   6667 FFFC86B2 FF FF FF FF FF FF FF FF     
   6668 FFFC86BA FF FF FF FF FF FF FF FF     
   6669 FFFC86C2 FF FF FF FF FF FF FF FF     
   6670 FFFC86CA FF FF FF FF FF FF FF FF     
   6671 FFFC86D2 FF FF FF FF FF FF FF FF     
   6672 FFFC86DA FF FF FF FF FF FF FF FF     
   6673 FFFC86E2 FF FF FF FF FF FF FF FF     
   6674 FFFC86EA FF FF FF FF FF FF FF FF     
   6675 FFFC86F2 FF FF FF FF FF FF FF FF     
   6676 FFFC86FA FF FF FF FF FF FF FF FF     
   6677 FFFC8702 FF FF FF FF FF FF FF FF     
   6678 FFFC870A FF FF FF FF FF FF FF FF     
   6679 FFFC8712 FF FF FF FF FF FF FF FF     
   6680 FFFC871A FF FF FF FF FF FF FF FF     
   6681 FFFC8722 FF FF FF FF FF FF FF FF     
   6682 FFFC872A FF FF FF FF FF FF FF FF     
   6683 FFFC8732 FF FF FF FF FF FF FF FF     
   6684 FFFC873A FF FF FF FF FF FF FF FF     
   6685 FFFC8742 FF FF FF FF FF FF FF FF     
   6686 FFFC874A FF FF FF FF FF FF FF FF     
   6687 FFFC8752 FF FF FF FF FF FF FF FF     
   6688 FFFC875A FF FF FF FF FF FF FF FF     
   6689 FFFC8762 FF FF FF FF FF FF FF FF     
   6690 FFFC876A FF FF FF FF FF FF FF FF     
   6691 FFFC8772 FF FF FF FF FF FF FF FF     
   6692 FFFC877A FF FF FF FF FF FF FF FF     
   6693 FFFC8782 FF FF FF FF FF FF FF FF     
   6694 FFFC878A FF FF FF FF FF FF FF FF     
   6695 FFFC8792 FF FF FF FF FF FF FF FF     
   6696 FFFC879A FF FF FF FF FF FF FF FF     
   6697 FFFC87A2 FF FF FF FF FF FF FF FF     
   6698 FFFC87AA FF FF FF FF FF FF FF FF     
   6699 FFFC87B2 FF FF FF FF FF FF FF FF     
   6700 FFFC87BA FF FF FF FF FF FF FF FF     
   6701 FFFC87C2 FF FF FF FF FF FF FF FF     
   6702 FFFC87CA FF FF FF FF FF FF FF FF     
   6703 FFFC87D2 FF FF FF FF FF FF FF FF     
   6704 FFFC87DA FF FF FF FF FF FF FF FF     
   6705 FFFC87E2 FF FF FF FF FF FF FF FF     
   6706 FFFC87EA FF FF FF FF FF FF FF FF     
   6707 FFFC87F2 FF FF FF FF FF FF FF FF     
   6708 FFFC87FA FF FF FF FF FF FF FF FF     
   6709 FFFC8802 FF FF FF FF FF FF FF FF     
   6710 FFFC880A FF FF FF FF FF FF FF FF     
   6711 FFFC8812 FF FF FF FF FF FF FF FF     
   6712 FFFC881A FF FF FF FF FF FF FF FF     
   6713 FFFC8822 FF FF FF FF FF FF FF FF     
   6714 FFFC882A FF FF FF FF FF FF FF FF     
   6715 FFFC8832 FF FF FF FF FF FF FF FF     
   6716 FFFC883A FF FF FF FF FF FF FF FF     
   6717 FFFC8842 FF FF FF FF FF FF FF FF     
   6718 FFFC884A FF FF FF FF FF FF FF FF     
   6719 FFFC8852 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 55
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6720 FFFC885A FF FF FF FF FF FF FF FF     
   6721 FFFC8862 FF FF FF FF FF FF FF FF     
   6722 FFFC886A FF FF FF FF FF FF FF FF     
   6723 FFFC8872 FF FF FF FF FF FF FF FF     
   6724 FFFC887A FF FF FF FF FF FF FF FF     
   6725 FFFC8882 FF FF FF FF FF FF FF FF     
   6726 FFFC888A FF FF FF FF FF FF FF FF     
   6727 FFFC8892 FF FF FF FF FF FF FF FF     
   6728 FFFC889A FF FF FF FF FF FF FF FF     
   6729 FFFC88A2 FF FF FF FF FF FF FF FF     
   6730 FFFC88AA FF FF FF FF FF FF FF FF     
   6731 FFFC88B2 FF FF FF FF FF FF FF FF     
   6732 FFFC88BA FF FF FF FF FF FF FF FF     
   6733 FFFC88C2 FF FF FF FF FF FF FF FF     
   6734 FFFC88CA FF FF FF FF FF FF FF FF     
   6735 FFFC88D2 FF FF FF FF FF FF FF FF     
   6736 FFFC88DA FF FF FF FF FF FF FF FF     
   6737 FFFC88E2 FF FF FF FF FF FF FF FF     
   6738 FFFC88EA FF FF FF FF FF FF FF FF     
   6739 FFFC88F2 FF FF FF FF FF FF FF FF     
   6740 FFFC88FA FF FF FF FF FF FF FF FF     
   6741 FFFC8902 FF FF FF FF FF FF FF FF     
   6742 FFFC890A FF FF FF FF FF FF FF FF     
   6743 FFFC8912 FF FF FF FF FF FF FF FF     
   6744 FFFC891A FF FF FF FF FF FF FF FF     
   6745 FFFC8922 FF FF FF FF FF FF FF FF     
   6746 FFFC892A FF FF FF FF FF FF FF FF     
   6747 FFFC8932 FF FF FF FF FF FF FF FF     
   6748 FFFC893A FF FF FF FF FF FF FF FF     
   6749 FFFC8942 FF FF FF FF FF FF FF FF     
   6750 FFFC894A FF FF FF FF FF FF FF FF     
   6751 FFFC8952 FF FF FF FF FF FF FF FF     
   6752 FFFC895A FF FF FF FF FF FF FF FF     
   6753 FFFC8962 FF FF FF FF FF FF FF FF     
   6754 FFFC896A FF FF FF FF FF FF FF FF     
   6755 FFFC8972 FF FF FF FF FF FF FF FF     
   6756 FFFC897A FF FF FF FF FF FF FF FF     
   6757 FFFC8982 FF FF FF FF FF FF FF FF     
   6758 FFFC898A FF FF FF FF FF FF FF FF     
   6759 FFFC8992 FF FF FF FF FF FF FF FF     
   6760 FFFC899A FF FF FF FF FF FF FF FF     
   6761 FFFC89A2 FF FF FF FF FF FF FF FF     
   6762 FFFC89AA FF FF FF FF FF FF FF FF     
   6763 FFFC89B2 FF FF FF FF FF FF FF FF     
   6764 FFFC89BA FF FF FF FF FF FF FF FF     
   6765 FFFC89C2 FF FF FF FF FF FF FF FF     
   6766 FFFC89CA FF FF FF FF FF FF FF FF     
   6767 FFFC89D2 FF FF FF FF FF FF FF FF     
   6768 FFFC89DA FF FF FF FF FF FF FF FF     
   6769 FFFC89E2 FF FF FF FF FF FF FF FF     
   6770 FFFC89EA FF FF FF FF FF FF FF FF     
   6771 FFFC89F2 FF FF FF FF FF FF FF FF     
   6772 FFFC89FA FF FF FF FF FF FF FF FF     
   6773 FFFC8A02 FF FF FF FF FF FF FF FF     
   6774 FFFC8A0A FF FF FF FF FF FF FF FF     
   6775 FFFC8A12 FF FF FF FF FF FF FF FF     
   6776 FFFC8A1A FF FF FF FF FF FF FF FF     
   6777 FFFC8A22 FF FF FF FF FF FF FF FF     
   6778 FFFC8A2A FF FF FF FF FF FF FF FF     
   6779 FFFC8A32 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 56
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6780 FFFC8A3A FF FF FF FF FF FF FF FF     
   6781 FFFC8A42 FF FF FF FF FF FF FF FF     
   6782 FFFC8A4A FF FF FF FF FF FF FF FF     
   6783 FFFC8A52 FF FF FF FF FF FF FF FF     
   6784 FFFC8A5A FF FF FF FF FF FF FF FF     
   6785 FFFC8A62 FF FF FF FF FF FF FF FF     
   6786 FFFC8A6A FF FF FF FF FF FF FF FF     
   6787 FFFC8A72 FF FF FF FF FF FF FF FF     
   6788 FFFC8A7A FF FF FF FF FF FF FF FF     
   6789 FFFC8A82 FF FF FF FF FF FF FF FF     
   6790 FFFC8A8A FF FF FF FF FF FF FF FF     
   6791 FFFC8A92 FF FF FF FF FF FF FF FF     
   6792 FFFC8A9A FF FF FF FF FF FF FF FF     
   6793 FFFC8AA2 FF FF FF FF FF FF FF FF     
   6794 FFFC8AAA FF FF FF FF FF FF FF FF     
   6795 FFFC8AB2 FF FF FF FF FF FF FF FF     
   6796 FFFC8ABA FF FF FF FF FF FF FF FF     
   6797 FFFC8AC2 FF FF FF FF FF FF FF FF     
   6798 FFFC8ACA FF FF FF FF FF FF FF FF     
   6799 FFFC8AD2 FF FF FF FF FF FF FF FF     
   6800 FFFC8ADA FF FF FF FF FF FF FF FF     
   6801 FFFC8AE2 FF FF FF FF FF FF FF FF     
   6802 FFFC8AEA FF FF FF FF FF FF FF FF     
   6803 FFFC8AF2 FF FF FF FF FF FF FF FF     
   6804 FFFC8AFA FF FF FF FF FF FF FF FF     
   6805 FFFC8B02 FF FF FF FF FF FF FF FF     
   6806 FFFC8B0A FF FF FF FF FF FF FF FF     
   6807 FFFC8B12 FF FF FF FF FF FF FF FF     
   6808 FFFC8B1A FF FF FF FF FF FF FF FF     
   6809 FFFC8B22 FF FF FF FF FF FF FF FF     
   6810 FFFC8B2A FF FF FF FF FF FF FF FF     
   6811 FFFC8B32 FF FF FF FF FF FF FF FF     
   6812 FFFC8B3A FF FF FF FF FF FF FF FF     
   6813 FFFC8B42 FF FF FF FF FF FF FF FF     
   6814 FFFC8B4A FF FF FF FF FF FF FF FF     
   6815 FFFC8B52 FF FF FF FF FF FF FF FF     
   6816 FFFC8B5A FF FF FF FF FF FF FF FF     
   6817 FFFC8B62 FF FF FF FF FF FF FF FF     
   6818 FFFC8B6A FF FF FF FF FF FF FF FF     
   6819 FFFC8B72 FF FF FF FF FF FF FF FF     
   6820 FFFC8B7A FF FF FF FF FF FF FF FF     
   6821 FFFC8B82 FF FF FF FF FF FF FF FF     
   6822 FFFC8B8A FF FF FF FF FF FF FF FF     
   6823 FFFC8B92 FF FF FF FF FF FF FF FF     
   6824 FFFC8B9A FF FF FF FF FF FF FF FF     
   6825 FFFC8BA2 FF FF FF FF FF FF FF FF     
   6826 FFFC8BAA FF FF FF FF FF FF FF FF     
   6827 FFFC8BB2 FF FF FF FF FF FF FF FF     
   6828 FFFC8BBA FF FF FF FF FF FF FF FF     
   6829 FFFC8BC2 FF FF FF FF FF FF FF FF     
   6830 FFFC8BCA FF FF FF FF FF FF FF FF     
   6831 FFFC8BD2 FF FF FF FF FF FF FF FF     
   6832 FFFC8BDA FF FF FF FF FF FF FF FF     
   6833 FFFC8BE2 FF FF FF FF FF FF FF FF     
   6834 FFFC8BEA FF FF FF FF FF FF FF FF     
   6835 FFFC8BF2 FF FF FF FF FF FF FF FF     
   6836 FFFC8BFA FF FF FF FF FF FF FF FF     
   6837 FFFC8C02 FF FF FF FF FF FF FF FF     
   6838 FFFC8C0A FF FF FF FF FF FF FF FF     
   6839 FFFC8C12 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 57
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6840 FFFC8C1A FF FF FF FF FF FF FF FF     
   6841 FFFC8C22 FF FF FF FF FF FF FF FF     
   6842 FFFC8C2A FF FF FF FF FF FF FF FF     
   6843 FFFC8C32 FF FF FF FF FF FF FF FF     
   6844 FFFC8C3A FF FF FF FF FF FF FF FF     
   6845 FFFC8C42 FF FF FF FF FF FF FF FF     
   6846 FFFC8C4A FF FF FF FF FF FF FF FF     
   6847 FFFC8C52 FF FF FF FF FF FF FF FF     
   6848 FFFC8C5A FF FF FF FF FF FF FF FF     
   6849 FFFC8C62 FF FF FF FF FF FF FF FF     
   6850 FFFC8C6A FF FF FF FF FF FF FF FF     
   6851 FFFC8C72 FF FF FF FF FF FF FF FF     
   6852 FFFC8C7A FF FF FF FF FF FF FF FF     
   6853 FFFC8C82 FF FF FF FF FF FF FF FF     
   6854 FFFC8C8A FF FF FF FF FF FF FF FF     
   6855 FFFC8C92 FF FF FF FF FF FF FF FF     
   6856 FFFC8C9A FF FF FF FF FF FF FF FF     
   6857 FFFC8CA2 FF FF FF FF FF FF FF FF     
   6858 FFFC8CAA FF FF FF FF FF FF FF FF     
   6859 FFFC8CB2 FF FF FF FF FF FF FF FF     
   6860 FFFC8CBA FF FF FF FF FF FF FF FF     
   6861 FFFC8CC2 FF FF FF FF FF FF FF FF     
   6862 FFFC8CCA FF FF FF FF FF FF FF FF     
   6863 FFFC8CD2 FF FF FF FF FF FF FF FF     
   6864 FFFC8CDA FF FF FF FF FF FF FF FF     
   6865 FFFC8CE2 FF FF FF FF FF FF FF FF     
   6866 FFFC8CEA FF FF FF FF FF FF FF FF     
   6867 FFFC8CF2 FF FF FF FF FF FF FF FF     
   6868 FFFC8CFA FF FF FF FF FF FF FF FF     
   6869 FFFC8D02 FF FF FF FF FF FF FF FF     
   6870 FFFC8D0A FF FF FF FF FF FF FF FF     
   6871 FFFC8D12 FF FF FF FF FF FF FF FF     
   6872 FFFC8D1A FF FF FF FF FF FF FF FF     
   6873 FFFC8D22 FF FF FF FF FF FF FF FF     
   6874 FFFC8D2A FF FF FF FF FF FF FF FF     
   6875 FFFC8D32 FF FF FF FF FF FF FF FF     
   6876 FFFC8D3A FF FF FF FF FF FF FF FF     
   6877 FFFC8D42 FF FF FF FF FF FF FF FF     
   6878 FFFC8D4A FF FF FF FF FF FF FF FF     
   6879 FFFC8D52 FF FF FF FF FF FF FF FF     
   6880 FFFC8D5A FF FF FF FF FF FF FF FF     
   6881 FFFC8D62 FF FF FF FF FF FF FF FF     
   6882 FFFC8D6A FF FF FF FF FF FF FF FF     
   6883 FFFC8D72 FF FF FF FF FF FF FF FF     
   6884 FFFC8D7A FF FF FF FF FF FF FF FF     
   6885 FFFC8D82 FF FF FF FF FF FF FF FF     
   6886 FFFC8D8A FF FF FF FF FF FF FF FF     
   6887 FFFC8D92 FF FF FF FF FF FF FF FF     
   6888 FFFC8D9A FF FF FF FF FF FF FF FF     
   6889 FFFC8DA2 FF FF FF FF FF FF FF FF     
   6890 FFFC8DAA FF FF FF FF FF FF FF FF     
   6891 FFFC8DB2 FF FF FF FF FF FF FF FF     
   6892 FFFC8DBA FF FF FF FF FF FF FF FF     
   6893 FFFC8DC2 FF FF FF FF FF FF FF FF     
   6894 FFFC8DCA FF FF FF FF FF FF FF FF     
   6895 FFFC8DD2 FF FF FF FF FF FF FF FF     
   6896 FFFC8DDA FF FF FF FF FF FF FF FF     
   6897 FFFC8DE2 FF FF FF FF FF FF FF FF     
   6898 FFFC8DEA FF FF FF FF FF FF FF FF     
   6899 FFFC8DF2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 58
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6900 FFFC8DFA FF FF FF FF FF FF FF FF     
   6901 FFFC8E02 FF FF FF FF FF FF FF FF     
   6902 FFFC8E0A FF FF FF FF FF FF FF FF     
   6903 FFFC8E12 FF FF FF FF FF FF FF FF     
   6904 FFFC8E1A FF FF FF FF FF FF FF FF     
   6905 FFFC8E22 FF FF FF FF FF FF FF FF     
   6906 FFFC8E2A FF FF FF FF FF FF FF FF     
   6907 FFFC8E32 FF FF FF FF FF FF FF FF     
   6908 FFFC8E3A FF FF FF FF FF FF FF FF     
   6909 FFFC8E42 FF FF FF FF FF FF FF FF     
   6910 FFFC8E4A FF FF FF FF FF FF FF FF     
   6911 FFFC8E52 FF FF FF FF FF FF FF FF     
   6912 FFFC8E5A FF FF FF FF FF FF FF FF     
   6913 FFFC8E62 FF FF FF FF FF FF FF FF     
   6914 FFFC8E6A FF FF FF FF FF FF FF FF     
   6915 FFFC8E72 FF FF FF FF FF FF FF FF     
   6916 FFFC8E7A FF FF FF FF FF FF FF FF     
   6917 FFFC8E82 FF FF FF FF FF FF FF FF     
   6918 FFFC8E8A FF FF FF FF FF FF FF FF     
   6919 FFFC8E92 FF FF FF FF FF FF FF FF     
   6920 FFFC8E9A FF FF FF FF FF FF FF FF     
   6921 FFFC8EA2 FF FF FF FF FF FF FF FF     
   6922 FFFC8EAA FF FF FF FF FF FF FF FF     
   6923 FFFC8EB2 FF FF FF FF FF FF FF FF     
   6924 FFFC8EBA FF FF FF FF FF FF FF FF     
   6925 FFFC8EC2 FF FF FF FF FF FF FF FF     
   6926 FFFC8ECA FF FF FF FF FF FF FF FF     
   6927 FFFC8ED2 FF FF FF FF FF FF FF FF     
   6928 FFFC8EDA FF FF FF FF FF FF FF FF     
   6929 FFFC8EE2 FF FF FF FF FF FF FF FF     
   6930 FFFC8EEA FF FF FF FF FF FF FF FF     
   6931 FFFC8EF2 FF FF FF FF FF FF FF FF     
   6932 FFFC8EFA FF FF FF FF FF FF FF FF     
   6933 FFFC8F02 FF FF FF FF FF FF FF FF     
   6934 FFFC8F0A FF FF FF FF FF FF FF FF     
   6935 FFFC8F12 FF FF FF FF FF FF FF FF     
   6936 FFFC8F1A FF FF FF FF FF FF FF FF     
   6937 FFFC8F22 FF FF FF FF FF FF FF FF     
   6938 FFFC8F2A FF FF FF FF FF FF FF FF     
   6939 FFFC8F32 FF FF FF FF FF FF FF FF     
   6940 FFFC8F3A FF FF FF FF FF FF FF FF     
   6941 FFFC8F42 FF FF FF FF FF FF FF FF     
   6942 FFFC8F4A FF FF FF FF FF FF FF FF     
   6943 FFFC8F52 FF FF FF FF FF FF FF FF     
   6944 FFFC8F5A FF FF FF FF FF FF FF FF     
   6945 FFFC8F62 FF FF FF FF FF FF FF FF     
   6946 FFFC8F6A FF FF FF FF FF FF FF FF     
   6947 FFFC8F72 FF FF FF FF FF FF FF FF     
   6948 FFFC8F7A FF FF FF FF FF FF FF FF     
   6949 FFFC8F82 FF FF FF FF FF FF FF FF     
   6950 FFFC8F8A FF FF FF FF FF FF FF FF     
   6951 FFFC8F92 FF FF FF FF FF FF FF FF     
   6952 FFFC8F9A FF FF FF FF FF FF FF FF     
   6953 FFFC8FA2 FF FF FF FF FF FF FF FF     
   6954 FFFC8FAA FF FF FF FF FF FF FF FF     
   6955 FFFC8FB2 FF FF FF FF FF FF FF FF     
   6956 FFFC8FBA FF FF FF FF FF FF FF FF     
   6957 FFFC8FC2 FF FF FF FF FF FF FF FF     
   6958 FFFC8FCA FF FF FF FF FF FF FF FF     
   6959 FFFC8FD2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 59
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   6960 FFFC8FDA FF FF FF FF FF FF FF FF     
   6961 FFFC8FE2 FF FF FF FF FF FF FF FF     
   6962 FFFC8FEA FF FF FF FF FF FF FF FF     
   6963 FFFC8FF2 FF FF FF FF FF FF FF FF     
   6964 FFFC8FFA FF FF FF FF FF FF FF FF     
   6965 FFFC9002 FF FF FF FF FF FF FF FF     
   6966 FFFC900A FF FF FF FF FF FF FF FF     
   6967 FFFC9012 FF FF FF FF FF FF FF FF     
   6968 FFFC901A FF FF FF FF FF FF FF FF     
   6969 FFFC9022 FF FF FF FF FF FF FF FF     
   6970 FFFC902A FF FF FF FF FF FF FF FF     
   6971 FFFC9032 FF FF FF FF FF FF FF FF     
   6972 FFFC903A FF FF FF FF FF FF FF FF     
   6973 FFFC9042 FF FF FF FF FF FF FF FF     
   6974 FFFC904A FF FF FF FF FF FF FF FF     
   6975 FFFC9052 FF FF FF FF FF FF FF FF     
   6976 FFFC905A FF FF FF FF FF FF FF FF     
   6977 FFFC9062 FF FF FF FF FF FF FF FF     
   6978 FFFC906A FF FF FF FF FF FF FF FF     
   6979 FFFC9072 FF FF FF FF FF FF FF FF     
   6980 FFFC907A FF FF FF FF FF FF FF FF     
   6981 FFFC9082 FF FF FF FF FF FF FF FF     
   6982 FFFC908A FF FF FF FF FF FF FF FF     
   6983 FFFC9092 FF FF FF FF FF FF FF FF     
   6984 FFFC909A FF FF FF FF FF FF FF FF     
   6985 FFFC90A2 FF FF FF FF FF FF FF FF     
   6986 FFFC90AA FF FF FF FF FF FF FF FF     
   6987 FFFC90B2 FF FF FF FF FF FF FF FF     
   6988 FFFC90BA FF FF FF FF FF FF FF FF     
   6989 FFFC90C2 FF FF FF FF FF FF FF FF     
   6990 FFFC90CA FF FF FF FF FF FF FF FF     
   6991 FFFC90D2 FF FF FF FF FF FF FF FF     
   6992 FFFC90DA FF FF FF FF FF FF FF FF     
   6993 FFFC90E2 FF FF FF FF FF FF FF FF     
   6994 FFFC90EA FF FF FF FF FF FF FF FF     
   6995 FFFC90F2 FF FF FF FF FF FF FF FF     
   6996 FFFC90FA FF FF FF FF FF FF FF FF     
   6997 FFFC9102 FF FF FF FF FF FF FF FF     
   6998 FFFC910A FF FF FF FF FF FF FF FF     
   6999 FFFC9112 FF FF FF FF FF FF FF FF     
   7000 FFFC911A FF FF FF FF FF FF FF FF     
   7001 FFFC9122 FF FF FF FF FF FF FF FF     
   7002 FFFC912A FF FF FF FF FF FF FF FF     
   7003 FFFC9132 FF FF FF FF FF FF FF FF     
   7004 FFFC913A FF FF FF FF FF FF FF FF     
   7005 FFFC9142 FF FF FF FF FF FF FF FF     
   7006 FFFC914A FF FF FF FF FF FF FF FF     
   7007 FFFC9152 FF FF FF FF FF FF FF FF     
   7008 FFFC915A FF FF FF FF FF FF FF FF     
   7009 FFFC9162 FF FF FF FF FF FF FF FF     
   7010 FFFC916A FF FF FF FF FF FF FF FF     
   7011 FFFC9172 FF FF FF FF FF FF FF FF     
   7012 FFFC917A FF FF FF FF FF FF FF FF     
   7013 FFFC9182 FF FF FF FF FF FF FF FF     
   7014 FFFC918A FF FF FF FF FF FF FF FF     
   7015 FFFC9192 FF FF FF FF FF FF FF FF     
   7016 FFFC919A FF FF FF FF FF FF FF FF     
   7017 FFFC91A2 FF FF FF FF FF FF FF FF     
   7018 FFFC91AA FF FF FF FF FF FF FF FF     
   7019 FFFC91B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 60
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7020 FFFC91BA FF FF FF FF FF FF FF FF     
   7021 FFFC91C2 FF FF FF FF FF FF FF FF     
   7022 FFFC91CA FF FF FF FF FF FF FF FF     
   7023 FFFC91D2 FF FF FF FF FF FF FF FF     
   7024 FFFC91DA FF FF FF FF FF FF FF FF     
   7025 FFFC91E2 FF FF FF FF FF FF FF FF     
   7026 FFFC91EA FF FF FF FF FF FF FF FF     
   7027 FFFC91F2 FF FF FF FF FF FF FF FF     
   7028 FFFC91FA FF FF FF FF FF FF FF FF     
   7029 FFFC9202 FF FF FF FF FF FF FF FF     
   7030 FFFC920A FF FF FF FF FF FF FF FF     
   7031 FFFC9212 FF FF FF FF FF FF FF FF     
   7032 FFFC921A FF FF FF FF FF FF FF FF     
   7033 FFFC9222 FF FF FF FF FF FF FF FF     
   7034 FFFC922A FF FF FF FF FF FF FF FF     
   7035 FFFC9232 FF FF FF FF FF FF FF FF     
   7036 FFFC923A FF FF FF FF FF FF FF FF     
   7037 FFFC9242 FF FF FF FF FF FF FF FF     
   7038 FFFC924A FF FF FF FF FF FF FF FF     
   7039 FFFC9252 FF FF FF FF FF FF FF FF     
   7040 FFFC925A FF FF FF FF FF FF FF FF     
   7041 FFFC9262 FF FF FF FF FF FF FF FF     
   7042 FFFC926A FF FF FF FF FF FF FF FF     
   7043 FFFC9272 FF FF FF FF FF FF FF FF     
   7044 FFFC927A FF FF FF FF FF FF FF FF     
   7045 FFFC9282 FF FF FF FF FF FF FF FF     
   7046 FFFC928A FF FF FF FF FF FF FF FF     
   7047 FFFC9292 FF FF FF FF FF FF FF FF     
   7048 FFFC929A FF FF FF FF FF FF FF FF     
   7049 FFFC92A2 FF FF FF FF FF FF FF FF     
   7050 FFFC92AA FF FF FF FF FF FF FF FF     
   7051 FFFC92B2 FF FF FF FF FF FF FF FF     
   7052 FFFC92BA FF FF FF FF FF FF FF FF     
   7053 FFFC92C2 FF FF FF FF FF FF FF FF     
   7054 FFFC92CA FF FF FF FF FF FF FF FF     
   7055 FFFC92D2 FF FF FF FF FF FF FF FF     
   7056 FFFC92DA FF FF FF FF FF FF FF FF     
   7057 FFFC92E2 FF FF FF FF FF FF FF FF     
   7058 FFFC92EA FF FF FF FF FF FF FF FF     
   7059 FFFC92F2 FF FF FF FF FF FF FF FF     
   7060 FFFC92FA FF FF FF FF FF FF FF FF     
   7061 FFFC9302 FF FF FF FF FF FF FF FF     
   7062 FFFC930A FF FF FF FF FF FF FF FF     
   7063 FFFC9312 FF FF FF FF FF FF FF FF     
   7064 FFFC931A FF FF FF FF FF FF FF FF     
   7065 FFFC9322 FF FF FF FF FF FF FF FF     
   7066 FFFC932A FF FF FF FF FF FF FF FF     
   7067 FFFC9332 FF FF FF FF FF FF FF FF     
   7068 FFFC933A FF FF FF FF FF FF FF FF     
   7069 FFFC9342 FF FF FF FF FF FF FF FF     
   7070 FFFC934A FF FF FF FF FF FF FF FF     
   7071 FFFC9352 FF FF FF FF FF FF FF FF     
   7072 FFFC935A FF FF FF FF FF FF FF FF     
   7073 FFFC9362 FF FF FF FF FF FF FF FF     
   7074 FFFC936A FF FF FF FF FF FF FF FF     
   7075 FFFC9372 FF FF FF FF FF FF FF FF     
   7076 FFFC937A FF FF FF FF FF FF FF FF     
   7077 FFFC9382 FF FF FF FF FF FF FF FF     
   7078 FFFC938A FF FF FF FF FF FF FF FF     
   7079 FFFC9392 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 61
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7080 FFFC939A FF FF FF FF FF FF FF FF     
   7081 FFFC93A2 FF FF FF FF FF FF FF FF     
   7082 FFFC93AA FF FF FF FF FF FF FF FF     
   7083 FFFC93B2 FF FF FF FF FF FF FF FF     
   7084 FFFC93BA FF FF FF FF FF FF FF FF     
   7085 FFFC93C2 FF FF FF FF FF FF FF FF     
   7086 FFFC93CA FF FF FF FF FF FF FF FF     
   7087 FFFC93D2 FF FF FF FF FF FF FF FF     
   7088 FFFC93DA FF FF FF FF FF FF FF FF     
   7089 FFFC93E2 FF FF FF FF FF FF FF FF     
   7090 FFFC93EA FF FF FF FF FF FF FF FF     
   7091 FFFC93F2 FF FF FF FF FF FF FF FF     
   7092 FFFC93FA FF FF FF FF FF FF FF FF     
   7093 FFFC9402 FF FF FF FF FF FF FF FF     
   7094 FFFC940A FF FF FF FF FF FF FF FF     
   7095 FFFC9412 FF FF FF FF FF FF FF FF     
   7096 FFFC941A FF FF FF FF FF FF FF FF     
   7097 FFFC9422 FF FF FF FF FF FF FF FF     
   7098 FFFC942A FF FF FF FF FF FF FF FF     
   7099 FFFC9432 FF FF FF FF FF FF FF FF     
   7100 FFFC943A FF FF FF FF FF FF FF FF     
   7101 FFFC9442 FF FF FF FF FF FF FF FF     
   7102 FFFC944A FF FF FF FF FF FF FF FF     
   7103 FFFC9452 FF FF FF FF FF FF FF FF     
   7104 FFFC945A FF FF FF FF FF FF FF FF     
   7105 FFFC9462 FF FF FF FF FF FF FF FF     
   7106 FFFC946A FF FF FF FF FF FF FF FF     
   7107 FFFC9472 FF FF FF FF FF FF FF FF     
   7108 FFFC947A FF FF FF FF FF FF FF FF     
   7109 FFFC9482 FF FF FF FF FF FF FF FF     
   7110 FFFC948A FF FF FF FF FF FF FF FF     
   7111 FFFC9492 FF FF FF FF FF FF FF FF     
   7112 FFFC949A FF FF FF FF FF FF FF FF     
   7113 FFFC94A2 FF FF FF FF FF FF FF FF     
   7114 FFFC94AA FF FF FF FF FF FF FF FF     
   7115 FFFC94B2 FF FF FF FF FF FF FF FF     
   7116 FFFC94BA FF FF FF FF FF FF FF FF     
   7117 FFFC94C2 FF FF FF FF FF FF FF FF     
   7118 FFFC94CA FF FF FF FF FF FF FF FF     
   7119 FFFC94D2 FF FF FF FF FF FF FF FF     
   7120 FFFC94DA FF FF FF FF FF FF FF FF     
   7121 FFFC94E2 FF FF FF FF FF FF FF FF     
   7122 FFFC94EA FF FF FF FF FF FF FF FF     
   7123 FFFC94F2 FF FF FF FF FF FF FF FF     
   7124 FFFC94FA FF FF FF FF FF FF FF FF     
   7125 FFFC9502 FF FF FF FF FF FF FF FF     
   7126 FFFC950A FF FF FF FF FF FF FF FF     
   7127 FFFC9512 FF FF FF FF FF FF FF FF     
   7128 FFFC951A FF FF FF FF FF FF FF FF     
   7129 FFFC9522 FF FF FF FF FF FF FF FF     
   7130 FFFC952A FF FF FF FF FF FF FF FF     
   7131 FFFC9532 FF FF FF FF FF FF FF FF     
   7132 FFFC953A FF FF FF FF FF FF FF FF     
   7133 FFFC9542 FF FF FF FF FF FF FF FF     
   7134 FFFC954A FF FF FF FF FF FF FF FF     
   7135 FFFC9552 FF FF FF FF FF FF FF FF     
   7136 FFFC955A FF FF FF FF FF FF FF FF     
   7137 FFFC9562 FF FF FF FF FF FF FF FF     
   7138 FFFC956A FF FF FF FF FF FF FF FF     
   7139 FFFC9572 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 62
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7140 FFFC957A FF FF FF FF FF FF FF FF     
   7141 FFFC9582 FF FF FF FF FF FF FF FF     
   7142 FFFC958A FF FF FF FF FF FF FF FF     
   7143 FFFC9592 FF FF FF FF FF FF FF FF     
   7144 FFFC959A FF FF FF FF FF FF FF FF     
   7145 FFFC95A2 FF FF FF FF FF FF FF FF     
   7146 FFFC95AA FF FF FF FF FF FF FF FF     
   7147 FFFC95B2 FF FF FF FF FF FF FF FF     
   7148 FFFC95BA FF FF FF FF FF FF FF FF     
   7149 FFFC95C2 FF FF FF FF FF FF FF FF     
   7150 FFFC95CA FF FF FF FF FF FF FF FF     
   7151 FFFC95D2 FF FF FF FF FF FF FF FF     
   7152 FFFC95DA FF FF FF FF FF FF FF FF     
   7153 FFFC95E2 FF FF FF FF FF FF FF FF     
   7154 FFFC95EA FF FF FF FF FF FF FF FF     
   7155 FFFC95F2 FF FF FF FF FF FF FF FF     
   7156 FFFC95FA FF FF FF FF FF FF FF FF     
   7157 FFFC9602 FF FF FF FF FF FF FF FF     
   7158 FFFC960A FF FF FF FF FF FF FF FF     
   7159 FFFC9612 FF FF FF FF FF FF FF FF     
   7160 FFFC961A FF FF FF FF FF FF FF FF     
   7161 FFFC9622 FF FF FF FF FF FF FF FF     
   7162 FFFC962A FF FF FF FF FF FF FF FF     
   7163 FFFC9632 FF FF FF FF FF FF FF FF     
   7164 FFFC963A FF FF FF FF FF FF FF FF     
   7165 FFFC9642 FF FF FF FF FF FF FF FF     
   7166 FFFC964A FF FF FF FF FF FF FF FF     
   7167 FFFC9652 FF FF FF FF FF FF FF FF     
   7168 FFFC965A FF FF FF FF FF FF FF FF     
   7169 FFFC9662 FF FF FF FF FF FF FF FF     
   7170 FFFC966A FF FF FF FF FF FF FF FF     
   7171 FFFC9672 FF FF FF FF FF FF FF FF     
   7172 FFFC967A FF FF FF FF FF FF FF FF     
   7173 FFFC9682 FF FF FF FF FF FF FF FF     
   7174 FFFC968A FF FF FF FF FF FF FF FF     
   7175 FFFC9692 FF FF FF FF FF FF FF FF     
   7176 FFFC969A FF FF FF FF FF FF FF FF     
   7177 FFFC96A2 FF FF FF FF FF FF FF FF     
   7178 FFFC96AA FF FF FF FF FF FF FF FF     
   7179 FFFC96B2 FF FF FF FF FF FF FF FF     
   7180 FFFC96BA FF FF FF FF FF FF FF FF     
   7181 FFFC96C2 FF FF FF FF FF FF FF FF     
   7182 FFFC96CA FF FF FF FF FF FF FF FF     
   7183 FFFC96D2 FF FF FF FF FF FF FF FF     
   7184 FFFC96DA FF FF FF FF FF FF FF FF     
   7185 FFFC96E2 FF FF FF FF FF FF FF FF     
   7186 FFFC96EA FF FF FF FF FF FF FF FF     
   7187 FFFC96F2 FF FF FF FF FF FF FF FF     
   7188 FFFC96FA FF FF FF FF FF FF FF FF     
   7189 FFFC9702 FF FF FF FF FF FF FF FF     
   7190 FFFC970A FF FF FF FF FF FF FF FF     
   7191 FFFC9712 FF FF FF FF FF FF FF FF     
   7192 FFFC971A FF FF FF FF FF FF FF FF     
   7193 FFFC9722 FF FF FF FF FF FF FF FF     
   7194 FFFC972A FF FF FF FF FF FF FF FF     
   7195 FFFC9732 FF FF FF FF FF FF FF FF     
   7196 FFFC973A FF FF FF FF FF FF FF FF     
   7197 FFFC9742 FF FF FF FF FF FF FF FF     
   7198 FFFC974A FF FF FF FF FF FF FF FF     
   7199 FFFC9752 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 63
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7200 FFFC975A FF FF FF FF FF FF FF FF     
   7201 FFFC9762 FF FF FF FF FF FF FF FF     
   7202 FFFC976A FF FF FF FF FF FF FF FF     
   7203 FFFC9772 FF FF FF FF FF FF FF FF     
   7204 FFFC977A FF FF FF FF FF FF FF FF     
   7205 FFFC9782 FF FF FF FF FF FF FF FF     
   7206 FFFC978A FF FF FF FF FF FF FF FF     
   7207 FFFC9792 FF FF FF FF FF FF FF FF     
   7208 FFFC979A FF FF FF FF FF FF FF FF     
   7209 FFFC97A2 FF FF FF FF FF FF FF FF     
   7210 FFFC97AA FF FF FF FF FF FF FF FF     
   7211 FFFC97B2 FF FF FF FF FF FF FF FF     
   7212 FFFC97BA FF FF FF FF FF FF FF FF     
   7213 FFFC97C2 FF FF FF FF FF FF FF FF     
   7214 FFFC97CA FF FF FF FF FF FF FF FF     
   7215 FFFC97D2 FF FF FF FF FF FF FF FF     
   7216 FFFC97DA FF FF FF FF FF FF FF FF     
   7217 FFFC97E2 FF FF FF FF FF FF FF FF     
   7218 FFFC97EA FF FF FF FF FF FF FF FF     
   7219 FFFC97F2 FF FF FF FF FF FF FF FF     
   7220 FFFC97FA FF FF FF FF FF FF FF FF     
   7221 FFFC9802 FF FF FF FF FF FF FF FF     
   7222 FFFC980A FF FF FF FF FF FF FF FF     
   7223 FFFC9812 FF FF FF FF FF FF FF FF     
   7224 FFFC981A FF FF FF FF FF FF FF FF     
   7225 FFFC9822 FF FF FF FF FF FF FF FF     
   7226 FFFC982A FF FF FF FF FF FF FF FF     
   7227 FFFC9832 FF FF FF FF FF FF FF FF     
   7228 FFFC983A FF FF FF FF FF FF FF FF     
   7229 FFFC9842 FF FF FF FF FF FF FF FF     
   7230 FFFC984A FF FF FF FF FF FF FF FF     
   7231 FFFC9852 FF FF FF FF FF FF FF FF     
   7232 FFFC985A FF FF FF FF FF FF FF FF     
   7233 FFFC9862 FF FF FF FF FF FF FF FF     
   7234 FFFC986A FF FF FF FF FF FF FF FF     
   7235 FFFC9872 FF FF FF FF FF FF FF FF     
   7236 FFFC987A FF FF FF FF FF FF FF FF     
   7237 FFFC9882 FF FF FF FF FF FF FF FF     
   7238 FFFC988A FF FF FF FF FF FF FF FF     
   7239 FFFC9892 FF FF FF FF FF FF FF FF     
   7240 FFFC989A FF FF FF FF FF FF FF FF     
   7241 FFFC98A2 FF FF FF FF FF FF FF FF     
   7242 FFFC98AA FF FF FF FF FF FF FF FF     
   7243 FFFC98B2 FF FF FF FF FF FF FF FF     
   7244 FFFC98BA FF FF FF FF FF FF FF FF     
   7245 FFFC98C2 FF FF FF FF FF FF FF FF     
   7246 FFFC98CA FF FF FF FF FF FF FF FF     
   7247 FFFC98D2 FF FF FF FF FF FF FF FF     
   7248 FFFC98DA FF FF FF FF FF FF FF FF     
   7249 FFFC98E2 FF FF FF FF FF FF FF FF     
   7250 FFFC98EA FF FF FF FF FF FF FF FF     
   7251 FFFC98F2 FF FF FF FF FF FF FF FF     
   7252 FFFC98FA FF FF FF FF FF FF FF FF     
   7253 FFFC9902 FF FF FF FF FF FF FF FF     
   7254 FFFC990A FF FF FF FF FF FF FF FF     
   7255 FFFC9912 FF FF FF FF FF FF FF FF     
   7256 FFFC991A FF FF FF FF FF FF FF FF     
   7257 FFFC9922 FF FF FF FF FF FF FF FF     
   7258 FFFC992A FF FF FF FF FF FF FF FF     
   7259 FFFC9932 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 64
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7260 FFFC993A FF FF FF FF FF FF FF FF     
   7261 FFFC9942 FF FF FF FF FF FF FF FF     
   7262 FFFC994A FF FF FF FF FF FF FF FF     
   7263 FFFC9952 FF FF FF FF FF FF FF FF     
   7264 FFFC995A FF FF FF FF FF FF FF FF     
   7265 FFFC9962 FF FF FF FF FF FF FF FF     
   7266 FFFC996A FF FF FF FF FF FF FF FF     
   7267 FFFC9972 FF FF FF FF FF FF FF FF     
   7268 FFFC997A FF FF FF FF FF FF FF FF     
   7269 FFFC9982 FF FF FF FF FF FF FF FF     
   7270 FFFC998A FF FF FF FF FF FF FF FF     
   7271 FFFC9992 FF FF FF FF FF FF FF FF     
   7272 FFFC999A FF FF FF FF FF FF FF FF     
   7273 FFFC99A2 FF FF FF FF FF FF FF FF     
   7274 FFFC99AA FF FF FF FF FF FF FF FF     
   7275 FFFC99B2 FF FF FF FF FF FF FF FF     
   7276 FFFC99BA FF FF FF FF FF FF FF FF     
   7277 FFFC99C2 FF FF FF FF FF FF FF FF     
   7278 FFFC99CA FF FF FF FF FF FF FF FF     
   7279 FFFC99D2 FF FF FF FF FF FF FF FF     
   7280 FFFC99DA FF FF FF FF FF FF FF FF     
   7281 FFFC99E2 FF FF FF FF FF FF FF FF     
   7282 FFFC99EA FF FF FF FF FF FF FF FF     
   7283 FFFC99F2 FF FF FF FF FF FF FF FF     
   7284 FFFC99FA FF FF FF FF FF FF FF FF     
   7285 FFFC9A02 FF FF FF FF FF FF FF FF     
   7286 FFFC9A0A FF FF FF FF FF FF FF FF     
   7287 FFFC9A12 FF FF FF FF FF FF FF FF     
   7288 FFFC9A1A FF FF FF FF FF FF FF FF     
   7289 FFFC9A22 FF FF FF FF FF FF FF FF     
   7290 FFFC9A2A FF FF FF FF FF FF FF FF     
   7291 FFFC9A32 FF FF FF FF FF FF FF FF     
   7292 FFFC9A3A FF FF FF FF FF FF FF FF     
   7293 FFFC9A42 FF FF FF FF FF FF FF FF     
   7294 FFFC9A4A FF FF FF FF FF FF FF FF     
   7295 FFFC9A52 FF FF FF FF FF FF FF FF     
   7296 FFFC9A5A FF FF FF FF FF FF FF FF     
   7297 FFFC9A62 FF FF FF FF FF FF FF FF     
   7298 FFFC9A6A FF FF FF FF FF FF FF FF     
   7299 FFFC9A72 FF FF FF FF FF FF FF FF     
   7300 FFFC9A7A FF FF FF FF FF FF FF FF     
   7301 FFFC9A82 FF FF FF FF FF FF FF FF     
   7302 FFFC9A8A FF FF FF FF FF FF FF FF     
   7303 FFFC9A92 FF FF FF FF FF FF FF FF     
   7304 FFFC9A9A FF FF FF FF FF FF FF FF     
   7305 FFFC9AA2 FF FF FF FF FF FF FF FF     
   7306 FFFC9AAA FF FF FF FF FF FF FF FF     
   7307 FFFC9AB2 FF FF FF FF FF FF FF FF     
   7308 FFFC9ABA FF FF FF FF FF FF FF FF     
   7309 FFFC9AC2 FF FF FF FF FF FF FF FF     
   7310 FFFC9ACA FF FF FF FF FF FF FF FF     
   7311 FFFC9AD2 FF FF FF FF FF FF FF FF     
   7312 FFFC9ADA FF FF FF FF FF FF FF FF     
   7313 FFFC9AE2 FF FF FF FF FF FF FF FF     
   7314 FFFC9AEA FF FF FF FF FF FF FF FF     
   7315 FFFC9AF2 FF FF FF FF FF FF FF FF     
   7316 FFFC9AFA FF FF FF FF FF FF FF FF     
   7317 FFFC9B02 FF FF FF FF FF FF FF FF     
   7318 FFFC9B0A FF FF FF FF FF FF FF FF     
   7319 FFFC9B12 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 65
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7320 FFFC9B1A FF FF FF FF FF FF FF FF     
   7321 FFFC9B22 FF FF FF FF FF FF FF FF     
   7322 FFFC9B2A FF FF FF FF FF FF FF FF     
   7323 FFFC9B32 FF FF FF FF FF FF FF FF     
   7324 FFFC9B3A FF FF FF FF FF FF FF FF     
   7325 FFFC9B42 FF FF FF FF FF FF FF FF     
   7326 FFFC9B4A FF FF FF FF FF FF FF FF     
   7327 FFFC9B52 FF FF FF FF FF FF FF FF     
   7328 FFFC9B5A FF FF FF FF FF FF FF FF     
   7329 FFFC9B62 FF FF FF FF FF FF FF FF     
   7330 FFFC9B6A FF FF FF FF FF FF FF FF     
   7331 FFFC9B72 FF FF FF FF FF FF FF FF     
   7332 FFFC9B7A FF FF FF FF FF FF FF FF     
   7333 FFFC9B82 FF FF FF FF FF FF FF FF     
   7334 FFFC9B8A FF FF FF FF FF FF FF FF     
   7335 FFFC9B92 FF FF FF FF FF FF FF FF     
   7336 FFFC9B9A FF FF FF FF FF FF FF FF     
   7337 FFFC9BA2 FF FF FF FF FF FF FF FF     
   7338 FFFC9BAA FF FF FF FF FF FF FF FF     
   7339 FFFC9BB2 FF FF FF FF FF FF FF FF     
   7340 FFFC9BBA FF FF FF FF FF FF FF FF     
   7341 FFFC9BC2 FF FF FF FF FF FF FF FF     
   7342 FFFC9BCA FF FF FF FF FF FF FF FF     
   7343 FFFC9BD2 FF FF FF FF FF FF FF FF     
   7344 FFFC9BDA FF FF FF FF FF FF FF FF     
   7345 FFFC9BE2 FF FF FF FF FF FF FF FF     
   7346 FFFC9BEA FF FF FF FF FF FF FF FF     
   7347 FFFC9BF2 FF FF FF FF FF FF FF FF     
   7348 FFFC9BFA FF FF FF FF FF FF FF FF     
   7349 FFFC9C02 FF FF FF FF FF FF FF FF     
   7350 FFFC9C0A FF FF FF FF FF FF FF FF     
   7351 FFFC9C12 FF FF FF FF FF FF FF FF     
   7352 FFFC9C1A FF FF FF FF FF FF FF FF     
   7353 FFFC9C22 FF FF FF FF FF FF FF FF     
   7354 FFFC9C2A FF FF FF FF FF FF FF FF     
   7355 FFFC9C32 FF FF FF FF FF FF FF FF     
   7356 FFFC9C3A FF FF FF FF FF FF FF FF     
   7357 FFFC9C42 FF FF FF FF FF FF FF FF     
   7358 FFFC9C4A FF FF FF FF FF FF FF FF     
   7359 FFFC9C52 FF FF FF FF FF FF FF FF     
   7360 FFFC9C5A FF FF FF FF FF FF FF FF     
   7361 FFFC9C62 FF FF FF FF FF FF FF FF     
   7362 FFFC9C6A FF FF FF FF FF FF FF FF     
   7363 FFFC9C72 FF FF FF FF FF FF FF FF     
   7364 FFFC9C7A FF FF FF FF FF FF FF FF     
   7365 FFFC9C82 FF FF FF FF FF FF FF FF     
   7366 FFFC9C8A FF FF FF FF FF FF FF FF     
   7367 FFFC9C92 FF FF FF FF FF FF FF FF     
   7368 FFFC9C9A FF FF FF FF FF FF FF FF     
   7369 FFFC9CA2 FF FF FF FF FF FF FF FF     
   7370 FFFC9CAA FF FF FF FF FF FF FF FF     
   7371 FFFC9CB2 FF FF FF FF FF FF FF FF     
   7372 FFFC9CBA FF FF FF FF FF FF FF FF     
   7373 FFFC9CC2 FF FF FF FF FF FF FF FF     
   7374 FFFC9CCA FF FF FF FF FF FF FF FF     
   7375 FFFC9CD2 FF FF FF FF FF FF FF FF     
   7376 FFFC9CDA FF FF FF FF FF FF FF FF     
   7377 FFFC9CE2 FF FF FF FF FF FF FF FF     
   7378 FFFC9CEA FF FF FF FF FF FF FF FF     
   7379 FFFC9CF2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 66
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7380 FFFC9CFA FF FF FF FF FF FF FF FF     
   7381 FFFC9D02 FF FF FF FF FF FF FF FF     
   7382 FFFC9D0A FF FF FF FF FF FF FF FF     
   7383 FFFC9D12 FF FF FF FF FF FF FF FF     
   7384 FFFC9D1A FF FF FF FF FF FF FF FF     
   7385 FFFC9D22 FF FF FF FF FF FF FF FF     
   7386 FFFC9D2A FF FF FF FF FF FF FF FF     
   7387 FFFC9D32 FF FF FF FF FF FF FF FF     
   7388 FFFC9D3A FF FF FF FF FF FF FF FF     
   7389 FFFC9D42 FF FF FF FF FF FF FF FF     
   7390 FFFC9D4A FF FF FF FF FF FF FF FF     
   7391 FFFC9D52 FF FF FF FF FF FF FF FF     
   7392 FFFC9D5A FF FF FF FF FF FF FF FF     
   7393 FFFC9D62 FF FF FF FF FF FF FF FF     
   7394 FFFC9D6A FF FF FF FF FF FF FF FF     
   7395 FFFC9D72 FF FF FF FF FF FF FF FF     
   7396 FFFC9D7A FF FF FF FF FF FF FF FF     
   7397 FFFC9D82 FF FF FF FF FF FF FF FF     
   7398 FFFC9D8A FF FF FF FF FF FF FF FF     
   7399 FFFC9D92 FF FF FF FF FF FF FF FF     
   7400 FFFC9D9A FF FF FF FF FF FF FF FF     
   7401 FFFC9DA2 FF FF FF FF FF FF FF FF     
   7402 FFFC9DAA FF FF FF FF FF FF FF FF     
   7403 FFFC9DB2 FF FF FF FF FF FF FF FF     
   7404 FFFC9DBA FF FF FF FF FF FF FF FF     
   7405 FFFC9DC2 FF FF FF FF FF FF FF FF     
   7406 FFFC9DCA FF FF FF FF FF FF FF FF     
   7407 FFFC9DD2 FF FF FF FF FF FF FF FF     
   7408 FFFC9DDA FF FF FF FF FF FF FF FF     
   7409 FFFC9DE2 FF FF FF FF FF FF FF FF     
   7410 FFFC9DEA FF FF FF FF FF FF FF FF     
   7411 FFFC9DF2 FF FF FF FF FF FF FF FF     
   7412 FFFC9DFA FF FF FF FF FF FF FF FF     
   7413 FFFC9E02 FF FF FF FF FF FF FF FF     
   7414 FFFC9E0A FF FF FF FF FF FF FF FF     
   7415 FFFC9E12 FF FF FF FF FF FF FF FF     
   7416 FFFC9E1A FF FF FF FF FF FF FF FF     
   7417 FFFC9E22 FF FF FF FF FF FF FF FF     
   7418 FFFC9E2A FF FF FF FF FF FF FF FF     
   7419 FFFC9E32 FF FF FF FF FF FF FF FF     
   7420 FFFC9E3A FF FF FF FF FF FF FF FF     
   7421 FFFC9E42 FF FF FF FF FF FF FF FF     
   7422 FFFC9E4A FF FF FF FF FF FF FF FF     
   7423 FFFC9E52 FF FF FF FF FF FF FF FF     
   7424 FFFC9E5A FF FF FF FF FF FF FF FF     
   7425 FFFC9E62 FF FF FF FF FF FF FF FF     
   7426 FFFC9E6A FF FF FF FF FF FF FF FF     
   7427 FFFC9E72 FF FF FF FF FF FF FF FF     
   7428 FFFC9E7A FF FF FF FF FF FF FF FF     
   7429 FFFC9E82 FF FF FF FF FF FF FF FF     
   7430 FFFC9E8A FF FF FF FF FF FF FF FF     
   7431 FFFC9E92 FF FF FF FF FF FF FF FF     
   7432 FFFC9E9A FF FF FF FF FF FF FF FF     
   7433 FFFC9EA2 FF FF FF FF FF FF FF FF     
   7434 FFFC9EAA FF FF FF FF FF FF FF FF     
   7435 FFFC9EB2 FF FF FF FF FF FF FF FF     
   7436 FFFC9EBA FF FF FF FF FF FF FF FF     
   7437 FFFC9EC2 FF FF FF FF FF FF FF FF     
   7438 FFFC9ECA FF FF FF FF FF FF FF FF     
   7439 FFFC9ED2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 67
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7440 FFFC9EDA FF FF FF FF FF FF FF FF     
   7441 FFFC9EE2 FF FF FF FF FF FF FF FF     
   7442 FFFC9EEA FF FF FF FF FF FF FF FF     
   7443 FFFC9EF2 FF FF FF FF FF FF FF FF     
   7444 FFFC9EFA FF FF FF FF FF FF FF FF     
   7445 FFFC9F02 FF FF FF FF FF FF FF FF     
   7446 FFFC9F0A FF FF FF FF FF FF FF FF     
   7447 FFFC9F12 FF FF FF FF FF FF FF FF     
   7448 FFFC9F1A FF FF FF FF FF FF FF FF     
   7449 FFFC9F22 FF FF FF FF FF FF FF FF     
   7450 FFFC9F2A FF FF FF FF FF FF FF FF     
   7451 FFFC9F32 FF FF FF FF FF FF FF FF     
   7452 FFFC9F3A FF FF FF FF FF FF FF FF     
   7453 FFFC9F42 FF FF FF FF FF FF FF FF     
   7454 FFFC9F4A FF FF FF FF FF FF FF FF     
   7455 FFFC9F52 FF FF FF FF FF FF FF FF     
   7456 FFFC9F5A FF FF FF FF FF FF FF FF     
   7457 FFFC9F62 FF FF FF FF FF FF FF FF     
   7458 FFFC9F6A FF FF FF FF FF FF FF FF     
   7459 FFFC9F72 FF FF FF FF FF FF FF FF     
   7460 FFFC9F7A FF FF FF FF FF FF FF FF     
   7461 FFFC9F82 FF FF FF FF FF FF FF FF     
   7462 FFFC9F8A FF FF FF FF FF FF FF FF     
   7463 FFFC9F92 FF FF FF FF FF FF FF FF     
   7464 FFFC9F9A FF FF FF FF FF FF FF FF     
   7465 FFFC9FA2 FF FF FF FF FF FF FF FF     
   7466 FFFC9FAA FF FF FF FF FF FF FF FF     
   7467 FFFC9FB2 FF FF FF FF FF FF FF FF     
   7468 FFFC9FBA FF FF FF FF FF FF FF FF     
   7469 FFFC9FC2 FF FF FF FF FF FF FF FF     
   7470 FFFC9FCA FF FF FF FF FF FF FF FF     
   7471 FFFC9FD2 FF FF FF FF FF FF FF FF     
   7472 FFFC9FDA FF FF FF FF FF FF FF FF     
   7473 FFFC9FE2 FF FF FF FF FF FF FF FF     
   7474 FFFC9FEA FF FF FF FF FF FF FF FF     
   7475 FFFC9FF2 FF FF FF FF FF FF FF FF     
   7476 FFFC9FFA FF FF FF FF FF FF FF FF     
   7477 FFFCA002 FF FF FF FF FF FF FF FF     
   7478 FFFCA00A FF FF FF FF FF FF FF FF     
   7479 FFFCA012 FF FF FF FF FF FF FF FF     
   7480 FFFCA01A FF FF FF FF FF FF FF FF     
   7481 FFFCA022 FF FF FF FF FF FF FF FF     
   7482 FFFCA02A FF FF FF FF FF FF FF FF     
   7483 FFFCA032 FF FF FF FF FF FF FF FF     
   7484 FFFCA03A FF FF FF FF FF FF FF FF     
   7485 FFFCA042 FF FF FF FF FF FF FF FF     
   7486 FFFCA04A FF FF FF FF FF FF FF FF     
   7487 FFFCA052 FF FF FF FF FF FF FF FF     
   7488 FFFCA05A FF FF FF FF FF FF FF FF     
   7489 FFFCA062 FF FF FF FF FF FF FF FF     
   7490 FFFCA06A FF FF FF FF FF FF FF FF     
   7491 FFFCA072 FF FF FF FF FF FF FF FF     
   7492 FFFCA07A FF FF FF FF FF FF FF FF     
   7493 FFFCA082 FF FF FF FF FF FF FF FF     
   7494 FFFCA08A FF FF FF FF FF FF FF FF     
   7495 FFFCA092 FF FF FF FF FF FF FF FF     
   7496 FFFCA09A FF FF FF FF FF FF FF FF     
   7497 FFFCA0A2 FF FF FF FF FF FF FF FF     
   7498 FFFCA0AA FF FF FF FF FF FF FF FF     
   7499 FFFCA0B2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 68
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7500 FFFCA0BA FF FF FF FF FF FF FF FF     
   7501 FFFCA0C2 FF FF FF FF FF FF FF FF     
   7502 FFFCA0CA FF FF FF FF FF FF FF FF     
   7503 FFFCA0D2 FF FF FF FF FF FF FF FF     
   7504 FFFCA0DA FF FF FF FF FF FF FF FF     
   7505 FFFCA0E2 FF FF FF FF FF FF FF FF     
   7506 FFFCA0EA FF FF FF FF FF FF FF FF     
   7507 FFFCA0F2 FF FF FF FF FF FF FF FF     
   7508 FFFCA0FA FF FF FF FF FF FF FF FF     
   7509 FFFCA102 FF FF FF FF FF FF FF FF     
   7510 FFFCA10A FF FF FF FF FF FF FF FF     
   7511 FFFCA112 FF FF FF FF FF FF FF FF     
   7512 FFFCA11A FF FF FF FF FF FF FF FF     
   7513 FFFCA122 FF FF FF FF FF FF FF FF     
   7514 FFFCA12A FF FF FF FF FF FF FF FF     
   7515 FFFCA132 FF FF FF FF FF FF FF FF     
   7516 FFFCA13A FF FF FF FF FF FF FF FF     
   7517 FFFCA142 FF FF FF FF FF FF FF FF     
   7518 FFFCA14A FF FF FF FF FF FF FF FF     
   7519 FFFCA152 FF FF FF FF FF FF FF FF     
   7520 FFFCA15A FF FF FF FF FF FF FF FF     
   7521 FFFCA162 FF FF FF FF FF FF FF FF     
   7522 FFFCA16A FF FF FF FF FF FF FF FF     
   7523 FFFCA172 FF FF FF FF FF FF FF FF     
   7524 FFFCA17A FF FF FF FF FF FF FF FF     
   7525 FFFCA182 FF FF FF FF FF FF FF FF     
   7526 FFFCA18A FF FF FF FF FF FF FF FF     
   7527 FFFCA192 FF FF FF FF FF FF FF FF     
   7528 FFFCA19A FF FF FF FF FF FF FF FF     
   7529 FFFCA1A2 FF FF FF FF FF FF FF FF     
   7530 FFFCA1AA FF FF FF FF FF FF FF FF     
   7531 FFFCA1B2 FF FF FF FF FF FF FF FF     
   7532 FFFCA1BA FF FF FF FF FF FF FF FF     
   7533 FFFCA1C2 FF FF FF FF FF FF FF FF     
   7534 FFFCA1CA FF FF FF FF FF FF FF FF     
   7535 FFFCA1D2 FF FF FF FF FF FF FF FF     
   7536 FFFCA1DA FF FF FF FF FF FF FF FF     
   7537 FFFCA1E2 FF FF FF FF FF FF FF FF     
   7538 FFFCA1EA FF FF FF FF FF FF FF FF     
   7539 FFFCA1F2 FF FF FF FF FF FF FF FF     
   7540 FFFCA1FA FF FF FF FF FF FF FF FF     
   7541 FFFCA202 FF FF FF FF FF FF FF FF     
   7542 FFFCA20A FF FF FF FF FF FF FF FF     
   7543 FFFCA212 FF FF FF FF FF FF FF FF     
   7544 FFFCA21A FF FF FF FF FF FF FF FF     
   7545 FFFCA222 FF FF FF FF FF FF FF FF     
   7546 FFFCA22A FF FF FF FF FF FF FF FF     
   7547 FFFCA232 FF FF FF FF FF FF FF FF     
   7548 FFFCA23A FF FF FF FF FF FF FF FF     
   7549 FFFCA242 FF FF FF FF FF FF FF FF     
   7550 FFFCA24A FF FF FF FF FF FF FF FF     
   7551 FFFCA252 FF FF FF FF FF FF FF FF     
   7552 FFFCA25A FF FF FF FF FF FF FF FF     
   7553 FFFCA262 FF FF FF FF FF FF FF FF     
   7554 FFFCA26A FF FF FF FF FF FF FF FF     
   7555 FFFCA272 FF FF FF FF FF FF FF FF     
   7556 FFFCA27A FF FF FF FF FF FF FF FF     
   7557 FFFCA282 FF FF FF FF FF FF FF FF     
   7558 FFFCA28A FF FF FF FF FF FF FF FF     
   7559 FFFCA292 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 69
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7560 FFFCA29A FF FF FF FF FF FF FF FF     
   7561 FFFCA2A2 FF FF FF FF FF FF FF FF     
   7562 FFFCA2AA FF FF FF FF FF FF FF FF     
   7563 FFFCA2B2 FF FF FF FF FF FF FF FF     
   7564 FFFCA2BA FF FF FF FF FF FF FF FF     
   7565 FFFCA2C2 FF FF FF FF FF FF FF FF     
   7566 FFFCA2CA FF FF FF FF FF FF FF FF     
   7567 FFFCA2D2 FF FF FF FF FF FF FF FF     
   7568 FFFCA2DA FF FF FF FF FF FF FF FF     
   7569 FFFCA2E2 FF FF FF FF FF FF FF FF     
   7570 FFFCA2EA FF FF FF FF FF FF FF FF     
   7571 FFFCA2F2 FF FF FF FF FF FF FF FF     
   7572 FFFCA2FA FF FF FF FF FF FF FF FF     
   7573 FFFCA302 FF FF FF FF FF FF FF FF     
   7574 FFFCA30A FF FF FF FF FF FF FF FF     
   7575 FFFCA312 FF FF FF FF FF FF FF FF     
   7576 FFFCA31A FF FF FF FF FF FF FF FF     
   7577 FFFCA322 FF FF FF FF FF FF FF FF     
   7578 FFFCA32A FF FF FF FF FF FF FF FF     
   7579 FFFCA332 FF FF FF FF FF FF FF FF     
   7580 FFFCA33A FF FF FF FF FF FF FF FF     
   7581 FFFCA342 FF FF FF FF FF FF FF FF     
   7582 FFFCA34A FF FF FF FF FF FF FF FF     
   7583 FFFCA352 FF FF FF FF FF FF FF FF     
   7584 FFFCA35A FF FF FF FF FF FF FF FF     
   7585 FFFCA362 FF FF FF FF FF FF FF FF     
   7586 FFFCA36A FF FF FF FF FF FF FF FF     
   7587 FFFCA372 FF FF FF FF FF FF FF FF     
   7588 FFFCA37A FF FF FF FF FF FF FF FF     
   7589 FFFCA382 FF FF FF FF FF FF FF FF     
   7590 FFFCA38A FF FF FF FF FF FF FF FF     
   7591 FFFCA392 FF FF FF FF FF FF FF FF     
   7592 FFFCA39A FF FF FF FF FF FF FF FF     
   7593 FFFCA3A2 FF FF FF FF FF FF FF FF     
   7594 FFFCA3AA FF FF FF FF FF FF FF FF     
   7595 FFFCA3B2 FF FF FF FF FF FF FF FF     
   7596 FFFCA3BA FF FF FF FF FF FF FF FF     
   7597 FFFCA3C2 FF FF FF FF FF FF FF FF     
   7598 FFFCA3CA FF FF FF FF FF FF FF FF     
   7599 FFFCA3D2 FF FF FF FF FF FF FF FF     
   7600 FFFCA3DA FF FF FF FF FF FF FF FF     
   7601 FFFCA3E2 FF FF FF FF FF FF FF FF     
   7602 FFFCA3EA FF FF FF FF FF FF FF FF     
   7603 FFFCA3F2 FF FF FF FF FF FF FF FF     
   7604 FFFCA3FA FF FF FF FF FF FF FF FF     
   7605 FFFCA402 FF FF FF FF FF FF FF FF     
   7606 FFFCA40A FF FF FF FF FF FF FF FF     
   7607 FFFCA412 FF FF FF FF FF FF FF FF     
   7608 FFFCA41A FF FF FF FF FF FF FF FF     
   7609 FFFCA422 FF FF FF FF FF FF FF FF     
   7610 FFFCA42A FF FF FF FF FF FF FF FF     
   7611 FFFCA432 FF FF FF FF FF FF FF FF     
   7612 FFFCA43A FF FF FF FF FF FF FF FF     
   7613 FFFCA442 FF FF FF FF FF FF FF FF     
   7614 FFFCA44A FF FF FF FF FF FF FF FF     
   7615 FFFCA452 FF FF FF FF FF FF FF FF     
   7616 FFFCA45A FF FF FF FF FF FF FF FF     
   7617 FFFCA462 FF FF FF FF FF FF FF FF     
   7618 FFFCA46A FF FF FF FF FF FF FF FF     
   7619 FFFCA472 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 70
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7620 FFFCA47A FF FF FF FF FF FF FF FF     
   7621 FFFCA482 FF FF FF FF FF FF FF FF     
   7622 FFFCA48A FF FF FF FF FF FF FF FF     
   7623 FFFCA492 FF FF FF FF FF FF FF FF     
   7624 FFFCA49A FF FF FF FF FF FF FF FF     
   7625 FFFCA4A2 FF FF FF FF FF FF FF FF     
   7626 FFFCA4AA FF FF FF FF FF FF FF FF     
   7627 FFFCA4B2 FF FF FF FF FF FF FF FF     
   7628 FFFCA4BA FF FF FF FF FF FF FF FF     
   7629 FFFCA4C2 FF FF FF FF FF FF FF FF     
   7630 FFFCA4CA FF FF FF FF FF FF FF FF     
   7631 FFFCA4D2 FF FF FF FF FF FF FF FF     
   7632 FFFCA4DA FF FF FF FF FF FF FF FF     
   7633 FFFCA4E2 FF FF FF FF FF FF FF FF     
   7634 FFFCA4EA FF FF FF FF FF FF FF FF     
   7635 FFFCA4F2 FF FF FF FF FF FF FF FF     
   7636 FFFCA4FA FF FF FF FF FF FF FF FF     
   7637 FFFCA502 FF FF FF FF FF FF FF FF     
   7638 FFFCA50A FF FF FF FF FF FF FF FF     
   7639 FFFCA512 FF FF FF FF FF FF FF FF     
   7640 FFFCA51A FF FF FF FF FF FF FF FF     
   7641 FFFCA522 FF FF FF FF FF FF FF FF     
   7642 FFFCA52A FF FF FF FF FF FF FF FF     
   7643 FFFCA532 FF FF FF FF FF FF FF FF     
   7644 FFFCA53A FF FF FF FF FF FF FF FF     
   7645 FFFCA542 FF FF FF FF FF FF FF FF     
   7646 FFFCA54A FF FF FF FF FF FF FF FF     
   7647 FFFCA552 FF FF FF FF FF FF FF FF     
   7648 FFFCA55A FF FF FF FF FF FF FF FF     
   7649 FFFCA562 FF FF FF FF FF FF FF FF     
   7650 FFFCA56A FF FF FF FF FF FF FF FF     
   7651 FFFCA572 FF FF FF FF FF FF FF FF     
   7652 FFFCA57A FF FF FF FF FF FF FF FF     
   7653 FFFCA582 FF FF FF FF FF FF FF FF     
   7654 FFFCA58A FF FF FF FF FF FF FF FF     
   7655 FFFCA592 FF FF FF FF FF FF FF FF     
   7656 FFFCA59A FF FF FF FF FF FF FF FF     
   7657 FFFCA5A2 FF FF FF FF FF FF FF FF     
   7658 FFFCA5AA FF FF FF FF FF FF FF FF     
   7659 FFFCA5B2 FF FF FF FF FF FF FF FF     
   7660 FFFCA5BA FF FF FF FF FF FF FF FF     
   7661 FFFCA5C2 FF FF FF FF FF FF FF FF     
   7662 FFFCA5CA FF FF FF FF FF FF FF FF     
   7663 FFFCA5D2 FF FF FF FF FF FF FF FF     
   7664 FFFCA5DA FF FF FF FF FF FF FF FF     
   7665 FFFCA5E2 FF FF FF FF FF FF FF FF     
   7666 FFFCA5EA FF FF FF FF FF FF FF FF     
   7667 FFFCA5F2 FF FF FF FF FF FF FF FF     
   7668 FFFCA5FA FF FF FF FF FF FF FF FF     
   7669 FFFCA602 FF FF FF FF FF FF FF FF     
   7670 FFFCA60A FF FF FF FF FF FF FF FF     
   7671 FFFCA612 FF FF FF FF FF FF FF FF     
   7672 FFFCA61A FF FF FF FF FF FF FF FF     
   7673 FFFCA622 FF FF FF FF FF FF FF FF     
   7674 FFFCA62A FF FF FF FF FF FF FF FF     
   7675 FFFCA632 FF FF FF FF FF FF FF FF     
   7676 FFFCA63A FF FF FF FF FF FF FF FF     
   7677 FFFCA642 FF FF FF FF FF FF FF FF     
   7678 FFFCA64A FF FF FF FF FF FF FF FF     
   7679 FFFCA652 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 71
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7680 FFFCA65A FF FF FF FF FF FF FF FF     
   7681 FFFCA662 FF FF FF FF FF FF FF FF     
   7682 FFFCA66A FF FF FF FF FF FF FF FF     
   7683 FFFCA672 FF FF FF FF FF FF FF FF     
   7684 FFFCA67A FF FF FF FF FF FF FF FF     
   7685 FFFCA682 FF FF FF FF FF FF FF FF     
   7686 FFFCA68A FF FF FF FF FF FF FF FF     
   7687 FFFCA692 FF FF FF FF FF FF FF FF     
   7688 FFFCA69A FF FF FF FF FF FF FF FF     
   7689 FFFCA6A2 FF FF FF FF FF FF FF FF     
   7690 FFFCA6AA FF FF FF FF FF FF FF FF     
   7691 FFFCA6B2 FF FF FF FF FF FF FF FF     
   7692 FFFCA6BA FF FF FF FF FF FF FF FF     
   7693 FFFCA6C2 FF FF FF FF FF FF FF FF     
   7694 FFFCA6CA FF FF FF FF FF FF FF FF     
   7695 FFFCA6D2 FF FF FF FF FF FF FF FF     
   7696 FFFCA6DA FF FF FF FF FF FF FF FF     
   7697 FFFCA6E2 FF FF FF FF FF FF FF FF     
   7698 FFFCA6EA FF FF FF FF FF FF FF FF     
   7699 FFFCA6F2 FF FF FF FF FF FF FF FF     
   7700 FFFCA6FA FF FF FF FF FF FF FF FF     
   7701 FFFCA702 FF FF FF FF FF FF FF FF     
   7702 FFFCA70A FF FF FF FF FF FF FF FF     
   7703 FFFCA712 FF FF FF FF FF FF FF FF     
   7704 FFFCA71A FF FF FF FF FF FF FF FF     
   7705 FFFCA722 FF FF FF FF FF FF FF FF     
   7706 FFFCA72A FF FF FF FF FF FF FF FF     
   7707 FFFCA732 FF FF FF FF FF FF FF FF     
   7708 FFFCA73A FF FF FF FF FF FF FF FF     
   7709 FFFCA742 FF FF FF FF FF FF FF FF     
   7710 FFFCA74A FF FF FF FF FF FF FF FF     
   7711 FFFCA752 FF FF FF FF FF FF FF FF     
   7712 FFFCA75A FF FF FF FF FF FF FF FF     
   7713 FFFCA762 FF FF FF FF FF FF FF FF     
   7714 FFFCA76A FF FF FF FF FF FF FF FF     
   7715 FFFCA772 FF FF FF FF FF FF FF FF     
   7716 FFFCA77A FF FF FF FF FF FF FF FF     
   7717 FFFCA782 FF FF FF FF FF FF FF FF     
   7718 FFFCA78A FF FF FF FF FF FF FF FF     
   7719 FFFCA792 FF FF FF FF FF FF FF FF     
   7720 FFFCA79A FF FF FF FF FF FF FF FF     
   7721 FFFCA7A2 FF FF FF FF FF FF FF FF     
   7722 FFFCA7AA FF FF FF FF FF FF FF FF     
   7723 FFFCA7B2 FF FF FF FF FF FF FF FF     
   7724 FFFCA7BA FF FF FF FF FF FF FF FF     
   7725 FFFCA7C2 FF FF FF FF FF FF FF FF     
   7726 FFFCA7CA FF FF FF FF FF FF FF FF     
   7727 FFFCA7D2 FF FF FF FF FF FF FF FF     
   7728 FFFCA7DA FF FF FF FF FF FF FF FF     
   7729 FFFCA7E2 FF FF FF FF FF FF FF FF     
   7730 FFFCA7EA FF FF FF FF FF FF FF FF     
   7731 FFFCA7F2 FF FF FF FF FF FF FF FF     
   7732 FFFCA7FA FF FF FF FF FF FF FF FF     
   7733 FFFCA802 FF FF FF FF FF FF FF FF     
   7734 FFFCA80A FF FF FF FF FF FF FF FF     
   7735 FFFCA812 FF FF FF FF FF FF FF FF     
   7736 FFFCA81A FF FF FF FF FF FF FF FF     
   7737 FFFCA822 FF FF FF FF FF FF FF FF     
   7738 FFFCA82A FF FF FF FF FF FF FF FF     
   7739 FFFCA832 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 72
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7740 FFFCA83A FF FF FF FF FF FF FF FF     
   7741 FFFCA842 FF FF FF FF FF FF FF FF     
   7742 FFFCA84A FF FF FF FF FF FF FF FF     
   7743 FFFCA852 FF FF FF FF FF FF FF FF     
   7744 FFFCA85A FF FF FF FF FF FF FF FF     
   7745 FFFCA862 FF FF FF FF FF FF FF FF     
   7746 FFFCA86A FF FF FF FF FF FF FF FF     
   7747 FFFCA872 FF FF FF FF FF FF FF FF     
   7748 FFFCA87A FF FF FF FF FF FF FF FF     
   7749 FFFCA882 FF FF FF FF FF FF FF FF     
   7750 FFFCA88A FF FF FF FF FF FF FF FF     
   7751 FFFCA892 FF FF FF FF FF FF FF FF     
   7752 FFFCA89A FF FF FF FF FF FF FF FF     
   7753 FFFCA8A2 FF FF FF FF FF FF FF FF     
   7754 FFFCA8AA FF FF FF FF FF FF FF FF     
   7755 FFFCA8B2 FF FF FF FF FF FF FF FF     
   7756 FFFCA8BA FF FF FF FF FF FF FF FF     
   7757 FFFCA8C2 FF FF FF FF FF FF FF FF     
   7758 FFFCA8CA FF FF FF FF FF FF FF FF     
   7759 FFFCA8D2 FF FF FF FF FF FF FF FF     
   7760 FFFCA8DA FF FF FF FF FF FF FF FF     
   7761 FFFCA8E2 FF FF FF FF FF FF FF FF     
   7762 FFFCA8EA FF FF FF FF FF FF FF FF     
   7763 FFFCA8F2 FF FF FF FF FF FF FF FF     
   7764 FFFCA8FA FF FF FF FF FF FF FF FF     
   7765 FFFCA902 FF FF FF FF FF FF FF FF     
   7766 FFFCA90A FF FF FF FF FF FF FF FF     
   7767 FFFCA912 FF FF FF FF FF FF FF FF     
   7768 FFFCA91A FF FF FF FF FF FF FF FF     
   7769 FFFCA922 FF FF FF FF FF FF FF FF     
   7770 FFFCA92A FF FF FF FF FF FF FF FF     
   7771 FFFCA932 FF FF FF FF FF FF FF FF     
   7772 FFFCA93A FF FF FF FF FF FF FF FF     
   7773 FFFCA942 FF FF FF FF FF FF FF FF     
   7774 FFFCA94A FF FF FF FF FF FF FF FF     
   7775 FFFCA952 FF FF FF FF FF FF FF FF     
   7776 FFFCA95A FF FF FF FF FF FF FF FF     
   7777 FFFCA962 FF FF FF FF FF FF FF FF     
   7778 FFFCA96A FF FF FF FF FF FF FF FF     
   7779 FFFCA972 FF FF FF FF FF FF FF FF     
   7780 FFFCA97A FF FF FF FF FF FF FF FF     
   7781 FFFCA982 FF FF FF FF FF FF FF FF     
   7782 FFFCA98A FF FF FF FF FF FF FF FF     
   7783 FFFCA992 FF FF FF FF FF FF FF FF     
   7784 FFFCA99A FF FF FF FF FF FF FF FF     
   7785 FFFCA9A2 FF FF FF FF FF FF FF FF     
   7786 FFFCA9AA FF FF FF FF FF FF FF FF     
   7787 FFFCA9B2 FF FF FF FF FF FF FF FF     
   7788 FFFCA9BA FF FF FF FF FF FF FF FF     
   7789 FFFCA9C2 FF FF FF FF FF FF FF FF     
   7790 FFFCA9CA FF FF FF FF FF FF FF FF     
   7791 FFFCA9D2 FF FF FF FF FF FF FF FF     
   7792 FFFCA9DA FF FF FF FF FF FF FF FF     
   7793 FFFCA9E2 FF FF FF FF FF FF FF FF     
   7794 FFFCA9EA FF FF FF FF FF FF FF FF     
   7795 FFFCA9F2 FF FF FF FF FF FF FF FF     
   7796 FFFCA9FA FF FF FF FF FF FF FF FF     
   7797 FFFCAA02 FF FF FF FF FF FF FF FF     
   7798 FFFCAA0A FF FF FF FF FF FF FF FF     
   7799 FFFCAA12 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 73
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7800 FFFCAA1A FF FF FF FF FF FF FF FF     
   7801 FFFCAA22 FF FF FF FF FF FF FF FF     
   7802 FFFCAA2A FF FF FF FF FF FF FF FF     
   7803 FFFCAA32 FF FF FF FF FF FF FF FF     
   7804 FFFCAA3A FF FF FF FF FF FF FF FF     
   7805 FFFCAA42 FF FF FF FF FF FF FF FF     
   7806 FFFCAA4A FF FF FF FF FF FF FF FF     
   7807 FFFCAA52 FF FF FF FF FF FF FF FF     
   7808 FFFCAA5A FF FF FF FF FF FF FF FF     
   7809 FFFCAA62 FF FF FF FF FF FF FF FF     
   7810 FFFCAA6A FF FF FF FF FF FF FF FF     
   7811 FFFCAA72 FF FF FF FF FF FF FF FF     
   7812 FFFCAA7A FF FF FF FF FF FF FF FF     
   7813 FFFCAA82 FF FF FF FF FF FF FF FF     
   7814 FFFCAA8A FF FF FF FF FF FF FF FF     
   7815 FFFCAA92 FF FF FF FF FF FF FF FF     
   7816 FFFCAA9A FF FF FF FF FF FF FF FF     
   7817 FFFCAAA2 FF FF FF FF FF FF FF FF     
   7818 FFFCAAAA FF FF FF FF FF FF FF FF     
   7819 FFFCAAB2 FF FF FF FF FF FF FF FF     
   7820 FFFCAABA FF FF FF FF FF FF FF FF     
   7821 FFFCAAC2 FF FF FF FF FF FF FF FF     
   7822 FFFCAACA FF FF FF FF FF FF FF FF     
   7823 FFFCAAD2 FF FF FF FF FF FF FF FF     
   7824 FFFCAADA FF FF FF FF FF FF FF FF     
   7825 FFFCAAE2 FF FF FF FF FF FF FF FF     
   7826 FFFCAAEA FF FF FF FF FF FF FF FF     
   7827 FFFCAAF2 FF FF FF FF FF FF FF FF     
   7828 FFFCAAFA FF FF FF FF FF FF FF FF     
   7829 FFFCAB02 FF FF FF FF FF FF FF FF     
   7830 FFFCAB0A FF FF FF FF FF FF FF FF     
   7831 FFFCAB12 FF FF FF FF FF FF FF FF     
   7832 FFFCAB1A FF FF FF FF FF FF FF FF     
   7833 FFFCAB22 FF FF FF FF FF FF FF FF     
   7834 FFFCAB2A FF FF FF FF FF FF FF FF     
   7835 FFFCAB32 FF FF FF FF FF FF FF FF     
   7836 FFFCAB3A FF FF FF FF FF FF FF FF     
   7837 FFFCAB42 FF FF FF FF FF FF FF FF     
   7838 FFFCAB4A FF FF FF FF FF FF FF FF     
   7839 FFFCAB52 FF FF FF FF FF FF FF FF     
   7840 FFFCAB5A FF FF FF FF FF FF FF FF     
   7841 FFFCAB62 FF FF FF FF FF FF FF FF     
   7842 FFFCAB6A FF FF FF FF FF FF FF FF     
   7843 FFFCAB72 FF FF FF FF FF FF FF FF     
   7844 FFFCAB7A FF FF FF FF FF FF FF FF     
   7845 FFFCAB82 FF FF FF FF FF FF FF FF     
   7846 FFFCAB8A FF FF FF FF FF FF FF FF     
   7847 FFFCAB92 FF FF FF FF FF FF FF FF     
   7848 FFFCAB9A FF FF FF FF FF FF FF FF     
   7849 FFFCABA2 FF FF FF FF FF FF FF FF     
   7850 FFFCABAA FF FF FF FF FF FF FF FF     
   7851 FFFCABB2 FF FF FF FF FF FF FF FF     
   7852 FFFCABBA FF FF FF FF FF FF FF FF     
   7853 FFFCABC2 FF FF FF FF FF FF FF FF     
   7854 FFFCABCA FF FF FF FF FF FF FF FF     
   7855 FFFCABD2 FF FF FF FF FF FF FF FF     
   7856 FFFCABDA FF FF FF FF FF FF FF FF     
   7857 FFFCABE2 FF FF FF FF FF FF FF FF     
   7858 FFFCABEA FF FF FF FF FF FF FF FF     
   7859 FFFCABF2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 74
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7860 FFFCABFA FF FF FF FF FF FF FF FF     
   7861 FFFCAC02 FF FF FF FF FF FF FF FF     
   7862 FFFCAC0A FF FF FF FF FF FF FF FF     
   7863 FFFCAC12 FF FF FF FF FF FF FF FF     
   7864 FFFCAC1A FF FF FF FF FF FF FF FF     
   7865 FFFCAC22 FF FF FF FF FF FF FF FF     
   7866 FFFCAC2A FF FF FF FF FF FF FF FF     
   7867 FFFCAC32 FF FF FF FF FF FF FF FF     
   7868 FFFCAC3A FF FF FF FF FF FF FF FF     
   7869 FFFCAC42 FF FF FF FF FF FF FF FF     
   7870 FFFCAC4A FF FF FF FF FF FF FF FF     
   7871 FFFCAC52 FF FF FF FF FF FF FF FF     
   7872 FFFCAC5A FF FF FF FF FF FF FF FF     
   7873 FFFCAC62 FF FF FF FF FF FF FF FF     
   7874 FFFCAC6A FF FF FF FF FF FF FF FF     
   7875 FFFCAC72 FF FF FF FF FF FF FF FF     
   7876 FFFCAC7A FF FF FF FF FF FF FF FF     
   7877 FFFCAC82 FF FF FF FF FF FF FF FF     
   7878 FFFCAC8A FF FF FF FF FF FF FF FF     
   7879 FFFCAC92 FF FF FF FF FF FF FF FF     
   7880 FFFCAC9A FF FF FF FF FF FF FF FF     
   7881 FFFCACA2 FF FF FF FF FF FF FF FF     
   7882 FFFCACAA FF FF FF FF FF FF FF FF     
   7883 FFFCACB2 FF FF FF FF FF FF FF FF     
   7884 FFFCACBA FF FF FF FF FF FF FF FF     
   7885 FFFCACC2 FF FF FF FF FF FF FF FF     
   7886 FFFCACCA FF FF FF FF FF FF FF FF     
   7887 FFFCACD2 FF FF FF FF FF FF FF FF     
   7888 FFFCACDA FF FF FF FF FF FF FF FF     
   7889 FFFCACE2 FF FF FF FF FF FF FF FF     
   7890 FFFCACEA FF FF FF FF FF FF FF FF     
   7891 FFFCACF2 FF FF FF FF FF FF FF FF     
   7892 FFFCACFA FF FF FF FF FF FF FF FF     
   7893 FFFCAD02 FF FF FF FF FF FF FF FF     
   7894 FFFCAD0A FF FF FF FF FF FF FF FF     
   7895 FFFCAD12 FF FF FF FF FF FF FF FF     
   7896 FFFCAD1A FF FF FF FF FF FF FF FF     
   7897 FFFCAD22 FF FF FF FF FF FF FF FF     
   7898 FFFCAD2A FF FF FF FF FF FF FF FF     
   7899 FFFCAD32 FF FF FF FF FF FF FF FF     
   7900 FFFCAD3A FF FF FF FF FF FF FF FF     
   7901 FFFCAD42 FF FF FF FF FF FF FF FF     
   7902 FFFCAD4A FF FF FF FF FF FF FF FF     
   7903 FFFCAD52 FF FF FF FF FF FF FF FF     
   7904 FFFCAD5A FF FF FF FF FF FF FF FF     
   7905 FFFCAD62 FF FF FF FF FF FF FF FF     
   7906 FFFCAD6A FF FF FF FF FF FF FF FF     
   7907 FFFCAD72 FF FF FF FF FF FF FF FF     
   7908 FFFCAD7A FF FF FF FF FF FF FF FF     
   7909 FFFCAD82 FF FF FF FF FF FF FF FF     
   7910 FFFCAD8A FF FF FF FF FF FF FF FF     
   7911 FFFCAD92 FF FF FF FF FF FF FF FF     
   7912 FFFCAD9A FF FF FF FF FF FF FF FF     
   7913 FFFCADA2 FF FF FF FF FF FF FF FF     
   7914 FFFCADAA FF FF FF FF FF FF FF FF     
   7915 FFFCADB2 FF FF FF FF FF FF FF FF     
   7916 FFFCADBA FF FF FF FF FF FF FF FF     
   7917 FFFCADC2 FF FF FF FF FF FF FF FF     
   7918 FFFCADCA FF FF FF FF FF FF FF FF     
   7919 FFFCADD2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 75
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7920 FFFCADDA FF FF FF FF FF FF FF FF     
   7921 FFFCADE2 FF FF FF FF FF FF FF FF     
   7922 FFFCADEA FF FF FF FF FF FF FF FF     
   7923 FFFCADF2 FF FF FF FF FF FF FF FF     
   7924 FFFCADFA FF FF FF FF FF FF FF FF     
   7925 FFFCAE02 FF FF FF FF FF FF FF FF     
   7926 FFFCAE0A FF FF FF FF FF FF FF FF     
   7927 FFFCAE12 FF FF FF FF FF FF FF FF     
   7928 FFFCAE1A FF FF FF FF FF FF FF FF     
   7929 FFFCAE22 FF FF FF FF FF FF FF FF     
   7930 FFFCAE2A FF FF FF FF FF FF FF FF     
   7931 FFFCAE32 FF FF FF FF FF FF FF FF     
   7932 FFFCAE3A FF FF FF FF FF FF FF FF     
   7933 FFFCAE42 FF FF FF FF FF FF FF FF     
   7934 FFFCAE4A FF FF FF FF FF FF FF FF     
   7935 FFFCAE52 FF FF FF FF FF FF FF FF     
   7936 FFFCAE5A FF FF FF FF FF FF FF FF     
   7937 FFFCAE62 FF FF FF FF FF FF FF FF     
   7938 FFFCAE6A FF FF FF FF FF FF FF FF     
   7939 FFFCAE72 FF FF FF FF FF FF FF FF     
   7940 FFFCAE7A FF FF FF FF FF FF FF FF     
   7941 FFFCAE82 FF FF FF FF FF FF FF FF     
   7942 FFFCAE8A FF FF FF FF FF FF FF FF     
   7943 FFFCAE92 FF FF FF FF FF FF FF FF     
   7944 FFFCAE9A FF FF FF FF FF FF FF FF     
   7945 FFFCAEA2 FF FF FF FF FF FF FF FF     
   7946 FFFCAEAA FF FF FF FF FF FF FF FF     
   7947 FFFCAEB2 FF FF FF FF FF FF FF FF     
   7948 FFFCAEBA FF FF FF FF FF FF FF FF     
   7949 FFFCAEC2 FF FF FF FF FF FF FF FF     
   7950 FFFCAECA FF FF FF FF FF FF FF FF     
   7951 FFFCAED2 FF FF FF FF FF FF FF FF     
   7952 FFFCAEDA FF FF FF FF FF FF FF FF     
   7953 FFFCAEE2 FF FF FF FF FF FF FF FF     
   7954 FFFCAEEA FF FF FF FF FF FF FF FF     
   7955 FFFCAEF2 FF FF FF FF FF FF FF FF     
   7956 FFFCAEFA FF FF FF FF FF FF FF FF     
   7957 FFFCAF02 FF FF FF FF FF FF FF FF     
   7958 FFFCAF0A FF FF FF FF FF FF FF FF     
   7959 FFFCAF12 FF FF FF FF FF FF FF FF     
   7960 FFFCAF1A FF FF FF FF FF FF FF FF     
   7961 FFFCAF22 FF FF FF FF FF FF FF FF     
   7962 FFFCAF2A FF FF FF FF FF FF FF FF     
   7963 FFFCAF32 FF FF FF FF FF FF FF FF     
   7964 FFFCAF3A FF FF FF FF FF FF FF FF     
   7965 FFFCAF42 FF FF FF FF FF FF FF FF     
   7966 FFFCAF4A FF FF FF FF FF FF FF FF     
   7967 FFFCAF52 FF FF FF FF FF FF FF FF     
   7968 FFFCAF5A FF FF FF FF FF FF FF FF     
   7969 FFFCAF62 FF FF FF FF FF FF FF FF     
   7970 FFFCAF6A FF FF FF FF FF FF FF FF     
   7971 FFFCAF72 FF FF FF FF FF FF FF FF     
   7972 FFFCAF7A FF FF FF FF FF FF FF FF     
   7973 FFFCAF82 FF FF FF FF FF FF FF FF     
   7974 FFFCAF8A FF FF FF FF FF FF FF FF     
   7975 FFFCAF92 FF FF FF FF FF FF FF FF     
   7976 FFFCAF9A FF FF FF FF FF FF FF FF     
   7977 FFFCAFA2 FF FF FF FF FF FF FF FF     
   7978 FFFCAFAA FF FF FF FF FF FF FF FF     
   7979 FFFCAFB2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 76
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   7980 FFFCAFBA FF FF FF FF FF FF FF FF     
   7981 FFFCAFC2 FF FF FF FF FF FF FF FF     
   7982 FFFCAFCA FF FF FF FF FF FF FF FF     
   7983 FFFCAFD2 FF FF FF FF FF FF FF FF     
   7984 FFFCAFDA FF FF FF FF FF FF FF FF     
   7985 FFFCAFE2 FF FF FF FF FF FF FF FF     
   7986 FFFCAFEA FF FF FF FF FF FF FF FF     
   7987 FFFCAFF2 FF FF FF FF FF FF FF FF     
   7988 FFFCAFFA FF FF FF FF FF FF FF FF     
   7989 FFFCB002 FF FF FF FF FF FF FF FF     
   7990 FFFCB00A FF FF FF FF FF FF FF FF     
   7991 FFFCB012 FF FF FF FF FF FF FF FF     
   7992 FFFCB01A FF FF FF FF FF FF FF FF     
   7993 FFFCB022 FF FF FF FF FF FF FF FF     
   7994 FFFCB02A FF FF FF FF FF FF FF FF     
   7995 FFFCB032 FF FF FF FF FF FF FF FF     
   7996 FFFCB03A FF FF FF FF FF FF FF FF     
   7997 FFFCB042 FF FF FF FF FF FF FF FF     
   7998 FFFCB04A FF FF FF FF FF FF FF FF     
   7999 FFFCB052 FF FF FF FF FF FF FF FF     
   8000 FFFCB05A FF FF FF FF FF FF FF FF     
   8001 FFFCB062 FF FF FF FF FF FF FF FF     
   8002 FFFCB06A FF FF FF FF FF FF FF FF     
   8003 FFFCB072 FF FF FF FF FF FF FF FF     
   8004 FFFCB07A FF FF FF FF FF FF FF FF     
   8005 FFFCB082 FF FF FF FF FF FF FF FF     
   8006 FFFCB08A FF FF FF FF FF FF FF FF     
   8007 FFFCB092 FF FF FF FF FF FF FF FF     
   8008 FFFCB09A FF FF FF FF FF FF FF FF     
   8009 FFFCB0A2 FF FF FF FF FF FF FF FF     
   8010 FFFCB0AA FF FF FF FF FF FF FF FF     
   8011 FFFCB0B2 FF FF FF FF FF FF FF FF     
   8012 FFFCB0BA FF FF FF FF FF FF FF FF     
   8013 FFFCB0C2 FF FF FF FF FF FF FF FF     
   8014 FFFCB0CA FF FF FF FF FF FF FF FF     
   8015 FFFCB0D2 FF FF FF FF FF FF FF FF     
   8016 FFFCB0DA FF FF FF FF FF FF FF FF     
   8017 FFFCB0E2 FF FF FF FF FF FF FF FF     
   8018 FFFCB0EA FF FF FF FF FF FF FF FF     
   8019 FFFCB0F2 FF FF FF FF FF FF FF FF     
   8020 FFFCB0FA FF FF FF FF FF FF FF FF     
   8021 FFFCB102 FF FF FF FF FF FF FF FF     
   8022 FFFCB10A FF FF FF FF FF FF FF FF     
   8023 FFFCB112 FF FF FF FF FF FF FF FF     
   8024 FFFCB11A FF FF FF FF FF FF FF FF     
   8025 FFFCB122 FF FF FF FF FF FF FF FF     
   8026 FFFCB12A FF FF FF FF FF FF FF FF     
   8027 FFFCB132 FF FF FF FF FF FF FF FF     
   8028 FFFCB13A FF FF FF FF FF FF FF FF     
   8029 FFFCB142 FF FF FF FF FF FF FF FF     
   8030 FFFCB14A FF FF FF FF FF FF FF FF     
   8031 FFFCB152 FF FF FF FF FF FF FF FF     
   8032 FFFCB15A FF FF FF FF FF FF FF FF     
   8033 FFFCB162 FF FF FF FF FF FF FF FF     
   8034 FFFCB16A FF FF FF FF FF FF FF FF     
   8035 FFFCB172 FF FF FF FF FF FF FF FF     
   8036 FFFCB17A FF FF FF FF FF FF FF FF     
   8037 FFFCB182 FF FF FF FF FF FF FF FF     
   8038 FFFCB18A FF FF FF FF FF FF FF FF     
   8039 FFFCB192 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 77
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8040 FFFCB19A FF FF FF FF FF FF FF FF     
   8041 FFFCB1A2 FF FF FF FF FF FF FF FF     
   8042 FFFCB1AA FF FF FF FF FF FF FF FF     
   8043 FFFCB1B2 FF FF FF FF FF FF FF FF     
   8044 FFFCB1BA FF FF FF FF FF FF FF FF     
   8045 FFFCB1C2 FF FF FF FF FF FF FF FF     
   8046 FFFCB1CA FF FF FF FF FF FF FF FF     
   8047 FFFCB1D2 FF FF FF FF FF FF FF FF     
   8048 FFFCB1DA FF FF FF FF FF FF FF FF     
   8049 FFFCB1E2 FF FF FF FF FF FF FF FF     
   8050 FFFCB1EA FF FF FF FF FF FF FF FF     
   8051 FFFCB1F2 FF FF FF FF FF FF FF FF     
   8052 FFFCB1FA FF FF FF FF FF FF FF FF     
   8053 FFFCB202 FF FF FF FF FF FF FF FF     
   8054 FFFCB20A FF FF FF FF FF FF FF FF     
   8055 FFFCB212 FF FF FF FF FF FF FF FF     
   8056 FFFCB21A FF FF FF FF FF FF FF FF     
   8057 FFFCB222 FF FF FF FF FF FF FF FF     
   8058 FFFCB22A FF FF FF FF FF FF FF FF     
   8059 FFFCB232 FF FF FF FF FF FF FF FF     
   8060 FFFCB23A FF FF FF FF FF FF FF FF     
   8061 FFFCB242 FF FF FF FF FF FF FF FF     
   8062 FFFCB24A FF FF FF FF FF FF FF FF     
   8063 FFFCB252 FF FF FF FF FF FF FF FF     
   8064 FFFCB25A FF FF FF FF FF FF FF FF     
   8065 FFFCB262 FF FF FF FF FF FF FF FF     
   8066 FFFCB26A FF FF FF FF FF FF FF FF     
   8067 FFFCB272 FF FF FF FF FF FF FF FF     
   8068 FFFCB27A FF FF FF FF FF FF FF FF     
   8069 FFFCB282 FF FF FF FF FF FF FF FF     
   8070 FFFCB28A FF FF FF FF FF FF FF FF     
   8071 FFFCB292 FF FF FF FF FF FF FF FF     
   8072 FFFCB29A FF FF FF FF FF FF FF FF     
   8073 FFFCB2A2 FF FF FF FF FF FF FF FF     
   8074 FFFCB2AA FF FF FF FF FF FF FF FF     
   8075 FFFCB2B2 FF FF FF FF FF FF FF FF     
   8076 FFFCB2BA FF FF FF FF FF FF FF FF     
   8077 FFFCB2C2 FF FF FF FF FF FF FF FF     
   8078 FFFCB2CA FF FF FF FF FF FF FF FF     
   8079 FFFCB2D2 FF FF FF FF FF FF FF FF     
   8080 FFFCB2DA FF FF FF FF FF FF FF FF     
   8081 FFFCB2E2 FF FF FF FF FF FF FF FF     
   8082 FFFCB2EA FF FF FF FF FF FF FF FF     
   8083 FFFCB2F2 FF FF FF FF FF FF FF FF     
   8084 FFFCB2FA FF FF FF FF FF FF FF FF     
   8085 FFFCB302 FF FF FF FF FF FF FF FF     
   8086 FFFCB30A FF FF FF FF FF FF FF FF     
   8087 FFFCB312 FF FF FF FF FF FF FF FF     
   8088 FFFCB31A FF FF FF FF FF FF FF FF     
   8089 FFFCB322 FF FF FF FF FF FF FF FF     
   8090 FFFCB32A FF FF FF FF FF FF FF FF     
   8091 FFFCB332 FF FF FF FF FF FF FF FF     
   8092 FFFCB33A FF FF FF FF FF FF FF FF     
   8093 FFFCB342 FF FF FF FF FF FF FF FF     
   8094 FFFCB34A FF FF FF FF FF FF FF FF     
   8095 FFFCB352 FF FF FF FF FF FF FF FF     
   8096 FFFCB35A FF FF FF FF FF FF FF FF     
   8097 FFFCB362 FF FF FF FF FF FF FF FF     
   8098 FFFCB36A FF FF FF FF FF FF FF FF     
   8099 FFFCB372 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 78
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8100 FFFCB37A FF FF FF FF FF FF FF FF     
   8101 FFFCB382 FF FF FF FF FF FF FF FF     
   8102 FFFCB38A FF FF FF FF FF FF FF FF     
   8103 FFFCB392 FF FF FF FF FF FF FF FF     
   8104 FFFCB39A FF FF FF FF FF FF FF FF     
   8105 FFFCB3A2 FF FF FF FF FF FF FF FF     
   8106 FFFCB3AA FF FF FF FF FF FF FF FF     
   8107 FFFCB3B2 FF FF FF FF FF FF FF FF     
   8108 FFFCB3BA FF FF FF FF FF FF FF FF     
   8109 FFFCB3C2 FF FF FF FF FF FF FF FF     
   8110 FFFCB3CA FF FF FF FF FF FF FF FF     
   8111 FFFCB3D2 FF FF FF FF FF FF FF FF     
   8112 FFFCB3DA FF FF FF FF FF FF FF FF     
   8113 FFFCB3E2 FF FF FF FF FF FF FF FF     
   8114 FFFCB3EA FF FF FF FF FF FF FF FF     
   8115 FFFCB3F2 FF FF FF FF FF FF FF FF     
   8116 FFFCB3FA FF FF FF FF FF FF FF FF     
   8117 FFFCB402 FF FF FF FF FF FF FF FF     
   8118 FFFCB40A FF FF FF FF FF FF FF FF     
   8119 FFFCB412 FF FF FF FF FF FF FF FF     
   8120 FFFCB41A FF FF FF FF FF FF FF FF     
   8121 FFFCB422 FF FF FF FF FF FF FF FF     
   8122 FFFCB42A FF FF FF FF FF FF FF FF     
   8123 FFFCB432 FF FF FF FF FF FF FF FF     
   8124 FFFCB43A FF FF FF FF FF FF FF FF     
   8125 FFFCB442 FF FF FF FF FF FF FF FF     
   8126 FFFCB44A FF FF FF FF FF FF FF FF     
   8127 FFFCB452 FF FF FF FF FF FF FF FF     
   8128 FFFCB45A FF FF FF FF FF FF FF FF     
   8129 FFFCB462 FF FF FF FF FF FF FF FF     
   8130 FFFCB46A FF FF FF FF FF FF FF FF     
   8131 FFFCB472 FF FF FF FF FF FF FF FF     
   8132 FFFCB47A FF FF FF FF FF FF FF FF     
   8133 FFFCB482 FF FF FF FF FF FF FF FF     
   8134 FFFCB48A FF FF FF FF FF FF FF FF     
   8135 FFFCB492 FF FF FF FF FF FF FF FF     
   8136 FFFCB49A FF FF FF FF FF FF FF FF     
   8137 FFFCB4A2 FF FF FF FF FF FF FF FF     
   8138 FFFCB4AA FF FF FF FF FF FF FF FF     
   8139 FFFCB4B2 FF FF FF FF FF FF FF FF     
   8140 FFFCB4BA FF FF FF FF FF FF FF FF     
   8141 FFFCB4C2 FF FF FF FF FF FF FF FF     
   8142 FFFCB4CA FF FF FF FF FF FF FF FF     
   8143 FFFCB4D2 FF FF FF FF FF FF FF FF     
   8144 FFFCB4DA FF FF FF FF FF FF FF FF     
   8145 FFFCB4E2 FF FF FF FF FF FF FF FF     
   8146 FFFCB4EA FF FF FF FF FF FF FF FF     
   8147 FFFCB4F2 FF FF FF FF FF FF FF FF     
   8148 FFFCB4FA FF FF FF FF FF FF FF FF     
   8149 FFFCB502 FF FF FF FF FF FF FF FF     
   8150 FFFCB50A FF FF FF FF FF FF FF FF     
   8151 FFFCB512 FF FF FF FF FF FF FF FF     
   8152 FFFCB51A FF FF FF FF FF FF FF FF     
   8153 FFFCB522 FF FF FF FF FF FF FF FF     
   8154 FFFCB52A FF FF FF FF FF FF FF FF     
   8155 FFFCB532 FF FF FF FF FF FF FF FF     
   8156 FFFCB53A FF FF FF FF FF FF FF FF     
   8157 FFFCB542 FF FF FF FF FF FF FF FF     
   8158 FFFCB54A FF FF FF FF FF FF FF FF     
   8159 FFFCB552 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 79
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8160 FFFCB55A FF FF FF FF FF FF FF FF     
   8161 FFFCB562 FF FF FF FF FF FF FF FF     
   8162 FFFCB56A FF FF FF FF FF FF FF FF     
   8163 FFFCB572 FF FF FF FF FF FF FF FF     
   8164 FFFCB57A FF FF FF FF FF FF FF FF     
   8165 FFFCB582 FF FF FF FF FF FF FF FF     
   8166 FFFCB58A FF FF FF FF FF FF FF FF     
   8167 FFFCB592 FF FF FF FF FF FF FF FF     
   8168 FFFCB59A FF FF FF FF FF FF FF FF     
   8169 FFFCB5A2 FF FF FF FF FF FF FF FF     
   8170 FFFCB5AA FF FF FF FF FF FF FF FF     
   8171 FFFCB5B2 FF FF FF FF FF FF FF FF     
   8172 FFFCB5BA FF FF FF FF FF FF FF FF     
   8173 FFFCB5C2 FF FF FF FF FF FF FF FF     
   8174 FFFCB5CA FF FF FF FF FF FF FF FF     
   8175 FFFCB5D2 FF FF FF FF FF FF FF FF     
   8176 FFFCB5DA FF FF FF FF FF FF FF FF     
   8177 FFFCB5E2 FF FF FF FF FF FF FF FF     
   8178 FFFCB5EA FF FF FF FF FF FF FF FF     
   8179 FFFCB5F2 FF FF FF FF FF FF FF FF     
   8180 FFFCB5FA FF FF FF FF FF FF FF FF     
   8181 FFFCB602 FF FF FF FF FF FF FF FF     
   8182 FFFCB60A FF FF FF FF FF FF FF FF     
   8183 FFFCB612 FF FF FF FF FF FF FF FF     
   8184 FFFCB61A FF FF FF FF FF FF FF FF     
   8185 FFFCB622 FF FF FF FF FF FF FF FF     
   8186 FFFCB62A FF FF FF FF FF FF FF FF     
   8187 FFFCB632 FF FF FF FF FF FF FF FF     
   8188 FFFCB63A FF FF FF FF FF FF FF FF     
   8189 FFFCB642 FF FF FF FF FF FF FF FF     
   8190 FFFCB64A FF FF FF FF FF FF FF FF     
   8191 FFFCB652 FF FF FF FF FF FF FF FF     
   8192 FFFCB65A FF FF FF FF FF FF FF FF     
   8193 FFFCB662 FF FF FF FF FF FF FF FF     
   8194 FFFCB66A FF FF FF FF FF FF FF FF     
   8195 FFFCB672 FF FF FF FF FF FF FF FF     
   8196 FFFCB67A FF FF FF FF FF FF FF FF     
   8197 FFFCB682 FF FF FF FF FF FF FF FF     
   8198 FFFCB68A FF FF FF FF FF FF FF FF     
   8199 FFFCB692 FF FF FF FF FF FF FF FF     
   8200 FFFCB69A FF FF FF FF FF FF FF FF     
   8201 FFFCB6A2 FF FF FF FF FF FF FF FF     
   8202 FFFCB6AA FF FF FF FF FF FF FF FF     
   8203 FFFCB6B2 FF FF FF FF FF FF FF FF     
   8204 FFFCB6BA FF FF FF FF FF FF FF FF     
   8205 FFFCB6C2 FF FF FF FF FF FF FF FF     
   8206 FFFCB6CA FF FF FF FF FF FF FF FF     
   8207 FFFCB6D2 FF FF FF FF FF FF FF FF     
   8208 FFFCB6DA FF FF FF FF FF FF FF FF     
   8209 FFFCB6E2 FF FF FF FF FF FF FF FF     
   8210 FFFCB6EA FF FF FF FF FF FF FF FF     
   8211 FFFCB6F2 FF FF FF FF FF FF FF FF     
   8212 FFFCB6FA FF FF FF FF FF FF FF FF     
   8213 FFFCB702 FF FF FF FF FF FF FF FF     
   8214 FFFCB70A FF FF FF FF FF FF FF FF     
   8215 FFFCB712 FF FF FF FF FF FF FF FF     
   8216 FFFCB71A FF FF FF FF FF FF FF FF     
   8217 FFFCB722 FF FF FF FF FF FF FF FF     
   8218 FFFCB72A FF FF FF FF FF FF FF FF     
   8219 FFFCB732 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 80
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8220 FFFCB73A FF FF FF FF FF FF FF FF     
   8221 FFFCB742 FF FF FF FF FF FF FF FF     
   8222 FFFCB74A FF FF FF FF FF FF FF FF     
   8223 FFFCB752 FF FF FF FF FF FF FF FF     
   8224 FFFCB75A FF FF FF FF FF FF FF FF     
   8225 FFFCB762 FF FF FF FF FF FF FF FF     
   8226 FFFCB76A FF FF FF FF FF FF FF FF     
   8227 FFFCB772 FF FF FF FF FF FF FF FF     
   8228 FFFCB77A FF FF FF FF FF FF FF FF     
   8229 FFFCB782 FF FF FF FF FF FF FF FF     
   8230 FFFCB78A FF FF FF FF FF FF FF FF     
   8231 FFFCB792 FF FF FF FF FF FF FF FF     
   8232 FFFCB79A FF FF FF FF FF FF FF FF     
   8233 FFFCB7A2 FF FF FF FF FF FF FF FF     
   8234 FFFCB7AA FF FF FF FF FF FF FF FF     
   8235 FFFCB7B2 FF FF FF FF FF FF FF FF     
   8236 FFFCB7BA FF FF FF FF FF FF FF FF     
   8237 FFFCB7C2 FF FF FF FF FF FF FF FF     
   8238 FFFCB7CA FF FF FF FF FF FF FF FF     
   8239 FFFCB7D2 FF FF FF FF FF FF FF FF     
   8240 FFFCB7DA FF FF FF FF FF FF FF FF     
   8241 FFFCB7E2 FF FF FF FF FF FF FF FF     
   8242 FFFCB7EA FF FF FF FF FF FF FF FF     
   8243 FFFCB7F2 FF FF FF FF FF FF FF FF     
   8244 FFFCB7FA FF FF FF FF FF FF FF FF     
   8245 FFFCB802 FF FF FF FF FF FF FF FF     
   8246 FFFCB80A FF FF FF FF FF FF FF FF     
   8247 FFFCB812 FF FF FF FF FF FF FF FF     
   8248 FFFCB81A FF FF FF FF FF FF FF FF     
   8249 FFFCB822 FF FF FF FF FF FF FF FF     
   8250 FFFCB82A FF FF FF FF FF FF FF FF     
   8251 FFFCB832 FF FF FF FF FF FF FF FF     
   8252 FFFCB83A FF FF FF FF FF FF FF FF     
   8253 FFFCB842 FF FF FF FF FF FF FF FF     
   8254 FFFCB84A FF FF FF FF FF FF FF FF     
   8255 FFFCB852 FF FF FF FF FF FF FF FF     
   8256 FFFCB85A FF FF FF FF FF FF FF FF     
   8257 FFFCB862 FF FF FF FF FF FF FF FF     
   8258 FFFCB86A FF FF FF FF FF FF FF FF     
   8259 FFFCB872 FF FF FF FF FF FF FF FF     
   8260 FFFCB87A FF FF FF FF FF FF FF FF     
   8261 FFFCB882 FF FF FF FF FF FF FF FF     
   8262 FFFCB88A FF FF FF FF FF FF FF FF     
   8263 FFFCB892 FF FF FF FF FF FF FF FF     
   8264 FFFCB89A FF FF FF FF FF FF FF FF     
   8265 FFFCB8A2 FF FF FF FF FF FF FF FF     
   8266 FFFCB8AA FF FF FF FF FF FF FF FF     
   8267 FFFCB8B2 FF FF FF FF FF FF FF FF     
   8268 FFFCB8BA FF FF FF FF FF FF FF FF     
   8269 FFFCB8C2 FF FF FF FF FF FF FF FF     
   8270 FFFCB8CA FF FF FF FF FF FF FF FF     
   8271 FFFCB8D2 FF FF FF FF FF FF FF FF     
   8272 FFFCB8DA FF FF FF FF FF FF FF FF     
   8273 FFFCB8E2 FF FF FF FF FF FF FF FF     
   8274 FFFCB8EA FF FF FF FF FF FF FF FF     
   8275 FFFCB8F2 FF FF FF FF FF FF FF FF     
   8276 FFFCB8FA FF FF FF FF FF FF FF FF     
   8277 FFFCB902 FF FF FF FF FF FF FF FF     
   8278 FFFCB90A FF FF FF FF FF FF FF FF     
   8279 FFFCB912 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 81
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8280 FFFCB91A FF FF FF FF FF FF FF FF     
   8281 FFFCB922 FF FF FF FF FF FF FF FF     
   8282 FFFCB92A FF FF FF FF FF FF FF FF     
   8283 FFFCB932 FF FF FF FF FF FF FF FF     
   8284 FFFCB93A FF FF FF FF FF FF FF FF     
   8285 FFFCB942 FF FF FF FF FF FF FF FF     
   8286 FFFCB94A FF FF FF FF FF FF FF FF     
   8287 FFFCB952 FF FF FF FF FF FF FF FF     
   8288 FFFCB95A FF FF FF FF FF FF FF FF     
   8289 FFFCB962 FF FF FF FF FF FF FF FF     
   8290 FFFCB96A FF FF FF FF FF FF FF FF     
   8291 FFFCB972 FF FF FF FF FF FF FF FF     
   8292 FFFCB97A FF FF FF FF FF FF FF FF     
   8293 FFFCB982 FF FF FF FF FF FF FF FF     
   8294 FFFCB98A FF FF FF FF FF FF FF FF     
   8295 FFFCB992 FF FF FF FF FF FF FF FF     
   8296 FFFCB99A FF FF FF FF FF FF FF FF     
   8297 FFFCB9A2 FF FF FF FF FF FF FF FF     
   8298 FFFCB9AA FF FF FF FF FF FF FF FF     
   8299 FFFCB9B2 FF FF FF FF FF FF FF FF     
   8300 FFFCB9BA FF FF FF FF FF FF FF FF     
   8301 FFFCB9C2 FF FF FF FF FF FF FF FF     
   8302 FFFCB9CA FF FF FF FF FF FF FF FF     
   8303 FFFCB9D2 FF FF FF FF FF FF FF FF     
   8304 FFFCB9DA FF FF FF FF FF FF FF FF     
   8305 FFFCB9E2 FF FF FF FF FF FF FF FF     
   8306 FFFCB9EA FF FF FF FF FF FF FF FF     
   8307 FFFCB9F2 FF FF FF FF FF FF FF FF     
   8308 FFFCB9FA FF FF FF FF FF FF FF FF     
   8309 FFFCBA02 FF FF FF FF FF FF FF FF     
   8310 FFFCBA0A FF FF FF FF FF FF FF FF     
   8311 FFFCBA12 FF FF FF FF FF FF FF FF     
   8312 FFFCBA1A FF FF FF FF FF FF FF FF     
   8313 FFFCBA22 FF FF FF FF FF FF FF FF     
   8314 FFFCBA2A FF FF FF FF FF FF FF FF     
   8315 FFFCBA32 FF FF FF FF FF FF FF FF     
   8316 FFFCBA3A FF FF FF FF FF FF FF FF     
   8317 FFFCBA42 FF FF FF FF FF FF FF FF     
   8318 FFFCBA4A FF FF FF FF FF FF FF FF     
   8319 FFFCBA52 FF FF FF FF FF FF FF FF     
   8320 FFFCBA5A FF FF FF FF FF FF FF FF     
   8321 FFFCBA62 FF FF FF FF FF FF FF FF     
   8322 FFFCBA6A FF FF FF FF FF FF FF FF     
   8323 FFFCBA72 FF FF FF FF FF FF FF FF     
   8324 FFFCBA7A FF FF FF FF FF FF FF FF     
   8325 FFFCBA82 FF FF FF FF FF FF FF FF     
   8326 FFFCBA8A FF FF FF FF FF FF FF FF     
   8327 FFFCBA92 FF FF FF FF FF FF FF FF     
   8328 FFFCBA9A FF FF FF FF FF FF FF FF     
   8329 FFFCBAA2 FF FF FF FF FF FF FF FF     
   8330 FFFCBAAA FF FF FF FF FF FF FF FF     
   8331 FFFCBAB2 FF FF FF FF FF FF FF FF     
   8332 FFFCBABA FF FF FF FF FF FF FF FF     
   8333 FFFCBAC2 FF FF FF FF FF FF FF FF     
   8334 FFFCBACA FF FF FF FF FF FF FF FF     
   8335 FFFCBAD2 FF FF FF FF FF FF FF FF     
   8336 FFFCBADA FF FF FF FF FF FF FF FF     
   8337 FFFCBAE2 FF FF FF FF FF FF FF FF     
   8338 FFFCBAEA FF FF FF FF FF FF FF FF     
   8339 FFFCBAF2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 82
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8340 FFFCBAFA FF FF FF FF FF FF FF FF     
   8341 FFFCBB02 FF FF FF FF FF FF FF FF     
   8342 FFFCBB0A FF FF FF FF FF FF FF FF     
   8343 FFFCBB12 FF FF FF FF FF FF FF FF     
   8344 FFFCBB1A FF FF FF FF FF FF FF FF     
   8345 FFFCBB22 FF FF FF FF FF FF FF FF     
   8346 FFFCBB2A FF FF FF FF FF FF FF FF     
   8347 FFFCBB32 FF FF FF FF FF FF FF FF     
   8348 FFFCBB3A FF FF FF FF FF FF FF FF     
   8349 FFFCBB42 FF FF FF FF FF FF FF FF     
   8350 FFFCBB4A FF FF FF FF FF FF FF FF     
   8351 FFFCBB52 FF FF FF FF FF FF FF FF     
   8352 FFFCBB5A FF FF FF FF FF FF FF FF     
   8353 FFFCBB62 FF FF FF FF FF FF FF FF     
   8354 FFFCBB6A FF FF FF FF FF FF FF FF     
   8355 FFFCBB72 FF FF FF FF FF FF FF FF     
   8356 FFFCBB7A FF FF FF FF FF FF FF FF     
   8357 FFFCBB82 FF FF FF FF FF FF FF FF     
   8358 FFFCBB8A FF FF FF FF FF FF FF FF     
   8359 FFFCBB92 FF FF FF FF FF FF FF FF     
   8360 FFFCBB9A FF FF FF FF FF FF FF FF     
   8361 FFFCBBA2 FF FF FF FF FF FF FF FF     
   8362 FFFCBBAA FF FF FF FF FF FF FF FF     
   8363 FFFCBBB2 FF FF FF FF FF FF FF FF     
   8364 FFFCBBBA FF FF FF FF FF FF FF FF     
   8365 FFFCBBC2 FF FF FF FF FF FF FF FF     
   8366 FFFCBBCA FF FF FF FF FF FF FF FF     
   8367 FFFCBBD2 FF FF FF FF FF FF FF FF     
   8368 FFFCBBDA FF FF FF FF FF FF FF FF     
   8369 FFFCBBE2 FF FF FF FF FF FF FF FF     
   8370 FFFCBBEA FF FF FF FF FF FF FF FF     
   8371 FFFCBBF2 FF FF FF FF FF FF FF FF     
   8372 FFFCBBFA FF FF FF FF FF FF FF FF     
   8373 FFFCBC02 FF FF FF FF FF FF FF FF     
   8374 FFFCBC0A FF FF FF FF FF FF FF FF     
   8375 FFFCBC12 FF FF FF FF FF FF FF FF     
   8376 FFFCBC1A FF FF FF FF FF FF FF FF     
   8377 FFFCBC22 FF FF FF FF FF FF FF FF     
   8378 FFFCBC2A FF FF FF FF FF FF FF FF     
   8379 FFFCBC32 FF FF FF FF FF FF FF FF     
   8380 FFFCBC3A FF FF FF FF FF FF FF FF     
   8381 FFFCBC42 FF FF FF FF FF FF FF FF     
   8382 FFFCBC4A FF FF FF FF FF FF FF FF     
   8383 FFFCBC52 FF FF FF FF FF FF FF FF     
   8384 FFFCBC5A FF FF FF FF FF FF FF FF     
   8385 FFFCBC62 FF FF FF FF FF FF FF FF     
   8386 FFFCBC6A FF FF FF FF FF FF FF FF     
   8387 FFFCBC72 FF FF FF FF FF FF FF FF     
   8388 FFFCBC7A FF FF FF FF FF FF FF FF     
   8389 FFFCBC82 FF FF FF FF FF FF FF FF     
   8390 FFFCBC8A FF FF FF FF FF FF FF FF     
   8391 FFFCBC92 FF FF FF FF FF FF FF FF     
   8392 FFFCBC9A FF FF FF FF FF FF FF FF     
   8393 FFFCBCA2 FF FF FF FF FF FF FF FF     
   8394 FFFCBCAA FF FF FF FF FF FF FF FF     
   8395 FFFCBCB2 FF FF FF FF FF FF FF FF     
   8396 FFFCBCBA FF FF FF FF FF FF FF FF     
   8397 FFFCBCC2 FF FF FF FF FF FF FF FF     
   8398 FFFCBCCA FF FF FF FF FF FF FF FF     
   8399 FFFCBCD2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 83
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8400 FFFCBCDA FF FF FF FF FF FF FF FF     
   8401 FFFCBCE2 FF FF FF FF FF FF FF FF     
   8402 FFFCBCEA FF FF FF FF FF FF FF FF     
   8403 FFFCBCF2 FF FF FF FF FF FF FF FF     
   8404 FFFCBCFA FF FF FF FF FF FF FF FF     
   8405 FFFCBD02 FF FF FF FF FF FF FF FF     
   8406 FFFCBD0A FF FF FF FF FF FF FF FF     
   8407 FFFCBD12 FF FF FF FF FF FF FF FF     
   8408 FFFCBD1A FF FF FF FF FF FF FF FF     
   8409 FFFCBD22 FF FF FF FF FF FF FF FF     
   8410 FFFCBD2A FF FF FF FF FF FF FF FF     
   8411 FFFCBD32 FF FF FF FF FF FF FF FF     
   8412 FFFCBD3A FF FF FF FF FF FF FF FF     
   8413 FFFCBD42 FF FF FF FF FF FF FF FF     
   8414 FFFCBD4A FF FF FF FF FF FF FF FF     
   8415 FFFCBD52 FF FF FF FF FF FF FF FF     
   8416 FFFCBD5A FF FF FF FF FF FF FF FF     
   8417 FFFCBD62 FF FF FF FF FF FF FF FF     
   8418 FFFCBD6A FF FF FF FF FF FF FF FF     
   8419 FFFCBD72 FF FF FF FF FF FF FF FF     
   8420 FFFCBD7A FF FF FF FF FF FF FF FF     
   8421 FFFCBD82 FF FF FF FF FF FF FF FF     
   8422 FFFCBD8A FF FF FF FF FF FF FF FF     
   8423 FFFCBD92 FF FF FF FF FF FF FF FF     
   8424 FFFCBD9A FF FF FF FF FF FF FF FF     
   8425 FFFCBDA2 FF FF FF FF FF FF FF FF     
   8426 FFFCBDAA FF FF FF FF FF FF FF FF     
   8427 FFFCBDB2 FF FF FF FF FF FF FF FF     
   8428 FFFCBDBA FF FF FF FF FF FF FF FF     
   8429 FFFCBDC2 FF FF FF FF FF FF FF FF     
   8430 FFFCBDCA FF FF FF FF FF FF FF FF     
   8431 FFFCBDD2 FF FF FF FF FF FF FF FF     
   8432 FFFCBDDA FF FF FF FF FF FF FF FF     
   8433 FFFCBDE2 FF FF FF FF FF FF FF FF     
   8434 FFFCBDEA FF FF FF FF FF FF FF FF     
   8435 FFFCBDF2 FF FF FF FF FF FF FF FF     
   8436 FFFCBDFA FF FF FF FF FF FF FF FF     
   8437 FFFCBE02 FF FF FF FF FF FF FF FF     
   8438 FFFCBE0A FF FF FF FF FF FF FF FF     
   8439 FFFCBE12 FF FF FF FF FF FF FF FF     
   8440 FFFCBE1A FF FF FF FF FF FF FF FF     
   8441 FFFCBE22 FF FF FF FF FF FF FF FF     
   8442 FFFCBE2A FF FF FF FF FF FF FF FF     
   8443 FFFCBE32 FF FF FF FF FF FF FF FF     
   8444 FFFCBE3A FF FF FF FF FF FF FF FF     
   8445 FFFCBE42 FF FF FF FF FF FF FF FF     
   8446 FFFCBE4A FF FF FF FF FF FF FF FF     
   8447 FFFCBE52 FF FF FF FF FF FF FF FF     
   8448 FFFCBE5A FF FF FF FF FF FF FF FF     
   8449 FFFCBE62 FF FF FF FF FF FF FF FF     
   8450 FFFCBE6A FF FF FF FF FF FF FF FF     
   8451 FFFCBE72 FF FF FF FF FF FF FF FF     
   8452 FFFCBE7A FF FF FF FF FF FF FF FF     
   8453 FFFCBE82 FF FF FF FF FF FF FF FF     
   8454 FFFCBE8A FF FF FF FF FF FF FF FF     
   8455 FFFCBE92 FF FF FF FF FF FF FF FF     
   8456 FFFCBE9A FF FF FF FF FF FF FF FF     
   8457 FFFCBEA2 FF FF FF FF FF FF FF FF     
   8458 FFFCBEAA FF FF FF FF FF FF FF FF     
   8459 FFFCBEB2 FF FF FF FF FF FF FF FF     
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 84
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8460 FFFCBEBA FF FF FF FF FF FF FF FF     
   8461 FFFCBEC2 FF FF FF FF FF FF FF FF     
   8462 FFFCBECA FF FF FF FF FF FF FF FF     
   8463 FFFCBED2 FF FF FF FF FF FF FF FF     
   8464 FFFCBEDA FF FF FF FF FF FF FF FF     
   8465 FFFCBEE2 FF FF FF FF FF FF FF FF     
   8466 FFFCBEEA FF FF FF FF FF FF FF FF     
   8467 FFFCBEF2 FF FF FF FF FF FF FF FF     
   8468 FFFCBEFA FF FF FF FF FF FF FF FF     
   8469 FFFCBF02 FF FF FF FF FF FF FF FF     
   8470 FFFCBF0A FF FF FF FF FF FF FF FF     
   8471 FFFCBF12 FF FF FF FF FF FF FF FF     
   8472 FFFCBF1A FF FF FF FF FF FF FF FF     
   8473 FFFCBF22 FF FF FF FF FF FF FF FF     
   8474 FFFCBF2A FF FF FF FF FF FF FF FF     
   8475 FFFCBF32 FF FF FF FF FF FF FF FF     
   8476 FFFCBF3A FF FF FF FF FF FF FF FF     
   8477 FFFCBF42 FF FF FF FF FF FF FF FF     
   8478 FFFCBF4A FF FF FF FF FF FF FF FF     
   8479 FFFCBF52 FF FF FF FF FF FF FF FF     
   8480 FFFCBF5A FF FF FF FF FF FF FF FF     
   8481 FFFCBF62 FF FF FF FF FF FF FF FF     
   8482 FFFCBF6A FF FF FF FF FF FF FF FF     
   8483 FFFCBF72 FF FF FF FF FF FF FF FF     
   8484 FFFCBF7A FF FF FF FF FF FF FF FF     
   8485 FFFCBF82 FF FF FF FF FF FF FF FF     
   8486 FFFCBF8A FF FF FF FF FF FF FF FF     
   8487 FFFCBF92 FF FF FF FF FF FF FF FF     
   8488 FFFCBF9A FF FF FF FF FF FF FF FF     
   8489 FFFCBFA2 FF FF FF FF FF FF FF FF     
   8490 FFFCBFAA FF FF FF FF FF FF FF FF     
   8491 FFFCBFB2 FF FF FF FF FF FF FF FF     
   8492 FFFCBFBA FF FF FF FF FF FF FF FF     
   8493 FFFCBFC2 FF FF FF FF FF FF FF FF     
   8494 FFFCBFCA FF FF FF FF FF FF FF FF     
   8495 FFFCBFD2 FF FF FF FF FF FF FF FF     
   8496 FFFCBFDA FF FF FF FF FF FF FF FF     
   8497 FFFCBFE2 FF FF FF FF FF FF FF FF     
   8498 FFFCBFEA FF FF FF FF FF FF FF FF     
   8499 FFFCBFF2 FF FF FF FF FF FF FF FF     
   8500 FFFCBFFA FF FF FF FF FF FF           
                                             ;*
                                             ;* Standard jump table. You can change these addresses if you are
                                             ;* customizing this interpreter for a different environment.
                                             ;*
   8505 FFFCC000 6000 0022                   START	BRA.L	CSTART		;Cold Start entry point
   8506 FFFCC004 6000 005A                   GOWARM	BRA.L	WSTART		;Warm Start entry point
   8507 FFFCC008 6000 0B68                   GOOUT	BRA.L	OUTC		;Jump to character-out routine
   8508 FFFCC00C 6000 0B74                   GOIN	BRA.L	INC		;Jump to character-in routine
   8509 FFFCC010 6000 0B86                   GOAUXO	BRA.L	AUXOUT		;Jump to auxiliary-out routine
   8510 FFFCC014 6000 0B94                   GOAUXI	BRA.L	AUXIN		;Jump to auxiliary-in routine
   8511 FFFCC018 6000 0BA6                   GOBYE	BRA.L	BYEBYE		;Jump to monitor, DOS, etc.
                                             ;*
                                             ;* Modifiable system constants:
                                             ;*
   8515 FFFCC01C 00200000                    TXTBGN	DC.L	0x200000	;beginning of program memory
   8516 FFFCC020 1E000000                    ENDMEM	DC.L	0x1E000000	;	end of available memory
                                             ;*
                                             ;* The main interpreter starts here:
                                             ;*
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 85
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8520 FFFCC024                             CSTART:
   8521 FFFCC024 41F9 FFFC C000              	LEA		START,A0
   8522 FFFCC02A 21C8 0600                   	MOVE.L	A0,RANPNT
   8523 FFFCC02E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;initialize stack pointer
   8524 FFFCC034 4DF9 FFFC CBC6              	LEA		INITMSG,A6	;tell who we are
   8525 FFFCC03A 6100 0B2A                   	BSR.L	PRMESG
   8526 FFFCC03E 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;init. end-of-program pointer
   8527 FFFCC046 2039 FFFC C020              	MOVE.L	ENDMEM,D0	;get address of end of memory
   8528 FFFCC04C 0480 0000 0800              	SUB.L	#2048,D0	;reserve 2K for the stack
   8529 FFFCC052 21C0 062C                   	MOVE.L	D0,STKLMT
   8530 FFFCC056 0480 0000 006C              	SUB.L	#108,D0 	;reserve variable area (27 long words)
   8531 FFFCC05C 21C0 0628                   	MOVE.L	D0,VARBGN
   8532 FFFCC060                             WSTART:
   8533 FFFCC060 4280                        	CLR.L	D0		;initialize internal variables
   8534 FFFCC062 21C0 0610                   	MOVE.L	D0,LOPVAR
   8535 FFFCC066 21C0 0608                   	MOVE.L	D0,STKGOS
   8536 FFFCC06A 21C0 0604                   	MOVE.L	D0,CURRNT	;current line number pointer = 0
   8537 FFFCC06E 2E79 FFFC C020              	MOVE.L	ENDMEM,SP	;init S.P. again, just in case
   8538 FFFCC074 4DF9 FFFC CBEC              	LEA	OKMSG,A6	;display "OK"
   8539 FFFCC07A 6100 0AEA                   	BSR.L	PRMESG
   8540 FFFCC07E                             ST3:
   8541 FFFCC07E 103C 003E                   	MOVE.B	#'>',D0  ;       Prompt with a '>' and
   8542 FFFCC082 6100 0810                   	BSR.L	GETLN	;	read a line.
   8543 FFFCC086 6100 0A7A                   	BSR.L	TOUPBUF ;	convert to upper case
   8544 FFFCC08A 2848                        	MOVE.L	A0,A4	;	save pointer to end of line
   8545 FFFCC08C 41F8 0630                   	LEA	BUFFER,A0	;point to the beginning of line
   8546 FFFCC090 6100 0A2C                   	BSR.L	TSTNUM	;	is there a number there?
   8547 FFFCC094 6100 0A60                   	BSR.L	IGNBLK	;	skip trailing blanks
   8548 FFFCC098 4A81                        	TST	D1		;does line no. exist? (or nonzero?)
   8549 FFFCC09A 6700 011A                   	BEQ.L	DIRECT	;	if not, it's a direct statement
   8550 FFFCC09E B2BC 0000 FFFF              	CMP.L	#$FFFF,D1	;see if line no. is <= 16 bits
   8551 FFFCC0A4 6400 07E4                   	BCC.L	QHOW		;if not, we've overflowed
   8552 FFFCC0A8 1101                        	MOVE.B	D1,-(A0)	;store the binary line no.
   8553 FFFCC0AA E099                        	ROR	#8,D1		;(Kludge to store a word on a
   8554 FFFCC0AC 1101                        	MOVE.B	D1,-(A0)	;possible byte boundary)
   8555 FFFCC0AE E199                        	ROL	#8,D1
   8556 FFFCC0B0 6100 0882                   	BSR.L	FNDLN	;	find this line in save area
   8557 FFFCC0B4 2A49                        	MOVE.L	A1,A5	;	save possible line pointer
   8558 FFFCC0B6 6612                        	BNE	ST4				;	if not found, insert
   8559 FFFCC0B8 6100 08A2                   	BSR.L	FNDNXT		;find the next line (into A1)
   8560 FFFCC0BC 244D                        	MOVE.L	A5,A2		;pointer to line to be deleted
   8561 FFFCC0BE 2678 0624                   	MOVE.L	TXTUNF,A3	;points to top of save area
   8562 FFFCC0C2 6100 08A2                   	BSR.L	MVUP		;move up to delete
   8563 FFFCC0C6 21CA 0624                   	MOVE.L	A2,TXTUNF	;update the end pointer
   8564 FFFCC0CA                             ST4:
   8565 FFFCC0CA 200C                        	MOVE.L	A4,D0		;calculate the length of new line
   8566 FFFCC0CC 9088                        	SUB.L	A0,D0
   8567 FFFCC0CE B0BC 0000 0003              	CMP.L	#3,D0		;is it just a line no. & CR?
   8568 FFFCC0D4 67A8                        	BEQ	ST3				;if so, it was just a delete
   8569 FFFCC0D6 2678 0624                   	MOVE.L	TXTUNF,A3	;compute new end
   8570 FFFCC0DA 2C4B                        	MOVE.L	A3,A6
   8571 FFFCC0DC D7C0                        	ADD.L	D0,A3
   8572 FFFCC0DE 2038 0628                   	MOVE.L	VARBGN,D0	;see if there's enough room
   8573 FFFCC0E2 B08B                        	CMP.L	A3,D0
   8574 FFFCC0E4 6300 079A                   	BLS.L	QSORRY		;if not, say so
   8575 FFFCC0E8 21CB 0624                   	MOVE.L	A3,TXTUNF	;if so, store new end position
   8576 FFFCC0EC 224E                        	MOVE.L	A6,A1		;points to old unfilled area
   8577 FFFCC0EE 244D                        	MOVE.L	A5,A2		;points to beginning of move area
   8578 FFFCC0F0 6100 087E                   	BSR.L	MVDOWN		;move things out of the way
   8579 FFFCC0F4 2248                        	MOVE.L	A0,A1		;set up to do the insertion
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 86
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8580 FFFCC0F6 244D                        	MOVE.L	A5,A2
   8581 FFFCC0F8 264C                        	MOVE.L	A4,A3
   8582 FFFCC0FA 6100 086A                   	BSR.L	MVUP		;do it
   8583 FFFCC0FE 6000 FF7E                   	BRA	ST3		;go back and get another line
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** Tables *** DIRECT *** EXEC ***
                                             ;*
                                             ;* This section of the code tests a string against a table. When
                                             ;* a match is found, control is transferred to the section of
                                             ;* code according to the table.
                                             ;*
                                             ;* At 'EXEC', A0 should point to the string, A1 should point to
                                             ;* the character table, and A2 should point to the execution
                                             ;* table. At 'DIRECT', A0 should point to the string, A1 and
                                             ;* A2 will be set up to point to TAB1 and TAB1.1, which are
                                             ;* the tables of all direct and statement commands.
                                             ;*
                                             ;* A '.' in the string will terminate the test and the partial
                                             ;* match will be considered as a match, e.g. 'P.', 'PR.','PRI.',
                                             ;* 'PRIN.', or 'PRINT' will all match 'PRINT'.
                                             ;*
                                             ;* There are two tables: the character table and the execution
                                             ;* table. The character table consists of any number of text items.
                                             ;* Each item is a string of characters with the last character's
                                             ;* high bit set to one. The execution table holds a 16-bit
                                             ;* execution addresses that correspond to each entry in the
                                             ;* character table.
                                             ;*
                                             ;* The end of the character table is a 0 byte which corresponds
                                             ;* to the default routine in the execution table, which is
                                             ;* executed if none of the other table items are matched.
                                             ;*
                                             ;* Character-matching tables:
   8616 FFFCC102                             TAB1:
   8617 FFFCC102 4C 49 53 D4                 	DC.B	'LIS',('T'+0x80) ;        Direct commands
   8618 FFFCC106 4C 4F 41 C4                 	DC.B	'LOA',('D'+0x80)
   8619 FFFCC10A 4E 45 D7                    	DC.B	'NE',('W'+0x80)
   8620 FFFCC10D 52 55 CE                    	DC.B	'RU',('N'+0x80)
   8621 FFFCC110 53 41 56 C5                 	DC.B	'SAV',('E'+0x80)
   8622 FFFCC114                             TAB2:
   8623 FFFCC114 4E 45 58 D4                 	DC.B	'NEX',('T'+0x80)  ;       Direct / statement
   8624 FFFCC118 4C 45 D4                    	DC.B	'LE',('T'+0x80)
   8625 FFFCC11B 49 C6                       	DC.B	'I',('F'+0x80)
   8626 FFFCC11D 47 4F 54 CF                 	DC.B	'GOT',('O'+0x80)
   8627 FFFCC121 47 4F 53 55 C2              	DC.B	'GOSU',('B'+0x80)
   8628 FFFCC126 52 45 54 55 52 CE           	DC.B	'RETUR',('N'+0x80)
   8629 FFFCC12C 52 45 CD                    	DC.B	'RE',('M'+0x80)
   8630 FFFCC12F 46 4F D2                    	DC.B	'FO',('R'+0x80)
   8631 FFFCC132 49 4E 50 55 D4              	DC.B	'INPU',('T'+0x80)
   8632 FFFCC137 50 52 49 4E D4              	DC.B	'PRIN',('T'+0x80)
   8633 FFFCC13C 50 4F 4B C5                 	DC.B	'POK',('E'+0x80)
   8634 FFFCC140 53 54 4F D0                 	DC.B	'STO',('P'+0x80)
   8635 FFFCC144 42 59 C5                    	DC.B	'BY',('E'+0x80)
   8636 FFFCC147 43 41 4C CC                 	DC.B	'CAL',('L'+0x80)
   8637 FFFCC14B 00                          	DC.B	0
   8638 FFFCC14C                             TAB4:
   8639 FFFCC14C 50 45 45 CB                 	DC.B	'PEE',('K'+0x80)   ;      Functions
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 87
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8640 FFFCC150 52 4E C4                    	DC.B	'RN',('D'+0x80)
   8641 FFFCC153 41 42 D3                    	DC.B	'AB',('S'+0x80)
   8642 FFFCC156 53 49 5A C5                 	DC.B	'SIZ',('E'+0x80)
   8643 FFFCC15A 00                          	DC.B	0
   8644 FFFCC15B                             TAB5:
   8645 FFFCC15B 54 CF                       	DC.B	'T',('O'+0x80)      ;     "TO" in "FOR"
   8646 FFFCC15D 00                          	DC.B	0
   8647 FFFCC15E                             TAB6:
   8648 FFFCC15E 53 54 45 D0                 	DC.B	'STE',('P'+0x80)     ;    "STEP" in "FOR"
   8649 FFFCC162 00                          	DC.B	0
   8650 FFFCC163                             TAB8:
   8651 FFFCC163 3E BD                       	DC.B	'>',('='+0x80)        ;   Relational operators
   8652 FFFCC165 3C BE                       	DC.B	'<',('>'+0x80)
   8653 FFFCC167 BE                          	DC.B	('>'+0x80)
   8654 FFFCC168 BD                          	DC.B	('='+0x80)
   8655 FFFCC169 3C BD                       	DC.B	'<',('='+0x80)
   8656 FFFCC16B BC                          	DC.B	('<'+0x80)
   8657 FFFCC16C 00                          	DC.B	0
   8658 FFFCC16D 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             	align	2
                                             ;* Execution address tables:
   8662 FFFCC16E                             TAB1_1:
   8663 FFFCC16E C266                        	DC.W	LIST_			;Direct commands
   8664 FFFCC170 C4A8                        	DC.W	LOAD
   8665 FFFCC172 C200                        	DC.W	NEW
   8666 FFFCC174 C214                        	DC.W	RUN
   8667 FFFCC176 C50C                        	DC.W	SAVE
   8668 FFFCC178                             TAB2_1:
   8669 FFFCC178 C3B4                        	DC.W	NEXT			;Direct / statement
   8670 FFFCC17A C498                        	DC.W	LET
   8671 FFFCC17C C404                        	DC.W	IF
   8672 FFFCC17E C252                        	DC.W	GOTO
   8673 FFFCC180 C2FC                        	DC.W	GOSUB
   8674 FFFCC182 C324                        	DC.W	RETURN
   8675 FFFCC184 C402                        	DC.W	REM
   8676 FFFCC186 C342                        	DC.W	FOR
   8677 FFFCC188 C42A                        	DC.W	INPUT
   8678 FFFCC18A C292                        	DC.W	PRINT
   8679 FFFCC18C C590                        	DC.W	POKE
   8680 FFFCC18E C20C                        	DC.W	STOP_
   8681 FFFCC190 C018                        	DC.W	GOBYE
   8682 FFFCC192 C5AC                        	DC.W	CALL
   8683 FFFCC194 C492                        	DC.W	DEFLT
   8684 FFFCC196                             TAB4_1:
   8685 FFFCC196 C7A2                        	DC.W	PEEK			;Functions
   8686 FFFCC198 C7AE                        	DC.W	RND
   8687 FFFCC19A C7E4                        	DC.W	ABS
   8688 FFFCC19C C7F4                        	DC.W	SIZE_
   8689 FFFCC19E C6A6                        	DC.W	XP40
   8690 FFFCC1A0                             TAB5_1:
   8691 FFFCC1A0 C35E                        	DC.W	FR1		;	"TO" in "FOR"
   8692 FFFCC1A2 C83E                        	DC.W	QWHAT
   8693 FFFCC1A4                             TAB6_1:
   8694 FFFCC1A4 C376                        	DC.W	FR2		;	"STEP" in "FOR"
   8695 FFFCC1A6 C37C                        	DC.W	FR3
   8696 FFFCC1A8                             TAB8_1:
   8697 FFFCC1A8 C5D8                        	DC.W	XP11;	>=		Relational operators
   8698 FFFCC1AA C5E0                        	DC.W	XP12	;<>
   8699 FFFCC1AC C5E8                        	DC.W	XP13	;>
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 88
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8700 FFFCC1AE C5F8                        	DC.W	XP15	;=
   8701 FFFCC1B0 C5F0                        	DC.W	XP14	;<=
   8702 FFFCC1B2 C602                        	DC.W	XP16	;<
   8703 FFFCC1B4 C614                        	DC.W	XP17
                                             ;*
   8705 FFFCC1B6                             DIRECT:
   8706 FFFCC1B6 43F9 FFFC C102              	LEA	TAB1,A1
   8707 FFFCC1BC 45F9 FFFC C16E              	LEA	TAB1_1,A2
   8708 FFFCC1C2                             EXEC:
   8709 FFFCC1C2 6100 0932                   	BSR.L	IGNBLK;		ignore leading blanks
   8710 FFFCC1C6 2648                        	MOVE.L	A0,A3		;save the pointer
   8711 FFFCC1C8 4202                        	CLR.B	D2		;clear match flag
   8712 FFFCC1CA                             EXLP:
   8713 FFFCC1CA 1018                        	MOVE.B	(A0)+,D0;	get the program character
   8714 FFFCC1CC 1211                        	MOVE.B	(A1),D1 	;get the table character
   8715 FFFCC1CE 6604                        	BNE	EXNGO		;If end of table,
   8716 FFFCC1D0 204B                        	MOVE.L	A3,A0	;;	restore the text pointer and...
   8717 FFFCC1D2 6024                        	BRA	EXGO		;execute the default.
   8718 FFFCC1D4                             EXNGO:
   8719 FFFCC1D4 1600                        	MOVE.B	D0,D3	;	Else check for period...
   8720 FFFCC1D6 C602                        	AND.B	D2,D3		;and a match.
   8721 FFFCC1D8 B63C 002E                   	CMP.B	#'.',D3
   8722 FFFCC1DC 671A                        	BEQ	EXGO		;if so, execute
   8723 FFFCC1DE 0201 007F                   	AND.B	#0x7F,D1 ;	ignore the table's high bit
   8724 FFFCC1E2 B200                        	CMP.B	D0,D1	;	is there a match?
   8725 FFFCC1E4 670C                        	BEQ	EXMAT
   8726 FFFCC1E6 548A                        	ADDQ.L	#2,A2	;	if not, try the next entry
   8727 FFFCC1E8 204B                        	MOVE.L	A3,A0	;	reset the program pointer
   8728 FFFCC1EA 4202                        	CLR.B	D2		;sorry, no match
   8729 FFFCC1EC                             EX1:
   8730 FFFCC1EC 4A19                        	TST.B	(A1)+	;	get to the end of the entry
   8731 FFFCC1EE 6AFC                        	BPL	EX1
   8732 FFFCC1F0 60D8                        	BRA	EXLP		;back for more matching
   8733 FFFCC1F2                             EXMAT:
   8734 FFFCC1F2 74FF                        	MOVEQ	#-1,D2;		we've got a match so far
   8735 FFFCC1F4 4A19                        	TST.B	(A1)+	;	end of table entry?
   8736 FFFCC1F6 6AD2                        	BPL	EXLP		;if not, go back for more
   8737 FFFCC1F8                             EXGO:
   8738 FFFCC1F8 47F8 0000                   	LEA	0,A3	;	execute the appropriate routine
   8739 FFFCC1FC 2652                        	MOVE	(A2),A3
   8740 FFFCC1FE 4ED3                        	JMP	(A3)
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* What follows is the code to execute direct and statement
                                             ;* commands. Control is transferred to these points via the command
                                             ;* table lookup code of 'DIRECT' and 'EXEC' in the last section.
                                             ;* After the command is executed, control is transferred to other
                                             ;* sections as follows:
                                             ;*
                                             ;* For 'LIST', 'NEW', and 'STOP': go back to the warm start point.
                                             ;* For 'RUN': go execute the first stored line if any; else go
                                             ;* back to the warm start point.
                                             ;* For 'GOTO' and 'GOSUB': go execute the target line.
                                             ;* For 'RETURN' and 'NEXT'; go back to saved return line.
                                             ;* For all others: if 'CURRNT' is 0, go to warm start; else go;
                                             ;* execute next command. (This is done in 'FINISH'.)
                                             ;*
                                             ;*******************************************************************
                                             ;*
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 89
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* *** NEW *** STOP *** RUN (& friends) *** GOTO ***
                                             ;*
                                             ;* 'NEW<CR>' sets TXTUNF to point to TXTBGN
                                             ;*
                                             ;* 'STOP<CR>' goes back to WSTART
                                             ;*
                                             ;* 'RUN<CR>' finds the first stored line, stores its address
                                             ;* in CURRNT, and starts executing it. Note that only those
                                             ;* commands in TAB2 are legal for a stored program.
                                             ;*
                                             ;* There are 3 more entries in 'RUN':
                                             ;* 'RUNNXL' finds next line, stores it's address and executes it.
                                             ;* 'RUNTSL' stores the address of this line and executes it.
                                             ;* 'RUNSML' continues the execution on same line.
                                             ;*
                                             ;* 'GOTO expr<CR>' evaluates the expression, finds the target
                                             ;* line, and jumps to 'RUNTSL' to do it.
                                             ;*
   8778 FFFCC200                             NEW:
   8779 FFFCC200 6100 0630                   	BSR.L	ENDCHK
   8780 FFFCC204 21F9 FFFC C01C 0624         	MOVE.L	TXTBGN,TXTUNF	;set the end pointer
                                             
   8782 FFFCC20C                             STOP_:
   8783 FFFCC20C 6100 0624                   	BSR.L	ENDCHK
   8784 FFFCC210 6000 FE4E                   	BRA	WSTART
                                             
   8786 FFFCC214                             RUN:
   8787 FFFCC214 6100 061C                   	BSR.L	ENDCHK
   8788 FFFCC218 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to beginning
   8789 FFFCC21E 21C8 0604                   	MOVE.L	A0,CURRNT
                                             
   8791 FFFCC222                             RUNNXL:
   8792 FFFCC222 4AB8 0604                   	TST.L	CURRNT	;	executing a program?
   8793 FFFCC226 6700 FE38                   	BEQ.L	WSTART		;if not, we've finished a direct stat.
   8794 FFFCC22A 4281                        	CLR.L	D1		;else find the next line number
   8795 FFFCC22C 2248                        	MOVE.L	A0,A1
   8796 FFFCC22E 6100 0714                   	BSR.L	FNDLNP
   8797 FFFCC232 6500 FE2C                   	BCS	WSTART		;if we've fallen off the end, stop
                                             
   8799 FFFCC236                             RUNTSL:
   8800 FFFCC236 21C9 0604                   	MOVE.L	A1,CURRNT	;set CURRNT to point to the line no.
   8801 FFFCC23A 2049                        	MOVE.L	A1,A0		;set the text pointer to
   8802 FFFCC23C 5488                        	ADDQ.L	#2,A0		;the start of the line text
                                             
   8804 FFFCC23E                             RUNSML:
   8805 FFFCC23E 6100 090E                   	BSR.L	CHKIO	;	see if a control-C was pressed
   8806 FFFCC242 43F9 FFFC C114              	LEA	TAB2,A1 	;find command in TAB2
   8807 FFFCC248 45F9 FFFC C178              	LEA	TAB2_1,A2
   8808 FFFCC24E 6000 FF72                   	BRA	EXEC		;and execute it
                                             
   8810 FFFCC252                             GOTO:
   8811 FFFCC252 6100 036E                   	BSR.L	EXPR	;	evaluate the following expression
   8812 FFFCC256 6100 05DA                   	BSR.L	ENDCHK		;must find end of line
   8813 FFFCC25A 2200                        	MOVE.L	D0,D1
   8814 FFFCC25C 6100 06D6                   	BSR.L	FNDLN		;find the target line
   8815 FFFCC260 6600 0628                   	BNE.L	QHOW		;no such line no.
   8816 FFFCC264 60D0                        	BRA	RUNTSL		;go do it
                                             
                                             ;*
                                             ;*******************************************************************
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 90
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
                                             ;* *** LIST *** PRINT ***
                                             ;*
                                             ;* LIST has two forms:
                                             ;* 'LIST<CR>' lists all saved lines
                                             ;* 'LIST #<CR>' starts listing at the line #
                                             ;* Control-S pauses the listing, control-C stops it.
                                             ;*
                                             ;* PRINT command is 'PRINT ....:' or 'PRINT ....<CR>'
                                             ;* where '....' is a list of expressions, formats, back-arrows,
                                             ;* and strings.	These items a separated by commas.
                                             ;*
                                             ;* A format is a pound sign followed by a number.  It controls
                                             ;* the number of spaces the value of an expression is going to
                                             ;* be printed in.  It stays effective for the rest of the print
                                             ;* command unless changed by another format.  If no format is
                                             ;* specified, 11 positions will be used.
                                             ;*
                                             ;* A string is quoted in a pair of single- or double-quotes.
                                             ;*
                                             ;* An underline (back-arrow) means generate a <CR> without a <LF>
                                             ;*
                                             ;* A <CR LF> is generated after the entire list has been printed
                                             ;* or if the list is empty.  If the list ends with a semicolon,
                                             ;* however, no <CR LF> is generated.
                                             ;*
                                             
   8847 FFFCC266                             LIST_:
   8848 FFFCC266 6100 0856                   	BSR.L	TSTNUM	;	see if there's a line no.
   8849 FFFCC26A 6100 05C6                   	BSR.L	ENDCHK		;if not, we get a zero
   8850 FFFCC26E 6100 06C4                   	BSR.L	FNDLN		;find this or next line
   8851 FFFCC272                             LS1:
   8852 FFFCC272 6500 FDEC                   	BCS	WSTART		;warm start if we passed the end
   8853 FFFCC276 6100 0810                   	BSR.L	PRTLN	;	print the line
   8854 FFFCC27A 6100 08D2                   	BSR.L	CHKIO	;	check for listing halt request
   8855 FFFCC27E 670C                        	BEQ	LS3
   8856 FFFCC280 B03C 0013                   	CMP.B	#CTRLS,D0	;pause the listing?
   8857 FFFCC284 6606                        	BNE	LS3
   8858 FFFCC286                             LS2:
   8859 FFFCC286 6100 08C6                   	BSR.L	CHKIO		;if so, wait for another keypress
   8860 FFFCC28A 67FA                        	BEQ	LS2
   8861 FFFCC28C                             LS3:
   8862 FFFCC28C 6100 06B6                   	BSR.L	FNDLNP		;find the next line
   8863 FFFCC290 60E0                        	BRA	LS1
                                             
   8865 FFFCC292                             PRINT:
   8866 FFFCC292 780B                        	MOVE	#11,D4	;	D4 = number of print spaces
   8867 FFFCC294 6100 080E                   	BSR.L	TSTC		;if null list and ":"
   8868 FFFCC298 3A 07                       	DC.B	':',PR2-$
   8869 FFFCC29A 6100 08C4                   	BSR.L	CRLF		;give CR-LF and continue
   8870 FFFCC29E 609E                        	BRA	RUNSML		;execution on the same line
   8871 FFFCC2A0                             PR2:
   8872 FFFCC2A0 6100 0802                   	BSR.L	TSTC		;if null list and <CR>
   8873 FFFCC2A4 0D 09                       	DC.B	CR,PR0-$
   8874 FFFCC2A6 6100 08B8                   	BSR.L	CRLF		;also give CR-LF and
   8875 FFFCC2AA 6000 FF76                   	BRA	RUNNXL		;execute the next line
   8876 FFFCC2AE                             PR0:
   8877 FFFCC2AE 6100 07F4                   	BSR.L	TSTC		;else is it a format?
   8878 FFFCC2B2 23 09                       	DC.B	'#',PR1-$
   8879 FFFCC2B4 6100 030C                   	BSR.L	EXPR		;yes, evaluate expression
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 91
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8880 FFFCC2B8 2800                        	MOVE	D0,D4		;and save it as print width
   8881 FFFCC2BA 6016                        	BRA	PR3		;look for more to print
   8882 FFFCC2BC                             PR1:
   8883 FFFCC2BC 6100 07E6                   	BSR.L	TSTC		;is character expression? (MRL)
   8884 FFFCC2C0 24 0B                       	DC.B	'$',PR4-$
   8885 FFFCC2C2 6100 02FE                   	BSR.L	EXPR		;yep. Evaluate expression (MRL)
   8886 FFFCC2C6 6100 FD40                   	BSR	GOOUT		;print low byte (MRL)
   8887 FFFCC2CA 6006                        	BRA	PR3		;look for more. (MRL)
   8888 FFFCC2CC                             PR4:
   8889 FFFCC2CC 6100 0706                   	BSR.L	QTSTG	;	is it a string?
   8890 FFFCC2D0 6012                        	BRA.S	PR8		;if not, must be an expression
   8891 FFFCC2D2                             PR3:
   8892 FFFCC2D2 6100 07D0                   	BSR.L	TSTC	;	if ",", go find next
   8893 FFFCC2D6 2C 07                       	DC.B	',',PR6-$
   8894 FFFCC2D8 6100 053E                   	BSR.L	FIN		;in the list.
   8895 FFFCC2DC 60D0                        	BRA	PR0
   8896 FFFCC2DE                             PR6:
   8897 FFFCC2DE 6100 0880                   	BSR.L	CRLF	;	list ends here
   8898 FFFCC2E2 6010                        	BRA	FINISH
   8899 FFFCC2E4                             PR8:
   8900 FFFCC2E4 2F04                        	MOVE	D4,-(SP)	;save the width value
   8901 FFFCC2E6 6100 02DA                   	BSR.L	EXPR		;evaluate the expression
   8902 FFFCC2EA 281F                        	MOVE	(SP)+,D4	;restore the width
   8903 FFFCC2EC 2200                        	MOVE.L	D0,D1
   8904 FFFCC2EE 6100 0724                   	BSR.L	PRTNUM		;print its value
   8905 FFFCC2F2 60DE                        	BRA	PR3		;more to print?
                                             
   8907 FFFCC2F4                             FINISH:
   8908 FFFCC2F4 6100 0522                   	BSR.L	FIN	;	Check end of command
   8909 FFFCC2F8 6000 0544                   	BRA.L	QWHAT	;	print "What?" if wrong
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GOSUB *** & RETURN ***
                                             ;*
                                             ;* 'GOSUB expr:' or 'GOSUB expr<CR>' is like the 'GOTO' command,
                                             ;* except that the current text pointer, stack pointer, etc. are
                                             ;* saved so that execution can be continued after the subroutine
                                             ;* 'RETURN's.  In order that 'GOSUB' can be nested (and even
                                             ;* recursive), the save area must be stacked.  The stack pointer
                                             ;* is saved in 'STKGOS'.  The old 'STKGOS' is saved on the stack.
                                             ;* If we are in the main routine, 'STKGOS' is zero (this was done
                                             ;* in the initialization section of the interpreter), but we still
                                             ;* save it as a flag for no further 'RETURN's.
                                             ;*
                                             ;* 'RETURN<CR>' undoes everything that 'GOSUB' did, and thus
                                             ;* returns the execution to the command after the most recent
                                             ;* 'GOSUB'.  If 'STKGOS' is zero, it indicates that we never had
                                             ;* a 'GOSUB' and is thus an error.
                                             ;*
   8931 FFFCC2FC                             GOSUB:
   8932 FFFCC2FC 6100 0694                   	BSR.L	PUSHA	;	save the current 'FOR' parameters
   8933 FFFCC300 6100 02C0                   	BSR.L	EXPR		;get line number
   8934 FFFCC304 2F08                        	MOVE.L	A0,-(SP)	;save text pointer
   8935 FFFCC306 2200                        	MOVE.L	D0,D1
   8936 FFFCC308 6100 062A                   	BSR.L	FNDLN		;find the target line
   8937 FFFCC30C 6600 057E                   	BNE.L	AHOW		;if not there, say "How?"
   8938 FFFCC310 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;found it, save old 'CURRNT'...
   8939 FFFCC314 2F38 0608                   	MOVE.L	STKGOS,-(SP)	;and 'STKGOS'
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 92
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   8940 FFFCC318 42B8 0610                   	CLR.L	LOPVAR		;load new values
   8941 FFFCC31C 21CF 0608                   	MOVE.L	SP,STKGOS
   8942 FFFCC320 6000 FF14                   	BRA	RUNTSL
                                             
   8944 FFFCC324                             RETURN:
   8945 FFFCC324 6100 050C                   	BSR.L	ENDCHK	;	there should be just a <CR>
   8946 FFFCC328 2238 0608                   	MOVE.L	STKGOS,D1	;get old stack pointer
   8947 FFFCC32C 6700 0510                   	BEQ.L	QWHAT		;if zero, it doesn't exist
   8948 FFFCC330 2E41                        	MOVE.L	D1,SP		;else restore it
   8949 FFFCC332 21DF 0608                   	MOVE.L	(SP)+,STKGOS	;and the old 'STKGOS'
   8950 FFFCC336 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;and the old 'CURRNT'
   8951 FFFCC33A 205F                        	MOVE.L	(SP)+,A0	;and the old text pointer
   8952 FFFCC33C 6100 063A                   	BSR.L	POPA		;and the old 'FOR' parameters
   8953 FFFCC340 60B2                        	BRA	FINISH		;and we are back home
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** FOR *** & NEXT ***
                                             ;*
                                             ;* 'FOR' has two forms:
                                             ;* 'FOR var=exp1 TO exp2 STEP exp1' and 'FOR var=exp1 TO exp2'
                                             ;* The second form means the same thing as the first form with a
                                             ;* STEP of positive 1.  The interpreter will find the variable 'var'
                                             ;* and set its value to the current value of 'exp1'.  It also
                                             ;* evaluates 'exp2' and 'exp1' and saves all these together with
                                             ;* the text pointer, etc. in the 'FOR' save area, which consisits of
                                             ;* 'LOPVAR', 'LOPINC', 'LOPLMT', 'LOPLN', and 'LOPPT'.  If there is
                                             ;* already something in the save area (indicated by a non-zero
                                             ;* 'LOPVAR'), then the old save area is saved on the stack before
                                             ;* the new values are stored.  The interpreter will then dig in the
                                             ;* stack and find out if this same variable was used in another
                                             ;* currently active 'FOR' loop.  If that is the case, then the old
                                             ;* 'FOR' loop is deactivated. (i.e. purged from the stack)
                                             ;*
                                             ;* 'NEXT var' serves as the logical (not necessarily physical) end
                                             ;* of the 'FOR' loop.  The control variable 'var' is checked with
                                             ;* the 'LOPVAR'.  If they are not the same, the interpreter digs in
                                             ;* the stack to find the right one and purges all those that didn't
                                             ;* match.  Either way, it then adds the 'STEP' to that variable and
                                             ;* checks the result with against the limit value.  If it is within
                                             ;* the limit, control loops back to the command following the
                                             ;* 'FOR'.  If it's outside the limit, the save area is purged and
                                             ;* execution continues.
                                             ;*
   8985 FFFCC342                             FOR:
   8986 FFFCC342 6100 064E                   	BSR.L	PUSHA		;save the old 'FOR' save area
   8987 FFFCC346 6100 04B6                   	BSR.L	SETVAL		;set the control variable
   8988 FFFCC34A 21CE 0610                   	MOVE.L	A6,LOPVAR	;save its address
   8989 FFFCC34E 43F9 FFFC C15B              	LEA	TAB5,A1 	;use 'EXEC' to test for 'TO'
   8990 FFFCC354 45F9 FFFC C1A0              	LEA	TAB5_1,A2
   8991 FFFCC35A 6000 FE66                   	BRA	EXEC
   8992 FFFCC35E                             FR1:
   8993 FFFCC35E 6100 0262                   	BSR.L	EXPR		;evaluate the limit
   8994 FFFCC362 21C0 0618                   	MOVE.L	D0,LOPLMT	;save that
   8995 FFFCC366 43F9 FFFC C15E              	LEA	TAB6,A1 	;use 'EXEC' to look for the
   8996 FFFCC36C 45F9 FFFC C1A4              	LEA	TAB6_1,A2	;word 'STEP'
   8997 FFFCC372 6000 FE4E                   	BRA	EXEC
   8998 FFFCC376                             FR2:
   8999 FFFCC376 6100 024A                   	BSR.L	EXPR	;	found it, get the step value
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 93
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9000 FFFCC37A 6002                        	BRA	FR4
   9001 FFFCC37C                             FR3:
   9002 FFFCC37C 7001                        	MOVEQ	#1,D0	;	not found, step defaults to 1
   9003 FFFCC37E                             FR4:
   9004 FFFCC37E 21C0 0614                   	MOVE.L	D0,LOPINC	;save that too
   9005 FFFCC382                             FR5:
   9006 FFFCC382 21F8 0604 061C              	MOVE.L	CURRNT,LOPLN	;save address of current line number
   9007 FFFCC388 21C8 0620                   	MOVE.L	A0,LOPPT	;and text pointer
   9008 FFFCC38C 2C4F                        	MOVE.L	SP,A6		;dig into the stack to find 'LOPVAR'
   9009 FFFCC38E 6006                        	BRA	FR7
   9010 FFFCC390                             FR6:
   9011 FFFCC390 DDFC 0000 0014              	ADD.L	#20,A6		;look at next stack frame
   9012 FFFCC396                             FR7:
   9013 FFFCC396 2016                        	MOVE.L	(A6),D0 	;is it zero?
   9014 FFFCC398 6716                        	BEQ	FR8		;if so, we're done
   9015 FFFCC39A B0B8 0610                   	CMP.L	LOPVAR,D0	;same as current LOPVAR?
   9016 FFFCC39E 66F0                        	BNE	FR6		;nope, look some more
   9017 FFFCC3A0 244F                        	MOVE.L	SP,A2	;	Else remove 5 long words from...
   9018 FFFCC3A2 224E                        	MOVE.L	A6,A1	;	inside the stack.
   9019 FFFCC3A4 47F8 0014                   	LEA	20,A3
   9020 FFFCC3A8 D7C9                        	ADD.L	A1,A3
   9021 FFFCC3AA 6100 05C4                   	BSR.L	MVDOWN
   9022 FFFCC3AE 2E4B                        	MOVE.L	A3,SP	;	set the SP 5 long words up
   9023 FFFCC3B0                             FR8:
   9024 FFFCC3B0 6000 FF42                   	BRA	FINISH		;and continue execution
                                             
   9026 FFFCC3B4                             NEXT:
   9027 FFFCC3B4 6100 031E                   	BSR.L	TSTV;		get address of variable
   9028 FFFCC3B8 6500 0484                   	BCS.L	QWHAT	;	if no variable, say "What?"
   9029 FFFCC3BC 2240                        	MOVE.L	D0,A1	;	save variable's address
   9030 FFFCC3BE                             NX0:
   9031 FFFCC3BE 2038 0610                   	MOVE.L	LOPVAR,D0;	If 'LOPVAR' is zero, we never...
   9032 FFFCC3C2 6700 047A                   	BEQ.L	QWHAT	;	had a FOR loop, so say "What?"
   9033 FFFCC3C6 B3C0                        	CMP.L	D0,A1	;;	else we check them
   9034 FFFCC3C8 6706                        	BEQ	NX3	;	OK, they agree
   9035 FFFCC3CA 6100 05AC                   	BSR.L	POPA	;	nope, let's see the next frame
   9036 FFFCC3CE 60EE                        	BRA	NX0
   9037 FFFCC3D0                             NX3:
   9038 FFFCC3D0 2011                        	MOVE.L	(A1),D0 ;	get control variable's value
   9039 FFFCC3D2 D0B8 0614                   	ADD.L	LOPINC,D0;	add in loop increment
   9040 FFFCC3D6 6900 04B2                   	BVS.L	QHOW	;	say "How?" for 32-bit overflow
   9041 FFFCC3DA 2280                        	MOVE.L	D0,(A1) ;	save control variable's new value
   9042 FFFCC3DC 2238 0618                   	MOVE.L	LOPLMT,D1;	get loop's limit value
   9043 FFFCC3E0 4AB8 0614                   	TST.L	LOPINC
   9044 FFFCC3E4 6A02                        	BPL	NX1	;	branch if loop increment is positive
   9045 FFFCC3E6 C141                        	EXG	D0,D1
   9046 FFFCC3E8                             NX1:
   9047 FFFCC3E8 B280                        	CMP.L	D0,D1;		test against limit
   9048 FFFCC3EA 6D0E                        	BLT	NX2;		branch if outside limit
   9049 FFFCC3EC 21F8 061C 0604              	MOVE.L	LOPLN,CURRNT	;Within limit, go back to the...
   9050 FFFCC3F2 2078 0620                   	MOVE.L	LOPPT,A0	;saved 'CURRNT' and text pointer.
   9051 FFFCC3F6 6000 FEFC                   	BRA	FINISH
   9052 FFFCC3FA                             NX2:
   9053 FFFCC3FA 6100 057C                   	BSR.L	POPA		;purge this loop
   9054 FFFCC3FE 6000 FEF4                   	BRA	FINISH
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** REM *** IF *** INPUT *** LET (& DEFLT) ***
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 94
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
                                             ;* 'REM' can be followed by anything and is ignored by the
                                             ;* interpreter.
                                             ;*
                                             ;* 'IF' is followed by an expression, as a condition and one or
                                             ;* more commands (including other 'IF's) separated by colons.
                                             ;* Note that the word 'THEN' is not used.  The interpreter evaluates
                                             ;* the expression.  If it is non-zero, execution continues.  If it
                                             ;* is zero, the commands that follow are ignored and execution
                                             ;* continues on the next line.
                                             ;*
                                             ;* 'INPUT' is like the 'PRINT' command, and is followed by a list
                                             ;* of items.  If the item is a string in single or double quotes,
                                             ;* or is an underline (back arrow), it has the same effect as in
                                             ;* 'PRINT'.  If an item is a variable, this variable name is
                                             ;* printed out followed by a colon, then the interpreter waits for
                                             ;* an expression to be typed in.  The variable is then set to the
                                             ;* value of this expression.  If the variable is preceeded by a
                                             ;* string (again in single or double quotes), the string will be
                                             ;* displayed followed by a colon.  The interpreter the waits for an
                                             ;* expression to be entered and sets the variable equal to the
                                             ;* expression's value.  If the input expression is invalid, the
                                             ;* interpreter will print "What?", "How?", or "Sorry" and reprint
                                             ;* the prompt and redo the input.  The execution will not terminate
                                             ;* unless you press control-C.  This is handled in 'INPERR'.
                                             ;*
                                             ;* 'LET' is followed by a list of items separated by commas.
                                             ;* Each item consists of a variable, an equals sign, and an
                                             ;* expression.  The interpreter evaluates the expression and sets
                                             ;* the variable to that value.  The interpreter will also handle
                                             ;* 'LET' commands without the word 'LET'.  This is done by 'DEFLT'.
                                             ;*
   9092 FFFCC402                             REM:
   9093 FFFCC402 600A                        	BRA	IF2		;skip the rest of the line
                                             
   9095 FFFCC404                             IF:	
   9096 FFFCC404 6100 01BC                   	BSR.L	EXPR	;	evaluate the expression
   9097 FFFCC408                             IF1:
   9098 FFFCC408 4A80                        	TST.L	D0		;is it zero?
   9099 FFFCC40A 6600 FE32                   	BNE	RUNSML		;if not, continue
   9100 FFFCC40E                             IF2:
   9101 FFFCC40E 2248                        	MOVE.L	A0,A1
   9102 FFFCC410 4281                        	CLR.L	D1
   9103 FFFCC412 6100 054A                   	BSR.L	FNDSKP	;	if so, skip the rest of the line
   9104 FFFCC416 6400 FE1E                   	BCC	RUNTSL		;and run the next line
   9105 FFFCC41A 6000 FC44                   	BRA.L	WSTART	;	if no next line, do a warm start
                                             
   9107 FFFCC41E                             INPERR:
   9108 FFFCC41E 2E78 060C                   	MOVE.L	STKINP,SP;	restore the old stack pointer
   9109 FFFCC422 21DF 0604                   	MOVE.L	(SP)+,CURRNT;	and old 'CURRNT'
   9110 FFFCC426 588F                        	ADDQ.L	#4,SP
   9111 FFFCC428 205F                        	MOVE.L	(SP)+,A0	;and old text pointer
                                             
   9113 FFFCC42A                             INPUT:
   9114 FFFCC42A 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   9115 FFFCC42C 6100 05A6                   	BSR.L	QTSTG		;is next item a string?
   9116 FFFCC430 600A                        	BRA.S	IP2		;nope
   9117 FFFCC432 6100 02A0                   	BSR.L	TSTV	;	yes, but is it followed by a variable?
   9118 FFFCC436 654C                        	BCS	IP4		;if not, branch
   9119 FFFCC438 2440                        	MOVE.L	D0,A2	;	put away the variable's address
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 95
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9120 FFFCC43A 601A                        	BRA	IP3		;if so, input to variable
   9121 FFFCC43C                             IP2:
   9122 FFFCC43C 2F08                        	MOVE.L	A0,-(SP);	save for 'PRTSTG'
   9123 FFFCC43E 6100 0294                   	BSR.L	TSTV	;	must be a variable now
   9124 FFFCC442 6500 03FA                   	BCS.L	QWHAT	;	"What?" it isn't?
   9125 FFFCC446 2440                        	MOVE.L	D0,A2	;	put away the variable's address
   9126 FFFCC448 1410                        	MOVE.B	(A0),D2 ;	get ready for 'PRTSTG'
   9127 FFFCC44A 4200                        	CLR.B	D0
   9128 FFFCC44C 1080                        	MOVE.B	D0,(A0)
   9129 FFFCC44E 225F                        	MOVE.L	(SP)+,A1
   9130 FFFCC450 6100 0566                   	BSR.L	PRTSTG	;	print string as prompt
   9131 FFFCC454 1082                        	MOVE.B	D2,(A0) ;	restore text
   9132 FFFCC456                             IP3:
   9133 FFFCC456 2F08                        	MOVE.L	A0,-(SP);	save in case of error
   9134 FFFCC458 2F38 0604                   	MOVE.L	CURRNT,-(SP)	;also save 'CURRNT'
   9135 FFFCC45C 21FC FFFF FFFF 0604         	MOVE.L	#-1,CURRNT	;flag that we are in INPUT
   9136 FFFCC464 21CF 060C                   	MOVE.L	SP,STKINP	;save the stack pointer too
   9137 FFFCC468 2F0A                        	MOVE.L	A2,-(SP)	;save the variable address
   9138 FFFCC46A 103C 003A                   	MOVE.B	#':',D0     ;    print a colon first
   9139 FFFCC46E 6100 0424                   	BSR.L	GETLN		;then get an input line
   9140 FFFCC472 41F8 0630                   	LEA	BUFFER,A0	;point to the buffer
   9141 FFFCC476 6100 014A                   	BSR.L	EXPR	;	evaluate the input
   9142 FFFCC47A 245F                        	MOVE.L	(SP)+,A2	;restore the variable address
   9143 FFFCC47C 2480                        	MOVE.L	D0,(A2) 	;save value in variable
   9144 FFFCC47E 21DF 0604                   	MOVE.L	(SP)+,CURRNT	;restore old 'CURRNT'
   9145 FFFCC482 205F                        	MOVE.L	(SP)+,A0;	and the old text pointer
   9146 FFFCC484                             IP4:
   9147 FFFCC484 588F                        	ADDQ.L	#4,SP	;	clean up the stack
   9148 FFFCC486 6100 061C                   	BSR.L	TSTC	;	is the next thing a comma?
   9149 FFFCC48A 2C 03                       	DC.B	',',IP5-$
   9150 FFFCC48C 609C                        	BRA	INPUT	;	yes, more items
   9151 FFFCC48E                             IP5:
   9152 FFFCC48E 6000 FE64                   	BRA	FINISH
                                             
   9154 FFFCC492                             DEFLT:
   9155 FFFCC492 0C10 000D                   	CMP.B	#CR,(A0);	empty line is OK
   9156 FFFCC496 670C                        	BEQ	LT1		;else it is 'LET'
                                             
   9158 FFFCC498                             LET:
   9159 FFFCC498 6100 0364                   	BSR.L	SETVAL		;do the assignment
   9160 FFFCC49C 6100 0606                   	BSR.L	TSTC		;check for more 'LET' items
   9161 FFFCC4A0 2C 03                       	DC.B	',',LT1-$
   9162 FFFCC4A2 60F4                        	BRA	LET
   9163 FFFCC4A4                             LT1:
   9164 FFFCC4A4 6000 FE4E                   	BRA	FINISH		;until we are finished.
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** LOAD *** & SAVE ***
                                             ;*
                                             ;* These two commands transfer a program to/from an auxiliary
                                             ;* device such as a cassette, another computer, etc.  The program
                                             ;* is converted to an easily-stored format: each line starts with
                                             ;* a colon, the line no. as 4 hex digits, and the rest of the line.
                                             ;* At the end, a line starting with an '@' sign is sent.  This
                                             ;* format can be read back with a minimum of processing time by
                                             ;* the 68000.
                                             ;*
   9179 FFFCC4A8                             LOAD:
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 96
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9180 FFFCC4A8 2079 FFFC C01C              	MOVE.L	TXTBGN,A0	;set pointer to start of prog. area
   9181 FFFCC4AE 103C 000D                   	MOVE.B	#CR,D0		;For a CP/M host, tell it we're ready...
   9182 FFFCC4B2 6100 FB5C                   	BSR	GOAUXO		;by sending a CR to finish PIP command.
   9183 FFFCC4B6                             LOD1:
   9184 FFFCC4B6 6100 FB5C                   	BSR	GOAUXI	;	look for start of line
   9185 FFFCC4BA 67FA                        	BEQ	LOD1
   9186 FFFCC4BC B03C 0040                   	CMP.B	#'@',D0  ;       end of program?
   9187 FFFCC4C0 6722                        	BEQ	LODEND
   9188 FFFCC4C2 B03C 003A                   	CMP.B	#':',D0   ;      if not, is it start of line?
   9189 FFFCC4C6 66EE                        	BNE	LOD1		;if not, wait for it
   9190 FFFCC4C8 6100 0022                   	BSR	GBYTE		;get first byte of line no.
   9191 FFFCC4CC 10C1                        	MOVE.B	D1,(A0)+	;store it
   9192 FFFCC4CE 6100 001C                   	BSR	GBYTE		;get 2nd bye of line no.
   9193 FFFCC4D2 10C1                        	MOVE.B	D1,(A0)+;	store that, too
   9194 FFFCC4D4                             LOD2:
   9195 FFFCC4D4 6100 FB3E                   	BSR	GOAUXI	;	get another text char.
   9196 FFFCC4D8 67FA                        	BEQ	LOD2
   9197 FFFCC4DA 10C0                        	MOVE.B	D0,(A0)+	;store it
   9198 FFFCC4DC B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
   9199 FFFCC4E0 66F2                        	BNE	LOD2		;if not, go back for more
   9200 FFFCC4E2 60D2                        	BRA	LOD1		;if so, start a new line
   9201 FFFCC4E4                             LODEND:
   9202 FFFCC4E4 21C8 0624                   	MOVE.L	A0,TXTUNF	;set end-of program pointer
   9203 FFFCC4E8 6000 FB76                   	BRA	WSTART		;back to direct mode
                                             
   9205 FFFCC4EC                             GBYTE:
   9206 FFFCC4EC 7401                        	MOVEQ	#1,D2;		get two hex characters from auxiliary
   9207 FFFCC4EE 4281                        	CLR	D1		;and store them as a byte in D1
   9208 FFFCC4F0                             GBYTE1:
   9209 FFFCC4F0 6100 FB22                   	BSR	GOAUXI	;	get a char.
   9210 FFFCC4F4 67FA                        	BEQ	GBYTE1
   9211 FFFCC4F6 B03C 0041                   	CMP.B	#'A',D0
   9212 FFFCC4FA 6502                        	BCS	GBYTE2
   9213 FFFCC4FC 5F00                        	SUBQ.B	#7,D0	;	if greater than 9, adjust
   9214 FFFCC4FE                             GBYTE2:
   9215 FFFCC4FE 0200 000F                   	AND.B	#0xF,D0		;strip ASCII
   9216 FFFCC502 E909                        	LSL.B	#4,D1		;put nybble into the result
   9217 FFFCC504 8200                        	OR.B	D0,D1
   9218 FFFCC506 51CA FFE8                   	DBRA	D2,GBYTE1	;get another char.
   9219 FFFCC50A 4E75                        	RTS
                                             
   9221 FFFCC50C                             SAVE:
   9222 FFFCC50C 2079 FFFC C01C              	MOVE.L	TXTBGN,A0;	set pointer to start of prog. area
   9223 FFFCC512 2278 0624                   	MOVE.L	TXTUNF,A1	;set pointer to end of prog. area
   9224 FFFCC516                             SAVE1:
   9225 FFFCC516 103C 000D                   	MOVE.B	#CR,D0	;	send out a CR & LF (CP/M likes this)
   9226 FFFCC51A 6100 FAF4                   	BSR	GOAUXO
   9227 FFFCC51E 103C 000A                   	MOVE.B	#LF,D0
   9228 FFFCC522 6100 FAEC                   	BSR	GOAUXO
   9229 FFFCC526 B3C8                        	CMP.L	A0,A1		;are we finished?
   9230 FFFCC528 6322                        	BLS	SAVEND
   9231 FFFCC52A 103C 003A                   	MOVE.B	#':',D0      ;   if not, start a line
   9232 FFFCC52E 6100 FAE0                   	BSR	GOAUXO
   9233 FFFCC532 1218                        	MOVE.B	(A0)+,D1	;send first half of line no.
   9234 FFFCC534 6100 003A                   	BSR	PBYTE
   9235 FFFCC538 1218                        	MOVE.B	(A0)+,D1	;and send 2nd half
   9236 FFFCC53A 6100 0034                   	BSR	PBYTE
   9237 FFFCC53E                             SAVE2:
   9238 FFFCC53E 1018                        	MOVE.B	(A0)+,D0;	get a text char.
   9239 FFFCC540 B03C 000D                   	CMP.B	#CR,D0		;is it the end of the line?
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 97
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9240 FFFCC544 67D0                        	BEQ	SAVE1		;if so, send CR & LF and start new line
   9241 FFFCC546 6100 FAC8                   	BSR	GOAUXO		;send it out
   9242 FFFCC54A 60F2                        	BRA	SAVE2		;go back for more text
   9243 FFFCC54C                             SAVEND:
   9244 FFFCC54C 103C 0040                   	MOVE.B	#'@',D0 ;        send end-of-program indicator
   9245 FFFCC550 6100 FABE                   	BSR	GOAUXO
   9246 FFFCC554 103C 000D                   	MOVE.B	#CR,D0	;	followed by a CR & LF
   9247 FFFCC558 6100 FAB6                   	BSR	GOAUXO
   9248 FFFCC55C 103C 000A                   	MOVE.B	#LF,D0
   9249 FFFCC560 6100 FAAE                   	BSR	GOAUXO
   9250 FFFCC564 103C 001A                   	MOVE.B	#0x1A,D0 	;and a control-Z to end the CP/M file
   9251 FFFCC568 6100 FAA6                   	BSR	GOAUXO
   9252 FFFCC56C 6000 FAF2                   	BRA	WSTART		;then go do a warm start
                                             
   9254 FFFCC570                             PBYTE:
   9255 FFFCC570 7401                        	MOVEQ	#1,D2	;	send two hex characters from D1's low byte
   9256 FFFCC572                             PBYTE1:
   9257 FFFCC572 E919                        	ROL.B	#4,D1	;	get the next nybble
   9258 FFFCC574 1001                        	MOVE.B	D1,D0
   9259 FFFCC576 0200 000F                   	AND.B	#0xF,D0	;	strip off garbage
   9260 FFFCC57A 0600 0030                   	ADD.B	#'0',D0   ;      make it into ASCII
   9261 FFFCC57E B03C 0039                   	CMP.B	#'9',D0
   9262 FFFCC582 6302                        	BLS	PBYTE2
   9263 FFFCC584 5E00                        	ADDQ.B	#7,D0		;adjust if greater than 9
   9264 FFFCC586                             PBYTE2:
   9265 FFFCC586 6100 FA88                   	BSR	GOAUXO		;send it out
   9266 FFFCC58A 51CA FFE6                   	DBRA	D2,PBYTE1	;then send the next nybble
   9267 FFFCC58E 4E75                        	RTS
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** POKE *** & CALL ***
                                             ;*
                                             ;* 'POKE expr1,expr2' stores the byte from 'expr2' into the memory
                                             ;* address specified by 'expr1'.
                                             ;*
                                             ;* 'CALL expr' jumps to the machine language subroutine whose
                                             ;* starting address is specified by 'expr'.  The subroutine can use
                                             ;* all registers but must leave the stack the way it found it.
                                             ;* The subroutine returns to the interpreter by executing an RTS.
                                             ;*
   9282 FFFCC590                             POKE:
   9283 FFFCC590 6100 0030                   	BSR	EXPR		;get the memory address
   9284 FFFCC594 6100 050E                   	BSR.L	TSTC		;it must be followed by a comma
   9285 FFFCC598 2C 0F                       	DC.B	',',PKER-$
   9286 FFFCC59A 2F00                        	MOVE.L	D0,-(SP)	;save the address
   9287 FFFCC59C 6100 0024                   	BSR	EXPR		;get the byte to be POKE'd
   9288 FFFCC5A0 225F                        	MOVE.L	(SP)+,A1	;get the address back
   9289 FFFCC5A2 1280                        	MOVE.B	D0,(A1) 	;store the byte in memory
   9290 FFFCC5A4 6000 FD4E                   	BRA	FINISH
   9291 FFFCC5A8                             PKER:
   9292 FFFCC5A8 6000 0294                   	BRA.L	QWHAT	;	if no comma, say "What?"
                                             
   9294 FFFCC5AC                             CALL:
   9295 FFFCC5AC 6100 0014                   	BSR	EXPR		;get the subroutine's address
   9296 FFFCC5B0 4A80                        	TST.L	D0		;make sure we got a valid address
   9297 FFFCC5B2 6700 02D6                   	BEQ.L	QHOW	;	if not, say "How?"
   9298 FFFCC5B6 2F08                        	MOVE.L	A0,-(SP);	save the text pointer
   9299 FFFCC5B8 2240                        	MOVE.L	D0,A1
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 98
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9300 FFFCC5BA 4E91                        	JSR	(A1)		;jump to the subroutine
   9301 FFFCC5BC 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9302 FFFCC5BE 6000 FD34                   	BRA	FINISH
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** EXPR ***
                                             ;*
                                             ;* 'EXPR' evaluates arithmetical or logical expressions.
                                             ;* <EXPR>::=<EXPR2>
                                             ;*	   <EXPR2><rel.op.><EXPR2>
                                             ;* where <rel.op.> is one of the operators in TAB8 and the result
                                             ;* of these operations is 1 if true and 0 if false.
                                             ;* <EXPR2>::=(+ or -)<EXPR3>(+ or -)<EXPR3>(...
                                             ;* where () are optional and (... are optional repeats.
                                             ;* <EXPR3>::=<EXPR4>( <* or /><EXPR4> )(...
                                             ;* <EXPR4>::=<variable>
                                             ;*	    <function>
                                             ;*	    (<EXPR>)
                                             ;* <EXPR> is recursive so that the variable '@' can have an <EXPR>
                                             ;* as an index, functions can have an <EXPR> as arguments, and
                                             ;* <EXPR4> can be an <EXPR> in parenthesis.
                                             ;*
   9323 FFFCC5C2                             EXPR:
   9324 FFFCC5C2 6100 0066                   	BSR	EXPR2
   9325 FFFCC5C6 2F00                        	MOVE.L	D0,-(SP);	save <EXPR2> value
   9326 FFFCC5C8 43F9 FFFC C163              	LEA	TAB8,A1 	;look up a relational operator
   9327 FFFCC5CE 45F9 FFFC C1A8              	LEA	TAB8_1,A2
   9328 FFFCC5D4 6000 FBEC                   	BRA	EXEC		;go do it
                                             
   9330 FFFCC5D8                             XP11:
   9331 FFFCC5D8 6100 003E                   	BSR	XP18	;	is it ">="?
   9332 FFFCC5DC 6D2E                        	BLT	XPRT0		;no, return D0=0
   9333 FFFCC5DE 6030                        	BRA	XPRT1		;else return D0=1
                                             
   9335 FFFCC5E0                             XP12:
   9336 FFFCC5E0 6100 0036                   	BSR	XP18	;	is it "<>"?
   9337 FFFCC5E4 6726                        	BEQ	XPRT0		;no, return D0=0
   9338 FFFCC5E6 6028                        	BRA	XPRT1		;else return D0=1
                                             
   9340 FFFCC5E8                             XP13:
   9341 FFFCC5E8 6100 002E                   	BSR	XP18	;	is it ">"?
   9342 FFFCC5EC 6F1E                        	BLE	XPRT0		;no, return D0=0
   9343 FFFCC5EE 6020                        	BRA	XPRT1		;else return D0=1
                                             
   9345 FFFCC5F0                             XP14:
   9346 FFFCC5F0 6100 0026                   	BSR	XP18	;	is it "<="?
   9347 FFFCC5F4 6E16                        	BGT	XPRT0		;no, return D0=0
   9348 FFFCC5F6 6018                        	BRA	XPRT1		;else return D0=1
                                             
   9350 FFFCC5F8                             XP15:
   9351 FFFCC5F8 6100 001E                   	BSR	XP18	;	is it "="?
   9352 FFFCC5FC 660E                        	BNE	XPRT0		;if not, return D0=0
   9353 FFFCC5FE 6010                        	BRA	XPRT1		;else return D0=1
   9354 FFFCC600                             XP15RT:
   9355 FFFCC600 4E75                        	RTS
                                             
   9357 FFFCC602                             XP16:
   9358 FFFCC602 6100 0014                   	BSR	XP18	;	is it "<"?
   9359 FFFCC606 6C04                        	BGE	XPRT0		;if not, return D0=0
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 99
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9360 FFFCC608 6006                        	BRA	XPRT1		;else return D0=1
   9361 FFFCC60A                             XP16RT:
   9362 FFFCC60A 4E75                        	RTS
                                             
   9364 FFFCC60C                             XPRT0:
   9365 FFFCC60C 4280                        	CLR.L	D0	;	return D0=0 (false)
   9366 FFFCC60E 4E75                        	RTS
                                             
   9368 FFFCC610                             XPRT1:
   9369 FFFCC610 7001                        	MOVEQ	#1,D0;		return D0=1 (true)
   9370 FFFCC612 4E75                        	RTS
                                             
   9372 FFFCC614                             XP17:
   9373 FFFCC614 201F                        	MOVE.L	(SP)+,D0	;it's not a rel. operator
   9374 FFFCC616 4E75                        	RTS			;return D0=<EXPR2>
                                             
   9376 FFFCC618                             XP18:
   9377 FFFCC618 201F                        	MOVE.L	(SP)+,D0	;reverse the top two stack items
   9378 FFFCC61A 221F                        	MOVE.L	(SP)+,D1
   9379 FFFCC61C 2F00                        	MOVE.L	D0,-(SP)
   9380 FFFCC61E 2F01                        	MOVE.L	D1,-(SP)
   9381 FFFCC620 6100 0008                   	BSR	EXPR2		;do second <EXPR2>
   9382 FFFCC624 221F                        	MOVE.L	(SP)+,D1
   9383 FFFCC626 B280                        	CMP.L	D0,D1	;	compare with the first result
   9384 FFFCC628 4E75                        	RTS			;return the result
                                             
   9386 FFFCC62A                             EXPR2:
   9387 FFFCC62A 6100 0478                   	BSR.L	TSTC		;negative sign?
   9388 FFFCC62E 2D 05                       	DC.B	'-',XP21-$
   9389 FFFCC630 4280                        	CLR.L	D0	;	yes, fake '0-'
   9390 FFFCC632 6026                        	BRA	XP26
   9391 FFFCC634                             XP21:
   9392 FFFCC634 6100 046E                   	BSR.L	TSTC	;	positive sign? ignore it
   9393 FFFCC638 2B 01                       	DC.B	'+',XP22-$
   9394 FFFCC63A                             XP22:
   9395 FFFCC63A 6100 002C                   	BSR	EXPR3		;first <EXPR3>
   9396 FFFCC63E                             XP23:
   9397 FFFCC63E 6100 0464                   	BSR.L	TSTC	;	add?
   9398 FFFCC642 2B 11                       	DC.B	'+',XP25-$
   9399 FFFCC644 2F00                        	MOVE.L	D0,-(SP)	;yes, save the value
   9400 FFFCC646 6100 0020                   	BSR	EXPR3		;get the second <EXPR3>
   9401 FFFCC64A                             XP24:
   9402 FFFCC64A 221F                        	MOVE.L	(SP)+,D1
   9403 FFFCC64C D081                        	ADD.L	D1,D0	;	add it to the first <EXPR3>
   9404 FFFCC64E 6900 023A                   	BVS.L	QHOW	;	branch if there's an overflow
   9405 FFFCC652 60EA                        	BRA	XP23	;	else go back for more operations
   9406 FFFCC654                             XP25:
   9407 FFFCC654 6100 044E                   	BSR.L	TSTC		;subtract?
   9408 FFFCC658 2D 75                       	DC.B	'-',XP42-$
   9409 FFFCC65A                             XP26:
   9410 FFFCC65A 2F00                        	MOVE.L	D0,-(SP)	;yes, save the result of 1st <EXPR3>
   9411 FFFCC65C 6100 000A                   	BSR	EXPR3		;get second <EXPR3>
   9412 FFFCC660 4480                        	NEG.L	D0		;change its sign
   9413 FFFCC662 4EF9 FFFC C64A              	JMP	XP24		;and do an addition
                                             
   9415 FFFCC668                             EXPR3:
   9416 FFFCC668 6100 002C                   	BSR	EXPR4		;get first <EXPR4>
   9417 FFFCC66C                             XP31:
   9418 FFFCC66C 6100 0436                   	BSR.L	TSTC	;	multiply?
   9419 FFFCC670 2A 0F                       	DC.B	'*',XP34-$
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 100
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9420 FFFCC672 2F00                        	MOVE.L	D0,-(SP);	yes, save that first result
   9421 FFFCC674 6100 0020                   	BSR	EXPR4		;get second <EXPR4>
   9422 FFFCC678 221F                        	MOVE.L	(SP)+,D1
   9423 FFFCC67A 6100 00A8                   	BSR.L	MULT32	;	multiply the two
   9424 FFFCC67E 60EC                        	BRA	XP31		;then look for more terms
   9425 FFFCC680                             XP34:
   9426 FFFCC680 6100 0422                   	BSR.L	TSTC;		divide?
   9427 FFFCC684 2F 49                       	DC.B	'/',XP42-$
   9428 FFFCC686 2F00                        	MOVE.L	D0,-(SP);	save result of 1st <EXPR4>
   9429 FFFCC688 6100 000C                   	BSR	EXPR4		;get second <EXPR4>
   9430 FFFCC68C 221F                        	MOVE.L	(SP)+,D1
   9431 FFFCC68E C141                        	EXG	D0,D1
   9432 FFFCC690 6100 00D4                   	BSR.L	DIV32	;	do the division
   9433 FFFCC694 60D6                        	BRA	XP31		;go back for any more terms
                                             
   9435 FFFCC696                             EXPR4:
   9436 FFFCC696 43F9 FFFC C14C              	LEA	TAB4,A1 ;	find possible function
   9437 FFFCC69C 45F9 FFFC C196              	LEA	TAB4_1,A2
   9438 FFFCC6A2 6000 FB1E                   	BRA	EXEC
   9439 FFFCC6A6                             XP40:
   9440 FFFCC6A6 6100 002C                   	BSR	TSTV	;	nope, not a function
   9441 FFFCC6AA 6508                        	BCS	XP41		;nor a variable
   9442 FFFCC6AC 2240                        	MOVE.L	D0,A1
   9443 FFFCC6AE 4280                        	CLR.L	D0
   9444 FFFCC6B0 2011                        	MOVE.L	(A1),D0 ;	if a variable, return its value in D0
   9445 FFFCC6B2                             EXP4RT:
   9446 FFFCC6B2 4E75                        	RTS
   9447 FFFCC6B4                             XP41:
   9448 FFFCC6B4 6100 0408                   	BSR.L	TSTNUM	;	or is it a number?
   9449 FFFCC6B8 2001                        	MOVE.L	D1,D0
   9450 FFFCC6BA 4A82                        	TST	D2		;(if not, # of digits will be zero)
   9451 FFFCC6BC 66F4                        	BNE	EXP4RT	;	if so, return it in D0
   9452 FFFCC6BE                             PARN:
   9453 FFFCC6BE 6100 03E4                   	BSR.L	TSTC	;	else look for ( EXPR )
   9454 FFFCC6C2 28 0D                       	DC.B	'(',XP43-$
   9455 FFFCC6C4 6100 FEFC                   	BSR	EXPR
   9456 FFFCC6C8 6100 03DA                   	BSR.L	TSTC
   9457 FFFCC6CC 29 03                       	DC.B	')',XP43-$
   9458 FFFCC6CE                             XP42:
   9459 FFFCC6CE 4E75                        	RTS
   9460 FFFCC6D0                             XP43:
   9461 FFFCC6D0 6000 016C                   	BRA.L	QWHAT	;	else say "What?"
                                             
                                             ;*
                                             ;* ===== Test for a valid variable name.  Returns Carry=1 if not
                                             ;*	found, else returns Carry=0 and the address of the
                                             ;*	variable in D0.
                                             
   9468 FFFCC6D4                             TSTV:
   9469 FFFCC6D4 6100 0420                   	BSR.L	IGNBLK
   9470 FFFCC6D8 4280                        	CLR.L	D0
   9471 FFFCC6DA 1010                        	MOVE.B	(A0),D0 ;	look at the program text
   9472 FFFCC6DC 0400 0040                   	SUB.B	#'@',D0
   9473 FFFCC6E0 6540                        	BCS	TSTVRT	;	C=1: not a variable
   9474 FFFCC6E2 6628                        	BNE	TV1		;branch if not "@" array
   9475 FFFCC6E4 5288                        	ADDQ	#1,A0	;	If it is, it should be
   9476 FFFCC6E6 6100 FFD6                   	BSR	PARN		;followed by (EXPR) as its index.
   9477 FFFCC6EA D080                        	ADD.L	D0,D0
   9478 FFFCC6EC 6500 019C                   	BCS.L	QHOW	;	say "How?" if index is too big
   9479 FFFCC6F0 D080                        	ADD.L	D0,D0
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 101
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9480 FFFCC6F2 6500 0196                   	BCS.L	QHOW
   9481 FFFCC6F6 2F00                        	MOVE.L	D0,-(SP)	;save the index
   9482 FFFCC6F8 6100 00FA                   	BSR.L	SIZE_		;get amount of free memory
   9483 FFFCC6FC 221F                        	MOVE.L	(SP)+,D1	;get back the index
   9484 FFFCC6FE B081                        	CMP.L	D1,D0		;see if there's enough memory
   9485 FFFCC700 6300 017E                   	BLS.L	QSORRY		;if not, say "Sorry"
   9486 FFFCC704 2038 0628                   	MOVE.L	VARBGN,D0	;put address of array element...
   9487 FFFCC708 9081                        	SUB.L	D1,D0		;into D0
   9488 FFFCC70A 4E75                        	RTS
   9489 FFFCC70C                             TV1:
   9490 FFFCC70C B03C 001B                   	CMP.B	#27,D0		;if not @, is it A through Z?
   9491 FFFCC710 0A3C 0001                   	EOR	#1,CCR
   9492 FFFCC714 650C                        	BCS	TSTVRT		;if not, set Carry and return
   9493 FFFCC716 5288                        	ADDQ	#1,A0	;	else bump the text pointer
   9494 FFFCC718 D080                        	ADD	D0,D0		;compute the variable's address
   9495 FFFCC71A D080                        	ADD	D0,D0
   9496 FFFCC71C 2238 0628                   	MOVE.L	VARBGN,D1
   9497 FFFCC720 D081                        	ADD	D1,D0		;and return it in D0 with Carry=0
   9498 FFFCC722                             TSTVRT:
   9499 FFFCC722 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Multiplies the 32 bit values in D0 and D1, returning
                                             ;*	the 32 bit result in D0.
                                             ;*
   9505 FFFCC724                             MULT32:
   9506 FFFCC724 2801                        	MOVE.L	D1,D4
   9507 FFFCC726 B184                        	EOR.L	D0,D4	;	see if the signs are the same
   9508 FFFCC728 4A80                        	TST.L	D0		;take absolute value of D0
   9509 FFFCC72A 6A02                        	BPL	MLT1
   9510 FFFCC72C 4480                        	NEG.L	D0
   9511 FFFCC72E                             MLT1:
   9512 FFFCC72E 4A81                        	TST.L	D1	;	take absolute value of D1
   9513 FFFCC730 6A02                        	BPL	MLT2
   9514 FFFCC732 4481                        	NEG.L	D1
   9515 FFFCC734                             MLT2:
   9516 FFFCC734 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;is second argument <= 16 bits?
   9517 FFFCC73A 630C                        	BLS	MLT3	;	OK, let it through
   9518 FFFCC73C C141                        	EXG	D0,D1	;	else swap the two arguments
   9519 FFFCC73E B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;and check 2nd argument again
   9520 FFFCC744 6200 0144                   	BHI.L	QHOW		;one of them MUST be 16 bits
   9521 FFFCC748                             MLT3:
   9522 FFFCC748 2400                        	MOVE	D0,D2	;	prepare for 32 bit X 16 bit multiply
   9523 FFFCC74A C4C1                        	MULU	D1,D2		;multiply low word
   9524 FFFCC74C 4840                        	SWAP	D0
   9525 FFFCC74E C0C1                        	MULU	D1,D0		;multiply high word
   9526 FFFCC750 4840                        	SWAP	D0
                                             ;*** Rick Murray's bug correction follows:
   9528 FFFCC752 4A80                        	TST	D0		;if lower word not 0, then overflow
   9529 FFFCC754 6600 0134                   	BNE.L	QHOW	;	if overflow, say "How?"
   9530 FFFCC758 D082                        	ADD.L	D2,D0	;	D0 now holds the product
   9531 FFFCC75A 6B00 012E                   	BMI.L	QHOW	;	if sign bit set, it's an overflow
   9532 FFFCC75E 4A84                        	TST.L	D4		;were the signs the same?
   9533 FFFCC760 6A02                        	BPL	MLTRET
   9534 FFFCC762 4480                        	NEG.L	D0		;if not, make the result negative
   9535 FFFCC764                             MLTRET:
   9536 FFFCC764 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Divide the 32 bit value in D0 by the 32 bit value in D1.
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 102
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*	Returns the 32 bit quotient in D0, remainder in D1.
                                             ;*
   9542 FFFCC766                             DIV32:
   9543 FFFCC766 4A81                        	TST.L	D1		;check for divide-by-zero
   9544 FFFCC768 6700 0120                   	BEQ.L	QHOW		;if so, say "How?"
   9545 FFFCC76C 2401                        	MOVE.L	D1,D2
   9546 FFFCC76E 2801                        	MOVE.L	D1,D4
   9547 FFFCC770 B184                        	EOR.L	D0,D4		;see if the signs are the same
   9548 FFFCC772 4A80                        	TST.L	D0		;take absolute value of D0
   9549 FFFCC774 6A02                        	BPL	DIV1
   9550 FFFCC776 4480                        	NEG.L	D0
   9551 FFFCC778                             DIV1:
   9552 FFFCC778 4A81                        	TST.L	D1	;	take absolute value of D1
   9553 FFFCC77A 6A02                        	BPL	DIV2
   9554 FFFCC77C 4481                        	NEG.L	D1
   9555 FFFCC77E                             DIV2:
   9556 FFFCC77E 761F                        	MOVEQ	#31,D3	;	iteration count for 32 bits
   9557 FFFCC780 2200                        	MOVE.L	D0,D1
   9558 FFFCC782 4280                        	CLR.L	D0
   9559 FFFCC784                             DIV3:
   9560 FFFCC784 D281                        	ADD.L	D1,D1	;	(This algorithm was translated from
   9561 FFFCC786 D180                        	ADDX.L	D0,D0		;the divide routine in Ron Cain's
   9562 FFFCC788 6708                        	BEQ	DIV4		;Small-C run time library.)
   9563 FFFCC78A B082                        	CMP.L	D2,D0
   9564 FFFCC78C 6B04                        	BMI	DIV4
   9565 FFFCC78E 5281                        	ADDQ.L	#1,D1
   9566 FFFCC790 9082                        	SUB.L	D2,D0
   9567 FFFCC792                             DIV4:
   9568 FFFCC792 51CB FFF0                   	DBRA	D3,DIV3
   9569 FFFCC796 C141                        	EXG	D0,D1	;	put rem. & quot. in proper registers
   9570 FFFCC798 4A84                        	TST.L	D4	;	were the signs the same?
   9571 FFFCC79A 6A04                        	BPL	DIVRT
   9572 FFFCC79C 4480                        	NEG.L	D0	;	if not, results are negative
   9573 FFFCC79E 4481                        	NEG.L	D1
   9574 FFFCC7A0                             DIVRT:
   9575 FFFCC7A0 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The PEEK function returns the byte stored at the address
                                             ;*	contained in the following expression.
                                             ;*
   9581 FFFCC7A2                             PEEK:
   9582 FFFCC7A2 6100 FF1A                   	BSR	PARN	;	get the memory address
   9583 FFFCC7A6 2240                        	MOVE.L	D0,A1
   9584 FFFCC7A8 4280                        	CLR.L	D0		;upper 3 bytes will be zero
   9585 FFFCC7AA 1011                        	MOVE.B	(A1),D0 ;	get the addressed byte
   9586 FFFCC7AC 4E75                        	RTS			;and return it
                                             
                                             ;*
                                             ;* ===== The RND function returns a random number from 1 to
                                             ;*	the value of the following expression in D0.
                                             ;*
   9592 FFFCC7AE                             RND:
   9593 FFFCC7AE 6100 FF0E                   	BSR	PARN	;	get the upper limit
   9594 FFFCC7B2 4A80                        	TST.L	D0	;	it must be positive and non-zero
   9595 FFFCC7B4 6700 00D4                   	BEQ.L	QHOW
   9596 FFFCC7B8 6B00 00D0                   	BMI.L	QHOW
   9597 FFFCC7BC 2200                        	MOVE.L	D0,D1
   9598 FFFCC7BE 2278 0600                   	MOVE.L	RANPNT,A1	;get memory as a random number
   9599 FFFCC7C2 B3FC FFFC CC78              	CMP.L	#LSTROM,A1
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 103
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9600 FFFCC7C8 6506                        	BCS	RA1
   9601 FFFCC7CA 43F9 FFFC C000              	LEA	START,A1	;wrap around if end of program
   9602 FFFCC7D0                             RA1:
   9603 FFFCC7D0 2019                        	MOVE.L	(A1)+,D0;	get the slightly random number
   9604 FFFCC7D2 0880 001F                   	BCLR	#31,D0	;	make sure it's positive
   9605 FFFCC7D6 21C9 0600                   	MOVE.L	A1,RANPNT	;(even I can do better than this!)
   9606 FFFCC7DA 6100 FF8A                   	BSR	DIV32		;RND(n)=MOD(number,n)+1
   9607 FFFCC7DE 2001                        	MOVE.L	D1,D0	;	MOD is the remainder of the div.
   9608 FFFCC7E0 5280                        	ADDQ.L	#1,D0
   9609 FFFCC7E2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The ABS function returns an absolute value in D0.
                                             ;*
   9614 FFFCC7E4                             ABS:
   9615 FFFCC7E4 6100 FED8                   	BSR	PARN		;get the following expr.'s value
   9616 FFFCC7E8 4A80                        	TST.L	D0
   9617 FFFCC7EA 6A06                        	BPL	ABSRT
   9618 FFFCC7EC 4480                        	NEG.L	D0		;if negative, complement it
   9619 FFFCC7EE 6B00 009A                   	BMI.L	QHOW	;	if still negative, it was too big
   9620 FFFCC7F2                             ABSRT:
   9621 FFFCC7F2 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== The SIZE function returns the size of free memory in D0.
                                             ;*
   9626 FFFCC7F4                             SIZE_:
   9627 FFFCC7F4 2038 0628                   	MOVE.L	VARBGN,D0	;get the number of free bytes...
   9628 FFFCC7F8 90B8 0624                   	SUB.L	TXTUNF,D0	;between 'TXTUNF' and 'VARBGN'
   9629 FFFCC7FC 4E75                        	RTS			;return the number in D0
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** SETVAL *** FIN *** ENDCHK *** ERROR (& friends) ***
                                             ;*
                                             ;* 'SETVAL' expects a variable, followed by an equal sign and then
                                             ;* an expression.  It evaluates the expression and sets the variable
                                             ;* to that value.
                                             ;*
                                             ;* 'FIN' checks the end of a command.  If it ended with ":",
                                             ;* execution continues.	If it ended with a CR, it finds the
                                             ;* the next line and continues from there.
                                             ;*
                                             ;* 'ENDCHK' checks if a command is ended with a CR. This is
                                             ;* required in certain commands, such as GOTO, RETURN, STOP, etc.
                                             ;*
                                             ;* 'ERROR' prints the string pointed to by A0. It then prints the
                                             ;* line pointed to by CURRNT with a "?" inserted at where the
                                             ;* old text pointer (should be on top of the stack) points to.
                                             ;* Execution of Tiny BASIC is stopped and a warm start is done.
                                             ;* If CURRNT is zero (indicating a direct command), the direct
                                             ;* command is not printed. If CURRNT is -1 (indicating
                                             ;* 'INPUT' command in progress), the input line is not printed
                                             ;* and execution is not terminated but continues at 'INPERR'.
                                             ;*
                                             ;* Related to 'ERROR' are the following:
                                             ;* 'QWHAT' saves text pointer on stack and gets "What?" message.
                                             ;* 'AWHAT' just gets the "What?" message and jumps to 'ERROR'.
                                             ;* 'QSORRY' and 'ASORRY' do the same kind of thing.
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 104
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* 'QHOW' and 'AHOW' also do this for "How?".
                                             ;*
   9662 FFFCC7FE                             SETVAL:
   9663 FFFCC7FE 6100 FED4                   	BSR	TSTV	;	variable name?
   9664 FFFCC802 653A                        	BCS	QWHAT		;if not, say "What?"
   9665 FFFCC804 2F00                        	MOVE.L	D0,-(SP);	save the variable's address
   9666 FFFCC806 6100 029C                   	BSR.L	TSTC	;	get past the "=" sign
   9667 FFFCC80A 3D 0B                       	DC.B	'=',SV1-$
   9668 FFFCC80C 6100 FDB4                   	BSR	EXPR	;	evaluate the expression
   9669 FFFCC810 2C5F                        	MOVE.L	(SP)+,A6
   9670 FFFCC812 2C80                        	MOVE.L	D0,(A6) ;	and save its value in the variable
   9671 FFFCC814 4E75                        	RTS
   9672 FFFCC816                             SV1:
   9673 FFFCC816 6026                        	BRA	QWHAT	;	if no "=" sign
                                             
   9675 FFFCC818                             FIN:
   9676 FFFCC818 6100 028A                   	BSR.L	TSTC	;	*** FIN ***
   9677 FFFCC81C 3A 07                       	DC.B	':',FI1-$
   9678 FFFCC81E 588F                        	ADDQ.L	#4,SP	;	if ":", discard return address
   9679 FFFCC820 6000 FA1C                   	BRA	RUNSML	;	continue on the same line
   9680 FFFCC824                             FI1:
   9681 FFFCC824 6100 027E                   	BSR.L	TSTC	;	not ":", is it a CR?
   9682 FFFCC828 0D 07                       	DC.B	CR,FI2-$
   9683 FFFCC82A 588F                        	ADDQ.L	#4,SP	;	yes, purge return address
   9684 FFFCC82C 6000 F9F4                   	BRA	RUNNXL		;execute the next line
   9685 FFFCC830                             FI2:
   9686 FFFCC830 4E75                        	RTS			;else return to the caller
                                             
   9688 FFFCC832                             ENDCHK:
   9689 FFFCC832 6100 02C2                   	BSR.L	IGNBLK
   9690 FFFCC836 0C10 000D                   	CMP.B	#CR,(A0);	does it end with a CR?
   9691 FFFCC83A 6602                        	BNE	QWHAT	;	if not, say "WHAT?"
   9692 FFFCC83C 4E75                        	RTS
                                             
   9694 FFFCC83E                             QWHAT:
   9695 FFFCC83E 2F08                        	MOVE.L	A0,-(SP)
   9696 FFFCC840                             AWHAT:
   9697 FFFCC840 4DF9 FFFC CBFA              	LEA	WHTMSG,A6
   9698 FFFCC846                             ERROR:
   9699 FFFCC846 6100 031E                   	BSR.L	PRMESG	;	display the error message
   9700 FFFCC84A 205F                        	MOVE.L	(SP)+,A0	;restore the text pointer
   9701 FFFCC84C 2038 0604                   	MOVE.L	CURRNT,D0	;get the current line number
   9702 FFFCC850 6700 F80E                   	BEQ	WSTART		;if zero, do a warm start
   9703 FFFCC854 B0BC FFFF FFFF              	CMP.L	#-1,D0		;is the line no. pointer = -1?
   9704 FFFCC85A 6700 FBC2                   	BEQ	INPERR		;if so, redo input
   9705 FFFCC85E 1F10                        	MOVE.B	(A0),-(SP)	;save the char. pointed to
   9706 FFFCC860 4210                        	CLR.B	(A0)		;put a zero where the error is
   9707 FFFCC862 2278 0604                   	MOVE.L	CURRNT,A1	;point to start of current line
   9708 FFFCC866 6100 0220                   	BSR.L	PRTLN		;display the line in error up to the 0
   9709 FFFCC86A 109F                        	MOVE.B	(SP)+,(A0)	;restore the character
   9710 FFFCC86C 103C 003F                   	MOVE.B	#'?',D0     ;    display a "?"
   9711 FFFCC870 6100 F796                   	BSR	GOOUT
   9712 FFFCC874 4280                        	CLR	D0
   9713 FFFCC876 5389                        	SUBQ.L	#1,A1		;point back to the error char.
   9714 FFFCC878 6100 013E                   	BSR.L	PRTSTG		;display the rest of the line
   9715 FFFCC87C 6000 F7E2                   	BRA	WSTART		;and do a warm start
   9716 FFFCC880                             QSORRY:
   9717 FFFCC880 2F08                        	MOVE.L	A0,-(SP)
   9718 FFFCC882                             ASORRY:
   9719 FFFCC882 4DF9 FFFC CC02              	LEA	SRYMSG,A6
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 105
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9720 FFFCC888 60BC                        	BRA	ERROR
   9721 FFFCC88A                             QHOW:
   9722 FFFCC88A 2F08                        	MOVE.L	A0,-(SP)	;Error: "How?"
   9723 FFFCC88C                             AHOW:
   9724 FFFCC88C 4DF9 FFFC CBF3              	LEA	HOWMSG,A6
   9725 FFFCC892 60B2                        	BRA	ERROR
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** GETLN *** FNDLN (& friends) ***
                                             ;*
                                             ;* 'GETLN' reads in input line into 'BUFFER'. It first prompts with
                                             ;* the character in D0 (given by the caller), then it fills the
                                             ;* buffer and echos. It ignores LF's but still echos
                                             ;* them back. Control-H is used to delete the last character
                                             ;* entered (if there is one), and control-X is used to delete the
                                             ;* whole line and start over again. CR signals the end of a line,
                                             ;* and causes 'GETLN' to return.
                                             ;*
                                             ;* 'FNDLN' finds a line with a given line no. (in D1) in the
                                             ;* text save area.  A1 is used as the text pointer. If the line
                                             ;* is found, A1 will point to the beginning of that line
                                             ;* (i.e. the high byte of the line no.), and flags are NC & Z.
                                             ;* If that line is not there and a line with a higher line no.
                                             ;* is found, A1 points there and flags are NC & NZ. If we reached
                                             ;* the end of the text save area and cannot find the line, flags
                                             ;* are C & NZ.
                                             ;* 'FNDLN' will initialize A1 to the beginning of the text save
                                             ;* area to start the search. Some other entries of this routine
                                             ;* will not initialize A1 and do the search.
                                             ;* 'FNDLNP' will start with A1 and search for the line no.
                                             ;* 'FNDNXT' will bump A1 by 2, find a CR and then start search.
                                             ;* 'FNDSKP' uses A1 to find a CR, and then starts the search.
                                             ;*
                                             PUBLIC GETLN:
   9755 FFFCC894 6100 F772                   	BSR	GOOUT		;display the prompt
   9756 FFFCC898 103C 0020                   	MOVE.B	#' ',D0      ;   and a space
   9757 FFFCC89C 6100 F76A                   	BSR	GOOUT
   9758 FFFCC8A0 41F8 0630                   	LEA	BUFFER,A0;	A0 is the buffer pointer
   9759 FFFCC8A4                             GL1:
   9760 FFFCC8A4 6100 02A8                   	BSR.L	CHKIO;		check keyboard
   9761 FFFCC8A8 67FA                        	BEQ	GL1	;	wait for a char. to come in
   9762 FFFCC8AA B03C 0008                   	CMP.B	#CTRLH,D0	;delete last character?
   9763 FFFCC8AE 6726                        	BEQ	GL3	;	if so
   9764 FFFCC8B0 B03C 0018                   	CMP.B	#CTRLX,D0;	delete the whole line?
   9765 FFFCC8B4 6744                        	BEQ	GL4	;	if so
   9766 FFFCC8B6 B03C 000D                   	CMP.B	#CR,D0	;	accept a CR
   9767 FFFCC8BA 6706                        	BEQ	GL2
   9768 FFFCC8BC B03C 0020                   	CMP.B	#' ',D0  ;       if other control char., discard it
   9769 FFFCC8C0 65E2                        	BCS	GL1
   9770 FFFCC8C2                             GL2:
   9771 FFFCC8C2 10C0                        	MOVE.B	D0,(A0)+;	save the char.
   9772 FFFCC8C4 6100 F742                   	BSR	GOOUT		;echo the char back out
   9773 FFFCC8C8 B03C 000D                   	CMP.B	#CR,D0	;	if it's a CR, end the line
   9774 FFFCC8CC 675C                        	BEQ	GL7
   9775 FFFCC8CE B1FC 0000 067F              	CMP.L	#(BUFFER+BUFLEN-1),A0	;any more room?
   9776 FFFCC8D4 65CE                        	BCS	GL1	;	yes: get some more, else delete last char.
   9777 FFFCC8D6                             GL3:
   9778 FFFCC8D6 103C 0008                   	MOVE.B	#CTRLH,D0	;delete a char. if possible
   9779 FFFCC8DA 6100 F72C                   	BSR	GOOUT
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 106
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9780 FFFCC8DE 103C 0020                   	MOVE.B	#' ',D0
   9781 FFFCC8E2 6100 F724                   	BSR	GOOUT
   9782 FFFCC8E6 B1FC 0000 0630              	CMP.L	#BUFFER,A0	;any char.'s left?
   9783 FFFCC8EC 63B6                        	BLS	GL1		;if not
   9784 FFFCC8EE 103C 0008                   	MOVE.B	#CTRLH,D0;	if so, finish the BS-space-BS sequence
   9785 FFFCC8F2 6100 F714                   	BSR	GOOUT
   9786 FFFCC8F6 5388                        	SUBQ.L	#1,A0	;	decrement the text pointer
   9787 FFFCC8F8 60AA                        	BRA	GL1		;back for more
   9788 FFFCC8FA                             GL4:
   9789 FFFCC8FA 2208                        	MOVE.L	A0,D1	;	delete the whole line
   9790 FFFCC8FC 0481 0000 0630              	SUB.L	#BUFFER,D1;	figure out how many backspaces we need
   9791 FFFCC902 671E                        	BEQ	GL6		;if none needed, branch
   9792 FFFCC904 5381                        	SUBQ	#1,D1	;	adjust for DBRA
   9793 FFFCC906                             GL5:
   9794 FFFCC906 103C 0008                   	MOVE.B	#CTRLH,D0	;and display BS-space-BS sequences
   9795 FFFCC90A 6100 F6FC                   	BSR	GOOUT
   9796 FFFCC90E 103C 0020                   	MOVE.B	#' ',D0
   9797 FFFCC912 6100 F6F4                   	BSR	GOOUT
   9798 FFFCC916 103C 0008                   	MOVE.B	#CTRLH,D0
   9799 FFFCC91A 6100 F6EC                   	BSR	GOOUT
   9800 FFFCC91E 51C9 FFE6                   	DBRA	D1,GL5
   9801 FFFCC922                             GL6:
   9802 FFFCC922 41F8 0630                   	LEA	BUFFER,A0	;reinitialize the text pointer
   9803 FFFCC926 6000 FF7C                   	BRA	GL1		;and go back for more
   9804 FFFCC92A                             GL7:
   9805 FFFCC92A 103C 000A                   	MOVE.B	#LF,D0	;	echo a LF for the CR
   9806 FFFCC92E 6100 F6D8                   	BSR	GOOUT
   9807 FFFCC932 4E75                        	RTS
                                             
   9809 FFFCC934                             FNDLN:
   9810 FFFCC934 B2BC 0000 FFFF              	CMP.L	#0xFFFF,D1	;line no. must be < 65535
   9811 FFFCC93A 6400 FF4E                   	BCC	QHOW
   9812 FFFCC93E 2279 FFFC C01C              	MOVE.L	TXTBGN,A1	;init. the text save pointer
                                             
   9814 FFFCC944                             FNDLNP:
   9815 FFFCC944 2478 0624                   	MOVE.L	TXTUNF,A2	;check if we passed the end
   9816 FFFCC948 538A                        	SUBQ.L	#1,A2
   9817 FFFCC94A B5C9                        	CMP	A1,A2
   9818 FFFCC94C 650C                        	BCS	FNDRET	;	if so, return with Z=0 & C=1
   9819 FFFCC94E 1419                        	MOVE.B	(A1)+,D2	;if not, get a line no.
   9820 FFFCC950 E18A                        	LSL	#8,D2
   9821 FFFCC952 1411                        	MOVE.B	(A1),D2
   9822 FFFCC954 5389                        	SUBQ.L	#1,A1
   9823 FFFCC956 B481                        	CMP	D1,D2		;is this the line we want?
   9824 FFFCC958 6502                        	BCS	FNDNXT		;no, not there yet
   9825 FFFCC95A                             FNDRET:
   9826 FFFCC95A 4E75                        	RTS			;return the cond. codes
                                             
   9828 FFFCC95C                             FNDNXT:
   9829 FFFCC95C 5489                        	ADDQ.L	#2,A1;		find the next line
                                             
   9831 FFFCC95E                             FNDSKP:
   9832 FFFCC95E 0C19 000D                   	CMP.B	#CR,(A1)+	;try to find a CR
   9833 FFFCC962 66FA                        	BNE	FNDSKP		;keep looking
   9834 FFFCC964 60DE                        	BRA	FNDLNP		;check if end of text
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** MVUP *** MVDOWN *** POPA *** PUSHA ***
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 107
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
                                             ;* 'MVUP' moves a block up from where A1 points to where A2 points
                                             ;* until A1=A3
                                             ;*
                                             ;* 'MVDOWN' moves a block down from where A1 points to where A3
                                             ;* points until A1=A2
                                             ;*
                                             ;* 'POPA' restores the 'FOR' loop variable save area from the stack
                                             ;*
                                             ;* 'PUSHA' stacks for 'FOR' loop variable save area onto the stack
                                             ;*
   9851 FFFCC966                             MVUP:
   9852 FFFCC966 B7C9                        	CMP.L	A1,A3	;	see the above description
   9853 FFFCC968 6704                        	BEQ	MVRET
   9854 FFFCC96A 14D9                        	MOVE.B	(A1)+,(A2)+
   9855 FFFCC96C 60F8                        	BRA	MVUP
   9856 FFFCC96E                             MVRET:
   9857 FFFCC96E 4E75                        	RTS
                                             
   9859 FFFCC970                             MVDOWN:
   9860 FFFCC970 B5C9                        	CMP.L	A1,A2	;	see the above description
   9861 FFFCC972 67FA                        	BEQ	MVRET
   9862 FFFCC974 1721                        	MOVE.B	-(A1),-(A3)
   9863 FFFCC976 60F8                        	BRA	MVDOWN
                                             
   9865 FFFCC978                             POPA:
   9866 FFFCC978 2C5F                        	MOVE.L	(SP)+,A6	;A6 = return address
   9867 FFFCC97A 21DF 0610                   	MOVE.L	(SP)+,LOPVAR	;restore LOPVAR, but zero means no more
   9868 FFFCC97E 6710                        	BEQ	PP1
   9869 FFFCC980 21DF 0614                   	MOVE.L	(SP)+,LOPINC	;if not zero, restore the rest
   9870 FFFCC984 21DF 0618                   	MOVE.L	(SP)+,LOPLMT
   9871 FFFCC988 21DF 061C                   	MOVE.L	(SP)+,LOPLN
   9872 FFFCC98C 21DF 0620                   	MOVE.L	(SP)+,LOPPT
   9873 FFFCC990                             PP1:
   9874 FFFCC990 4ED6                        	JMP	(A6)	;	return
                                             
   9876 FFFCC992                             PUSHA:
   9877 FFFCC992 2238 062C                   	MOVE.L	STKLMT,D1	;Are we running out of stack room?
   9878 FFFCC996 928F                        	SUB.L	SP,D1
   9879 FFFCC998 6400 FEE6                   	BCC	QSORRY		;if so, say we're sorry
   9880 FFFCC99C 2C5F                        	MOVE.L	(SP)+,A6	;else get the return address
   9881 FFFCC99E 2238 0610                   	MOVE.L	LOPVAR,D1	;save loop variables
   9882 FFFCC9A2 6710                        	BEQ	PU1		;if LOPVAR is zero, that's all
   9883 FFFCC9A4 2F38 0620                   	MOVE.L	LOPPT,-(SP)	;else save all the others
   9884 FFFCC9A8 2F38 061C                   	MOVE.L	LOPLN,-(SP)
   9885 FFFCC9AC 2F38 0618                   	MOVE.L	LOPLMT,-(SP)
   9886 FFFCC9B0 2F38 0614                   	MOVE.L	LOPINC,-(SP)
   9887 FFFCC9B4                             PU1:
   9888 FFFCC9B4 2F01                        	MOVE.L	D1,-(SP)
   9889 FFFCC9B6 4ED6                        	JMP	(A6)		;return
                                             
                                             ;*
                                             ;*******************************************************************
                                             ;*
                                             ;* *** PRTSTG *** QTSTG *** PRTNUM *** PRTLN ***
                                             ;*
                                             ;* 'PRTSTG' prints a string pointed to by A1. It stops printing
                                             ;* and returns to the caller when either a CR is printed or when
                                             ;* the next byte is the same as what was passed in D0 by the
                                             ;* caller.
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 108
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;*
                                             ;* 'QTSTG' looks for an underline (back-arrow on some systems),
                                             ;* single-quote, or double-quote.  If none of these are found, returns
                                             ;* to the caller.  If underline, outputs a CR without a LF.  If single
                                             ;* or double quote, prints the quoted string and demands a matching
                                             ;* end quote.  After the printing, the next 2 bytes of the caller are
                                             ;* skipped over (usually a short branch instruction).
                                             ;*
                                             ;* 'PRTNUM' prints the 32 bit number in D1, leading blanks are added if
                                             ;* needed to pad the number of spaces to the number in D4.
                                             ;* However, if the number of digits is larger than the no. in
                                             ;* D4, all digits are printed anyway. Negative sign is also
                                             ;* printed and counted in, positive sign is not.
                                             ;*
                                             ;* 'PRTLN' prints the saved text line pointed to by A1
                                             ;* with line no. and all.
                                             ;*
   9917 FFFCC9B8                             PRTSTG:
   9918 FFFCC9B8 1200                        	MOVE.B	D0,D1	;	save the stop character
   9919 FFFCC9BA                             PS1:
   9920 FFFCC9BA 1019                        	MOVE.B	(A1)+,D0	;get a text character
   9921 FFFCC9BC B200                        	CMP.B	D0,D1		;same as stop character?
   9922 FFFCC9BE 6712                        	BEQ	PRTRET		;if so, return
   9923 FFFCC9C0 6100 F646                   	BSR	GOOUT		;display the char.
   9924 FFFCC9C4 B03C 000D                   	CMP.B	#CR,D0		;;is it a C.R.?
   9925 FFFCC9C8 66F0                        	BNE	PS1		;no, go back for more
   9926 FFFCC9CA 103C 000A                   	MOVE.B	#LF,D0	;	yes, add a L.F.
   9927 FFFCC9CE 6100 F638                   	BSR	GOOUT
   9928 FFFCC9D2                             PRTRET:
   9929 FFFCC9D2 4E75                        	RTS			;then return
                                             
   9931 FFFCC9D4                             QTSTG:
   9932 FFFCC9D4 6100 00CE                   	BSR.L	TSTC;		*** QTSTG ***
   9933 FFFCC9D8 22 1B                       	DC.B	'"',QT3-$
   9934 FFFCC9DA 103C 0022                   	MOVE.B	#'"',D0  ;       it is a "
   9935 FFFCC9DE                             QT1:
   9936 FFFCC9DE 2248                        	MOVE.L	A0,A1
   9937 FFFCC9E0 6100 FFD6                   	BSR	PRTSTG		;print until another
   9938 FFFCC9E4 2049                        	MOVE.L	A1,A0
   9939 FFFCC9E6 225F                        	MOVE.L	(SP)+,A1;	pop return address
   9940 FFFCC9E8 B03C 000A                   	CMP.B	#LF,D0	;	was last one a CR?
   9941 FFFCC9EC 6700 F834                   	BEQ	RUNNXL		;if so, run next line
   9942 FFFCC9F0                             QT2:
   9943 FFFCC9F0 5489                        	ADDQ.L	#2,A1	;	skip 2 bytes on return
   9944 FFFCC9F2 4ED1                        	JMP	(A1)		;return
   9945 FFFCC9F4                             QT3:
   9946 FFFCC9F4 6100 00AE                   	BSR.L	TSTC	;	is it a single quote?
   9947 FFFCC9F8 27 07                       	DC.B	'\'',QT4-$
   9948 FFFCC9FA 103C 0027                   	MOVE.B	#'''',D0  ;      if so, do same as above
   9949 FFFCC9FE 60DE                        	BRA	QT1
   9950 FFFCCA00                             QT4:
   9951 FFFCCA00 6100 00A2                   	BSR.L	TSTC		;is it an underline?
   9952 FFFCCA04 5F 0D                       	DC.B	'_',QT5-$
   9953 FFFCCA06 103C 000D                   	MOVE.B	#CR,D0		;if so, output a CR without LF
   9954 FFFCCA0A 6100 F5FC                   	BSR.L	GOOUT
   9955 FFFCCA0E 225F                        	MOVE.L	(SP)+,A1	;pop return address
   9956 FFFCCA10 60DE                        	BRA	QT2
   9957 FFFCCA12                             QT5:
   9958 FFFCCA12 4E75                        	RTS			;none of the above
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 109
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
   9960 FFFCCA14                             PRTNUM:
   9961 FFFCCA14 2601                        	MOVE.L	D1,D3	;	save the number for later
   9962 FFFCCA16 2F04                        	MOVE	D4,-(SP)	;save the width value
   9963 FFFCCA18 1F3C 00FF                   	MOVE.B	#0xFF,-(SP)	;flag for end of digit string
   9964 FFFCCA1C 4A81                        	TST.L	D1		;is it negative?
   9965 FFFCCA1E 6A04                        	BPL	PN1		;if not
   9966 FFFCCA20 4481                        	NEG.L	D1	;	else make it positive
   9967 FFFCCA22 5384                        	SUBQ	#1,D4	;	one less for width count
   9968 FFFCCA24                             PN1:
   9969 FFFCCA24 82FC 000A                   	DIVU	#10,D1	;	get the next digit
   9970 FFFCCA28 690A                        	BVS	PNOV	;	overflow flag set?
   9971 FFFCCA2A 2001                        	MOVE.L	D1,D0	;	if not, save remainder
   9972 FFFCCA2C 0281 0000 FFFF              	AND.L	#0xFFFF,D1	;strip the remainder
   9973 FFFCCA32 601A                        	BRA	TOASCII 	;skip the overflow stuff
   9974 FFFCCA34                             PNOV:
   9975 FFFCCA34 2001                        	MOVE	D1,D0	;	prepare for long word division
   9976 FFFCCA36 4241                        	CLR.W	D1		;zero out low word
   9977 FFFCCA38 4841                        	SWAP	D1		;high word into low
   9978 FFFCCA3A 82FC 000A                   	DIVU	#10,D1	;	divide high word
   9979 FFFCCA3E 2401                        	MOVE	D1,D2	;	save quotient
   9980 FFFCCA40 2200                        	MOVE	D0,D1	;	low word into low
   9981 FFFCCA42 82FC 000A                   	DIVU	#10,D1	;	divide low word
   9982 FFFCCA46 2001                        	MOVE.L	D1,D0	;	D0 = remainder
   9983 FFFCCA48 4841                        	SWAP	D1	;	R/Q becomes Q/R
   9984 FFFCCA4A 2202                        	MOVE	D2,D1	;	D1 is low/high
   9985 FFFCCA4C 4841                        	SWAP	D1	;	D1 is finally high/low
   9986 FFFCCA4E                             TOASCII:
   9987 FFFCCA4E 4840                        	SWAP	D0	;	get remainder
   9988 FFFCCA50 1F00                        	MOVE.B	D0,-(SP);	stack it as a digit
   9989 FFFCCA52 4840                        	SWAP	D0
   9990 FFFCCA54 5384                        	SUBQ	#1,D4	;	decrement width count
   9991 FFFCCA56 4A81                        	TST.L	D1		;if quotient is zero, we're done
   9992 FFFCCA58 66CA                        	BNE	PN1
   9993 FFFCCA5A 5384                        	SUBQ	#1,D4	;	adjust padding count for DBRA
   9994 FFFCCA5C 6B0C                        	BMI	PN4		;skip padding if not needed
   9995 FFFCCA5E                             PN3:
   9996 FFFCCA5E 103C 0020                   	MOVE.B	#' ',D0  ;       display the required leading spaces
   9997 FFFCCA62 6100 F5A4                   	BSR	GOOUT
   9998 FFFCCA66 51CC FFF6                   	DBRA	D4,PN3
   9999 FFFCCA6A                             PN4:
  10000 FFFCCA6A 4A83                        	TST.L	D3		;is number negative?
  10001 FFFCCA6C 6A08                        	BPL	PN5
  10002 FFFCCA6E 103C 002D                   	MOVE.B	#'-',D0  ;       if so, display the sign
  10003 FFFCCA72 6100 F594                   	BSR	GOOUT
  10004 FFFCCA76                             PN5:
  10005 FFFCCA76 101F                        	MOVE.B	(SP)+,D0	;now unstack the digits and display
  10006 FFFCCA78 6B0A                        	BMI	PNRET		;until the flag code is reached
  10007 FFFCCA7A 0600 0030                   	ADD.B	#'0',D0   ;      make into ASCII
  10008 FFFCCA7E 6100 F588                   	BSR	GOOUT
  10009 FFFCCA82 60F2                        	BRA	PN5
  10010 FFFCCA84                             PNRET:
  10011 FFFCCA84 281F                        	MOVE	(SP)+,D4	;restore width value
  10012 FFFCCA86 4E75                        	RTS
                                             
  10014 FFFCCA88                             PRTLN:
  10015 FFFCCA88 4281                        	CLR.L	D1
  10016 FFFCCA8A 1219                        	MOVE.B	(A1)+,D1	;get the binary line number
  10017 FFFCCA8C E189                        	LSL	#8,D1
  10018 FFFCCA8E 1219                        	MOVE.B	(A1)+,D1
  10019 FFFCCA90 7805                        	MOVEQ	#5,D4		;display a 5 digit line no.
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 110
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10020 FFFCCA92 6100 FF80                   	BSR	PRTNUM
  10021 FFFCCA96 103C 0020                   	MOVE.B	#' ',D0      ;   followed by a blank
  10022 FFFCCA9A 6100 F56C                   	BSR	GOOUT
  10023 FFFCCA9E 4280                        	CLR	D0		;stop char. is a zero
  10024 FFFCCAA0 6000 FF16                   	BRA	PRTSTG	;	display the rest of the line
                                             
                                             ;*
                                             ;* ===== Test text byte following the call to this subroutine. If it
                                             ;*	equals the byte pointed to by A0, return to the code following
                                             ;*	the call. If they are not equal, branch to the point
                                             ;*	indicated by the offset byte following the text byte.
                                             ;*
  10032 FFFCCAA4                             TSTC:
  10033 FFFCCAA4 6100 0050                   	BSR	IGNBLK		;ignore leading blanks
  10034 FFFCCAA8 225F                        	MOVE.L	(SP)+,A1	;get the return address
  10035 FFFCCAAA 1219                        	MOVE.B	(A1)+,D1	;get the byte to compare
  10036 FFFCCAAC B210                        	CMP.B	(A0),D1 	;is it = to what A0 points to?
  10037 FFFCCAAE 6708                        	BEQ	TC1		;if so
  10038 FFFCCAB0 4281                        	CLR.L	D1		;If not, add the second
  10039 FFFCCAB2 1211                        	MOVE.B	(A1),D1 ;	byte following the call to
  10040 FFFCCAB4 D3C1                        	ADD.L	D1,A1	;	the return address.
  10041 FFFCCAB6 4ED1                        	JMP	(A1)		;jump to the routine
  10042 FFFCCAB8                             TC1:
  10043 FFFCCAB8 5288                        	ADDQ.L	#1,A0	;	if equal, bump text pointer
  10044 FFFCCABA 5289                        	ADDQ.L	#1,A1	;	Skip the 2 bytes following
  10045 FFFCCABC 4ED1                        	JMP	(A1)		;the call and continue.
                                             
                                             ;*
                                             ;* ===== See if the text pointed to by A0 is a number. If so,
                                             ;*	return the number in D1 and the number of digits in D2,
                                             ;*	else return zero in D1 and D2.
                                             ;*
  10052 FFFCCABE                             TSTNUM:
  10053 FFFCCABE 4281                        	CLR.L	D1		;initialize return parameters
  10054 FFFCCAC0 4282                        	CLR	D2
  10055 FFFCCAC2 6100 0032                   	BSR	IGNBLK		;skip over blanks
  10056 FFFCCAC6                             TN1:
  10057 FFFCCAC6 0C10 0030                   	CMP.B	#'0',(A0) ;      is it less than zero?
  10058 FFFCCACA 6528                        	BCS	TSNMRET 	;if so, that's all
  10059 FFFCCACC 0C10 0039                   	CMP.B	#'9',(A0) ;      is it greater than nine?
  10060 FFFCCAD0 6222                        	BHI	TSNMRET 	;if so, return
  10061 FFFCCAD2 B2BC 0CCC CCCC              	CMP.L	#214748364,D1	;see if there's room for new digit
  10062 FFFCCAD8 6400 FDB0                   	BCC	QHOW		;if not, we've overflowd
  10063 FFFCCADC 2001                        	MOVE.L	D1,D0	;	quickly multiply result by 10
  10064 FFFCCADE D281                        	ADD.L	D1,D1
  10065 FFFCCAE0 D281                        	ADD.L	D1,D1
  10066 FFFCCAE2 D280                        	ADD.L	D0,D1
  10067 FFFCCAE4 D281                        	ADD.L	D1,D1
  10068 FFFCCAE6 1018                        	MOVE.B	(A0)+,D0	;add in the new digit
  10069 FFFCCAE8 0280 0000 000F              	AND.L	#0xF,D0
  10070 FFFCCAEE D280                        	ADD.L	D0,D1
  10071 FFFCCAF0 5282                        	ADDQ	#1,D2		;increment the no. of digits
  10072 FFFCCAF2 60D2                        	BRA	TN1
  10073 FFFCCAF4                             TSNMRET:
  10074 FFFCCAF4 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Skip over blanks in the text pointed to by A0.
                                             ;*
  10079 FFFCCAF6                             IGNBLK:
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 111
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10080 FFFCCAF6 0C10 0020                   	CMP.B	#' ',(A0)   ;    see if it's a space
  10081 FFFCCAFA 6604                        	BNE	IGBRET		;if so, swallow it
  10082 FFFCCAFC                             IGB1:
  10083 FFFCCAFC 5288                        	ADDQ.L	#1,A0	;	increment the text pointer
  10084 FFFCCAFE 60F6                        	BRA	IGNBLK
  10085 FFFCCB00                             IGBRET:
  10086 FFFCCB00 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Convert the line of text in the input buffer to upper
                                             ;*	case (except for stuff between quotes).
                                             ;*
  10092 FFFCCB02                             TOUPBUF:
  10093 FFFCCB02 41F8 0630                   	LEA	BUFFER,A0	;set up text pointer
  10094 FFFCCB06 4201                        	CLR.B	D1		;clear quote flag
  10095 FFFCCB08                             TOUPB1:
  10096 FFFCCB08 1018                        	MOVE.B	(A0)+,D0	;get the next text char.
  10097 FFFCCB0A B03C 000D                   	CMP.B	#CR,D0		;is it end of line?
  10098 FFFCCB0E 671A                        	BEQ	TOUPBRT 	;if so, return
  10099 FFFCCB10 B03C 0022                   	CMP.B	#'"',D0  ;       a double quote?
  10100 FFFCCB14 6716                        	BEQ	DOQUO
  10101 FFFCCB16 B03C 0027                   	CMP.B	#'''',D0  ;      or a single quote?
  10102 FFFCCB1A 6710                        	BEQ	DOQUO
  10103 FFFCCB1C 4A01                        	TST.B	D1		;inside quotes?
  10104 FFFCCB1E 66E8                        	BNE	TOUPB1		;if so, do the next one
  10105 FFFCCB20 6100 001A                   	BSR	TOUPPER 	;convert to upper case
  10106 FFFCCB24 1100                        	MOVE.B	D0,-(A0);	store it
  10107 FFFCCB26 5288                        	ADDQ.L	#1,A0
  10108 FFFCCB28 60DE                        	BRA	TOUPB1		;and go back for more
  10109 FFFCCB2A                             TOUPBRT:
  10110 FFFCCB2A 4E75                        	RTS
                                             
  10112 FFFCCB2C                             DOQUO:
  10113 FFFCCB2C 4A01                        	TST.B	D1	;	are we inside quotes?
  10114 FFFCCB2E 6604                        	BNE	DOQUO1
  10115 FFFCCB30 1200                        	MOVE.B	D0,D1	;	if not, toggle inside-quotes flag
  10116 FFFCCB32 60D4                        	BRA	TOUPB1
  10117 FFFCCB34                             DOQUO1:
  10118 FFFCCB34 B200                        	CMP.B	D0,D1	;	make sure we're ending proper quote
  10119 FFFCCB36 66D0                        	BNE	TOUPB1		;if not, ignore it
  10120 FFFCCB38 4201                        	CLR.B	D1		;else clear quote flag
  10121 FFFCCB3A 60CC                        	BRA	TOUPB1
                                             
                                             ;*
                                             ;* ===== Convert the character in D0 to upper case
                                             ;*
  10126 FFFCCB3C                             TOUPPER:
  10127 FFFCCB3C B03C 0061                   	CMP.B	#'a',D0   ;      is it < 'a'?
  10128 FFFCCB40 650A                        	BCS	TOUPRET
  10129 FFFCCB42 B03C 007A                   	CMP.B	#'z',D0        ; or > 'z'?
  10130 FFFCCB46 6204                        	BHI	TOUPRET
  10131 FFFCCB48 0400 0020                   	SUB.B	#32,D0		;if not, make it upper case
  10132 FFFCCB4C                             TOUPRET:
  10133 FFFCCB4C 4E75                        	RTS
                                             
                                             ;*
                                             ;* 'CHKIO' checks the input. If there's no input, it will return
                                             ;* to the caller with the Z flag set. If there is input, the Z
                                             ;* flag is cleared and the input byte is in D0. However, if a
                                             ;* control-C is read, 'CHKIO' will warm-start BASIC and will not
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 112
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             ;* return to the caller.
                                             ;*
  10142 FFFCCB4E                             CHKIO:
  10143 FFFCCB4E 6100 F4BC                   	BSR.L	GOIN	;	get input if possible
  10144 FFFCCB52 670A                        	BEQ	CHKRET		;if Zero, no input
  10145 FFFCCB54 B03C 0003                   	CMP.B	#CTRLC,D0	;is it control-C?
  10146 FFFCCB58 6604                        	BNE	CHKRET		;if not
  10147 FFFCCB5A 6000 F504                   	BRA.L	WSTART		;if so, do a warm start
  10148 FFFCCB5E                             CHKRET:
  10149 FFFCCB5E 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Display a CR-LF sequence
                                             ;*
  10154 FFFCCB60                             CRLF:
  10155 FFFCCB60 4DF9 FFFC CC08              	LEA	CLMSG,A6
                                             
                                             ;*
                                             ;* ===== Display a zero-ended string pointed to by register A6
                                             ;*
  10160 FFFCCB66                             PRMESG:
  10161 FFFCCB66 101E                        	MOVE.B	(A6)+,D0	;get the char.
  10162 FFFCCB68 6706                        	BEQ	PRMRET		;if it's zero, we're done
  10163 FFFCCB6A 6100 F49C                   	BSR	GOOUT		;else display it
  10164 FFFCCB6E 60F6                        	BRA	PRMESG
  10165 FFFCCB70                             PRMRET:
  10166 FFFCCB70 4E75                        	RTS
                                             
                                             ;******************************************************
                                             ;* The following routines are the only ones that need *
                                             ;* to be changed for a different I/O environment.     *
                                             ;******************************************************
                                             
                                             UART		EQU		0xFFDC0A00
                                             UART_LS		EQU		UART+1
                                             UART_CTRL	EQU		UART+7
                                             KEYBD		EQU		0xFFDC0000
                                             
                                             
                                             ;*
                                             ;* ===== Output character to the console (Port 1) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10183 FFFCCB72                             OUTC:
  10184 FFFCCB72 48E7 C000                   	MOVEM.L	D0/D1,-(SP)
  10185 FFFCCB76 2200                        	MOVE.L	D0,D1
  10186 FFFCCB78 7006                        	MOVEQ	#6,D0
  10187 FFFCCB7A 4E4F                        	TRAP	#15
  10188 FFFCCB7C 4CDF 0003                   	MOVEM.L	(SP)+,D0/D1
  10189 FFFCCB80 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the console into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10195 FFFCCB82                             INC:
  10196 FFFCCB82 2F01                        	move.l	d1,-(a7)
  10197 FFFCCB84 7007                        	moveq	#7,d0		; check for key
  10198 FFFCCB86 4E4F                        	trap	#15
  10199 FFFCCB88 4A00                        	tst.b	d0
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 113
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
  10200 FFFCCB8A 670A                        	beq.s	.0001
  10201 FFFCCB8C 7005                        	moveq	#5,d0
  10202 FFFCCB8E 4E4F                        	trap	#15
  10203 FFFCCB90 2001                        	move.l	d1,d0
  10204 FFFCCB92 221F                        	move.l	(a7)+,d1
  10205 FFFCCB94 4A00                        	tst.b	d0
  10206 FFFCCB96                             .0001:
  10207 FFFCCB96 4E75                        	rts
                                             
                                             ;*
                                             ;* ===== Output character to the host (Port 2) from register D0
                                             ;*	(Preserves all registers.)
                                             ;*
  10213 FFFCCB98                             AUXOUT:
  10214 FFFCCB98 0839 0005 FFDC 0A01         	BTST	#5,UART_LS	;is port ready for a character?
  10215 FFFCCBA0 67F6                        	BEQ		AUXOUT		;if not, wait for it
  10216 FFFCCBA2 13C0 FFDC 0A00              	MOVE.B	D0,UART		;out it goes.
  10217 FFFCCBA8 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Input a character from the host into register D0 (or
                                             ;*	return Zero status if there's no character available).
                                             ;*
  10223 FFFCCBAA                             AUXIN:
  10224 FFFCCBAA 0839 0000 FFDC 0A01         	BTST	#0,UART_LS	;is character ready?
  10225 FFFCCBB2 670A                        	BEQ		AXIRET		;if not, return Zero status
  10226 FFFCCBB4 1039 FFDC 0A00              	MOVE.B	UART,D0		;else get the character
  10227 FFFCCBBA 0200 007F                   	AND.B	#0x7F,D0 	;zero out the high bit
  10228 FFFCCBBE                             AXIRET:
  10229 FFFCCBBE 4E75                        	RTS
                                             
                                             ;*
                                             ;* ===== Return to the resident monitor, operating system, etc.
                                             ;*
  10234 FFFCCBC0                             BYEBYE:
  10235 FFFCCBC0 1E3C 00E4                   	MOVE.B	#228,D7 	;return to Tutor
  10236 FFFCCBC4 4E4E                        	TRAP	#14
                                             
  10238 FFFCCBC6                             INITMSG:
  10239 FFFCCBC6 0D 0A 47 6F 72 64 6F 27     	DC.B	CR,LF,"Gordo's MC68000 Tiny BASIC, v1.2",CR,LF,LF,0
  10240 FFFCCBCE 73 20 4D 43 36 38 30 30     
  10241 FFFCCBD6 30 20 54 69 6E 79 20 42     
  10242 FFFCCBDE 41 53 49 43 2C 20 76 31     
  10243 FFFCCBE6 2E 32 0D 0A 0A 00           
  10244 FFFCCBEC                             OKMSG:
  10245 FFFCCBEC 0D 0A 4F 4B 0D 0A 00        	DC.B	CR,LF,'OK',CR,LF,0
  10246 FFFCCBF3                             HOWMSG:
  10247 FFFCCBF3 48 6F 77 3F 0D 0A 00        	DC.B	'How?',CR,LF,0
  10248 FFFCCBFA                             WHTMSG:
  10249 FFFCCBFA 57 68 61 74 3F 0D 0A 00     	DC.B	'What?',CR,LF,0
                                             
  10251 FFFCCC02                             SRYMSG:
  10252 FFFCCC02 53 6F 72 72 79 2E           	DC.B	'Sorry.'
  10253 FFFCCC08                             CLMSG:
  10254 FFFCCC08 0D 0A 00                    	DC.B	CR,LF,0
  10255 FFFCCC0B 00                          	DC.B	0	;<- for aligning on a word boundary
                                             
                                             LSTROM	EQU		$
                                             	;	end of possible ROM area
                                             
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 114
C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
Finitron asm68 assembler    version 5.8   Fri Dec 15 03:42:00 2017     Page 114
bootrom.asm


                                             .include C:\cores5\N4V68kSys\software\bootrom\MyTinyB.asm
                                             
                                             	;
                                             
                                             
